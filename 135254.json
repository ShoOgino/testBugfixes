{"path":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5da0b42730b6b99b31389ef94cb97384e83b9ede","date":1337107665,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    FieldCache.DEFAULT.purgeAllCaches();   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    purgeFieldCache(FieldCache.DEFAULT);   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"27e851527ef490dd0b790e19b7c62602b5778eb1","date":1337344101,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    FieldCache.DEFAULT.purgeAllCaches();   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    FieldCache.DEFAULT.purgeAllCaches();   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","bugFix":["c800a92bdddc053fba2b1b33e434f7536a2daae1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    FieldCache.DEFAULT.purgeAllCaches();   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    FieldCache.DEFAULT.purgeAllCaches();   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.format\",\"simple\")\n    , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        +\"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79c2f883e7a3be9dc62d29014544d769df774aae","date":1355428241,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    FieldCache.DEFAULT.purgeAllCaches();   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query that matches nothing\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"{!func}\"+f2, \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}\"\n             ,\"/grouped/id:1000=={'matches':10,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    FieldCache.DEFAULT.purgeAllCaches();   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c65b45bfb779756505b3bc20f7c21de51a4483ca","date":1355431132,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    FieldCache.DEFAULT.purgeAllCaches();   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query that matches nothing\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"{!func}\"+f2, \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}\"\n             ,\"/grouped/id:1000=={'matches':10,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n\n    //////////////////////// grouping where main query matches nothing\n    assertJQ(req(\"fq\", filt, \"q\", \"bogus_s:nothing\", \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"bogus_s:nothing\", \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':0,'groups':[]}\"\n    );\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"bogus_s:nothing\", \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n             ,\"/grouped/id:1000=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n\n\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    FieldCache.DEFAULT.purgeAllCaches();   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query that matches nothing\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"{!func}\"+f2, \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}\"\n             ,\"/grouped/id:1000=={'matches':10,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":["286e1dbf267cac3961c3fc116b9069797ad7d1c2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    FieldCache.DEFAULT.purgeAllCaches();   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query that matches nothing\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"{!func}\"+f2, \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}\"\n             ,\"/grouped/id:1000=={'matches':10,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n\n    //////////////////////// grouping where main query matches nothing\n    assertJQ(req(\"fq\", filt, \"q\", \"bogus_s:nothing\", \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"bogus_s:nothing\", \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':0,'groups':[]}\"\n    );\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"bogus_s:nothing\", \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n             ,\"/grouped/id:1000=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n\n\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    FieldCache.DEFAULT.purgeAllCaches();   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e28b14e7783d24ca69089f13ddadadbd2afdcb29","date":1399840701,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    // nocommit: split test if needed\n    // FieldCache.DEFAULT.purgeAllCaches();   // hide FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query that matches nothing\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"{!func}\"+f2, \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}\"\n             ,\"/grouped/id:1000=={'matches':10,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n\n    //////////////////////// grouping where main query matches nothing\n    assertJQ(req(\"fq\", filt, \"q\", \"bogus_s:nothing\", \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"bogus_s:nothing\", \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':0,'groups':[]}\"\n    );\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"bogus_s:nothing\", \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n             ,\"/grouped/id:1000=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n\n\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    FieldCache.DEFAULT.purgeAllCaches();   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query that matches nothing\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"{!func}\"+f2, \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}\"\n             ,\"/grouped/id:1000=={'matches':10,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n\n    //////////////////////// grouping where main query matches nothing\n    assertJQ(req(\"fq\", filt, \"q\", \"bogus_s:nothing\", \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"bogus_s:nothing\", \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':0,'groups':[]}\"\n    );\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"bogus_s:nothing\", \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n             ,\"/grouped/id:1000=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n\n\n  }\n\n","bugFix":null,"bugIntro":["9274621789ce990dbfef455dabdf026bb3184821"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9274621789ce990dbfef455dabdf026bb3184821","date":1400046684,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query that matches nothing\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"{!func}\"+f2, \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}\"\n             ,\"/grouped/id:1000=={'matches':10,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n\n    //////////////////////// grouping where main query matches nothing\n    assertJQ(req(\"fq\", filt, \"q\", \"bogus_s:nothing\", \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"bogus_s:nothing\", \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':0,'groups':[]}\"\n    );\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"bogus_s:nothing\", \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n             ,\"/grouped/id:1000=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n\n\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    // nocommit: split test if needed\n    // FieldCache.DEFAULT.purgeAllCaches();   // hide FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query that matches nothing\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"{!func}\"+f2, \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}\"\n             ,\"/grouped/id:1000=={'matches':10,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n\n    //////////////////////// grouping where main query matches nothing\n    assertJQ(req(\"fq\", filt, \"q\", \"bogus_s:nothing\", \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"bogus_s:nothing\", \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':0,'groups':[]}\"\n    );\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"bogus_s:nothing\", \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n             ,\"/grouped/id:1000=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n\n\n  }\n\n","bugFix":["e28b14e7783d24ca69089f13ddadadbd2afdcb29"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query that matches nothing\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"{!func}\"+f2, \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}\"\n             ,\"/grouped/id:1000=={'matches':10,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n\n    //////////////////////// grouping where main query matches nothing\n    assertJQ(req(\"fq\", filt, \"q\", \"bogus_s:nothing\", \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"bogus_s:nothing\", \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':0,'groups':[]}\"\n    );\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"bogus_s:nothing\", \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n             ,\"/grouped/id:1000=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n\n\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    FieldCache.DEFAULT.purgeAllCaches();   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query that matches nothing\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"{!func}\"+f2, \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}\"\n             ,\"/grouped/id:1000=={'matches':10,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n\n    //////////////////////// grouping where main query matches nothing\n    assertJQ(req(\"fq\", filt, \"q\", \"bogus_s:nothing\", \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"bogus_s:nothing\", \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':0,'groups':[]}\"\n    );\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"bogus_s:nothing\", \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n             ,\"/grouped/id:1000=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query that matches nothing\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"{!func}\"+f2, \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}\"\n             ,\"/grouped/id:1000=={'matches':10,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n\n    //////////////////////// grouping where main query matches nothing\n    assertJQ(req(\"fq\", filt, \"q\", \"bogus_s:nothing\", \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"bogus_s:nothing\", \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':0,'groups':[]}\"\n    );\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"bogus_s:nothing\", \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n             ,\"/grouped/id:1000=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n\n\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n    FieldCache.DEFAULT.purgeAllCaches();   // avoid FC insanity\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query that matches nothing\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"{!func}\"+f2, \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}\"\n             ,\"/grouped/id:1000=={'matches':10,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n\n    //////////////////////// grouping where main query matches nothing\n    assertJQ(req(\"fq\", filt, \"q\", \"bogus_s:nothing\", \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"bogus_s:nothing\", \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':0,'groups':[]}\"\n    );\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"bogus_s:nothing\", \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n             ,\"/grouped/id:1000=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ce489ffe249d0942d3dd9d8f0b46d3a5385ca01","date":1489998096,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query that matches nothing\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"{!func}\"+f2, \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}\"\n             ,\"/grouped/id:1000=={'matches':10,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n\n    //////////////////////// grouping where main query matches nothing\n    assertJQ(req(\"fq\", filt, \"q\", \"bogus_s:nothing\", \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"bogus_s:nothing\", \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':0,'groups':[]}\"\n    );\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"bogus_s:nothing\", \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n             ,\"/grouped/id:1000=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n\n\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query that matches nothing\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"{!func}\"+f2, \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}\"\n             ,\"/grouped/id:1000=={'matches':10,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n\n    //////////////////////// grouping where main query matches nothing\n    assertJQ(req(\"fq\", filt, \"q\", \"bogus_s:nothing\", \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"bogus_s:nothing\", \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':0,'groups':[]}\"\n    );\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"bogus_s:nothing\", \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n             ,\"/grouped/id:1000=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"06f29c9961912220543423aa6fc6f64362874871","date":1490280012,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query that matches nothing\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"{!func}\"+f2, \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}\"\n             ,\"/grouped/id:1000=={'matches':10,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n\n    //////////////////////// grouping where main query matches nothing\n    assertJQ(req(\"fq\", filt, \"q\", \"bogus_s:nothing\", \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"bogus_s:nothing\", \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':0,'groups':[]}\"\n    );\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"bogus_s:nothing\", \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n             ,\"/grouped/id:1000=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n\n\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n\n    // test that grouping works with highlighting\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"hl\",\"true\", \"hl.fl\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/highlighting=={'_ORDERED_':'', '8':{},'3':{},'4':{},'1':{},'2':{}}\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query that matches nothing\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"{!func}\"+f2, \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}\"\n             ,\"/grouped/id:1000=={'matches':10,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n\n    //////////////////////// grouping where main query matches nothing\n    assertJQ(req(\"fq\", filt, \"q\", \"bogus_s:nothing\", \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"bogus_s:nothing\", \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':0,'groups':[]}\"\n    );\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"bogus_s:nothing\", \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n             ,\"/grouped/id:1000=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"286e1dbf267cac3961c3fc116b9069797ad7d1c2","date":1556472718,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query that matches nothing\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"{!func}\"+f2, \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}\"\n             ,\"/grouped/id:1000=={'matches':10,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n\n    //////////////////////// grouping where main query matches nothing\n    assertJQ(req(\"fq\", filt, \"q\", \"bogus_s:nothing\", \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"bogus_s:nothing\", \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':0,'groups':[]}\"\n    );\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"bogus_s:nothing\", \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n             ,\"/grouped/id:1000=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query that matches nothing\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"{!func}\"+f2, \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}\"\n             ,\"/grouped/id:1000=={'matches':10,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n\n    //////////////////////// grouping where main query matches nothing\n    assertJQ(req(\"fq\", filt, \"q\", \"bogus_s:nothing\", \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"bogus_s:nothing\", \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':0,'groups':[]}\"\n    );\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"bogus_s:nothing\", \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n             ,\"/grouped/id:1000=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n\n\n  }\n\n","bugFix":["c65b45bfb779756505b3bc20f7c21de51a4483ca"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2761c3f53e738e28c17c75124aa305e4e63c989d","date":1572337563,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query that matches nothing\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"{!func}\"+f2, \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}\"\n             ,\"/grouped/id:1000=={'matches':10,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n    // group.query and sort\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",f+\":1\", \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"sort\",f+\" desc, score desc\", \"indent\",\"off\")\n        ,\"/grouped/\"+f+\":1==\" +\n            \"{'matches':10,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\"\n    );\n    // group.query with fl=score and default sort\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",f+\":1\", \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"sort\", \"score desc\", \"indent\",\"off\")\n        ,\"/grouped/\"+f+\":1==\" +\n            \"{'matches':10,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",f+\":1\", \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n        ,\"/grouped/\"+f+\":1==\" +\n            \"{'matches':10,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}},\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n\n    //////////////////////// grouping where main query matches nothing\n    assertJQ(req(\"fq\", filt, \"q\", \"bogus_s:nothing\", \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"bogus_s:nothing\", \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':0,'groups':[]}\"\n    );\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"bogus_s:nothing\", \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n             ,\"/grouped/id:1000=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query that matches nothing\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"{!func}\"+f2, \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}\"\n             ,\"/grouped/id:1000=={'matches':10,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n\n    //////////////////////// grouping where main query matches nothing\n    assertJQ(req(\"fq\", filt, \"q\", \"bogus_s:nothing\", \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"bogus_s:nothing\", \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':0,'groups':[]}\"\n    );\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"bogus_s:nothing\", \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n             ,\"/grouped/id:1000=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"640ded7811e1b7d29236a5e2934ec3cd266a8199","date":1588973147,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","pathOld":"solr/core/src/test/org/apache/solr/TestGroupingSearch#testGroupAPI().mjava","sourceNew":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,numFoundExact:true,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,numFoundExact:true,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,numFoundExact:true,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,numFoundExact:true,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,numFoundExact:true,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,numFoundExact:true,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,numFoundExact:true,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,numFoundExact:true,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,numFoundExact:true,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,numFoundExact:true,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,numFoundExact:true,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'numFoundExact':true,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'numFoundExact':true,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'numFoundExact':true,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'numFoundExact':true,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,numFoundExact:true,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,numFoundExact:true,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,numFoundExact:true,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,numFoundExact:true,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,numFoundExact:true,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query that matches nothing\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"{!func}\"+f2, \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,numFoundExact:true,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}\"\n             ,\"/grouped/id:1000=={'matches':10,'doclist':{'numFound':0,'start':0,numFoundExact:true,'docs':[]}}\"\n    );\n\n    // group.query and sort\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",f+\":1\", \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"sort\",f+\" desc, score desc\", \"indent\",\"off\")\n        ,\"/grouped/\"+f+\":1==\" +\n            \"{'matches':10,'doclist':{'numFound':3,'start':0,numFoundExact:true,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\"\n    );\n    // group.query with fl=score and default sort\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",f+\":1\", \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"sort\", \"score desc\", \"indent\",\"off\")\n        ,\"/grouped/\"+f+\":1==\" +\n            \"{'matches':10,'doclist':{'numFound':3,'start':0,numFoundExact:true,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",f+\":1\", \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n        ,\"/grouped/\"+f+\":1==\" +\n            \"{'matches':10,'doclist':{'numFound':3,'start':0,numFoundExact:true,'docs':[{'id':'8'},{'id':'10'}]}},\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'numFoundExact':true,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'numFoundExact':true,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,numFoundExact:true,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'numFoundExact':true,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'numFoundExact':true,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,numFoundExact:true,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,numFoundExact:true,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,numFoundExact:true,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,numFoundExact:true,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,numFoundExact:true,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'numFoundExact':true,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'numFoundExact':true,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,numFoundExact:true,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'numFoundExact':true,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'numFoundExact':true,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n\n    //////////////////////// grouping where main query matches nothing\n    assertJQ(req(\"fq\", filt, \"q\", \"bogus_s:nothing\", \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':0,'doclist':{'numFound':0,'start':0,numFoundExact:true,'docs':[]}}\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"bogus_s:nothing\", \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,numFoundExact:true,'docs':[]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,numFoundExact:true,'docs':[]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':0,'groups':[]}\"\n    );\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"bogus_s:nothing\", \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,numFoundExact:true,'docs':[]}}\"\n             ,\"/grouped/id:1000=={'matches':0,'doclist':{'numFound':0,'start':0,numFoundExact:true,'docs':[]}}\"\n    );\n\n  }\n\n","sourceOld":"  @Test\n  public void testGroupAPI() throws Exception {\n    createIndex();\n    String filt = f + \":[* TO *]\";\n\n    assertQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f)\n        ,\"/response/lst[@name='grouped']/lst[@name='\"+f+\"']/arr[@name='groups']\"\n    );\n\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\")\n      ,\"/responseHeader/status==0\"                         // exact match\n      ,\"/responseHeader=={'_SKIP_':'QTime', 'status':0}\"   // partial match by skipping some elements\n      ,\"/responseHeader=={'_MATCH_':'status', 'status':0}\" // partial match by only including some elements\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\\n\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}},\" +\n              \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}},\" +\n              \"{'groupValue':5,'doclist':{'numFound':1,'start':0,'docs':[{'id':'1'}]}},\" +\n              \"{'groupValue':4,'doclist':{'numFound':1,'start':0,'docs':[{'id':'2'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that filtering cuts down the result set\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"fq\",f+\":2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':3,'groups':[\" +\n            \"{'groupValue':2,'doclist':{'numFound':3,'start':0,'docs':[{'id':'4'}]}}\" +\n            \"]}}\"\n    );\n\n    // test limiting the number of groups returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test offset into group list\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test big offset into group list\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"1\", \"start\",\"100\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"]}}\"\n    );\n\n    // test increasing the docs per group returned\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'},{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test offset into each group\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"1\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':1,'docs':[{'id':'10'},{'id':'5'}]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':1,'docs':[{'id':'6'}]}}\" +\n          \"]}}\"\n    );\n\n    // test big offset into each group\n     assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n      ,\"/grouped=={'\"+f+\"':{'matches':10,'groups':[\" +\n            \"{'groupValue':1,'doclist':{'numFound':3,'start':10,'docs':[]}},\" +\n            \"{'groupValue':3,'doclist':{'numFound':2,'start':10,'docs':[]}}\" +\n          \"]}}\"\n    );\n\n    // test adding in scores\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n      ,\"/grouped/\"+f+\"/groups==\" +\n            \"[\" +\n              \"{'groupValue':1,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\" +\n              \"{'groupValue':3,'doclist':{'numFound':2,'start':0,'maxScore':7.0,'docs':[{'id':'3','score':7.0},{'id':'6','score':2.0}]}}\" +\n            \"]\"\n\n    );\n\n    // test function (functions are currently all float - this may change)\n    String func = \"add(\"+f+\",\"+f+\")\";\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.func\", func  , \"fl\",\"id\", \"rows\",\"2\")\n      ,\"/grouped=={'\"+func+\"':{'matches':10,'groups':[\" +\n              \"{'groupValue':2.0,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'}]}},\" +\n              \"{'groupValue':6.0,'doclist':{'numFound':2,'start':0,'docs':[{'id':'3'}]}}\" +\n            \"]}}\"\n    );\n\n    // test that faceting works with grouping\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"facet\",\"true\", \"facet.field\",f)\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/facet_counts/facet_fields/\"+f+\"==['1',3, '2',3, '3',2, '4',1, '5',1]\"\n    );\n\n    // test that grouping works with debugging\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\"\n                 ,\"debugQuery\",\"true\")\n      ,\"/grouped/\"+f+\"/matches==10\"\n      ,\"/debug/explain/8==\"\n      ,\"/debug/explain/2==\"\n    );\n\n     ///////////////////////// group.query\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}}\"\n    );\n\n    // group.query that matches nothing\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"{!func}\"+f2, \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}}\"\n             ,\"/grouped/id:1000=={'matches':10,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n    // group.query and sort\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",f+\":1\", \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"sort\",f+\" desc, score desc\", \"indent\",\"off\")\n        ,\"/grouped/\"+f+\":1==\" +\n            \"{'matches':10,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\"\n    );\n    // group.query with fl=score and default sort\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",f+\":1\", \"fl\",\"id,score\", \"rows\",\"2\", \"group.limit\",\"2\", \"sort\", \"score desc\", \"indent\",\"off\")\n        ,\"/grouped/\"+f+\":1==\" +\n            \"{'matches':10,'doclist':{'numFound':3,'start':0,'maxScore':10.0,'docs':[{'id':'8','score':10.0},{'id':'10','score':3.0}]}},\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",f+\":1\", \"fl\",\"id\", \"rows\",\"2\", \"group.limit\",\"2\", \"indent\",\"off\")\n        ,\"/grouped/\"+f+\":1==\" +\n            \"{'matches':10,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}},\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"2\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}}}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"group.limit\",\"3\", \"group.offset\",\"10\")\n       ,\"/grouped=={'id:[2 TO 5]':{'matches':10,\" +\n           \"'doclist':{'numFound':4,'start':10,'docs':[]}}}\"\n    );\n\n    ///////////////////////// group.query as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'},{'id':'2'}]}\"\n    );\n\n    // group.query and offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"2\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':2,'docs':[{'id':'2'},{'id':'5'}]}\"\n    );\n\n    // group.query and big offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.query\",\"id:[2 TO 5]\", \"fl\",\"id\", \"rows\",\"3\", \"start\",\"10\", \"group.main\",\"true\")\n       ,\"/response=={'numFound':4,'start':10,'docs':[]}\"\n    );\n\n\n    // multiple at once\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':10,'doclist':{'numFound':4,'start':0,'docs':[{'id':'3'},{'id':'4'}]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':10,'doclist':{'numFound':1,'start':0,'docs':[{'id':'5'}]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':10,'groups':[{'groupValue':1,'doclist':{'numFound':3,'start':0,'docs':[{'id':'8'},{'id':'10'}]}}]}\"\n    );\n\n\n    ///////////////////////// group.field as main result\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'},{'id':'1'},{'id':'2'}]}\"\n    );\n    // test that rows limits #docs\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'3'},{'id':'4'}]}\"\n    );\n    // small  offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"1\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'3'},{'id':'4'}]}\"\n    );\n    // large offset\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"2\", \"start\",\"20\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':20,'docs':[]}\"\n    );\n    // group.limit>1\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':0,'docs':[{'id':'8'},{'id':'10'},{'id':'3'}]}\"\n    );\n    // group.limit>1 with start>0\n    assertJQ(req(\"fq\",filt,  \"q\",\"{!func}\"+f2, \"group\",\"true\", \"group.field\",f, \"fl\",\"id\", \"rows\",\"3\", \"start\",\"1\", \"group.limit\",\"2\", \"group.main\",\"true\")\n        ,\"/response=={'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}\"\n    );\n\n    ///////////////////////// group.format == simple\n    assertJQ(req(\"fq\", filt, \"q\", \"{!func}\" + f2, \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"rows\", \"3\", \"start\", \"1\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':10,'doclist':\"\n        + \"{'numFound':10,'start':1,'docs':[{'id':'10'},{'id':'3'},{'id':'6'}]}}\"\n    );\n\n    //////////////////////// grouping where main query matches nothing\n    assertJQ(req(\"fq\", filt, \"q\", \"bogus_s:nothing\", \"group\", \"true\", \"group.field\", f, \"fl\", \"id\", \"group.limit\", \"2\", \"group.format\", \"simple\")\n        , \"/grouped/foo_i=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n    assertJQ(req(\"fq\",filt,  \"q\",\"bogus_s:nothing\", \"group\",\"true\",\n        \"group.query\",\"id:[2 TO 5]\",\n        \"group.query\",\"id:[5 TO 5]\",\n        \"group.field\",f,\n        \"rows\",\"1\",\n        \"fl\",\"id\", \"group.limit\",\"2\")\n       ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n       ,\"/grouped/id:[5 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"        \n       ,\"/grouped/\"+f+\"=={'matches':0,'groups':[]}\"\n    );\n    assertJQ(req(\"fq\",filt,  \n                 \"q\",\"bogus_s:nothing\", \n                 \"group\",\"true\", \n                 \"group.query\",\"id:[2 TO 5]\", \n                 \"group.query\",\"id:1000\", \n                 \"fl\",\"id\", \n                 \"group.limit\",\"3\")\n             ,\"/grouped/id:[2 TO 5]=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n             ,\"/grouped/id:1000=={'matches':0,'doclist':{'numFound':0,'start':0,'docs':[]}}\"\n    );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"27e851527ef490dd0b790e19b7c62602b5778eb1":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["27e851527ef490dd0b790e19b7c62602b5778eb1","c65b45bfb779756505b3bc20f7c21de51a4483ca"],"640ded7811e1b7d29236a5e2934ec3cd266a8199":["2761c3f53e738e28c17c75124aa305e4e63c989d"],"9274621789ce990dbfef455dabdf026bb3184821":["e28b14e7783d24ca69089f13ddadadbd2afdcb29"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"79c2f883e7a3be9dc62d29014544d769df774aae":["27e851527ef490dd0b790e19b7c62602b5778eb1"],"56572ec06f1407c066d6b7399413178b33176cd8":["c65b45bfb779756505b3bc20f7c21de51a4483ca","93dd449115a9247533e44bab47e8429e5dccbc6d"],"286e1dbf267cac3961c3fc116b9069797ad7d1c2":["6ce489ffe249d0942d3dd9d8f0b46d3a5385ca01"],"6ce489ffe249d0942d3dd9d8f0b46d3a5385ca01":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"c65b45bfb779756505b3bc20f7c21de51a4483ca":["79c2f883e7a3be9dc62d29014544d769df774aae"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["c65b45bfb779756505b3bc20f7c21de51a4483ca","9274621789ce990dbfef455dabdf026bb3184821"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"06f29c9961912220543423aa6fc6f64362874871":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"e28b14e7783d24ca69089f13ddadadbd2afdcb29":["c65b45bfb779756505b3bc20f7c21de51a4483ca"],"2761c3f53e738e28c17c75124aa305e4e63c989d":["286e1dbf267cac3961c3fc116b9069797ad7d1c2"],"ef0d8a69209261514c5739c770bba706c2308450":["5da0b42730b6b99b31389ef94cb97384e83b9ede","27e851527ef490dd0b790e19b7c62602b5778eb1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["640ded7811e1b7d29236a5e2934ec3cd266a8199"]},"commit2Childs":{"27e851527ef490dd0b790e19b7c62602b5778eb1":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","79c2f883e7a3be9dc62d29014544d769df774aae","ef0d8a69209261514c5739c770bba706c2308450"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"640ded7811e1b7d29236a5e2934ec3cd266a8199":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9274621789ce990dbfef455dabdf026bb3184821":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"c26f00b574427b55127e869b935845554afde1fa":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"79c2f883e7a3be9dc62d29014544d769df774aae":["c65b45bfb779756505b3bc20f7c21de51a4483ca"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"286e1dbf267cac3961c3fc116b9069797ad7d1c2":["2761c3f53e738e28c17c75124aa305e4e63c989d"],"6ce489ffe249d0942d3dd9d8f0b46d3a5385ca01":["286e1dbf267cac3961c3fc116b9069797ad7d1c2"],"c65b45bfb779756505b3bc20f7c21de51a4483ca":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","56572ec06f1407c066d6b7399413178b33176cd8","93dd449115a9247533e44bab47e8429e5dccbc6d","e28b14e7783d24ca69089f13ddadadbd2afdcb29"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["27e851527ef490dd0b790e19b7c62602b5778eb1","ef0d8a69209261514c5739c770bba706c2308450"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","6ce489ffe249d0942d3dd9d8f0b46d3a5385ca01","06f29c9961912220543423aa6fc6f64362874871"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"06f29c9961912220543423aa6fc6f64362874871":[],"e28b14e7783d24ca69089f13ddadadbd2afdcb29":["9274621789ce990dbfef455dabdf026bb3184821"],"2761c3f53e738e28c17c75124aa305e4e63c989d":["640ded7811e1b7d29236a5e2934ec3cd266a8199"],"ef0d8a69209261514c5739c770bba706c2308450":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","56572ec06f1407c066d6b7399413178b33176cd8","a258fbb26824fd104ed795e5d9033d2d040049ee","06f29c9961912220543423aa6fc6f64362874871","ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}