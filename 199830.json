{"path":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int,IOContext).mjava","commits":[{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int).mjava","sourceNew":"    protected FloatsReader(Directory dir, String id, int maxDoc, IOContext context)\n        throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION), context);\n      CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n      precisionBytes = datIn.readByte();\n      assert precisionBytes == 4 || precisionBytes == 8;\n      this.maxDoc = maxDoc;\n    }\n\n","sourceOld":"    protected FloatsReader(Directory dir, String id, int maxDoc)\n        throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n      precisionBytes = datIn.readByte();\n      assert precisionBytes == 4 || precisionBytes == 8;\n      this.maxDoc = maxDoc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int).mjava","sourceNew":"    protected FloatsReader(Directory dir, String id, int maxDoc, IOContext context)\n        throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION), context);\n      CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n      precisionBytes = datIn.readByte();\n      assert precisionBytes == 4 || precisionBytes == 8;\n      this.maxDoc = maxDoc;\n    }\n\n","sourceOld":"    protected FloatsReader(Directory dir, String id, int maxDoc)\n        throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n      precisionBytes = datIn.readByte();\n      assert precisionBytes == 4 || precisionBytes == 8;\n      this.maxDoc = maxDoc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int).mjava","sourceNew":"    protected FloatsReader(Directory dir, String id, int maxDoc, IOContext context)\n        throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION), context);\n      CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n      precisionBytes = datIn.readByte();\n      assert precisionBytes == 4 || precisionBytes == 8;\n      this.maxDoc = maxDoc;\n    }\n\n","sourceOld":"    protected FloatsReader(Directory dir, String id, int maxDoc)\n        throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION));\n      CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n      precisionBytes = datIn.readByte();\n      assert precisionBytes == 4 || precisionBytes == 8;\n      this.maxDoc = maxDoc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85eb75e0c0203e44dcf686f35876cf6080f3a671","date":1317221550,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int,IOContext).mjava","sourceNew":"    FloatsReader(Directory dir, String id, int maxDoc, IOContext context)\n        throws IOException {\n      super(dir, id, maxDoc, context);\n      assert size == 4 || size == 8;\n      if (size == 4) {\n        arrayTemplate = new IndexDocValuesArray.FloatValues();\n      } else {\n        arrayTemplate = new IndexDocValuesArray.DoubleValues();\n      }\n    }\n\n","sourceOld":"    protected FloatsReader(Directory dir, String id, int maxDoc, IOContext context)\n        throws IOException {\n      datIn = dir.openInput(IndexFileNames.segmentFileName(id, \"\",\n          Writer.DATA_EXTENSION), context);\n      CodecUtil.checkHeader(datIn, CODEC_NAME, VERSION_START, VERSION_START);\n      precisionBytes = datIn.readByte();\n      assert precisionBytes == 4 || precisionBytes == 8;\n      this.maxDoc = maxDoc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e128967bca58657bc0039d4bfe631e63e81f1977","date":1317978310,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int,IOContext,ValueType).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Floats.FloatsReader#FloatsReader(Directory,String,int,IOContext).mjava","sourceNew":"    FloatsReader(Directory dir, String id, int maxDoc, IOContext context, ValueType type)\n        throws IOException {\n      super(dir, id, CODEC_NAME, VERSION_CURRENT, maxDoc, context, type);\n      arrayTemplate = IndexDocValuesArray.TEMPLATES.get(type);\n      assert size == 4 || size == 8;\n    }\n\n","sourceOld":"    FloatsReader(Directory dir, String id, int maxDoc, IOContext context)\n        throws IOException {\n      super(dir, id, maxDoc, context);\n      assert size == 4 || size == 8;\n      if (size == 4) {\n        arrayTemplate = new IndexDocValuesArray.FloatValues();\n      } else {\n        arrayTemplate = new IndexDocValuesArray.DoubleValues();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"85eb75e0c0203e44dcf686f35876cf6080f3a671":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"e128967bca58657bc0039d4bfe631e63e81f1977":["85eb75e0c0203e44dcf686f35876cf6080f3a671"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e128967bca58657bc0039d4bfe631e63e81f1977"]},"commit2Childs":{"85eb75e0c0203e44dcf686f35876cf6080f3a671":["e128967bca58657bc0039d4bfe631e63e81f1977"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd","5d004d0e0b3f65bb40da76d476d659d7888270e8","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["85eb75e0c0203e44dcf686f35876cf6080f3a671","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"e128967bca58657bc0039d4bfe631e63e81f1977":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}