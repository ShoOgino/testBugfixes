{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConcatenateGraphFilterFactory#testPreserveSep().mjava","commits":[{"id":"9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a","date":1528168051,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConcatenateGraphFilterFactory#testPreserveSep().mjava","pathOld":"/dev/null","sourceNew":"  public void testPreserveSep() throws Exception {\n    final String input = \"A1 B2 A1 D4 C3\";\n    final String output = \"A1A1D4C3\";\n    Reader reader = new StringReader(input);\n    MockTokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n    tokenizer.setReader(reader);\n    TokenStream stream = tokenizer;\n    stream = new StopFilter(stream, StopFilter.makeStopSet(\"B2\"));\n    stream = tokenFilterFactory(\"ConcatenateGraph\",\n        \"preserveSep\", \"false\"\n    ).create(stream);\n    assertTokenStreamContents(stream, new String[]{output});\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConcatenateGraphFilterFactory#testPreserveSep().mjava","pathOld":"/dev/null","sourceNew":"  public void testPreserveSep() throws Exception {\n    final String input = \"A1 B2 A1 D4 C3\";\n    final String output = \"A1A1D4C3\";\n    Reader reader = new StringReader(input);\n    MockTokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n    tokenizer.setReader(reader);\n    TokenStream stream = tokenizer;\n    stream = new StopFilter(stream, StopFilter.makeStopSet(\"B2\"));\n    stream = tokenFilterFactory(\"ConcatenateGraph\",\n        \"preserveSep\", \"false\"\n    ).create(stream);\n    assertTokenStreamContents(stream, new String[]{output});\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConcatenateGraphFilterFactory#testPreserveSep().mjava","pathOld":"/dev/null","sourceNew":"  public void testPreserveSep() throws Exception {\n    final String input = \"A1 B2 A1 D4 C3\";\n    final String output = \"A1A1D4C3\";\n    Reader reader = new StringReader(input);\n    MockTokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n    tokenizer.setReader(reader);\n    TokenStream stream = tokenizer;\n    stream = new StopFilter(stream, StopFilter.makeStopSet(\"B2\"));\n    stream = tokenFilterFactory(\"ConcatenateGraph\",\n        \"preserveSep\", \"false\"\n    ).create(stream);\n    assertTokenStreamContents(stream, new String[]{output});\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5533de9a942219a587ac7abed8c65796531dc16d","date":1573756010,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConcatenateGraphFilterFactory#testPreserveSep().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConcatenateGraphFilterFactory#testPreserveSep().mjava","sourceNew":"  public void testPreserveSep() throws Exception {\n    final String input = \"A1 B2 A1 D4 C3\";\n    final String output = \"A1A1D4C3\";\n    Reader reader = new StringReader(input);\n    MockTokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n    tokenizer.setReader(reader);\n    TokenStream stream = tokenizer;\n    stream = new StopFilter(stream, StopFilter.makeStopSet(\"B2\"));\n    stream = tokenFilterFactory(\"ConcatenateGraph\",\n        Version.LUCENE_8_0_0,\n        \"preserveSep\", \"false\"\n    ).create(stream);\n    assertTokenStreamContents(stream, new String[]{output});\n  }\n\n","sourceOld":"  public void testPreserveSep() throws Exception {\n    final String input = \"A1 B2 A1 D4 C3\";\n    final String output = \"A1A1D4C3\";\n    Reader reader = new StringReader(input);\n    MockTokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n    tokenizer.setReader(reader);\n    TokenStream stream = tokenizer;\n    stream = new StopFilter(stream, StopFilter.makeStopSet(\"B2\"));\n    stream = tokenFilterFactory(\"ConcatenateGraph\",\n        \"preserveSep\", \"false\"\n    ).create(stream);\n    assertTokenStreamContents(stream, new String[]{output});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2","date":1591961131,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConcatenateGraphFilterFactory#testPreserveSep().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConcatenateGraphFilterFactory#testPreserveSep().mjava","sourceNew":"  public void testPreserveSep() throws Exception {\n    final String input = \"A1 B2 A1 D4 C3\";\n    final String output = \"A1A1D4C3\";\n    Reader reader = new StringReader(input);\n    MockTokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n    tokenizer.setReader(reader);\n    TokenStream stream = tokenizer;\n    stream = new StopFilter(stream, StopFilter.makeStopSet(\"B2\"));\n    @SuppressWarnings(\"deprecation\") Version LUCENE_8_0_0 = Version.LUCENE_8_0_0;\n    stream = tokenFilterFactory(\"ConcatenateGraph\",\n        LUCENE_8_0_0,\n        \"preserveSep\", \"false\"\n    ).create(stream);\n    assertTokenStreamContents(stream, new String[]{output});\n  }\n\n","sourceOld":"  public void testPreserveSep() throws Exception {\n    final String input = \"A1 B2 A1 D4 C3\";\n    final String output = \"A1A1D4C3\";\n    Reader reader = new StringReader(input);\n    MockTokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n    tokenizer.setReader(reader);\n    TokenStream stream = tokenizer;\n    stream = new StopFilter(stream, StopFilter.makeStopSet(\"B2\"));\n    stream = tokenFilterFactory(\"ConcatenateGraph\",\n        Version.LUCENE_8_0_0,\n        \"preserveSep\", \"false\"\n    ).create(stream);\n    assertTokenStreamContents(stream, new String[]{output});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5533de9a942219a587ac7abed8c65796531dc16d":["9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["5533de9a942219a587ac7abed8c65796531dc16d"],"9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f592209545c71895260367152601e9200399776d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"]},"commit2Childs":{"5533de9a942219a587ac7abed8c65796531dc16d":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b70042a8a492f7054d480ccdd2be9796510d4327","9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a","f592209545c71895260367152601e9200399776d"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a":["5533de9a942219a587ac7abed8c65796531dc16d","b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d"],"f592209545c71895260367152601e9200399776d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}