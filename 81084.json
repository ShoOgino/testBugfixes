{"path":"solr/core/src/java/org/apache/solr/api/V2HttpCall#execute(SolrQueryResponse).mjava","commits":[{"id":"fcf710a8fcd590cf55c855d422c7a10fce3e6117","date":1485842253,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/api/V2HttpCall#execute(SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void execute(SolrQueryResponse rsp) {\n    try {\n      api.call(solrReq, rsp);\n    } catch (RuntimeException e) {\n      throw e;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/api/V2HttpCall#execute(SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void execute(SolrQueryResponse rsp) {\n    try {\n      api.call(solrReq, rsp);\n    } catch (RuntimeException e) {\n      throw e;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2479a9c66c0c9b8a0ab8e314f035cd9e8e75d556","date":1497937593,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/api/V2HttpCall#execute(SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/api/V2HttpCall#execute(SolrQueryResponse).mjava","sourceNew":"  @Override\n  protected void execute(SolrQueryResponse rsp) {\n    SolrCore.preDecorateResponse(solrReq, rsp);\n    if (api == null) {\n      rsp.setException(new SolrException(SolrException.ErrorCode.NOT_FOUND,\n          \"Cannot find correspond api for the path : \" + solrReq.getContext().get(CommonParams.PATH)));\n    } else {\n      try {\n        api.call(solrReq, rsp);\n      } catch (Exception e) {\n        rsp.setException(e);\n      }\n    }\n\n    SolrCore.postDecorateResponse(handler, solrReq, rsp);\n  }\n\n","sourceOld":"  @Override\n  protected void execute(SolrQueryResponse rsp) {\n    try {\n      api.call(solrReq, rsp);\n    } catch (RuntimeException e) {\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/api/V2HttpCall#execute(SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/api/V2HttpCall#execute(SolrQueryResponse).mjava","sourceNew":"  @Override\n  protected void execute(SolrQueryResponse rsp) {\n    SolrCore.preDecorateResponse(solrReq, rsp);\n    if (api == null) {\n      rsp.setException(new SolrException(SolrException.ErrorCode.NOT_FOUND,\n          \"Cannot find correspond api for the path : \" + solrReq.getContext().get(CommonParams.PATH)));\n    } else {\n      try {\n        api.call(solrReq, rsp);\n      } catch (Exception e) {\n        rsp.setException(e);\n      }\n    }\n\n    SolrCore.postDecorateResponse(handler, solrReq, rsp);\n  }\n\n","sourceOld":"  @Override\n  protected void execute(SolrQueryResponse rsp) {\n    try {\n      api.call(solrReq, rsp);\n    } catch (RuntimeException e) {\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/api/V2HttpCall#execute(SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/api/V2HttpCall#execute(SolrQueryResponse).mjava","sourceNew":"  @Override\n  protected void execute(SolrQueryResponse rsp) {\n    SolrCore.preDecorateResponse(solrReq, rsp);\n    if (api == null) {\n      rsp.setException(new SolrException(SolrException.ErrorCode.NOT_FOUND,\n          \"Cannot find correspond api for the path : \" + solrReq.getContext().get(CommonParams.PATH)));\n    } else {\n      try {\n        api.call(solrReq, rsp);\n      } catch (Exception e) {\n        rsp.setException(e);\n      }\n    }\n\n    SolrCore.postDecorateResponse(handler, solrReq, rsp);\n  }\n\n","sourceOld":"  @Override\n  protected void execute(SolrQueryResponse rsp) {\n    try {\n      api.call(solrReq, rsp);\n    } catch (RuntimeException e) {\n      throw e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fcf710a8fcd590cf55c855d422c7a10fce3e6117":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fcf710a8fcd590cf55c855d422c7a10fce3e6117"],"2479a9c66c0c9b8a0ab8e314f035cd9e8e75d556":["fcf710a8fcd590cf55c855d422c7a10fce3e6117"],"28288370235ed02234a64753cdbf0c6ec096304a":["fcf710a8fcd590cf55c855d422c7a10fce3e6117","2479a9c66c0c9b8a0ab8e314f035cd9e8e75d556"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["fcf710a8fcd590cf55c855d422c7a10fce3e6117","2479a9c66c0c9b8a0ab8e314f035cd9e8e75d556"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"fcf710a8fcd590cf55c855d422c7a10fce3e6117":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","2479a9c66c0c9b8a0ab8e314f035cd9e8e75d556","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fcf710a8fcd590cf55c855d422c7a10fce3e6117","7c3523a0ab04c3002eee3896c75ea5f10f388bcc"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"2479a9c66c0c9b8a0ab8e314f035cd9e8e75d556":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}