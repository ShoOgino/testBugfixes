{"path":"src/test/org/apache/solr/BaseDistributedSearchTestCase#testDistribSearch().mjava","commits":[{"id":"0b57d1523f42368168ea21982dd84effd69453d3","date":1260216800,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/test/org/apache/solr/BaseDistributedSearchTestCase#testDistribSearch().mjava","pathOld":"src/test/org/apache/solr/TestDistributedSearch#testDistribSearch().mjava","sourceNew":"  public void testDistribSearch() throws Exception {\n    for (int nServers = 1; nServers < 2; nServers++) {\n      createServers(nServers);\n      RandVal.uniqueValues = new HashSet(); //reset random values\n      doTest();\n      destroyServers();\n    }\n  }\n\n","sourceOld":"  public void testDistribSearch() throws Exception {\n    for (int nServers=1; nServers<4; nServers++) {\n      createServers(nServers);\n      doTest();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae2760dcd792b5f817bdda913028e4fe0190c56a","date":1261494104,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/BaseDistributedSearchTestCase#testDistribSearch().mjava","pathOld":"src/test/org/apache/solr/BaseDistributedSearchTestCase#testDistribSearch().mjava","sourceNew":"  public void testDistribSearch() throws Exception {\n    for (int nServers = 1; nServers < 4; nServers++) {\n      createServers(nServers);\n      RandVal.uniqueValues = new HashSet(); //reset random values\n      doTest();\n      destroyServers();\n    }\n  }\n\n","sourceOld":"  public void testDistribSearch() throws Exception {\n    for (int nServers = 1; nServers < 2; nServers++) {\n      createServers(nServers);\n      RandVal.uniqueValues = new HashSet(); //reset random values\n      doTest();\n      destroyServers();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62d8ce26a4670ecb6648386a1e5394d2b22bb9f5","date":1261647795,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/test/org/apache/solr/BaseDistributedSearchTestCase#testDistribSearch().mjava","pathOld":"src/test/org/apache/solr/BaseDistributedSearchTestCase#testDistribSearch().mjava","sourceNew":"  public void testDistribSearch() throws Exception {\n    if (fixShardCount) {\n      createServers(shardCount);\n      RandVal.uniqueValues = new HashSet(); //reset random values\n      doTest();\n      destroyServers();\n    } else {\n      for (int nServers = 1; nServers < shardCount; nServers++) {\n        createServers(nServers);\n        RandVal.uniqueValues = new HashSet(); //reset random values\n        doTest();\n        destroyServers();\n      }\n    }\n  }\n\n","sourceOld":"  public void testDistribSearch() throws Exception {\n    for (int nServers = 1; nServers < 4; nServers++) {\n      createServers(nServers);\n      RandVal.uniqueValues = new HashSet(); //reset random values\n      doTest();\n      destroyServers();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/BaseDistributedSearchTestCase#testDistribSearch().mjava","pathOld":"src/test/org/apache/solr/BaseDistributedSearchTestCase#testDistribSearch().mjava","sourceNew":"  public void testDistribSearch() throws Exception {\n    if (fixShardCount) {\n      createServers(shardCount);\n      RandVal.uniqueValues = new HashSet(); //reset random values\n      doTest();\n      destroyServers();\n    } else {\n      for (int nServers = 1; nServers < shardCount; nServers++) {\n        createServers(nServers);\n        RandVal.uniqueValues = new HashSet(); //reset random values\n        doTest();\n        destroyServers();\n      }\n    }\n  }\n\n","sourceOld":"  public void testDistribSearch() throws Exception {\n    if (fixShardCount) {\n      createServers(shardCount);\n      RandVal.uniqueValues = new HashSet(); //reset random values\n      doTest();\n      destroyServers();\n    } else {\n      for (int nServers = 1; nServers < shardCount; nServers++) {\n        createServers(nServers);\n        RandVal.uniqueValues = new HashSet(); //reset random values\n        doTest();\n        destroyServers();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"62d8ce26a4670ecb6648386a1e5394d2b22bb9f5":["ae2760dcd792b5f817bdda913028e4fe0190c56a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ae2760dcd792b5f817bdda913028e4fe0190c56a":["0b57d1523f42368168ea21982dd84effd69453d3"],"0b57d1523f42368168ea21982dd84effd69453d3":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["62d8ce26a4670ecb6648386a1e5394d2b22bb9f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"62d8ce26a4670ecb6648386a1e5394d2b22bb9f5":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0b57d1523f42368168ea21982dd84effd69453d3"],"ae2760dcd792b5f817bdda913028e4fe0190c56a":["62d8ce26a4670ecb6648386a1e5394d2b22bb9f5"],"0b57d1523f42368168ea21982dd84effd69453d3":["ae2760dcd792b5f817bdda913028e4fe0190c56a"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}