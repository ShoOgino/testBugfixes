{"path":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testLocale().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testLocale().mjava","pathOld":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testLocale().mjava","sourceNew":"  /**\n   * Test that we can change the Locale in the runData,\n   * that it is parsed as we expect.\n   */\n  public void testLocale() throws Exception {\n    // empty Locale: clear it (null)\n    Benchmark benchmark = execBenchmark(getLocaleConfig(\"\"));\n    assertNull(benchmark.getRunData().getLocale());\n\n    // ROOT locale\n    benchmark = execBenchmark(getLocaleConfig(\"ROOT\"));\n    assertEquals(new Locale(\"\"), benchmark.getRunData().getLocale());\n    \n    // specify just a language \n    benchmark = execBenchmark(getLocaleConfig(\"de\"));\n    assertEquals(new Locale(\"de\"), benchmark.getRunData().getLocale());\n    \n    // specify language + country\n    benchmark = execBenchmark(getLocaleConfig(\"en,US\"));\n    assertEquals(new Locale(\"en\", \"US\"), benchmark.getRunData().getLocale());\n    \n    // specify language + country + variant\n    benchmark = execBenchmark(getLocaleConfig(\"no,NO,NY\"));\n    assertEquals(new Locale(\"no\", \"NO\", \"NY\"), benchmark.getRunData().getLocale());\n  }\n\n","sourceOld":"  /**\n   * Test that we can change the Locale in the runData,\n   * that it is parsed as we expect.\n   */\n  public void testLocale() throws Exception {\n    // empty Locale: clear it (null)\n    Benchmark benchmark = execBenchmark(getLocaleConfig(\"\"));\n    assertNull(benchmark.getRunData().getLocale());\n\n    // ROOT locale\n    benchmark = execBenchmark(getLocaleConfig(\"ROOT\"));\n    assertEquals(new Locale(\"\"), benchmark.getRunData().getLocale());\n    \n    // specify just a language \n    benchmark = execBenchmark(getLocaleConfig(\"de\"));\n    assertEquals(new Locale(\"de\"), benchmark.getRunData().getLocale());\n    \n    // specify language + country\n    benchmark = execBenchmark(getLocaleConfig(\"en,US\"));\n    assertEquals(new Locale(\"en\", \"US\"), benchmark.getRunData().getLocale());\n    \n    // specify language + country + variant\n    benchmark = execBenchmark(getLocaleConfig(\"no,NO,NY\"));\n    assertEquals(new Locale(\"no\", \"NO\", \"NY\"), benchmark.getRunData().getLocale());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testLocale().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testLocale().mjava","sourceNew":"  /**\n   * Test that we can change the Locale in the runData,\n   * that it is parsed as we expect.\n   */\n  public void testLocale() throws Exception {\n    // empty Locale: clear it (null)\n    Benchmark benchmark = execBenchmark(getLocaleConfig(\"\"));\n    assertNull(benchmark.getRunData().getLocale());\n\n    // ROOT locale\n    benchmark = execBenchmark(getLocaleConfig(\"ROOT\"));\n    assertEquals(new Locale(\"\"), benchmark.getRunData().getLocale());\n    \n    // specify just a language \n    benchmark = execBenchmark(getLocaleConfig(\"de\"));\n    assertEquals(new Locale(\"de\"), benchmark.getRunData().getLocale());\n    \n    // specify language + country\n    benchmark = execBenchmark(getLocaleConfig(\"en,US\"));\n    assertEquals(new Locale(\"en\", \"US\"), benchmark.getRunData().getLocale());\n    \n    // specify language + country + variant\n    benchmark = execBenchmark(getLocaleConfig(\"no,NO,NY\"));\n    assertEquals(new Locale(\"no\", \"NO\", \"NY\"), benchmark.getRunData().getLocale());\n  }\n\n","sourceOld":"  /**\n   * Test that we can change the Locale in the runData,\n   * that it is parsed as we expect.\n   */\n  public void testLocale() throws Exception {\n    // empty Locale: clear it (null)\n    Benchmark benchmark = execBenchmark(getLocaleConfig(\"\"));\n    assertNull(benchmark.getRunData().getLocale());\n\n    // ROOT locale\n    benchmark = execBenchmark(getLocaleConfig(\"ROOT\"));\n    assertEquals(new Locale(\"\"), benchmark.getRunData().getLocale());\n    \n    // specify just a language \n    benchmark = execBenchmark(getLocaleConfig(\"de\"));\n    assertEquals(new Locale(\"de\"), benchmark.getRunData().getLocale());\n    \n    // specify language + country\n    benchmark = execBenchmark(getLocaleConfig(\"en,US\"));\n    assertEquals(new Locale(\"en\", \"US\"), benchmark.getRunData().getLocale());\n    \n    // specify language + country + variant\n    benchmark = execBenchmark(getLocaleConfig(\"no,NO,NY\"));\n    assertEquals(new Locale(\"no\", \"NO\", \"NY\"), benchmark.getRunData().getLocale());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testLocale().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testLocale().mjava","sourceNew":"  /**\n   * Test that we can change the Locale in the runData,\n   * that it is parsed as we expect.\n   */\n  public void testLocale() throws Exception {\n    // empty Locale: clear it (null)\n    Benchmark benchmark = execBenchmark(getLocaleConfig(\"\"));\n    assertNull(benchmark.getRunData().getLocale());\n\n    // ROOT locale\n    benchmark = execBenchmark(getLocaleConfig(\"ROOT\"));\n    assertEquals(new Locale(\"\"), benchmark.getRunData().getLocale());\n    \n    // specify just a language \n    benchmark = execBenchmark(getLocaleConfig(\"de\"));\n    assertEquals(new Locale(\"de\"), benchmark.getRunData().getLocale());\n    \n    // specify language + country\n    benchmark = execBenchmark(getLocaleConfig(\"en,US\"));\n    assertEquals(new Locale(\"en\", \"US\"), benchmark.getRunData().getLocale());\n    \n    // specify language + country + variant\n    benchmark = execBenchmark(getLocaleConfig(\"no,NO,NY\"));\n    assertEquals(new Locale(\"no\", \"NO\", \"NY\"), benchmark.getRunData().getLocale());\n  }\n\n","sourceOld":"  /**\n   * Test that we can change the Locale in the runData,\n   * that it is parsed as we expect.\n   */\n  public void testLocale() throws Exception {\n    // empty Locale: clear it (null)\n    Benchmark benchmark = execBenchmark(getLocaleConfig(\"\"));\n    assertNull(benchmark.getRunData().getLocale());\n\n    // ROOT locale\n    benchmark = execBenchmark(getLocaleConfig(\"ROOT\"));\n    assertEquals(new Locale(\"\"), benchmark.getRunData().getLocale());\n    \n    // specify just a language \n    benchmark = execBenchmark(getLocaleConfig(\"de\"));\n    assertEquals(new Locale(\"de\"), benchmark.getRunData().getLocale());\n    \n    // specify language + country\n    benchmark = execBenchmark(getLocaleConfig(\"en,US\"));\n    assertEquals(new Locale(\"en\", \"US\"), benchmark.getRunData().getLocale());\n    \n    // specify language + country + variant\n    benchmark = execBenchmark(getLocaleConfig(\"no,NO,NY\"));\n    assertEquals(new Locale(\"no\", \"NO\", \"NY\"), benchmark.getRunData().getLocale());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19275ba31e621f6da1b83bf13af75233876fd3d4"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}