{"path":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","pathOld":"/dev/null","sourceNew":"  public void setUp() throws Exception {\r\n\r\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\r\n                       + System.getProperty(\"file.separator\")\r\n                       + getClass().getName());\r\n    dataDir.mkdirs();\r\n    try {\r\n      solrConfig = new SolrConfig(getSolrConfigFile());\r\n      h = new TestHarness( dataDir.getAbsolutePath(),\r\n                           solrConfig,\r\n                           getSchemaFile());\r\n      fail(\"Exception should have been thrown\");\r\n    } catch (Exception e) {\r\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\r\n    }\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","sourceNew":null,"sourceOld":"  public void setUp() throws Exception {\r\n\r\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\r\n                       + System.getProperty(\"file.separator\")\r\n                       + getClass().getName());\r\n    dataDir.mkdirs();\r\n    try {\r\n      solrConfig = new SolrConfig(getSolrConfigFile());\r\n      h = new TestHarness( dataDir.getAbsolutePath(),\r\n                           solrConfig,\r\n                           getSchemaFile());\r\n      fail(\"Exception should have been thrown\");\r\n    } catch (Exception e) {\r\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\r\n    }\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","pathOld":"src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\r\n\r\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\r\n                       + System.getProperty(\"file.separator\")\r\n                       + getClass().getName());\r\n    dataDir.mkdirs();\r\n    try {\r\n      solrConfig = new SolrConfig(getSolrConfigFile());\r\n      h = new TestHarness( dataDir.getAbsolutePath(),\r\n                           solrConfig,\r\n                           getSchemaFile());\r\n      fail(\"Exception should have been thrown\");\r\n    } catch (Exception e) {\r\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\r\n    }\r\n  }\r\n\n","sourceOld":"  public void setUp() throws Exception {\r\n\r\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\r\n                       + System.getProperty(\"file.separator\")\r\n                       + getClass().getName());\r\n    dataDir.mkdirs();\r\n    try {\r\n      solrConfig = new SolrConfig(getSolrConfigFile());\r\n      h = new TestHarness( dataDir.getAbsolutePath(),\r\n                           solrConfig,\r\n                           getSchemaFile());\r\n      fail(\"Exception should have been thrown\");\r\n    } catch (Exception e) {\r\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\r\n    }\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","pathOld":"/dev/null","sourceNew":"  public void setUp() throws Exception {\r\n\r\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\r\n                       + System.getProperty(\"file.separator\")\r\n                       + getClass().getName());\r\n    dataDir.mkdirs();\r\n    try {\r\n      solrConfig = new SolrConfig(getSolrConfigFile());\r\n      h = new TestHarness( dataDir.getAbsolutePath(),\r\n                           solrConfig,\r\n                           getSchemaFile());\r\n      fail(\"Exception should have been thrown\");\r\n    } catch (Exception e) {\r\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\r\n    }\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a199b39600616391606bf32433796acc76755fa7","date":1269364520,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\r\n\r\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\r\n                       + System.getProperty(\"file.separator\")\r\n                       + getClass().getName());\r\n    dataDir.mkdirs();\r\n    try {\r\n     SolrTestCaseJ4.ignoreException(\"unset.sys.property\");\r\n\r\n      solrConfig = new SolrConfig(getSolrConfigFile());\r\n      h = new TestHarness( dataDir.getAbsolutePath(),\r\n                           solrConfig,\r\n                           getSchemaFile());\r\n      fail(\"Exception should have been thrown\");\r\n    } catch (Exception e) {\r\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\r\n      SolrTestCaseJ4.resetExceptionIgnores();\r\n    }\r\n  }\r\n\n","sourceOld":"  public void setUp() throws Exception {\r\n\r\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\r\n                       + System.getProperty(\"file.separator\")\r\n                       + getClass().getName());\r\n    dataDir.mkdirs();\r\n    try {\r\n      solrConfig = new SolrConfig(getSolrConfigFile());\r\n      h = new TestHarness( dataDir.getAbsolutePath(),\r\n                           solrConfig,\r\n                           getSchemaFile());\r\n      fail(\"Exception should have been thrown\");\r\n    } catch (Exception e) {\r\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\r\n    }\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dff3adc4fd8094e3973a5ecbbe8968ae45a86a55","date":1270182973,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n                       + System.getProperty(\"file.separator\")\n                       + getClass().getName());\n    dataDir.mkdirs();\n    try {\n     SolrTestCaseJ4.ignoreException(\"unset.sys.property\");\n\n      solrConfig = new SolrConfig(getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n                           solrConfig,\n                           getSchemaFile());\n      fail(\"Exception should have been thrown\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\n      SolrTestCaseJ4.resetExceptionIgnores();\n    }\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\r\n\r\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\r\n                       + System.getProperty(\"file.separator\")\r\n                       + getClass().getName());\r\n    dataDir.mkdirs();\r\n    try {\r\n     SolrTestCaseJ4.ignoreException(\"unset.sys.property\");\r\n\r\n      solrConfig = new SolrConfig(getSolrConfigFile());\r\n      h = new TestHarness( dataDir.getAbsolutePath(),\r\n                           solrConfig,\r\n                           getSchemaFile());\r\n      fail(\"Exception should have been thrown\");\r\n    } catch (Exception e) {\r\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\r\n      SolrTestCaseJ4.resetExceptionIgnores();\r\n    }\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d272632e612b90b4a624b54b5a8db565bca8d6d8","date":1279057531,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    ignoreException(\"unset.sys.property\");\n    try {\n      super.setUp();\n      fail(\"Exception should have been thrown\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\n    } finally {\n      resetExceptionIgnores();\n    }\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n                       + System.getProperty(\"file.separator\")\n                       + getClass().getName());\n    dataDir.mkdirs();\n    try {\n     SolrTestCaseJ4.ignoreException(\"unset.sys.property\");\n\n      solrConfig = new SolrConfig(getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n                           solrConfig,\n                           getSchemaFile());\n      fail(\"Exception should have been thrown\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\n      SolrTestCaseJ4.resetExceptionIgnores();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    ignoreException(\"unset.sys.property\");\n    try {\n      super.setUp();\n      fail(\"Exception should have been thrown\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\n    } finally {\n      resetExceptionIgnores();\n    }\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n                       + System.getProperty(\"file.separator\")\n                       + getClass().getName());\n    dataDir.mkdirs();\n    try {\n     SolrTestCaseJ4.ignoreException(\"unset.sys.property\");\n\n      solrConfig = new SolrConfig(getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n                           solrConfig,\n                           getSchemaFile());\n      fail(\"Exception should have been thrown\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\n      SolrTestCaseJ4.resetExceptionIgnores();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","date":1296400215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    ignoreException(\"unset.sys.property\");\n    try {\n      super.setUp();\n      fail(\"Exception should have been thrown\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\n    } finally {\n      resetExceptionIgnores();\n    }\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    ignoreException(\"unset.sys.property\");\n    try {\n      super.setUp();\n      fail(\"Exception should have been thrown\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\n    } finally {\n      resetExceptionIgnores();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    ignoreException(\"unset.sys.property\");\n    try {\n      super.setUp();\n      fail(\"Exception should have been thrown\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\n    } finally {\n      resetExceptionIgnores();\n    }\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    ignoreException(\"unset.sys.property\");\n    try {\n      super.setUp();\n      fail(\"Exception should have been thrown\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\n    } finally {\n      resetExceptionIgnores();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    ignoreException(\"unset.sys.property\");\n    try {\n      super.setUp();\n      fail(\"Exception should have been thrown\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\n    } finally {\n      resetExceptionIgnores();\n    }\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    ignoreException(\"unset.sys.property\");\n    try {\n      super.setUp();\n      fail(\"Exception should have been thrown\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\n    } finally {\n      resetExceptionIgnores();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    ignoreException(\"unset.sys.property\");\n    try {\n      super.setUp();\n      fail(\"Exception should have been thrown\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\n    } finally {\n      resetExceptionIgnores();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    ignoreException(\"unset.sys.property\");\n    try {\n      super.setUp();\n      fail(\"Exception should have been thrown\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\n    } finally {\n      resetExceptionIgnores();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    ignoreException(\"unset.sys.property\");\n    try {\n      super.setUp();\n      fail(\"Exception should have been thrown\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\n    } finally {\n      resetExceptionIgnores();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    ignoreException(\"unset.sys.property\");\n    try {\n      super.setUp();\n      fail(\"Exception should have been thrown\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\n    } finally {\n      resetExceptionIgnores();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestBadConfig#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    ignoreException(\"unset.sys.property\");\n    try {\n      super.setUp();\n      fail(\"Exception should have been thrown\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\n    } finally {\n      resetExceptionIgnores();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    ignoreException(\"unset.sys.property\");\n    try {\n      super.setUp();\n      fail(\"Exception should have been thrown\");\n    } catch (Exception e) {\n      assertTrue(e.getMessage().contains(\"unset.sys.property\"));\n    } finally {\n      resetExceptionIgnores();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["d272632e612b90b4a624b54b5a8db565bca8d6d8"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5f4e87790277826a2aea119328600dfb07761f32":["dff3adc4fd8094e3973a5ecbbe8968ae45a86a55","d272632e612b90b4a624b54b5a8db565bca8d6d8"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"a199b39600616391606bf32433796acc76755fa7":["1da8d55113b689b06716246649de6f62430f15c0"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"d272632e612b90b4a624b54b5a8db565bca8d6d8":["dff3adc4fd8094e3973a5ecbbe8968ae45a86a55"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["d272632e612b90b4a624b54b5a8db565bca8d6d8","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"dff3adc4fd8094e3973a5ecbbe8968ae45a86a55":["a199b39600616391606bf32433796acc76755fa7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["5f4e87790277826a2aea119328600dfb07761f32","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"5f4e87790277826a2aea119328600dfb07761f32":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"1da8d55113b689b06716246649de6f62430f15c0":["a199b39600616391606bf32433796acc76755fa7"],"a199b39600616391606bf32433796acc76755fa7":["dff3adc4fd8094e3973a5ecbbe8968ae45a86a55"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"d272632e612b90b4a624b54b5a8db565bca8d6d8":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","5f4e87790277826a2aea119328600dfb07761f32","29ef99d61cda9641b6250bf9567329a6e65f901d"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"dff3adc4fd8094e3973a5ecbbe8968ae45a86a55":["5f4e87790277826a2aea119328600dfb07761f32","d272632e612b90b4a624b54b5a8db565bca8d6d8"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}