{"path":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#release(SegmentReader).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#release(SegmentReader).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter.ReaderPool#release(SegmentReader).mjava","sourceNew":"    /**\n     * Release the segment reader (i.e. decRef it and close if there\n     * are no more references.\n     * @param sr\n     * @throws IOException\n     */\n    public synchronized void release(SegmentReader sr) throws IOException {\n      release(sr, false);\n    }\n\n","sourceOld":"    /**\n     * Release the segment reader (i.e. decRef it and close if there\n     * are no more references.\n     * @param sr\n     * @throws IOException\n     */\n    public synchronized void release(SegmentReader sr) throws IOException {\n      release(sr, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ef87af8c7bd0f8429622b83aa74202383f2e757","date":1280262785,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#release(SegmentReader).mjava","sourceNew":null,"sourceOld":"    /**\n     * Release the segment reader (i.e. decRef it and close if there\n     * are no more references.\n     * @param sr\n     * @throws IOException\n     */\n    public synchronized void release(SegmentReader sr) throws IOException {\n      release(sr, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44fcbde6fb2ac44ee3b45e013e54a42911e689ff","date":1292065621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#release(SegmentReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#release(SegmentReader).mjava","sourceNew":"    /**\n     * Release the segment reader (i.e. decRef it and close if there\n     * are no more references.\n     * @return true if this release altered the index (eg\n     * the SegmentReader had pending changes to del docs and\n     * was closed).  Caller must call checkpoint() if so.\n     * @param sr\n     * @throws IOException\n     */\n    public synchronized boolean release(SegmentReader sr) throws IOException {\n      return release(sr, false);\n    }\n\n","sourceOld":"    /**\n     * Release the segment reader (i.e. decRef it and close if there\n     * are no more references.\n     * @param sr\n     * @throws IOException\n     */\n    public synchronized void release(SegmentReader sr) throws IOException {\n      release(sr, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#release(SegmentReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#release(SegmentReader).mjava","sourceNew":"    /**\n     * Release the segment reader (i.e. decRef it and close if there\n     * are no more references.\n     * @return true if this release altered the index (eg\n     * the SegmentReader had pending changes to del docs and\n     * was closed).  Caller must call checkpoint() if so.\n     * @param sr\n     * @throws IOException\n     */\n    public synchronized boolean release(SegmentReader sr) throws IOException {\n      return release(sr, false);\n    }\n\n","sourceOld":"    /**\n     * Release the segment reader (i.e. decRef it and close if there\n     * are no more references.\n     * @param sr\n     * @throws IOException\n     */\n    public synchronized void release(SegmentReader sr) throws IOException {\n      release(sr, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#release(SegmentReader).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Release the segment reader (i.e. decRef it and close if there\n     * are no more references.\n     * @return true if this release altered the index (eg\n     * the SegmentReader had pending changes to del docs and\n     * was closed).  Caller must call checkpoint() if so.\n     * @param sr\n     * @throws IOException\n     */\n    public synchronized boolean release(SegmentReader sr) throws IOException {\n      return release(sr, false);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0061262413ecc163d6eebba1b5c43ab91a0c2dc5","date":1311195279,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#release(SegmentReader,IOContext.Context).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#release(SegmentReader).mjava","sourceNew":"    /**\n     * Release the segment reader (i.e. decRef it and close if there\n     * are no more references.\n     * @return true if this release altered the index (eg\n     * the SegmentReader had pending changes to del docs and\n     * was closed).  Caller must call checkpoint() if so.\n     * @param sr\n     * @throws IOException\n     */\n    public synchronized boolean release(SegmentReader sr, IOContext.Context context) throws IOException {\n      return release(sr, false, context);\n    }\n\n","sourceOld":"    /**\n     * Release the segment reader (i.e. decRef it and close if there\n     * are no more references.\n     * @return true if this release altered the index (eg\n     * the SegmentReader had pending changes to del docs and\n     * was closed).  Caller must call checkpoint() if so.\n     * @param sr\n     * @throws IOException\n     */\n    public synchronized boolean release(SegmentReader sr) throws IOException {\n      return release(sr, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0061262413ecc163d6eebba1b5c43ab91a0c2dc5":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5ef87af8c7bd0f8429622b83aa74202383f2e757":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["9454a6510e2db155fb01faa5c049b06ece95fab9","44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5ef87af8c7bd0f8429622b83aa74202383f2e757","44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0061262413ecc163d6eebba1b5c43ab91a0c2dc5"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["0061262413ecc163d6eebba1b5c43ab91a0c2dc5","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"0061262413ecc163d6eebba1b5c43ab91a0c2dc5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5ef87af8c7bd0f8429622b83aa74202383f2e757":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff","5ef87af8c7bd0f8429622b83aa74202383f2e757","ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}