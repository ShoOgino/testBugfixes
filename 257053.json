{"path":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#initExtractor(TokenStream).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#initExtractor(TokenStream).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#initExtractor(TokenStream).mjava","sourceNew":"  private TokenStream initExtractor(TokenStream tokenStream) throws IOException {\n    WeightedSpanTermExtractor qse = newTermExtractor(defaultField);\n    qse.setMaxDocCharsToAnalyze(maxCharsToAnalyze);\n    qse.setExpandMultiTermQuery(expandMultiTermQuery);\n    qse.setWrapIfNotCachingTokenFilter(wrapToCaching);\n    if (reader == null) {\n      this.fieldWeightedSpanTerms = qse.getWeightedSpanTerms(query,\n          tokenStream, field);\n    } else {\n      this.fieldWeightedSpanTerms = qse.getWeightedSpanTermsWithScores(query,\n          tokenStream, field, reader);\n    }\n    if(qse.isCachedTokenStream()) {\n      return qse.getTokenStream();\n    }\n    \n    return null;\n  }\n\n","sourceOld":"  private TokenStream initExtractor(TokenStream tokenStream) throws IOException {\n    WeightedSpanTermExtractor qse = newTermExtractor(defaultField);\n    qse.setMaxDocCharsToAnalyze(maxCharsToAnalyze);\n    qse.setExpandMultiTermQuery(expandMultiTermQuery);\n    qse.setWrapIfNotCachingTokenFilter(wrapToCaching);\n    if (reader == null) {\n      this.fieldWeightedSpanTerms = qse.getWeightedSpanTerms(query,\n          tokenStream, field);\n    } else {\n      this.fieldWeightedSpanTerms = qse.getWeightedSpanTermsWithScores(query,\n          tokenStream, field, reader);\n    }\n    if(qse.isCachedTokenStream()) {\n      return qse.getTokenStream();\n    }\n    \n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e88ae259732b6a9caf4c8f3a2e5a19c7b54ddbcb","date":1420550360,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#initExtractor(TokenStream).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#initExtractor(TokenStream).mjava","sourceNew":"  private TokenStream initExtractor(TokenStream tokenStream) throws IOException {\n    WeightedSpanTermExtractor qse = newTermExtractor(defaultField);\n    qse.setMaxDocCharsToAnalyze(maxCharsToAnalyze);\n    qse.setExpandMultiTermQuery(expandMultiTermQuery);\n    qse.setWrapIfNotCachingTokenFilter(wrapToCaching);\n    qse.setUsePayloads(usePayloads);\n    if (reader == null) {\n      this.fieldWeightedSpanTerms = qse.getWeightedSpanTerms(query,\n          tokenStream, field);\n    } else {\n      this.fieldWeightedSpanTerms = qse.getWeightedSpanTermsWithScores(query,\n          tokenStream, field, reader);\n    }\n    if(qse.isCachedTokenStream()) {\n      return qse.getTokenStream();\n    }\n    \n    return null;\n  }\n\n","sourceOld":"  private TokenStream initExtractor(TokenStream tokenStream) throws IOException {\n    WeightedSpanTermExtractor qse = newTermExtractor(defaultField);\n    qse.setMaxDocCharsToAnalyze(maxCharsToAnalyze);\n    qse.setExpandMultiTermQuery(expandMultiTermQuery);\n    qse.setWrapIfNotCachingTokenFilter(wrapToCaching);\n    if (reader == null) {\n      this.fieldWeightedSpanTerms = qse.getWeightedSpanTerms(query,\n          tokenStream, field);\n    } else {\n      this.fieldWeightedSpanTerms = qse.getWeightedSpanTermsWithScores(query,\n          tokenStream, field, reader);\n    }\n    if(qse.isCachedTokenStream()) {\n      return qse.getTokenStream();\n    }\n    \n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#initExtractor(TokenStream).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#initExtractor(TokenStream).mjava","sourceNew":"  private TokenStream initExtractor(TokenStream tokenStream) throws IOException {\n    WeightedSpanTermExtractor qse = newTermExtractor(defaultField);\n    qse.setMaxDocCharsToAnalyze(maxCharsToAnalyze);\n    qse.setExpandMultiTermQuery(expandMultiTermQuery);\n    qse.setWrapIfNotCachingTokenFilter(wrapToCaching);\n    qse.setUsePayloads(usePayloads);\n    if (reader == null) {\n      this.fieldWeightedSpanTerms = qse.getWeightedSpanTerms(query, 1f,\n          tokenStream, field);\n    } else {\n      this.fieldWeightedSpanTerms = qse.getWeightedSpanTermsWithScores(query, 1f,\n          tokenStream, field, reader);\n    }\n    if(qse.isCachedTokenStream()) {\n      return qse.getTokenStream();\n    }\n    \n    return null;\n  }\n\n","sourceOld":"  private TokenStream initExtractor(TokenStream tokenStream) throws IOException {\n    WeightedSpanTermExtractor qse = newTermExtractor(defaultField);\n    qse.setMaxDocCharsToAnalyze(maxCharsToAnalyze);\n    qse.setExpandMultiTermQuery(expandMultiTermQuery);\n    qse.setWrapIfNotCachingTokenFilter(wrapToCaching);\n    qse.setUsePayloads(usePayloads);\n    if (reader == null) {\n      this.fieldWeightedSpanTerms = qse.getWeightedSpanTerms(query,\n          tokenStream, field);\n    } else {\n      this.fieldWeightedSpanTerms = qse.getWeightedSpanTermsWithScores(query,\n          tokenStream, field, reader);\n    }\n    if(qse.isCachedTokenStream()) {\n      return qse.getTokenStream();\n    }\n    \n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["e88ae259732b6a9caf4c8f3a2e5a19c7b54ddbcb"],"e88ae259732b6a9caf4c8f3a2e5a19c7b54ddbcb":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2dfdf766e55e943d942055d7de53c7ad6bc45283"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e88ae259732b6a9caf4c8f3a2e5a19c7b54ddbcb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e88ae259732b6a9caf4c8f3a2e5a19c7b54ddbcb":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}