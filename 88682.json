{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/LZ4WithPresetCompressingCodec#LZ4WithPresetCompressingCodec(int,int,boolean,int).mjava","commits":[{"id":"9aefce86de8b17eed91ab011fb54d704d91102ef","date":1599128224,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/LZ4WithPresetCompressingCodec#LZ4WithPresetCompressingCodec(int,int,boolean,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Constructor that allows to configure the chunk size. */\n  public LZ4WithPresetCompressingCodec(int chunkSize, int maxDocsPerChunk, boolean withSegmentSuffix, int blockSize) {\n    super(\"LZ4WithPresetCompressingStoredFieldsData\", \n          withSegmentSuffix ? \"DeflateWithPresetCompressingStoredFields\" : \"\",\n          new LZ4WithPresetDictCompressionMode(chunkSize/10, chunkSize/3+1), chunkSize, maxDocsPerChunk, blockSize);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b45f542a44cc5225bc57913f3ec59d5016398f14","date":1600254540,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/LZ4WithPresetCompressingCodec#LZ4WithPresetCompressingCodec(int,int,boolean,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/LZ4WithPresetCompressingCodec#LZ4WithPresetCompressingCodec(int,int,boolean,int).mjava","sourceNew":"  /** Constructor that allows to configure the chunk size. */\n  public LZ4WithPresetCompressingCodec(int chunkSize, int maxDocsPerChunk, boolean withSegmentSuffix, int blockSize) {\n    super(\"LZ4WithPresetCompressingStoredFieldsData\", \n          withSegmentSuffix ? \"DeflateWithPresetCompressingStoredFields\" : \"\",\n          new LZ4WithPresetDictCompressionMode(), chunkSize, maxDocsPerChunk, blockSize);\n  }\n\n","sourceOld":"  /** Constructor that allows to configure the chunk size. */\n  public LZ4WithPresetCompressingCodec(int chunkSize, int maxDocsPerChunk, boolean withSegmentSuffix, int blockSize) {\n    super(\"LZ4WithPresetCompressingStoredFieldsData\", \n          withSegmentSuffix ? \"DeflateWithPresetCompressingStoredFields\" : \"\",\n          new LZ4WithPresetDictCompressionMode(chunkSize/10, chunkSize/3+1), chunkSize, maxDocsPerChunk, blockSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65352f844eb9e9a677ec4eb2abced4404f08181d","date":1600297608,"type":3,"author":"noblepaul","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/LZ4WithPresetCompressingCodec#LZ4WithPresetCompressingCodec(int,int,boolean,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/compressing/LZ4WithPresetCompressingCodec#LZ4WithPresetCompressingCodec(int,int,boolean,int).mjava","sourceNew":"  /** Constructor that allows to configure the chunk size. */\n  public LZ4WithPresetCompressingCodec(int chunkSize, int maxDocsPerChunk, boolean withSegmentSuffix, int blockSize) {\n    super(\"LZ4WithPresetCompressingStoredFieldsData\", \n          withSegmentSuffix ? \"DeflateWithPresetCompressingStoredFields\" : \"\",\n          new LZ4WithPresetDictCompressionMode(), chunkSize, maxDocsPerChunk, blockSize);\n  }\n\n","sourceOld":"  /** Constructor that allows to configure the chunk size. */\n  public LZ4WithPresetCompressingCodec(int chunkSize, int maxDocsPerChunk, boolean withSegmentSuffix, int blockSize) {\n    super(\"LZ4WithPresetCompressingStoredFieldsData\", \n          withSegmentSuffix ? \"DeflateWithPresetCompressingStoredFields\" : \"\",\n          new LZ4WithPresetDictCompressionMode(chunkSize/10, chunkSize/3+1), chunkSize, maxDocsPerChunk, blockSize);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9aefce86de8b17eed91ab011fb54d704d91102ef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"65352f844eb9e9a677ec4eb2abced4404f08181d":["9aefce86de8b17eed91ab011fb54d704d91102ef","b45f542a44cc5225bc57913f3ec59d5016398f14"],"b45f542a44cc5225bc57913f3ec59d5016398f14":["9aefce86de8b17eed91ab011fb54d704d91102ef"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["65352f844eb9e9a677ec4eb2abced4404f08181d"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9aefce86de8b17eed91ab011fb54d704d91102ef"],"9aefce86de8b17eed91ab011fb54d704d91102ef":["65352f844eb9e9a677ec4eb2abced4404f08181d","b45f542a44cc5225bc57913f3ec59d5016398f14"],"65352f844eb9e9a677ec4eb2abced4404f08181d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b45f542a44cc5225bc57913f3ec59d5016398f14":["65352f844eb9e9a677ec4eb2abced4404f08181d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}