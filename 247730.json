{"path":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getName());\n    ignoreException(\"ignore_exception\");\n    factoryProp = System.getProperty(\"solr.directoryFactory\");\n    if (factoryProp == null) {\n      System.setProperty(\"solr.directoryFactory\",\"solr.RAMDirectoryFactory\");\n    }\n    dataDir = new File(TEMP_DIR,\n            getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    String configFile = getSolrConfigFile();\n    System.setProperty(\"solr.solr.home\", getSolrHome());\n    if (configFile != null) {\n\n      solrConfig = h.createConfig(getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n              solrConfig,\n              getSchemaFile());\n      lrf = h.getRequestFactory\n              (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n    }\n    log.info(\"####SETUP_END \" + getName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getName());\n    ignoreException(\"ignore_exception\");\n    factoryProp = System.getProperty(\"solr.directoryFactory\");\n    if (factoryProp == null) {\n      System.setProperty(\"solr.directoryFactory\",\"solr.RAMDirectoryFactory\");\n    }\n    dataDir = new File(TEMP_DIR,\n            getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    String configFile = getSolrConfigFile();\n    System.setProperty(\"solr.solr.home\", getSolrHome());\n    if (configFile != null) {\n\n      solrConfig = h.createConfig(getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n              solrConfig,\n              getSchemaFile());\n      lrf = h.getRequestFactory\n              (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n    }\n    log.info(\"####SETUP_END \" + getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getName());\n    ignoreException(\"ignore_exception\");\n    factoryProp = System.getProperty(\"solr.directoryFactory\");\n    if (factoryProp == null) {\n      System.setProperty(\"solr.directoryFactory\",\"solr.RAMDirectoryFactory\");\n    }\n    dataDir = new File(TEMP_DIR,\n            getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    String configFile = getSolrConfigFile();\n    System.setProperty(\"solr.solr.home\", getSolrHome());\n    if (configFile != null) {\n\n      solrConfig = h.createConfig(getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n              solrConfig,\n              getSchemaFile());\n      lrf = h.getRequestFactory\n              (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n    }\n    log.info(\"####SETUP_END \" + getName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getName());\n    ignoreException(\"ignore_exception\");\n    factoryProp = System.getProperty(\"solr.directoryFactory\");\n    if (factoryProp == null) {\n      System.setProperty(\"solr.directoryFactory\",\"solr.RAMDirectoryFactory\");\n    }\n    dataDir = new File(TEMP_DIR,\n            getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    String configFile = getSolrConfigFile();\n    System.setProperty(\"solr.solr.home\", getSolrHome());\n    if (configFile != null) {\n\n      solrConfig = h.createConfig(getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n              solrConfig,\n              getSchemaFile());\n      lrf = h.getRequestFactory\n              (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n    }\n    log.info(\"####SETUP_END \" + getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getName());\n    ignoreException(\"ignore_exception\");\n    factoryProp = System.getProperty(\"solr.directoryFactory\");\n    if (factoryProp == null) {\n      System.setProperty(\"solr.directoryFactory\",\"solr.RAMDirectoryFactory\");\n    }\n    dataDir = new File(TEMP_DIR,\n            getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    String configFile = getSolrConfigFile();\n    System.setProperty(\"solr.solr.home\", getSolrHome());\n    if (configFile != null) {\n\n      solrConfig = h.createConfig(getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n              solrConfig,\n              getSchemaFile());\n      lrf = h.getRequestFactory\n              (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n    }\n    log.info(\"####SETUP_END \" + getName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getName());\n    ignoreException(\"ignore_exception\");\n    factoryProp = System.getProperty(\"solr.directoryFactory\");\n    if (factoryProp == null) {\n      System.setProperty(\"solr.directoryFactory\",\"solr.RAMDirectoryFactory\");\n    }\n    dataDir = new File(TEMP_DIR,\n            getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    String configFile = getSolrConfigFile();\n    System.setProperty(\"solr.solr.home\", getSolrHome());\n    if (configFile != null) {\n\n      solrConfig = h.createConfig(getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n              solrConfig,\n              getSchemaFile());\n      lrf = h.getRequestFactory\n              (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n    }\n    log.info(\"####SETUP_END \" + getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f08557cdb6c60ac7b88a9342c983a20cd236e74f","date":1330954480,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getName());\n    ignoreException(\"ignore_exception\");\n    factoryProp = System.getProperty(\"solr.directoryFactory\");\n    if (factoryProp == null) {\n      System.setProperty(\"solr.directoryFactory\",\"solr.RAMDirectoryFactory\");\n    }\n    dataDir = new File(TEMP_DIR,\n            getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    String configFile = getSolrConfigFile();\n    System.setProperty(\"solr.solr.home\", getSolrHome());\n    if (configFile != null) {\n\n      solrConfig = TestHarness.createConfig(getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n              solrConfig,\n              getSchemaFile());\n      lrf = h.getRequestFactory\n              (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n    }\n    log.info(\"####SETUP_END \" + getName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getName());\n    ignoreException(\"ignore_exception\");\n    factoryProp = System.getProperty(\"solr.directoryFactory\");\n    if (factoryProp == null) {\n      System.setProperty(\"solr.directoryFactory\",\"solr.RAMDirectoryFactory\");\n    }\n    dataDir = new File(TEMP_DIR,\n            getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    String configFile = getSolrConfigFile();\n    System.setProperty(\"solr.solr.home\", getSolrHome());\n    if (configFile != null) {\n\n      solrConfig = h.createConfig(getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n              solrConfig,\n              getSchemaFile());\n      lrf = h.getRequestFactory\n              (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n    }\n    log.info(\"####SETUP_END \" + getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getName());\n    ignoreException(\"ignore_exception\");\n    factoryProp = System.getProperty(\"solr.directoryFactory\");\n    if (factoryProp == null) {\n      System.setProperty(\"solr.directoryFactory\",\"solr.RAMDirectoryFactory\");\n    }\n    dataDir = new File(TEMP_DIR,\n            getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    String configFile = getSolrConfigFile();\n    System.setProperty(\"solr.solr.home\", getSolrHome());\n    if (configFile != null) {\n\n      solrConfig = TestHarness.createConfig(getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n              solrConfig,\n              getSchemaFile());\n      lrf = h.getRequestFactory\n              (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n    }\n    log.info(\"####SETUP_END \" + getName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getName());\n    ignoreException(\"ignore_exception\");\n    factoryProp = System.getProperty(\"solr.directoryFactory\");\n    if (factoryProp == null) {\n      System.setProperty(\"solr.directoryFactory\",\"solr.RAMDirectoryFactory\");\n    }\n    dataDir = new File(TEMP_DIR,\n            getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    String configFile = getSolrConfigFile();\n    System.setProperty(\"solr.solr.home\", getSolrHome());\n    if (configFile != null) {\n\n      solrConfig = h.createConfig(getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n              solrConfig,\n              getSchemaFile());\n      lrf = h.getRequestFactory\n              (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n    }\n    log.info(\"####SETUP_END \" + getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5da0b42730b6b99b31389ef94cb97384e83b9ede","date":1337107665,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","sourceNew":"  /**\n   * Initializes things your test might need\n   *\n   * <ul>\n   * <li>Creates a dataDir in the \"java.io.tmpdir\"</li>\n   * <li>initializes the TestHarness h using this data directory, and getSchemaPath()</li>\n   * <li>initializes the LocalRequestFactory lrf using sensible defaults.</li>\n   * </ul>\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    ignoreException(\"ignore_exception\");\n    factoryProp = System.getProperty(\"solr.directoryFactory\");\n    if (factoryProp == null) {\n      System.setProperty(\"solr.directoryFactory\",\"solr.RAMDirectoryFactory\");\n    }\n    dataDir = new File(TEMP_DIR,\n            getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    String configFile = getSolrConfigFile();\n    System.setProperty(\"solr.solr.home\", getSolrHome());\n    if (configFile != null) {\n\n      solrConfig = TestHarness.createConfig(getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n              solrConfig,\n              getSchemaFile());\n      lrf = h.getRequestFactory\n              (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n    }\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getName());\n    ignoreException(\"ignore_exception\");\n    factoryProp = System.getProperty(\"solr.directoryFactory\");\n    if (factoryProp == null) {\n      System.setProperty(\"solr.directoryFactory\",\"solr.RAMDirectoryFactory\");\n    }\n    dataDir = new File(TEMP_DIR,\n            getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    String configFile = getSolrConfigFile();\n    System.setProperty(\"solr.solr.home\", getSolrHome());\n    if (configFile != null) {\n\n      solrConfig = TestHarness.createConfig(getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n              solrConfig,\n              getSchemaFile());\n      lrf = h.getRequestFactory\n              (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n    }\n    log.info(\"####SETUP_END \" + getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21591922fb4db3e2a6ffb2cb342b3d61c053a973","date":1340761680,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","sourceNew":"  /**\n   * Initializes things your test might need\n   *\n   * <ul>\n   * <li>Creates a dataDir in the \"java.io.tmpdir\"</li>\n   * <li>initializes the TestHarness h using this data directory, and getSchemaPath()</li>\n   * <li>initializes the LocalRequestFactory lrf using sensible defaults.</li>\n   * </ul>\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    ignoreException(\"ignore_exception\");\n    factoryProp = System.getProperty(\"solr.directoryFactory\");\n    if (factoryProp == null) {\n      System.setProperty(\"solr.directoryFactory\",\"solr.RAMDirectoryFactory\");\n    }\n    dataDir = new File(TEMP_DIR,\n            getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    String configFile = getSolrConfigFile();\n    System.setProperty(\"solr.solr.home\", getSolrHome());\n    if (configFile != null) {\n\n      solrConfig = TestHarness.createConfig(getSolrHome(), getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n              solrConfig,\n              getSchemaFile());\n      lrf = h.getRequestFactory\n              (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n    }\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  /**\n   * Initializes things your test might need\n   *\n   * <ul>\n   * <li>Creates a dataDir in the \"java.io.tmpdir\"</li>\n   * <li>initializes the TestHarness h using this data directory, and getSchemaPath()</li>\n   * <li>initializes the LocalRequestFactory lrf using sensible defaults.</li>\n   * </ul>\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    ignoreException(\"ignore_exception\");\n    factoryProp = System.getProperty(\"solr.directoryFactory\");\n    if (factoryProp == null) {\n      System.setProperty(\"solr.directoryFactory\",\"solr.RAMDirectoryFactory\");\n    }\n    dataDir = new File(TEMP_DIR,\n            getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    String configFile = getSolrConfigFile();\n    System.setProperty(\"solr.solr.home\", getSolrHome());\n    if (configFile != null) {\n\n      solrConfig = TestHarness.createConfig(getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n              solrConfig,\n              getSchemaFile());\n      lrf = h.getRequestFactory\n              (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n    }\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","sourceNew":"  /**\n   * Initializes things your test might need\n   *\n   * <ul>\n   * <li>Creates a dataDir in the \"java.io.tmpdir\"</li>\n   * <li>initializes the TestHarness h using this data directory, and getSchemaPath()</li>\n   * <li>initializes the LocalRequestFactory lrf using sensible defaults.</li>\n   * </ul>\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    ignoreException(\"ignore_exception\");\n    factoryProp = System.getProperty(\"solr.directoryFactory\");\n    if (factoryProp == null) {\n      System.setProperty(\"solr.directoryFactory\",\"solr.RAMDirectoryFactory\");\n    }\n    dataDir = new File(TEMP_DIR,\n            getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    String configFile = getSolrConfigFile();\n    System.setProperty(\"solr.solr.home\", getSolrHome());\n    if (configFile != null) {\n\n      solrConfig = TestHarness.createConfig(getSolrHome(), getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n              solrConfig,\n              getSchemaFile());\n      lrf = h.getRequestFactory\n              (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n    }\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","sourceOld":"  /**\n   * Initializes things your test might need\n   *\n   * <ul>\n   * <li>Creates a dataDir in the \"java.io.tmpdir\"</li>\n   * <li>initializes the TestHarness h using this data directory, and getSchemaPath()</li>\n   * <li>initializes the LocalRequestFactory lrf using sensible defaults.</li>\n   * </ul>\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    ignoreException(\"ignore_exception\");\n    factoryProp = System.getProperty(\"solr.directoryFactory\");\n    if (factoryProp == null) {\n      System.setProperty(\"solr.directoryFactory\",\"solr.RAMDirectoryFactory\");\n    }\n    dataDir = new File(TEMP_DIR,\n            getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    String configFile = getSolrConfigFile();\n    System.setProperty(\"solr.solr.home\", getSolrHome());\n    if (configFile != null) {\n\n      solrConfig = TestHarness.createConfig(getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n              solrConfig,\n              getSchemaFile());\n      lrf = h.getRequestFactory\n              (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n    }\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9405f486872f1e416304dfe389741f4ee2f8a4d","date":1351276739,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","sourceNew":null,"sourceOld":"  /**\n   * Initializes things your test might need\n   *\n   * <ul>\n   * <li>Creates a dataDir in the \"java.io.tmpdir\"</li>\n   * <li>initializes the TestHarness h using this data directory, and getSchemaPath()</li>\n   * <li>initializes the LocalRequestFactory lrf using sensible defaults.</li>\n   * </ul>\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    ignoreException(\"ignore_exception\");\n    factoryProp = System.getProperty(\"solr.directoryFactory\");\n    if (factoryProp == null) {\n      System.setProperty(\"solr.directoryFactory\",\"solr.RAMDirectoryFactory\");\n    }\n    dataDir = new File(TEMP_DIR,\n            getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    String configFile = getSolrConfigFile();\n    System.setProperty(\"solr.solr.home\", getSolrHome());\n    if (configFile != null) {\n\n      solrConfig = TestHarness.createConfig(getSolrHome(), getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n              solrConfig,\n              getSchemaFile());\n      lrf = h.getRequestFactory\n              (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n    }\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","sourceNew":null,"sourceOld":"  /**\n   * Initializes things your test might need\n   *\n   * <ul>\n   * <li>Creates a dataDir in the \"java.io.tmpdir\"</li>\n   * <li>initializes the TestHarness h using this data directory, and getSchemaPath()</li>\n   * <li>initializes the LocalRequestFactory lrf using sensible defaults.</li>\n   * </ul>\n   */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    log.info(\"####SETUP_START \" + getTestName());\n    ignoreException(\"ignore_exception\");\n    factoryProp = System.getProperty(\"solr.directoryFactory\");\n    if (factoryProp == null) {\n      System.setProperty(\"solr.directoryFactory\",\"solr.RAMDirectoryFactory\");\n    }\n    dataDir = new File(TEMP_DIR,\n            getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n    String configFile = getSolrConfigFile();\n    System.setProperty(\"solr.solr.home\", getSolrHome());\n    if (configFile != null) {\n\n      solrConfig = TestHarness.createConfig(getSolrHome(), getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n              solrConfig,\n              getSchemaFile());\n      lrf = h.getRequestFactory\n              (\"standard\",0,20,CommonParams.VERSION,\"2.2\");\n    }\n    log.info(\"####SETUP_END \" + getTestName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"21591922fb4db3e2a6ffb2cb342b3d61c053a973":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["c26f00b574427b55127e869b935845554afde1fa","f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f08557cdb6c60ac7b88a9342c983a20cd236e74f":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["5da0b42730b6b99b31389ef94cb97384e83b9ede","21591922fb4db3e2a6ffb2cb342b3d61c053a973"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["21591922fb4db3e2a6ffb2cb342b3d61c053a973"],"f2126b84bd093fa3d921582a109a0ee578c28126":["21591922fb4db3e2a6ffb2cb342b3d61c053a973","d9405f486872f1e416304dfe389741f4ee2f8a4d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d9405f486872f1e416304dfe389741f4ee2f8a4d"]},"commit2Childs":{"21591922fb4db3e2a6ffb2cb342b3d61c053a973":["fe33227f6805edab2036cbb80645cc4e2d1fa424","d9405f486872f1e416304dfe389741f4ee2f8a4d","f2126b84bd093fa3d921582a109a0ee578c28126"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["21591922fb4db3e2a6ffb2cb342b3d61c053a973","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","f08557cdb6c60ac7b88a9342c983a20cd236e74f"],"f08557cdb6c60ac7b88a9342c983a20cd236e74f":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","5da0b42730b6b99b31389ef94cb97384e83b9ede"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","fe33227f6805edab2036cbb80645cc4e2d1fa424","a258fbb26824fd104ed795e5d9033d2d040049ee","f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}