{"path":"lucene/demo/src/java/org/apache/lucene/demo/facet/SimpleFacetsExample#drillDown().mjava","commits":[{"id":"31703f98041a9e7086254ed134d8f91c22ac933f","date":1360500940,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/SimpleFacetsExample#drillDown().mjava","pathOld":"/dev/null","sourceNew":"  /** User drills down on 'Publish date/2010'. */\n  private List<FacetResult> drillDown() throws IOException {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    IndexSearcher searcher = new IndexSearcher(indexReader);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n\n    // Now user drills down on Publish Date/2010:\n    FacetSearchParams fsp = new FacetSearchParams(new CountFacetRequest(new CategoryPath(\"Author\"), 10));\n    DrillDownQuery q = new DrillDownQuery(fsp.indexingParams, new MatchAllDocsQuery());\n    q.add(new CategoryPath(\"Publish Date/2010\", '/'));\n    FacetsCollector fc = FacetsCollector.create(fsp, searcher.getIndexReader(), taxoReader);\n    searcher.search(q, fc);\n\n    // Retrieve results\n    List<FacetResult> facetResults = fc.getFacetResults();\n    \n    indexReader.close();\n    taxoReader.close();\n    \n    return facetResults;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc031ce325db96bcb30084c4d9bad6d4521a9e9f","date":1363549910,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/SimpleFacetsExample#drillDown().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/SimpleFacetsExample#drillDown().mjava","sourceNew":"  /** User drills down on 'Publish Date/2010'. */\n  private List<FacetResult> drillDown() throws IOException {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    IndexSearcher searcher = new IndexSearcher(indexReader);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n\n    // Now user drills down on Publish Date/2010:\n    FacetSearchParams fsp = new FacetSearchParams(new CountFacetRequest(new CategoryPath(\"Author\"), 10));\n    DrillDownQuery q = new DrillDownQuery(fsp.indexingParams, new MatchAllDocsQuery());\n    q.add(new CategoryPath(\"Publish Date/2010\", '/'));\n    FacetsCollector fc = FacetsCollector.create(fsp, searcher.getIndexReader(), taxoReader);\n    searcher.search(q, fc);\n\n    // Retrieve results\n    List<FacetResult> facetResults = fc.getFacetResults();\n    \n    indexReader.close();\n    taxoReader.close();\n    \n    return facetResults;\n  }\n\n","sourceOld":"  /** User drills down on 'Publish date/2010'. */\n  private List<FacetResult> drillDown() throws IOException {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    IndexSearcher searcher = new IndexSearcher(indexReader);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n\n    // Now user drills down on Publish Date/2010:\n    FacetSearchParams fsp = new FacetSearchParams(new CountFacetRequest(new CategoryPath(\"Author\"), 10));\n    DrillDownQuery q = new DrillDownQuery(fsp.indexingParams, new MatchAllDocsQuery());\n    q.add(new CategoryPath(\"Publish Date/2010\", '/'));\n    FacetsCollector fc = FacetsCollector.create(fsp, searcher.getIndexReader(), taxoReader);\n    searcher.search(q, fc);\n\n    // Retrieve results\n    List<FacetResult> facetResults = fc.getFacetResults();\n    \n    indexReader.close();\n    taxoReader.close();\n    \n    return facetResults;\n  }\n\n","bugFix":null,"bugIntro":["6e36d54295a482663caa1b849aa6172b8f868feb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2062967ab57824b59d116b38d53d2058ac7e4592","date":1367320813,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/SimpleFacetsExample#drillDown().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/SimpleFacetsExample#drillDown().mjava","sourceNew":"  /** User drills down on 'Publish Date/2010'. */\n  private List<FacetResult> drillDown() throws IOException {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    IndexSearcher searcher = new IndexSearcher(indexReader);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n\n    // Now user drills down on Publish Date/2010:\n    FacetSearchParams fsp = new FacetSearchParams(new CountFacetRequest(new CategoryPath(\"Author\"), 10));\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(fsp.indexingParams);\n    q.add(new CategoryPath(\"Publish Date/2010\", '/'));\n    FacetsCollector fc = FacetsCollector.create(fsp, searcher.getIndexReader(), taxoReader);\n    searcher.search(q, fc);\n\n    // Retrieve results\n    List<FacetResult> facetResults = fc.getFacetResults();\n    \n    indexReader.close();\n    taxoReader.close();\n    \n    return facetResults;\n  }\n\n","sourceOld":"  /** User drills down on 'Publish Date/2010'. */\n  private List<FacetResult> drillDown() throws IOException {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    IndexSearcher searcher = new IndexSearcher(indexReader);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n\n    // Now user drills down on Publish Date/2010:\n    FacetSearchParams fsp = new FacetSearchParams(new CountFacetRequest(new CategoryPath(\"Author\"), 10));\n    DrillDownQuery q = new DrillDownQuery(fsp.indexingParams, new MatchAllDocsQuery());\n    q.add(new CategoryPath(\"Publish Date/2010\", '/'));\n    FacetsCollector fc = FacetsCollector.create(fsp, searcher.getIndexReader(), taxoReader);\n    searcher.search(q, fc);\n\n    // Retrieve results\n    List<FacetResult> facetResults = fc.getFacetResults();\n    \n    indexReader.close();\n    taxoReader.close();\n    \n    return facetResults;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/SimpleFacetsExample#drillDown().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/SimpleFacetsExample#drillDown().mjava","sourceNew":"  /** User drills down on 'Publish Date/2010'. */\n  private List<FacetResult> drillDown() throws IOException {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    IndexSearcher searcher = new IndexSearcher(indexReader);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n\n    // Now user drills down on Publish Date/2010:\n    FacetSearchParams fsp = new FacetSearchParams(new CountFacetRequest(new FacetLabel(\"Author\"), 10));\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(fsp.indexingParams);\n    q.add(new FacetLabel(\"Publish Date/2010\", '/'));\n    FacetsCollector fc = FacetsCollector.create(fsp, searcher.getIndexReader(), taxoReader);\n    searcher.search(q, fc);\n\n    // Retrieve results\n    List<FacetResult> facetResults = fc.getFacetResults();\n    \n    indexReader.close();\n    taxoReader.close();\n    \n    return facetResults;\n  }\n\n","sourceOld":"  /** User drills down on 'Publish Date/2010'. */\n  private List<FacetResult> drillDown() throws IOException {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    IndexSearcher searcher = new IndexSearcher(indexReader);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n\n    // Now user drills down on Publish Date/2010:\n    FacetSearchParams fsp = new FacetSearchParams(new CountFacetRequest(new CategoryPath(\"Author\"), 10));\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(fsp.indexingParams);\n    q.add(new CategoryPath(\"Publish Date/2010\", '/'));\n    FacetsCollector fc = FacetsCollector.create(fsp, searcher.getIndexReader(), taxoReader);\n    searcher.search(q, fc);\n\n    // Retrieve results\n    List<FacetResult> facetResults = fc.getFacetResults();\n    \n    indexReader.close();\n    taxoReader.close();\n    \n    return facetResults;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d899affd3c008feba40d1405b7a38972ce2005b4","date":1385469973,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/SimpleFacetsExample#drillDown().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/SimpleFacetsExample#drillDown().mjava","sourceNew":"  /** User drills down on 'Publish Date/2010'. */\n  private SimpleFacetResult drillDown() throws IOException {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    IndexSearcher searcher = new IndexSearcher(indexReader);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    FacetsConfig config = getConfig(null);\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery(config);\n\n    // Now user drills down on Publish Date/2010:\n    q.add(\"Publish Date\", \"2010\");\n    SimpleFacetsCollector sfc = new SimpleFacetsCollector();\n    searcher.search(q, sfc);\n\n    // Retrieve results\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, sfc);\n    SimpleFacetResult result = facets.getTopChildren(10, \"Author\");\n\n    indexReader.close();\n    taxoReader.close();\n    \n    return result;\n  }\n\n","sourceOld":"  /** User drills down on 'Publish Date/2010'. */\n  private List<FacetResult> drillDown() throws IOException {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    IndexSearcher searcher = new IndexSearcher(indexReader);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n\n    // Now user drills down on Publish Date/2010:\n    FacetSearchParams fsp = new FacetSearchParams(new CountFacetRequest(new FacetLabel(\"Author\"), 10));\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(fsp.indexingParams);\n    q.add(new FacetLabel(\"Publish Date/2010\", '/'));\n    FacetsCollector fc = FacetsCollector.create(fsp, searcher.getIndexReader(), taxoReader);\n    searcher.search(q, fc);\n\n    // Retrieve results\n    List<FacetResult> facetResults = fc.getFacetResults();\n    \n    indexReader.close();\n    taxoReader.close();\n    \n    return facetResults;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/SimpleFacetsExample#drillDown().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/SimpleFacetsExample#drillDown().mjava","sourceNew":"  /** User drills down on 'Publish Date/2010'. */\n  private FacetResult drillDown() throws IOException {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    IndexSearcher searcher = new IndexSearcher(indexReader);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    FacetsConfig config = getConfig(null);\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(config);\n\n    // Now user drills down on Publish Date/2010:\n    q.add(\"Publish Date\", \"2010\");\n    FacetsCollector sfc = new FacetsCollector();\n    searcher.search(q, sfc);\n\n    // Retrieve results\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, sfc);\n    FacetResult result = facets.getTopChildren(10, \"Author\");\n\n    indexReader.close();\n    taxoReader.close();\n    \n    return result;\n  }\n\n","sourceOld":"  /** User drills down on 'Publish Date/2010'. */\n  private SimpleFacetResult drillDown() throws IOException {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    IndexSearcher searcher = new IndexSearcher(indexReader);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    FacetsConfig config = getConfig(null);\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    SimpleDrillDownQuery q = new SimpleDrillDownQuery(config);\n\n    // Now user drills down on Publish Date/2010:\n    q.add(\"Publish Date\", \"2010\");\n    SimpleFacetsCollector sfc = new SimpleFacetsCollector();\n    searcher.search(q, sfc);\n\n    // Retrieve results\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, sfc);\n    SimpleFacetResult result = facets.getTopChildren(10, \"Author\");\n\n    indexReader.close();\n    taxoReader.close();\n    \n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"78522aad83283ca58fae08fd89406b65429d0229","date":1385573562,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/SimpleFacetsExample#drillDown().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/SimpleFacetsExample#drillDown().mjava","sourceNew":"  /** User drills down on 'Publish Date/2010'. */\n  private FacetResult drillDown() throws IOException {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    IndexSearcher searcher = new IndexSearcher(indexReader);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    FacetsConfig config = getConfig(null);\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(config);\n\n    // Now user drills down on Publish Date/2010:\n    q.add(\"Publish Date\", \"2010\");\n    FacetsCollector fc = new FacetsCollector();\n    Facets.search(searcher, q, 10, fc);\n\n    // Retrieve results\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, fc);\n    FacetResult result = facets.getTopChildren(10, \"Author\");\n\n    indexReader.close();\n    taxoReader.close();\n    \n    return result;\n  }\n\n","sourceOld":"  /** User drills down on 'Publish Date/2010'. */\n  private FacetResult drillDown() throws IOException {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    IndexSearcher searcher = new IndexSearcher(indexReader);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    FacetsConfig config = getConfig(null);\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(config);\n\n    // Now user drills down on Publish Date/2010:\n    q.add(\"Publish Date\", \"2010\");\n    FacetsCollector sfc = new FacetsCollector();\n    searcher.search(q, sfc);\n\n    // Retrieve results\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, sfc);\n    FacetResult result = facets.getTopChildren(10, \"Author\");\n\n    indexReader.close();\n    taxoReader.close();\n    \n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fd83550e4b0bdd36e7d9dca9273264100782440b","date":1385761753,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/SimpleFacetsExample#drillDown().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/SimpleFacetsExample#drillDown().mjava","sourceNew":"  /** User drills down on 'Publish Date/2010'. */\n  private FacetResult drillDown() throws IOException {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    IndexSearcher searcher = new IndexSearcher(indexReader);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(config);\n\n    // Now user drills down on Publish Date/2010:\n    q.add(\"Publish Date\", \"2010\");\n    FacetsCollector fc = new FacetsCollector();\n    FacetsCollector.search(searcher, q, 10, fc);\n\n    // Retrieve results\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, fc);\n    FacetResult result = facets.getTopChildren(10, \"Author\");\n\n    indexReader.close();\n    taxoReader.close();\n    \n    return result;\n  }\n\n","sourceOld":"  /** User drills down on 'Publish Date/2010'. */\n  private FacetResult drillDown() throws IOException {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    IndexSearcher searcher = new IndexSearcher(indexReader);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n    FacetsConfig config = getConfig(null);\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(config);\n\n    // Now user drills down on Publish Date/2010:\n    q.add(\"Publish Date\", \"2010\");\n    FacetsCollector fc = new FacetsCollector();\n    Facets.search(searcher, q, 10, fc);\n\n    // Retrieve results\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, fc);\n    FacetResult result = facets.getTopChildren(10, \"Author\");\n\n    indexReader.close();\n    taxoReader.close();\n    \n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/SimpleFacetsExample#drillDown().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/SimpleFacetsExample#drillDown().mjava","sourceNew":"  /** User drills down on 'Publish Date/2010'. */\n  private FacetResult drillDown() throws IOException {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    IndexSearcher searcher = new IndexSearcher(indexReader);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(config);\n\n    // Now user drills down on Publish Date/2010:\n    q.add(\"Publish Date\", \"2010\");\n    FacetsCollector fc = new FacetsCollector();\n    FacetsCollector.search(searcher, q, 10, fc);\n\n    // Retrieve results\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, fc);\n    FacetResult result = facets.getTopChildren(10, \"Author\");\n\n    indexReader.close();\n    taxoReader.close();\n    \n    return result;\n  }\n\n","sourceOld":"  /** User drills down on 'Publish Date/2010'. */\n  private List<FacetResult> drillDown() throws IOException {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    IndexSearcher searcher = new IndexSearcher(indexReader);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n\n    // Now user drills down on Publish Date/2010:\n    FacetSearchParams fsp = new FacetSearchParams(new CountFacetRequest(new CategoryPath(\"Author\"), 10));\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(fsp.indexingParams);\n    q.add(new CategoryPath(\"Publish Date/2010\", '/'));\n    FacetsCollector fc = FacetsCollector.create(fsp, searcher.getIndexReader(), taxoReader);\n    searcher.search(q, fc);\n\n    // Retrieve results\n    List<FacetResult> facetResults = fc.getFacetResults();\n    \n    indexReader.close();\n    taxoReader.close();\n    \n    return facetResults;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6e36d54295a482663caa1b849aa6172b8f868feb","date":1394970334,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/demo/src/java/org/apache/lucene/demo/facet/SimpleFacetsExample#drillDown().mjava","pathOld":"lucene/demo/src/java/org/apache/lucene/demo/facet/SimpleFacetsExample#drillDown().mjava","sourceNew":"  /** User drills down on 'Publish Date/2010', and we\n   *  return facets for 'Author' */\n  private FacetResult drillDown() throws IOException {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    IndexSearcher searcher = new IndexSearcher(indexReader);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(config);\n\n    // Now user drills down on Publish Date/2010:\n    q.add(\"Publish Date\", \"2010\");\n    FacetsCollector fc = new FacetsCollector();\n    FacetsCollector.search(searcher, q, 10, fc);\n\n    // Retrieve results\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, fc);\n    FacetResult result = facets.getTopChildren(10, \"Author\");\n\n    indexReader.close();\n    taxoReader.close();\n    \n    return result;\n  }\n\n","sourceOld":"  /** User drills down on 'Publish Date/2010'. */\n  private FacetResult drillDown() throws IOException {\n    DirectoryReader indexReader = DirectoryReader.open(indexDir);\n    IndexSearcher searcher = new IndexSearcher(indexReader);\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoDir);\n\n    // Passing no baseQuery means we drill down on all\n    // documents (\"browse only\"):\n    DrillDownQuery q = new DrillDownQuery(config);\n\n    // Now user drills down on Publish Date/2010:\n    q.add(\"Publish Date\", \"2010\");\n    FacetsCollector fc = new FacetsCollector();\n    FacetsCollector.search(searcher, q, 10, fc);\n\n    // Retrieve results\n    Facets facets = new FastTaxonomyFacetCounts(taxoReader, config, fc);\n    FacetResult result = facets.getTopChildren(10, \"Author\");\n\n    indexReader.close();\n    taxoReader.close();\n    \n    return result;\n  }\n\n","bugFix":["cc031ce325db96bcb30084c4d9bad6d4521a9e9f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2062967ab57824b59d116b38d53d2058ac7e4592":["cc031ce325db96bcb30084c4d9bad6d4521a9e9f"],"31703f98041a9e7086254ed134d8f91c22ac933f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6e36d54295a482663caa1b849aa6172b8f868feb":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"21d36d0db865f7b84026b447bec653469a6e66df":["d899affd3c008feba40d1405b7a38972ce2005b4"],"d899affd3c008feba40d1405b7a38972ce2005b4":["c190847801a50f4dd20fd639bdc29b54ea3b288b"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["78522aad83283ca58fae08fd89406b65429d0229"],"78522aad83283ca58fae08fd89406b65429d0229":["21d36d0db865f7b84026b447bec653469a6e66df"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["2062967ab57824b59d116b38d53d2058ac7e4592","fd83550e4b0bdd36e7d9dca9273264100782440b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6e36d54295a482663caa1b849aa6172b8f868feb"],"cc031ce325db96bcb30084c4d9bad6d4521a9e9f":["31703f98041a9e7086254ed134d8f91c22ac933f"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["2062967ab57824b59d116b38d53d2058ac7e4592"]},"commit2Childs":{"2062967ab57824b59d116b38d53d2058ac7e4592":["3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"31703f98041a9e7086254ed134d8f91c22ac933f":["cc031ce325db96bcb30084c4d9bad6d4521a9e9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["31703f98041a9e7086254ed134d8f91c22ac933f"],"6e36d54295a482663caa1b849aa6172b8f868feb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"21d36d0db865f7b84026b447bec653469a6e66df":["78522aad83283ca58fae08fd89406b65429d0229"],"d899affd3c008feba40d1405b7a38972ce2005b4":["21d36d0db865f7b84026b447bec653469a6e66df"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"78522aad83283ca58fae08fd89406b65429d0229":["fd83550e4b0bdd36e7d9dca9273264100782440b"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["6e36d54295a482663caa1b849aa6172b8f868feb"],"cc031ce325db96bcb30084c4d9bad6d4521a9e9f":["2062967ab57824b59d116b38d53d2058ac7e4592"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["d899affd3c008feba40d1405b7a38972ce2005b4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}