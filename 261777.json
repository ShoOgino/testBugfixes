{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymMapFilter#testOutputHangsOffEnd().mjava","commits":[{"id":"b7c49a1b0f95bf8ecc502e6d44d79e4809dbf8ee","date":1328050915,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymMapFilter#testOutputHangsOffEnd().mjava","pathOld":"/dev/null","sourceNew":"  public void testOutputHangsOffEnd() throws Exception {\n    b = new SynonymMap.Builder(true);\n    final boolean keepOrig = false;\n    // b hangs off the end (no input token under it):\n    add(\"a\", \"a b\", keepOrig);\n    final SynonymMap map = b.build();\n    tokensIn = new MockTokenizer(new StringReader(\"a\"),\n                                 MockTokenizer.WHITESPACE,\n                                 true);\n    tokensIn.reset();\n    assertTrue(tokensIn.incrementToken());\n    assertFalse(tokensIn.incrementToken());\n    tokensIn.end();\n    tokensIn.close();\n\n    tokensOut = new SynonymFilter(tokensIn,\n                                     b.build(),\n                                     true);\n    termAtt = tokensOut.addAttribute(CharTermAttribute.class);\n    posIncrAtt = tokensOut.addAttribute(PositionIncrementAttribute.class);\n    offsetAtt = tokensOut.addAttribute(OffsetAttribute.class);\n\n    // Make sure endOffset inherits from previous input token:\n    verify(\"a\", \"a b:1\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6795c6bc2f5a6b2a2230cb20ff4744003faf7802","date":1333839972,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymMapFilter#testOutputHangsOffEnd().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymMapFilter#testOutputHangsOffEnd().mjava","sourceNew":"  public void testOutputHangsOffEnd() throws Exception {\n    b = new SynonymMap.Builder(true);\n    final boolean keepOrig = false;\n    // b hangs off the end (no input token under it):\n    add(\"a\", \"a b\", keepOrig);\n    tokensIn = new MockTokenizer(new StringReader(\"a\"),\n                                 MockTokenizer.WHITESPACE,\n                                 true);\n    tokensIn.reset();\n    assertTrue(tokensIn.incrementToken());\n    assertFalse(tokensIn.incrementToken());\n    tokensIn.end();\n    tokensIn.close();\n\n    tokensOut = new SynonymFilter(tokensIn,\n                                  b.build(),\n                                  true);\n    termAtt = tokensOut.addAttribute(CharTermAttribute.class);\n    posIncrAtt = tokensOut.addAttribute(PositionIncrementAttribute.class);\n    offsetAtt = tokensOut.addAttribute(OffsetAttribute.class);\n\n    // Make sure endOffset inherits from previous input token:\n    verify(\"a\", \"a b:1\");\n  }\n\n","sourceOld":"  public void testOutputHangsOffEnd() throws Exception {\n    b = new SynonymMap.Builder(true);\n    final boolean keepOrig = false;\n    // b hangs off the end (no input token under it):\n    add(\"a\", \"a b\", keepOrig);\n    final SynonymMap map = b.build();\n    tokensIn = new MockTokenizer(new StringReader(\"a\"),\n                                 MockTokenizer.WHITESPACE,\n                                 true);\n    tokensIn.reset();\n    assertTrue(tokensIn.incrementToken());\n    assertFalse(tokensIn.incrementToken());\n    tokensIn.end();\n    tokensIn.close();\n\n    tokensOut = new SynonymFilter(tokensIn,\n                                     b.build(),\n                                     true);\n    termAtt = tokensOut.addAttribute(CharTermAttribute.class);\n    posIncrAtt = tokensOut.addAttribute(PositionIncrementAttribute.class);\n    offsetAtt = tokensOut.addAttribute(OffsetAttribute.class);\n\n    // Make sure endOffset inherits from previous input token:\n    verify(\"a\", \"a b:1\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ffbcd36aff3bb411177ed61f02fb3d3aa9588d27","date":1333918532,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymMapFilter#testOutputHangsOffEnd().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymMapFilter#testOutputHangsOffEnd().mjava","sourceNew":"  public void testOutputHangsOffEnd() throws Exception {\n    b = new SynonymMap.Builder(true);\n    final boolean keepOrig = false;\n    // b hangs off the end (no input token under it):\n    add(\"a\", \"a b\", keepOrig);\n    tokensIn = new MockTokenizer(new StringReader(\"a\"),\n                                 MockTokenizer.WHITESPACE,\n                                 true);\n    tokensIn.reset();\n    assertTrue(tokensIn.incrementToken());\n    assertFalse(tokensIn.incrementToken());\n    tokensIn.end();\n    tokensIn.close();\n\n    tokensOut = new SynonymFilter(tokensIn,\n                                  b.build(),\n                                  true);\n    termAtt = tokensOut.addAttribute(CharTermAttribute.class);\n    posIncrAtt = tokensOut.addAttribute(PositionIncrementAttribute.class);\n    offsetAtt = tokensOut.addAttribute(OffsetAttribute.class);\n    posLenAtt = tokensOut.addAttribute(PositionLengthAttribute.class);\n\n    // Make sure endOffset inherits from previous input token:\n    verify(\"a\", \"a b:1\");\n  }\n\n","sourceOld":"  public void testOutputHangsOffEnd() throws Exception {\n    b = new SynonymMap.Builder(true);\n    final boolean keepOrig = false;\n    // b hangs off the end (no input token under it):\n    add(\"a\", \"a b\", keepOrig);\n    tokensIn = new MockTokenizer(new StringReader(\"a\"),\n                                 MockTokenizer.WHITESPACE,\n                                 true);\n    tokensIn.reset();\n    assertTrue(tokensIn.incrementToken());\n    assertFalse(tokensIn.incrementToken());\n    tokensIn.end();\n    tokensIn.close();\n\n    tokensOut = new SynonymFilter(tokensIn,\n                                  b.build(),\n                                  true);\n    termAtt = tokensOut.addAttribute(CharTermAttribute.class);\n    posIncrAtt = tokensOut.addAttribute(PositionIncrementAttribute.class);\n    offsetAtt = tokensOut.addAttribute(OffsetAttribute.class);\n\n    // Make sure endOffset inherits from previous input token:\n    verify(\"a\", \"a b:1\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymMapFilter#testOutputHangsOffEnd().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymMapFilter#testOutputHangsOffEnd().mjava","sourceNew":"  public void testOutputHangsOffEnd() throws Exception {\n    b = new SynonymMap.Builder(true);\n    final boolean keepOrig = false;\n    // b hangs off the end (no input token under it):\n    add(\"a\", \"a b\", keepOrig);\n    tokensIn = new MockTokenizer(new StringReader(\"a\"),\n                                 MockTokenizer.WHITESPACE,\n                                 true);\n    tokensIn.reset();\n    assertTrue(tokensIn.incrementToken());\n    assertFalse(tokensIn.incrementToken());\n    tokensIn.end();\n    tokensIn.close();\n\n    tokensOut = new SynonymFilter(tokensIn,\n                                  b.build(),\n                                  true);\n    termAtt = tokensOut.addAttribute(CharTermAttribute.class);\n    posIncrAtt = tokensOut.addAttribute(PositionIncrementAttribute.class);\n    offsetAtt = tokensOut.addAttribute(OffsetAttribute.class);\n    posLenAtt = tokensOut.addAttribute(PositionLengthAttribute.class);\n\n    // Make sure endOffset inherits from previous input token:\n    verify(\"a\", \"a b:1\");\n  }\n\n","sourceOld":"  public void testOutputHangsOffEnd() throws Exception {\n    b = new SynonymMap.Builder(true);\n    final boolean keepOrig = false;\n    // b hangs off the end (no input token under it):\n    add(\"a\", \"a b\", keepOrig);\n    tokensIn = new MockTokenizer(new StringReader(\"a\"),\n                                 MockTokenizer.WHITESPACE,\n                                 true);\n    tokensIn.reset();\n    assertTrue(tokensIn.incrementToken());\n    assertFalse(tokensIn.incrementToken());\n    tokensIn.end();\n    tokensIn.close();\n\n    tokensOut = new SynonymFilter(tokensIn,\n                                  b.build(),\n                                  true);\n    termAtt = tokensOut.addAttribute(CharTermAttribute.class);\n    posIncrAtt = tokensOut.addAttribute(PositionIncrementAttribute.class);\n    offsetAtt = tokensOut.addAttribute(OffsetAttribute.class);\n    posLenAtt = tokensOut.addAttribute(PositionLengthAttribute.class);\n\n    // Make sure endOffset inherits from previous input token:\n    verify(\"a\", \"a b:1\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ffbcd36aff3bb411177ed61f02fb3d3aa9588d27"],"b7c49a1b0f95bf8ecc502e6d44d79e4809dbf8ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ffbcd36aff3bb411177ed61f02fb3d3aa9588d27":["6795c6bc2f5a6b2a2230cb20ff4744003faf7802"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6795c6bc2f5a6b2a2230cb20ff4744003faf7802":["b7c49a1b0f95bf8ecc502e6d44d79e4809dbf8ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b7c49a1b0f95bf8ecc502e6d44d79e4809dbf8ee":["6795c6bc2f5a6b2a2230cb20ff4744003faf7802"],"ffbcd36aff3bb411177ed61f02fb3d3aa9588d27":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b7c49a1b0f95bf8ecc502e6d44d79e4809dbf8ee"],"6795c6bc2f5a6b2a2230cb20ff4744003faf7802":["ffbcd36aff3bb411177ed61f02fb3d3aa9588d27"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}