{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HavingStream#read().mjava","commits":[{"id":"36b1ce25b5b465615c00f409ce694664abbe7bd2","date":1481836328,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HavingStream#read().mjava","pathOld":"/dev/null","sourceNew":"  public Tuple read() throws IOException {\n    while(true) {\n      Tuple tuple = stream.read();\n      if(tuple.EOF) {\n        return tuple;\n      }\n\n      op.operate(tuple);\n\n      if(op.evaluate()) {\n        return tuple;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"addd43cfe13659bd5dbdfe7aaaf50b64a419be42","date":1483473183,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HavingStream#read().mjava","pathOld":"/dev/null","sourceNew":"  public Tuple read() throws IOException {\n    while(true) {\n      Tuple tuple = stream.read();\n      if(tuple.EOF) {\n        return tuple;\n      }\n\n      op.operate(tuple);\n\n      if(op.evaluate()) {\n        return tuple;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"88073e8783f450d4c0218decc2f001a1ac2c7e7c","date":1486705191,"type":3,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HavingStream#read().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HavingStream#read().mjava","sourceNew":"  public Tuple read() throws IOException {\n    while(true) {\n      Tuple tuple = stream.read();\n      if(tuple.EOF) {\n        return tuple;\n      }\n\n      if(evaluator.evaluate(tuple)){\n        return tuple;\n      }\n    }\n  }\n\n","sourceOld":"  public Tuple read() throws IOException {\n    while(true) {\n      Tuple tuple = stream.read();\n      if(tuple.EOF) {\n        return tuple;\n      }\n\n      op.operate(tuple);\n\n      if(op.evaluate()) {\n        return tuple;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56ebde9c21d35a39c07989c178372e901ad377da","date":1492023892,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HavingStream#read().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HavingStream#read().mjava","sourceNew":"  public Tuple read() throws IOException {\n    while(true) {\n      Tuple tuple = stream.read();\n      if(tuple.EOF) {\n        return tuple;\n      }\n\n      streamContext.getTupleContext().clear();\n      if(evaluator.evaluate(tuple)){\n        return tuple;\n      }\n    }\n  }\n\n","sourceOld":"  public Tuple read() throws IOException {\n    while(true) {\n      Tuple tuple = stream.read();\n      if(tuple.EOF) {\n        return tuple;\n      }\n\n      if(evaluator.evaluate(tuple)){\n        return tuple;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HavingStream#read().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HavingStream#read().mjava","sourceNew":"  public Tuple read() throws IOException {\n    while(true) {\n      Tuple tuple = stream.read();\n      if(tuple.EOF) {\n        return tuple;\n      }\n\n      streamContext.getTupleContext().clear();\n      if(evaluator.evaluate(tuple)){\n        return tuple;\n      }\n    }\n  }\n\n","sourceOld":"  public Tuple read() throws IOException {\n    while(true) {\n      Tuple tuple = stream.read();\n      if(tuple.EOF) {\n        return tuple;\n      }\n\n      if(evaluator.evaluate(tuple)){\n        return tuple;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1e7de64990e3928b90142a52fb92eeff556475","date":1503713257,"type":3,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HavingStream#read().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HavingStream#read().mjava","sourceNew":"  public Tuple read() throws IOException {\n    while(true) {\n      Tuple tuple = stream.read();\n      if(tuple.EOF) {\n        return tuple;\n      }\n\n      streamContext.getTupleContext().clear();\n      if((boolean)evaluator.evaluate(tuple)){\n        return tuple;\n      }\n    }\n  }\n\n","sourceOld":"  public Tuple read() throws IOException {\n    while(true) {\n      Tuple tuple = stream.read();\n      if(tuple.EOF) {\n        return tuple;\n      }\n\n      streamContext.getTupleContext().clear();\n      if(evaluator.evaluate(tuple)){\n        return tuple;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45c28dbb559366e1f4ef8077346552bfb3f7ecf6","date":1503738439,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HavingStream#read().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HavingStream#read().mjava","sourceNew":"  public Tuple read() throws IOException {\n    while(true) {\n      Tuple tuple = stream.read();\n      if(tuple.EOF) {\n        return tuple;\n      }\n\n      streamContext.getTupleContext().clear();\n      if((boolean)evaluator.evaluate(tuple)){\n        return tuple;\n      }\n    }\n  }\n\n","sourceOld":"  public Tuple read() throws IOException {\n    while(true) {\n      Tuple tuple = stream.read();\n      if(tuple.EOF) {\n        return tuple;\n      }\n\n      streamContext.getTupleContext().clear();\n      if(evaluator.evaluate(tuple)){\n        return tuple;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HavingStream#read().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HavingStream#read().mjava","sourceNew":"  public Tuple read() throws IOException {\n    while(true) {\n      Tuple tuple = stream.read();\n      if(tuple.EOF) {\n        return tuple;\n      }\n\n      streamContext.getTupleContext().clear();\n      if((boolean)evaluator.evaluate(tuple)){\n        return tuple;\n      }\n    }\n  }\n\n","sourceOld":"  public Tuple read() throws IOException {\n    while(true) {\n      Tuple tuple = stream.read();\n      if(tuple.EOF) {\n        return tuple;\n      }\n\n      streamContext.getTupleContext().clear();\n      if(evaluator.evaluate(tuple)){\n        return tuple;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["88073e8783f450d4c0218decc2f001a1ac2c7e7c"],"88073e8783f450d4c0218decc2f001a1ac2c7e7c":["addd43cfe13659bd5dbdfe7aaaf50b64a419be42"],"56ebde9c21d35a39c07989c178372e901ad377da":["88073e8783f450d4c0218decc2f001a1ac2c7e7c"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","45c28dbb559366e1f4ef8077346552bfb3f7ecf6"],"36b1ce25b5b465615c00f409ce694664abbe7bd2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"45c28dbb559366e1f4ef8077346552bfb3f7ecf6":["56ebde9c21d35a39c07989c178372e901ad377da","ba1e7de64990e3928b90142a52fb92eeff556475"],"ba1e7de64990e3928b90142a52fb92eeff556475":["56ebde9c21d35a39c07989c178372e901ad377da"],"addd43cfe13659bd5dbdfe7aaaf50b64a419be42":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["3a7809d1d753b67f48b1a706e17034bf8b624ea3"],"88073e8783f450d4c0218decc2f001a1ac2c7e7c":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","56ebde9c21d35a39c07989c178372e901ad377da"],"56ebde9c21d35a39c07989c178372e901ad377da":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6","ba1e7de64990e3928b90142a52fb92eeff556475"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"36b1ce25b5b465615c00f409ce694664abbe7bd2":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36b1ce25b5b465615c00f409ce694664abbe7bd2","addd43cfe13659bd5dbdfe7aaaf50b64a419be42"],"45c28dbb559366e1f4ef8077346552bfb3f7ecf6":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ba1e7de64990e3928b90142a52fb92eeff556475":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6"],"addd43cfe13659bd5dbdfe7aaaf50b64a419be42":["88073e8783f450d4c0218decc2f001a1ac2c7e7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","36b1ce25b5b465615c00f409ce694664abbe7bd2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}