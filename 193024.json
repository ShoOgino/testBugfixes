{"path":"lucene/core/src/test/org/apache/lucene/store/TestByteBuffersDataInput#testSlicingWindow().mjava","commits":[{"id":"fad01f81cc24b33263ccec7dbff3fb907702f91e","date":1535461373,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestByteBuffersDataInput#testSlicingWindow().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSlicingWindow() throws Exception {\n    ByteBuffersDataOutput dst = new ByteBuffersDataOutput();\n    assertEquals(0, dst.toDataInput().slice(0, 0).size());;\n\n    dst.writeBytes(randomBytesOfLength(1024 * 8));\n    ByteBuffersDataInput in = dst.toDataInput();\n    for (int offset = 0, max = (int) dst.size(); offset < max; offset++) {\n      assertEquals(0, in.slice(offset, 0).size());\n      assertEquals(1, in.slice(offset, 1).size());\n      \n      int window = Math.min(max - offset, 1024);\n      assertEquals(window, in.slice(offset, window).size());\n    }\n    assertEquals(0, in.slice((int) dst.size(), 0).size());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fad01f81cc24b33263ccec7dbff3fb907702f91e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fad01f81cc24b33263ccec7dbff3fb907702f91e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fad01f81cc24b33263ccec7dbff3fb907702f91e"],"fad01f81cc24b33263ccec7dbff3fb907702f91e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}