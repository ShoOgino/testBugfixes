{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/SidedPlane#SidedPlane(double,double,double,Vector,Vector).mjava","commits":[{"id":"7fe41964e49958f662028ea7ed8c224e0955edae","date":1462534610,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/SidedPlane#SidedPlane(double,double,double,Vector,Vector).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Construct a sided plane from a pair of vectors describing points, and including\n   * origin, plus a point p which describes the side.\n   *\n   * @param pX point X to evaluate\n   * @param pY point Y to evaluate\n   * @param pZ point Z to evaluate\n   * @param A is the first in-plane point\n   * @param B is the second in-plane point\n   */\n  public SidedPlane(final double pX, final double pY, final double pZ, final Vector A, final Vector B) {\n    super(A, B);\n    sigNum = Math.signum(evaluate(pX, pY, pZ));\n    if (sigNum == 0.0)\n      throw new IllegalArgumentException(\"Cannot determine sidedness because check point is on plane.\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","date":1462576651,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/SidedPlane#SidedPlane(double,double,double,Vector,Vector).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Construct a sided plane from a pair of vectors describing points, and including\n   * origin, plus a point p which describes the side.\n   *\n   * @param pX point X to evaluate\n   * @param pY point Y to evaluate\n   * @param pZ point Z to evaluate\n   * @param A is the first in-plane point\n   * @param B is the second in-plane point\n   */\n  public SidedPlane(final double pX, final double pY, final double pZ, final Vector A, final Vector B) {\n    super(A, B);\n    sigNum = Math.signum(evaluate(pX, pY, pZ));\n    if (sigNum == 0.0)\n      throw new IllegalArgumentException(\"Cannot determine sidedness because check point is on plane.\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/SidedPlane#SidedPlane(double,double,double,Vector,Vector).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Construct a sided plane from a pair of vectors describing points, and including\n   * origin, plus a point p which describes the side.\n   *\n   * @param pX point X to evaluate\n   * @param pY point Y to evaluate\n   * @param pZ point Z to evaluate\n   * @param A is the first in-plane point\n   * @param B is the second in-plane point\n   */\n  public SidedPlane(final double pX, final double pY, final double pZ, final Vector A, final Vector B) {\n    super(A, B);\n    sigNum = Math.signum(evaluate(pX, pY, pZ));\n    if (sigNum == 0.0)\n      throw new IllegalArgumentException(\"Cannot determine sidedness because check point is on plane.\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7fe41964e49958f662028ea7ed8c224e0955edae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7fe41964e49958f662028ea7ed8c224e0955edae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7fe41964e49958f662028ea7ed8c224e0955edae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7fe41964e49958f662028ea7ed8c224e0955edae"]},"commit2Childs":{"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","7fe41964e49958f662028ea7ed8c224e0955edae","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"7fe41964e49958f662028ea7ed8c224e0955edae":["a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}