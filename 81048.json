{"path":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/fetcher/GZipTest#main(String[]).mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/fetcher/GZipTest#main(String[]).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * The main program for the GZipTest class\n     *\n     * @param args  The command line arguments\n     */\n    public static void main(String[] args)\n    {\n        try\n        {\n            String url = \"http://speechdat.phonetik.uni-muenchen.de/speechdt//speechDB/FIXED1SL/BLOCK00/SES0006/A10006O5.aif\";\n\n            ByteArrayOutputStream a = new ByteArrayOutputStream(url.length());\n            GZIPOutputStream g = new GZIPOutputStream(a);\n            OutputStreamWriter o = new OutputStreamWriter(g,\"ISO-8859-1\");\n\n            o.write(url);\n            o.close();\n            g.finish();\n            byte[] array = a.toByteArray();\n            System.out.println(\"URL: \" + url + \" \\n Length: \" + url.length() + \"\\n zipped: \" + array.length\n                    );\n        }\n        catch (Exception e)\n        { e.printStackTrace();\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/fetcher/GZipTest#main(String[]).mjava","sourceNew":null,"sourceOld":"    /**\n     * The main program for the GZipTest class\n     *\n     * @param args  The command line arguments\n     */\n    public static void main(String[] args)\n    {\n        try\n        {\n            String url = \"http://speechdat.phonetik.uni-muenchen.de/speechdt//speechDB/FIXED1SL/BLOCK00/SES0006/A10006O5.aif\";\n\n            ByteArrayOutputStream a = new ByteArrayOutputStream(url.length());\n            GZIPOutputStream g = new GZIPOutputStream(a);\n            OutputStreamWriter o = new OutputStreamWriter(g,\"ISO-8859-1\");\n\n            o.write(url);\n            o.close();\n            g.finish();\n            byte[] array = a.toByteArray();\n            System.out.println(\"URL: \" + url + \" \\n Length: \" + url.length() + \"\\n zipped: \" + array.length\n                    );\n        }\n        catch (Exception e)\n        { e.printStackTrace();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["05d36e0b328ec96237035fbcca240e73631396e5"],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05d36e0b328ec96237035fbcca240e73631396e5":["afc16d717d9ed1a8e45371668ca6de674164d624"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}