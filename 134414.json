{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","sourceNew":"  public void testRandomChains() throws Throwable {\n    int numIterations = atLeast(20);\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong());\n      if (VERBOSE) {\n        System.out.println(\"Creating random analyzer:\" + a);\n      }\n      try {\n        checkRandomData(random, a, 1000, 20, false,\n                        false /* We already validate our own offsets... */);\n      } catch (Throwable e) {\n        System.err.println(\"Exception from random analyzer: \" + a);\n        throw e;\n      }\n    }\n  }\n\n","sourceOld":"  public void testRandomChains() throws Throwable {\n    int numIterations = atLeast(20);\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong());\n      if (VERBOSE) {\n        System.out.println(\"Creating random analyzer:\" + a);\n      }\n      try {\n        checkRandomData(random, a, 1000, 20, false,\n                        false /* We already validate our own offsets... */);\n      } catch (Throwable e) {\n        System.err.println(\"Exception from random analyzer: \" + a);\n        throw e;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d135d0e0e3d4b83c56b666e6cf8c585c17d2fff9","date":1334679794,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","sourceNew":"  public void testRandomChains() throws Throwable {\n    int numIterations = atLeast(10);\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong());\n      if (VERBOSE) {\n        System.out.println(\"Creating random analyzer:\" + a);\n      }\n      try {\n        checkRandomData(random, a, 200, 20, false,\n                        false /* We already validate our own offsets... */);\n      } catch (Throwable e) {\n        System.err.println(\"Exception from random analyzer: \" + a);\n        throw e;\n      }\n    }\n  }\n\n","sourceOld":"  public void testRandomChains() throws Throwable {\n    int numIterations = atLeast(20);\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong());\n      if (VERBOSE) {\n        System.out.println(\"Creating random analyzer:\" + a);\n      }\n      try {\n        checkRandomData(random, a, 1000, 20, false,\n                        false /* We already validate our own offsets... */);\n      } catch (Throwable e) {\n        System.err.println(\"Exception from random analyzer: \" + a);\n        throw e;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["c85fa43e6918808743daa7847ba0264373af687f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c85fa43e6918808743daa7847ba0264373af687f","date":1395166336,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","sourceNew":"  public void testRandomChains() throws Throwable {\n    int numIterations = atLeast(20);\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong());\n      if (VERBOSE) {\n        System.out.println(\"Creating random analyzer:\" + a);\n      }\n      try {\n        checkRandomData(random, a, 500*RANDOM_MULTIPLIER, 20, false,\n                        false /* We already validate our own offsets... */);\n      } catch (Throwable e) {\n        System.err.println(\"Exception from random analyzer: \" + a);\n        throw e;\n      }\n    }\n  }\n\n","sourceOld":"  public void testRandomChains() throws Throwable {\n    int numIterations = atLeast(10);\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong());\n      if (VERBOSE) {\n        System.out.println(\"Creating random analyzer:\" + a);\n      }\n      try {\n        checkRandomData(random, a, 200, 20, false,\n                        false /* We already validate our own offsets... */);\n      } catch (Throwable e) {\n        System.err.println(\"Exception from random analyzer: \" + a);\n        throw e;\n      }\n    }\n  }\n\n","bugFix":["d135d0e0e3d4b83c56b666e6cf8c585c17d2fff9"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad53237cd844da2787711b60f12768c5d6288b3b","date":1417053965,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","sourceNew":"  public void testRandomChains() throws Throwable {\n    int numIterations = TEST_NIGHTLY ? atLeast(20) : 3;\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong());\n      if (VERBOSE) {\n        System.out.println(\"Creating random analyzer:\" + a);\n      }\n      try {\n        checkRandomData(random, a, 500*RANDOM_MULTIPLIER, 20, false,\n                        false /* We already validate our own offsets... */);\n      } catch (Throwable e) {\n        System.err.println(\"Exception from random analyzer: \" + a);\n        throw e;\n      }\n    }\n  }\n\n","sourceOld":"  public void testRandomChains() throws Throwable {\n    int numIterations = atLeast(20);\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong());\n      if (VERBOSE) {\n        System.out.println(\"Creating random analyzer:\" + a);\n      }\n      try {\n        checkRandomData(random, a, 500*RANDOM_MULTIPLIER, 20, false,\n                        false /* We already validate our own offsets... */);\n      } catch (Throwable e) {\n        System.err.println(\"Exception from random analyzer: \" + a);\n        throw e;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","sourceNew":"  public void testRandomChains() throws Throwable {\n    int numIterations = TEST_NIGHTLY ? atLeast(20) : 3;\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      try (MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong())) {\n        if (VERBOSE) {\n          System.out.println(\"Creating random analyzer:\" + a);\n        }\n        try {\n          checkRandomData(random, a, 500*RANDOM_MULTIPLIER, 20, false,\n              false /* We already validate our own offsets... */);\n        } catch (Throwable e) {\n          System.err.println(\"Exception from random analyzer: \" + a);\n          throw e;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void testRandomChains() throws Throwable {\n    int numIterations = TEST_NIGHTLY ? atLeast(20) : 3;\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong());\n      if (VERBOSE) {\n        System.out.println(\"Creating random analyzer:\" + a);\n      }\n      try {\n        checkRandomData(random, a, 500*RANDOM_MULTIPLIER, 20, false,\n                        false /* We already validate our own offsets... */);\n      } catch (Throwable e) {\n        System.err.println(\"Exception from random analyzer: \" + a);\n        throw e;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","sourceNew":"  public void testRandomChains() throws Throwable {\n    int numIterations = TEST_NIGHTLY ? atLeast(20) : 3;\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      try (MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong())) {\n        if (VERBOSE) {\n          System.out.println(\"Creating random analyzer:\" + a);\n        }\n        try {\n          checkRandomData(random, a, 500*RANDOM_MULTIPLIER, 20, false,\n              false /* We already validate our own offsets... */);\n        } catch (Throwable e) {\n          System.err.println(\"Exception from random analyzer: \" + a);\n          throw e;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void testRandomChains() throws Throwable {\n    int numIterations = TEST_NIGHTLY ? atLeast(20) : 3;\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong());\n      if (VERBOSE) {\n        System.out.println(\"Creating random analyzer:\" + a);\n      }\n      try {\n        checkRandomData(random, a, 500*RANDOM_MULTIPLIER, 20, false,\n                        false /* We already validate our own offsets... */);\n      } catch (Throwable e) {\n        System.err.println(\"Exception from random analyzer: \" + a);\n        throw e;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea4107f60b9f95623c16025c9c247412ff809092","date":1468333987,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","sourceNew":"  public void testRandomChains() throws Throwable {\n    int numIterations = TEST_NIGHTLY ? atLeast(20) : 3;\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      try (MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong())) {\n        if (VERBOSE) {\n          System.out.println(\"Creating random analyzer:\" + a);\n        }\n        try {\n          checkNormalize(a);\n          checkRandomData(random, a, 500*RANDOM_MULTIPLIER, 20, false,\n              false /* We already validate our own offsets... */);\n        } catch (Throwable e) {\n          System.err.println(\"Exception from random analyzer: \" + a);\n          throw e;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void testRandomChains() throws Throwable {\n    int numIterations = TEST_NIGHTLY ? atLeast(20) : 3;\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      try (MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong())) {\n        if (VERBOSE) {\n          System.out.println(\"Creating random analyzer:\" + a);\n        }\n        try {\n          checkRandomData(random, a, 500*RANDOM_MULTIPLIER, 20, false,\n              false /* We already validate our own offsets... */);\n        } catch (Throwable e) {\n          System.err.println(\"Exception from random analyzer: \" + a);\n          throw e;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","sourceNew":"  public void testRandomChains() throws Throwable {\n    int numIterations = TEST_NIGHTLY ? atLeast(20) : 3;\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      try (MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong())) {\n        if (VERBOSE) {\n          System.out.println(\"Creating random analyzer:\" + a);\n        }\n        try {\n          checkNormalize(a);\n          checkRandomData(random, a, 500*RANDOM_MULTIPLIER, 20, false,\n              false /* We already validate our own offsets... */);\n        } catch (Throwable e) {\n          System.err.println(\"Exception from random analyzer: \" + a);\n          throw e;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void testRandomChains() throws Throwable {\n    int numIterations = TEST_NIGHTLY ? atLeast(20) : 3;\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      try (MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong())) {\n        if (VERBOSE) {\n          System.out.println(\"Creating random analyzer:\" + a);\n        }\n        try {\n          checkRandomData(random, a, 500*RANDOM_MULTIPLIER, 20, false,\n              false /* We already validate our own offsets... */);\n        } catch (Throwable e) {\n          System.err.println(\"Exception from random analyzer: \" + a);\n          throw e;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e16ac84f9e5d560008fe1554462ff8b853b3d3c","date":1520142134,"type":3,"author":"Erick","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","sourceNew":"  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\")\n  public void testRandomChains() throws Throwable {\n    int numIterations = TEST_NIGHTLY ? atLeast(20) : 3;\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      try (MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong())) {\n        if (VERBOSE) {\n          System.out.println(\"Creating random analyzer:\" + a);\n        }\n        try {\n          checkNormalize(a);\n          checkRandomData(random, a, 500*RANDOM_MULTIPLIER, 20, false,\n              false /* We already validate our own offsets... */);\n        } catch (Throwable e) {\n          System.err.println(\"Exception from random analyzer: \" + a);\n          throw e;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void testRandomChains() throws Throwable {\n    int numIterations = TEST_NIGHTLY ? atLeast(20) : 3;\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      try (MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong())) {\n        if (VERBOSE) {\n          System.out.println(\"Creating random analyzer:\" + a);\n        }\n        try {\n          checkNormalize(a);\n          checkRandomData(random, a, 500*RANDOM_MULTIPLIER, 20, false,\n              false /* We already validate our own offsets... */);\n        } catch (Throwable e) {\n          System.err.println(\"Exception from random analyzer: \" + a);\n          throw e;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1adeb0b5d763c7dafa433a7c20552098f7bc5ff1","date":1520171050,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","sourceNew":"  public void testRandomChains() throws Throwable {\n    int numIterations = TEST_NIGHTLY ? atLeast(20) : 3;\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      try (MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong())) {\n        if (VERBOSE) {\n          System.out.println(\"Creating random analyzer:\" + a);\n        }\n        try {\n          checkNormalize(a);\n          checkRandomData(random, a, 500*RANDOM_MULTIPLIER, 20, false,\n              false /* We already validate our own offsets... */);\n        } catch (Throwable e) {\n          System.err.println(\"Exception from random analyzer: \" + a);\n          throw e;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\")\n  public void testRandomChains() throws Throwable {\n    int numIterations = TEST_NIGHTLY ? atLeast(20) : 3;\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      try (MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong())) {\n        if (VERBOSE) {\n          System.out.println(\"Creating random analyzer:\" + a);\n        }\n        try {\n          checkNormalize(a);\n          checkRandomData(random, a, 500*RANDOM_MULTIPLIER, 20, false,\n              false /* We already validate our own offsets... */);\n        } catch (Throwable e) {\n          System.err.println(\"Exception from random analyzer: \" + a);\n          throw e;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a1c374690db69470f6aa4bffc43dcacf1f4e3e49","date":1529007399,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","sourceNew":"  @LuceneTestCase.BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 12-Jun-2018\n  public void testRandomChains() throws Throwable {\n    int numIterations = TEST_NIGHTLY ? atLeast(20) : 3;\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      try (MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong())) {\n        if (VERBOSE) {\n          System.out.println(\"Creating random analyzer:\" + a);\n        }\n        try {\n          checkNormalize(a);\n          checkRandomData(random, a, 500*RANDOM_MULTIPLIER, 20, false,\n              false /* We already validate our own offsets... */);\n        } catch (Throwable e) {\n          System.err.println(\"Exception from random analyzer: \" + a);\n          throw e;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void testRandomChains() throws Throwable {\n    int numIterations = TEST_NIGHTLY ? atLeast(20) : 3;\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      try (MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong())) {\n        if (VERBOSE) {\n          System.out.println(\"Creating random analyzer:\" + a);\n        }\n        try {\n          checkNormalize(a);\n          checkRandomData(random, a, 500*RANDOM_MULTIPLIER, 20, false,\n              false /* We already validate our own offsets... */);\n        } catch (Throwable e) {\n          System.err.println(\"Exception from random analyzer: \" + a);\n          throw e;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8c072c5e1c6ed1643a8c71758930b6b13ccbd43","date":1529312258,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains#testRandomChains().mjava","sourceNew":"  public void testRandomChains() throws Throwable {\n    int numIterations = TEST_NIGHTLY ? atLeast(20) : 3;\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      try (MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong())) {\n        if (VERBOSE) {\n          System.out.println(\"Creating random analyzer:\" + a);\n        }\n        try {\n          checkNormalize(a);\n          checkRandomData(random, a, 500*RANDOM_MULTIPLIER, 20, false,\n              false /* We already validate our own offsets... */);\n        } catch (Throwable e) {\n          System.err.println(\"Exception from random analyzer: \" + a);\n          throw e;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @LuceneTestCase.BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 12-Jun-2018\n  public void testRandomChains() throws Throwable {\n    int numIterations = TEST_NIGHTLY ? atLeast(20) : 3;\n    Random random = random();\n    for (int i = 0; i < numIterations; i++) {\n      try (MockRandomAnalyzer a = new MockRandomAnalyzer(random.nextLong())) {\n        if (VERBOSE) {\n          System.out.println(\"Creating random analyzer:\" + a);\n        }\n        try {\n          checkNormalize(a);\n          checkRandomData(random, a, 500*RANDOM_MULTIPLIER, 20, false,\n              false /* We already validate our own offsets... */);\n        } catch (Throwable e) {\n          System.err.println(\"Exception from random analyzer: \" + a);\n          throw e;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e16ac84f9e5d560008fe1554462ff8b853b3d3c":["ea4107f60b9f95623c16025c9c247412ff809092"],"d135d0e0e3d4b83c56b666e6cf8c585c17d2fff9":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b8c072c5e1c6ed1643a8c71758930b6b13ccbd43":["a1c374690db69470f6aa4bffc43dcacf1f4e3e49"],"ad53237cd844da2787711b60f12768c5d6288b3b":["c85fa43e6918808743daa7847ba0264373af687f"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a56958d7f71a28824f20031ffbb2e13502a0274e","ea4107f60b9f95623c16025c9c247412ff809092"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["ad53237cd844da2787711b60f12768c5d6288b3b","a56958d7f71a28824f20031ffbb2e13502a0274e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ea4107f60b9f95623c16025c9c247412ff809092":["a56958d7f71a28824f20031ffbb2e13502a0274e"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["ad53237cd844da2787711b60f12768c5d6288b3b"],"c85fa43e6918808743daa7847ba0264373af687f":["d135d0e0e3d4b83c56b666e6cf8c585c17d2fff9"],"1adeb0b5d763c7dafa433a7c20552098f7bc5ff1":["7e16ac84f9e5d560008fe1554462ff8b853b3d3c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b8c072c5e1c6ed1643a8c71758930b6b13ccbd43"],"a1c374690db69470f6aa4bffc43dcacf1f4e3e49":["1adeb0b5d763c7dafa433a7c20552098f7bc5ff1"]},"commit2Childs":{"7e16ac84f9e5d560008fe1554462ff8b853b3d3c":["1adeb0b5d763c7dafa433a7c20552098f7bc5ff1"],"d135d0e0e3d4b83c56b666e6cf8c585c17d2fff9":["c85fa43e6918808743daa7847ba0264373af687f"],"b8c072c5e1c6ed1643a8c71758930b6b13ccbd43":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad53237cd844da2787711b60f12768c5d6288b3b":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d135d0e0e3d4b83c56b666e6cf8c585c17d2fff9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ea4107f60b9f95623c16025c9c247412ff809092":["7e16ac84f9e5d560008fe1554462ff8b853b3d3c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ea4107f60b9f95623c16025c9c247412ff809092"],"c85fa43e6918808743daa7847ba0264373af687f":["ad53237cd844da2787711b60f12768c5d6288b3b"],"1adeb0b5d763c7dafa433a7c20552098f7bc5ff1":["a1c374690db69470f6aa4bffc43dcacf1f4e3e49"],"a1c374690db69470f6aa4bffc43dcacf1f4e3e49":["b8c072c5e1c6ed1643a8c71758930b6b13ccbd43"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}