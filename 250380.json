{"path":"src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","commits":[{"id":"c0fca88525a75f64dd5d66cc89ad355e9ff10ed5","date":1174335919,"type":0,"author":"Mike Klaas","isMerge":false,"pathNew":"src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","pathOld":"/dev/null","sourceNew":"  public void testRequireUniqueKey() throws Exception \r\n  {\r\n    SolrCore core = SolrCore.getSolrCore();\r\n    \r\n    UpdateHandler updater = core.getUpdateHandler();\r\n    \r\n    AddUpdateCommand cmd = new AddUpdateCommand();\r\n    cmd.overwriteCommitted = true;\r\n    cmd.overwritePending = true;\r\n    cmd.allowDups = false;\r\n    \r\n    // Add a valid document\r\n    cmd.doc = new Document();\r\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.UN_TOKENIZED ) );\r\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\r\n    updater.addDoc( cmd );\r\n    \r\n    // Add a document with multiple ids\r\n    cmd.indexedId = null;  // reset the id for this add\r\n    cmd.doc = new Document();\r\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.UN_TOKENIZED ) );\r\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.UN_TOKENIZED ) );\r\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\r\n    try {\r\n      updater.addDoc( cmd );\r\n      fail( \"added a document with multiple ids\" );\r\n    }\r\n    catch( SolrException ex ) { } // expected\r\n\r\n    // Add a document without an id\r\n    cmd.indexedId = null;  // reset the id for this add\r\n    cmd.doc = new Document();\r\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\r\n    try {\r\n      updater.addDoc( cmd );\r\n      fail( \"added a document without an ids\" );\r\n    }\r\n    catch( SolrException ex ) { } // expected\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c90f01e1c0f11ee52212ab38c6d4393b3be8a646","date":1223059437,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","pathOld":"src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","sourceNew":"  public void testRequireUniqueKey() throws Exception \r\n  {\r\n    SolrCore core = h.getCore();\r\n    \r\n    UpdateHandler updater = core.getUpdateHandler();\r\n    \r\n    AddUpdateCommand cmd = new AddUpdateCommand();\r\n    cmd.overwriteCommitted = true;\r\n    cmd.overwritePending = true;\r\n    cmd.allowDups = false;\r\n    \r\n    // Add a valid document\r\n    cmd.doc = new Document();\r\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.UN_TOKENIZED ) );\r\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\r\n    updater.addDoc( cmd );\r\n    \r\n    // Add a document with multiple ids\r\n    cmd.indexedId = null;  // reset the id for this add\r\n    cmd.doc = new Document();\r\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.UN_TOKENIZED ) );\r\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.UN_TOKENIZED ) );\r\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\r\n    try {\r\n      updater.addDoc( cmd );\r\n      fail( \"added a document with multiple ids\" );\r\n    }\r\n    catch( SolrException ex ) { } // expected\r\n\r\n    // Add a document without an id\r\n    cmd.indexedId = null;  // reset the id for this add\r\n    cmd.doc = new Document();\r\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\r\n    try {\r\n      updater.addDoc( cmd );\r\n      fail( \"added a document without an ids\" );\r\n    }\r\n    catch( SolrException ex ) { } // expected\r\n  }\r\n\n","sourceOld":"  public void testRequireUniqueKey() throws Exception \r\n  {\r\n    SolrCore core = SolrCore.getSolrCore();\r\n    \r\n    UpdateHandler updater = core.getUpdateHandler();\r\n    \r\n    AddUpdateCommand cmd = new AddUpdateCommand();\r\n    cmd.overwriteCommitted = true;\r\n    cmd.overwritePending = true;\r\n    cmd.allowDups = false;\r\n    \r\n    // Add a valid document\r\n    cmd.doc = new Document();\r\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.UN_TOKENIZED ) );\r\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\r\n    updater.addDoc( cmd );\r\n    \r\n    // Add a document with multiple ids\r\n    cmd.indexedId = null;  // reset the id for this add\r\n    cmd.doc = new Document();\r\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.UN_TOKENIZED ) );\r\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.UN_TOKENIZED ) );\r\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\r\n    try {\r\n      updater.addDoc( cmd );\r\n      fail( \"added a document with multiple ids\" );\r\n    }\r\n    catch( SolrException ex ) { } // expected\r\n\r\n    // Add a document without an id\r\n    cmd.indexedId = null;  // reset the id for this add\r\n    cmd.doc = new Document();\r\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\r\n    try {\r\n      updater.addDoc( cmd );\r\n      fail( \"added a document without an ids\" );\r\n    }\r\n    catch( SolrException ex ) { } // expected\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8744ad19f47109f36428849641ad30f090aa279e","date":1255357510,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","pathOld":"src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","sourceNew":"  public void testRequireUniqueKey() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    UpdateHandler updater = core.getUpdateHandler();\n    \n    AddUpdateCommand cmd = new AddUpdateCommand();\n    cmd.overwriteCommitted = true;\n    cmd.overwritePending = true;\n    cmd.allowDups = false;\n    \n    // Add a valid document\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.UN_TOKENIZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\n    updater.addDoc( cmd );\n    \n    // Add a document with multiple ids\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.UN_TOKENIZED ) );\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.UN_TOKENIZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document with multiple ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n\n    // Add a document without an id\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document without an ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n  }\n\n","sourceOld":"  public void testRequireUniqueKey() throws Exception \r\n  {\r\n    SolrCore core = h.getCore();\r\n    \r\n    UpdateHandler updater = core.getUpdateHandler();\r\n    \r\n    AddUpdateCommand cmd = new AddUpdateCommand();\r\n    cmd.overwriteCommitted = true;\r\n    cmd.overwritePending = true;\r\n    cmd.allowDups = false;\r\n    \r\n    // Add a valid document\r\n    cmd.doc = new Document();\r\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.UN_TOKENIZED ) );\r\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\r\n    updater.addDoc( cmd );\r\n    \r\n    // Add a document with multiple ids\r\n    cmd.indexedId = null;  // reset the id for this add\r\n    cmd.doc = new Document();\r\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.UN_TOKENIZED ) );\r\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.UN_TOKENIZED ) );\r\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\r\n    try {\r\n      updater.addDoc( cmd );\r\n      fail( \"added a document with multiple ids\" );\r\n    }\r\n    catch( SolrException ex ) { } // expected\r\n\r\n    // Add a document without an id\r\n    cmd.indexedId = null;  // reset the id for this add\r\n    cmd.doc = new Document();\r\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\r\n    try {\r\n      updater.addDoc( cmd );\r\n      fail( \"added a document without an ids\" );\r\n    }\r\n    catch( SolrException ex ) { } // expected\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef28ac95f5f85bbf872801277448c0924b0a6827","date":1268600312,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","pathOld":"src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","sourceNew":"  public void testRequireUniqueKey() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    UpdateHandler updater = core.getUpdateHandler();\n    \n    AddUpdateCommand cmd = new AddUpdateCommand();\n    cmd.overwriteCommitted = true;\n    cmd.overwritePending = true;\n    cmd.allowDups = false;\n    \n    // Add a valid document\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    updater.addDoc( cmd );\n    \n    // Add a document with multiple ids\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document with multiple ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n\n    // Add a document without an id\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document without an ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n  }\n\n","sourceOld":"  public void testRequireUniqueKey() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    UpdateHandler updater = core.getUpdateHandler();\n    \n    AddUpdateCommand cmd = new AddUpdateCommand();\n    cmd.overwriteCommitted = true;\n    cmd.overwritePending = true;\n    cmd.allowDups = false;\n    \n    // Add a valid document\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.UN_TOKENIZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\n    updater.addDoc( cmd );\n    \n    // Add a document with multiple ids\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.UN_TOKENIZED ) );\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.UN_TOKENIZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document with multiple ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n\n    // Add a document without an id\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.UN_TOKENIZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document without an ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","pathOld":"src/test/org/apache/solr/update/DirectUpdateHandlerTest#testRequireUniqueKey().mjava","sourceNew":"  public void testRequireUniqueKey() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    UpdateHandler updater = core.getUpdateHandler();\n    \n    AddUpdateCommand cmd = new AddUpdateCommand();\n    cmd.overwriteCommitted = true;\n    cmd.overwritePending = true;\n    cmd.allowDups = false;\n    \n    // Add a valid document\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    updater.addDoc( cmd );\n    \n    // Add a document with multiple ids\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document with multiple ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n\n    // Add a document without an id\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document without an ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n  }\n\n","sourceOld":"  public void testRequireUniqueKey() throws Exception \n  {\n    SolrCore core = h.getCore();\n    \n    UpdateHandler updater = core.getUpdateHandler();\n    \n    AddUpdateCommand cmd = new AddUpdateCommand();\n    cmd.overwriteCommitted = true;\n    cmd.overwritePending = true;\n    cmd.allowDups = false;\n    \n    // Add a valid document\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    updater.addDoc( cmd );\n    \n    // Add a document with multiple ids\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"id\", \"AAA\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"id\", \"BBB\", Store.YES, Index.NOT_ANALYZED ) );\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document with multiple ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n\n    // Add a document without an id\n    cmd.indexedId = null;  // reset the id for this add\n    cmd.doc = new Document();\n    cmd.doc.add( new Field( \"subject\", \"xxxxx\", Store.YES, Index.NOT_ANALYZED ) );\n    try {\n      updater.addDoc( cmd );\n      fail( \"added a document without an ids\" );\n    }\n    catch( SolrException ex ) { } // expected\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c90f01e1c0f11ee52212ab38c6d4393b3be8a646":["c0fca88525a75f64dd5d66cc89ad355e9ff10ed5"],"c0fca88525a75f64dd5d66cc89ad355e9ff10ed5":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ef28ac95f5f85bbf872801277448c0924b0a6827":["8744ad19f47109f36428849641ad30f090aa279e"],"8744ad19f47109f36428849641ad30f090aa279e":["c90f01e1c0f11ee52212ab38c6d4393b3be8a646"],"ad94625fb8d088209f46650c8097196fec67f00c":["ef28ac95f5f85bbf872801277448c0924b0a6827"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c90f01e1c0f11ee52212ab38c6d4393b3be8a646":["8744ad19f47109f36428849641ad30f090aa279e"],"c0fca88525a75f64dd5d66cc89ad355e9ff10ed5":["c90f01e1c0f11ee52212ab38c6d4393b3be8a646"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["c0fca88525a75f64dd5d66cc89ad355e9ff10ed5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ef28ac95f5f85bbf872801277448c0924b0a6827":["ad94625fb8d088209f46650c8097196fec67f00c"],"8744ad19f47109f36428849641ad30f090aa279e":["ef28ac95f5f85bbf872801277448c0924b0a6827"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}