{"path":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/AnalyzerProfile#init().mjava","commits":[{"id":"05ff0cc6e864c7d71a48579f2acfca4f58943568","date":1242295762,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/AnalyzerProfile#init().mjava","pathOld":"/dev/null","sourceNew":"  private static void init() {\n    String dirName = \"analysis-data\";\n    String propName = \"analysis.properties\";\n\n    // 读取系统设置，在运行时加入参数：-Danalysis.data.dir=/path/to/analysis-data\n    ANALYSIS_DATA_DIR = System.getProperty(\"analysis.data.dir\", \"\");\n    if (ANALYSIS_DATA_DIR.length() != 0)\n      return;\n\n    File[] cadidateFiles = new File[] { new File(\"./\" + dirName),\n        new File(\"./lib/\" + dirName), new File(\"./\" + propName),\n        new File(\"./lib/\" + propName) };\n    for (int i = 0; i < cadidateFiles.length; i++) {\n      File file = cadidateFiles[i];\n      if (file.exists()) {\n        if (file.isDirectory()) {\n          ANALYSIS_DATA_DIR = file.getAbsolutePath();\n        } else if (file.isFile() && getAnalysisDataDir(file).length() != 0) {\n          ANALYSIS_DATA_DIR = getAnalysisDataDir(file);\n        }\n        break;\n      }\n    }\n\n    if (ANALYSIS_DATA_DIR.length() == 0) {\n      // 提示用户未找到词典文件夹\n      System.err\n          .println(\"WARNING: Can not found lexical dictionary directory!\");\n      System.err\n          .println(\"WARNING: This will cause unpredictable exceptions in your application!\");\n      System.err\n          .println(\"WARNING: Please refer to the manual to download the dictionaries.\");\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["2f6156e2f0d1d529001873677c1cc6a22d6b9f9a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"be5ef2f970a6c1141562b06dd26ed04c3dc29d70","date":1246444343,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/AnalyzerProfile#init().mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/AnalyzerProfile#init().mjava","sourceNew":"  private static void init() {\n    String dirName = \"analysis-data\";\n    String propName = \"analysis.properties\";\n\n    // Try the system property：-Danalysis.data.dir=/path/to/analysis-data\n    ANALYSIS_DATA_DIR = System.getProperty(\"analysis.data.dir\", \"\");\n    if (ANALYSIS_DATA_DIR.length() != 0)\n      return;\n\n    File[] cadidateFiles = new File[] { new File(\"./\" + dirName),\n        new File(\"./lib/\" + dirName), new File(\"./\" + propName),\n        new File(\"./lib/\" + propName) };\n    for (int i = 0; i < cadidateFiles.length; i++) {\n      File file = cadidateFiles[i];\n      if (file.exists()) {\n        if (file.isDirectory()) {\n          ANALYSIS_DATA_DIR = file.getAbsolutePath();\n        } else if (file.isFile() && getAnalysisDataDir(file).length() != 0) {\n          ANALYSIS_DATA_DIR = getAnalysisDataDir(file);\n        }\n        break;\n      }\n    }\n\n    if (ANALYSIS_DATA_DIR.length() == 0) {\n      // Dictionary directory cannot be found.\n      System.err\n          .println(\"WARNING: Can not find lexical dictionary directory!\");\n      System.err\n          .println(\"WARNING: This will cause unpredictable exceptions in your application!\");\n      System.err\n          .println(\"WARNING: Please refer to the manual to download the dictionaries.\");\n    }\n\n  }\n\n","sourceOld":"  private static void init() {\n    String dirName = \"analysis-data\";\n    String propName = \"analysis.properties\";\n\n    // 读取系统设置，在运行时加入参数：-Danalysis.data.dir=/path/to/analysis-data\n    ANALYSIS_DATA_DIR = System.getProperty(\"analysis.data.dir\", \"\");\n    if (ANALYSIS_DATA_DIR.length() != 0)\n      return;\n\n    File[] cadidateFiles = new File[] { new File(\"./\" + dirName),\n        new File(\"./lib/\" + dirName), new File(\"./\" + propName),\n        new File(\"./lib/\" + propName) };\n    for (int i = 0; i < cadidateFiles.length; i++) {\n      File file = cadidateFiles[i];\n      if (file.exists()) {\n        if (file.isDirectory()) {\n          ANALYSIS_DATA_DIR = file.getAbsolutePath();\n        } else if (file.isFile() && getAnalysisDataDir(file).length() != 0) {\n          ANALYSIS_DATA_DIR = getAnalysisDataDir(file);\n        }\n        break;\n      }\n    }\n\n    if (ANALYSIS_DATA_DIR.length() == 0) {\n      // 提示用户未找到词典文件夹\n      System.err\n          .println(\"WARNING: Can not found lexical dictionary directory!\");\n      System.err\n          .println(\"WARNING: This will cause unpredictable exceptions in your application!\");\n      System.err\n          .println(\"WARNING: Please refer to the manual to download the dictionaries.\");\n    }\n\n  }\n\n","bugFix":null,"bugIntro":["2f6156e2f0d1d529001873677c1cc6a22d6b9f9a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/AnalyzerProfile#init().mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/AnalyzerProfile#init().mjava","sourceNew":"  private static void init() {\n    String dirName = \"analysis-data\";\n    String propName = \"analysis.properties\";\n\n    // Try the system property：-Danalysis.data.dir=/path/to/analysis-data\n    ANALYSIS_DATA_DIR = System.getProperty(\"analysis.data.dir\", \"\");\n    if (ANALYSIS_DATA_DIR.length() != 0)\n      return;\n\n    File[] cadidateFiles = new File[] { new File(\"./\" + dirName),\n        new File(\"./lib/\" + dirName), new File(\"./\" + propName),\n        new File(\"./lib/\" + propName) };\n    for (int i = 0; i < cadidateFiles.length; i++) {\n      File file = cadidateFiles[i];\n      if (file.exists()) {\n        if (file.isDirectory()) {\n          ANALYSIS_DATA_DIR = file.getAbsolutePath();\n        } else if (file.isFile() && getAnalysisDataDir(file).length() != 0) {\n          ANALYSIS_DATA_DIR = getAnalysisDataDir(file);\n        }\n        break;\n      }\n    }\n\n    if (ANALYSIS_DATA_DIR.length() == 0) {\n      // Dictionary directory cannot be found.\n      System.err\n          .println(\"WARNING: Can not find lexical dictionary directory!\");\n      System.err\n          .println(\"WARNING: This will cause unpredictable exceptions in your application!\");\n      System.err\n          .println(\"WARNING: Please refer to the manual to download the dictionaries.\");\n    }\n\n  }\n\n","sourceOld":"  private static void init() {\n    String dirName = \"analysis-data\";\n    String propName = \"analysis.properties\";\n\n    // Try the system property：-Danalysis.data.dir=/path/to/analysis-data\n    ANALYSIS_DATA_DIR = System.getProperty(\"analysis.data.dir\", \"\");\n    if (ANALYSIS_DATA_DIR.length() != 0)\n      return;\n\n    File[] cadidateFiles = new File[] { new File(\"./\" + dirName),\n        new File(\"./lib/\" + dirName), new File(\"./\" + propName),\n        new File(\"./lib/\" + propName) };\n    for (int i = 0; i < cadidateFiles.length; i++) {\n      File file = cadidateFiles[i];\n      if (file.exists()) {\n        if (file.isDirectory()) {\n          ANALYSIS_DATA_DIR = file.getAbsolutePath();\n        } else if (file.isFile() && getAnalysisDataDir(file).length() != 0) {\n          ANALYSIS_DATA_DIR = getAnalysisDataDir(file);\n        }\n        break;\n      }\n    }\n\n    if (ANALYSIS_DATA_DIR.length() == 0) {\n      // Dictionary directory cannot be found.\n      System.err\n          .println(\"WARNING: Can not find lexical dictionary directory!\");\n      System.err\n          .println(\"WARNING: This will cause unpredictable exceptions in your application!\");\n      System.err\n          .println(\"WARNING: Please refer to the manual to download the dictionaries.\");\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"be5ef2f970a6c1141562b06dd26ed04c3dc29d70":["05ff0cc6e864c7d71a48579f2acfca4f58943568"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["be5ef2f970a6c1141562b06dd26ed04c3dc29d70"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05ff0cc6e864c7d71a48579f2acfca4f58943568":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"]},"commit2Childs":{"be5ef2f970a6c1141562b06dd26ed04c3dc29d70":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05ff0cc6e864c7d71a48579f2acfca4f58943568"],"05ff0cc6e864c7d71a48579f2acfca4f58943568":["be5ef2f970a6c1141562b06dd26ed04c3dc29d70"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}