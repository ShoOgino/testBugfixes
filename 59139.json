{"path":"solr/core/src/java/org/apache/solr/search/CursorMark#CursorMark(IndexSchema,SortSpec).mjava","commits":[{"id":"d5bc8e25f59990525f5beb14afe9c96240dcf4a2","date":1389042945,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CursorMark#CursorMark(IndexSchema,SortSpec).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Generates an empty CursorMark bound for use with the \n   * specified schema and {@link SortSpec}.\n   *\n   * @param schema used for basic validation\n   * @param sortSpec bound to this totem (un)marshalling serialized values\n   */\n  public CursorMark(IndexSchema schema, SortSpec sortSpec) {\n\n    final SchemaField uniqueKey = schema.getUniqueKeyField();\n    if (null == uniqueKey) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n                              \"Cursor functionality is not available unless the IndexSchema defines a uniqueKey field\");\n    }\n\n    final Sort sort = sortSpec.getSort();\n    if (null == sort) {\n      // pure score, by definition we don't include the mandatyr uniqueKey tie breaker\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n                              \"Cursor functionality requires a sort containing a uniqueKey field tie breaker\");\n    }\n    \n    if (!sortSpec.getSchemaFields().contains(uniqueKey)) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n                              \"Cursor functionality requires a sort containing a uniqueKey field tie breaker\");\n    }\n\n    if (0 != sortSpec.getOffset()) {\n      throw new SolrException(ErrorCode.BAD_REQUEST,\n                              \"Cursor functionality requires start=0\");\n    }\n\n    for (SortField sf : sort.getSort()) {\n      if (sf.getType().equals(SortField.Type.DOC)) {\n        throw new SolrException(ErrorCode.BAD_REQUEST,\n                                \"Cursor functionality can not be used with internal doc ordering sort: _docid_\");\n      }\n    }\n\n    if (sort.getSort().length != sortSpec.getSchemaFields().size()) {\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n                                \"Cursor SortSpec failure: sort length != SchemaFields: \" \n                                + sort.getSort().length + \" != \" + \n                                sortSpec.getSchemaFields().size());\n    }\n\n    this.sortSpec = sortSpec;\n    this.values = null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d5bc8e25f59990525f5beb14afe9c96240dcf4a2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d5bc8e25f59990525f5beb14afe9c96240dcf4a2"]},"commit2Childs":{"d5bc8e25f59990525f5beb14afe9c96240dcf4a2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d5bc8e25f59990525f5beb14afe9c96240dcf4a2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}