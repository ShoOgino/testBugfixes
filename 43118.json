{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionQueue#remove(QueueEvent).mjava","commits":[{"id":"2a282020d6c9a4ea32a359539e283e4771a2fda8","date":1440047542,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionQueue#remove(QueueEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedQueue#remove(QueueEvent).mjava","sourceNew":"  /**\n   * Remove the event and save the response into the other path.\n   * \n   */\n  public byte[] remove(QueueEvent event) throws KeeperException,\n      InterruptedException {\n    TimerContext time = stats.time(dir + \"_remove_event\");\n    try {\n      String path = event.getId();\n      String responsePath = dir + \"/\" + response_prefix\n          + path.substring(path.lastIndexOf(\"-\") + 1);\n      if (zookeeper.exists(responsePath, true)) {\n        zookeeper.setData(responsePath, event.getBytes(), true);\n      }\n      byte[] data = zookeeper.getData(path, null, null, true);\n      zookeeper.delete(path, -1, true);\n      return data;\n    } finally {\n      time.stop();\n    }\n  }\n\n","sourceOld":"  /**\n   * Remove the event and save the response into the other path.\n   * \n   */\n  public byte[] remove(QueueEvent event) throws KeeperException,\n      InterruptedException {\n    TimerContext time = stats.time(dir + \"_remove_event\");\n    try {\n      String path = event.getId();\n      String responsePath = dir + \"/\" + response_prefix\n          + path.substring(path.lastIndexOf(\"-\") + 1);\n      if (zookeeper.exists(responsePath, true)) {\n        zookeeper.setData(responsePath, event.getBytes(), true);\n      }\n      byte[] data = zookeeper.getData(path, null, null, true);\n      zookeeper.delete(path, -1, true);\n      return data;\n    } finally {\n      time.stop();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2209af2c265d2258ec4b29c8cc78622d36994a15","date":1440641916,"type":5,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerTaskQueue#remove(QueueEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionQueue#remove(QueueEvent).mjava","sourceNew":"  /**\n   * Remove the event and save the response into the other path.\n   * \n   */\n  public byte[] remove(QueueEvent event) throws KeeperException,\n      InterruptedException {\n    TimerContext time = stats.time(dir + \"_remove_event\");\n    try {\n      String path = event.getId();\n      String responsePath = dir + \"/\" + response_prefix\n          + path.substring(path.lastIndexOf(\"-\") + 1);\n      if (zookeeper.exists(responsePath, true)) {\n        zookeeper.setData(responsePath, event.getBytes(), true);\n      }\n      byte[] data = zookeeper.getData(path, null, null, true);\n      zookeeper.delete(path, -1, true);\n      return data;\n    } finally {\n      time.stop();\n    }\n  }\n\n","sourceOld":"  /**\n   * Remove the event and save the response into the other path.\n   * \n   */\n  public byte[] remove(QueueEvent event) throws KeeperException,\n      InterruptedException {\n    TimerContext time = stats.time(dir + \"_remove_event\");\n    try {\n      String path = event.getId();\n      String responsePath = dir + \"/\" + response_prefix\n          + path.substring(path.lastIndexOf(\"-\") + 1);\n      if (zookeeper.exists(responsePath, true)) {\n        zookeeper.setData(responsePath, event.getBytes(), true);\n      }\n      byte[] data = zookeeper.getData(path, null, null, true);\n      zookeeper.delete(path, -1, true);\n      return data;\n    } finally {\n      time.stop();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"2209af2c265d2258ec4b29c8cc78622d36994a15":["2a282020d6c9a4ea32a359539e283e4771a2fda8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2a282020d6c9a4ea32a359539e283e4771a2fda8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2209af2c265d2258ec4b29c8cc78622d36994a15"]},"commit2Childs":{"2209af2c265d2258ec4b29c8cc78622d36994a15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2a282020d6c9a4ea32a359539e283e4771a2fda8"],"2a282020d6c9a4ea32a359539e283e4771a2fda8":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}