{"path":"backwards/src/java/org/apache/lucene/queryParser/QueryParser#setRangeCollator(Collator).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/queryParser/QueryParser#setRangeCollator(Collator).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * Sets the collator used to determine index term inclusion in ranges\n   * for RangeQuerys.\n   * <p/>\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null\n   * collator using this method will cause every single index Term in the\n   * Field referenced by lowerTerm and/or upperTerm to be examined.\n   * Depending on the number of index Terms in this Field, the operation could\n   * be very slow.\n   *\n   *  @param rc  the collator to use when constructing RangeQuerys\n   */\n  public void setRangeCollator(Collator rc) {\n    rangeCollator = rc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/queryParser/QueryParser#setRangeCollator(Collator).mjava","pathOld":"backwards/src/java/org/apache/lucene/queryParser/QueryParser#setRangeCollator(Collator).mjava","sourceNew":"  /** \n   * Sets the collator used to determine index term inclusion in ranges\n   * for RangeQuerys.\n   * <p/>\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null\n   * collator using this method will cause every single index Term in the\n   * Field referenced by lowerTerm and/or upperTerm to be examined.\n   * Depending on the number of index Terms in this Field, the operation could\n   * be very slow.\n   *\n   *  @param rc  the collator to use when constructing RangeQuerys\n   */\n  public void setRangeCollator(Collator rc) {\n    rangeCollator = rc;\n  }\n\n","sourceOld":"  /** \n   * Sets the collator used to determine index term inclusion in ranges\n   * for RangeQuerys.\n   * <p/>\n   * <strong>WARNING:</strong> Setting the rangeCollator to a non-null\n   * collator using this method will cause every single index Term in the\n   * Field referenced by lowerTerm and/or upperTerm to be examined.\n   * Depending on the number of index Terms in this Field, the operation could\n   * be very slow.\n   *\n   *  @param rc  the collator to use when constructing RangeQuerys\n   */\n  public void setRangeCollator(Collator rc) {\n    rangeCollator = rc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}