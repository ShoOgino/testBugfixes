{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DefaultGetHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","commits":[{"id":"5d43e216d757e2276d180eba8a192e300c4bfadb","date":1149717385,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DefaultGetHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","pathOld":"/dev/null","sourceNew":"    /** \n     * @see org.apache.lucene.gdata.servlet.handler.AbstractGdataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest, \n     *      javax.servlet.http.HttpServletResponse) \n     */ \n    @Override \n    public void processRequest(HttpServletRequest request, \n            HttpServletResponse response) throws IOException, ServletException { \n        try { \n            initializeRequestHandler(request, response, GDataRequestType.GET); \n        } catch (GDataRequestException e) { \n            sendError(); \n            return; \n        } \n        Service service = getService(); \n        try { \n            if (LOG.isInfoEnabled()) \n                LOG.info(\"Requested output formate: \" \n                        + this.feedRequest.getRequestedResponseFormat()); \n            this.feedResponse.setOutputFormat(this.feedRequest \n                    .getRequestedResponseFormat()); \n            if(this.feedRequest.isFeedRequested()){ \n            BaseFeed feed = service \n                    .getFeed(this.feedRequest, this.feedResponse); \n         \n            this.feedResponse.sendResponse(feed, this.feedRequest.getExtensionProfile()); \n            }else{ \n             BaseEntry entry = service.getSingleEntry(this.feedRequest,this.feedResponse); \n             if(entry == null){ \n                 this.feedResponse.setError(HttpServletResponse.SC_NOT_FOUND); \n                 sendError(); \n             } \n             this.feedResponse.sendResponse(entry, this.feedRequest.getExtensionProfile()); \n            } \n             \n             \n        } catch (ServiceException e) { // TODO handle exceptions to send exact \n            // response \n            LOG.error(\"Could not process GetFeed request - \" + e.getMessage(), \n                    e); \n            this.feedResponse.setError(HttpServletResponse.SC_BAD_REQUEST); // TODO \n            // change \n            // this \n            sendError(); \n        } \n         \n         \n \n    } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52754a40a1550056d5637c8992b4076b5ed77328","date":1151345693,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DefaultGetHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DefaultGetHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.servlet.handler.AbstractGdataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest,\n     *      javax.servlet.http.HttpServletResponse)\n     */\n    @Override\n    public void processRequest(HttpServletRequest request,\n            HttpServletResponse response) throws IOException, ServletException {\n        try {\n            initializeRequestHandler(request, response, GDataRequestType.GET);\n        } catch (GDataRequestException e) {\n            sendError();\n            return;\n        }\n\n        try {\n            String modifiedSince = this.feedRequest.getModifiedSince();\n            if (!checkIsModified(modifiedSince)) {\n                this.feedResponse\n                        .setStatus(HttpServletResponse.SC_NOT_MODIFIED);\n                return;\n            }\n            if (LOG.isInfoEnabled())\n                LOG.info(\"Requested output formate: \"\n                        + this.feedRequest.getRequestedResponseFormat());\n            this.feedResponse.setOutputFormat(this.feedRequest\n                    .getRequestedResponseFormat());\n            if (this.feedRequest.isFeedRequested()) {\n                BaseFeed feed = this.service.getFeed(this.feedRequest,\n                        this.feedResponse);\n\n                this.feedResponse.sendResponse(feed, this.feedRequest\n                        .getConfigurator().getExtensionProfile());\n            } else {\n                BaseEntry entry = this.service.getSingleEntry(this.feedRequest,\n                        this.feedResponse);\n                this.feedResponse.sendResponse(entry, this.feedRequest\n                        .getConfigurator().getExtensionProfile());\n            }\n\n        } catch (ServiceException e) {\n            LOG.error(\"Could not process GetFeed request - \" + e.getMessage(),\n                    e);\n            sendError();\n        }\n        closeService();\n\n    }\n\n","sourceOld":"    /** \n     * @see org.apache.lucene.gdata.servlet.handler.AbstractGdataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest, \n     *      javax.servlet.http.HttpServletResponse) \n     */ \n    @Override \n    public void processRequest(HttpServletRequest request, \n            HttpServletResponse response) throws IOException, ServletException { \n        try { \n            initializeRequestHandler(request, response, GDataRequestType.GET); \n        } catch (GDataRequestException e) { \n            sendError(); \n            return; \n        } \n        Service service = getService(); \n        try { \n            if (LOG.isInfoEnabled()) \n                LOG.info(\"Requested output formate: \" \n                        + this.feedRequest.getRequestedResponseFormat()); \n            this.feedResponse.setOutputFormat(this.feedRequest \n                    .getRequestedResponseFormat()); \n            if(this.feedRequest.isFeedRequested()){ \n            BaseFeed feed = service \n                    .getFeed(this.feedRequest, this.feedResponse); \n         \n            this.feedResponse.sendResponse(feed, this.feedRequest.getExtensionProfile()); \n            }else{ \n             BaseEntry entry = service.getSingleEntry(this.feedRequest,this.feedResponse); \n             if(entry == null){ \n                 this.feedResponse.setError(HttpServletResponse.SC_NOT_FOUND); \n                 sendError(); \n             } \n             this.feedResponse.sendResponse(entry, this.feedRequest.getExtensionProfile()); \n            } \n             \n             \n        } catch (ServiceException e) { // TODO handle exceptions to send exact \n            // response \n            LOG.error(\"Could not process GetFeed request - \" + e.getMessage(), \n                    e); \n            this.feedResponse.setError(HttpServletResponse.SC_BAD_REQUEST); // TODO \n            // change \n            // this \n            sendError(); \n        } \n         \n         \n \n    } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"303ca293666286b4ae2b0b4dbf10d3bf60ed727c","date":1153866181,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DefaultGetHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DefaultGetHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.servlet.handler.AbstractGdataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest,\n     *      javax.servlet.http.HttpServletResponse)\n     */\n    @Override\n    public void processRequest(HttpServletRequest request,\n            HttpServletResponse response) throws IOException, ServletException {\n        try {\n            initializeRequestHandler(request, response, GDataRequestType.GET);\n        } catch (GDataRequestException e) {\n            sendError();\n            return;\n        }\n\n        try {\n            String modifiedSince = this.feedRequest.getModifiedSince();\n            if (!checkIsModified(modifiedSince)) {\n                this.feedResponse\n                        .setStatus(HttpServletResponse.SC_NOT_MODIFIED);\n                return;\n            }\n            if (LOG.isInfoEnabled())\n                LOG.info(\"Requested output formate: \"\n                        + this.feedRequest.getRequestedResponseFormat());\n            this.feedResponse.setOutputFormat(this.feedRequest\n                    .getRequestedResponseFormat());\n            if (this.feedRequest.isFeedRequested()) {\n                BaseFeed feed = this.service.getFeed(this.feedRequest,\n                        this.feedResponse);\n\n                this.feedResponse.sendResponse(feed, this.feedRequest\n                        .getConfigurator().getExtensionProfile());\n            } else {\n                BaseEntry entry = this.service.getSingleEntry(this.feedRequest,\n                        this.feedResponse);\n                this.feedResponse.sendResponse(entry, this.feedRequest\n                        .getConfigurator().getExtensionProfile());\n            }\n\n        } catch (ServiceException e) {\n            LOG.error(\"Could not process GetFeed request - \" + e.getMessage(),\n                    e);\n            sendError();\n        }finally{\n        closeService();\n        }\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.servlet.handler.AbstractGdataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest,\n     *      javax.servlet.http.HttpServletResponse)\n     */\n    @Override\n    public void processRequest(HttpServletRequest request,\n            HttpServletResponse response) throws IOException, ServletException {\n        try {\n            initializeRequestHandler(request, response, GDataRequestType.GET);\n        } catch (GDataRequestException e) {\n            sendError();\n            return;\n        }\n\n        try {\n            String modifiedSince = this.feedRequest.getModifiedSince();\n            if (!checkIsModified(modifiedSince)) {\n                this.feedResponse\n                        .setStatus(HttpServletResponse.SC_NOT_MODIFIED);\n                return;\n            }\n            if (LOG.isInfoEnabled())\n                LOG.info(\"Requested output formate: \"\n                        + this.feedRequest.getRequestedResponseFormat());\n            this.feedResponse.setOutputFormat(this.feedRequest\n                    .getRequestedResponseFormat());\n            if (this.feedRequest.isFeedRequested()) {\n                BaseFeed feed = this.service.getFeed(this.feedRequest,\n                        this.feedResponse);\n\n                this.feedResponse.sendResponse(feed, this.feedRequest\n                        .getConfigurator().getExtensionProfile());\n            } else {\n                BaseEntry entry = this.service.getSingleEntry(this.feedRequest,\n                        this.feedResponse);\n                this.feedResponse.sendResponse(entry, this.feedRequest\n                        .getConfigurator().getExtensionProfile());\n            }\n\n        } catch (ServiceException e) {\n            LOG.error(\"Could not process GetFeed request - \" + e.getMessage(),\n                    e);\n            sendError();\n        }\n        closeService();\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09fe963da2613c724ffe82353b4ca2364a1f93c6","date":1155249160,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DefaultGetHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DefaultGetHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.servlet.handler.AbstractGdataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest,\n     *      javax.servlet.http.HttpServletResponse)\n     */\n    @Override\n    public void processRequest(HttpServletRequest request,\n            HttpServletResponse response) throws IOException, ServletException {\n        try {\n            initializeRequestHandler(request, response, GDataRequestType.GET);\n        } catch (GDataRequestException e) {\n            sendError();\n            return;\n        }\n\n        try {\n            String modifiedSince = this.feedRequest.getModifiedSince();\n            if (!checkIsModified(modifiedSince)) {\n                this.feedResponse\n                        .setStatus(HttpServletResponse.SC_NOT_MODIFIED);\n                return;\n            }\n            if (LOG.isInfoEnabled())\n                LOG.info(\"Requested output formate: \"\n                        + this.feedRequest.getRequestedResponseFormat());\n            this.feedResponse.setOutputFormat(this.feedRequest\n                    .getRequestedResponseFormat());\n            if (this.feedRequest.isFeedRequested()) {\n                BaseFeed feed = this.service.getFeed(this.feedRequest,\n                        this.feedResponse);\n\n                this.feedResponse.sendResponse(feed, this.feedRequest\n                        .getConfigurator().getExtensionProfile());\n            } else {\n                BaseEntry entry = this.service.getSingleEntry(this.feedRequest,\n                        this.feedResponse);\n                this.feedResponse.sendResponse(entry, this.feedRequest\n                        .getConfigurator().getExtensionProfile());\n            }\n\n        } catch (ServiceException e) {\n            LOG.error(\"Could not process GetFeed request - \" + e.getMessage(),\n                    e);\n            setError(e.getErrorCode());\n            sendError();\n        }finally{\n        closeService();\n        }\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.servlet.handler.AbstractGdataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest,\n     *      javax.servlet.http.HttpServletResponse)\n     */\n    @Override\n    public void processRequest(HttpServletRequest request,\n            HttpServletResponse response) throws IOException, ServletException {\n        try {\n            initializeRequestHandler(request, response, GDataRequestType.GET);\n        } catch (GDataRequestException e) {\n            sendError();\n            return;\n        }\n\n        try {\n            String modifiedSince = this.feedRequest.getModifiedSince();\n            if (!checkIsModified(modifiedSince)) {\n                this.feedResponse\n                        .setStatus(HttpServletResponse.SC_NOT_MODIFIED);\n                return;\n            }\n            if (LOG.isInfoEnabled())\n                LOG.info(\"Requested output formate: \"\n                        + this.feedRequest.getRequestedResponseFormat());\n            this.feedResponse.setOutputFormat(this.feedRequest\n                    .getRequestedResponseFormat());\n            if (this.feedRequest.isFeedRequested()) {\n                BaseFeed feed = this.service.getFeed(this.feedRequest,\n                        this.feedResponse);\n\n                this.feedResponse.sendResponse(feed, this.feedRequest\n                        .getConfigurator().getExtensionProfile());\n            } else {\n                BaseEntry entry = this.service.getSingleEntry(this.feedRequest,\n                        this.feedResponse);\n                this.feedResponse.sendResponse(entry, this.feedRequest\n                        .getConfigurator().getExtensionProfile());\n            }\n\n        } catch (ServiceException e) {\n            LOG.error(\"Could not process GetFeed request - \" + e.getMessage(),\n                    e);\n            sendError();\n        }finally{\n        closeService();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a228247de0686f328301f2d13982b56d78533501","date":1156108808,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DefaultGetHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DefaultGetHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.servlet.handler.AbstractGdataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest,\n     *      javax.servlet.http.HttpServletResponse)\n     */\n    @Override\n    public void processRequest(HttpServletRequest request,\n            HttpServletResponse response) throws IOException, ServletException {\n        try {\n            initializeRequestHandler(request, response, GDataRequestType.GET);\n        } catch (GDataRequestException e) {\n            sendError();\n            return;\n        }\n\n        try {\n            String modifiedSince = this.feedRequest.getModifiedSince();\n            if (!checkIsModified(modifiedSince)) {\n                this.feedResponse\n                        .setStatus(HttpServletResponse.SC_NOT_MODIFIED);\n                return;\n            }\n            if (LOG.isInfoEnabled())\n                LOG.info(\"Requested output formate: \"\n                        + this.feedRequest.getRequestedResponseFormat());\n            this.feedResponse.setOutputFormat(this.feedRequest\n                    .getRequestedResponseFormat());\n            if (this.feedRequest.isFeedRequested()) {\n                BaseFeed feed = this.service.getFeed(this.feedRequest,\n                        this.feedResponse);\n\n                this.feedResponse.sendResponse(feed, this.feedRequest\n                        .getConfigurator());\n            } else {\n                BaseEntry entry = this.service.getSingleEntry(this.feedRequest,\n                        this.feedResponse);\n                this.feedResponse.sendResponse(entry, this.feedRequest\n                        .getConfigurator());\n            }\n\n        } catch (ServiceException e) {\n            LOG.error(\"Could not process GetFeed request - \" + e.getMessage(),\n                    e);\n            setError(e.getErrorCode());\n            sendError();\n        }finally{\n        closeService();\n        }\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.servlet.handler.AbstractGdataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest,\n     *      javax.servlet.http.HttpServletResponse)\n     */\n    @Override\n    public void processRequest(HttpServletRequest request,\n            HttpServletResponse response) throws IOException, ServletException {\n        try {\n            initializeRequestHandler(request, response, GDataRequestType.GET);\n        } catch (GDataRequestException e) {\n            sendError();\n            return;\n        }\n\n        try {\n            String modifiedSince = this.feedRequest.getModifiedSince();\n            if (!checkIsModified(modifiedSince)) {\n                this.feedResponse\n                        .setStatus(HttpServletResponse.SC_NOT_MODIFIED);\n                return;\n            }\n            if (LOG.isInfoEnabled())\n                LOG.info(\"Requested output formate: \"\n                        + this.feedRequest.getRequestedResponseFormat());\n            this.feedResponse.setOutputFormat(this.feedRequest\n                    .getRequestedResponseFormat());\n            if (this.feedRequest.isFeedRequested()) {\n                BaseFeed feed = this.service.getFeed(this.feedRequest,\n                        this.feedResponse);\n\n                this.feedResponse.sendResponse(feed, this.feedRequest\n                        .getConfigurator().getExtensionProfile());\n            } else {\n                BaseEntry entry = this.service.getSingleEntry(this.feedRequest,\n                        this.feedResponse);\n                this.feedResponse.sendResponse(entry, this.feedRequest\n                        .getConfigurator().getExtensionProfile());\n            }\n\n        } catch (ServiceException e) {\n            LOG.error(\"Could not process GetFeed request - \" + e.getMessage(),\n                    e);\n            setError(e.getErrorCode());\n            sendError();\n        }finally{\n        closeService();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/servlet/handler/DefaultGetHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DefaultGetHandler#processRequest(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.servlet.handler.AbstractGdataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest,\n     *      javax.servlet.http.HttpServletResponse)\n     */\n    @Override\n    public void processRequest(HttpServletRequest request,\n            HttpServletResponse response) throws IOException, ServletException {\n        try {\n            initializeRequestHandler(request, response, GDataRequestType.GET);\n        } catch (GDataRequestException e) {\n            sendError();\n            return;\n        }\n\n        try {\n            String modifiedSince = this.feedRequest.getModifiedSince();\n            if (!checkIsModified(modifiedSince)) {\n                this.feedResponse\n                        .setStatus(HttpServletResponse.SC_NOT_MODIFIED);\n                return;\n            }\n            if (LOG.isInfoEnabled())\n                LOG.info(\"Requested output formate: \"\n                        + this.feedRequest.getRequestedResponseFormat());\n            this.feedResponse.setOutputFormat(this.feedRequest\n                    .getRequestedResponseFormat());\n            if (this.feedRequest.isFeedRequested()) {\n                BaseFeed feed = this.service.getFeed(this.feedRequest,\n                        this.feedResponse);\n\n                this.feedResponse.sendResponse(feed, this.feedRequest\n                        .getConfigurator());\n            } else {\n                BaseEntry entry = this.service.getSingleEntry(this.feedRequest,\n                        this.feedResponse);\n                this.feedResponse.sendResponse(entry, this.feedRequest\n                        .getConfigurator());\n            }\n\n        } catch (ServiceException e) {\n            LOG.error(\"Could not process GetFeed request - \" + e.getMessage(),\n                    e);\n            setError(e.getErrorCode());\n            sendError();\n        }finally{\n        closeService();\n        }\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.servlet.handler.AbstractGdataRequestHandler#processRequest(javax.servlet.http.HttpServletRequest,\n     *      javax.servlet.http.HttpServletResponse)\n     */\n    @Override\n    public void processRequest(HttpServletRequest request,\n            HttpServletResponse response) throws IOException, ServletException {\n        try {\n            initializeRequestHandler(request, response, GDataRequestType.GET);\n        } catch (GDataRequestException e) {\n            sendError();\n            return;\n        }\n\n        try {\n            String modifiedSince = this.feedRequest.getModifiedSince();\n            if (!checkIsModified(modifiedSince)) {\n                this.feedResponse\n                        .setStatus(HttpServletResponse.SC_NOT_MODIFIED);\n                return;\n            }\n            if (LOG.isInfoEnabled())\n                LOG.info(\"Requested output formate: \"\n                        + this.feedRequest.getRequestedResponseFormat());\n            this.feedResponse.setOutputFormat(this.feedRequest\n                    .getRequestedResponseFormat());\n            if (this.feedRequest.isFeedRequested()) {\n                BaseFeed feed = this.service.getFeed(this.feedRequest,\n                        this.feedResponse);\n\n                this.feedResponse.sendResponse(feed, this.feedRequest\n                        .getConfigurator());\n            } else {\n                BaseEntry entry = this.service.getSingleEntry(this.feedRequest,\n                        this.feedResponse);\n                this.feedResponse.sendResponse(entry, this.feedRequest\n                        .getConfigurator());\n            }\n\n        } catch (ServiceException e) {\n            LOG.error(\"Could not process GetFeed request - \" + e.getMessage(),\n                    e);\n            setError(e.getErrorCode());\n            sendError();\n        }finally{\n        closeService();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["303ca293666286b4ae2b0b4dbf10d3bf60ed727c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["a228247de0686f328301f2d13982b56d78533501"],"a228247de0686f328301f2d13982b56d78533501":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"303ca293666286b4ae2b0b4dbf10d3bf60ed727c":["52754a40a1550056d5637c8992b4076b5ed77328"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"52754a40a1550056d5637c8992b4076b5ed77328":["5d43e216d757e2276d180eba8a192e300c4bfadb"]},"commit2Childs":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["a228247de0686f328301f2d13982b56d78533501"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d43e216d757e2276d180eba8a192e300c4bfadb"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a228247de0686f328301f2d13982b56d78533501":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"303ca293666286b4ae2b0b4dbf10d3bf60ed727c":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"5d43e216d757e2276d180eba8a192e300c4bfadb":["52754a40a1550056d5637c8992b4076b5ed77328"],"52754a40a1550056d5637c8992b4076b5ed77328":["303ca293666286b4ae2b0b4dbf10d3bf60ed727c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}