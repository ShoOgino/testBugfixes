{"path":"solr/core/src/java/org/apache/solr/schema/SimplePreAnalyzedParser#hexToBytes(String).mjava","commits":[{"id":"232d48b2fd10ac5189a0ac4480ace7421be9de93","date":1334848212,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/SimplePreAnalyzedParser#hexToBytes(String).mjava","pathOld":"/dev/null","sourceNew":"  /** Utility method to convert byte array to a hex string. */\n  static byte[] hexToBytes(String hex) {\n    if (hex == null) {\n      return EMPTY_BYTES;\n    }\n    hex = hex.replaceAll(\"\\\\s+\", \"\");\n    if (hex.length() == 0) {\n      return EMPTY_BYTES;\n    }\n    ByteArrayOutputStream baos = new ByteArrayOutputStream(hex.length() / 2);\n    byte b;\n    for (int i = 0; i < hex.length(); i++) {\n      int high = charToNibble(hex.charAt(i));\n      int low = 0;\n      if (i < hex.length() - 1) {\n        i++;\n        low = charToNibble(hex.charAt(i));\n      }\n      b = (byte)(high << 4 | low);\n      baos.write(b);\n    }\n    return baos.toByteArray();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2afab61d220daa5bae853d70895d392bdd168f9","date":1453477451,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/SimplePreAnalyzedParser#hexToBytes(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/SimplePreAnalyzedParser#hexToBytes(String).mjava","sourceNew":"  /** Utility method to convert a hex string to a byte array. */\n  static byte[] hexToBytes(String hex) {\n    if (hex == null) {\n      return EMPTY_BYTES;\n    }\n    hex = hex.replaceAll(\"\\\\s+\", \"\");\n    if (hex.length() == 0) {\n      return EMPTY_BYTES;\n    }\n    ByteArrayOutputStream baos = new ByteArrayOutputStream(hex.length() / 2);\n    byte b;\n    for (int i = 0; i < hex.length(); i++) {\n      int high = charToNibble(hex.charAt(i));\n      int low = 0;\n      if (i < hex.length() - 1) {\n        i++;\n        low = charToNibble(hex.charAt(i));\n      }\n      b = (byte)(high << 4 | low);\n      baos.write(b);\n    }\n    return baos.toByteArray();\n  }\n\n","sourceOld":"  /** Utility method to convert byte array to a hex string. */\n  static byte[] hexToBytes(String hex) {\n    if (hex == null) {\n      return EMPTY_BYTES;\n    }\n    hex = hex.replaceAll(\"\\\\s+\", \"\");\n    if (hex.length() == 0) {\n      return EMPTY_BYTES;\n    }\n    ByteArrayOutputStream baos = new ByteArrayOutputStream(hex.length() / 2);\n    byte b;\n    for (int i = 0; i < hex.length(); i++) {\n      int high = charToNibble(hex.charAt(i));\n      int low = 0;\n      if (i < hex.length() - 1) {\n        i++;\n        low = charToNibble(hex.charAt(i));\n      }\n      b = (byte)(high << 4 | low);\n      baos.write(b);\n    }\n    return baos.toByteArray();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c2afab61d220daa5bae853d70895d392bdd168f9":["232d48b2fd10ac5189a0ac4480ace7421be9de93"],"232d48b2fd10ac5189a0ac4480ace7421be9de93":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c2afab61d220daa5bae853d70895d392bdd168f9"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["232d48b2fd10ac5189a0ac4480ace7421be9de93"],"c2afab61d220daa5bae853d70895d392bdd168f9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"232d48b2fd10ac5189a0ac4480ace7421be9de93":["c2afab61d220daa5bae853d70895d392bdd168f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}