{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testDelete().mjava","commits":[{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testDelete().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testDelete().mjava","sourceNew":"  @Test\n  public void testDelete(){\n    DebugServlet.clear();\n    HttpSolrClient client = new HttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\");\n    try {\n      client.deleteById(\"id\");\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML\n    client.setParser(new XMLResponseParser());\n    try {\n      client.deleteByQuery(\"*:*\");\n    } catch (Throwable t) {}\n    \n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    client.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testDelete(){\n    DebugServlet.clear();\n    HttpSolrServer server = new HttpSolrServer(jetty.getBaseUrl().toString() +\n                                               \"/debug/foo\");\n    try {\n      server.deleteById(\"id\");\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML\n    server.setParser(new XMLResponseParser());\n    try {\n      server.deleteByQuery(\"*:*\");\n    } catch (Throwable t) {}\n    \n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc3b13b430571c2e169f98fe38e1e7666f88522d","date":1422446157,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testDelete().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testDelete().mjava","sourceNew":"  @Test\n  public void testDelete() throws IOException {\n    DebugServlet.clear();\n    try (HttpSolrClient client = new HttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      try {\n        client.deleteById(\"id\");\n      } catch (Throwable t) {\n      }\n\n      //default method\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //default wt\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      //default version\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //keepalive\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n      //XML\n      client.setParser(new XMLResponseParser());\n      try {\n        client.deleteByQuery(\"*:*\");\n      } catch (Throwable t) {\n      }\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testDelete(){\n    DebugServlet.clear();\n    HttpSolrClient client = new HttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\");\n    try {\n      client.deleteById(\"id\");\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML\n    client.setParser(new XMLResponseParser());\n    try {\n      client.deleteByQuery(\"*:*\");\n    } catch (Throwable t) {}\n    \n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    client.shutdown();\n  }\n\n","bugFix":null,"bugIntro":["b4407017a35dea85f652ec066e4565818dd75436"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b4407017a35dea85f652ec066e4565818dd75436","date":1431296729,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testDelete().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testDelete().mjava","sourceNew":"  @Test\n  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (HttpSolrClient client = new HttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      try {\n        client.deleteById(\"id\");\n      } catch (ParseException ignored) {}\n\n      //default method\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //default wt\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      //default version\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //keepalive\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n      //XML\n      client.setParser(new XMLResponseParser());\n      try {\n        client.deleteByQuery(\"*:*\");\n      } catch (ParseException ignored) {}\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testDelete() throws IOException {\n    DebugServlet.clear();\n    try (HttpSolrClient client = new HttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      try {\n        client.deleteById(\"id\");\n      } catch (Throwable t) {\n      }\n\n      //default method\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //default wt\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      //default version\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //keepalive\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n      //XML\n      client.setParser(new XMLResponseParser());\n      try {\n        client.deleteByQuery(\"*:*\");\n      } catch (Throwable t) {\n      }\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    }\n\n  }\n\n","bugFix":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testDelete().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testDelete().mjava","sourceNew":"  @Test\n  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (HttpSolrClient client = getHttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      try {\n        client.deleteById(\"id\");\n      } catch (ParseException ignored) {}\n\n      //default method\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //default wt\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      //default version\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //keepalive\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n      //XML\n      client.setParser(new XMLResponseParser());\n      try {\n        client.deleteByQuery(\"*:*\");\n      } catch (ParseException ignored) {}\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (HttpSolrClient client = new HttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      try {\n        client.deleteById(\"id\");\n      } catch (ParseException ignored) {}\n\n      //default method\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //default wt\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      //default version\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //keepalive\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n      //XML\n      client.setParser(new XMLResponseParser());\n      try {\n        client.deleteByQuery(\"*:*\");\n      } catch (ParseException ignored) {}\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testDelete().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testDelete().mjava","sourceNew":"  @Test\n  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (HttpSolrClient client = getHttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      try {\n        client.deleteById(\"id\");\n      } catch (ParseException ignored) {}\n\n      //default method\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //default wt\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      //default version\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //keepalive\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n      //XML\n      client.setParser(new XMLResponseParser());\n      try {\n        client.deleteByQuery(\"*:*\");\n      } catch (ParseException ignored) {}\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (HttpSolrClient client = new HttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      try {\n        client.deleteById(\"id\");\n      } catch (ParseException ignored) {}\n\n      //default method\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //default wt\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      //default version\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //keepalive\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n      //XML\n      client.setParser(new XMLResponseParser());\n      try {\n        client.deleteByQuery(\"*:*\");\n      } catch (ParseException ignored) {}\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testDelete().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testDelete().mjava","sourceNew":"  @Test\n  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (HttpSolrClient client = getHttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      expectThrows(ParseException.class, () -> client.deleteById(\"id\"));\n\n      //default method\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //default wt\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      //default version\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //keepalive\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n      //XML\n      client.setParser(new XMLResponseParser());\n      expectThrows(ParseException.class, () -> client.deleteByQuery(\"*:*\"));\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (HttpSolrClient client = getHttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      try {\n        client.deleteById(\"id\");\n      } catch (ParseException ignored) {}\n\n      //default method\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //default wt\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      //default version\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //keepalive\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n      //XML\n      client.setParser(new XMLResponseParser());\n      try {\n        client.deleteByQuery(\"*:*\");\n      } catch (ParseException ignored) {}\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    }\n\n  }\n\n","bugFix":null,"bugIntro":["ba4636b043a2611cc1c43bad730a78b6d5bc4a5f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testDelete().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testDelete().mjava","sourceNew":"  @Test\n  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (HttpSolrClient client = getHttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      expectThrows(ParseException.class, () -> client.deleteById(\"id\"));\n\n      //default method\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //default wt\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      //default version\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //keepalive\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n      //XML\n      client.setParser(new XMLResponseParser());\n      expectThrows(ParseException.class, () -> client.deleteByQuery(\"*:*\"));\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (HttpSolrClient client = getHttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      try {\n        client.deleteById(\"id\");\n      } catch (ParseException ignored) {}\n\n      //default method\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //default wt\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      //default version\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //keepalive\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n      //XML\n      client.setParser(new XMLResponseParser());\n      try {\n        client.deleteByQuery(\"*:*\");\n      } catch (ParseException ignored) {}\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan Høydahl","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testDelete().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testDelete().mjava","sourceNew":"  @Test\n  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (HttpSolrClient client = getHttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      expectThrows(ParseException.class, () -> client.deleteById(\"id\"));\n\n      //default method\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //default wt\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      //default version\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //keepalive\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n      //XML\n      client.setParser(new XMLResponseParser());\n      expectThrows(ParseException.class, () -> client.deleteByQuery(\"*:*\"));\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (HttpSolrClient client = getHttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      try {\n        client.deleteById(\"id\");\n      } catch (ParseException ignored) {}\n\n      //default method\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //default wt\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      //default version\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //keepalive\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n      //XML\n      client.setParser(new XMLResponseParser());\n      try {\n        client.deleteByQuery(\"*:*\");\n      } catch (ParseException ignored) {}\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba4636b043a2611cc1c43bad730a78b6d5bc4a5f","date":1589320207,"type":3,"author":"Samuel García Martínez","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testDelete().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testDelete().mjava","sourceNew":"  @Test\n  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (HttpSolrClient client = getHttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      expectThrows(BaseHttpSolrClient.RemoteSolrException.class, () -> client.deleteById(\"id\"));\n\n      //default method\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //default wt\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      //default version\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //keepalive\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n      //XML\n      client.setParser(new XMLResponseParser());\n      expectThrows(BaseHttpSolrClient.RemoteSolrException.class, () -> client.deleteByQuery(\"*:*\"));\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testDelete() throws Exception {\n    DebugServlet.clear();\n    try (HttpSolrClient client = getHttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\")) {\n      expectThrows(ParseException.class, () -> client.deleteById(\"id\"));\n\n      //default method\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //default wt\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      //default version\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      //agent\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      //keepalive\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n      //XML\n      client.setParser(new XMLResponseParser());\n      expectThrows(ParseException.class, () -> client.deleteByQuery(\"*:*\"));\n\n      assertEquals(\"post\", DebugServlet.lastMethod);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n      assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n      assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n      assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n      assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n      assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    }\n\n  }\n\n","bugFix":["d1a307447328c95a00248512b40d7a5ff12ecd6a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["b4407017a35dea85f652ec066e4565818dd75436"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["b4407017a35dea85f652ec066e4565818dd75436","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"b4407017a35dea85f652ec066e4565818dd75436":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"f8061ddd97f3352007d927dae445884a6f3d857b":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba4636b043a2611cc1c43bad730a78b6d5bc4a5f"],"ba4636b043a2611cc1c43bad730a78b6d5bc4a5f":["d1a307447328c95a00248512b40d7a5ff12ecd6a"]},"commit2Childs":{"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bafca15d8e408346a67f4282ad1143b88023893b"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b"],"b4407017a35dea85f652ec066e4565818dd75436":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["b4407017a35dea85f652ec066e4565818dd75436"],"bafca15d8e408346a67f4282ad1143b88023893b":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","ba4636b043a2611cc1c43bad730a78b6d5bc4a5f"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"ba4636b043a2611cc1c43bad730a78b6d5bc4a5f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}