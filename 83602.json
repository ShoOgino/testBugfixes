{"path":"lucene/core/src/java/org/apache/lucene/index/MergeState.CheckAbort#work(double).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergeState.CheckAbort#work(double).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MergeState.CheckAbort#work(double).mjava","sourceNew":"    /**\n     * Records the fact that roughly units amount of work\n     * have been done since this method was last called.\n     * When adding time-consuming code into SegmentMerger,\n     * you should test different values for units to ensure\n     * that the time in between calls to merge.checkAborted\n     * is up to ~ 1 second.\n     */\n    public void work(double units) throws MergePolicy.MergeAbortedException {\n      workCount += units;\n      if (workCount >= 10000.0) {\n        merge.checkAborted(dir);\n        workCount = 0;\n      }\n    }\n\n","sourceOld":"    /**\n     * Records the fact that roughly units amount of work\n     * have been done since this method was last called.\n     * When adding time-consuming code into SegmentMerger,\n     * you should test different values for units to ensure\n     * that the time in between calls to merge.checkAborted\n     * is up to ~ 1 second.\n     */\n    public void work(double units) throws MergePolicy.MergeAbortedException {\n      workCount += units;\n      if (workCount >= 10000.0) {\n        merge.checkAborted(dir);\n        workCount = 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5faf65b6692f15cca0f87bf8666c87899afc619f","date":1420468108,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergeState.CheckAbort#work(double).mjava","sourceNew":null,"sourceOld":"    /**\n     * Records the fact that roughly units amount of work\n     * have been done since this method was last called.\n     * When adding time-consuming code into SegmentMerger,\n     * you should test different values for units to ensure\n     * that the time in between calls to merge.checkAborted\n     * is up to ~ 1 second.\n     */\n    public void work(double units) throws MergePolicy.MergeAbortedException {\n      workCount += units;\n      if (workCount >= 10000.0) {\n        merge.checkAborted(dir);\n        workCount = 0;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5faf65b6692f15cca0f87bf8666c87899afc619f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5faf65b6692f15cca0f87bf8666c87899afc619f"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5faf65b6692f15cca0f87bf8666c87899afc619f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"5faf65b6692f15cca0f87bf8666c87899afc619f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}