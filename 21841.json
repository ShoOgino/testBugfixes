{"path":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cn/TestChineseTokenizer#testEnglish().mjava","commits":[{"id":"45b06c3ff8a4d9d3d751dd311e51c59303c2719c","date":1250600126,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cn/TestChineseTokenizer#testEnglish().mjava","pathOld":"/dev/null","sourceNew":"    /*\n     * ChineseTokenizer tokenizes english similar to SimpleAnalyzer.\n     * it will lowercase terms automatically.\n     * \n     * ChineseFilter has an english stopword list, it also removes any single character tokens.\n     * the stopword list is case-sensitive.\n     */\n    public void testEnglish() throws Exception\n    {\n      Analyzer chinese = new ChineseAnalyzer();\n      assertAnalyzesTo(chinese, \"This is a Test. b c d\",\n          new String[] { \"test\" });\n      \n      Analyzer justTokenizer = new JustChineseTokenizerAnalyzer();\n      assertAnalyzesTo(justTokenizer, \"This is a Test. b c d\",\n          new String[] { \"this\", \"is\", \"a\", \"test\", \"b\", \"c\", \"d\" });\n      \n      Analyzer justFilter = new JustChineseFilterAnalyzer();\n      assertAnalyzesTo(justFilter, \"This is a Test. b c d\", \n          new String[] { \"This\", \"Test.\" });\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/cn/TestChineseTokenizer#testEnglish().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cn/TestChineseTokenizer#testEnglish().mjava","sourceNew":"    /*\n     * ChineseTokenizer tokenizes english similar to SimpleAnalyzer.\n     * it will lowercase terms automatically.\n     * \n     * ChineseFilter has an english stopword list, it also removes any single character tokens.\n     * the stopword list is case-sensitive.\n     */\n    public void testEnglish() throws Exception\n    {\n      Analyzer chinese = new ChineseAnalyzer();\n      assertAnalyzesTo(chinese, \"This is a Test. b c d\",\n          new String[] { \"test\" });\n      \n      Analyzer justTokenizer = new JustChineseTokenizerAnalyzer();\n      assertAnalyzesTo(justTokenizer, \"This is a Test. b c d\",\n          new String[] { \"this\", \"is\", \"a\", \"test\", \"b\", \"c\", \"d\" });\n      \n      Analyzer justFilter = new JustChineseFilterAnalyzer();\n      assertAnalyzesTo(justFilter, \"This is a Test. b c d\", \n          new String[] { \"This\", \"Test.\" });\n    }\n\n","sourceOld":"    /*\n     * ChineseTokenizer tokenizes english similar to SimpleAnalyzer.\n     * it will lowercase terms automatically.\n     * \n     * ChineseFilter has an english stopword list, it also removes any single character tokens.\n     * the stopword list is case-sensitive.\n     */\n    public void testEnglish() throws Exception\n    {\n      Analyzer chinese = new ChineseAnalyzer();\n      assertAnalyzesTo(chinese, \"This is a Test. b c d\",\n          new String[] { \"test\" });\n      \n      Analyzer justTokenizer = new JustChineseTokenizerAnalyzer();\n      assertAnalyzesTo(justTokenizer, \"This is a Test. b c d\",\n          new String[] { \"this\", \"is\", \"a\", \"test\", \"b\", \"c\", \"d\" });\n      \n      Analyzer justFilter = new JustChineseFilterAnalyzer();\n      assertAnalyzesTo(justFilter, \"This is a Test. b c d\", \n          new String[] { \"This\", \"Test.\" });\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"45b06c3ff8a4d9d3d751dd311e51c59303c2719c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["45b06c3ff8a4d9d3d751dd311e51c59303c2719c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["45b06c3ff8a4d9d3d751dd311e51c59303c2719c"],"45b06c3ff8a4d9d3d751dd311e51c59303c2719c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}