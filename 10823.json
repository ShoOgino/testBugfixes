{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#constructPrimitiveObject(String).mjava","commits":[{"id":"37f0902b794e42ac312bfd9daa69e6a523cf4675","date":1447303057,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#constructPrimitiveObject(String).mjava","pathOld":"/dev/null","sourceNew":"  public Object constructPrimitiveObject(String original){\n    String lower = original.trim().toLowerCase(Locale.ROOT);\n    \n    if(\"null\".equals(lower)){ return null; }\n    if(\"true\".equals(lower) || \"false\".equals(lower)){ return Boolean.parseBoolean(lower); }\n    try{ return Long.valueOf(original); } catch(Exception e){};\n    try{ if (original.matches(\".{1,8}\")){ return Float.valueOf(original); }} catch(Exception e){};\n    try{ if (original.matches(\".{1,17}\")){ return Double.valueOf(original); }} catch(Exception e){};\n    \n    // is a string\n    return original;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0dbd11ae1d6533e7454d66bfb1d5ea898dfa8e5","date":1475846642,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#constructPrimitiveObject(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#constructPrimitiveObject(String).mjava","sourceNew":"  public Object constructPrimitiveObject(String original){\n    String lower = original.trim().toLowerCase(Locale.ROOT);\n    \n    if(\"null\".equals(lower)){ return null; }\n    if(\"true\".equals(lower) || \"false\".equals(lower)){ return Boolean.parseBoolean(lower); }\n    try{ return Long.valueOf(original); } catch(Exception ignored){};\n    try{ if (original.matches(\".{1,8}\")){ return Float.valueOf(original); }} catch(Exception ignored){};\n    try{ if (original.matches(\".{1,17}\")){ return Double.valueOf(original); }} catch(Exception ignored){};\n    \n    // is a string\n    return original;\n  }\n\n","sourceOld":"  public Object constructPrimitiveObject(String original){\n    String lower = original.trim().toLowerCase(Locale.ROOT);\n    \n    if(\"null\".equals(lower)){ return null; }\n    if(\"true\".equals(lower) || \"false\".equals(lower)){ return Boolean.parseBoolean(lower); }\n    try{ return Long.valueOf(original); } catch(Exception e){};\n    try{ if (original.matches(\".{1,8}\")){ return Float.valueOf(original); }} catch(Exception e){};\n    try{ if (original.matches(\".{1,17}\")){ return Double.valueOf(original); }} catch(Exception e){};\n    \n    // is a string\n    return original;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#constructPrimitiveObject(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#constructPrimitiveObject(String).mjava","sourceNew":"  public Object constructPrimitiveObject(String original){\n    String lower = original.trim().toLowerCase(Locale.ROOT);\n    \n    if(\"null\".equals(lower)){ return null; }\n    if(\"true\".equals(lower) || \"false\".equals(lower)){ return Boolean.parseBoolean(lower); }\n    try{ return Long.valueOf(original); } catch(Exception ignored){};\n    try{ if (original.matches(\".{1,8}\")){ return Float.valueOf(original); }} catch(Exception ignored){};\n    try{ if (original.matches(\".{1,17}\")){ return Double.valueOf(original); }} catch(Exception ignored){};\n    \n    // is a string\n    return original;\n  }\n\n","sourceOld":"  public Object constructPrimitiveObject(String original){\n    String lower = original.trim().toLowerCase(Locale.ROOT);\n    \n    if(\"null\".equals(lower)){ return null; }\n    if(\"true\".equals(lower) || \"false\".equals(lower)){ return Boolean.parseBoolean(lower); }\n    try{ return Long.valueOf(original); } catch(Exception e){};\n    try{ if (original.matches(\".{1,8}\")){ return Float.valueOf(original); }} catch(Exception e){};\n    try{ if (original.matches(\".{1,17}\")){ return Double.valueOf(original); }} catch(Exception e){};\n    \n    // is a string\n    return original;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68cfd3a389f231b8fe23dae4d0ddb2463e79b525","date":1495808626,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#constructPrimitiveObject(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#constructPrimitiveObject(String).mjava","sourceNew":"  public Object constructPrimitiveObject(String original){\n    String lower = original.trim().toLowerCase(Locale.ROOT);\n    \n    if(\"null\".equals(lower)){ return null; }\n    if(\"true\".equals(lower) || \"false\".equals(lower)){ return Boolean.parseBoolean(lower); }\n    try{ return Long.valueOf(original); } catch(Exception ignored){};\n    try{ if (original.matches(\".{1,8}\")){ return Double.valueOf(original); }} catch(Exception ignored){};\n    try{ if (original.matches(\".{1,17}\")){ return Double.valueOf(original); }} catch(Exception ignored){};\n    \n    // is a string\n    return original;\n  }\n\n","sourceOld":"  public Object constructPrimitiveObject(String original){\n    String lower = original.trim().toLowerCase(Locale.ROOT);\n    \n    if(\"null\".equals(lower)){ return null; }\n    if(\"true\".equals(lower) || \"false\".equals(lower)){ return Boolean.parseBoolean(lower); }\n    try{ return Long.valueOf(original); } catch(Exception ignored){};\n    try{ if (original.matches(\".{1,8}\")){ return Float.valueOf(original); }} catch(Exception ignored){};\n    try{ if (original.matches(\".{1,17}\")){ return Double.valueOf(original); }} catch(Exception ignored){};\n    \n    // is a string\n    return original;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#constructPrimitiveObject(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#constructPrimitiveObject(String).mjava","sourceNew":"  public Object constructPrimitiveObject(String original){\n    String lower = original.trim().toLowerCase(Locale.ROOT);\n    \n    if(\"null\".equals(lower)){ return null; }\n    if(\"true\".equals(lower) || \"false\".equals(lower)){ return Boolean.parseBoolean(lower); }\n    try{ return Long.valueOf(original); } catch(Exception ignored){};\n    try{ if (original.matches(\".{1,8}\")){ return Double.valueOf(original); }} catch(Exception ignored){};\n    try{ if (original.matches(\".{1,17}\")){ return Double.valueOf(original); }} catch(Exception ignored){};\n    \n    // is a string\n    return original;\n  }\n\n","sourceOld":"  public Object constructPrimitiveObject(String original){\n    String lower = original.trim().toLowerCase(Locale.ROOT);\n    \n    if(\"null\".equals(lower)){ return null; }\n    if(\"true\".equals(lower) || \"false\".equals(lower)){ return Boolean.parseBoolean(lower); }\n    try{ return Long.valueOf(original); } catch(Exception ignored){};\n    try{ if (original.matches(\".{1,8}\")){ return Float.valueOf(original); }} catch(Exception ignored){};\n    try{ if (original.matches(\".{1,17}\")){ return Double.valueOf(original); }} catch(Exception ignored){};\n    \n    // is a string\n    return original;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#constructPrimitiveObject(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#constructPrimitiveObject(String).mjava","sourceNew":"  public Object constructPrimitiveObject(String original){\n    String lower = original.trim().toLowerCase(Locale.ROOT);\n    \n    if(\"null\".equals(lower)){ return null; }\n    if(\"true\".equals(lower) || \"false\".equals(lower)){ return Boolean.parseBoolean(lower); }\n    try{ return Long.valueOf(original); } catch(Exception ignored){};\n    try{ if (original.matches(\".{1,8}\")){ return Double.valueOf(original); }} catch(Exception ignored){};\n    try{ if (original.matches(\".{1,17}\")){ return Double.valueOf(original); }} catch(Exception ignored){};\n    \n    // is a string\n    return original;\n  }\n\n","sourceOld":"  public Object constructPrimitiveObject(String original){\n    String lower = original.trim().toLowerCase(Locale.ROOT);\n    \n    if(\"null\".equals(lower)){ return null; }\n    if(\"true\".equals(lower) || \"false\".equals(lower)){ return Boolean.parseBoolean(lower); }\n    try{ return Long.valueOf(original); } catch(Exception ignored){};\n    try{ if (original.matches(\".{1,8}\")){ return Float.valueOf(original); }} catch(Exception ignored){};\n    try{ if (original.matches(\".{1,17}\")){ return Double.valueOf(original); }} catch(Exception ignored){};\n    \n    // is a string\n    return original;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1df12fdfa92024c9bc6b6b0e70abb6f5a0cb61cc","date":1539269037,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#constructPrimitiveObject(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#constructPrimitiveObject(String).mjava","sourceNew":"  public Object constructPrimitiveObject(String original){\n    String lower = original.trim().toLowerCase(Locale.ROOT);\n    \n    if(\"null\".equals(lower)){ return null; }\n    if(\"true\".equals(lower) || \"false\".equals(lower)){ return Boolean.parseBoolean(lower); }\n    try{ return Long.valueOf(original); } catch(Exception ignored){};\n    try{ return Double.valueOf(original); } catch(Exception ignored){};\n\n    // is a string\n    return original;\n  }\n\n","sourceOld":"  public Object constructPrimitiveObject(String original){\n    String lower = original.trim().toLowerCase(Locale.ROOT);\n    \n    if(\"null\".equals(lower)){ return null; }\n    if(\"true\".equals(lower) || \"false\".equals(lower)){ return Boolean.parseBoolean(lower); }\n    try{ return Long.valueOf(original); } catch(Exception ignored){};\n    try{ if (original.matches(\".{1,8}\")){ return Double.valueOf(original); }} catch(Exception ignored){};\n    try{ if (original.matches(\".{1,17}\")){ return Double.valueOf(original); }} catch(Exception ignored){};\n    \n    // is a string\n    return original;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60c716cf818aff6857d8490cd0fb8b5aa432408f","date":1577074826,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#constructPrimitiveObject(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#constructPrimitiveObject(String).mjava","sourceNew":"  public Object constructPrimitiveObject(String original){\n    String lower = original.trim().toLowerCase(Locale.ROOT);\n\n    if(\"null\".equals(lower)){ return null; }\n    if(\"true\".equals(lower) || \"false\".equals(lower)){ return Boolean.parseBoolean(lower); }\n    try{ return Long.valueOf(original); } catch(Exception ignored){};\n    try{ return Double.valueOf(original); } catch(Exception ignored){};\n\n    // is a string\n    return original;\n  }\n\n","sourceOld":"  public Object constructPrimitiveObject(String original){\n    String lower = original.trim().toLowerCase(Locale.ROOT);\n    \n    if(\"null\".equals(lower)){ return null; }\n    if(\"true\".equals(lower) || \"false\".equals(lower)){ return Boolean.parseBoolean(lower); }\n    try{ return Long.valueOf(original); } catch(Exception ignored){};\n    try{ return Double.valueOf(original); } catch(Exception ignored){};\n\n    // is a string\n    return original;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","date":1577276097,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#constructPrimitiveObject(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#constructPrimitiveObject(String).mjava","sourceNew":"  public Object constructPrimitiveObject(String original){\n    String lower = original.trim().toLowerCase(Locale.ROOT);\n\n    if(\"null\".equals(lower)){ return null; }\n    if(\"true\".equals(lower) || \"false\".equals(lower)){ return Boolean.parseBoolean(lower); }\n    try{ return Long.valueOf(original); } catch(Exception ignored){};\n    try{ return Double.valueOf(original); } catch(Exception ignored){};\n\n    // is a string\n    return original;\n  }\n\n","sourceOld":"  public Object constructPrimitiveObject(String original){\n    String lower = original.trim().toLowerCase(Locale.ROOT);\n    \n    if(\"null\".equals(lower)){ return null; }\n    if(\"true\".equals(lower) || \"false\".equals(lower)){ return Boolean.parseBoolean(lower); }\n    try{ return Long.valueOf(original); } catch(Exception ignored){};\n    try{ return Double.valueOf(original); } catch(Exception ignored){};\n\n    // is a string\n    return original;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"804a8d5358fe7b7563b85ee7838714d720b89272","date":1591624987,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#constructPrimitiveObject(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#constructPrimitiveObject(String).mjava","sourceNew":"  public Object constructPrimitiveObject(String original) {\n    String lower = original.trim().toLowerCase(Locale.ROOT);\n\n    if (\"null\".equals(lower)) { return null; }\n    if (\"true\".equals(lower) || \"false\".equals(lower)){ return Boolean.parseBoolean(lower); }\n    try { return Long.valueOf(original); } catch(Exception ignored) { };\n    try { return Double.valueOf(original); } catch(Exception ignored) { };\n\n    // is a string\n    return original;\n  }\n\n","sourceOld":"  public Object constructPrimitiveObject(String original){\n    String lower = original.trim().toLowerCase(Locale.ROOT);\n\n    if(\"null\".equals(lower)){ return null; }\n    if(\"true\".equals(lower) || \"false\".equals(lower)){ return Boolean.parseBoolean(lower); }\n    try{ return Long.valueOf(original); } catch(Exception ignored){};\n    try{ return Double.valueOf(original); } catch(Exception ignored){};\n\n    // is a string\n    return original;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60c716cf818aff6857d8490cd0fb8b5aa432408f":["1df12fdfa92024c9bc6b6b0e70abb6f5a0cb61cc"],"c0dbd11ae1d6533e7454d66bfb1d5ea898dfa8e5":["37f0902b794e42ac312bfd9daa69e6a523cf4675"],"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a":["1df12fdfa92024c9bc6b6b0e70abb6f5a0cb61cc","60c716cf818aff6857d8490cd0fb8b5aa432408f"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["c0dbd11ae1d6533e7454d66bfb1d5ea898dfa8e5","68cfd3a389f231b8fe23dae4d0ddb2463e79b525"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"37f0902b794e42ac312bfd9daa69e6a523cf4675":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"68cfd3a389f231b8fe23dae4d0ddb2463e79b525":["c0dbd11ae1d6533e7454d66bfb1d5ea898dfa8e5"],"804a8d5358fe7b7563b85ee7838714d720b89272":["60c716cf818aff6857d8490cd0fb8b5aa432408f"],"1df12fdfa92024c9bc6b6b0e70abb6f5a0cb61cc":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["c0dbd11ae1d6533e7454d66bfb1d5ea898dfa8e5","68cfd3a389f231b8fe23dae4d0ddb2463e79b525"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["37f0902b794e42ac312bfd9daa69e6a523cf4675","c0dbd11ae1d6533e7454d66bfb1d5ea898dfa8e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["804a8d5358fe7b7563b85ee7838714d720b89272"]},"commit2Childs":{"60c716cf818aff6857d8490cd0fb8b5aa432408f":["96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","804a8d5358fe7b7563b85ee7838714d720b89272"],"c0dbd11ae1d6533e7454d66bfb1d5ea898dfa8e5":["e9017cf144952056066919f1ebc7897ff9bd71b1","68cfd3a389f231b8fe23dae4d0ddb2463e79b525","d1f5728f32a4a256b36cfabd7a2636452f599bb9","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a":[],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37f0902b794e42ac312bfd9daa69e6a523cf4675"],"37f0902b794e42ac312bfd9daa69e6a523cf4675":["c0dbd11ae1d6533e7454d66bfb1d5ea898dfa8e5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"68cfd3a389f231b8fe23dae4d0ddb2463e79b525":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"1df12fdfa92024c9bc6b6b0e70abb6f5a0cb61cc":["60c716cf818aff6857d8490cd0fb8b5aa432408f","96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a"],"804a8d5358fe7b7563b85ee7838714d720b89272":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["1df12fdfa92024c9bc6b6b0e70abb6f5a0cb61cc"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","e9017cf144952056066919f1ebc7897ff9bd71b1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}