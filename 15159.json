{"path":"solr/core/src/java/org/apache/solr/security/KerberosPlugin#doAuthenticate(ServletRequest,ServletResponse,FilterChain).mjava","commits":[{"id":"8293bb9f086fce9590482de97de6eac8381ae15a","date":1432275970,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/KerberosPlugin#doAuthenticate(ServletRequest,ServletResponse,FilterChain).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void doAuthenticate(ServletRequest req, ServletResponse rsp,\n      FilterChain chain) throws Exception {\n    log.debug(\"Request to authenticate using kerberos: \"+req);\n    kerberosFilter.doFilter(req, rsp, chain);    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20be168d828ac40d262f85364d02f15b491dd88b","date":1469725145,"type":3,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/KerberosPlugin#doAuthenticate(ServletRequest,ServletResponse,FilterChain).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/KerberosPlugin#doAuthenticate(ServletRequest,ServletResponse,FilterChain).mjava","sourceNew":"  @Override\n  public boolean doAuthenticate(ServletRequest req, ServletResponse rsp,\n      FilterChain chain) throws Exception {\n    log.debug(\"Request to authenticate using kerberos: \"+req);\n\n    final HttpServletResponse frsp = (HttpServletResponse)rsp;\n\n    // kerberosFilter may close the stream and write to closed streams,\n    // see HADOOP-13346.  To work around, pass a PrintWriter that ignores\n    // closes\n    HttpServletResponse rspCloseShield = new HttpServletResponseWrapper(frsp) {\n      @SuppressForbidden(reason = \"Hadoop DelegationTokenAuthenticationFilter uses response writer, this\" +\n          \"is providing a CloseShield on top of that\")\n      @Override\n      public PrintWriter getWriter() throws IOException {\n        final PrintWriter pw = new PrintWriterWrapper(frsp.getWriter()) {\n          @Override\n          public void close() {};\n        };\n        return pw;\n      }\n    };\n    kerberosFilter.doFilter(req, rspCloseShield, chain);\n    String requestContinuesAttr = (String)req.getAttribute(REQUEST_CONTINUES_ATTR);\n    if (requestContinuesAttr == null) {\n      log.warn(\"Could not find \" + REQUEST_CONTINUES_ATTR);\n      return false;\n    } else {\n      return Boolean.parseBoolean(requestContinuesAttr);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doAuthenticate(ServletRequest req, ServletResponse rsp,\n      FilterChain chain) throws Exception {\n    log.debug(\"Request to authenticate using kerberos: \"+req);\n    kerberosFilter.doFilter(req, rsp, chain);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/KerberosPlugin#doAuthenticate(ServletRequest,ServletResponse,FilterChain).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/KerberosPlugin#doAuthenticate(ServletRequest,ServletResponse,FilterChain).mjava","sourceNew":"  @Override\n  public boolean doAuthenticate(ServletRequest req, ServletResponse rsp,\n      FilterChain chain) throws Exception {\n    log.debug(\"Request to authenticate using kerberos: \"+req);\n\n    final HttpServletResponse frsp = (HttpServletResponse)rsp;\n\n    // kerberosFilter may close the stream and write to closed streams,\n    // see HADOOP-13346.  To work around, pass a PrintWriter that ignores\n    // closes\n    HttpServletResponse rspCloseShield = new HttpServletResponseWrapper(frsp) {\n      @SuppressForbidden(reason = \"Hadoop DelegationTokenAuthenticationFilter uses response writer, this\" +\n          \"is providing a CloseShield on top of that\")\n      @Override\n      public PrintWriter getWriter() throws IOException {\n        final PrintWriter pw = new PrintWriterWrapper(frsp.getWriter()) {\n          @Override\n          public void close() {};\n        };\n        return pw;\n      }\n    };\n    kerberosFilter.doFilter(req, rspCloseShield, chain);\n    String requestContinuesAttr = (String)req.getAttribute(REQUEST_CONTINUES_ATTR);\n    if (requestContinuesAttr == null) {\n      log.warn(\"Could not find \" + REQUEST_CONTINUES_ATTR);\n      return false;\n    } else {\n      return Boolean.parseBoolean(requestContinuesAttr);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doAuthenticate(ServletRequest req, ServletResponse rsp,\n      FilterChain chain) throws Exception {\n    log.debug(\"Request to authenticate using kerberos: \"+req);\n    kerberosFilter.doFilter(req, rsp, chain);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/KerberosPlugin#doAuthenticate(ServletRequest,ServletResponse,FilterChain).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/KerberosPlugin#doAuthenticate(ServletRequest,ServletResponse,FilterChain).mjava","sourceNew":"  @Override\n  public boolean doAuthenticate(ServletRequest req, ServletResponse rsp,\n      FilterChain chain) throws Exception {\n    log.debug(\"Request to authenticate using kerberos: \"+req);\n\n    final HttpServletResponse frsp = (HttpServletResponse)rsp;\n\n    // kerberosFilter may close the stream and write to closed streams,\n    // see HADOOP-13346.  To work around, pass a PrintWriter that ignores\n    // closes\n    HttpServletResponse rspCloseShield = new HttpServletResponseWrapper(frsp) {\n      @SuppressForbidden(reason = \"Hadoop DelegationTokenAuthenticationFilter uses response writer, this\" +\n          \"is providing a CloseShield on top of that\")\n      @Override\n      public PrintWriter getWriter() throws IOException {\n        final PrintWriter pw = new PrintWriterWrapper(frsp.getWriter()) {\n          @Override\n          public void close() {};\n        };\n        return pw;\n      }\n    };\n    kerberosFilter.doFilter(req, rspCloseShield, chain);\n    String requestContinuesAttr = (String)req.getAttribute(REQUEST_CONTINUES_ATTR);\n    if (requestContinuesAttr == null) {\n      log.warn(\"Could not find \" + REQUEST_CONTINUES_ATTR);\n      return false;\n    } else {\n      return Boolean.parseBoolean(requestContinuesAttr);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doAuthenticate(ServletRequest req, ServletResponse rsp,\n      FilterChain chain) throws Exception {\n    log.debug(\"Request to authenticate using kerberos: \"+req);\n    kerberosFilter.doFilter(req, rsp, chain);    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29887daf839649150d96855b142b76f5c45d60d2","date":1482160504,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/KerberosPlugin#doAuthenticate(ServletRequest,ServletResponse,FilterChain).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/KerberosPlugin#doAuthenticate(ServletRequest,ServletResponse,FilterChain).mjava","sourceNew":"  @Override\n  public boolean doAuthenticate(ServletRequest req, ServletResponse rsp,\n      FilterChain chain) throws Exception {\n    log.debug(\"Request to authenticate using kerberos: \"+req);\n\n    final HttpServletResponse frsp = (HttpServletResponse)rsp;\n\n    // kerberosFilter may close the stream and write to closed streams,\n    // see HADOOP-13346.  To work around, pass a PrintWriter that ignores\n    // closes\n    HttpServletResponse rspCloseShield = new HttpServletResponseWrapper(frsp) {\n      @SuppressForbidden(reason = \"Hadoop DelegationTokenAuthenticationFilter uses response writer, this\" +\n          \"is providing a CloseShield on top of that\")\n      @Override\n      public PrintWriter getWriter() throws IOException {\n        final PrintWriter pw = new PrintWriterWrapper(frsp.getWriter()) {\n          @Override\n          public void close() {};\n        };\n        return pw;\n      }\n    };\n    kerberosFilter.doFilter(req, rspCloseShield, chain);\n    String requestContinuesAttr = (String)req.getAttribute(RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n    if (requestContinuesAttr == null) {\n      log.warn(\"Could not find \" + RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n      return false;\n    } else {\n      return Boolean.parseBoolean(requestContinuesAttr);\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean doAuthenticate(ServletRequest req, ServletResponse rsp,\n      FilterChain chain) throws Exception {\n    log.debug(\"Request to authenticate using kerberos: \"+req);\n\n    final HttpServletResponse frsp = (HttpServletResponse)rsp;\n\n    // kerberosFilter may close the stream and write to closed streams,\n    // see HADOOP-13346.  To work around, pass a PrintWriter that ignores\n    // closes\n    HttpServletResponse rspCloseShield = new HttpServletResponseWrapper(frsp) {\n      @SuppressForbidden(reason = \"Hadoop DelegationTokenAuthenticationFilter uses response writer, this\" +\n          \"is providing a CloseShield on top of that\")\n      @Override\n      public PrintWriter getWriter() throws IOException {\n        final PrintWriter pw = new PrintWriterWrapper(frsp.getWriter()) {\n          @Override\n          public void close() {};\n        };\n        return pw;\n      }\n    };\n    kerberosFilter.doFilter(req, rspCloseShield, chain);\n    String requestContinuesAttr = (String)req.getAttribute(REQUEST_CONTINUES_ATTR);\n    if (requestContinuesAttr == null) {\n      log.warn(\"Could not find \" + REQUEST_CONTINUES_ATTR);\n      return false;\n    } else {\n      return Boolean.parseBoolean(requestContinuesAttr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/KerberosPlugin#doAuthenticate(ServletRequest,ServletResponse,FilterChain).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/KerberosPlugin#doAuthenticate(ServletRequest,ServletResponse,FilterChain).mjava","sourceNew":"  @Override\n  public boolean doAuthenticate(ServletRequest req, ServletResponse rsp,\n      FilterChain chain) throws Exception {\n    log.debug(\"Request to authenticate using kerberos: \"+req);\n\n    final HttpServletResponse frsp = (HttpServletResponse)rsp;\n\n    // kerberosFilter may close the stream and write to closed streams,\n    // see HADOOP-13346.  To work around, pass a PrintWriter that ignores\n    // closes\n    HttpServletResponse rspCloseShield = new HttpServletResponseWrapper(frsp) {\n      @SuppressForbidden(reason = \"Hadoop DelegationTokenAuthenticationFilter uses response writer, this\" +\n          \"is providing a CloseShield on top of that\")\n      @Override\n      public PrintWriter getWriter() throws IOException {\n        final PrintWriter pw = new PrintWriterWrapper(frsp.getWriter()) {\n          @Override\n          public void close() {};\n        };\n        return pw;\n      }\n    };\n    kerberosFilter.doFilter(req, rspCloseShield, chain);\n    String requestContinuesAttr = (String)req.getAttribute(RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n    if (requestContinuesAttr == null) {\n      log.warn(\"Could not find \" + RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n      return false;\n    } else {\n      return Boolean.parseBoolean(requestContinuesAttr);\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean doAuthenticate(ServletRequest req, ServletResponse rsp,\n      FilterChain chain) throws Exception {\n    log.debug(\"Request to authenticate using kerberos: \"+req);\n\n    final HttpServletResponse frsp = (HttpServletResponse)rsp;\n\n    // kerberosFilter may close the stream and write to closed streams,\n    // see HADOOP-13346.  To work around, pass a PrintWriter that ignores\n    // closes\n    HttpServletResponse rspCloseShield = new HttpServletResponseWrapper(frsp) {\n      @SuppressForbidden(reason = \"Hadoop DelegationTokenAuthenticationFilter uses response writer, this\" +\n          \"is providing a CloseShield on top of that\")\n      @Override\n      public PrintWriter getWriter() throws IOException {\n        final PrintWriter pw = new PrintWriterWrapper(frsp.getWriter()) {\n          @Override\n          public void close() {};\n        };\n        return pw;\n      }\n    };\n    kerberosFilter.doFilter(req, rspCloseShield, chain);\n    String requestContinuesAttr = (String)req.getAttribute(REQUEST_CONTINUES_ATTR);\n    if (requestContinuesAttr == null) {\n      log.warn(\"Could not find \" + REQUEST_CONTINUES_ATTR);\n      return false;\n    } else {\n      return Boolean.parseBoolean(requestContinuesAttr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a0ea515a31bb6b0279f3bbcc2bf88ed17eb0c0c","date":1551210752,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/KerberosPlugin#doAuthenticate(ServletRequest,ServletResponse,FilterChain).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/KerberosPlugin#doAuthenticate(ServletRequest,ServletResponse,FilterChain).mjava","sourceNew":"  @Override\n  public boolean doAuthenticate(ServletRequest req, ServletResponse rsp,\n      FilterChain chain) throws Exception {\n    log.debug(\"Request to authenticate using kerberos: \"+req);\n    kerberosFilter.doFilter(req, rsp, chain);\n    String requestContinuesAttr = (String)req.getAttribute(RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n    if (requestContinuesAttr == null) {\n      log.warn(\"Could not find \" + RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n      return false;\n    } else {\n      return Boolean.parseBoolean(requestContinuesAttr);\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean doAuthenticate(ServletRequest req, ServletResponse rsp,\n      FilterChain chain) throws Exception {\n    log.debug(\"Request to authenticate using kerberos: \"+req);\n\n    final HttpServletResponse frsp = (HttpServletResponse)rsp;\n\n    // kerberosFilter may close the stream and write to closed streams,\n    // see HADOOP-13346.  To work around, pass a PrintWriter that ignores\n    // closes\n    HttpServletResponse rspCloseShield = new HttpServletResponseWrapper(frsp) {\n      @SuppressForbidden(reason = \"Hadoop DelegationTokenAuthenticationFilter uses response writer, this\" +\n          \"is providing a CloseShield on top of that\")\n      @Override\n      public PrintWriter getWriter() throws IOException {\n        final PrintWriter pw = new PrintWriterWrapper(frsp.getWriter()) {\n          @Override\n          public void close() {};\n        };\n        return pw;\n      }\n    };\n    kerberosFilter.doFilter(req, rspCloseShield, chain);\n    String requestContinuesAttr = (String)req.getAttribute(RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n    if (requestContinuesAttr == null) {\n      log.warn(\"Could not find \" + RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n      return false;\n    } else {\n      return Boolean.parseBoolean(requestContinuesAttr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"accbc347dd28993a84ae51e9e6f01e31a26a7184","date":1551252530,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/KerberosPlugin#doAuthenticate(ServletRequest,ServletResponse,FilterChain).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/KerberosPlugin#doAuthenticate(ServletRequest,ServletResponse,FilterChain).mjava","sourceNew":"  @Override\n  public boolean doAuthenticate(ServletRequest req, ServletResponse rsp,\n      FilterChain chain) throws Exception {\n    log.debug(\"Request to authenticate using kerberos: \"+req);\n    kerberosFilter.doFilter(req, rsp, chain);\n    String requestContinuesAttr = (String)req.getAttribute(RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n    if (requestContinuesAttr == null) {\n      log.warn(\"Could not find \" + RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n      return false;\n    } else {\n      return Boolean.parseBoolean(requestContinuesAttr);\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean doAuthenticate(ServletRequest req, ServletResponse rsp,\n      FilterChain chain) throws Exception {\n    log.debug(\"Request to authenticate using kerberos: \"+req);\n\n    final HttpServletResponse frsp = (HttpServletResponse)rsp;\n\n    // kerberosFilter may close the stream and write to closed streams,\n    // see HADOOP-13346.  To work around, pass a PrintWriter that ignores\n    // closes\n    HttpServletResponse rspCloseShield = new HttpServletResponseWrapper(frsp) {\n      @SuppressForbidden(reason = \"Hadoop DelegationTokenAuthenticationFilter uses response writer, this\" +\n          \"is providing a CloseShield on top of that\")\n      @Override\n      public PrintWriter getWriter() throws IOException {\n        final PrintWriter pw = new PrintWriterWrapper(frsp.getWriter()) {\n          @Override\n          public void close() {};\n        };\n        return pw;\n      }\n    };\n    kerberosFilter.doFilter(req, rspCloseShield, chain);\n    String requestContinuesAttr = (String)req.getAttribute(RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n    if (requestContinuesAttr == null) {\n      log.warn(\"Could not find \" + RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n      return false;\n    } else {\n      return Boolean.parseBoolean(requestContinuesAttr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba52b298388110adda4c077defc2ab02b2b3fcc7","date":1563183607,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/KerberosPlugin#doAuthenticate(ServletRequest,ServletResponse,FilterChain).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/KerberosPlugin#doAuthenticate(ServletRequest,ServletResponse,FilterChain).mjava","sourceNew":"  @Override\n  public boolean doAuthenticate(ServletRequest req, ServletResponse rsp,\n      FilterChain chain) throws Exception {\n    log.debug(\"Request to authenticate using kerberos: \"+req);\n    kerberosFilter.doFilter(req, rsp, chain);\n\n    String requestContinuesAttr = (String)req.getAttribute(RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n    if (requestContinuesAttr == null) {\n      log.warn(\"Could not find \" + RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n      return false;\n    } else {\n      return Boolean.parseBoolean(requestContinuesAttr);\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean doAuthenticate(ServletRequest req, ServletResponse rsp,\n      FilterChain chain) throws Exception {\n    log.debug(\"Request to authenticate using kerberos: \"+req);\n    kerberosFilter.doFilter(req, rsp, chain);\n    String requestContinuesAttr = (String)req.getAttribute(RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n    if (requestContinuesAttr == null) {\n      log.warn(\"Could not find \" + RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n      return false;\n    } else {\n      return Boolean.parseBoolean(requestContinuesAttr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54faedfb0e03479a38f5ee82f2dfaeea536e9404","date":1587251295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/KerberosPlugin#doAuthenticate(ServletRequest,ServletResponse,FilterChain).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/KerberosPlugin#doAuthenticate(ServletRequest,ServletResponse,FilterChain).mjava","sourceNew":"  @Override\n  public boolean doAuthenticate(ServletRequest req, ServletResponse rsp,\n      FilterChain chain) throws Exception {\n    log.debug(\"Request to authenticate using kerberos: {}\", req);\n    kerberosFilter.doFilter(req, rsp, chain);\n\n    String requestContinuesAttr = (String)req.getAttribute(RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n    if (requestContinuesAttr == null) {\n      log.warn(\"Could not find {}\", RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n      return false;\n    } else {\n      return Boolean.parseBoolean(requestContinuesAttr);\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean doAuthenticate(ServletRequest req, ServletResponse rsp,\n      FilterChain chain) throws Exception {\n    log.debug(\"Request to authenticate using kerberos: \"+req);\n    kerberosFilter.doFilter(req, rsp, chain);\n\n    String requestContinuesAttr = (String)req.getAttribute(RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n    if (requestContinuesAttr == null) {\n      log.warn(\"Could not find \" + RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n      return false;\n    } else {\n      return Boolean.parseBoolean(requestContinuesAttr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23b436ffee26b67f87efef6a3bab24697332b6b2","date":1587575178,"type":5,"author":"Mike Drob","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/KerberosPlugin#doAuthenticate(HttpServletRequest,HttpServletResponse,FilterChain).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/KerberosPlugin#doAuthenticate(ServletRequest,ServletResponse,FilterChain).mjava","sourceNew":"  @Override\n  public boolean doAuthenticate(HttpServletRequest req, HttpServletResponse rsp,\n                                FilterChain chain) throws Exception {\n    log.debug(\"Request to authenticate using kerberos: {}\", req);\n    kerberosFilter.doFilter(req, rsp, chain);\n\n    String requestContinuesAttr = (String)req.getAttribute(RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n    if (requestContinuesAttr == null) {\n      log.warn(\"Could not find {}\", RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n      return false;\n    } else {\n      return Boolean.parseBoolean(requestContinuesAttr);\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean doAuthenticate(ServletRequest req, ServletResponse rsp,\n      FilterChain chain) throws Exception {\n    log.debug(\"Request to authenticate using kerberos: {}\", req);\n    kerberosFilter.doFilter(req, rsp, chain);\n\n    String requestContinuesAttr = (String)req.getAttribute(RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n    if (requestContinuesAttr == null) {\n      log.warn(\"Could not find {}\", RequestContinuesRecorderAuthenticationHandler.REQUEST_CONTINUES_ATTR);\n      return false;\n    } else {\n      return Boolean.parseBoolean(requestContinuesAttr);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29887daf839649150d96855b142b76f5c45d60d2":["20be168d828ac40d262f85364d02f15b491dd88b"],"23b436ffee26b67f87efef6a3bab24697332b6b2":["54faedfb0e03479a38f5ee82f2dfaeea536e9404"],"ba52b298388110adda4c077defc2ab02b2b3fcc7":["accbc347dd28993a84ae51e9e6f01e31a26a7184"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["8293bb9f086fce9590482de97de6eac8381ae15a","20be168d828ac40d262f85364d02f15b491dd88b"],"54faedfb0e03479a38f5ee82f2dfaeea536e9404":["ba52b298388110adda4c077defc2ab02b2b3fcc7"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","29887daf839649150d96855b142b76f5c45d60d2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8293bb9f086fce9590482de97de6eac8381ae15a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"20be168d828ac40d262f85364d02f15b491dd88b":["8293bb9f086fce9590482de97de6eac8381ae15a"],"accbc347dd28993a84ae51e9e6f01e31a26a7184":["29887daf839649150d96855b142b76f5c45d60d2","8a0ea515a31bb6b0279f3bbcc2bf88ed17eb0c0c"],"8a0ea515a31bb6b0279f3bbcc2bf88ed17eb0c0c":["29887daf839649150d96855b142b76f5c45d60d2"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["8293bb9f086fce9590482de97de6eac8381ae15a","20be168d828ac40d262f85364d02f15b491dd88b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23b436ffee26b67f87efef6a3bab24697332b6b2"]},"commit2Childs":{"29887daf839649150d96855b142b76f5c45d60d2":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","accbc347dd28993a84ae51e9e6f01e31a26a7184","8a0ea515a31bb6b0279f3bbcc2bf88ed17eb0c0c"],"23b436ffee26b67f87efef6a3bab24697332b6b2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ba52b298388110adda4c077defc2ab02b2b3fcc7":["54faedfb0e03479a38f5ee82f2dfaeea536e9404"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"54faedfb0e03479a38f5ee82f2dfaeea536e9404":["23b436ffee26b67f87efef6a3bab24697332b6b2"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8293bb9f086fce9590482de97de6eac8381ae15a"],"8293bb9f086fce9590482de97de6eac8381ae15a":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","20be168d828ac40d262f85364d02f15b491dd88b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"20be168d828ac40d262f85364d02f15b491dd88b":["29887daf839649150d96855b142b76f5c45d60d2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"accbc347dd28993a84ae51e9e6f01e31a26a7184":["ba52b298388110adda4c077defc2ab02b2b3fcc7"],"8a0ea515a31bb6b0279f3bbcc2bf88ed17eb0c0c":["accbc347dd28993a84ae51e9e6f01e31a26a7184"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}