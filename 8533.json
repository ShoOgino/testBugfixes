{"path":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffObject(Object,Object).mjava","commits":[{"id":"2396be4785ec8ca6c942dff4d20c1c93dd03db6d","date":1333735663,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffObject(Object,Object).mjava","pathOld":"/dev/null","sourceNew":"  public Object diffObject(Object ref, Object now) {\n    if(ref instanceof NamedList) {\n      return diffNamedList((NamedList)ref, (NamedList)now);\n    }\n    if(ref.equals(now)) {\n      return ref;\n    }\n    StringBuilder str = new StringBuilder();\n    str.append(\"Was: \")\n     .append(ref).append(\", Now: \").append(now);\n    \n    if(ref instanceof Number) {\n      NumberFormat nf = NumberFormat.getIntegerInstance();\n      if((ref instanceof Double) || (ref instanceof Float)) {\n        nf = NumberFormat.getInstance();\n      }\n      double diff = ((Number)now).doubleValue() - ((Number)ref).doubleValue();\n      str.append( \", Delta: \").append(nf.format(diff));\n    }\n    return str.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a76d075a12d031f724a9a80e2e7e79f40d17b5b5","384dd87adbcc629a0f0e7f37148d09f6a586b793"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a76d075a12d031f724a9a80e2e7e79f40d17b5b5","date":1333822348,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffObject(Object,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffObject(Object,Object).mjava","sourceNew":"  public Object diffObject(Object ref, Object now) {\n    if(ref instanceof NamedList) {\n      return diffNamedList((NamedList)ref, (NamedList)now);\n    }\n    if(ref.equals(now)) {\n      return ref;\n    }\n    StringBuilder str = new StringBuilder();\n    str.append(\"Was: \")\n     .append(ref).append(\", Now: \").append(now);\n    \n    if(ref instanceof Number) {\n      NumberFormat nf = NumberFormat.getIntegerInstance(Locale.ENGLISH);\n      if((ref instanceof Double) || (ref instanceof Float)) {\n        nf = NumberFormat.getInstance(Locale.ENGLISH);\n      }\n      double diff = ((Number)now).doubleValue() - ((Number)ref).doubleValue();\n      str.append( \", Delta: \").append(nf.format(diff));\n    }\n    return str.toString();\n  }\n\n","sourceOld":"  public Object diffObject(Object ref, Object now) {\n    if(ref instanceof NamedList) {\n      return diffNamedList((NamedList)ref, (NamedList)now);\n    }\n    if(ref.equals(now)) {\n      return ref;\n    }\n    StringBuilder str = new StringBuilder();\n    str.append(\"Was: \")\n     .append(ref).append(\", Now: \").append(now);\n    \n    if(ref instanceof Number) {\n      NumberFormat nf = NumberFormat.getIntegerInstance();\n      if((ref instanceof Double) || (ref instanceof Float)) {\n        nf = NumberFormat.getInstance();\n      }\n      double diff = ((Number)now).doubleValue() - ((Number)ref).doubleValue();\n      str.append( \", Delta: \").append(nf.format(diff));\n    }\n    return str.toString();\n  }\n\n","bugFix":["2396be4785ec8ca6c942dff4d20c1c93dd03db6d"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"384dd87adbcc629a0f0e7f37148d09f6a586b793","date":1334735544,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffObject(Object,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffObject(Object,Object).mjava","sourceNew":"  public Object diffObject(Object ref, Object now) {\n    if(ref instanceof NamedList) {\n      return diffNamedList((NamedList)ref, (NamedList)now);\n    }\n    if(ref.equals(now)) {\n      return ref;\n    }\n    StringBuilder str = new StringBuilder();\n    str.append(\"Was: \")\n     .append(ref).append(\", Now: \").append(now);\n    \n    if(ref instanceof Number) {\n      NumberFormat nf = NumberFormat.getIntegerInstance(Locale.ENGLISH);\n      if((ref instanceof Double) || (ref instanceof Float)) {\n        nf = NumberFormat.getInstance(Locale.ENGLISH);\n      }\n      double dref = ((Number)ref).doubleValue();\n      double dnow = ((Number)now).doubleValue();\n      double diff = Double.NaN;\n      if(Double.isNaN(dref)) {\n        diff = dnow;\n      }\n      else if(Double.isNaN(dnow)) {\n        diff = dref;\n      }\n      else {\n        diff = dnow-dref;\n      }\n      str.append( \", Delta: \").append(nf.format(diff));\n    }\n    return str.toString();\n  }\n\n","sourceOld":"  public Object diffObject(Object ref, Object now) {\n    if(ref instanceof NamedList) {\n      return diffNamedList((NamedList)ref, (NamedList)now);\n    }\n    if(ref.equals(now)) {\n      return ref;\n    }\n    StringBuilder str = new StringBuilder();\n    str.append(\"Was: \")\n     .append(ref).append(\", Now: \").append(now);\n    \n    if(ref instanceof Number) {\n      NumberFormat nf = NumberFormat.getIntegerInstance(Locale.ENGLISH);\n      if((ref instanceof Double) || (ref instanceof Float)) {\n        nf = NumberFormat.getInstance(Locale.ENGLISH);\n      }\n      double diff = ((Number)now).doubleValue() - ((Number)ref).doubleValue();\n      str.append( \", Delta: \").append(nf.format(diff));\n    }\n    return str.toString();\n  }\n\n","bugFix":["2396be4785ec8ca6c942dff4d20c1c93dd03db6d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9279c7cd47f17e1e8b674a3741ff5f040bc680be","date":1341675760,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffObject(Object,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffObject(Object,Object).mjava","sourceNew":"  public Object diffObject(Object ref, Object now) {\n    if(ref instanceof NamedList) {\n      return diffNamedList((NamedList)ref, (NamedList)now);\n    }\n    if(ref.equals(now)) {\n      return ref;\n    }\n    StringBuilder str = new StringBuilder();\n    str.append(\"Was: \")\n     .append(ref).append(\", Now: \").append(now);\n    \n    if(ref instanceof Number) {\n      NumberFormat nf = NumberFormat.getIntegerInstance(Locale.ROOT);\n      if((ref instanceof Double) || (ref instanceof Float)) {\n        nf = NumberFormat.getInstance(Locale.ROOT);\n      }\n      double dref = ((Number)ref).doubleValue();\n      double dnow = ((Number)now).doubleValue();\n      double diff = Double.NaN;\n      if(Double.isNaN(dref)) {\n        diff = dnow;\n      }\n      else if(Double.isNaN(dnow)) {\n        diff = dref;\n      }\n      else {\n        diff = dnow-dref;\n      }\n      str.append( \", Delta: \").append(nf.format(diff));\n    }\n    return str.toString();\n  }\n\n","sourceOld":"  public Object diffObject(Object ref, Object now) {\n    if(ref instanceof NamedList) {\n      return diffNamedList((NamedList)ref, (NamedList)now);\n    }\n    if(ref.equals(now)) {\n      return ref;\n    }\n    StringBuilder str = new StringBuilder();\n    str.append(\"Was: \")\n     .append(ref).append(\", Now: \").append(now);\n    \n    if(ref instanceof Number) {\n      NumberFormat nf = NumberFormat.getIntegerInstance(Locale.ENGLISH);\n      if((ref instanceof Double) || (ref instanceof Float)) {\n        nf = NumberFormat.getInstance(Locale.ENGLISH);\n      }\n      double dref = ((Number)ref).doubleValue();\n      double dnow = ((Number)now).doubleValue();\n      double diff = Double.NaN;\n      if(Double.isNaN(dref)) {\n        diff = dnow;\n      }\n      else if(Double.isNaN(dnow)) {\n        diff = dref;\n      }\n      else {\n        diff = dnow-dref;\n      }\n      str.append( \", Delta: \").append(nf.format(diff));\n    }\n    return str.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffObject(Object,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffObject(Object,Object).mjava","sourceNew":"  public Object diffObject(Object ref, Object now) {\n    if(ref instanceof NamedList) {\n      return diffNamedList((NamedList)ref, (NamedList)now);\n    }\n    if(ref.equals(now)) {\n      return ref;\n    }\n    StringBuilder str = new StringBuilder();\n    str.append(\"Was: \")\n     .append(ref).append(\", Now: \").append(now);\n    \n    if(ref instanceof Number) {\n      NumberFormat nf = NumberFormat.getIntegerInstance(Locale.ROOT);\n      if((ref instanceof Double) || (ref instanceof Float)) {\n        nf = NumberFormat.getInstance(Locale.ROOT);\n      }\n      double dref = ((Number)ref).doubleValue();\n      double dnow = ((Number)now).doubleValue();\n      double diff = Double.NaN;\n      if(Double.isNaN(dref)) {\n        diff = dnow;\n      }\n      else if(Double.isNaN(dnow)) {\n        diff = dref;\n      }\n      else {\n        diff = dnow-dref;\n      }\n      str.append( \", Delta: \").append(nf.format(diff));\n    }\n    return str.toString();\n  }\n\n","sourceOld":"  public Object diffObject(Object ref, Object now) {\n    if(ref instanceof NamedList) {\n      return diffNamedList((NamedList)ref, (NamedList)now);\n    }\n    if(ref.equals(now)) {\n      return ref;\n    }\n    StringBuilder str = new StringBuilder();\n    str.append(\"Was: \")\n     .append(ref).append(\", Now: \").append(now);\n    \n    if(ref instanceof Number) {\n      NumberFormat nf = NumberFormat.getIntegerInstance(Locale.ENGLISH);\n      if((ref instanceof Double) || (ref instanceof Float)) {\n        nf = NumberFormat.getInstance(Locale.ENGLISH);\n      }\n      double dref = ((Number)ref).doubleValue();\n      double dnow = ((Number)now).doubleValue();\n      double diff = Double.NaN;\n      if(Double.isNaN(dref)) {\n        diff = dnow;\n      }\n      else if(Double.isNaN(dnow)) {\n        diff = dref;\n      }\n      else {\n        diff = dnow-dref;\n      }\n      str.append( \", Delta: \").append(nf.format(diff));\n    }\n    return str.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffObject(Object,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffObject(Object,Object).mjava","sourceNew":"  public Object diffObject(Object ref, Object now) {\n    if(ref instanceof NamedList) {\n      return diffNamedList((NamedList)ref, (NamedList)now);\n    }\n    if(ref.equals(now)) {\n      return ref;\n    }\n    StringBuilder str = new StringBuilder();\n    str.append(\"Was: \")\n     .append(ref).append(\", Now: \").append(now);\n    \n    if(ref instanceof Number) {\n      NumberFormat nf = NumberFormat.getIntegerInstance(Locale.ROOT);\n      if((ref instanceof Double) || (ref instanceof Float)) {\n        nf = NumberFormat.getInstance(Locale.ROOT);\n      }\n      double dref = ((Number)ref).doubleValue();\n      double dnow = ((Number)now).doubleValue();\n      double diff = Double.NaN;\n      if(Double.isNaN(dref)) {\n        diff = dnow;\n      }\n      else if(Double.isNaN(dnow)) {\n        diff = dref;\n      }\n      else {\n        diff = dnow-dref;\n      }\n      str.append( \", Delta: \").append(nf.format(diff));\n    }\n    return str.toString();\n  }\n\n","sourceOld":"  public Object diffObject(Object ref, Object now) {\n    if(ref instanceof NamedList) {\n      return diffNamedList((NamedList)ref, (NamedList)now);\n    }\n    if(ref.equals(now)) {\n      return ref;\n    }\n    StringBuilder str = new StringBuilder();\n    str.append(\"Was: \")\n     .append(ref).append(\", Now: \").append(now);\n    \n    if(ref instanceof Number) {\n      NumberFormat nf = NumberFormat.getIntegerInstance(Locale.ENGLISH);\n      if((ref instanceof Double) || (ref instanceof Float)) {\n        nf = NumberFormat.getInstance(Locale.ENGLISH);\n      }\n      double dref = ((Number)ref).doubleValue();\n      double dnow = ((Number)now).doubleValue();\n      double diff = Double.NaN;\n      if(Double.isNaN(dref)) {\n        diff = dnow;\n      }\n      else if(Double.isNaN(dnow)) {\n        diff = dref;\n      }\n      else {\n        diff = dnow-dref;\n      }\n      str.append( \", Delta: \").append(nf.format(diff));\n    }\n    return str.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffObject(Object,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffObject(Object,Object).mjava","sourceNew":"  public Object diffObject(Object ref, Object now) {\n    if(ref instanceof NamedList) {\n      return diffNamedList((NamedList)ref, (NamedList)now);\n    }\n    if(ref.equals(now)) {\n      return ref;\n    }\n    StringBuilder str = new StringBuilder();\n    str.append(\"Was: \")\n     .append(ref).append(\", Now: \").append(now);\n    \n    if(ref instanceof Number) {\n      NumberFormat nf = NumberFormat.getIntegerInstance(Locale.ROOT);\n      if((ref instanceof Double) || (ref instanceof Float)) {\n        nf = NumberFormat.getInstance(Locale.ROOT);\n      }\n      double dref = ((Number)ref).doubleValue();\n      double dnow = ((Number)now).doubleValue();\n      double diff = Double.NaN;\n      if(Double.isNaN(dref)) {\n        diff = dnow;\n      }\n      else if(Double.isNaN(dnow)) {\n        diff = dref;\n      }\n      else {\n        diff = dnow-dref;\n      }\n      str.append( \", Delta: \").append(nf.format(diff));\n    }\n    return str.toString();\n  }\n\n","sourceOld":"  public Object diffObject(Object ref, Object now) {\n    if(ref instanceof NamedList) {\n      return diffNamedList((NamedList)ref, (NamedList)now);\n    }\n    if(ref.equals(now)) {\n      return ref;\n    }\n    StringBuilder str = new StringBuilder();\n    str.append(\"Was: \")\n     .append(ref).append(\", Now: \").append(now);\n    \n    if(ref instanceof Number) {\n      NumberFormat nf = NumberFormat.getIntegerInstance(Locale.ENGLISH);\n      if((ref instanceof Double) || (ref instanceof Float)) {\n        nf = NumberFormat.getInstance(Locale.ENGLISH);\n      }\n      double dref = ((Number)ref).doubleValue();\n      double dnow = ((Number)now).doubleValue();\n      double diff = Double.NaN;\n      if(Double.isNaN(dref)) {\n        diff = dnow;\n      }\n      else if(Double.isNaN(dnow)) {\n        diff = dref;\n      }\n      else {\n        diff = dnow-dref;\n      }\n      str.append( \", Delta: \").append(nf.format(diff));\n    }\n    return str.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffObject(Object,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffObject(Object,Object).mjava","sourceNew":"  public Object diffObject(Object ref, Object now) {\n    if (now instanceof Map) {\n      now = new NamedList((Map)now);\n    }\n    if(ref instanceof NamedList) {\n      return diffNamedList((NamedList)ref, (NamedList)now);\n    }\n    if(ref.equals(now)) {\n      return ref;\n    }\n    StringBuilder str = new StringBuilder();\n    str.append(\"Was: \")\n     .append(ref).append(\", Now: \").append(now);\n    \n    if(ref instanceof Number) {\n      NumberFormat nf = NumberFormat.getIntegerInstance(Locale.ROOT);\n      if((ref instanceof Double) || (ref instanceof Float)) {\n        nf = NumberFormat.getInstance(Locale.ROOT);\n      }\n      double dref = ((Number)ref).doubleValue();\n      double dnow = ((Number)now).doubleValue();\n      double diff = Double.NaN;\n      if(Double.isNaN(dref)) {\n        diff = dnow;\n      }\n      else if(Double.isNaN(dnow)) {\n        diff = dref;\n      }\n      else {\n        diff = dnow-dref;\n      }\n      str.append( \", Delta: \").append(nf.format(diff));\n    }\n    return str.toString();\n  }\n\n","sourceOld":"  public Object diffObject(Object ref, Object now) {\n    if(ref instanceof NamedList) {\n      return diffNamedList((NamedList)ref, (NamedList)now);\n    }\n    if(ref.equals(now)) {\n      return ref;\n    }\n    StringBuilder str = new StringBuilder();\n    str.append(\"Was: \")\n     .append(ref).append(\", Now: \").append(now);\n    \n    if(ref instanceof Number) {\n      NumberFormat nf = NumberFormat.getIntegerInstance(Locale.ROOT);\n      if((ref instanceof Double) || (ref instanceof Float)) {\n        nf = NumberFormat.getInstance(Locale.ROOT);\n      }\n      double dref = ((Number)ref).doubleValue();\n      double dnow = ((Number)now).doubleValue();\n      double diff = Double.NaN;\n      if(Double.isNaN(dref)) {\n        diff = dnow;\n      }\n      else if(Double.isNaN(dnow)) {\n        diff = dref;\n      }\n      else {\n        diff = dnow-dref;\n      }\n      str.append( \", Delta: \").append(nf.format(diff));\n    }\n    return str.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffObject(Object,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffObject(Object,Object).mjava","sourceNew":"  public Object diffObject(Object ref, Object now) {\n    if (now instanceof Map) {\n      now = new NamedList((Map)now);\n    }\n    if(ref instanceof NamedList) {\n      return diffNamedList((NamedList)ref, (NamedList)now);\n    }\n    if(ref.equals(now)) {\n      return ref;\n    }\n    StringBuilder str = new StringBuilder();\n    str.append(\"Was: \")\n     .append(ref).append(\", Now: \").append(now);\n    \n    if(ref instanceof Number) {\n      NumberFormat nf = NumberFormat.getIntegerInstance(Locale.ROOT);\n      if((ref instanceof Double) || (ref instanceof Float)) {\n        nf = NumberFormat.getInstance(Locale.ROOT);\n      }\n      double dref = ((Number)ref).doubleValue();\n      double dnow = ((Number)now).doubleValue();\n      double diff = Double.NaN;\n      if(Double.isNaN(dref)) {\n        diff = dnow;\n      }\n      else if(Double.isNaN(dnow)) {\n        diff = dref;\n      }\n      else {\n        diff = dnow-dref;\n      }\n      str.append( \", Delta: \").append(nf.format(diff));\n    }\n    return str.toString();\n  }\n\n","sourceOld":"  public Object diffObject(Object ref, Object now) {\n    if(ref instanceof NamedList) {\n      return diffNamedList((NamedList)ref, (NamedList)now);\n    }\n    if(ref.equals(now)) {\n      return ref;\n    }\n    StringBuilder str = new StringBuilder();\n    str.append(\"Was: \")\n     .append(ref).append(\", Now: \").append(now);\n    \n    if(ref instanceof Number) {\n      NumberFormat nf = NumberFormat.getIntegerInstance(Locale.ROOT);\n      if((ref instanceof Double) || (ref instanceof Float)) {\n        nf = NumberFormat.getInstance(Locale.ROOT);\n      }\n      double dref = ((Number)ref).doubleValue();\n      double dnow = ((Number)now).doubleValue();\n      double diff = Double.NaN;\n      if(Double.isNaN(dref)) {\n        diff = dnow;\n      }\n      else if(Double.isNaN(dnow)) {\n        diff = dref;\n      }\n      else {\n        diff = dnow-dref;\n      }\n      str.append( \", Delta: \").append(nf.format(diff));\n    }\n    return str.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba055e19afc289adcb5bedaf68513793a7254012","date":1591268575,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffObject(Object,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#diffObject(Object,Object).mjava","sourceNew":"  @SuppressWarnings({\"rawtypes\"})\n  public Object diffObject(Object ref, Object now) {\n    if (now instanceof Map) {\n      now = new NamedList((Map)now);\n    }\n    if(ref instanceof NamedList) {\n      return diffNamedList((NamedList)ref, (NamedList)now);\n    }\n    if(ref.equals(now)) {\n      return ref;\n    }\n    StringBuilder str = new StringBuilder();\n    str.append(\"Was: \")\n     .append(ref).append(\", Now: \").append(now);\n    \n    if(ref instanceof Number) {\n      NumberFormat nf = NumberFormat.getIntegerInstance(Locale.ROOT);\n      if((ref instanceof Double) || (ref instanceof Float)) {\n        nf = NumberFormat.getInstance(Locale.ROOT);\n      }\n      double dref = ((Number)ref).doubleValue();\n      double dnow = ((Number)now).doubleValue();\n      double diff = Double.NaN;\n      if(Double.isNaN(dref)) {\n        diff = dnow;\n      }\n      else if(Double.isNaN(dnow)) {\n        diff = dref;\n      }\n      else {\n        diff = dnow-dref;\n      }\n      str.append( \", Delta: \").append(nf.format(diff));\n    }\n    return str.toString();\n  }\n\n","sourceOld":"  public Object diffObject(Object ref, Object now) {\n    if (now instanceof Map) {\n      now = new NamedList((Map)now);\n    }\n    if(ref instanceof NamedList) {\n      return diffNamedList((NamedList)ref, (NamedList)now);\n    }\n    if(ref.equals(now)) {\n      return ref;\n    }\n    StringBuilder str = new StringBuilder();\n    str.append(\"Was: \")\n     .append(ref).append(\", Now: \").append(now);\n    \n    if(ref instanceof Number) {\n      NumberFormat nf = NumberFormat.getIntegerInstance(Locale.ROOT);\n      if((ref instanceof Double) || (ref instanceof Float)) {\n        nf = NumberFormat.getInstance(Locale.ROOT);\n      }\n      double dref = ((Number)ref).doubleValue();\n      double dnow = ((Number)now).doubleValue();\n      double diff = Double.NaN;\n      if(Double.isNaN(dref)) {\n        diff = dnow;\n      }\n      else if(Double.isNaN(dnow)) {\n        diff = dref;\n      }\n      else {\n        diff = dnow-dref;\n      }\n      str.append( \", Delta: \").append(nf.format(diff));\n    }\n    return str.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["2acf500f78aa12b92e371fd89c719291986b6b90"],"384dd87adbcc629a0f0e7f37148d09f6a586b793":["a76d075a12d031f724a9a80e2e7e79f40d17b5b5"],"a76d075a12d031f724a9a80e2e7e79f40d17b5b5":["2396be4785ec8ca6c942dff4d20c1c93dd03db6d"],"ba055e19afc289adcb5bedaf68513793a7254012":["816521ebaad5add9cb96bb88c577394e2938c40b"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["384dd87adbcc629a0f0e7f37148d09f6a586b793","2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2396be4785ec8ca6c942dff4d20c1c93dd03db6d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["384dd87adbcc629a0f0e7f37148d09f6a586b793"],"2acf500f78aa12b92e371fd89c719291986b6b90":["384dd87adbcc629a0f0e7f37148d09f6a586b793","9279c7cd47f17e1e8b674a3741ff5f040bc680be"],"816521ebaad5add9cb96bb88c577394e2938c40b":["2acf500f78aa12b92e371fd89c719291986b6b90"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba055e19afc289adcb5bedaf68513793a7254012"],"46d8ada1fff8d18cb197c38c7983225162599948":["384dd87adbcc629a0f0e7f37148d09f6a586b793","2acf500f78aa12b92e371fd89c719291986b6b90"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"384dd87adbcc629a0f0e7f37148d09f6a586b793":["fe33227f6805edab2036cbb80645cc4e2d1fa424","9279c7cd47f17e1e8b674a3741ff5f040bc680be","2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948"],"a76d075a12d031f724a9a80e2e7e79f40d17b5b5":["384dd87adbcc629a0f0e7f37148d09f6a586b793"],"ba055e19afc289adcb5bedaf68513793a7254012":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2396be4785ec8ca6c942dff4d20c1c93dd03db6d"],"2396be4785ec8ca6c942dff4d20c1c93dd03db6d":["a76d075a12d031f724a9a80e2e7e79f40d17b5b5"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["2acf500f78aa12b92e371fd89c719291986b6b90"],"2acf500f78aa12b92e371fd89c719291986b6b90":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","fe33227f6805edab2036cbb80645cc4e2d1fa424","816521ebaad5add9cb96bb88c577394e2938c40b","46d8ada1fff8d18cb197c38c7983225162599948"],"816521ebaad5add9cb96bb88c577394e2938c40b":["ba055e19afc289adcb5bedaf68513793a7254012"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"46d8ada1fff8d18cb197c38c7983225162599948":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817","46d8ada1fff8d18cb197c38c7983225162599948"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}