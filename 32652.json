{"path":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#checkCluster(NamedList[Object],int,int,int).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#checkCluster(NamedList[Object],int,int,int).mjava","pathOld":"solr/contrib/clustering/src/test/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#checkCluster(NamedList[Object],int,int,int).mjava","sourceNew":"  private void checkCluster(NamedList<Object> cluster, int expectedDocCount,\n                            int expectedLabelCount, int expectedSubclusterCount) {\n    checkCluster(cluster, expectedSubclusterCount > 0);\n    assertEquals(\"number of docs in cluster\", expectedDocCount,\n            getDocs(cluster).size());\n    assertEquals(\"number of labels in cluster\", expectedLabelCount,\n            getLabels(cluster).size());\n\n    if (expectedSubclusterCount > 0) {\n      List<NamedList<Object>> subclusters = getSubclusters(cluster);\n      assertEquals(\"numClusters\", expectedSubclusterCount, subclusters.size());\n      assertEquals(\"number of subclusters in cluster\",\n              expectedSubclusterCount, subclusters.size());\n    }\n  }\n\n","sourceOld":"  private void checkCluster(NamedList<Object> cluster, int expectedDocCount,\n                            int expectedLabelCount, int expectedSubclusterCount) {\n    checkCluster(cluster, expectedSubclusterCount > 0);\n    assertEquals(\"number of docs in cluster\", expectedDocCount,\n            getDocs(cluster).size());\n    assertEquals(\"number of labels in cluster\", expectedLabelCount,\n            getLabels(cluster).size());\n\n    if (expectedSubclusterCount > 0) {\n      List<NamedList<Object>> subclusters = getSubclusters(cluster);\n      assertEquals(\"numClusters\", expectedSubclusterCount, subclusters.size());\n      assertEquals(\"number of subclusters in cluster\",\n              expectedSubclusterCount, subclusters.size());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/clustering/src/test/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#checkCluster(NamedList[Object],int,int,int).mjava","pathOld":"solr/contrib/clustering/src/test/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngineTest#checkCluster(NamedList[Object],int,int,int).mjava","sourceNew":"  private void checkCluster(NamedList<Object> cluster, int expectedDocCount,\n                            int expectedLabelCount, int expectedSubclusterCount) {\n    checkCluster(cluster, expectedSubclusterCount > 0);\n    assertEquals(\"number of docs in cluster\", expectedDocCount,\n            getDocs(cluster).size());\n    assertEquals(\"number of labels in cluster\", expectedLabelCount,\n            getLabels(cluster).size());\n\n    if (expectedSubclusterCount > 0) {\n      List<NamedList<Object>> subclusters = getSubclusters(cluster);\n      assertEquals(\"numClusters\", expectedSubclusterCount, subclusters.size());\n      assertEquals(\"number of subclusters in cluster\",\n              expectedSubclusterCount, subclusters.size());\n    }\n  }\n\n","sourceOld":"  private void checkCluster(NamedList<Object> cluster, int expectedDocCount,\n                            int expectedLabelCount, int expectedSubclusterCount) {\n    checkCluster(cluster, expectedSubclusterCount > 0);\n    assertEquals(\"number of docs in cluster\", expectedDocCount,\n            getDocs(cluster).size());\n    assertEquals(\"number of labels in cluster\", expectedLabelCount,\n            getLabels(cluster).size());\n\n    if (expectedSubclusterCount > 0) {\n      List<NamedList<Object>> subclusters = getSubclusters(cluster);\n      assertEquals(\"numClusters\", expectedSubclusterCount, subclusters.size());\n      assertEquals(\"number of subclusters in cluster\",\n              expectedSubclusterCount, subclusters.size());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}