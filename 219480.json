{"path":"solr/src/java/org/apache/solr/core/SolrResourceLoader#newInstance(String,String[],Class[],Object[]).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrResourceLoader#newInstance(String,String[],Class[],Object[]).mjava","pathOld":"/dev/null","sourceNew":"  public Object newInstance(String cName, String [] subPackages, Class[] params, Object[] args){\n    Class clazz = findClass(cName,subPackages);\n    if( clazz == null ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Can not find class: \"+cName + \" in \" + classLoader, false);\n    }\n\n    Object obj = null;\n    try {\n\n      Constructor constructor = clazz.getConstructor(params);\n      obj = constructor.newInstance(args);\n    }\n    catch (Exception e) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Error instantiating class: '\" + clazz.getName()+\"'\", e, false );\n    }\n\n    if( obj instanceof SolrCoreAware ) {\n      assertAwareCompatibility( SolrCoreAware.class, obj );\n      waitingForCore.add( (SolrCoreAware)obj );\n    }\n    if( obj instanceof ResourceLoaderAware ) {\n      assertAwareCompatibility( ResourceLoaderAware.class, obj );\n      waitingForResources.add( (ResourceLoaderAware)obj );\n    }\n    if (obj instanceof SolrInfoMBean){\n      //TODO: Assert here?\n      infoMBeans.add((SolrInfoMBean) obj);\n    }\n    return obj;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/core/SolrResourceLoader#newInstance(String,String[],Class[],Object[]).mjava","sourceNew":null,"sourceOld":"  public Object newInstance(String cName, String [] subPackages, Class[] params, Object[] args){\n    Class clazz = findClass(cName,subPackages);\n    if( clazz == null ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Can not find class: \"+cName + \" in \" + classLoader, false);\n    }\n\n    Object obj = null;\n    try {\n\n      Constructor constructor = clazz.getConstructor(params);\n      obj = constructor.newInstance(args);\n    }\n    catch (Exception e) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Error instantiating class: '\" + clazz.getName()+\"'\", e, false );\n    }\n\n    if( obj instanceof SolrCoreAware ) {\n      assertAwareCompatibility( SolrCoreAware.class, obj );\n      waitingForCore.add( (SolrCoreAware)obj );\n    }\n    if( obj instanceof ResourceLoaderAware ) {\n      assertAwareCompatibility( ResourceLoaderAware.class, obj );\n      waitingForResources.add( (ResourceLoaderAware)obj );\n    }\n    if (obj instanceof SolrInfoMBean){\n      //TODO: Assert here?\n      infoMBeans.add((SolrInfoMBean) obj);\n    }\n    return obj;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrResourceLoader#newInstance(String,String[],Class[],Object[]).mjava","pathOld":"src/java/org/apache/solr/core/SolrResourceLoader#newInstance(String,String[],Class[],Object[]).mjava","sourceNew":"  public Object newInstance(String cName, String [] subPackages, Class[] params, Object[] args){\n    Class clazz = findClass(cName,subPackages);\n    if( clazz == null ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Can not find class: \"+cName + \" in \" + classLoader, false);\n    }\n\n    Object obj = null;\n    try {\n\n      Constructor constructor = clazz.getConstructor(params);\n      obj = constructor.newInstance(args);\n    }\n    catch (Exception e) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Error instantiating class: '\" + clazz.getName()+\"'\", e, false );\n    }\n\n    if( obj instanceof SolrCoreAware ) {\n      assertAwareCompatibility( SolrCoreAware.class, obj );\n      waitingForCore.add( (SolrCoreAware)obj );\n    }\n    if( obj instanceof ResourceLoaderAware ) {\n      assertAwareCompatibility( ResourceLoaderAware.class, obj );\n      waitingForResources.add( (ResourceLoaderAware)obj );\n    }\n    if (obj instanceof SolrInfoMBean){\n      //TODO: Assert here?\n      infoMBeans.add((SolrInfoMBean) obj);\n    }\n    return obj;\n  }\n\n","sourceOld":"  public Object newInstance(String cName, String [] subPackages, Class[] params, Object[] args){\n    Class clazz = findClass(cName,subPackages);\n    if( clazz == null ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Can not find class: \"+cName + \" in \" + classLoader, false);\n    }\n\n    Object obj = null;\n    try {\n\n      Constructor constructor = clazz.getConstructor(params);\n      obj = constructor.newInstance(args);\n    }\n    catch (Exception e) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Error instantiating class: '\" + clazz.getName()+\"'\", e, false );\n    }\n\n    if( obj instanceof SolrCoreAware ) {\n      assertAwareCompatibility( SolrCoreAware.class, obj );\n      waitingForCore.add( (SolrCoreAware)obj );\n    }\n    if( obj instanceof ResourceLoaderAware ) {\n      assertAwareCompatibility( ResourceLoaderAware.class, obj );\n      waitingForResources.add( (ResourceLoaderAware)obj );\n    }\n    if (obj instanceof SolrInfoMBean){\n      //TODO: Assert here?\n      infoMBeans.add((SolrInfoMBean) obj);\n    }\n    return obj;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/core/SolrResourceLoader#newInstance(String,String[],Class[],Object[]).mjava","pathOld":"/dev/null","sourceNew":"  public Object newInstance(String cName, String [] subPackages, Class[] params, Object[] args){\n    Class clazz = findClass(cName,subPackages);\n    if( clazz == null ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Can not find class: \"+cName + \" in \" + classLoader, false);\n    }\n\n    Object obj = null;\n    try {\n\n      Constructor constructor = clazz.getConstructor(params);\n      obj = constructor.newInstance(args);\n    }\n    catch (Exception e) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Error instantiating class: '\" + clazz.getName()+\"'\", e, false );\n    }\n\n    if( obj instanceof SolrCoreAware ) {\n      assertAwareCompatibility( SolrCoreAware.class, obj );\n      waitingForCore.add( (SolrCoreAware)obj );\n    }\n    if( obj instanceof ResourceLoaderAware ) {\n      assertAwareCompatibility( ResourceLoaderAware.class, obj );\n      waitingForResources.add( (ResourceLoaderAware)obj );\n    }\n    if (obj instanceof SolrInfoMBean){\n      //TODO: Assert here?\n      infoMBeans.add((SolrInfoMBean) obj);\n    }\n    return obj;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"48d548a14602be2584dd07e610109753923812e2","date":1269205557,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrResourceLoader#newInstance(String,String[],Class[],Object[]).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrResourceLoader#newInstance(String,String[],Class[],Object[]).mjava","sourceNew":"  public Object newInstance(String cName, String [] subPackages, Class[] params, Object[] args){\n    Class clazz = findClass(cName,subPackages);\n    if( clazz == null ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Can not find class: \"+cName + \" in \" + classLoader, false);\n    }\n\n    Object obj = null;\n    try {\n\n      Constructor constructor = clazz.getConstructor(params);\n      obj = constructor.newInstance(args);\n    }\n    catch (Exception e) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Error instantiating class: '\" + clazz.getName()+\"'\", e, false );\n    }\n\n    if (!live) {\n      if( obj instanceof SolrCoreAware ) {\n        assertAwareCompatibility( SolrCoreAware.class, obj );\n        waitingForCore.add( (SolrCoreAware)obj );\n      }\n      if( obj instanceof ResourceLoaderAware ) {\n        assertAwareCompatibility( ResourceLoaderAware.class, obj );\n        waitingForResources.add( (ResourceLoaderAware)obj );\n      }\n      if (obj instanceof SolrInfoMBean){\n        //TODO: Assert here?\n        infoMBeans.add((SolrInfoMBean) obj);\n      }\n    }\n\n    return obj;\n  }\n\n","sourceOld":"  public Object newInstance(String cName, String [] subPackages, Class[] params, Object[] args){\n    Class clazz = findClass(cName,subPackages);\n    if( clazz == null ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Can not find class: \"+cName + \" in \" + classLoader, false);\n    }\n\n    Object obj = null;\n    try {\n\n      Constructor constructor = clazz.getConstructor(params);\n      obj = constructor.newInstance(args);\n    }\n    catch (Exception e) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Error instantiating class: '\" + clazz.getName()+\"'\", e, false );\n    }\n\n    if( obj instanceof SolrCoreAware ) {\n      assertAwareCompatibility( SolrCoreAware.class, obj );\n      waitingForCore.add( (SolrCoreAware)obj );\n    }\n    if( obj instanceof ResourceLoaderAware ) {\n      assertAwareCompatibility( ResourceLoaderAware.class, obj );\n      waitingForResources.add( (ResourceLoaderAware)obj );\n    }\n    if (obj instanceof SolrInfoMBean){\n      //TODO: Assert here?\n      infoMBeans.add((SolrInfoMBean) obj);\n    }\n    return obj;\n  }\n\n","bugFix":["868e0ed16bb29556f95c00e989da33ab5c9dfe56","efde1ddfc9d0125b5cccad6d1130f34fa0b33d61"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#newInstance(String,String[],Class[],Object[]).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrResourceLoader#newInstance(String,String[],Class[],Object[]).mjava","sourceNew":"  public Object newInstance(String cName, String [] subPackages, Class[] params, Object[] args){\n    Class clazz = findClass(cName,subPackages);\n    if( clazz == null ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Can not find class: \"+cName + \" in \" + classLoader, false);\n    }\n\n    Object obj = null;\n    try {\n\n      Constructor constructor = clazz.getConstructor(params);\n      obj = constructor.newInstance(args);\n    }\n    catch (Exception e) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Error instantiating class: '\" + clazz.getName()+\"'\", e, false );\n    }\n\n    if (!live) {\n      if( obj instanceof SolrCoreAware ) {\n        assertAwareCompatibility( SolrCoreAware.class, obj );\n        waitingForCore.add( (SolrCoreAware)obj );\n      }\n      if( obj instanceof ResourceLoaderAware ) {\n        assertAwareCompatibility( ResourceLoaderAware.class, obj );\n        waitingForResources.add( (ResourceLoaderAware)obj );\n      }\n      if (obj instanceof SolrInfoMBean){\n        //TODO: Assert here?\n        infoMBeans.add((SolrInfoMBean) obj);\n      }\n    }\n\n    return obj;\n  }\n\n","sourceOld":"  public Object newInstance(String cName, String [] subPackages, Class[] params, Object[] args){\n    Class clazz = findClass(cName,subPackages);\n    if( clazz == null ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Can not find class: \"+cName + \" in \" + classLoader, false);\n    }\n\n    Object obj = null;\n    try {\n\n      Constructor constructor = clazz.getConstructor(params);\n      obj = constructor.newInstance(args);\n    }\n    catch (Exception e) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Error instantiating class: '\" + clazz.getName()+\"'\", e, false );\n    }\n\n    if (!live) {\n      if( obj instanceof SolrCoreAware ) {\n        assertAwareCompatibility( SolrCoreAware.class, obj );\n        waitingForCore.add( (SolrCoreAware)obj );\n      }\n      if( obj instanceof ResourceLoaderAware ) {\n        assertAwareCompatibility( ResourceLoaderAware.class, obj );\n        waitingForResources.add( (ResourceLoaderAware)obj );\n      }\n      if (obj instanceof SolrInfoMBean){\n        //TODO: Assert here?\n        infoMBeans.add((SolrInfoMBean) obj);\n      }\n    }\n\n    return obj;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#newInstance(String,String[],Class[],Object[]).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrResourceLoader#newInstance(String,String[],Class[],Object[]).mjava","sourceNew":"  public Object newInstance(String cName, String [] subPackages, Class[] params, Object[] args){\n    Class clazz = findClass(cName,subPackages);\n    if( clazz == null ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Can not find class: \"+cName + \" in \" + classLoader, false);\n    }\n\n    Object obj = null;\n    try {\n\n      Constructor constructor = clazz.getConstructor(params);\n      obj = constructor.newInstance(args);\n    }\n    catch (Exception e) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Error instantiating class: '\" + clazz.getName()+\"'\", e, false );\n    }\n\n    if (!live) {\n      if( obj instanceof SolrCoreAware ) {\n        assertAwareCompatibility( SolrCoreAware.class, obj );\n        waitingForCore.add( (SolrCoreAware)obj );\n      }\n      if( obj instanceof ResourceLoaderAware ) {\n        assertAwareCompatibility( ResourceLoaderAware.class, obj );\n        waitingForResources.add( (ResourceLoaderAware)obj );\n      }\n      if (obj instanceof SolrInfoMBean){\n        //TODO: Assert here?\n        infoMBeans.add((SolrInfoMBean) obj);\n      }\n    }\n\n    return obj;\n  }\n\n","sourceOld":"  public Object newInstance(String cName, String [] subPackages, Class[] params, Object[] args){\n    Class clazz = findClass(cName,subPackages);\n    if( clazz == null ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Can not find class: \"+cName + \" in \" + classLoader, false);\n    }\n\n    Object obj = null;\n    try {\n\n      Constructor constructor = clazz.getConstructor(params);\n      obj = constructor.newInstance(args);\n    }\n    catch (Exception e) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Error instantiating class: '\" + clazz.getName()+\"'\", e, false );\n    }\n\n    if (!live) {\n      if( obj instanceof SolrCoreAware ) {\n        assertAwareCompatibility( SolrCoreAware.class, obj );\n        waitingForCore.add( (SolrCoreAware)obj );\n      }\n      if( obj instanceof ResourceLoaderAware ) {\n        assertAwareCompatibility( ResourceLoaderAware.class, obj );\n        waitingForResources.add( (ResourceLoaderAware)obj );\n      }\n      if (obj instanceof SolrInfoMBean){\n        //TODO: Assert here?\n        infoMBeans.add((SolrInfoMBean) obj);\n      }\n    }\n\n    return obj;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#newInstance(String,String[],Class[],Object[]).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrResourceLoader#newInstance(String,String[],Class[],Object[]).mjava","sourceNew":"  public Object newInstance(String cName, String [] subPackages, Class[] params, Object[] args){\n    Class clazz = findClass(cName,subPackages);\n    if( clazz == null ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Can not find class: \"+cName + \" in \" + classLoader, false);\n    }\n\n    Object obj = null;\n    try {\n\n      Constructor constructor = clazz.getConstructor(params);\n      obj = constructor.newInstance(args);\n    }\n    catch (Exception e) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Error instantiating class: '\" + clazz.getName()+\"'\", e, false );\n    }\n\n    if (!live) {\n      if( obj instanceof SolrCoreAware ) {\n        assertAwareCompatibility( SolrCoreAware.class, obj );\n        waitingForCore.add( (SolrCoreAware)obj );\n      }\n      if( obj instanceof ResourceLoaderAware ) {\n        assertAwareCompatibility( ResourceLoaderAware.class, obj );\n        waitingForResources.add( (ResourceLoaderAware)obj );\n      }\n      if (obj instanceof SolrInfoMBean){\n        //TODO: Assert here?\n        infoMBeans.add((SolrInfoMBean) obj);\n      }\n    }\n\n    return obj;\n  }\n\n","sourceOld":"  public Object newInstance(String cName, String [] subPackages, Class[] params, Object[] args){\n    Class clazz = findClass(cName,subPackages);\n    if( clazz == null ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Can not find class: \"+cName + \" in \" + classLoader, false);\n    }\n\n    Object obj = null;\n    try {\n\n      Constructor constructor = clazz.getConstructor(params);\n      obj = constructor.newInstance(args);\n    }\n    catch (Exception e) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\n          \"Error instantiating class: '\" + clazz.getName()+\"'\", e, false );\n    }\n\n    if (!live) {\n      if( obj instanceof SolrCoreAware ) {\n        assertAwareCompatibility( SolrCoreAware.class, obj );\n        waitingForCore.add( (SolrCoreAware)obj );\n      }\n      if( obj instanceof ResourceLoaderAware ) {\n        assertAwareCompatibility( ResourceLoaderAware.class, obj );\n        waitingForResources.add( (ResourceLoaderAware)obj );\n      }\n      if (obj instanceof SolrInfoMBean){\n        //TODO: Assert here?\n        infoMBeans.add((SolrInfoMBean) obj);\n      }\n    }\n\n    return obj;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"48d548a14602be2584dd07e610109753923812e2":["1da8d55113b689b06716246649de6f62430f15c0"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["48d548a14602be2584dd07e610109753923812e2"],"c26f00b574427b55127e869b935845554afde1fa":["48d548a14602be2584dd07e610109753923812e2","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["48d548a14602be2584dd07e610109753923812e2"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["48d548a14602be2584dd07e610109753923812e2"],"48d548a14602be2584dd07e610109753923812e2":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}