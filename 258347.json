{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/JsonQueryRequestFacetingIntegrationTest#testMultiTermsFacet().mjava","commits":[{"id":"e361c91e3f3d36ea61c7ab9f2d4459792480783e","date":1541904265,"type":0,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/JsonQueryRequestFacetingIntegrationTest#testMultiTermsFacet().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMultiTermsFacet() throws Exception {\n    final TermsFacetMap categoriesFacetMap = new TermsFacetMap(\"cat\")\n        .setLimit(3);\n    final TermsFacetMap manufacturersFacetMap = new TermsFacetMap(\"manu_id_s\")\n        .setLimit(3);\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withFacet(\"top_cats\", categoriesFacetMap)\n        .withFacet(\"top_manufacturers\", manufacturersFacetMap);\n\n    QueryResponse response = request.process(cluster.getSolrClient(), COLLECTION_NAME);\n\n    assertEquals(0, response.getStatus());\n    final SolrDocumentList returnedDocs = response.getResults();\n    assertEquals(NUM_TECHPRODUCTS_DOCS, returnedDocs.getNumFound());\n    assertEquals(10, returnedDocs.size());\n    final NamedList<Object> rawResponse = response.getResponse();\n    assertHasFacetWithBucketValues(rawResponse,\"top_cats\",\n        new FacetBucket(\"electronics\",NUM_ELECTRONICS),\n        new FacetBucket(\"currency\", NUM_CURRENCY),\n        new FacetBucket(\"memory\", NUM_MEMORY));\n    assertHasFacetWithBucketValues(rawResponse,\"top_manufacturers\",\n        new FacetBucket(\"corsair\",NUM_CORSAIR),\n        new FacetBucket(\"belkin\", NUM_BELKIN),\n        new FacetBucket(\"canon\", NUM_CANON));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07feaa572dd3645c2013be127176350b3f4cd6a2","date":1542492880,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/JsonQueryRequestFacetingIntegrationTest#testMultiTermsFacet().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/json/JsonQueryRequestFacetingIntegrationTest#testMultiTermsFacet().mjava","sourceNew":"  @Test\n  public void testMultiTermsFacet() throws Exception {\n    final TermsFacetMap categoriesFacetMap = new TermsFacetMap(\"cat\")\n        .setLimit(3);\n    final TermsFacetMap manufacturersFacetMap = new TermsFacetMap(\"manu_id_s\")\n        .setLimit(3);\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withFacet(\"top_cats\", categoriesFacetMap)\n        .withFacet(\"top_manufacturers\", manufacturersFacetMap);\n\n    QueryResponse response = request.process(cluster.getSolrClient(), COLLECTION_NAME);\n\n    assertExpectedDocumentsFoundAndReturned(response, NUM_TECHPRODUCTS_DOCS, 10);\n    final NestableJsonFacet topLevelFacetData = response.getJsonFacetingResponse();\n    assertEquals(NUM_TECHPRODUCTS_DOCS, topLevelFacetData.getCount());\n    assertHasFacetWithBucketValues(topLevelFacetData, \"top_cats\",\n        new FacetBucket(\"electronics\", NUM_ELECTRONICS),\n        new FacetBucket(\"currency\", NUM_CURRENCY),\n        new FacetBucket(\"memory\", NUM_MEMORY));\n    assertHasFacetWithBucketValues(topLevelFacetData, \"top_manufacturers\",\n        new FacetBucket(\"corsair\", NUM_CORSAIR),\n        new FacetBucket(\"belkin\", NUM_BELKIN),\n        new FacetBucket(\"canon\", NUM_CANON));\n  }\n\n","sourceOld":"  @Test\n  public void testMultiTermsFacet() throws Exception {\n    final TermsFacetMap categoriesFacetMap = new TermsFacetMap(\"cat\")\n        .setLimit(3);\n    final TermsFacetMap manufacturersFacetMap = new TermsFacetMap(\"manu_id_s\")\n        .setLimit(3);\n    final JsonQueryRequest request = new JsonQueryRequest()\n        .setQuery(\"*:*\")\n        .withFacet(\"top_cats\", categoriesFacetMap)\n        .withFacet(\"top_manufacturers\", manufacturersFacetMap);\n\n    QueryResponse response = request.process(cluster.getSolrClient(), COLLECTION_NAME);\n\n    assertEquals(0, response.getStatus());\n    final SolrDocumentList returnedDocs = response.getResults();\n    assertEquals(NUM_TECHPRODUCTS_DOCS, returnedDocs.getNumFound());\n    assertEquals(10, returnedDocs.size());\n    final NamedList<Object> rawResponse = response.getResponse();\n    assertHasFacetWithBucketValues(rawResponse,\"top_cats\",\n        new FacetBucket(\"electronics\",NUM_ELECTRONICS),\n        new FacetBucket(\"currency\", NUM_CURRENCY),\n        new FacetBucket(\"memory\", NUM_MEMORY));\n    assertHasFacetWithBucketValues(rawResponse,\"top_manufacturers\",\n        new FacetBucket(\"corsair\",NUM_CORSAIR),\n        new FacetBucket(\"belkin\", NUM_BELKIN),\n        new FacetBucket(\"canon\", NUM_CANON));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e361c91e3f3d36ea61c7ab9f2d4459792480783e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["07feaa572dd3645c2013be127176350b3f4cd6a2"],"07feaa572dd3645c2013be127176350b3f4cd6a2":["e361c91e3f3d36ea61c7ab9f2d4459792480783e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e361c91e3f3d36ea61c7ab9f2d4459792480783e"],"e361c91e3f3d36ea61c7ab9f2d4459792480783e":["07feaa572dd3645c2013be127176350b3f4cd6a2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"07feaa572dd3645c2013be127176350b3f4cd6a2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}