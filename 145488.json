{"path":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#TermsHashPerField(int,IntBlockPool,ByteBlockPool,ByteBlockPool,Counter,TermsHashPerField,String,IndexOptions).mjava","commits":[{"id":"d3cc3fa1ecad75b99ec55169e44628808f9866ad","date":1592311545,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#TermsHashPerField(int,IntBlockPool,ByteBlockPool,ByteBlockPool,Counter,TermsHashPerField,String,IndexOptions).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#TermsHashPerField(int,FieldInvertState,TermsHash,TermsHashPerField,FieldInfo).mjava","sourceNew":"  /** streamCount: how many streams this field stores per term.\n   * E.g. doc(+freq) is 1 stream, prox+offset is a second. */\n  TermsHashPerField(int streamCount, IntBlockPool intPool, ByteBlockPool bytePool, ByteBlockPool termBytePool,\n                    Counter bytesUsed, TermsHashPerField nextPerField, String fieldName, IndexOptions indexOptions) {\n    this.intPool = intPool;\n    this.bytePool = bytePool;\n    this.streamCount = streamCount;\n    this.fieldName = fieldName;\n    this.nextPerField = nextPerField;\n    assert indexOptions != IndexOptions.NONE;\n    this.indexOptions = indexOptions;\n    PostingsBytesStartArray byteStarts = new PostingsBytesStartArray(this, bytesUsed);\n    bytesHash = new BytesRefHash(termBytePool, HASH_INIT_SIZE, byteStarts);\n  }\n\n","sourceOld":"  /** streamCount: how many streams this field stores per term.\n   * E.g. doc(+freq) is 1 stream, prox+offset is a second. */\n\n  public TermsHashPerField(int streamCount, FieldInvertState fieldState, TermsHash termsHash, TermsHashPerField nextPerField, FieldInfo fieldInfo) {\n    intPool = termsHash.intPool;\n    bytePool = termsHash.bytePool;\n    termBytePool = termsHash.termBytePool;\n    docState = termsHash.docState;\n    this.termsHash = termsHash;\n    bytesUsed = termsHash.bytesUsed;\n    this.fieldState = fieldState;\n    this.streamCount = streamCount;\n    numPostingInt = 2*streamCount;\n    this.fieldInfo = fieldInfo;\n    this.nextPerField = nextPerField;\n    PostingsBytesStartArray byteStarts = new PostingsBytesStartArray(this, bytesUsed);\n    bytesHash = new BytesRefHash(termBytePool, HASH_INIT_SIZE, byteStarts);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d3cc3fa1ecad75b99ec55169e44628808f9866ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d3cc3fa1ecad75b99ec55169e44628808f9866ad"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3cc3fa1ecad75b99ec55169e44628808f9866ad"],"d3cc3fa1ecad75b99ec55169e44628808f9866ad":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}