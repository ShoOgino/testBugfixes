{"path":"lucene/src/java/org/apache/lucene/index/Term#compareToUTF16(Term).mjava","commits":[{"id":"4f29ba80b723649f5feb7e37afe1a558dd2c1304","date":1278318805,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/Term#compareToUTF16(Term).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * @deprecated For internal backwards compatibility use only\n   * @lucene.internal\n   */\n  @Deprecated\n  public final int compareToUTF16(Term other) {\n    if (field == other.field) // fields are interned\n      return legacyComparator.compare(this.bytes, other.bytes);\n    else\n      return field.compareTo(other.field);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/Term#compareToUTF16(Term).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * @deprecated For internal backwards compatibility use only\n   * @lucene.internal\n   */\n  @Deprecated\n  public final int compareToUTF16(Term other) {\n    if (field == other.field) // fields are interned\n      return legacyComparator.compare(this.bytes, other.bytes);\n    else\n      return field.compareTo(other.field);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/Term#compareToUTF16(Term).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/Term#compareToUTF16(Term).mjava","sourceNew":"  /** \n   * @deprecated (4.0) For internal backwards compatibility use only\n   * @lucene.internal\n   */\n  @Deprecated\n  public final int compareToUTF16(Term other) {\n    if (field == other.field) // fields are interned\n      return legacyComparator.compare(this.bytes, other.bytes);\n    else\n      return field.compareTo(other.field);\n  }\n\n","sourceOld":"  /** \n   * @deprecated For internal backwards compatibility use only\n   * @lucene.internal\n   */\n  @Deprecated\n  public final int compareToUTF16(Term other) {\n    if (field == other.field) // fields are interned\n      return legacyComparator.compare(this.bytes, other.bytes);\n    else\n      return field.compareTo(other.field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/Term#compareToUTF16(Term).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/Term#compareToUTF16(Term).mjava","sourceNew":"  /** \n   * @deprecated (4.0) For internal backwards compatibility use only\n   * @lucene.internal\n   */\n  @Deprecated\n  public final int compareToUTF16(Term other) {\n    if (field == other.field) // fields are interned\n      return legacyComparator.compare(this.bytes, other.bytes);\n    else\n      return field.compareTo(other.field);\n  }\n\n","sourceOld":"  /** \n   * @deprecated For internal backwards compatibility use only\n   * @lucene.internal\n   */\n  @Deprecated\n  public final int compareToUTF16(Term other) {\n    if (field == other.field) // fields are interned\n      return legacyComparator.compare(this.bytes, other.bytes);\n    else\n      return field.compareTo(other.field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/Term#compareToUTF16(Term).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/Term#compareToUTF16(Term).mjava","sourceNew":"  /** \n   * @deprecated (4.0) For internal backwards compatibility use only\n   * @lucene.internal\n   */\n  @Deprecated\n  public final int compareToUTF16(Term other) {\n    if (field == other.field) // fields are interned\n      return legacyComparator.compare(this.bytes, other.bytes);\n    else\n      return field.compareTo(other.field);\n  }\n\n","sourceOld":"  /** \n   * @deprecated For internal backwards compatibility use only\n   * @lucene.internal\n   */\n  @Deprecated\n  public final int compareToUTF16(Term other) {\n    if (field == other.field) // fields are interned\n      return legacyComparator.compare(this.bytes, other.bytes);\n    else\n      return field.compareTo(other.field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fafef7c83fe8e0b3ca9298d5d75d6b943dc28153","date":1308670974,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/Term#compareToUTF16(Term).mjava","sourceNew":null,"sourceOld":"  /** \n   * @deprecated (4.0) For internal backwards compatibility use only\n   * @lucene.internal\n   */\n  @Deprecated\n  public final int compareToUTF16(Term other) {\n    if (field == other.field) // fields are interned\n      return legacyComparator.compare(this.bytes, other.bytes);\n    else\n      return field.compareTo(other.field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/Term#compareToUTF16(Term).mjava","sourceNew":null,"sourceOld":"  /** \n   * @deprecated (4.0) For internal backwards compatibility use only\n   * @lucene.internal\n   */\n  @Deprecated\n  public final int compareToUTF16(Term other) {\n    if (field == other.field) // fields are interned\n      return legacyComparator.compare(this.bytes, other.bytes);\n    else\n      return field.compareTo(other.field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/Term#compareToUTF16(Term).mjava","sourceNew":null,"sourceOld":"  /** \n   * @deprecated (4.0) For internal backwards compatibility use only\n   * @lucene.internal\n   */\n  @Deprecated\n  public final int compareToUTF16(Term other) {\n    if (field == other.field) // fields are interned\n      return legacyComparator.compare(this.bytes, other.bytes);\n    else\n      return field.compareTo(other.field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4f29ba80b723649f5feb7e37afe1a558dd2c1304":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fafef7c83fe8e0b3ca9298d5d75d6b943dc28153":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4f29ba80b723649f5feb7e37afe1a558dd2c1304"],"2553b00f699380c64959ccb27991289aae87be2e":["4e8cc373c801e54cec75daf9f52792cb4b17f536","fafef7c83fe8e0b3ca9298d5d75d6b943dc28153"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["4e8cc373c801e54cec75daf9f52792cb4b17f536","fafef7c83fe8e0b3ca9298d5d75d6b943dc28153"],"3bb13258feba31ab676502787ab2e1779f129b7a":["4f29ba80b723649f5feb7e37afe1a558dd2c1304","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fafef7c83fe8e0b3ca9298d5d75d6b943dc28153"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["4f29ba80b723649f5feb7e37afe1a558dd2c1304"]},"commit2Childs":{"4f29ba80b723649f5feb7e37afe1a558dd2c1304":["5f4e87790277826a2aea119328600dfb07761f32","3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"fafef7c83fe8e0b3ca9298d5d75d6b943dc28153":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4f29ba80b723649f5feb7e37afe1a558dd2c1304","5f4e87790277826a2aea119328600dfb07761f32"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"2553b00f699380c64959ccb27991289aae87be2e":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["fafef7c83fe8e0b3ca9298d5d75d6b943dc28153","2553b00f699380c64959ccb27991289aae87be2e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d083e83f225b11e5fdd900e83d26ddb385b6955c","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2553b00f699380c64959ccb27991289aae87be2e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d083e83f225b11e5fdd900e83d26ddb385b6955c","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}