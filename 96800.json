{"path":"lucene/src/test-framework/org/apache/lucene/util/automaton/AutomatonTestUtil#assertNoDetachedStates(Automaton).mjava","commits":[{"id":"782d081ef8a29ca6f1b14a966d0c0bee4bd03ba2","date":1305314405,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/automaton/AutomatonTestUtil#assertNoDetachedStates(Automaton).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Checks that an automaton has no detached states that are unreachable\n   * from the initial state.\n   */\n  public static void assertNoDetachedStates(Automaton a) {\n    int numStates = a.getNumberOfStates();\n    a.clearNumberedStates(); // force recomputation of cached numbered states\n    assert numStates == a.getNumberOfStates() : \"automaton has \" + (numStates - a.getNumberOfStates()) + \" detached states\";\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/automaton/AutomatonTestUtil#assertNoDetachedStates(Automaton).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Checks that an automaton has no detached states that are unreachable\n   * from the initial state.\n   */\n  public static void assertNoDetachedStates(Automaton a) {\n    int numStates = a.getNumberOfStates();\n    a.clearNumberedStates(); // force recomputation of cached numbered states\n    assert numStates == a.getNumberOfStates() : \"automaton has \" + (numStates - a.getNumberOfStates()) + \" detached states\";\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/automaton/AutomatonTestUtil#assertNoDetachedStates(Automaton).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Checks that an automaton has no detached states that are unreachable\n   * from the initial state.\n   */\n  public static void assertNoDetachedStates(Automaton a) {\n    int numStates = a.getNumberOfStates();\n    a.clearNumberedStates(); // force recomputation of cached numbered states\n    assert numStates == a.getNumberOfStates() : \"automaton has \" + (numStates - a.getNumberOfStates()) + \" detached states\";\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/automaton/AutomatonTestUtil#assertNoDetachedStates(Automaton).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/automaton/AutomatonTestUtil#assertNoDetachedStates(Automaton).mjava","sourceNew":"  /**\n   * Checks that an automaton has no detached states that are unreachable\n   * from the initial state.\n   */\n  public static void assertNoDetachedStates(Automaton a) {\n    int numStates = a.getNumberOfStates();\n    a.clearNumberedStates(); // force recomputation of cached numbered states\n    assert numStates == a.getNumberOfStates() : \"automaton has \" + (numStates - a.getNumberOfStates()) + \" detached states\";\n  }\n\n","sourceOld":"  /**\n   * Checks that an automaton has no detached states that are unreachable\n   * from the initial state.\n   */\n  public static void assertNoDetachedStates(Automaton a) {\n    int numStates = a.getNumberOfStates();\n    a.clearNumberedStates(); // force recomputation of cached numbered states\n    assert numStates == a.getNumberOfStates() : \"automaton has \" + (numStates - a.getNumberOfStates()) + \" detached states\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["782d081ef8a29ca6f1b14a966d0c0bee4bd03ba2"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","782d081ef8a29ca6f1b14a966d0c0bee4bd03ba2"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","782d081ef8a29ca6f1b14a966d0c0bee4bd03ba2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"782d081ef8a29ca6f1b14a966d0c0bee4bd03ba2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","782d081ef8a29ca6f1b14a966d0c0bee4bd03ba2"],"782d081ef8a29ca6f1b14a966d0c0bee4bd03ba2":["7b91922b55d15444d554721b352861d028eb8278","c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}