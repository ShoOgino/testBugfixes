{"path":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/server/Service#createEntry(GDataRequest,GDataResponse).mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/server/Service#createEntry(GDataRequest,GDataResponse).mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/server/Service#createEntry(GDataRequest,GDataResponse).mjava","sourceNew":"    /** \n     * Service method to create an entry in an already created and existing \n     * feed. This method will create the entry and passes the entry to the \n     * indexing component to make the new entry accessable via <i>get-queries</i>. \n     * The response and the corresponding http status code will be added to the \n     * given <code>FeedResponse</code>. \n     *  \n     * @param request - \n     *            the current FeedRequest \n     * @param response - \n     *            the current FeedResponse \n     * @return - the entry which has been created  \n     * @throws ServiceException - \n     *             if the corresponding feed does not exist or the storage can \n     *             not be accessed \n     */ \n    public abstract BaseEntry createEntry(final GDataRequest request, \n            final GDataResponse response) throws ServiceException; \n\n","sourceOld":"    /** \n     * Service method to create an entry in an already created and existing \n     * feed. This method will create the entry and passes the entry to the \n     * indexing component to make the new entry accessable via <i>get-queries</i>. \n     * The response and the corresponding http status code will be added to the \n     * given <code>FeedResponse</code>. \n     *  \n     * @param request - \n     *            the current FeedRequest \n     * @param response - \n     *            the current FeedResponse \n     * @return - the entry which has been created  \n     * @throws ServiceException - \n     *             if the corresponding feed does not exist or the storage can \n     *             not be accessed \n     */ \n    public abstract BaseEntry createEntry(final GDataRequest request, \n            final GDataResponse response) throws ServiceException; \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/server/Service#createEntry(GDataRequest,GDataResponse).mjava","sourceNew":null,"sourceOld":"    /** \n     * Service method to create an entry in an already created and existing \n     * feed. This method will create the entry and passes the entry to the \n     * indexing component to make the new entry accessable via <i>get-queries</i>. \n     * The response and the corresponding http status code will be added to the \n     * given <code>FeedResponse</code>. \n     *  \n     * @param request - \n     *            the current FeedRequest \n     * @param response - \n     *            the current FeedResponse \n     * @return - the entry which has been created  \n     * @throws ServiceException - \n     *             if the corresponding feed does not exist or the storage can \n     *             not be accessed \n     */ \n    public abstract BaseEntry createEntry(final GDataRequest request, \n            final GDataResponse response) throws ServiceException; \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}