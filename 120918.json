{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#GhCell(String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#GhCell(String).mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#GhCell(String).mjava","sourceNew":"    GhCell(String token) {\n      super(GeohashPrefixTree.this, token);\n    }\n\n","sourceOld":"    GhCell(String token) {\n      super(GeohashPrefixTree.this, token);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec1f7d2f42d19b4ca07d5685b650ef589be4763f","date":1354814273,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#GhCell(String).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#GhCell(String).mjava","sourceNew":"    GhCell(String token) {\n      super(token);\n    }\n\n","sourceOld":"    GhCell(String token) {\n      super(GeohashPrefixTree.this, token);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#GhCell(String).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#GhCell(String).mjava","sourceNew":"    GhCell(String token) {\n      super(token);\n    }\n\n","sourceOld":"    GhCell(String token) {\n      super(GeohashPrefixTree.this, token);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4de14be4bd1b857ba37ca138b61c4661c6d1bed3","date":1396628861,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#GhCell(String).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#GhCell(String).mjava","sourceNew":"    GhCell(String geohash) {\n      super(stringToBytesPlus1(geohash), 0, geohash.length());\n      this.geohash = geohash;\n      if (isLeaf())\n        this.geohash = geohash.substring(0, geohash.length() - 1);\n    }\n\n","sourceOld":"    GhCell(String token) {\n      super(token);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#GhCell(String).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#GhCell(String).mjava","sourceNew":"    GhCell(String geohash) {\n      super(stringToBytesPlus1(geohash), 0, geohash.length());\n      this.geohash = geohash;\n      if (isLeaf())\n        this.geohash = geohash.substring(0, geohash.length() - 1);\n    }\n\n","sourceOld":"    GhCell(String token) {\n      super(token);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0","date":1426015524,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#GhCell(String).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#GhCell(String).mjava","sourceNew":"    GhCell(String geohash) {\n      super(stringToBytesPlus1(geohash), 0, geohash.length());\n      this.geohash = geohash;\n      if (isLeaf() && getLevel() < getMaxLevels())//we don't have a leaf byte at max levels (an opt)\n        this.geohash = geohash.substring(0, geohash.length() - 1);\n    }\n\n","sourceOld":"    GhCell(String geohash) {\n      super(stringToBytesPlus1(geohash), 0, geohash.length());\n      this.geohash = geohash;\n      if (isLeaf())\n        this.geohash = geohash.substring(0, geohash.length() - 1);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#GhCell(String).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#GhCell(String).mjava","sourceNew":"    GhCell(String geohash) {\n      super(stringToBytesPlus1(geohash), 0, geohash.length());\n      this.geohash = geohash;\n      if (isLeaf() && getLevel() < getMaxLevels())//we don't have a leaf byte at max levels (an opt)\n        this.geohash = geohash.substring(0, geohash.length() - 1);\n    }\n\n","sourceOld":"    GhCell(String geohash) {\n      super(stringToBytesPlus1(geohash), 0, geohash.length());\n      this.geohash = geohash;\n      if (isLeaf())\n        this.geohash = geohash.substring(0, geohash.length() - 1);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#GhCell(String).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#GhCell(String).mjava","sourceNew":"    GhCell(String geohash) {\n      super(stringToBytesPlus1(geohash), 0, geohash.length());\n      this.geohash = geohash;\n      if (isLeaf() && getLevel() < getMaxLevels())//we don't have a leaf byte at max levels (an opt)\n        this.geohash = geohash.substring(0, geohash.length() - 1);\n    }\n\n","sourceOld":"    GhCell(String geohash) {\n      super(stringToBytesPlus1(geohash), 0, geohash.length());\n      this.geohash = geohash;\n      if (isLeaf() && getLevel() < getMaxLevels())//we don't have a leaf byte at max levels (an opt)\n        this.geohash = geohash.substring(0, geohash.length() - 1);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#GhCell(String).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/GeohashPrefixTree.GhCell#GhCell(String).mjava","sourceNew":"    GhCell(String geohash) {\n      super(stringToBytesPlus1(geohash), 0, geohash.length());\n      this.geohash = geohash;\n      if (isLeaf() && getLevel() < getMaxLevels())//we don't have a leaf byte at max levels (an opt)\n        this.geohash = geohash.substring(0, geohash.length() - 1);\n    }\n\n","sourceOld":"    GhCell(String geohash) {\n      super(stringToBytesPlus1(geohash), 0, geohash.length());\n      this.geohash = geohash;\n      if (isLeaf() && getLevel() < getMaxLevels())//we don't have a leaf byte at max levels (an opt)\n        this.geohash = geohash.substring(0, geohash.length() - 1);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["4de14be4bd1b857ba37ca138b61c4661c6d1bed3","11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["ec1f7d2f42d19b4ca07d5685b650ef589be4763f","4de14be4bd1b857ba37ca138b61c4661c6d1bed3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["b89678825b68eccaf09e6ab71675fc0b0af1e099","ec1f7d2f42d19b4ca07d5685b650ef589be4763f"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0"],"ec1f7d2f42d19b4ca07d5685b650ef589be4763f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4de14be4bd1b857ba37ca138b61c4661c6d1bed3":["ec1f7d2f42d19b4ca07d5685b650ef589be4763f"],"11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0":["4de14be4bd1b857ba37ca138b61c4661c6d1bed3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["407687e67faf6e1f02a211ca078d8e3eed631027","ec1f7d2f42d19b4ca07d5685b650ef589be4763f"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"ec1f7d2f42d19b4ca07d5685b650ef589be4763f":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","407687e67faf6e1f02a211ca078d8e3eed631027","4de14be4bd1b857ba37ca138b61c4661c6d1bed3"],"4de14be4bd1b857ba37ca138b61c4661c6d1bed3":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","15e323346eac5e4685c0a9f2df85eb96b4239bbb","11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0"],"11ac40ec1cc2f6d61b8c8f0cd9b306dfcef5aaf0":["af2638813028b254a88b418ebeafb541afb49653","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","112d77ac8d3e10a362516ad834c9a11d35c94234"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","15e323346eac5e4685c0a9f2df85eb96b4239bbb","407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}