{"path":"lucene/src/java/org/apache/lucene/index/TermBuffer#read(IndexInput,FieldInfos).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TermBuffer#read(IndexInput,FieldInfos).mjava","pathOld":"src/java/org/apache/lucene/index/TermBuffer#read(IndexInput,FieldInfos).mjava","sourceNew":"  public final void read(IndexInput input, FieldInfos fieldInfos)\n    throws IOException {\n    this.term = null;                           // invalidate cache\n    int start = input.readVInt();\n    int length = input.readVInt();\n    int totalLength = start + length;\n    if (preUTF8Strings) {\n      text.setLength(totalLength);\n      input.readChars(text.result, start, length);\n    } else {\n\n      if (dirty) {\n        // Fully convert all bytes since bytes is dirty\n        UnicodeUtil.UTF16toUTF8(text.result, 0, text.length, bytes);\n        bytes.setLength(totalLength);\n        input.readBytes(bytes.result, start, length);\n        UnicodeUtil.UTF8toUTF16(bytes.result, 0, totalLength, text);\n        dirty = false;\n      } else {\n        // Incrementally convert only the UTF8 bytes that are new:\n        bytes.setLength(totalLength);\n        input.readBytes(bytes.result, start, length);\n        UnicodeUtil.UTF8toUTF16(bytes.result, start, length, text);\n      }\n    }\n    this.field = fieldInfos.fieldName(input.readVInt());\n  }\n\n","sourceOld":"  public final void read(IndexInput input, FieldInfos fieldInfos)\n    throws IOException {\n    this.term = null;                           // invalidate cache\n    int start = input.readVInt();\n    int length = input.readVInt();\n    int totalLength = start + length;\n    if (preUTF8Strings) {\n      text.setLength(totalLength);\n      input.readChars(text.result, start, length);\n    } else {\n\n      if (dirty) {\n        // Fully convert all bytes since bytes is dirty\n        UnicodeUtil.UTF16toUTF8(text.result, 0, text.length, bytes);\n        bytes.setLength(totalLength);\n        input.readBytes(bytes.result, start, length);\n        UnicodeUtil.UTF8toUTF16(bytes.result, 0, totalLength, text);\n        dirty = false;\n      } else {\n        // Incrementally convert only the UTF8 bytes that are new:\n        bytes.setLength(totalLength);\n        input.readBytes(bytes.result, start, length);\n        UnicodeUtil.UTF8toUTF16(bytes.result, start, length, text);\n      }\n    }\n    this.field = fieldInfos.fieldName(input.readVInt());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/TermBuffer#read(IndexInput,FieldInfos).mjava","sourceNew":null,"sourceOld":"  public final void read(IndexInput input, FieldInfos fieldInfos)\n    throws IOException {\n    this.term = null;                           // invalidate cache\n    int start = input.readVInt();\n    int length = input.readVInt();\n    int totalLength = start + length;\n    if (preUTF8Strings) {\n      text.setLength(totalLength);\n      input.readChars(text.result, start, length);\n    } else {\n\n      if (dirty) {\n        // Fully convert all bytes since bytes is dirty\n        UnicodeUtil.UTF16toUTF8(text.result, 0, text.length, bytes);\n        bytes.setLength(totalLength);\n        input.readBytes(bytes.result, start, length);\n        UnicodeUtil.UTF8toUTF16(bytes.result, 0, totalLength, text);\n        dirty = false;\n      } else {\n        // Incrementally convert only the UTF8 bytes that are new:\n        bytes.setLength(totalLength);\n        input.readBytes(bytes.result, start, length);\n        UnicodeUtil.UTF8toUTF16(bytes.result, start, length, text);\n      }\n    }\n    this.field = fieldInfos.fieldName(input.readVInt());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}