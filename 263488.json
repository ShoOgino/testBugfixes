{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/LowercaseExpandedTermsQueryNodeProcessor#process(QueryNode).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/LowercaseExpandedTermsQueryNodeProcessor#process(QueryNode).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/LowercaseExpandedTermsQueryNodeProcessor#process(QueryNode).mjava","sourceNew":"  @Override\n  public QueryNode process(QueryNode queryTree) throws QueryNodeException {\n    Boolean lowercaseExpandedTerms = getQueryConfigHandler().get(ConfigurationKeys.LOWERCASE_EXPANDED_TERMS);\n\n    if (lowercaseExpandedTerms != null && lowercaseExpandedTerms) {\n      return super.process(queryTree);\n    }\n\n    return queryTree;\n\n  }\n\n","sourceOld":"  @Override\n  public QueryNode process(QueryNode queryTree) throws QueryNodeException {\n    Boolean lowercaseExpandedTerms = getQueryConfigHandler().get(ConfigurationKeys.LOWERCASE_EXPANDED_TERMS);\n\n    if (lowercaseExpandedTerms != null && lowercaseExpandedTerms) {\n      return super.process(queryTree);\n    }\n\n    return queryTree;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea4107f60b9f95623c16025c9c247412ff809092","date":1468333987,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/LowercaseExpandedTermsQueryNodeProcessor#process(QueryNode).mjava","sourceNew":null,"sourceOld":"  @Override\n  public QueryNode process(QueryNode queryTree) throws QueryNodeException {\n    Boolean lowercaseExpandedTerms = getQueryConfigHandler().get(ConfigurationKeys.LOWERCASE_EXPANDED_TERMS);\n\n    if (lowercaseExpandedTerms != null && lowercaseExpandedTerms) {\n      return super.process(queryTree);\n    }\n\n    return queryTree;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/LowercaseExpandedTermsQueryNodeProcessor#process(QueryNode).mjava","sourceNew":null,"sourceOld":"  @Override\n  public QueryNode process(QueryNode queryTree) throws QueryNodeException {\n    Boolean lowercaseExpandedTerms = getQueryConfigHandler().get(ConfigurationKeys.LOWERCASE_EXPANDED_TERMS);\n\n    if (lowercaseExpandedTerms != null && lowercaseExpandedTerms) {\n      return super.process(queryTree);\n    }\n\n    return queryTree;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ea4107f60b9f95623c16025c9c247412ff809092":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","ea4107f60b9f95623c16025c9c247412ff809092"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ea4107f60b9f95623c16025c9c247412ff809092"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ea4107f60b9f95623c16025c9c247412ff809092","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ea4107f60b9f95623c16025c9c247412ff809092":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}