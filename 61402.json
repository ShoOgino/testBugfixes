{"path":"lucene/src/java/org/apache/lucene/search/Similarity#decodeNormValue(byte).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/Similarity#decodeNormValue(byte).mjava","pathOld":"src/java/org/apache/lucene/search/Similarity#decodeNormValue(byte).mjava","sourceNew":"  /** Decodes a normalization factor stored in an index.\n   * @see #encodeNormValue(float)\n   */\n  public float decodeNormValue(byte b) {\n    return NORM_TABLE[b & 0xFF];  // & 0xFF maps negative bytes to positive above 127\n  }\n\n","sourceOld":"  /** Decodes a normalization factor stored in an index.\n   * @see #encodeNormValue(float)\n   */\n  public float decodeNormValue(byte b) {\n    return NORM_TABLE[b & 0xFF];  // & 0xFF maps negative bytes to positive above 127\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb065b657ee556326e3666d83aae3150249aeaa3","date":1294525860,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/Similarity#decodeNormValue(byte).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Similarity#decodeNormValue(byte).mjava","sourceNew":"  /** Decodes a normalization factor stored in an index.\n   * <p>\n   * <b>WARNING: If you override this method, you should change the default\n   *    Similarity to your implementation with {@link Similarity#setDefault(Similarity)}. \n   *    Otherwise, your method may not always be called, especially if you omit norms \n   *    for some fields.</b>\n   * @see #encodeNormValue(float)\n   */\n  public float decodeNormValue(byte b) {\n    return NORM_TABLE[b & 0xFF];  // & 0xFF maps negative bytes to positive above 127\n  }\n\n","sourceOld":"  /** Decodes a normalization factor stored in an index.\n   * @see #encodeNormValue(float)\n   */\n  public float decodeNormValue(byte b) {\n    return NORM_TABLE[b & 0xFF];  // & 0xFF maps negative bytes to positive above 127\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a54e23e03b47f3d568ab3020bdd386e4b2f0a05","date":1294877328,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/Similarity#decodeNormValue(byte).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Similarity#decodeNormValue(byte).mjava","sourceNew":"  /** Decodes a normalization factor stored in an index.\n   * @see #encodeNormValue(float)\n   */\n  public float decodeNormValue(byte b) {\n    return NORM_TABLE[b & 0xFF];  // & 0xFF maps negative bytes to positive above 127\n  }\n\n","sourceOld":"  /** Decodes a normalization factor stored in an index.\n   * <p>\n   * <b>WARNING: If you override this method, you should change the default\n   *    Similarity to your implementation with {@link Similarity#setDefault(Similarity)}. \n   *    Otherwise, your method may not always be called, especially if you omit norms \n   *    for some fields.</b>\n   * @see #encodeNormValue(float)\n   */\n  public float decodeNormValue(byte b) {\n    return NORM_TABLE[b & 0xFF];  // & 0xFF maps negative bytes to positive above 127\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f3cee3d20b0c786e6fca20539454262e29edcab","date":1310101685,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TFIDFSimilarity#decodeNormValue(byte).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Similarity#decodeNormValue(byte).mjava","sourceNew":"  /** Decodes a normalization factor stored in an index.\n   * @see #encodeNormValue(float)\n   */\n  public float decodeNormValue(byte b) {\n    return NORM_TABLE[b & 0xFF];  // & 0xFF maps negative bytes to positive above 127\n  }\n\n","sourceOld":"  /** Decodes a normalization factor stored in an index.\n   * @see #encodeNormValue(float)\n   */\n  public float decodeNormValue(byte b) {\n    return NORM_TABLE[b & 0xFF];  // & 0xFF maps negative bytes to positive above 127\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/TFIDFSimilarity#decodeNormValue(byte).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Similarity#decodeNormValue(byte).mjava","sourceNew":"  /** Decodes a normalization factor stored in an index.\n   * @see #encodeNormValue(float)\n   */\n  public float decodeNormValue(byte b) {\n    return NORM_TABLE[b & 0xFF];  // & 0xFF maps negative bytes to positive above 127\n  }\n\n","sourceOld":"  /** Decodes a normalization factor stored in an index.\n   * @see #encodeNormValue(float)\n   */\n  public float decodeNormValue(byte b) {\n    return NORM_TABLE[b & 0xFF];  // & 0xFF maps negative bytes to positive above 127\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/TFIDFSimilarity#decodeNormValue(byte).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/Similarity#decodeNormValue(byte).mjava","sourceNew":"  /** Decodes a normalization factor stored in an index.\n   * @see #encodeNormValue(float)\n   */\n  public float decodeNormValue(byte b) {\n    return NORM_TABLE[b & 0xFF];  // & 0xFF maps negative bytes to positive above 127\n  }\n\n","sourceOld":"  /** Decodes a normalization factor stored in an index.\n   * @see #encodeNormValue(float)\n   */\n  public float decodeNormValue(byte b) {\n    return NORM_TABLE[b & 0xFF];  // & 0xFF maps negative bytes to positive above 127\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a54e23e03b47f3d568ab3020bdd386e4b2f0a05":["fb065b657ee556326e3666d83aae3150249aeaa3"],"1291e4568eb7d9463d751627596ef14baf4c1603":["7a54e23e03b47f3d568ab3020bdd386e4b2f0a05","0f3cee3d20b0c786e6fca20539454262e29edcab"],"0f3cee3d20b0c786e6fca20539454262e29edcab":["7a54e23e03b47f3d568ab3020bdd386e4b2f0a05"],"fb065b657ee556326e3666d83aae3150249aeaa3":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["7a54e23e03b47f3d568ab3020bdd386e4b2f0a05","0f3cee3d20b0c786e6fca20539454262e29edcab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f3cee3d20b0c786e6fca20539454262e29edcab"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7a54e23e03b47f3d568ab3020bdd386e4b2f0a05":["1291e4568eb7d9463d751627596ef14baf4c1603","0f3cee3d20b0c786e6fca20539454262e29edcab","f0b9507caf22f292ac0e5e59f62db4275adf4511"],"1291e4568eb7d9463d751627596ef14baf4c1603":[],"fb065b657ee556326e3666d83aae3150249aeaa3":["7a54e23e03b47f3d568ab3020bdd386e4b2f0a05"],"0f3cee3d20b0c786e6fca20539454262e29edcab":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["fb065b657ee556326e3666d83aae3150249aeaa3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}