{"path":"lucene/core/src/test/org/apache/lucene/util/TestVersionComparator#testVersions().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestVersionComparator#testVersions().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/TestVersionComparator#testVersions().mjava","sourceNew":"  public void testVersions() {\n    Comparator<String> comp = StringHelper.getVersionComparator();\n    assertTrue(comp.compare(\"1\", \"2\") < 0);\n    assertTrue(comp.compare(\"1\", \"1\") == 0);\n    assertTrue(comp.compare(\"2\", \"1\") > 0);\n    \n    assertTrue(comp.compare(\"1.1\", \"1\") > 0);\n    assertTrue(comp.compare(\"1\", \"1.1\") < 0);\n    assertTrue(comp.compare(\"1.1\", \"1.1\") == 0);\n    \n    assertTrue(comp.compare(\"1.0\", \"1\") == 0);\n    assertTrue(comp.compare(\"1\", \"1.0\") == 0);\n    assertTrue(comp.compare(\"1.0.1\", \"1.0\") > 0);\n    assertTrue(comp.compare(\"1.0\", \"1.0.1\") < 0);\n    \n    assertTrue(comp.compare(\"1.02.003\", \"1.2.3.0\") == 0);\n    assertTrue(comp.compare(\"1.2.3.0\", \"1.02.003\") == 0);\n    \n    assertTrue(comp.compare(\"1.10\", \"1.9\") > 0);\n    assertTrue(comp.compare(\"1.9\", \"1.10\") < 0);\n    \n    assertTrue(comp.compare(\"0\", \"1.0\") < 0);\n    assertTrue(comp.compare(\"00\", \"1.0\") < 0);\n    assertTrue(comp.compare(\"-1.0\", \"1.0\") < 0);\n    assertTrue(comp.compare(\"3.0\", Integer.toString(Integer.MIN_VALUE)) > 0);\n  }\n\n","sourceOld":"  public void testVersions() {\n    Comparator<String> comp = StringHelper.getVersionComparator();\n    assertTrue(comp.compare(\"1\", \"2\") < 0);\n    assertTrue(comp.compare(\"1\", \"1\") == 0);\n    assertTrue(comp.compare(\"2\", \"1\") > 0);\n    \n    assertTrue(comp.compare(\"1.1\", \"1\") > 0);\n    assertTrue(comp.compare(\"1\", \"1.1\") < 0);\n    assertTrue(comp.compare(\"1.1\", \"1.1\") == 0);\n    \n    assertTrue(comp.compare(\"1.0\", \"1\") == 0);\n    assertTrue(comp.compare(\"1\", \"1.0\") == 0);\n    assertTrue(comp.compare(\"1.0.1\", \"1.0\") > 0);\n    assertTrue(comp.compare(\"1.0\", \"1.0.1\") < 0);\n    \n    assertTrue(comp.compare(\"1.02.003\", \"1.2.3.0\") == 0);\n    assertTrue(comp.compare(\"1.2.3.0\", \"1.02.003\") == 0);\n    \n    assertTrue(comp.compare(\"1.10\", \"1.9\") > 0);\n    assertTrue(comp.compare(\"1.9\", \"1.10\") < 0);\n    \n    assertTrue(comp.compare(\"0\", \"1.0\") < 0);\n    assertTrue(comp.compare(\"00\", \"1.0\") < 0);\n    assertTrue(comp.compare(\"-1.0\", \"1.0\") < 0);\n    assertTrue(comp.compare(\"3.0\", Integer.toString(Integer.MIN_VALUE)) > 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"057a1793765d068ea9302f1a29e21734ee58d41e","date":1408130117,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestVersionComparator#testVersions().mjava","sourceNew":null,"sourceOld":"  public void testVersions() {\n    Comparator<String> comp = StringHelper.getVersionComparator();\n    assertTrue(comp.compare(\"1\", \"2\") < 0);\n    assertTrue(comp.compare(\"1\", \"1\") == 0);\n    assertTrue(comp.compare(\"2\", \"1\") > 0);\n    \n    assertTrue(comp.compare(\"1.1\", \"1\") > 0);\n    assertTrue(comp.compare(\"1\", \"1.1\") < 0);\n    assertTrue(comp.compare(\"1.1\", \"1.1\") == 0);\n    \n    assertTrue(comp.compare(\"1.0\", \"1\") == 0);\n    assertTrue(comp.compare(\"1\", \"1.0\") == 0);\n    assertTrue(comp.compare(\"1.0.1\", \"1.0\") > 0);\n    assertTrue(comp.compare(\"1.0\", \"1.0.1\") < 0);\n    \n    assertTrue(comp.compare(\"1.02.003\", \"1.2.3.0\") == 0);\n    assertTrue(comp.compare(\"1.2.3.0\", \"1.02.003\") == 0);\n    \n    assertTrue(comp.compare(\"1.10\", \"1.9\") > 0);\n    assertTrue(comp.compare(\"1.9\", \"1.10\") < 0);\n    \n    assertTrue(comp.compare(\"0\", \"1.0\") < 0);\n    assertTrue(comp.compare(\"00\", \"1.0\") < 0);\n    assertTrue(comp.compare(\"-1.0\", \"1.0\") < 0);\n    assertTrue(comp.compare(\"3.0\", Integer.toString(Integer.MIN_VALUE)) > 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"057a1793765d068ea9302f1a29e21734ee58d41e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["057a1793765d068ea9302f1a29e21734ee58d41e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["057a1793765d068ea9302f1a29e21734ee58d41e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"057a1793765d068ea9302f1a29e21734ee58d41e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}