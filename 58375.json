{"path":"src/java/org/apache/lucene/util/AttributeSource#getAttribute(Class).mjava","commits":[{"id":"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223","date":1227051709,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/AttributeSource#getAttribute(Class).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * The caller must pass in a Class&lt;? extends Attribute&gt; value. \n   * Returns the instance of the passed in Attribute contained in this AttributeSource\n   * \n   * @throws IllegalArgumentException if this AttributeSource does not contain the\n   *         Attribute\n   */\n  public Attribute getAttribute(Class attClass) {\n    Attribute att = (Attribute) this.attributes.get(attClass);\n    if (att == null) {\n      throw new IllegalArgumentException(\"This token does not have the attribute '\" + attClass + \"'.\");\n    }\n\n    return att;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec8b5a20a12931b8d7e616c79c5248ae06cc5568","date":1248471948,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/AttributeSource#getAttribute(Class).mjava","pathOld":"src/java/org/apache/lucene/util/AttributeSource#getAttribute(Class).mjava","sourceNew":"  /**\n   * The caller must pass in a Class&lt;? extends Attribute&gt; value. \n   * Returns the instance of the passed in Attribute contained in this AttributeSource\n   * \n   * @throws IllegalArgumentException if this AttributeSource does not contain the\n   *         Attribute\n   */\n  public AttributeImpl getAttribute(Class attClass) {\n    AttributeImpl att = (AttributeImpl) this.attributes.get(attClass);\n    if (att == null) {\n      throw new IllegalArgumentException(\"This AttributeSource does not have the attribute '\" + attClass + \"'.\");\n    }\n\n    return att;\n  }\n\n","sourceOld":"  /**\n   * The caller must pass in a Class&lt;? extends Attribute&gt; value. \n   * Returns the instance of the passed in Attribute contained in this AttributeSource\n   * \n   * @throws IllegalArgumentException if this AttributeSource does not contain the\n   *         Attribute\n   */\n  public Attribute getAttribute(Class attClass) {\n    Attribute att = (Attribute) this.attributes.get(attClass);\n    if (att == null) {\n      throw new IllegalArgumentException(\"This token does not have the attribute '\" + attClass + \"'.\");\n    }\n\n    return att;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8e9bb5eabc9d075f6867b575e11ed8ac0b1d7ff4","date":1250856706,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/AttributeSource#getAttribute(Class).mjava","pathOld":"src/java/org/apache/lucene/util/AttributeSource#getAttribute(Class).mjava","sourceNew":"  /**\n   * The caller must pass in a Class&lt;? extends Attribute&gt; value. \n   * Returns the instance of the passed in Attribute contained in this AttributeSource\n   * <p>Signature for Java 1.5: <code>public &lt;T extends Attribute&gt; T getAttribute(Class&lt;T&gt;)</code>\n   * \n   * @throws IllegalArgumentException if this AttributeSource does not contain the\n   *         Attribute\n   */\n  public Attribute getAttribute(Class attClass) {\n    final Attribute att = (Attribute) this.attributes.get(attClass);\n    if (att == null) {\n      throw new IllegalArgumentException(\"This AttributeSource does not have the attribute '\" + attClass.getName() + \"'.\");\n    }\n\n    return att;\n  }\n\n","sourceOld":"  /**\n   * The caller must pass in a Class&lt;? extends Attribute&gt; value. \n   * Returns the instance of the passed in Attribute contained in this AttributeSource\n   * \n   * @throws IllegalArgumentException if this AttributeSource does not contain the\n   *         Attribute\n   */\n  public AttributeImpl getAttribute(Class attClass) {\n    AttributeImpl att = (AttributeImpl) this.attributes.get(attClass);\n    if (att == null) {\n      throw new IllegalArgumentException(\"This AttributeSource does not have the attribute '\" + attClass + \"'.\");\n    }\n\n    return att;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"efa6f2b2265151f8faaf69272253e065734ec9d4","date":1250942675,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/AttributeSource#getAttribute(Class).mjava","pathOld":"src/java/org/apache/lucene/util/AttributeSource#getAttribute(Class).mjava","sourceNew":"  /**\n   * The caller must pass in a Class&lt;? extends Attribute&gt; value. \n   * Returns the instance of the passed in Attribute contained in this AttributeSource\n   * <p>Signature for Java 1.5: <code>public &lt;T extends Attribute&gt; T getAttribute(Class&lt;T&gt;)</code>\n   * \n   * @throws IllegalArgumentException if this AttributeSource does not contain the\n   *         Attribute. It is recommended to always use {@link #addAttribute} even in consumers\n   *         of TokenStreams, because you cannot know if a specific TokenStream really uses\n   *         a specific Attribute. {@link #addAttribute} will automatically make the attribute\n   *         available. If you want to only use the attribute, if it is available (to optimize\n   *         consuming), use {@link #hasAttribute}.\n   */\n  public Attribute getAttribute(Class attClass) {\n    final Attribute att = (Attribute) this.attributes.get(attClass);\n    if (att == null) {\n      throw new IllegalArgumentException(\"This AttributeSource does not have the attribute '\" + attClass.getName() + \"'.\");\n    }\n\n    return att;\n  }\n\n","sourceOld":"  /**\n   * The caller must pass in a Class&lt;? extends Attribute&gt; value. \n   * Returns the instance of the passed in Attribute contained in this AttributeSource\n   * <p>Signature for Java 1.5: <code>public &lt;T extends Attribute&gt; T getAttribute(Class&lt;T&gt;)</code>\n   * \n   * @throws IllegalArgumentException if this AttributeSource does not contain the\n   *         Attribute\n   */\n  public Attribute getAttribute(Class attClass) {\n    final Attribute att = (Attribute) this.attributes.get(attClass);\n    if (att == null) {\n      throw new IllegalArgumentException(\"This AttributeSource does not have the attribute '\" + attClass.getName() + \"'.\");\n    }\n\n    return att;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d78f014fded44fbde905f4f84cdc21907b371e8","date":1254383623,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/AttributeSource#[A-extends-Attribute]_getAttribute(Class[A]).mjava","pathOld":"src/java/org/apache/lucene/util/AttributeSource#getAttribute(Class).mjava","sourceNew":"  /**\n   * The caller must pass in a Class&lt;? extends Attribute&gt; value. \n   * Returns the instance of the passed in Attribute contained in this AttributeSource\n   * \n   * @throws IllegalArgumentException if this AttributeSource does not contain the\n   *         Attribute. It is recommended to always use {@link #addAttribute} even in consumers\n   *         of TokenStreams, because you cannot know if a specific TokenStream really uses\n   *         a specific Attribute. {@link #addAttribute} will automatically make the attribute\n   *         available. If you want to only use the attribute, if it is available (to optimize\n   *         consuming), use {@link #hasAttribute}.\n   */\n  public <A extends Attribute> A getAttribute(Class<A> attClass) {\n    AttributeImpl attImpl = attributes.get(attClass);\n    if (attImpl == null) {\n      throw new IllegalArgumentException(\"This AttributeSource does not have the attribute '\" + attClass.getName() + \"'.\");\n    }\n    return attClass.cast(attImpl);\n  }\n\n","sourceOld":"  /**\n   * The caller must pass in a Class&lt;? extends Attribute&gt; value. \n   * Returns the instance of the passed in Attribute contained in this AttributeSource\n   * <p>Signature for Java 1.5: <code>public &lt;T extends Attribute&gt; T getAttribute(Class&lt;T&gt;)</code>\n   * \n   * @throws IllegalArgumentException if this AttributeSource does not contain the\n   *         Attribute. It is recommended to always use {@link #addAttribute} even in consumers\n   *         of TokenStreams, because you cannot know if a specific TokenStream really uses\n   *         a specific Attribute. {@link #addAttribute} will automatically make the attribute\n   *         available. If you want to only use the attribute, if it is available (to optimize\n   *         consuming), use {@link #hasAttribute}.\n   */\n  public Attribute getAttribute(Class attClass) {\n    final Attribute att = (Attribute) this.attributes.get(attClass);\n    if (att == null) {\n      throw new IllegalArgumentException(\"This AttributeSource does not have the attribute '\" + attClass.getName() + \"'.\");\n    }\n\n    return att;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8e9bb5eabc9d075f6867b575e11ed8ac0b1d7ff4":["ec8b5a20a12931b8d7e616c79c5248ae06cc5568"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8d78f014fded44fbde905f4f84cdc21907b371e8":["efa6f2b2265151f8faaf69272253e065734ec9d4"],"efa6f2b2265151f8faaf69272253e065734ec9d4":["8e9bb5eabc9d075f6867b575e11ed8ac0b1d7ff4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8d78f014fded44fbde905f4f84cdc21907b371e8"],"ec8b5a20a12931b8d7e616c79c5248ae06cc5568":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"]},"commit2Childs":{"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["ec8b5a20a12931b8d7e616c79c5248ae06cc5568"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"],"8e9bb5eabc9d075f6867b575e11ed8ac0b1d7ff4":["efa6f2b2265151f8faaf69272253e065734ec9d4"],"8d78f014fded44fbde905f4f84cdc21907b371e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"efa6f2b2265151f8faaf69272253e065734ec9d4":["8d78f014fded44fbde905f4f84cdc21907b371e8"],"ec8b5a20a12931b8d7e616c79c5248ae06cc5568":["8e9bb5eabc9d075f6867b575e11ed8ac0b1d7ff4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}