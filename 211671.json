{"path":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#req(List[Scorer],boolean).mjava","commits":[{"id":"d9c2895bfaa94bdbd1fd5a1b1522f6310c91d240","date":1400613895,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#req(List[Scorer],boolean).mjava","pathOld":"/dev/null","sourceNew":"    private Scorer req(List<Scorer> required, boolean disableCoord) {\n      Scorer req;\n      if (required.size() == 1) {\n        req = required.get(0);\n        if (!disableCoord && maxCoord > 1) {\n          req = new BoostedScorer(req, coord(required.size(), maxCoord));\n        }\n      } else {\n        req = new ConjunctionScorer(this, \n                                    required.toArray(new Scorer[required.size()]),\n                                    disableCoord ? 1.0F : coord(required.size(), maxCoord));\n      }\n      return req;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2cdc8a177cc608482424e349819a116a88f53152","date":1400638515,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#req(List[Scorer],boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#req(List[Scorer],boolean).mjava","sourceNew":"    private Scorer req(List<Scorer> required, boolean disableCoord) {\n      if (required.size() == 1) {\n        Scorer req = required.get(0);\n        if (!disableCoord && maxCoord > 1) {\n          return new BoostedScorer(req, coord(1, maxCoord));\n        } else {\n          return req;\n        }\n      } else {\n        return new ConjunctionScorer(this, \n                                     required.toArray(new Scorer[required.size()]),\n                                     disableCoord ? 1.0F : coord(required.size(), maxCoord));\n      }\n    }\n\n","sourceOld":"    private Scorer req(List<Scorer> required, boolean disableCoord) {\n      Scorer req;\n      if (required.size() == 1) {\n        req = required.get(0);\n        if (!disableCoord && maxCoord > 1) {\n          req = new BoostedScorer(req, coord(required.size(), maxCoord));\n        }\n      } else {\n        req = new ConjunctionScorer(this, \n                                    required.toArray(new Scorer[required.size()]),\n                                    disableCoord ? 1.0F : coord(required.size(), maxCoord));\n      }\n      return req;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"060a4836b54f1e7e79ea6493cda5dc3030d3fb0e","date":1400639845,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#req(List[Scorer],boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#req(List[Scorer],boolean).mjava","sourceNew":"    private Scorer req(List<Scorer> required, boolean disableCoord) {\n      if (required.size() == 1) {\n        Scorer req = required.get(0);\n        if (!disableCoord && maxCoord > 1) {\n          return new BooleanTopLevelScorers.BoostedScorer(req, coord(1, maxCoord));\n        } else {\n          return req;\n        }\n      } else {\n        return new ConjunctionScorer(this, \n                                     required.toArray(new Scorer[required.size()]),\n                                     disableCoord ? 1.0F : coord(required.size(), maxCoord));\n      }\n    }\n\n","sourceOld":"    private Scorer req(List<Scorer> required, boolean disableCoord) {\n      if (required.size() == 1) {\n        Scorer req = required.get(0);\n        if (!disableCoord && maxCoord > 1) {\n          return new BoostedScorer(req, coord(1, maxCoord));\n        } else {\n          return req;\n        }\n      } else {\n        return new ConjunctionScorer(this, \n                                     required.toArray(new Scorer[required.size()]),\n                                     disableCoord ? 1.0F : coord(required.size(), maxCoord));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38fa8e2c4105a7dd15d7e9260afa3b41a560d51d","date":1400696679,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#req(List[Scorer],boolean).mjava","pathOld":"/dev/null","sourceNew":"    private Scorer req(List<Scorer> required, boolean disableCoord) {\n      if (required.size() == 1) {\n        Scorer req = required.get(0);\n        if (!disableCoord && maxCoord > 1) {\n          return new BooleanTopLevelScorers.BoostedScorer(req, coord(1, maxCoord));\n        } else {\n          return req;\n        }\n      } else {\n        return new ConjunctionScorer(this, \n                                     required.toArray(new Scorer[required.size()]),\n                                     disableCoord ? 1.0F : coord(required.size(), maxCoord));\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#req(List[Scorer],boolean).mjava","pathOld":"/dev/null","sourceNew":"    private Scorer req(List<Scorer> required, boolean disableCoord) {\n      if (required.size() == 1) {\n        Scorer req = required.get(0);\n        if (!disableCoord && maxCoord > 1) {\n          return new BooleanTopLevelScorers.BoostedScorer(req, coord(1, maxCoord));\n        } else {\n          return req;\n        }\n      } else {\n        return new ConjunctionScorer(this, \n                                     required.toArray(new Scorer[required.size()]),\n                                     disableCoord ? 1.0F : coord(required.size(), maxCoord));\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a18a03f140cbd3f78694787c9f98cf452aab7b7f","date":1423241474,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery.BooleanWeight#req(List[Scorer],boolean).mjava","sourceNew":null,"sourceOld":"    private Scorer req(List<Scorer> required, boolean disableCoord) {\n      if (required.size() == 1) {\n        Scorer req = required.get(0);\n        if (!disableCoord && maxCoord > 1) {\n          return new BooleanTopLevelScorers.BoostedScorer(req, coord(1, maxCoord));\n        } else {\n          return req;\n        }\n      } else {\n        return new ConjunctionScorer(this, \n                                     required.toArray(new Scorer[required.size()]),\n                                     disableCoord ? 1.0F : coord(required.size(), maxCoord));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d9c2895bfaa94bdbd1fd5a1b1522f6310c91d240":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2cdc8a177cc608482424e349819a116a88f53152":["d9c2895bfaa94bdbd1fd5a1b1522f6310c91d240"],"b7605579001505896d48b07160075a5c8b8e128e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","38fa8e2c4105a7dd15d7e9260afa3b41a560d51d"],"a18a03f140cbd3f78694787c9f98cf452aab7b7f":["38fa8e2c4105a7dd15d7e9260afa3b41a560d51d"],"060a4836b54f1e7e79ea6493cda5dc3030d3fb0e":["2cdc8a177cc608482424e349819a116a88f53152"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a18a03f140cbd3f78694787c9f98cf452aab7b7f"],"38fa8e2c4105a7dd15d7e9260afa3b41a560d51d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","060a4836b54f1e7e79ea6493cda5dc3030d3fb0e"]},"commit2Childs":{"d9c2895bfaa94bdbd1fd5a1b1522f6310c91d240":["2cdc8a177cc608482424e349819a116a88f53152"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d9c2895bfaa94bdbd1fd5a1b1522f6310c91d240","b7605579001505896d48b07160075a5c8b8e128e","38fa8e2c4105a7dd15d7e9260afa3b41a560d51d"],"2cdc8a177cc608482424e349819a116a88f53152":["060a4836b54f1e7e79ea6493cda5dc3030d3fb0e"],"b7605579001505896d48b07160075a5c8b8e128e":[],"a18a03f140cbd3f78694787c9f98cf452aab7b7f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"060a4836b54f1e7e79ea6493cda5dc3030d3fb0e":["38fa8e2c4105a7dd15d7e9260afa3b41a560d51d"],"38fa8e2c4105a7dd15d7e9260afa3b41a560d51d":["b7605579001505896d48b07160075a5c8b8e128e","a18a03f140cbd3f78694787c9f98cf452aab7b7f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}