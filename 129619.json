{"path":"lucene/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","commits":[{"id":"a05409176bd65129d67a785ee70e881e238a9aef","date":1282582843,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockRAMDirectory,boolean).mjava","sourceNew":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(new Field(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter initIndex(Random random, MockRAMDirectory dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(new Field(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","sourceNew":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(new Field(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(new Field(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","sourceNew":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(newField(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(newField(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(new Field(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(new Field(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(newField(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(newField(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","sourceNew":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(newField(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(newField(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(newField(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(newField(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","sourceNew":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(newField(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(newField(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(newField(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(newField(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","sourceNew":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(newField(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(newField(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(newField(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(newField(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","sourceNew":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(newField(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(newField(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer())\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(newField(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(newField(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","sourceNew":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(newField(\"content\", \"aaa\", TextField.TYPE_UNSTORED));\n    doc.add(newField(\"id\", \"0\", TextField.TYPE_UNSTORED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(newField(\"content\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED));\n    doc.add(newField(\"id\", \"0\", Field.Store.YES, Field.Index.ANALYZED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrash#initIndex(Random,MockDirectoryWrapper,boolean).mjava","sourceNew":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(newField(\"content\", \"aaa\", TextField.TYPE_UNSTORED));\n    doc.add(newField(\"id\", \"0\", TextField.TYPE_UNSTORED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","sourceOld":"  private IndexWriter initIndex(Random random, MockDirectoryWrapper dir, boolean initialCommit) throws IOException {\n    dir.setLockFactory(NoLockFactory.getNoLockFactory());\n\n    IndexWriter writer  = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMaxBufferedDocs(10).setMergeScheduler(new ConcurrentMergeScheduler()));\n    ((ConcurrentMergeScheduler) writer.getConfig().getMergeScheduler()).setSuppressExceptions();\n    if (initialCommit) {\n      writer.commit();\n    }\n    \n    Document doc = new Document();\n    doc.add(newField(\"content\", \"aaa\", TextField.TYPE_UNSTORED));\n    doc.add(newField(\"id\", \"0\", TextField.TYPE_UNSTORED));\n    for(int i=0;i<157;i++)\n      writer.addDocument(doc);\n\n    return writer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"f2c5f0cb44df114db4228c8f77861714b5cabaea":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["a05409176bd65129d67a785ee70e881e238a9aef"],"a3776dccca01c11e7046323cfad46a3b4a471233":["132903c28af3aa6f67284b78de91c0f0a99488c2","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["132903c28af3aa6f67284b78de91c0f0a99488c2","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a05409176bd65129d67a785ee70e881e238a9aef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","132903c28af3aa6f67284b78de91c0f0a99488c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"f2c5f0cb44df114db4228c8f77861714b5cabaea":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a05409176bd65129d67a785ee70e881e238a9aef","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"a05409176bd65129d67a785ee70e881e238a9aef":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"962d04139994fce5193143ef35615499a9a96d78":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}