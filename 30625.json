{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#rollbackCommit(Directory).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#rollbackCommit(Directory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfos#rollbackCommit(Directory).mjava","sourceNew":"  final void rollbackCommit(Directory dir) throws IOException {\n    if (pendingSegnOutput != null) {\n      try {\n        pendingSegnOutput.close();\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n\n      // Must carefully compute fileName from \"generation\"\n      // since lastGeneration isn't incremented:\n      try {\n        final String segmentFileName = IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS,\n                                                                              \"\",\n                                                                             generation);\n        dir.deleteFile(segmentFileName);\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n      pendingSegnOutput = null;\n    }\n  }\n\n","sourceOld":"  final void rollbackCommit(Directory dir) throws IOException {\n    if (pendingSegnOutput != null) {\n      try {\n        pendingSegnOutput.close();\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n\n      // Must carefully compute fileName from \"generation\"\n      // since lastGeneration isn't incremented:\n      try {\n        final String segmentFileName = IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS,\n                                                                              \"\",\n                                                                             generation);\n        dir.deleteFile(segmentFileName);\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n      pendingSegnOutput = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#rollbackCommit(Directory).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#rollbackCommit(Directory).mjava","sourceNew":"  final void rollbackCommit(Directory dir) {\n    if (pendingSegnOutput != null) {\n      try {\n        pendingSegnOutput.close();\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n\n      // Must carefully compute fileName from \"generation\"\n      // since lastGeneration isn't incremented:\n      try {\n        final String segmentFileName = IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS,\n                                                                              \"\",\n                                                                             generation);\n        dir.deleteFile(segmentFileName);\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n      pendingSegnOutput = null;\n    }\n  }\n\n","sourceOld":"  final void rollbackCommit(Directory dir) throws IOException {\n    if (pendingSegnOutput != null) {\n      try {\n        pendingSegnOutput.close();\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n\n      // Must carefully compute fileName from \"generation\"\n      // since lastGeneration isn't incremented:\n      try {\n        final String segmentFileName = IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS,\n                                                                              \"\",\n                                                                             generation);\n        dir.deleteFile(segmentFileName);\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n      pendingSegnOutput = null;\n    }\n  }\n\n","bugFix":["f33fc116e28d7704378c9dd333711753bd0c9706"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#rollbackCommit(Directory).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#rollbackCommit(Directory).mjava","sourceNew":"  final void rollbackCommit(Directory dir) {\n    if (pendingSegnOutput != null) {\n      try {\n        pendingSegnOutput.close();\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n\n      // Must carefully compute fileName from \"generation\"\n      // since lastGeneration isn't incremented:\n      try {\n        final String segmentFileName = IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS,\n                                                                              \"\",\n                                                                             generation);\n        dir.deleteFile(segmentFileName);\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n      pendingSegnOutput = null;\n    }\n  }\n\n","sourceOld":"  final void rollbackCommit(Directory dir) throws IOException {\n    if (pendingSegnOutput != null) {\n      try {\n        pendingSegnOutput.close();\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n\n      // Must carefully compute fileName from \"generation\"\n      // since lastGeneration isn't incremented:\n      try {\n        final String segmentFileName = IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS,\n                                                                              \"\",\n                                                                             generation);\n        dir.deleteFile(segmentFileName);\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n      pendingSegnOutput = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f24f21e70a092329fc6f920115592dc9529d379","date":1349391034,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#rollbackCommit(Directory).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#rollbackCommit(Directory).mjava","sourceNew":"  final void rollbackCommit(Directory dir) {\n    if (pendingSegnOutput != null) {\n      // Suppress so we keep throwing the original exception\n      // in our caller\n      IOUtils.closeWhileHandlingException(pendingSegnOutput);\n      pendingSegnOutput = null;\n\n      // Must carefully compute fileName from \"generation\"\n      // since lastGeneration isn't incremented:\n      final String segmentFileName = IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS,\n                                                                            \"\",\n                                                                           generation);\n      // Suppress so we keep throwing the original exception\n      // in our caller\n      IOUtils.deleteFilesIgnoringExceptions(dir, segmentFileName);\n    }\n  }\n\n","sourceOld":"  final void rollbackCommit(Directory dir) {\n    if (pendingSegnOutput != null) {\n      try {\n        pendingSegnOutput.close();\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n\n      // Must carefully compute fileName from \"generation\"\n      // since lastGeneration isn't incremented:\n      try {\n        final String segmentFileName = IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS,\n                                                                              \"\",\n                                                                             generation);\n        dir.deleteFile(segmentFileName);\n      } catch (Throwable t) {\n        // Suppress so we keep throwing the original exception\n        // in our caller\n      }\n      pendingSegnOutput = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46e4a8bdfbafda795ef9c39a2bc2d47095770299","date":1410411846,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#rollbackCommit(Directory).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#rollbackCommit(Directory).mjava","sourceNew":"  final void rollbackCommit(Directory dir) {\n    if (pendingCommit) {\n      pendingCommit = false;\n      \n      // we try to clean up our pending_segments_N\n\n      // Must carefully compute fileName from \"generation\"\n      // since lastGeneration isn't incremented:\n      final String pending = IndexFileNames.fileNameFromGeneration(IndexFileNames.PENDING_SEGMENTS, \"\", generation);\n\n      // Suppress so we keep throwing the original exception\n      // in our caller\n      IOUtils.deleteFilesIgnoringExceptions(dir, pending);\n    }\n  }\n\n","sourceOld":"  final void rollbackCommit(Directory dir) {\n    if (pendingSegnOutput != null) {\n      // Suppress so we keep throwing the original exception\n      // in our caller\n      IOUtils.closeWhileHandlingException(pendingSegnOutput);\n      pendingSegnOutput = null;\n\n      // Must carefully compute fileName from \"generation\"\n      // since lastGeneration isn't incremented:\n      final String segmentFileName = IndexFileNames.fileNameFromGeneration(IndexFileNames.SEGMENTS,\n                                                                            \"\",\n                                                                           generation);\n      // Suppress so we keep throwing the original exception\n      // in our caller\n      IOUtils.deleteFilesIgnoringExceptions(dir, segmentFileName);\n    }\n  }\n\n","bugFix":null,"bugIntro":["d0c334a824d4ce7d739c100bf4ae56111a995e3a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0c334a824d4ce7d739c100bf4ae56111a995e3a","date":1598293184,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#rollbackCommit(Directory).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#rollbackCommit(Directory).mjava","sourceNew":"  final void rollbackCommit(Directory dir) {\n    if (pendingCommit) {\n      pendingCommit = false;\n      \n      // we try to clean up our pending_segments_N\n\n      // Must carefully compute fileName from \"generation\"\n      // since lastGeneration isn't incremented:\n      final String pending = IndexFileNames.fileNameFromGeneration(IndexFileNames.PENDING_SEGMENTS, \"\", generation);\n      // Suppress so we keep throwing the original exception\n      // in our caller\n      IOUtils.deleteFilesIgnoringExceptions(dir, pending);\n    }\n  }\n\n","sourceOld":"  final void rollbackCommit(Directory dir) {\n    if (pendingCommit) {\n      pendingCommit = false;\n      \n      // we try to clean up our pending_segments_N\n\n      // Must carefully compute fileName from \"generation\"\n      // since lastGeneration isn't incremented:\n      final String pending = IndexFileNames.fileNameFromGeneration(IndexFileNames.PENDING_SEGMENTS, \"\", generation);\n\n      // Suppress so we keep throwing the original exception\n      // in our caller\n      IOUtils.deleteFilesIgnoringExceptions(dir, pending);\n    }\n  }\n\n","bugFix":["46e4a8bdfbafda795ef9c39a2bc2d47095770299"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"46e4a8bdfbafda795ef9c39a2bc2d47095770299":["5f24f21e70a092329fc6f920115592dc9529d379"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"5f24f21e70a092329fc6f920115592dc9529d379":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"d0c334a824d4ce7d739c100bf4ae56111a995e3a":["46e4a8bdfbafda795ef9c39a2bc2d47095770299"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0c334a824d4ce7d739c100bf4ae56111a995e3a"]},"commit2Childs":{"46e4a8bdfbafda795ef9c39a2bc2d47095770299":["d0c334a824d4ce7d739c100bf4ae56111a995e3a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","5f24f21e70a092329fc6f920115592dc9529d379"],"5f24f21e70a092329fc6f920115592dc9529d379":["46e4a8bdfbafda795ef9c39a2bc2d47095770299"],"d0c334a824d4ce7d739c100bf4ae56111a995e3a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}