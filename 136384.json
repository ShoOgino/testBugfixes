{"path":"src/java/org/apache/lucene/index/MultiReader#MultiReader(IndexReader[]).mjava","commits":[{"id":"9ad07cf326135fbb108f766a0798c8ee00b17dcb","date":1077215339,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#MultiReader(IndexReader[]).mjava","pathOld":"/dev/null","sourceNew":"  /** Construct reading the named set of readers. */\n  public MultiReader(IndexReader[] readers) throws IOException {\n    this(readers.length == 0 ? null : readers[0].directory(), readers);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f653aecb322b74d99e6ecdb93765e453a3d7aa71","date":1082107025,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#MultiReader(IndexReader[]).mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#MultiReader(IndexReader[]).mjava","sourceNew":" /**\n  * <p>Construct a MultiReader aggregating the named set of (sub)readers.\n  * Directory locking for delete, undeleteAll, and setNorm operations is\n  * left to the subreaders. </p>\n  * <p>Note that all subreaders are closed if this Multireader is closed.</p>\n  * @param readers set of (sub)readers\n  * @throws IOException\n  */\n  public MultiReader(IndexReader[] subReaders) throws IOException {\n    super(subReaders.length == 0 ? null : subReaders[0].directory());\n    initialize(subReaders);\n  }\n\n","sourceOld":"  /** Construct reading the named set of readers. */\n  public MultiReader(IndexReader[] readers) throws IOException {\n    this(readers.length == 0 ? null : readers[0].directory(), readers);\n  }\n\n","bugFix":null,"bugIntro":["f7f2552b9f13037c62acd400d263d1e9262d6e4e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"945cd25ab8d3f237e311b640b7e2fb2f3004fdb5","date":1084295549,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#MultiReader(IndexReader[]).mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#MultiReader(IndexReader[]).mjava","sourceNew":" /**\n  * <p>Construct a MultiReader aggregating the named set of (sub)readers.\n  * Directory locking for delete, undeleteAll, and setNorm operations is\n  * left to the subreaders. </p>\n  * <p>Note that all subreaders are closed if this Multireader is closed.</p>\n  * @param subReaders set of (sub)readers\n  * @throws IOException\n  */\n  public MultiReader(IndexReader[] subReaders) throws IOException {\n    super(subReaders.length == 0 ? null : subReaders[0].directory());\n    initialize(subReaders);\n  }\n\n","sourceOld":" /**\n  * <p>Construct a MultiReader aggregating the named set of (sub)readers.\n  * Directory locking for delete, undeleteAll, and setNorm operations is\n  * left to the subreaders. </p>\n  * <p>Note that all subreaders are closed if this Multireader is closed.</p>\n  * @param readers set of (sub)readers\n  * @throws IOException\n  */\n  public MultiReader(IndexReader[] subReaders) throws IOException {\n    super(subReaders.length == 0 ? null : subReaders[0].directory());\n    initialize(subReaders);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f7f2552b9f13037c62acd400d263d1e9262d6e4e","date":1185490328,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#MultiReader(IndexReader[]).mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#MultiReader(IndexReader[]).mjava","sourceNew":" /**\n  * <p>Construct a MultiReader aggregating the named set of (sub)readers.\n  * Directory locking for delete, undeleteAll, and setNorm operations is\n  * left to the subreaders. </p>\n  * <p>Note that all subreaders are closed if this Multireader is closed.</p>\n  * @param subReaders set of (sub)readers\n  * @throws IOException\n  */\n  public MultiReader(IndexReader[] subReaders) throws IOException {\n    super(subReaders.length == 0 ? null : subReaders[0].directory(), \n          null, false, subReaders);\n  }\n\n","sourceOld":" /**\n  * <p>Construct a MultiReader aggregating the named set of (sub)readers.\n  * Directory locking for delete, undeleteAll, and setNorm operations is\n  * left to the subreaders. </p>\n  * <p>Note that all subreaders are closed if this Multireader is closed.</p>\n  * @param subReaders set of (sub)readers\n  * @throws IOException\n  */\n  public MultiReader(IndexReader[] subReaders) throws IOException {\n    super(subReaders.length == 0 ? null : subReaders[0].directory());\n    initialize(subReaders);\n  }\n\n","bugFix":["f653aecb322b74d99e6ecdb93765e453a3d7aa71"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"125b5699f11b58d9be0820c6ce8b1648812902e8","date":1190273227,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#MultiReader(IndexReader[]).mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#MultiReader(IndexReader[]).mjava","sourceNew":" /**\n  * <p>Construct a MultiReader aggregating the named set of (sub)readers.\n  * Directory locking for delete, undeleteAll, and setNorm operations is\n  * left to the subreaders. </p>\n  * <p>Note that all subreaders are closed if this Multireader is closed.</p>\n  * @param subReaders set of (sub)readers\n  * @throws IOException\n  */\n  public MultiReader(IndexReader[] subReaders) {\n    initialize(subReaders);\n  }\n\n","sourceOld":" /**\n  * <p>Construct a MultiReader aggregating the named set of (sub)readers.\n  * Directory locking for delete, undeleteAll, and setNorm operations is\n  * left to the subreaders. </p>\n  * <p>Note that all subreaders are closed if this Multireader is closed.</p>\n  * @param subReaders set of (sub)readers\n  * @throws IOException\n  */\n  public MultiReader(IndexReader[] subReaders) throws IOException {\n    super(subReaders.length == 0 ? null : subReaders[0].directory(), \n          null, false, subReaders);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b9d7142a399ac70a71ce5b40ee66695eda5b7e8","date":1195335263,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#MultiReader(IndexReader[]).mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#MultiReader(IndexReader[]).mjava","sourceNew":" /**\n  * <p>Construct a MultiReader aggregating the named set of (sub)readers.\n  * Directory locking for delete, undeleteAll, and setNorm operations is\n  * left to the subreaders. </p>\n  * <p>Note that all subreaders are closed if this Multireader is closed.</p>\n  * @param subReaders set of (sub)readers\n  * @throws IOException\n  */\n  public MultiReader(IndexReader[] subReaders) {\n    initialize(subReaders, true);\n  }\n\n","sourceOld":" /**\n  * <p>Construct a MultiReader aggregating the named set of (sub)readers.\n  * Directory locking for delete, undeleteAll, and setNorm operations is\n  * left to the subreaders. </p>\n  * <p>Note that all subreaders are closed if this Multireader is closed.</p>\n  * @param subReaders set of (sub)readers\n  * @throws IOException\n  */\n  public MultiReader(IndexReader[] subReaders) {\n    initialize(subReaders);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7","date":1255555265,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiReader#MultiReader(IndexReader...).mjava","pathOld":"src/java/org/apache/lucene/index/MultiReader#MultiReader(IndexReader[]).mjava","sourceNew":" /**\n  * <p>Construct a MultiReader aggregating the named set of (sub)readers.\n  * Directory locking for delete, undeleteAll, and setNorm operations is\n  * left to the subreaders. </p>\n  * <p>Note that all subreaders are closed if this Multireader is closed.</p>\n  * @param subReaders set of (sub)readers\n  * @throws IOException\n  */\n  public MultiReader(IndexReader... subReaders) {\n    initialize(subReaders, true);\n  }\n\n","sourceOld":" /**\n  * <p>Construct a MultiReader aggregating the named set of (sub)readers.\n  * Directory locking for delete, undeleteAll, and setNorm operations is\n  * left to the subreaders. </p>\n  * <p>Note that all subreaders are closed if this Multireader is closed.</p>\n  * @param subReaders set of (sub)readers\n  * @throws IOException\n  */\n  public MultiReader(IndexReader[] subReaders) {\n    initialize(subReaders, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"125b5699f11b58d9be0820c6ce8b1648812902e8":["f7f2552b9f13037c62acd400d263d1e9262d6e4e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7f2552b9f13037c62acd400d263d1e9262d6e4e":["945cd25ab8d3f237e311b640b7e2fb2f3004fdb5"],"9ad07cf326135fbb108f766a0798c8ee00b17dcb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7":["3b9d7142a399ac70a71ce5b40ee66695eda5b7e8"],"945cd25ab8d3f237e311b640b7e2fb2f3004fdb5":["f653aecb322b74d99e6ecdb93765e453a3d7aa71"],"f653aecb322b74d99e6ecdb93765e453a3d7aa71":["9ad07cf326135fbb108f766a0798c8ee00b17dcb"],"3b9d7142a399ac70a71ce5b40ee66695eda5b7e8":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7"]},"commit2Childs":{"125b5699f11b58d9be0820c6ce8b1648812902e8":["3b9d7142a399ac70a71ce5b40ee66695eda5b7e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9ad07cf326135fbb108f766a0798c8ee00b17dcb"],"f7f2552b9f13037c62acd400d263d1e9262d6e4e":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"9ad07cf326135fbb108f766a0798c8ee00b17dcb":["f653aecb322b74d99e6ecdb93765e453a3d7aa71"],"945cd25ab8d3f237e311b640b7e2fb2f3004fdb5":["f7f2552b9f13037c62acd400d263d1e9262d6e4e"],"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f653aecb322b74d99e6ecdb93765e453a3d7aa71":["945cd25ab8d3f237e311b640b7e2fb2f3004fdb5"],"3b9d7142a399ac70a71ce5b40ee66695eda5b7e8":["560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}