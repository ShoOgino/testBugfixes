{"path":"solr/core/src/test/org/apache/solr/core/TestInitParams#testComponentWithParamSet().mjava","commits":[{"id":"bb537081ae8ce706dd40a122f57a9e7b8a112be8","date":1411065946,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestInitParams#testComponentWithParamSet().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestParamSet#testComponentWithParamSet().mjava","sourceNew":"  @Test\n  public void testComponentWithParamSet(){\n\n    for (String s : Arrays.asList(\"/dump1\", \"/dump3\",\"/root/dump5\" , \"/root1/anotherlevel/dump6\")) {\n      SolrRequestHandler handler = h.getCore().getRequestHandler(s);\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      handler.handleRequest(req(\"initArgs\", \"true\"), rsp);\n      NamedList nl = (NamedList) rsp.getValues().get(\"initArgs\");\n      NamedList def = (NamedList) nl.get(PluginInfo.DEFAULTS);\n      assertEquals(\"A\", def.get(\"a\"));\n      def = (NamedList) nl.get(PluginInfo.INVARIANTS);\n      assertEquals(\"B\", def.get(\"b\"));\n      def = (NamedList) nl.get(PluginInfo.APPENDS);\n      assertEquals(\"C\", def.get(\"c\"));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testComponentWithParamSet(){\n\n    for (String s : Arrays.asList(\"/dump1\", \"/dump3\",\"/root/dump5\" , \"/root1/anotherlevel/dump6\")) {\n      SolrRequestHandler handler = h.getCore().getRequestHandler(s);\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      handler.handleRequest(req(\"initArgs\", \"true\"), rsp);\n      NamedList nl = (NamedList) rsp.getValues().get(\"initArgs\");\n      NamedList def = (NamedList) nl.get(PluginInfo.DEFAULTS);\n      assertEquals(\"A\", def.get(\"a\"));\n      def = (NamedList) nl.get(PluginInfo.INVARIANTS);\n      assertEquals(\"B\", def.get(\"b\"));\n      def = (NamedList) nl.get(PluginInfo.APPENDS);\n      assertEquals(\"C\", def.get(\"c\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8f9fd570bc31c72df35ff9374f45131e8e74d0c","date":1415015820,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestInitParams#testComponentWithInitParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestInitParams#testComponentWithParamSet().mjava","sourceNew":"  @Test\n  public void testComponentWithInitParams(){\n\n    for (String s : Arrays.asList(\"/dump1\", \"/dump3\",\"/root/dump5\" , \"/root1/anotherlevel/dump6\")) {\n      SolrRequestHandler handler = h.getCore().getRequestHandler(s);\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      handler.handleRequest(req(\"initArgs\", \"true\"), rsp);\n      NamedList nl = (NamedList) rsp.getValues().get(\"initArgs\");\n      NamedList def = (NamedList) nl.get(PluginInfo.DEFAULTS);\n      assertEquals(\"A\", def.get(\"a\"));\n      def = (NamedList) nl.get(PluginInfo.INVARIANTS);\n      assertEquals(\"B\", def.get(\"b\"));\n      def = (NamedList) nl.get(PluginInfo.APPENDS);\n      assertEquals(\"C\", def.get(\"c\"));\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testComponentWithParamSet(){\n\n    for (String s : Arrays.asList(\"/dump1\", \"/dump3\",\"/root/dump5\" , \"/root1/anotherlevel/dump6\")) {\n      SolrRequestHandler handler = h.getCore().getRequestHandler(s);\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      handler.handleRequest(req(\"initArgs\", \"true\"), rsp);\n      NamedList nl = (NamedList) rsp.getValues().get(\"initArgs\");\n      NamedList def = (NamedList) nl.get(PluginInfo.DEFAULTS);\n      assertEquals(\"A\", def.get(\"a\"));\n      def = (NamedList) nl.get(PluginInfo.INVARIANTS);\n      assertEquals(\"B\", def.get(\"b\"));\n      def = (NamedList) nl.get(PluginInfo.APPENDS);\n      assertEquals(\"C\", def.get(\"c\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb537081ae8ce706dd40a122f57a9e7b8a112be8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c8f9fd570bc31c72df35ff9374f45131e8e74d0c":["bb537081ae8ce706dd40a122f57a9e7b8a112be8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c8f9fd570bc31c72df35ff9374f45131e8e74d0c"]},"commit2Childs":{"bb537081ae8ce706dd40a122f57a9e7b8a112be8":["c8f9fd570bc31c72df35ff9374f45131e8e74d0c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb537081ae8ce706dd40a122f57a9e7b8a112be8"],"c8f9fd570bc31c72df35ff9374f45131e8e74d0c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}