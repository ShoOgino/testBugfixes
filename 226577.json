{"path":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/Highlighter#getBestFragment(TokenStream,String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/Highlighter#getBestFragment(TokenStream,String).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/Highlighter#getBestFragment(TokenStream,String).mjava","sourceNew":"\t/**\n\t * Highlights chosen terms in a text, extracting the most relevant section.\n\t * The document text is analysed in chunks to record hit statistics\n\t * across the document. After accumulating stats, the fragment with the highest score\n\t * is returned\n\t *\n\t * @param tokenStream   a stream of tokens identified in the text parameter, including offset information.\n\t * This is typically produced by an analyzer re-parsing a document's\n\t * text. Some work may be done on retrieving TokenStreams more efficiently\n\t * by adding support for storing original text position data in the Lucene\n\t * index but this support is not currently available (as of Lucene 1.4 rc2).\n\t * @param text text to highlight terms in\n\t *\n\t * @return highlighted text fragment or null if no terms found\n\t * @throws InvalidTokenOffsetsException thrown if any token's endOffset exceeds the provided text's length\n\t */\n\tpublic final String getBestFragment(TokenStream tokenStream, String text)\n\t\tthrows IOException, InvalidTokenOffsetsException\n\t{\n\t\tString[] results = getBestFragments(tokenStream,text, 1);\n\t\tif (results.length > 0)\n\t\t{\n\t\t\treturn results[0];\n\t\t}\n\t\treturn null;\n\t}\n\n","sourceOld":"\t/**\n\t * Highlights chosen terms in a text, extracting the most relevant section.\n\t * The document text is analysed in chunks to record hit statistics\n\t * across the document. After accumulating stats, the fragment with the highest score\n\t * is returned\n\t *\n\t * @param tokenStream   a stream of tokens identified in the text parameter, including offset information.\n\t * This is typically produced by an analyzer re-parsing a document's\n\t * text. Some work may be done on retrieving TokenStreams more efficiently\n\t * by adding support for storing original text position data in the Lucene\n\t * index but this support is not currently available (as of Lucene 1.4 rc2).\n\t * @param text text to highlight terms in\n\t *\n\t * @return highlighted text fragment or null if no terms found\n\t * @throws InvalidTokenOffsetsException thrown if any token's endOffset exceeds the provided text's length\n\t */\n\tpublic final String getBestFragment(TokenStream tokenStream, String text)\n\t\tthrows IOException, InvalidTokenOffsetsException\n\t{\n\t\tString[] results = getBestFragments(tokenStream,text, 1);\n\t\tif (results.length > 0)\n\t\t{\n\t\t\treturn results[0];\n\t\t}\n\t\treturn null;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/Highlighter#getBestFragment(TokenStream,String).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/highlight/Highlighter#getBestFragment(TokenStream,String).mjava","sourceNew":"  /**\n   * Highlights chosen terms in a text, extracting the most relevant section.\n   * The document text is analysed in chunks to record hit statistics\n   * across the document. After accumulating stats, the fragment with the highest score\n   * is returned\n   *\n   * @param tokenStream   a stream of tokens identified in the text parameter, including offset information.\n   * This is typically produced by an analyzer re-parsing a document's\n   * text. Some work may be done on retrieving TokenStreams more efficiently\n   * by adding support for storing original text position data in the Lucene\n   * index but this support is not currently available (as of Lucene 1.4 rc2).\n   * @param text text to highlight terms in\n   *\n   * @return highlighted text fragment or null if no terms found\n   * @throws InvalidTokenOffsetsException thrown if any token's endOffset exceeds the provided text's length\n   */\n  public final String getBestFragment(TokenStream tokenStream, String text)\n    throws IOException, InvalidTokenOffsetsException\n  {\n    String[] results = getBestFragments(tokenStream,text, 1);\n    if (results.length > 0)\n    {\n      return results[0];\n    }\n    return null;\n  }\n\n","sourceOld":"\t/**\n\t * Highlights chosen terms in a text, extracting the most relevant section.\n\t * The document text is analysed in chunks to record hit statistics\n\t * across the document. After accumulating stats, the fragment with the highest score\n\t * is returned\n\t *\n\t * @param tokenStream   a stream of tokens identified in the text parameter, including offset information.\n\t * This is typically produced by an analyzer re-parsing a document's\n\t * text. Some work may be done on retrieving TokenStreams more efficiently\n\t * by adding support for storing original text position data in the Lucene\n\t * index but this support is not currently available (as of Lucene 1.4 rc2).\n\t * @param text text to highlight terms in\n\t *\n\t * @return highlighted text fragment or null if no terms found\n\t * @throws InvalidTokenOffsetsException thrown if any token's endOffset exceeds the provided text's length\n\t */\n\tpublic final String getBestFragment(TokenStream tokenStream, String text)\n\t\tthrows IOException, InvalidTokenOffsetsException\n\t{\n\t\tString[] results = getBestFragments(tokenStream,text, 1);\n\t\tif (results.length > 0)\n\t\t{\n\t\t\treturn results[0];\n\t\t}\n\t\treturn null;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}