{"path":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.IntersectTermsEnum#newFrame().mjava","commits":[{"id":"050ba1ba249733cac50c2612418b7179591d2df9","date":1374633633,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.IntersectTermsEnum#newFrame().mjava","pathOld":"/dev/null","sourceNew":"      Frame newFrame() throws IOException {\n        return new Frame();\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b955911cf637357102623569adc4d9332fc4650","date":1374653945,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.IntersectTermsEnum#newFrame().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.IntersectTermsEnum#newFrame().mjava","sourceNew":"      Frame newFrame() throws IOException {\n        if (level+1 == stack.length) {\n          final Frame[] next = new Frame[ArrayUtil.oversize(level+2, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];\n          System.arraycopy(stack, 0, next, 0, stack.length);\n          for (int i = stack.length; i < next.length; i++) {\n            next[i] = new Frame();\n          }\n          stack = next;\n        }\n        return stack[level+1];\n      }\n\n","sourceOld":"      Frame newFrame() throws IOException {\n        return new Frame();\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b0be9ff420e4c2fc29e99f1ee50cc5cdab0089a","date":1374682501,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.IntersectTermsEnum#newFrame().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.IntersectTermsEnum#newFrame().mjava","sourceNew":"      Frame newFrame() {\n        if (level+1 == stack.length) {\n          final Frame[] temp = new Frame[ArrayUtil.oversize(level+2, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];\n          System.arraycopy(stack, 0, temp, 0, stack.length);\n          for (int i = stack.length; i < temp.length; i++) {\n            temp[i] = new Frame();\n          }\n          stack = temp;\n        }\n        return stack[level+1];\n      }\n\n","sourceOld":"      Frame newFrame() throws IOException {\n        if (level+1 == stack.length) {\n          final Frame[] next = new Frame[ArrayUtil.oversize(level+2, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];\n          System.arraycopy(stack, 0, next, 0, stack.length);\n          for (int i = stack.length; i < next.length; i++) {\n            next[i] = new Frame();\n          }\n          stack = next;\n        }\n        return stack[level+1];\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":5,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.IntersectTermsEnum#newFrame().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTTermsReader.TermsReader.IntersectTermsEnum#newFrame().mjava","sourceNew":"      Frame newFrame() {\n        if (level+1 == stack.length) {\n          final Frame[] temp = new Frame[ArrayUtil.oversize(level+2, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];\n          System.arraycopy(stack, 0, temp, 0, stack.length);\n          for (int i = stack.length; i < temp.length; i++) {\n            temp[i] = new Frame();\n          }\n          stack = temp;\n        }\n        return stack[level+1];\n      }\n\n","sourceOld":"      Frame newFrame() {\n        if (level+1 == stack.length) {\n          final Frame[] temp = new Frame[ArrayUtil.oversize(level+2, RamUsageEstimator.NUM_BYTES_OBJECT_REF)];\n          System.arraycopy(stack, 0, temp, 0, stack.length);\n          for (int i = stack.length; i < temp.length; i++) {\n            temp[i] = new Frame();\n          }\n          stack = temp;\n        }\n        return stack[level+1];\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["5b0be9ff420e4c2fc29e99f1ee50cc5cdab0089a"],"5b0be9ff420e4c2fc29e99f1ee50cc5cdab0089a":["3b955911cf637357102623569adc4d9332fc4650"],"3b955911cf637357102623569adc4d9332fc4650":["050ba1ba249733cac50c2612418b7179591d2df9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"050ba1ba249733cac50c2612418b7179591d2df9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817","050ba1ba249733cac50c2612418b7179591d2df9"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"5b0be9ff420e4c2fc29e99f1ee50cc5cdab0089a":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"3b955911cf637357102623569adc4d9332fc4650":["5b0be9ff420e4c2fc29e99f1ee50cc5cdab0089a"],"050ba1ba249733cac50c2612418b7179591d2df9":["3b955911cf637357102623569adc4d9332fc4650"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}