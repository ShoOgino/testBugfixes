{"path":"solr/core/src/java/org/apache/solr/util/SimplePostTool#inputStreamToByteArray(InputStream,long).mjava","commits":[{"id":"a0d196318cb8ce39ae32035f290cd1397833e472","date":1418140712,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#inputStreamToByteArray(InputStream,long).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Reads an input stream into a byte array\n   *\n   * @param is the input stream\n   * @return the byte array\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static ByteBuffer inputStreamToByteArray(InputStream is, long maxSize) throws IOException {\n    BAOS bos =  new BAOS();\n    long sz = 0;\n    int next = is.read();\n    while (next > -1) {\n      if(++sz > maxSize) throw new BufferOverflowException();\n      bos.write(next);\n      next = is.read();\n    }\n    bos.flush();\n    is.close();\n    return bos.getByteBuffer();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f15af35d55d70c34451f9df5edeaeff6b31f8cbe","date":1519625627,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#inputStreamToByteArray(InputStream,long).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#inputStreamToByteArray(InputStream,long).mjava","sourceNew":"  /**\n   * Reads an input stream into a byte array\n   *\n   * @param is the input stream\n   * @return the byte array\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static ByteBuffer inputStreamToByteArray(InputStream is, long maxSize) throws IOException {\n    try (BAOS bos = new BAOS()) {\n      long sz = 0;\n      int next = is.read();\n      while (next > -1) {\n        if (++sz > maxSize) throw new BufferOverflowException();\n        bos.write(next);\n        next = is.read();\n      }\n      bos.flush();\n      return bos.getByteBuffer();\n    }\n  }\n\n","sourceOld":"  /**\n   * Reads an input stream into a byte array\n   *\n   * @param is the input stream\n   * @return the byte array\n   * @throws IOException If there is a low-level I/O error.\n   */\n  public static ByteBuffer inputStreamToByteArray(InputStream is, long maxSize) throws IOException {\n    BAOS bos =  new BAOS();\n    long sz = 0;\n    int next = is.read();\n    while (next > -1) {\n      if(++sz > maxSize) throw new BufferOverflowException();\n      bos.write(next);\n      next = is.read();\n    }\n    bos.flush();\n    is.close();\n    return bos.getByteBuffer();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d196318cb8ce39ae32035f290cd1397833e472":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f15af35d55d70c34451f9df5edeaeff6b31f8cbe":["a0d196318cb8ce39ae32035f290cd1397833e472"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f15af35d55d70c34451f9df5edeaeff6b31f8cbe"]},"commit2Childs":{"a0d196318cb8ce39ae32035f290cd1397833e472":["f15af35d55d70c34451f9df5edeaeff6b31f8cbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d196318cb8ce39ae32035f290cd1397833e472"],"f15af35d55d70c34451f9df5edeaeff6b31f8cbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}