{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/response/PivotField#write(PrintStream,int).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/PivotField#write(PrintStream,int).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/response/PivotField#write(PrintStream,int).mjava","sourceNew":"  public void write( PrintStream out, int indent )\n  {\n    for( int i=0; i<indent; i++ ) {\n      out.print( \"  \" );\n    }\n    out.println( _field + \"=\" + _value + \" (\"+_count+\")\" );\n    if( _pivot != null ) {\n      for( PivotField p : _pivot ) {\n        p.write( out, indent+1 );\n      }\n    }\n  }\n\n","sourceOld":"  public void write( PrintStream out, int indent )\n  {\n    for( int i=0; i<indent; i++ ) {\n      out.print( \"  \" );\n    }\n    out.println( _field + \"=\" + _value + \" (\"+_count+\")\" );\n    if( _pivot != null ) {\n      for( PivotField p : _pivot ) {\n        p.write( out, indent+1 );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/PivotField#write(PrintStream,int).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/response/PivotField#write(PrintStream,int).mjava","sourceNew":"  public void write( PrintStream out, int indent )\n  {\n    for( int i=0; i<indent; i++ ) {\n      out.print( \"  \" );\n    }\n    out.println( _field + \"=\" + _value + \" (\"+_count+\")\" );\n    if( _pivot != null ) {\n      for( PivotField p : _pivot ) {\n        p.write( out, indent+1 );\n      }\n    }\n  }\n\n","sourceOld":"  public void write( PrintStream out, int indent )\n  {\n    for( int i=0; i<indent; i++ ) {\n      out.print( \"  \" );\n    }\n    out.println( _field + \"=\" + _value + \" (\"+_count+\")\" );\n    if( _pivot != null ) {\n      for( PivotField p : _pivot ) {\n        p.write( out, indent+1 );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/PivotField#write(PrintStream,int).mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/response/PivotField#write(PrintStream,int).mjava","sourceNew":"  public void write( PrintStream out, int indent )\n  {\n    for( int i=0; i<indent; i++ ) {\n      out.print( \"  \" );\n    }\n    out.println( _field + \"=\" + _value + \" (\"+_count+\")\" );\n    if( _pivot != null ) {\n      for( PivotField p : _pivot ) {\n        p.write( out, indent+1 );\n      }\n    }\n  }\n\n","sourceOld":"  public void write( PrintStream out, int indent )\n  {\n    for( int i=0; i<indent; i++ ) {\n      out.print( \"  \" );\n    }\n    out.println( _field + \"=\" + _value + \" (\"+_count+\")\" );\n    if( _pivot != null ) {\n      for( PivotField p : _pivot ) {\n        p.write( out, indent+1 );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c18a95e9168a30be855f5d5e7d61a863186fdc5","date":1415142581,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/PivotField#write(PrintStream,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/response/PivotField#write(PrintStream,int).mjava","sourceNew":"  public void write( PrintStream out, int indent )\n  {\n    for( int i=0; i<indent; i++ ) {\n      out.print( \"  \" );\n    }\n    out.print( _field + \"=\" + _value + \" (\"+_count+\")\" );\n    if (null != _statsInfo) {\n      out.print( \"->stats:[\" ); \n      for( FieldStatsInfo fieldStatsInfo : _statsInfo.values() ) {\n        out.print(fieldStatsInfo.toString());\n        out.print(\",\");\n      }\n      out.print(\"]\");\n    }\n    out.println();\n    if( _pivot != null ) {\n      for( PivotField p : _pivot ) {\n        p.write( out, indent+1 );\n      }\n    }\n  }\n\n","sourceOld":"  public void write( PrintStream out, int indent )\n  {\n    for( int i=0; i<indent; i++ ) {\n      out.print( \"  \" );\n    }\n    out.println( _field + \"=\" + _value + \" (\"+_count+\")\" );\n    if( _pivot != null ) {\n      for( PivotField p : _pivot ) {\n        p.write( out, indent+1 );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22d0a81a05eba47d5e18976f17d88306b218cc22","date":1436341569,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/PivotField#write(PrintStream,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/response/PivotField#write(PrintStream,int).mjava","sourceNew":"  public void write( PrintStream out, int indent )\n  {\n    for( int i=0; i<indent; i++ ) {\n      out.print( \"  \" );\n    }\n    out.print( _field + \"=\" + _value + \" (\"+_count+\")\" );\n    if (null != _statsInfo) {\n      out.print( \"->stats:[\" ); \n      for( FieldStatsInfo fieldStatsInfo : _statsInfo.values() ) {\n        out.print(fieldStatsInfo.toString());\n        out.print(\",\");\n      }\n      out.print(\"]\");\n    }\n    out.println();\n    if(_querycounts != null) {\n      out.println(_querycounts.toString());\n    }\n    if(_ranges != null) {\n      out.println(_ranges.toString());\n    }\n    if( _pivot != null ) {\n      for( PivotField p : _pivot ) {\n        p.write( out, indent+1 );\n      }\n    }\n  }\n\n","sourceOld":"  public void write( PrintStream out, int indent )\n  {\n    for( int i=0; i<indent; i++ ) {\n      out.print( \"  \" );\n    }\n    out.print( _field + \"=\" + _value + \" (\"+_count+\")\" );\n    if (null != _statsInfo) {\n      out.print( \"->stats:[\" ); \n      for( FieldStatsInfo fieldStatsInfo : _statsInfo.values() ) {\n        out.print(fieldStatsInfo.toString());\n        out.print(\",\");\n      }\n      out.print(\"]\");\n    }\n    out.println();\n    if( _pivot != null ) {\n      for( PivotField p : _pivot ) {\n        p.write( out, indent+1 );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4c18a95e9168a30be855f5d5e7d61a863186fdc5":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22d0a81a05eba47d5e18976f17d88306b218cc22":["4c18a95e9168a30be855f5d5e7d61a863186fdc5"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["22d0a81a05eba47d5e18976f17d88306b218cc22"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"4c18a95e9168a30be855f5d5e7d61a863186fdc5":["22d0a81a05eba47d5e18976f17d88306b218cc22"],"c26f00b574427b55127e869b935845554afde1fa":["4c18a95e9168a30be855f5d5e7d61a863186fdc5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"22d0a81a05eba47d5e18976f17d88306b218cc22":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}