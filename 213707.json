{"path":"lucene/core/src/java/org/apache/lucene/store/ByteBuffersDataOutput#copyTo(DataOutput).mjava","commits":[{"id":"fad01f81cc24b33263ccec7dbff3fb907702f91e","date":1535461373,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBuffersDataOutput#copyTo(DataOutput).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Copy the current content of this object into another {@link DataOutput}.\n   */\n  public void copyTo(DataOutput output) throws IOException {\n    for (ByteBuffer bb : toBufferList()) {\n      if (bb.hasArray()) {\n        output.writeBytes(bb.array(), bb.arrayOffset() + bb.position(), bb.remaining());\n      } else {\n        output.copyBytes(new ByteBuffersDataInput(Arrays.asList(bb)), bb.remaining());\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f60c8050b8b329ec119916158a9166e31fc51d8","date":1574764871,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBuffersDataOutput#copyTo(DataOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ByteBuffersDataOutput#copyTo(DataOutput).mjava","sourceNew":"  /**\n   * Copy the current content of this object into another {@link DataOutput}.\n   */\n  public void copyTo(DataOutput output) throws IOException {\n    for (ByteBuffer bb : blocks) {\n      if (bb.hasArray()) {\n        output.writeBytes(bb.array(), bb.arrayOffset(), bb.position());\n      } else {\n        bb = bb.asReadOnlyBuffer().flip();\n        output.copyBytes(new ByteBuffersDataInput(Collections.singletonList(bb)), bb.remaining());\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Copy the current content of this object into another {@link DataOutput}.\n   */\n  public void copyTo(DataOutput output) throws IOException {\n    for (ByteBuffer bb : toBufferList()) {\n      if (bb.hasArray()) {\n        output.writeBytes(bb.array(), bb.arrayOffset() + bb.position(), bb.remaining());\n      } else {\n        output.copyBytes(new ByteBuffersDataInput(Arrays.asList(bb)), bb.remaining());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fad01f81cc24b33263ccec7dbff3fb907702f91e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f60c8050b8b329ec119916158a9166e31fc51d8":["fad01f81cc24b33263ccec7dbff3fb907702f91e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f60c8050b8b329ec119916158a9166e31fc51d8"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fad01f81cc24b33263ccec7dbff3fb907702f91e"],"fad01f81cc24b33263ccec7dbff3fb907702f91e":["0f60c8050b8b329ec119916158a9166e31fc51d8"],"0f60c8050b8b329ec119916158a9166e31fc51d8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}