{"path":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","commits":[{"id":"05ff0cc6e864c7d71a48579f2acfca4f58943568","date":1242295762,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * 根据输入的Unicode字符，获取它的GB2312编码或者ascii编码，\n   * \n   * @param ch 输入的GB2312中文字符或者ASCII字符(128个)\n   * @return ch在GB2312中的位置，-1表示该字符不认识\n   */\n  public short getGB2312Id(char ch) {\n    try {\n      byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");\n      if (buffer.length != 2) {\n        // 正常情况下buffer应该是两个字节，否则说明ch不属于GB2312编码，故返回'?'，此时说明不认识该字符\n        return -1;\n      }\n      int b0 = (int) (buffer[0] & 0x0FF) - 161; // 编码从A1开始，因此减去0xA1=161\n      int b1 = (int) (buffer[1] & 0x0FF) - 161; // 第一个字符和最后一个字符没有汉字，因此每个区只收16*6-2=94个汉字\n      return (short) (b0 * 94 + b1);\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    }\n    return -1;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["2f6156e2f0d1d529001873677c1cc6a22d6b9f9a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"be5ef2f970a6c1141562b06dd26ed04c3dc29d70","date":1246444343,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","sourceNew":"  /**\n   * Transcode from Unicode to GB2312\n   * \n   * @param ch input character in Unicode, or character in Basic Latin range.\n   * @return position in GB2312\n   */\n  public short getGB2312Id(char ch) {\n    try {\n      byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");\n      if (buffer.length != 2) {\n        // Should be a two-byte character\n        return -1;\n      }\n      int b0 = (int) (buffer[0] & 0x0FF) - 161; // 编码从A1开始，因此减去0xA1=161\n      int b1 = (int) (buffer[1] & 0x0FF) - 161; // 第一个字符和最后一个字符没有汉字，因此每个区只收16*6-2=94个汉字\n      return (short) (b0 * 94 + b1);\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    }\n    return -1;\n  }\n\n","sourceOld":"  /**\n   * 根据输入的Unicode字符，获取它的GB2312编码或者ascii编码，\n   * \n   * @param ch 输入的GB2312中文字符或者ASCII字符(128个)\n   * @return ch在GB2312中的位置，-1表示该字符不认识\n   */\n  public short getGB2312Id(char ch) {\n    try {\n      byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");\n      if (buffer.length != 2) {\n        // 正常情况下buffer应该是两个字节，否则说明ch不属于GB2312编码，故返回'?'，此时说明不认识该字符\n        return -1;\n      }\n      int b0 = (int) (buffer[0] & 0x0FF) - 161; // 编码从A1开始，因此减去0xA1=161\n      int b1 = (int) (buffer[1] & 0x0FF) - 161; // 第一个字符和最后一个字符没有汉字，因此每个区只收16*6-2=94个汉字\n      return (short) (b0 * 94 + b1);\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    }\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/smartcn/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/cn/smart/hhmm/AbstractDictionary#getGB2312Id(char).mjava","sourceNew":"  /**\n   * Transcode from Unicode to GB2312\n   * \n   * @param ch input character in Unicode, or character in Basic Latin range.\n   * @return position in GB2312\n   */\n  public short getGB2312Id(char ch) {\n    try {\n      byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");\n      if (buffer.length != 2) {\n        // Should be a two-byte character\n        return -1;\n      }\n      int b0 = (int) (buffer[0] & 0x0FF) - 161; // 编码从A1开始，因此减去0xA1=161\n      int b1 = (int) (buffer[1] & 0x0FF) - 161; // 第一个字符和最后一个字符没有汉字，因此每个区只收16*6-2=94个汉字\n      return (short) (b0 * 94 + b1);\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    }\n    return -1;\n  }\n\n","sourceOld":"  /**\n   * Transcode from Unicode to GB2312\n   * \n   * @param ch input character in Unicode, or character in Basic Latin range.\n   * @return position in GB2312\n   */\n  public short getGB2312Id(char ch) {\n    try {\n      byte[] buffer = Character.toString(ch).getBytes(\"GB2312\");\n      if (buffer.length != 2) {\n        // Should be a two-byte character\n        return -1;\n      }\n      int b0 = (int) (buffer[0] & 0x0FF) - 161; // 编码从A1开始，因此减去0xA1=161\n      int b1 = (int) (buffer[1] & 0x0FF) - 161; // 第一个字符和最后一个字符没有汉字，因此每个区只收16*6-2=94个汉字\n      return (short) (b0 * 94 + b1);\n    } catch (UnsupportedEncodingException e) {\n      e.printStackTrace();\n    }\n    return -1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"be5ef2f970a6c1141562b06dd26ed04c3dc29d70":["05ff0cc6e864c7d71a48579f2acfca4f58943568"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["be5ef2f970a6c1141562b06dd26ed04c3dc29d70"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05ff0cc6e864c7d71a48579f2acfca4f58943568":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"]},"commit2Childs":{"be5ef2f970a6c1141562b06dd26ed04c3dc29d70":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05ff0cc6e864c7d71a48579f2acfca4f58943568"],"05ff0cc6e864c7d71a48579f2acfca4f58943568":["be5ef2f970a6c1141562b06dd26ed04c3dc29d70"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}