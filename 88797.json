{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV[FacetField]#collect(int,int,LongValues).mjava","commits":[{"id":"694c4ae1a6fef9d2740471ec0f3a8db6367817c8","date":1428290189,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV[FacetField]#collect(int,int,LongValues).mjava","pathOld":"/dev/null","sourceNew":"  private void collect(int doc, int segOrd, LongValues toGlobal) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      countAcc.incrementCount(arrIdx, 1);\n      collect(doc, arrIdx);  // per-seg collectors\n      if (allBucketsSlot >= 0 && ord >= 0) {\n        countAcc.incrementCount(allBucketsSlot, 1);\n        collect(doc, allBucketsSlot);  // per-seg collectors\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e13d0d4d8b6dc352cb304974502b9a36c153f78","date":1436492687,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV[FacetField]#collect(int,int,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV[FacetField]#collect(int,int,LongValues).mjava","sourceNew":"  private void collect(int doc, int segOrd, LongValues toGlobal) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      countAcc.incrementCount(arrIdx, 1);\n      if (collectAcc != null) {\n        collectAcc.collect(doc, arrIdx);\n      }\n      // since this can be called for missing, we need to ensure it's currently not.\n      if (allBucketsAcc != null && ord >= 0) {\n        allBucketsAcc.collect(doc, arrIdx);\n      }\n    }\n  }\n\n","sourceOld":"  private void collect(int doc, int segOrd, LongValues toGlobal) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      countAcc.incrementCount(arrIdx, 1);\n      collect(doc, arrIdx);  // per-seg collectors\n      if (allBucketsSlot >= 0 && ord >= 0) {\n        countAcc.incrementCount(allBucketsSlot, 1);\n        collect(doc, allBucketsSlot);  // per-seg collectors\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"168f749bbf9022a1ba5fea29c54baa1c00883d1d","date":1437587676,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV[FacetField]#collect(int,int,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV[FacetField]#collect(int,int,LongValues).mjava","sourceNew":"  private void collect(int doc, int segOrd, LongValues toGlobal) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      countAcc.incrementCount(arrIdx, 1);\n      if (collectAcc != null) {\n        collectAcc.collect(doc, arrIdx);\n      }\n      if (allBucketsAcc != null) {\n        allBucketsAcc.collect(doc, arrIdx);\n      }\n    }\n  }\n\n","sourceOld":"  private void collect(int doc, int segOrd, LongValues toGlobal) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      countAcc.incrementCount(arrIdx, 1);\n      if (collectAcc != null) {\n        collectAcc.collect(doc, arrIdx);\n      }\n      // since this can be called for missing, we need to ensure it's currently not.\n      if (allBucketsAcc != null && ord >= 0) {\n        allBucketsAcc.collect(doc, arrIdx);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51b068b0154fe2220646b2dcc2133e168a31c743","date":1446661675,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV#collect(int,int,LongValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorDV[FacetField]#collect(int,int,LongValues).mjava","sourceNew":"  private void collect(int doc, int segOrd, LongValues toGlobal) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      countAcc.incrementCount(arrIdx, 1);\n      if (collectAcc != null) {\n        collectAcc.collect(doc, arrIdx);\n      }\n      if (allBucketsAcc != null) {\n        allBucketsAcc.collect(doc, arrIdx);\n      }\n    }\n  }\n\n","sourceOld":"  private void collect(int doc, int segOrd, LongValues toGlobal) throws IOException {\n    int ord = (toGlobal != null && segOrd >= 0) ? (int)toGlobal.get(segOrd) : segOrd;\n\n    int arrIdx = ord - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      countAcc.incrementCount(arrIdx, 1);\n      if (collectAcc != null) {\n        collectAcc.collect(doc, arrIdx);\n      }\n      if (allBucketsAcc != null) {\n        allBucketsAcc.collect(doc, arrIdx);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"51b068b0154fe2220646b2dcc2133e168a31c743":["168f749bbf9022a1ba5fea29c54baa1c00883d1d"],"9e13d0d4d8b6dc352cb304974502b9a36c153f78":["694c4ae1a6fef9d2740471ec0f3a8db6367817c8"],"694c4ae1a6fef9d2740471ec0f3a8db6367817c8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"168f749bbf9022a1ba5fea29c54baa1c00883d1d":["9e13d0d4d8b6dc352cb304974502b9a36c153f78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["51b068b0154fe2220646b2dcc2133e168a31c743"]},"commit2Childs":{"51b068b0154fe2220646b2dcc2133e168a31c743":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9e13d0d4d8b6dc352cb304974502b9a36c153f78":["168f749bbf9022a1ba5fea29c54baa1c00883d1d"],"694c4ae1a6fef9d2740471ec0f3a8db6367817c8":["9e13d0d4d8b6dc352cb304974502b9a36c153f78"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["694c4ae1a6fef9d2740471ec0f3a8db6367817c8"],"168f749bbf9022a1ba5fea29c54baa1c00883d1d":["51b068b0154fe2220646b2dcc2133e168a31c743"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}