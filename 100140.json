{"path":"client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTestBase#testAddRetrieve().mjava","commits":[{"id":"87b35b4a5f61517716607e0ae9fe449bdbbf6bb6","date":1183656998,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTestBase#testAddRetrieve().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * query the example\n   */\n  public void testAddRetrieve() throws Exception\n  {    \n    String path = \"/update\";\n    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"doc2\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    UpdateRequest up = new UpdateRequest();\n    up.setPath( path );\n    up.add( docs );\n    server.request( up );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    Assert.assertEquals( path, 2, rsp.getResults().getNumFound() );\n    System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    up = new UpdateRequest();\n    up.setPath( path );\n    up.add( docs );\n    server.request( up );\n    server.commit();\n    \n    rsp = server.query( query );\n    Assert.assertEquals( path, 2, rsp.getResults().getNumFound() );\n    System.out.println( rsp.getResults() );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f0234821f0874a57cda0a32ef52180de16fd0da4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"abea0c3441959408379877b217ef9a7a9182e48b","date":1183657399,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTestBase#testAddRetrieve().mjava","pathOld":"client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTestBase#testAddRetrieve().mjava","sourceNew":"  /**\n   * query the example\n   */\n  public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"doc2\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    Assert.assertEquals( 2, rsp.getResults().getNumFound() );\n    System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    Assert.assertEquals( 2, rsp.getResults().getNumFound() );\n    System.out.println( rsp.getResults() );\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n  public void testAddRetrieve() throws Exception\n  {    \n    String path = \"/update\";\n    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"doc2\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    UpdateRequest up = new UpdateRequest();\n    up.setPath( path );\n    up.add( docs );\n    server.request( up );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    Assert.assertEquals( path, 2, rsp.getResults().getNumFound() );\n    System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    up = new UpdateRequest();\n    up.setPath( path );\n    up.add( docs );\n    server.request( up );\n    server.commit();\n    \n    rsp = server.query( query );\n    Assert.assertEquals( path, 2, rsp.getResults().getNumFound() );\n    System.out.println( rsp.getResults() );\n  }\n\n","bugFix":null,"bugIntro":["f0234821f0874a57cda0a32ef52180de16fd0da4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b0f4e27ea5f3ae20d9c37b7f233610c286c5739f","date":1190223065,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTests#testAddRetrieve().mjava","pathOld":"client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTestBase#testAddRetrieve().mjava","sourceNew":"  /**\n   * query the example\n   */\n  public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"doc2\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    Assert.assertEquals( 2, rsp.getResults().getNumFound() );\n    System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    Assert.assertEquals( 2, rsp.getResults().getNumFound() );\n    System.out.println( rsp.getResults() );\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n  public void testAddRetrieve() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    // Now add something...\n    SolrInputDocument doc1 = new SolrInputDocument();\n    doc1.addField( \"id\", \"id1\", 1.0f );\n    doc1.addField( \"name\", \"doc1\", 1.0f );\n    doc1.addField( \"price\", 10 );\n\n    SolrInputDocument doc2 = new SolrInputDocument();\n    doc2.addField( \"id\", \"id2\", 1.0f );\n    doc2.addField( \"name\", \"doc2\", 1.0f );\n    doc2.addField( \"price\", 20 );\n    \n    Collection<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n    docs.add( doc1 );\n    docs.add( doc2 );\n    \n    // Add the documents\n    server.add( docs );\n    server.commit();\n    \n    SolrQuery query = new SolrQuery();\n    query.setQuery( \"*:*\" );\n    query.addSortField( \"price\", SolrQuery.ORDER.asc );\n    QueryResponse rsp = server.query( query );\n    \n    Assert.assertEquals( 2, rsp.getResults().getNumFound() );\n    System.out.println( rsp.getResults() );\n    \n    // Now do it again\n    server.add( docs );\n    server.commit();\n    \n    rsp = server.query( query );\n    Assert.assertEquals( 2, rsp.getResults().getNumFound() );\n    System.out.println( rsp.getResults() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"b0f4e27ea5f3ae20d9c37b7f233610c286c5739f":["abea0c3441959408379877b217ef9a7a9182e48b"],"87b35b4a5f61517716607e0ae9fe449bdbbf6bb6":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"abea0c3441959408379877b217ef9a7a9182e48b":["87b35b4a5f61517716607e0ae9fe449bdbbf6bb6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["87b35b4a5f61517716607e0ae9fe449bdbbf6bb6"],"b0f4e27ea5f3ae20d9c37b7f233610c286c5739f":[],"87b35b4a5f61517716607e0ae9fe449bdbbf6bb6":["abea0c3441959408379877b217ef9a7a9182e48b"],"abea0c3441959408379877b217ef9a7a9182e48b":["b0f4e27ea5f3ae20d9c37b7f233610c286c5739f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b0f4e27ea5f3ae20d9c37b7f233610c286c5739f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}