{"path":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRelativeIndexDirLocation().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRelativeIndexDirLocation().mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  public void testRelativeIndexDirLocation() throws Exception {\n    SolrCore core = h.getCore();\n    Map<String, String> args = new HashMap<String, String>();\n\n    args.put(CommonParams.Q, \"test\");\n    args.put(CommonParams.QT, \"spellCheckCompRH\");\n    args.put(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    args.put(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(\n        args));\n\n    File indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker1\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker2\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker3\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRelativeIndexDirLocation().mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings(\"unchecked\")\n  public void testRelativeIndexDirLocation() throws Exception {\n    SolrCore core = h.getCore();\n    Map<String, String> args = new HashMap<String, String>();\n\n    args.put(CommonParams.Q, \"test\");\n    args.put(CommonParams.QT, \"spellCheckCompRH\");\n    args.put(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    args.put(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(\n        args));\n\n    File indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker1\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker2\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker3\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRelativeIndexDirLocation().mjava","pathOld":"src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRelativeIndexDirLocation().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  public void testRelativeIndexDirLocation() throws Exception {\n    SolrCore core = h.getCore();\n    Map<String, String> args = new HashMap<String, String>();\n\n    args.put(CommonParams.Q, \"test\");\n    args.put(CommonParams.QT, \"spellCheckCompRH\");\n    args.put(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    args.put(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(\n        args));\n\n    File indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker1\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker2\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker3\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  public void testRelativeIndexDirLocation() throws Exception {\n    SolrCore core = h.getCore();\n    Map<String, String> args = new HashMap<String, String>();\n\n    args.put(CommonParams.Q, \"test\");\n    args.put(CommonParams.QT, \"spellCheckCompRH\");\n    args.put(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    args.put(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(\n        args));\n\n    File indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker1\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker2\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker3\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRelativeIndexDirLocation().mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  public void testRelativeIndexDirLocation() throws Exception {\n    SolrCore core = h.getCore();\n    Map<String, String> args = new HashMap<String, String>();\n\n    args.put(CommonParams.Q, \"test\");\n    args.put(CommonParams.QT, \"spellCheckCompRH\");\n    args.put(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    args.put(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(\n        args));\n\n    File indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker1\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker2\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker3\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d94d4f1c6cd11a42dfb22d21e36fa6b582ee09c3","date":1269092670,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRelativeIndexDirLocation().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRelativeIndexDirLocation().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testRelativeIndexDirLocation() throws Exception {\n    SolrCore core = h.getCore();\n    Map<String, String> args = new HashMap<String, String>();\n\n    args.put(CommonParams.Q, \"test\");\n    args.put(CommonParams.QT, \"spellCheckCompRH\");\n    args.put(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    args.put(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(\n        args));\n\n    File indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker1\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker2\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker3\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  public void testRelativeIndexDirLocation() throws Exception {\n    SolrCore core = h.getCore();\n    Map<String, String> args = new HashMap<String, String>();\n\n    args.put(CommonParams.Q, \"test\");\n    args.put(CommonParams.QT, \"spellCheckCompRH\");\n    args.put(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    args.put(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(\n        args));\n\n    File indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker1\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker2\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker3\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f176b352a988eb72e2af3a739c6de8bf24808ce","date":1287101027,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRelativeIndexDirLocation().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRelativeIndexDirLocation().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testRelativeIndexDirLocation() throws Exception {\n    SolrCore core = h.getCore();\n    File indexDir = new File(core.getDataDir() + File.separator + \"spellchecker1\");\n    assertTrue(indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator + \"spellchecker2\");\n    assertTrue(indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator + \"spellchecker3\");\n    assertTrue(indexDir.exists());\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testRelativeIndexDirLocation() throws Exception {\n    SolrCore core = h.getCore();\n    Map<String, String> args = new HashMap<String, String>();\n\n    args.put(CommonParams.Q, \"test\");\n    args.put(CommonParams.QT, \"spellCheckCompRH\");\n    args.put(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    args.put(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(\n        args));\n\n    File indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker1\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker2\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker3\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRelativeIndexDirLocation().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRelativeIndexDirLocation().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testRelativeIndexDirLocation() throws Exception {\n    SolrCore core = h.getCore();\n    File indexDir = new File(core.getDataDir() + File.separator + \"spellchecker1\");\n    assertTrue(indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator + \"spellchecker2\");\n    assertTrue(indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator + \"spellchecker3\");\n    assertTrue(indexDir.exists());\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testRelativeIndexDirLocation() throws Exception {\n    SolrCore core = h.getCore();\n    Map<String, String> args = new HashMap<String, String>();\n\n    args.put(CommonParams.Q, \"test\");\n    args.put(CommonParams.QT, \"spellCheckCompRH\");\n    args.put(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    args.put(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(\n        args));\n\n    File indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker1\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker2\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker3\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRelativeIndexDirLocation().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRelativeIndexDirLocation().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testRelativeIndexDirLocation() throws Exception {\n    SolrCore core = h.getCore();\n    File indexDir = new File(core.getDataDir() + File.separator + \"spellchecker1\");\n    assertTrue(indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator + \"spellchecker2\");\n    assertTrue(indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator + \"spellchecker3\");\n    assertTrue(indexDir.exists());\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testRelativeIndexDirLocation() throws Exception {\n    SolrCore core = h.getCore();\n    Map<String, String> args = new HashMap<String, String>();\n\n    args.put(CommonParams.Q, \"test\");\n    args.put(CommonParams.QT, \"spellCheckCompRH\");\n    args.put(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n    args.put(SpellCheckComponent.COMPONENT_NAME, \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(\n        args));\n\n    File indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker1\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker2\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator\n        + \"spellchecker3\");\n    assertTrue(\n        \"spellcheckerIndexDir was not created inside the configured value for dataDir folder as configured in solrconfig.xml\",\n        indexDir.exists());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRelativeIndexDirLocation().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRelativeIndexDirLocation().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testRelativeIndexDirLocation() throws Exception {\n    SolrCore core = h.getCore();\n    File indexDir = new File(core.getDataDir() + File.separator + \"spellchecker1\");\n    assertTrue(indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator + \"spellchecker2\");\n    assertTrue(indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator + \"spellchecker3\");\n    assertTrue(indexDir.exists());\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testRelativeIndexDirLocation() throws Exception {\n    SolrCore core = h.getCore();\n    File indexDir = new File(core.getDataDir() + File.separator + \"spellchecker1\");\n    assertTrue(indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator + \"spellchecker2\");\n    assertTrue(indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator + \"spellchecker3\");\n    assertTrue(indexDir.exists());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRelativeIndexDirLocation().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRelativeIndexDirLocation().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testRelativeIndexDirLocation() throws Exception {\n    SolrCore core = h.getCore();\n    File indexDir = new File(core.getDataDir() + File.separator + \"spellchecker1\");\n    assertTrue(indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator + \"spellchecker2\");\n    assertTrue(indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator + \"spellchecker3\");\n    assertTrue(indexDir.exists());\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testRelativeIndexDirLocation() throws Exception {\n    SolrCore core = h.getCore();\n    File indexDir = new File(core.getDataDir() + File.separator + \"spellchecker1\");\n    assertTrue(indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator + \"spellchecker2\");\n    assertTrue(indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator + \"spellchecker3\");\n    assertTrue(indexDir.exists());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRelativeIndexDirLocation().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRelativeIndexDirLocation().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testRelativeIndexDirLocation() throws Exception {\n    SolrCore core = h.getCore();\n    File indexDir = new File(core.getDataDir() + File.separator + \"spellchecker1\");\n    assertTrue(indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator + \"spellchecker2\");\n    assertTrue(indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator + \"spellchecker3\");\n    assertTrue(indexDir.exists());\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void testRelativeIndexDirLocation() throws Exception {\n    SolrCore core = h.getCore();\n    File indexDir = new File(core.getDataDir() + File.separator + \"spellchecker1\");\n    assertTrue(indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator + \"spellchecker2\");\n    assertTrue(indexDir.exists());\n    \n    indexDir = new File(core.getDataDir() + File.separator + \"spellchecker3\");\n    assertTrue(indexDir.exists());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["4f176b352a988eb72e2af3a739c6de8bf24808ce","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d94d4f1c6cd11a42dfb22d21e36fa6b582ee09c3","4f176b352a988eb72e2af3a739c6de8bf24808ce"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"4f176b352a988eb72e2af3a739c6de8bf24808ce":["d94d4f1c6cd11a42dfb22d21e36fa6b582ee09c3"],"d94d4f1c6cd11a42dfb22d21e36fa6b582ee09c3":["1da8d55113b689b06716246649de6f62430f15c0"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["4f176b352a988eb72e2af3a739c6de8bf24808ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["4f176b352a988eb72e2af3a739c6de8bf24808ce"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["d94d4f1c6cd11a42dfb22d21e36fa6b582ee09c3","4f176b352a988eb72e2af3a739c6de8bf24808ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"1da8d55113b689b06716246649de6f62430f15c0":["d94d4f1c6cd11a42dfb22d21e36fa6b582ee09c3"],"4f176b352a988eb72e2af3a739c6de8bf24808ce":["c26f00b574427b55127e869b935845554afde1fa","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"d94d4f1c6cd11a42dfb22d21e36fa6b582ee09c3":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4f176b352a988eb72e2af3a739c6de8bf24808ce","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a258fbb26824fd104ed795e5d9033d2d040049ee","4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}