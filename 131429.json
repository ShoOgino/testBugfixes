{"path":"lucene/src/java/org/apache/lucene/index/SegmentReader#loadTermsIndex(int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#loadTermsIndex(int).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#loadTermsIndex(int).mjava","sourceNew":"  // NOTE: only called from IndexWriter when a near\n  // real-time reader is opened, or applyDeletes is run,\n  // sharing a segment that's still being merged.  This\n  // method is not thread safe, and relies on the\n  // synchronization in IndexWriter\n  void loadTermsIndex(int termsIndexDivisor) throws IOException {\n    core.loadTermsIndex(si, termsIndexDivisor);\n  }\n\n","sourceOld":"  // NOTE: only called from IndexWriter when a near\n  // real-time reader is opened, or applyDeletes is run,\n  // sharing a segment that's still being merged.  This\n  // method is not thread safe, and relies on the\n  // synchronization in IndexWriter\n  void loadTermsIndex(int termsIndexDivisor) throws IOException {\n    core.loadTermsIndex(si, termsIndexDivisor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#loadTermsIndex(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#loadTermsIndex(int).mjava","sourceNew":"  // NOTE: only called from IndexWriter when a near\n  // real-time reader is opened, or applyDeletes is run,\n  // sharing a segment that's still being merged.  This\n  // method is not thread safe, and relies on the\n  // synchronization in IndexWriter\n  void loadTermsIndex(int indexDivisor) throws IOException {\n    core.fields.loadTermsIndex(indexDivisor);\n  }\n\n","sourceOld":"  // NOTE: only called from IndexWriter when a near\n  // real-time reader is opened, or applyDeletes is run,\n  // sharing a segment that's still being merged.  This\n  // method is not thread safe, and relies on the\n  // synchronization in IndexWriter\n  void loadTermsIndex(int termsIndexDivisor) throws IOException {\n    core.loadTermsIndex(si, termsIndexDivisor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0061262413ecc163d6eebba1b5c43ab91a0c2dc5","date":1311195279,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#loadTermsIndex(int).mjava","sourceNew":null,"sourceOld":"  // NOTE: only called from IndexWriter when a near\n  // real-time reader is opened, or applyDeletes is run,\n  // sharing a segment that's still being merged.  This\n  // method is not thread safe, and relies on the\n  // synchronization in IndexWriter\n  void loadTermsIndex(int indexDivisor) throws IOException {\n    core.fields.loadTermsIndex(indexDivisor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0061262413ecc163d6eebba1b5c43ab91a0c2dc5":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0061262413ecc163d6eebba1b5c43ab91a0c2dc5"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0061262413ecc163d6eebba1b5c43ab91a0c2dc5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["0061262413ecc163d6eebba1b5c43ab91a0c2dc5"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}