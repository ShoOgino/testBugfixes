{"path":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#handleStats(String,String,String,List[Pair[String,String]]).mjava","commits":[{"id":"36b1ce25b5b465615c00f409ce694664abbe7bd2","date":1481836328,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#handleStats(String,String,String,List[Pair[String,String]]).mjava","pathOld":"/dev/null","sourceNew":"  private TupleStream handleStats(String zk,\n                                  String collection,\n                                  String query,\n                                  List<Pair<String, String>> metricPairs) {\n\n\n    ModifiableSolrParams solrParams = new ModifiableSolrParams();\n    solrParams.add(CommonParams.Q, query);\n    Metric[] metrics = buildMetrics(metricPairs).toArray(new Metric[0]);\n    return new StatsStream(zk, collection, solrParams, metrics);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f20deebda1cf327549c84cb60464135abd31c71","date":1487004368,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#handleStats(String,String,String,List[Pair[String,String]]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#handleStats(String,String,String,List[Pair[String,String]]).mjava","sourceNew":"  private TupleStream handleStats(String zk,\n                                  String collection,\n                                  String query,\n                                  List<Pair<String, String>> metricPairs) {\n\n\n    ModifiableSolrParams solrParams = new ModifiableSolrParams();\n    solrParams.add(CommonParams.Q, query);\n    Metric[] metrics = buildMetrics(metricPairs, false).toArray(new Metric[0]);\n    return new StatsStream(zk, collection, solrParams, metrics);\n  }\n\n","sourceOld":"  private TupleStream handleStats(String zk,\n                                  String collection,\n                                  String query,\n                                  List<Pair<String, String>> metricPairs) {\n\n\n    ModifiableSolrParams solrParams = new ModifiableSolrParams();\n    solrParams.add(CommonParams.Q, query);\n    Metric[] metrics = buildMetrics(metricPairs).toArray(new Metric[0]);\n    return new StatsStream(zk, collection, solrParams, metrics);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"116fdd6b9e04e18a6547a5650bc0afd3fda020aa","date":1487184909,"type":0,"author":"Joel Bernstein","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#handleStats(String,String,String,List[Pair[String,String]]).mjava","pathOld":"/dev/null","sourceNew":"  private TupleStream handleStats(String zk,\n                                  String collection,\n                                  String query,\n                                  List<Pair<String, String>> metricPairs) {\n\n\n    ModifiableSolrParams solrParams = new ModifiableSolrParams();\n    solrParams.add(CommonParams.Q, query);\n    Metric[] metrics = buildMetrics(metricPairs, false).toArray(new Metric[0]);\n    return new StatsStream(zk, collection, solrParams, metrics);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9fe3175bbaa122d67f736a75c2984617c502cc0","date":1490722938,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#handleStats(String,String,String,List[Pair[String,String]],List[Map.Entry[String,Class]]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#handleStats(String,String,String,List[Pair[String,String]]).mjava","sourceNew":"  private TupleStream handleStats(String zk,\n                                  String collection,\n                                  String query,\n                                  List<Pair<String, String>> metricPairs,\n                                  List<Map.Entry<String, Class>> fields) {\n\n\n    Map<String, Class> fmap = new HashMap();\n    for(Map.Entry<String, Class> entry : fields) {\n      fmap.put(entry.getKey(), entry.getValue());\n    }\n\n    ModifiableSolrParams solrParams = new ModifiableSolrParams();\n    solrParams.add(CommonParams.Q, query);\n    Metric[] metrics = buildMetrics(metricPairs, false).toArray(new Metric[0]);\n\n    for(Metric metric : metrics) {\n      Class c = fmap.get(metric.getIdentifier());\n      if(Long.class.equals(c)) {\n        metric.outputLong = true;\n      }\n    }\n\n    return new StatsStream(zk, collection, solrParams, metrics);\n  }\n\n","sourceOld":"  private TupleStream handleStats(String zk,\n                                  String collection,\n                                  String query,\n                                  List<Pair<String, String>> metricPairs) {\n\n\n    ModifiableSolrParams solrParams = new ModifiableSolrParams();\n    solrParams.add(CommonParams.Q, query);\n    Metric[] metrics = buildMetrics(metricPairs, false).toArray(new Metric[0]);\n    return new StatsStream(zk, collection, solrParams, metrics);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9b741b54c163686a5fd077895a797daa9b0b95f","date":1490873946,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#handleStats(String,String,String,List[Pair[String,String]],List[Map.Entry[String,Class]]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/sql/SolrTable#handleStats(String,String,String,List[Pair[String,String]]).mjava","sourceNew":"  private TupleStream handleStats(String zk,\n                                  String collection,\n                                  String query,\n                                  List<Pair<String, String>> metricPairs,\n                                  List<Map.Entry<String, Class>> fields) {\n\n\n    Map<String, Class> fmap = new HashMap();\n    for(Map.Entry<String, Class> entry : fields) {\n      fmap.put(entry.getKey(), entry.getValue());\n    }\n\n    ModifiableSolrParams solrParams = new ModifiableSolrParams();\n    solrParams.add(CommonParams.Q, query);\n    Metric[] metrics = buildMetrics(metricPairs, false).toArray(new Metric[0]);\n\n    for(Metric metric : metrics) {\n      Class c = fmap.get(metric.getIdentifier());\n      if(Long.class.equals(c)) {\n        metric.outputLong = true;\n      }\n    }\n\n    return new StatsStream(zk, collection, solrParams, metrics);\n  }\n\n","sourceOld":"  private TupleStream handleStats(String zk,\n                                  String collection,\n                                  String query,\n                                  List<Pair<String, String>> metricPairs) {\n\n\n    ModifiableSolrParams solrParams = new ModifiableSolrParams();\n    solrParams.add(CommonParams.Q, query);\n    Metric[] metrics = buildMetrics(metricPairs, false).toArray(new Metric[0]);\n    return new StatsStream(zk, collection, solrParams, metrics);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a9b741b54c163686a5fd077895a797daa9b0b95f":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3f20deebda1cf327549c84cb60464135abd31c71"],"36b1ce25b5b465615c00f409ce694664abbe7bd2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d9fe3175bbaa122d67f736a75c2984617c502cc0":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3f20deebda1cf327549c84cb60464135abd31c71":["36b1ce25b5b465615c00f409ce694664abbe7bd2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d9fe3175bbaa122d67f736a75c2984617c502cc0"]},"commit2Childs":{"a9b741b54c163686a5fd077895a797daa9b0b95f":[],"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["a9b741b54c163686a5fd077895a797daa9b0b95f","d9fe3175bbaa122d67f736a75c2984617c502cc0"],"36b1ce25b5b465615c00f409ce694664abbe7bd2":["3f20deebda1cf327549c84cb60464135abd31c71"],"d9fe3175bbaa122d67f736a75c2984617c502cc0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa","36b1ce25b5b465615c00f409ce694664abbe7bd2"],"3f20deebda1cf327549c84cb60464135abd31c71":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a9b741b54c163686a5fd077895a797daa9b0b95f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}