{"path":"contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#cluster(Query,DocList,SolrParams).mjava","commits":[{"id":"3ee70799f6a87a250e98ce10a7bc3e28d41eac23","date":1242826192,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#cluster(Query,DocList,SolrParams).mjava","pathOld":"/dev/null","sourceNew":"\tpublic NamedList cluster(Query query, DocList docList, SolrParams solrParams) {\n\t\ttry {\n\t\t\t// Prepare attributes for Carrot2 clustering call\n\t\t\tMap<String, Object> attributes = new HashMap<String, Object>();\n\t\t\tList<Document> documents = getDocuments(docList, core, query, solrParams);\n\t\t\tattributes.put(AttributeNames.DOCUMENTS, documents);\n\t\t\tattributes.put(AttributeNames.QUERY, query.toString());\n\t\t\t\n\t\t\t// Pass extra overriding attributes from the request, if any\n\t\t\textractCarrotAttributes(solrParams, attributes);\n\n\t\t\t// Perform clustering and convert to named list\n\t\t\treturn clustersToNamedList(controller.process(attributes,\n\t\t\t\t\tclusteringAlgorithmClass).getClusters(), solrParams);\n\t\t} catch (Exception e) {\n\t\t\tlog.error(\"Carrot2 clustering failed\", e);\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a2a4e39332de25d2866f373dbf3991a7125b31d","date":1246542679,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#cluster(Query,DocList,SolrQueryRequest).mjava","pathOld":"contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/CarrotClusteringEngine#cluster(Query,DocList,SolrParams).mjava","sourceNew":"\tpublic Object cluster(Query query, DocList docList, SolrQueryRequest sreq) {\n\t\ttry {\n\t\t\t// Prepare attributes for Carrot2 clustering call\n\t\t\tMap<String, Object> attributes = new HashMap<String, Object>();\n\t\t\tList<Document> documents = getDocuments(docList, query, sreq);\n\t\t\tattributes.put(AttributeNames.DOCUMENTS, documents);\n\t\t\tattributes.put(AttributeNames.QUERY, query.toString());\n\t\t\t\n\t\t\t// Pass extra overriding attributes from the request, if any\n\t\t\textractCarrotAttributes(sreq.getParams(), attributes);\n\n\t\t\t// Perform clustering and convert to named list\n\t\t\treturn clustersToNamedList(controller.process(attributes,\n\t\t\t\t\tclusteringAlgorithmClass).getClusters(), sreq.getParams());\n\t\t} catch (Exception e) {\n\t\t\tlog.error(\"Carrot2 clustering failed\", e);\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n\n","sourceOld":"\tpublic NamedList cluster(Query query, DocList docList, SolrParams solrParams) {\n\t\ttry {\n\t\t\t// Prepare attributes for Carrot2 clustering call\n\t\t\tMap<String, Object> attributes = new HashMap<String, Object>();\n\t\t\tList<Document> documents = getDocuments(docList, core, query, solrParams);\n\t\t\tattributes.put(AttributeNames.DOCUMENTS, documents);\n\t\t\tattributes.put(AttributeNames.QUERY, query.toString());\n\t\t\t\n\t\t\t// Pass extra overriding attributes from the request, if any\n\t\t\textractCarrotAttributes(solrParams, attributes);\n\n\t\t\t// Perform clustering and convert to named list\n\t\t\treturn clustersToNamedList(controller.process(attributes,\n\t\t\t\t\tclusteringAlgorithmClass).getClusters(), solrParams);\n\t\t} catch (Exception e) {\n\t\t\tlog.error(\"Carrot2 clustering failed\", e);\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a2a4e39332de25d2866f373dbf3991a7125b31d":["3ee70799f6a87a250e98ce10a7bc3e28d41eac23"],"3ee70799f6a87a250e98ce10a7bc3e28d41eac23":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0a2a4e39332de25d2866f373dbf3991a7125b31d":[],"3ee70799f6a87a250e98ce10a7bc3e28d41eac23":["0a2a4e39332de25d2866f373dbf3991a7125b31d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["3ee70799f6a87a250e98ce10a7bc3e28d41eac23"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0a2a4e39332de25d2866f373dbf3991a7125b31d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}