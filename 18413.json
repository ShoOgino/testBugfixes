{"path":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","commits":[{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","pathOld":"lucene/contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","sourceNew":"    public WeightedPhraseInfo( LinkedList<TermInfo> terms, float boost, int number ){\n      this.boost = boost;\n      this.seqnum = number;\n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","sourceOld":"    public WeightedPhraseInfo( LinkedList<TermInfo> terms, float boost, int number ){\n      this.boost = boost;\n      this.seqnum = number;\n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldPhraseList.WeightedPhraseInfo#WeightedPhraseInfo(LinkedList[TermInfo],float,int).mjava","sourceNew":"    public WeightedPhraseInfo( LinkedList<TermInfo> terms, float boost, int number ){\n      this.boost = boost;\n      this.seqnum = number;\n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","sourceOld":"    public WeightedPhraseInfo( LinkedList<TermInfo> terms, float boost, int number ){\n      this.boost = boost;\n      this.seqnum = number;\n      termsOffsets = new ArrayList<Toffs>( terms.size() );\n      TermInfo ti = terms.get( 0 );\n      termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n      if( terms.size() == 1 ){\n        text = ti.getText();\n        return;\n      }\n      StringBuilder sb = new StringBuilder();\n      sb.append( ti.getText() );\n      int pos = ti.getPosition();\n      for( int i = 1; i < terms.size(); i++ ){\n        ti = terms.get( i );\n        sb.append( ti.getText() );\n        if( ti.getPosition() - pos == 1 ){\n          Toffs to = termsOffsets.get( termsOffsets.size() - 1 );\n          to.setEndOffset( ti.getEndOffset() );\n        }\n        else{\n          termsOffsets.add( new Toffs( ti.getStartOffset(), ti.getEndOffset() ) );\n        }\n        pos = ti.getPosition();\n      }\n      text = sb.toString();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}