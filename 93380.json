{"path":"contrib/gdata-server/src/test/org/apache/lucene/gdata/server/authentication/TestBlowfishAuthenticationController#testAuthenticateToken().mjava","commits":[{"id":"89f8b19763ea545f1e428dfa5efb8235beaaa05e","date":1151436680,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"contrib/gdata-server/src/test/org/apache/lucene/gdata/server/authentication/TestBlowfishAuthenticationController#testAuthenticateToken().mjava","pathOld":"/dev/null","sourceNew":"    /*\n     * Test method for 'org.apache.lucene.gdata.server.authentication.AuthenticationController.authenticateToken(String)'\n     */\n    public void testAuthenticateToken() throws IllegalBlockSizeException, BadPaddingException, UnsupportedEncodingException, AuthenticationException {\n        GDataAccount account = new GDataAccount();\n        account.setName(\"simon\");\n        account.setPassword(\"testme\");\n        account.setRole(AccountRole.ENTRYAMINISTRATOR);\n        String token = this.controller.calculateAuthToken(\"192.168.0\",Integer.toString(account.getRolesAsInt()),this.accountName);\n        \n        assertTrue(this.controller.authenticateToken(token,this.clientIp,AccountRole.ENTRYAMINISTRATOR,this.accountName));\n        assertTrue(this.controller.authenticateToken(token,this.clientIp,AccountRole.USER,this.accountName));\n        assertFalse(this.controller.authenticateToken(token,this.clientIp,AccountRole.USERADMINISTRATOR,\"someOtherAccount\"));\n        try{\n        this.controller.authenticateToken(token+\"test\",this.clientIp,AccountRole.ENTRYAMINISTRATOR,this.accountName);\n        fail(\"exception expected\");\n        }catch (Exception e) {\n            // TODO: handle exception\n        }\n        this.controller.setMinuteOffset(0);\n        assertFalse(this.controller.authenticateToken(token,this.clientIp,AccountRole.ENTRYAMINISTRATOR,this.accountName));\n        \n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"303ca293666286b4ae2b0b4dbf10d3bf60ed727c","date":1153866181,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/test/org/apache/lucene/gdata/server/authentication/TestBlowfishAuthenticationController#testAuthenticateToken().mjava","pathOld":"contrib/gdata-server/src/test/org/apache/lucene/gdata/server/authentication/TestBlowfishAuthenticationController#testAuthenticateToken().mjava","sourceNew":"    /*\n     * Test method for 'org.apache.lucene.gdata.server.authentication.AuthenticationController.authenticateToken(String)'\n     */\n    public void testAuthenticateToken() throws IllegalBlockSizeException, BadPaddingException, UnsupportedEncodingException, AuthenticationException {\n        GDataAccount account = new GDataAccount();\n        account.setName(\"simon\");\n        account.setPassword(\"testme\");\n        account.setRole(AccountRole.ENTRYAMINISTRATOR);\n        String token = this.controller.calculateAuthToken(\"192.168.0\",Integer.toString(account.getRolesAsInt()),this.accountName);\n        \n        assertTrue(this.controller.authenticateToken(token,this.clientIp,AccountRole.ENTRYAMINISTRATOR,this.accountName));\n        assertTrue(this.controller.authenticateToken(token,this.clientIp,AccountRole.USER,this.accountName));\n        assertFalse(this.controller.authenticateToken(token,this.clientIp,AccountRole.USERADMINISTRATOR,\"someOtherAccount\"));\n        try{\n        this.controller.authenticateToken(token+\"test\",this.clientIp,AccountRole.ENTRYAMINISTRATOR,this.accountName);\n        fail(\"exception expected\");\n        }catch (Exception e) {\n            // TODO: handle exception\n        }\n        this.controller.setLoginTimeout(0);\n        assertFalse(this.controller.authenticateToken(token,this.clientIp,AccountRole.ENTRYAMINISTRATOR,this.accountName));\n        \n    }\n\n","sourceOld":"    /*\n     * Test method for 'org.apache.lucene.gdata.server.authentication.AuthenticationController.authenticateToken(String)'\n     */\n    public void testAuthenticateToken() throws IllegalBlockSizeException, BadPaddingException, UnsupportedEncodingException, AuthenticationException {\n        GDataAccount account = new GDataAccount();\n        account.setName(\"simon\");\n        account.setPassword(\"testme\");\n        account.setRole(AccountRole.ENTRYAMINISTRATOR);\n        String token = this.controller.calculateAuthToken(\"192.168.0\",Integer.toString(account.getRolesAsInt()),this.accountName);\n        \n        assertTrue(this.controller.authenticateToken(token,this.clientIp,AccountRole.ENTRYAMINISTRATOR,this.accountName));\n        assertTrue(this.controller.authenticateToken(token,this.clientIp,AccountRole.USER,this.accountName));\n        assertFalse(this.controller.authenticateToken(token,this.clientIp,AccountRole.USERADMINISTRATOR,\"someOtherAccount\"));\n        try{\n        this.controller.authenticateToken(token+\"test\",this.clientIp,AccountRole.ENTRYAMINISTRATOR,this.accountName);\n        fail(\"exception expected\");\n        }catch (Exception e) {\n            // TODO: handle exception\n        }\n        this.controller.setMinuteOffset(0);\n        assertFalse(this.controller.authenticateToken(token,this.clientIp,AccountRole.ENTRYAMINISTRATOR,this.accountName));\n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/server/authentication/TestBlowfishAuthenticationController#testAuthenticateToken().mjava","pathOld":"contrib/gdata-server/src/test/org/apache/lucene/gdata/server/authentication/TestBlowfishAuthenticationController#testAuthenticateToken().mjava","sourceNew":"    /*\n     * Test method for 'org.apache.lucene.gdata.server.authentication.AuthenticationController.authenticateToken(String)'\n     */\n    public void testAuthenticateToken() throws IllegalBlockSizeException, BadPaddingException, UnsupportedEncodingException, AuthenticationException {\n        GDataAccount account = new GDataAccount();\n        account.setName(\"simon\");\n        account.setPassword(\"testme\");\n        account.setRole(AccountRole.ENTRYAMINISTRATOR);\n        String token = this.controller.calculateAuthToken(\"192.168.0\",Integer.toString(account.getRolesAsInt()),this.accountName);\n        \n        assertTrue(this.controller.authenticateToken(token,this.clientIp,AccountRole.ENTRYAMINISTRATOR,this.accountName));\n        assertTrue(this.controller.authenticateToken(token,this.clientIp,AccountRole.USER,this.accountName));\n        assertFalse(this.controller.authenticateToken(token,this.clientIp,AccountRole.USERADMINISTRATOR,\"someOtherAccount\"));\n        try{\n        this.controller.authenticateToken(token+\"test\",this.clientIp,AccountRole.ENTRYAMINISTRATOR,this.accountName);\n        fail(\"exception expected\");\n        }catch (Exception e) {\n            // TODO: handle exception\n        }\n        this.controller.setLoginTimeout(0);\n        assertFalse(this.controller.authenticateToken(token,this.clientIp,AccountRole.ENTRYAMINISTRATOR,this.accountName));\n        \n    }\n\n","sourceOld":"    /*\n     * Test method for 'org.apache.lucene.gdata.server.authentication.AuthenticationController.authenticateToken(String)'\n     */\n    public void testAuthenticateToken() throws IllegalBlockSizeException, BadPaddingException, UnsupportedEncodingException, AuthenticationException {\n        GDataAccount account = new GDataAccount();\n        account.setName(\"simon\");\n        account.setPassword(\"testme\");\n        account.setRole(AccountRole.ENTRYAMINISTRATOR);\n        String token = this.controller.calculateAuthToken(\"192.168.0\",Integer.toString(account.getRolesAsInt()),this.accountName);\n        \n        assertTrue(this.controller.authenticateToken(token,this.clientIp,AccountRole.ENTRYAMINISTRATOR,this.accountName));\n        assertTrue(this.controller.authenticateToken(token,this.clientIp,AccountRole.USER,this.accountName));\n        assertFalse(this.controller.authenticateToken(token,this.clientIp,AccountRole.USERADMINISTRATOR,\"someOtherAccount\"));\n        try{\n        this.controller.authenticateToken(token+\"test\",this.clientIp,AccountRole.ENTRYAMINISTRATOR,this.accountName);\n        fail(\"exception expected\");\n        }catch (Exception e) {\n            // TODO: handle exception\n        }\n        this.controller.setLoginTimeout(0);\n        assertFalse(this.controller.authenticateToken(token,this.clientIp,AccountRole.ENTRYAMINISTRATOR,this.accountName));\n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"89f8b19763ea545f1e428dfa5efb8235beaaa05e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["303ca293666286b4ae2b0b4dbf10d3bf60ed727c"],"303ca293666286b4ae2b0b4dbf10d3bf60ed727c":["89f8b19763ea545f1e428dfa5efb8235beaaa05e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"]},"commit2Childs":{"89f8b19763ea545f1e428dfa5efb8235beaaa05e":["303ca293666286b4ae2b0b4dbf10d3bf60ed727c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["89f8b19763ea545f1e428dfa5efb8235beaaa05e"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"303ca293666286b4ae2b0b4dbf10d3bf60ed727c":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}