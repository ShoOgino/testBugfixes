{"path":"solr/core/src/java/org/apache/solr/core/SolrCoreDiscoverer#addCore(CoreContainer,File,File,Map[String,CoreDescriptor]).mjava","commits":[{"id":"b29abed5661c7911e4b45d5a3d79a186268e28c4","date":1366675770,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCoreDiscoverer#addCore(CoreContainer,File,File,Map[String,CoreDescriptor]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXml#addCore(CoreContainer,Map[String,String],Map[String,String],File,File).mjava","sourceNew":"  private void addCore(CoreContainer container, File childFile, File propFile, Map<String,CoreDescriptor> coreDescriptorMap) throws IOException {\n    log.info(\"Discovered properties file {}, adding to cores\", propFile.getAbsolutePath());\n    Properties propsOrig = new Properties();\n    InputStream is = new FileInputStream(propFile);\n    try {\n      propsOrig.load(is);\n    } finally {\n      IOUtils.closeQuietly(is);\n    }\n\n    Properties props = new Properties();\n    for (String prop : propsOrig.stringPropertyNames()) {\n      props.put(prop, PropertiesUtil.substituteProperty(propsOrig.getProperty(prop), null));\n    }\n\n    // Too much of the code depends on this value being here, but it is NOT supported in discovery mode, so\n    // ignore it if present in the core.properties file.\n    props.setProperty(CoreDescriptor.CORE_INSTDIR, childFile.getPath());\n\n    if (props.getProperty(CoreDescriptor.CORE_NAME) == null) {\n      // Should default to this directory\n      props.setProperty(CoreDescriptor.CORE_NAME, childFile.getName());\n    }\n    CoreDescriptor desc = new CoreDescriptor(container, props);\n    coreDescriptorMap.put(desc.getName(), desc);\n  }\n\n","sourceOld":"  private void addCore(CoreContainer container, Map<String, String> seenDirs, Map<String, String> seenCores,\n                       File childFile, File propFile) throws IOException {\n    log.info(\"Discovered properties file {}, adding to cores\", propFile.getAbsolutePath());\n    Properties propsOrig = new Properties();\n    InputStream is = new FileInputStream(propFile);\n    try {\n      propsOrig.load(is);\n    } finally {\n      IOUtils.closeQuietly(is);\n    }\n\n    Properties props = new Properties();\n    for (String prop : propsOrig.stringPropertyNames()) {\n      props.put(prop, PropertiesUtil.substituteProperty(propsOrig.getProperty(prop), null));\n    }\n\n    // Too much of the code depends on this value being here, but it is NOT supported in discovery mode, so\n    // ignore it if present in the core.properties file.\n    props.setProperty(CoreDescriptor.CORE_INSTDIR, childFile.getPath());\n\n    if (props.getProperty(CoreDescriptor.CORE_NAME) == null) {\n      // Should default to this directory\n      props.setProperty(CoreDescriptor.CORE_NAME, childFile.getName());\n    }\n    CoreDescriptor desc = new CoreDescriptor(container, props);\n    coreDescriptorMap.put(desc.getName(), desc);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9","date":1366986755,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCoreDiscoverer#addCore(CoreContainer,File,File,Map[String,CoreDescriptor]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCoreDiscoverer#addCore(CoreContainer,File,File,Map[String,CoreDescriptor]).mjava","sourceNew":"  private void addCore(CoreContainer container, File childFile, File propFile, Map<String,CoreDescriptor> coreDescriptorMap) throws IOException {\n    log.info(\"Discovered properties file {}, adding to cores\", propFile.getAbsolutePath());\n    Properties propsOrig = new Properties();\n    InputStream is = new FileInputStream(propFile);\n    try {\n      propsOrig.load(is);\n    } finally {\n      IOUtils.closeQuietly(is);\n    }\n\n    Properties props = new Properties();\n    for (String prop : propsOrig.stringPropertyNames()) {\n      props.put(prop, PropertiesUtil.substituteProperty(propsOrig.getProperty(prop), null));\n    }\n\n    // Too much of the code depends on this value being here, but it is NOT supported in discovery mode, so\n    // ignore it if present in the core.properties file.\n    System.out.println(\"SET INST DIR:\" + childFile.getPath());\n    props.setProperty(CoreDescriptor.CORE_INSTDIR, childFile.getPath());\n\n    if (props.getProperty(CoreDescriptor.CORE_NAME) == null) {\n      // Should default to this directory\n      props.setProperty(CoreDescriptor.CORE_NAME, childFile.getName());\n    }\n    CoreDescriptor desc = new CoreDescriptor(container, props);\n    coreDescriptorMap.put(desc.getName(), desc);\n  }\n\n","sourceOld":"  private void addCore(CoreContainer container, File childFile, File propFile, Map<String,CoreDescriptor> coreDescriptorMap) throws IOException {\n    log.info(\"Discovered properties file {}, adding to cores\", propFile.getAbsolutePath());\n    Properties propsOrig = new Properties();\n    InputStream is = new FileInputStream(propFile);\n    try {\n      propsOrig.load(is);\n    } finally {\n      IOUtils.closeQuietly(is);\n    }\n\n    Properties props = new Properties();\n    for (String prop : propsOrig.stringPropertyNames()) {\n      props.put(prop, PropertiesUtil.substituteProperty(propsOrig.getProperty(prop), null));\n    }\n\n    // Too much of the code depends on this value being here, but it is NOT supported in discovery mode, so\n    // ignore it if present in the core.properties file.\n    props.setProperty(CoreDescriptor.CORE_INSTDIR, childFile.getPath());\n\n    if (props.getProperty(CoreDescriptor.CORE_NAME) == null) {\n      // Should default to this directory\n      props.setProperty(CoreDescriptor.CORE_NAME, childFile.getName());\n    }\n    CoreDescriptor desc = new CoreDescriptor(container, props);\n    coreDescriptorMap.put(desc.getName(), desc);\n  }\n\n","bugFix":null,"bugIntro":["ba8a535881bd36c93b6eb3ccce91f29f5fa20fdf"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba8a535881bd36c93b6eb3ccce91f29f5fa20fdf","date":1367328423,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCoreDiscoverer#addCore(CoreContainer,File,File,Map[String,CoreDescriptor]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCoreDiscoverer#addCore(CoreContainer,File,File,Map[String,CoreDescriptor]).mjava","sourceNew":"  private void addCore(CoreContainer container, File childFile, File propFile, Map<String,CoreDescriptor> coreDescriptorMap) throws IOException {\n    log.info(\"Discovered properties file {}, adding to cores\", propFile.getAbsolutePath());\n    Properties propsOrig = new Properties();\n    InputStream is = new FileInputStream(propFile);\n    try {\n      propsOrig.load(is);\n    } finally {\n      IOUtils.closeQuietly(is);\n    }\n    Properties props = new Properties();\n    for (String prop : propsOrig.stringPropertyNames()) {\n      props.put(prop, PropertiesUtil.substituteProperty(propsOrig.getProperty(prop), null));\n    }\n\n    // Too much of the code depends on this value being here, but it is NOT supported in discovery mode, so\n    // ignore it if present in the core.properties file.\n    props.setProperty(CoreDescriptor.CORE_INSTDIR, childFile.getCanonicalPath());\n\n    if (props.getProperty(CoreDescriptor.CORE_NAME) == null) {\n      // Should default to this directory\n      props.setProperty(CoreDescriptor.CORE_NAME, childFile.getName());\n    }\n    CoreDescriptor desc = new CoreDescriptor(container, props);\n    coreDescriptorMap.put(desc.getName(), desc);\n  }\n\n","sourceOld":"  private void addCore(CoreContainer container, File childFile, File propFile, Map<String,CoreDescriptor> coreDescriptorMap) throws IOException {\n    log.info(\"Discovered properties file {}, adding to cores\", propFile.getAbsolutePath());\n    Properties propsOrig = new Properties();\n    InputStream is = new FileInputStream(propFile);\n    try {\n      propsOrig.load(is);\n    } finally {\n      IOUtils.closeQuietly(is);\n    }\n\n    Properties props = new Properties();\n    for (String prop : propsOrig.stringPropertyNames()) {\n      props.put(prop, PropertiesUtil.substituteProperty(propsOrig.getProperty(prop), null));\n    }\n\n    // Too much of the code depends on this value being here, but it is NOT supported in discovery mode, so\n    // ignore it if present in the core.properties file.\n    System.out.println(\"SET INST DIR:\" + childFile.getPath());\n    props.setProperty(CoreDescriptor.CORE_INSTDIR, childFile.getPath());\n\n    if (props.getProperty(CoreDescriptor.CORE_NAME) == null) {\n      // Should default to this directory\n      props.setProperty(CoreDescriptor.CORE_NAME, childFile.getName());\n    }\n    CoreDescriptor desc = new CoreDescriptor(container, props);\n    coreDescriptorMap.put(desc.getName(), desc);\n  }\n\n","bugFix":["e475642767c688ede5728d7918326f70b4e0bf3a","e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16c8b96bb5b688807272bd6bee7051c5168e1a10","date":1368203207,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCoreDiscoverer#addCore(CoreContainer,File,File,Map[String,CoreDescriptor]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCoreDiscoverer#addCore(CoreContainer,File,File,Map[String,CoreDescriptor]).mjava","sourceNew":"  private void addCore(CoreContainer container, File childFile, File propFile, Map<String,CoreDescriptor> coreDescriptorMap) throws IOException {\n    log.info(\"Discovered properties file {}, adding to cores\", propFile.getAbsolutePath());\n    Properties propsOrig = new Properties();\n    InputStream is = new FileInputStream(propFile);\n    try {\n      propsOrig.load(is);\n    } finally {\n      IOUtils.closeQuietly(is);\n    }\n    Properties props = new Properties();\n    for (String prop : propsOrig.stringPropertyNames()) {\n      props.put(prop, PropertiesUtil.substituteProperty(propsOrig.getProperty(prop), null));\n    }\n\n    // Too much of the code depends on this value being here, but it is NOT supported in discovery mode, so\n    // ignore it if present in the core.properties file.\n    props.setProperty(CoreDescriptor.CORE_INSTDIR, childFile.getCanonicalPath());\n\n    if (props.getProperty(CoreDescriptor.CORE_NAME) == null) {\n      // Should default to this directory\n      props.setProperty(CoreDescriptor.CORE_NAME, childFile.getName());\n    }\n    CoreDescriptor desc = new CoreDescriptor(container, props);\n    CoreDescriptor check = coreDescriptorMap.get(desc.getName());\n    if (check != null) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Core \" + desc.getName() +\n          \" defined more than once, once in \" + desc.getInstanceDir() + \" and once in \" + check.getInstanceDir());\n    }\n    coreDescriptorMap.put(desc.getName(), desc);\n  }\n\n","sourceOld":"  private void addCore(CoreContainer container, File childFile, File propFile, Map<String,CoreDescriptor> coreDescriptorMap) throws IOException {\n    log.info(\"Discovered properties file {}, adding to cores\", propFile.getAbsolutePath());\n    Properties propsOrig = new Properties();\n    InputStream is = new FileInputStream(propFile);\n    try {\n      propsOrig.load(is);\n    } finally {\n      IOUtils.closeQuietly(is);\n    }\n    Properties props = new Properties();\n    for (String prop : propsOrig.stringPropertyNames()) {\n      props.put(prop, PropertiesUtil.substituteProperty(propsOrig.getProperty(prop), null));\n    }\n\n    // Too much of the code depends on this value being here, but it is NOT supported in discovery mode, so\n    // ignore it if present in the core.properties file.\n    props.setProperty(CoreDescriptor.CORE_INSTDIR, childFile.getCanonicalPath());\n\n    if (props.getProperty(CoreDescriptor.CORE_NAME) == null) {\n      // Should default to this directory\n      props.setProperty(CoreDescriptor.CORE_NAME, childFile.getName());\n    }\n    CoreDescriptor desc = new CoreDescriptor(container, props);\n    coreDescriptorMap.put(desc.getName(), desc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCoreDiscoverer#addCore(CoreContainer,File,File,Map[String,CoreDescriptor]).mjava","sourceNew":null,"sourceOld":"  private void addCore(CoreContainer container, File childFile, File propFile, Map<String,CoreDescriptor> coreDescriptorMap) throws IOException {\n    log.info(\"Discovered properties file {}, adding to cores\", propFile.getAbsolutePath());\n    Properties propsOrig = new Properties();\n    InputStream is = new FileInputStream(propFile);\n    try {\n      propsOrig.load(is);\n    } finally {\n      IOUtils.closeQuietly(is);\n    }\n    Properties props = new Properties();\n    for (String prop : propsOrig.stringPropertyNames()) {\n      props.put(prop, PropertiesUtil.substituteProperty(propsOrig.getProperty(prop), null));\n    }\n\n    // Too much of the code depends on this value being here, but it is NOT supported in discovery mode, so\n    // ignore it if present in the core.properties file.\n    props.setProperty(CoreDescriptor.CORE_INSTDIR, childFile.getCanonicalPath());\n\n    if (props.getProperty(CoreDescriptor.CORE_NAME) == null) {\n      // Should default to this directory\n      props.setProperty(CoreDescriptor.CORE_NAME, childFile.getName());\n    }\n    CoreDescriptor desc = new CoreDescriptor(container, props);\n    CoreDescriptor check = coreDescriptorMap.get(desc.getName());\n    if (check != null) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Core \" + desc.getName() +\n          \" defined more than once, once in \" + desc.getInstanceDir() + \" and once in \" + check.getInstanceDir());\n    }\n    coreDescriptorMap.put(desc.getName(), desc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCoreDiscoverer#addCore(CoreContainer,File,File,Map[String,CoreDescriptor]).mjava","sourceNew":null,"sourceOld":"  private void addCore(CoreContainer container, File childFile, File propFile, Map<String,CoreDescriptor> coreDescriptorMap) throws IOException {\n    log.info(\"Discovered properties file {}, adding to cores\", propFile.getAbsolutePath());\n    Properties propsOrig = new Properties();\n    InputStream is = new FileInputStream(propFile);\n    try {\n      propsOrig.load(is);\n    } finally {\n      IOUtils.closeQuietly(is);\n    }\n    Properties props = new Properties();\n    for (String prop : propsOrig.stringPropertyNames()) {\n      props.put(prop, PropertiesUtil.substituteProperty(propsOrig.getProperty(prop), null));\n    }\n\n    // Too much of the code depends on this value being here, but it is NOT supported in discovery mode, so\n    // ignore it if present in the core.properties file.\n    props.setProperty(CoreDescriptor.CORE_INSTDIR, childFile.getCanonicalPath());\n\n    if (props.getProperty(CoreDescriptor.CORE_NAME) == null) {\n      // Should default to this directory\n      props.setProperty(CoreDescriptor.CORE_NAME, childFile.getName());\n    }\n    CoreDescriptor desc = new CoreDescriptor(container, props);\n    CoreDescriptor check = coreDescriptorMap.get(desc.getName());\n    if (check != null) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Core \" + desc.getName() +\n          \" defined more than once, once in \" + desc.getInstanceDir() + \" and once in \" + check.getInstanceDir());\n    }\n    coreDescriptorMap.put(desc.getName(), desc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9":["b29abed5661c7911e4b45d5a3d79a186268e28c4"],"b29abed5661c7911e4b45d5a3d79a186268e28c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["16c8b96bb5b688807272bd6bee7051c5168e1a10","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ba8a535881bd36c93b6eb3ccce91f29f5fa20fdf":["e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["16c8b96bb5b688807272bd6bee7051c5168e1a10"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"16c8b96bb5b688807272bd6bee7051c5168e1a10":["ba8a535881bd36c93b6eb3ccce91f29f5fa20fdf"]},"commit2Childs":{"e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9":["ba8a535881bd36c93b6eb3ccce91f29f5fa20fdf"],"b29abed5661c7911e4b45d5a3d79a186268e28c4":["e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b29abed5661c7911e4b45d5a3d79a186268e28c4"],"ba8a535881bd36c93b6eb3ccce91f29f5fa20fdf":["16c8b96bb5b688807272bd6bee7051c5168e1a10"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"16c8b96bb5b688807272bd6bee7051c5168e1a10":["37a0f60745e53927c4c876cfe5b5a58170f0646c","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}