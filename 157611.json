{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/minhash/MinHashFilterTest#testTokenStreamSingleInput().mjava","commits":[{"id":"af241f05539d0b41cd28a8051ad03e3d7fb051cf","date":1465897793,"type":0,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/minhash/MinHashFilterTest#testTokenStreamSingleInput().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testTokenStreamSingleInput() throws IOException {\n    String[] hashes = new String[]{\"℁팽徭聙↝ꇁ홱杯\"};\n    TokenStream ts = createTokenStream(5, \"woof woof woof woof woof\", 1, 1, 100, false);\n    assertTokenStreamContents(ts, hashes, new int[]{0},\n        new int[]{24}, new String[]{MinHashFilter.MIN_HASH_TYPE}, new int[]{1}, new int[]{1}, 24, 0, null,\n        true);\n\n    ts = createTokenStream(5, \"woof woof woof woof woof\", 2, 1, 1, false);\n    assertTokenStreamContents(ts, new String[]{new String(new char[]{0, 0, 8449, 54077, 64133, 32857, 8605, 41409}),\n            new String(new char[]{0, 1, 16887, 58164, 39536, 14926, 6529, 17276})}, new int[]{0, 0},\n        new int[]{24, 24}, new String[]{MinHashFilter.MIN_HASH_TYPE, MinHashFilter.MIN_HASH_TYPE}, new int[]{1, 0},\n        new int[]{1, 1}, 24, 0, null,\n        true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57dc82c7b33cd580e7ab5179019bc78f3d7f8e79","date":1465913303,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/minhash/MinHashFilterTest#testTokenStreamSingleInput().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testTokenStreamSingleInput() throws IOException {\n    String[] hashes = new String[]{\"℁팽徭聙↝ꇁ홱杯\"};\n    TokenStream ts = createTokenStream(5, \"woof woof woof woof woof\", 1, 1, 100, false);\n    assertTokenStreamContents(ts, hashes, new int[]{0},\n        new int[]{24}, new String[]{MinHashFilter.MIN_HASH_TYPE}, new int[]{1}, new int[]{1}, 24, 0, null,\n        true);\n\n    ts = createTokenStream(5, \"woof woof woof woof woof\", 2, 1, 1, false);\n    assertTokenStreamContents(ts, new String[]{new String(new char[]{0, 0, 8449, 54077, 64133, 32857, 8605, 41409}),\n            new String(new char[]{0, 1, 16887, 58164, 39536, 14926, 6529, 17276})}, new int[]{0, 0},\n        new int[]{24, 24}, new String[]{MinHashFilter.MIN_HASH_TYPE, MinHashFilter.MIN_HASH_TYPE}, new int[]{1, 0},\n        new int[]{1, 1}, 24, 0, null,\n        true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/minhash/MinHashFilterTest#testTokenStreamSingleInput().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testTokenStreamSingleInput() throws IOException {\n    String[] hashes = new String[]{\"℁팽徭聙↝ꇁ홱杯\"};\n    TokenStream ts = createTokenStream(5, \"woof woof woof woof woof\", 1, 1, 100, false);\n    assertTokenStreamContents(ts, hashes, new int[]{0},\n        new int[]{24}, new String[]{MinHashFilter.MIN_HASH_TYPE}, new int[]{1}, new int[]{1}, 24, 0, null,\n        true);\n\n    ts = createTokenStream(5, \"woof woof woof woof woof\", 2, 1, 1, false);\n    assertTokenStreamContents(ts, new String[]{new String(new char[]{0, 0, 8449, 54077, 64133, 32857, 8605, 41409}),\n            new String(new char[]{0, 1, 16887, 58164, 39536, 14926, 6529, 17276})}, new int[]{0, 0},\n        new int[]{24, 24}, new String[]{MinHashFilter.MIN_HASH_TYPE, MinHashFilter.MIN_HASH_TYPE}, new int[]{1, 0},\n        new int[]{1, 1}, 24, 0, null,\n        true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc5b4b2446e392448f36ae4f5a164540f2ccb65","date":1513355058,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/minhash/MinHashFilterTest#testTokenStreamSingleInput().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/minhash/MinHashFilterTest#testTokenStreamSingleInput().mjava","sourceNew":"  @Test\n  public void testTokenStreamSingleInput() throws IOException {\n    String[] hashes = new String[]{\"℁팽徭聙↝ꇁ홱杯\"};\n    TokenStream ts = createTokenStream(5, \"woof woof woof woof woof\", 1, 1, 100, false);\n    assertTokenStreamContents(ts, hashes, new int[]{0},\n        new int[]{24}, new String[]{MinHashFilter.MIN_HASH_TYPE}, new int[]{1}, new int[]{1}, 24, 0, null,\n        true, null);\n\n    ts = createTokenStream(5, \"woof woof woof woof woof\", 2, 1, 1, false);\n    assertTokenStreamContents(ts, new String[]{new String(new char[]{0, 0, 8449, 54077, 64133, 32857, 8605, 41409}),\n            new String(new char[]{0, 1, 16887, 58164, 39536, 14926, 6529, 17276})}, new int[]{0, 0},\n        new int[]{24, 24}, new String[]{MinHashFilter.MIN_HASH_TYPE, MinHashFilter.MIN_HASH_TYPE}, new int[]{1, 0},\n        new int[]{1, 1}, 24, 0, null,\n        true, null);\n  }\n\n","sourceOld":"  @Test\n  public void testTokenStreamSingleInput() throws IOException {\n    String[] hashes = new String[]{\"℁팽徭聙↝ꇁ홱杯\"};\n    TokenStream ts = createTokenStream(5, \"woof woof woof woof woof\", 1, 1, 100, false);\n    assertTokenStreamContents(ts, hashes, new int[]{0},\n        new int[]{24}, new String[]{MinHashFilter.MIN_HASH_TYPE}, new int[]{1}, new int[]{1}, 24, 0, null,\n        true);\n\n    ts = createTokenStream(5, \"woof woof woof woof woof\", 2, 1, 1, false);\n    assertTokenStreamContents(ts, new String[]{new String(new char[]{0, 0, 8449, 54077, 64133, 32857, 8605, 41409}),\n            new String(new char[]{0, 1, 16887, 58164, 39536, 14926, 6529, 17276})}, new int[]{0, 0},\n        new int[]{24, 24}, new String[]{MinHashFilter.MIN_HASH_TYPE, MinHashFilter.MIN_HASH_TYPE}, new int[]{1, 0},\n        new int[]{1, 1}, 24, 0, null,\n        true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57dc82c7b33cd580e7ab5179019bc78f3d7f8e79":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","af241f05539d0b41cd28a8051ad03e3d7fb051cf"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","57dc82c7b33cd580e7ab5179019bc78f3d7f8e79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc5b4b2446e392448f36ae4f5a164540f2ccb65"],"afc5b4b2446e392448f36ae4f5a164540f2ccb65":["57dc82c7b33cd580e7ab5179019bc78f3d7f8e79"],"af241f05539d0b41cd28a8051ad03e3d7fb051cf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["57dc82c7b33cd580e7ab5179019bc78f3d7f8e79","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","af241f05539d0b41cd28a8051ad03e3d7fb051cf"],"57dc82c7b33cd580e7ab5179019bc78f3d7f8e79":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","afc5b4b2446e392448f36ae4f5a164540f2ccb65"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"af241f05539d0b41cd28a8051ad03e3d7fb051cf":["57dc82c7b33cd580e7ab5179019bc78f3d7f8e79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"afc5b4b2446e392448f36ae4f5a164540f2ccb65":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}