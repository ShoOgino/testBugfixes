{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectField.DirectTermsEnum#seekCeil(BytesRef,boolean).mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectField.DirectTermsEnum#seekCeil(BytesRef,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectField.DirectTermsEnum#seekCeil(BytesRef,boolean).mjava","sourceNew":"      @Override\n      public SeekStatus seekCeil(BytesRef term, boolean useCache) {\n        // TODO: we should use the skip pointers; should be\n        // faster than bin search; we should also hold\n        // & reuse current state so seeking forwards is\n        // faster\n        final int ord = findTerm(term);\n        // if (DEBUG) {\n        //   System.out.println(\"  find term=\" + term.utf8ToString() + \" ord=\" + ord);\n        // }\n        if (ord >= 0) {\n          termOrd = ord;\n          setTerm();\n          return SeekStatus.FOUND;\n        } else if (ord == -terms.length-1) {\n          return SeekStatus.END;\n        } else {\n          termOrd = -ord - 1;\n          setTerm();\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n\n","sourceOld":"      @Override\n      public SeekStatus seekCeil(BytesRef term, boolean useCache) {\n        // TODO: we should use the skip pointers; should be\n        // faster than bin search; we should also hold\n        // & reuse current state so seeking forwards is\n        // faster\n        final int ord = findTerm(term);\n        // if (DEBUG) {\n        //   System.out.println(\"  find term=\" + term.utf8ToString() + \" ord=\" + ord);\n        // }\n        if (ord >= 0) {\n          termOrd = ord;\n          setTerm();\n          return SeekStatus.FOUND;\n        } else if (ord == -terms.length-1) {\n          return SeekStatus.END;\n        } else {\n          termOrd = -ord - 1;\n          setTerm();\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8","date":1373996650,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectField.DirectTermsEnum#seekCeil(BytesRef).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectField.DirectTermsEnum#seekCeil(BytesRef,boolean).mjava","sourceNew":"      @Override\n      public SeekStatus seekCeil(BytesRef term) {\n        // TODO: we should use the skip pointers; should be\n        // faster than bin search; we should also hold\n        // & reuse current state so seeking forwards is\n        // faster\n        final int ord = findTerm(term);\n        // if (DEBUG) {\n        //   System.out.println(\"  find term=\" + term.utf8ToString() + \" ord=\" + ord);\n        // }\n        if (ord >= 0) {\n          termOrd = ord;\n          setTerm();\n          return SeekStatus.FOUND;\n        } else if (ord == -terms.length-1) {\n          return SeekStatus.END;\n        } else {\n          termOrd = -ord - 1;\n          setTerm();\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n\n","sourceOld":"      @Override\n      public SeekStatus seekCeil(BytesRef term, boolean useCache) {\n        // TODO: we should use the skip pointers; should be\n        // faster than bin search; we should also hold\n        // & reuse current state so seeking forwards is\n        // faster\n        final int ord = findTerm(term);\n        // if (DEBUG) {\n        //   System.out.println(\"  find term=\" + term.utf8ToString() + \" ord=\" + ord);\n        // }\n        if (ord >= 0) {\n          termOrd = ord;\n          setTerm();\n          return SeekStatus.FOUND;\n        } else if (ord == -terms.length-1) {\n          return SeekStatus.END;\n        } else {\n          termOrd = -ord - 1;\n          setTerm();\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":5,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectField.DirectTermsEnum#seekCeil(BytesRef).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectPostingsFormat.DirectField.DirectTermsEnum#seekCeil(BytesRef,boolean).mjava","sourceNew":"      @Override\n      public SeekStatus seekCeil(BytesRef term) {\n        // TODO: we should use the skip pointers; should be\n        // faster than bin search; we should also hold\n        // & reuse current state so seeking forwards is\n        // faster\n        final int ord = findTerm(term);\n        // if (DEBUG) {\n        //   System.out.println(\"  find term=\" + term.utf8ToString() + \" ord=\" + ord);\n        // }\n        if (ord >= 0) {\n          termOrd = ord;\n          setTerm();\n          return SeekStatus.FOUND;\n        } else if (ord == -terms.length-1) {\n          return SeekStatus.END;\n        } else {\n          termOrd = -ord - 1;\n          setTerm();\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n\n","sourceOld":"      @Override\n      public SeekStatus seekCeil(BytesRef term, boolean useCache) {\n        // TODO: we should use the skip pointers; should be\n        // faster than bin search; we should also hold\n        // & reuse current state so seeking forwards is\n        // faster\n        final int ord = findTerm(term);\n        // if (DEBUG) {\n        //   System.out.println(\"  find term=\" + term.utf8ToString() + \" ord=\" + ord);\n        // }\n        if (ord >= 0) {\n          termOrd = ord;\n          setTerm();\n          return SeekStatus.FOUND;\n        } else if (ord == -terms.length-1) {\n          return SeekStatus.END;\n        } else {\n          termOrd = -ord - 1;\n          setTerm();\n          return SeekStatus.NOT_FOUND;\n        }\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"]},"commit2Childs":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}