{"path":"solr/src/java/org/apache/solr/analysis/BufferedTokenStream#writeToken(Token).mjava","commits":[{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/BufferedTokenStream#writeToken(Token).mjava","pathOld":"src/java/org/apache/solr/analysis/BufferedTokenStream#writeToken(Token).mjava","sourceNew":"  /** old api emulation for back compat */\n  private boolean writeToken(Token token) throws IOException {\n    clearAttributes();\n    termAtt.setTermBuffer(token.termBuffer(), 0, token.termLength());\n    offsetAtt.setOffset(token.startOffset(), token.endOffset());\n    typeAtt.setType(token.type());\n    flagsAtt.setFlags(token.getFlags());\n    posIncAtt.setPositionIncrement(token.getPositionIncrement());\n    payloadAtt.setPayload(token.getPayload());\n    return true;\n  }\n\n","sourceOld":"  /** old api emulation for back compat */\n  private boolean writeToken(Token token) throws IOException {\n    clearAttributes();\n    termAtt.setTermBuffer(token.termBuffer(), 0, token.termLength());\n    offsetAtt.setOffset(token.startOffset(), token.endOffset());\n    typeAtt.setType(token.type());\n    flagsAtt.setFlags(token.getFlags());\n    posIncAtt.setPositionIncrement(token.getPositionIncrement());\n    payloadAtt.setPayload(token.getPayload());\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/analysis/BufferedTokenStream#writeToken(Token).mjava","pathOld":"/dev/null","sourceNew":"  /** old api emulation for back compat */\n  private boolean writeToken(Token token) throws IOException {\n    clearAttributes();\n    termAtt.setTermBuffer(token.termBuffer(), 0, token.termLength());\n    offsetAtt.setOffset(token.startOffset(), token.endOffset());\n    typeAtt.setType(token.type());\n    flagsAtt.setFlags(token.getFlags());\n    posIncAtt.setPositionIncrement(token.getPositionIncrement());\n    payloadAtt.setPayload(token.getPayload());\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d085fb336a7208eea2214e5ffcc803960819b60b","date":1270981894,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/BufferedTokenStream#writeToken(Token).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/BufferedTokenStream#writeToken(Token).mjava","sourceNew":"  /** old api emulation for back compat */\n  private boolean writeToken(Token token) throws IOException {\n    clearAttributes();\n    termAtt.copyBuffer(token.termBuffer(), 0, token.termLength());\n    offsetAtt.setOffset(token.startOffset(), token.endOffset());\n    typeAtt.setType(token.type());\n    flagsAtt.setFlags(token.getFlags());\n    posIncAtt.setPositionIncrement(token.getPositionIncrement());\n    payloadAtt.setPayload(token.getPayload());\n    return true;\n  }\n\n","sourceOld":"  /** old api emulation for back compat */\n  private boolean writeToken(Token token) throws IOException {\n    clearAttributes();\n    termAtt.setTermBuffer(token.termBuffer(), 0, token.termLength());\n    offsetAtt.setOffset(token.startOffset(), token.endOffset());\n    typeAtt.setType(token.type());\n    flagsAtt.setFlags(token.getFlags());\n    posIncAtt.setPositionIncrement(token.getPositionIncrement());\n    payloadAtt.setPayload(token.getPayload());\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7347509fad0711ac30cb15a746e9a3830a38ebd","date":1275388513,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/BufferedTokenStream#writeToken(Token).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/BufferedTokenStream#writeToken(Token).mjava","sourceNew":"  /** old api emulation for back compat */\n  private boolean writeToken(Token token) throws IOException {\n    clearAttributes();\n    termAtt.copyBuffer(token.buffer(), 0, token.length());\n    offsetAtt.setOffset(token.startOffset(), token.endOffset());\n    typeAtt.setType(token.type());\n    flagsAtt.setFlags(token.getFlags());\n    posIncAtt.setPositionIncrement(token.getPositionIncrement());\n    payloadAtt.setPayload(token.getPayload());\n    return true;\n  }\n\n","sourceOld":"  /** old api emulation for back compat */\n  private boolean writeToken(Token token) throws IOException {\n    clearAttributes();\n    termAtt.copyBuffer(token.termBuffer(), 0, token.termLength());\n    offsetAtt.setOffset(token.startOffset(), token.endOffset());\n    typeAtt.setType(token.type());\n    flagsAtt.setFlags(token.getFlags());\n    posIncAtt.setPositionIncrement(token.getPositionIncrement());\n    payloadAtt.setPayload(token.getPayload());\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d4fb2da5489b4a308da34d68590b31e9e5bc7e7","date":1295267679,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/analysis/BufferedTokenStream#writeToken(Token).mjava","sourceNew":null,"sourceOld":"  /** old api emulation for back compat */\n  private boolean writeToken(Token token) throws IOException {\n    clearAttributes();\n    termAtt.copyBuffer(token.buffer(), 0, token.length());\n    offsetAtt.setOffset(token.startOffset(), token.endOffset());\n    typeAtt.setType(token.type());\n    flagsAtt.setFlags(token.getFlags());\n    posIncAtt.setPositionIncrement(token.getPositionIncrement());\n    payloadAtt.setPayload(token.getPayload());\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/analysis/BufferedTokenStream#writeToken(Token).mjava","sourceNew":null,"sourceOld":"  /** old api emulation for back compat */\n  private boolean writeToken(Token token) throws IOException {\n    clearAttributes();\n    termAtt.copyBuffer(token.buffer(), 0, token.length());\n    offsetAtt.setOffset(token.startOffset(), token.endOffset());\n    typeAtt.setType(token.type());\n    flagsAtt.setFlags(token.getFlags());\n    posIncAtt.setPositionIncrement(token.getPositionIncrement());\n    payloadAtt.setPayload(token.getPayload());\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/analysis/BufferedTokenStream#writeToken(Token).mjava","sourceNew":null,"sourceOld":"  /** old api emulation for back compat */\n  private boolean writeToken(Token token) throws IOException {\n    clearAttributes();\n    termAtt.copyBuffer(token.buffer(), 0, token.length());\n    offsetAtt.setOffset(token.startOffset(), token.endOffset());\n    typeAtt.setType(token.type());\n    flagsAtt.setFlags(token.getFlags());\n    posIncAtt.setPositionIncrement(token.getPositionIncrement());\n    payloadAtt.setPayload(token.getPayload());\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ad94625fb8d088209f46650c8097196fec67f00c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a7347509fad0711ac30cb15a746e9a3830a38ebd","2d4fb2da5489b4a308da34d68590b31e9e5bc7e7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"2d4fb2da5489b4a308da34d68590b31e9e5bc7e7":["a7347509fad0711ac30cb15a746e9a3830a38ebd"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"d085fb336a7208eea2214e5ffcc803960819b60b":["1da8d55113b689b06716246649de6f62430f15c0"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["a7347509fad0711ac30cb15a746e9a3830a38ebd","2d4fb2da5489b4a308da34d68590b31e9e5bc7e7"],"a7347509fad0711ac30cb15a746e9a3830a38ebd":["d085fb336a7208eea2214e5ffcc803960819b60b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2d4fb2da5489b4a308da34d68590b31e9e5bc7e7"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["d085fb336a7208eea2214e5ffcc803960819b60b"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1da8d55113b689b06716246649de6f62430f15c0"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"2d4fb2da5489b4a308da34d68590b31e9e5bc7e7":["29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d085fb336a7208eea2214e5ffcc803960819b60b":["a7347509fad0711ac30cb15a746e9a3830a38ebd"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"a7347509fad0711ac30cb15a746e9a3830a38ebd":["29ef99d61cda9641b6250bf9567329a6e65f901d","2d4fb2da5489b4a308da34d68590b31e9e5bc7e7","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}