{"path":"solr/core/src/java/org/apache/solr/cloud/rule/SnitchContext#invoke(UpdateShardHandler,String,String,SolrParams).mjava","commits":[{"id":"8c7a6584aa35e033d783e02c6f4eefa6ad21c7fe","date":1430750405,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/rule/SnitchContext#invoke(UpdateShardHandler,String,String,SolrParams).mjava","pathOld":"/dev/null","sourceNew":"  public SimpleSolrResponse invoke(UpdateShardHandler shardHandler,  final String url, String path, SolrParams params)\n      throws IOException, SolrServerException {\n    GenericSolrRequest request = new GenericSolrRequest(SolrRequest.METHOD.GET, path, params);\n    NamedList<Object> rsp = new HttpSolrClient(url, shardHandler.getHttpClient(), new BinaryResponseParser()).request(request);\n    request.response.nl = rsp;\n    return request.response;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d072ec09b14ad4fb38165a9f8669b911287d2b4","date":1430758003,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/rule/SnitchContext#invoke(UpdateShardHandler,String,String,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/rule/SnitchContext#invoke(UpdateShardHandler,String,String,SolrParams).mjava","sourceNew":"  public SimpleSolrResponse invoke(UpdateShardHandler shardHandler,  final String url, String path, SolrParams params)\n      throws IOException, SolrServerException {\n    GenericSolrRequest request = new GenericSolrRequest(SolrRequest.METHOD.GET, path, params);\n    try (HttpSolrClient client = new HttpSolrClient(url, shardHandler.getHttpClient(), new BinaryResponseParser())) {\n      NamedList<Object> rsp = client.request(request);\n      request.response.nl = rsp;\n      return request.response;\n    }\n  }\n\n","sourceOld":"  public SimpleSolrResponse invoke(UpdateShardHandler shardHandler,  final String url, String path, SolrParams params)\n      throws IOException, SolrServerException {\n    GenericSolrRequest request = new GenericSolrRequest(SolrRequest.METHOD.GET, path, params);\n    NamedList<Object> rsp = new HttpSolrClient(url, shardHandler.getHttpClient(), new BinaryResponseParser()).request(request);\n    request.response.nl = rsp;\n    return request.response;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/rule/SnitchContext#invoke(UpdateShardHandler,String,String,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/rule/SnitchContext#invoke(UpdateShardHandler,String,String,SolrParams).mjava","sourceNew":"  public SimpleSolrResponse invoke(UpdateShardHandler shardHandler,  final String url, String path, SolrParams params)\n      throws IOException, SolrServerException {\n    GenericSolrRequest request = new GenericSolrRequest(SolrRequest.METHOD.GET, path, params);\n    try (HttpSolrClient client = new HttpSolrClient.Builder(url).withHttpClient(shardHandler.getHttpClient())\n        .withResponseParser(new BinaryResponseParser()).build()) {\n      NamedList<Object> rsp = client.request(request);\n      request.response.nl = rsp;\n      return request.response;\n    }\n  }\n\n","sourceOld":"  public SimpleSolrResponse invoke(UpdateShardHandler shardHandler,  final String url, String path, SolrParams params)\n      throws IOException, SolrServerException {\n    GenericSolrRequest request = new GenericSolrRequest(SolrRequest.METHOD.GET, path, params);\n    try (HttpSolrClient client = new HttpSolrClient(url, shardHandler.getHttpClient(), new BinaryResponseParser())) {\n      NamedList<Object> rsp = client.request(request);\n      request.response.nl = rsp;\n      return request.response;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/rule/SnitchContext#invoke(UpdateShardHandler,String,String,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/rule/SnitchContext#invoke(UpdateShardHandler,String,String,SolrParams).mjava","sourceNew":"  public SimpleSolrResponse invoke(UpdateShardHandler shardHandler,  final String url, String path, SolrParams params)\n      throws IOException, SolrServerException {\n    GenericSolrRequest request = new GenericSolrRequest(SolrRequest.METHOD.GET, path, params);\n    try (HttpSolrClient client = new HttpSolrClient.Builder(url).withHttpClient(shardHandler.getHttpClient())\n        .withResponseParser(new BinaryResponseParser()).build()) {\n      NamedList<Object> rsp = client.request(request);\n      request.response.nl = rsp;\n      return request.response;\n    }\n  }\n\n","sourceOld":"  public SimpleSolrResponse invoke(UpdateShardHandler shardHandler,  final String url, String path, SolrParams params)\n      throws IOException, SolrServerException {\n    GenericSolrRequest request = new GenericSolrRequest(SolrRequest.METHOD.GET, path, params);\n    try (HttpSolrClient client = new HttpSolrClient(url, shardHandler.getHttpClient(), new BinaryResponseParser())) {\n      NamedList<Object> rsp = client.request(request);\n      request.response.nl = rsp;\n      return request.response;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dded3df9e710f258905cff1def2f25eb51c62e0f","date":1475158173,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/rule/ServerSnitchContext#invoke(UpdateShardHandler,String,String,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/rule/SnitchContext#invoke(UpdateShardHandler,String,String,SolrParams).mjava","sourceNew":"  public SimpleSolrResponse invoke(UpdateShardHandler shardHandler,  final String url, String path, SolrParams params)\n      throws IOException, SolrServerException {\n    GenericSolrRequest request = new GenericSolrRequest(SolrRequest.METHOD.GET, path, params);\n    try (HttpSolrClient client = new HttpSolrClient.Builder(url).withHttpClient(shardHandler.getHttpClient())\n        .withResponseParser(new BinaryResponseParser()).build()) {\n      NamedList<Object> rsp = client.request(request);\n      request.response.nl = rsp;\n      return request.response;\n    }\n  }\n\n","sourceOld":"  public SimpleSolrResponse invoke(UpdateShardHandler shardHandler,  final String url, String path, SolrParams params)\n      throws IOException, SolrServerException {\n    GenericSolrRequest request = new GenericSolrRequest(SolrRequest.METHOD.GET, path, params);\n    try (HttpSolrClient client = new HttpSolrClient.Builder(url).withHttpClient(shardHandler.getHttpClient())\n        .withResponseParser(new BinaryResponseParser()).build()) {\n      NamedList<Object> rsp = client.request(request);\n      request.response.nl = rsp;\n      return request.response;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/rule/ServerSnitchContext#invoke(UpdateShardHandler,String,String,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/rule/SnitchContext#invoke(UpdateShardHandler,String,String,SolrParams).mjava","sourceNew":"  public SimpleSolrResponse invoke(UpdateShardHandler shardHandler,  final String url, String path, SolrParams params)\n      throws IOException, SolrServerException {\n    GenericSolrRequest request = new GenericSolrRequest(SolrRequest.METHOD.GET, path, params);\n    try (HttpSolrClient client = new HttpSolrClient.Builder(url).withHttpClient(shardHandler.getHttpClient())\n        .withResponseParser(new BinaryResponseParser()).build()) {\n      NamedList<Object> rsp = client.request(request);\n      request.response.nl = rsp;\n      return request.response;\n    }\n  }\n\n","sourceOld":"  public SimpleSolrResponse invoke(UpdateShardHandler shardHandler,  final String url, String path, SolrParams params)\n      throws IOException, SolrServerException {\n    GenericSolrRequest request = new GenericSolrRequest(SolrRequest.METHOD.GET, path, params);\n    try (HttpSolrClient client = new HttpSolrClient.Builder(url).withHttpClient(shardHandler.getHttpClient())\n        .withResponseParser(new BinaryResponseParser()).build()) {\n      NamedList<Object> rsp = client.request(request);\n      request.response.nl = rsp;\n      return request.response;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/rule/ServerSnitchContext#invoke(UpdateShardHandler,String,String,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/rule/SnitchContext#invoke(UpdateShardHandler,String,String,SolrParams).mjava","sourceNew":"  public SimpleSolrResponse invoke(UpdateShardHandler shardHandler,  final String url, String path, SolrParams params)\n      throws IOException, SolrServerException {\n    GenericSolrRequest request = new GenericSolrRequest(SolrRequest.METHOD.GET, path, params);\n    try (HttpSolrClient client = new HttpSolrClient.Builder(url).withHttpClient(shardHandler.getHttpClient())\n        .withResponseParser(new BinaryResponseParser()).build()) {\n      NamedList<Object> rsp = client.request(request);\n      request.response.nl = rsp;\n      return request.response;\n    }\n  }\n\n","sourceOld":"  public SimpleSolrResponse invoke(UpdateShardHandler shardHandler,  final String url, String path, SolrParams params)\n      throws IOException, SolrServerException {\n    GenericSolrRequest request = new GenericSolrRequest(SolrRequest.METHOD.GET, path, params);\n    try (HttpSolrClient client = new HttpSolrClient.Builder(url).withHttpClient(shardHandler.getHttpClient())\n        .withResponseParser(new BinaryResponseParser()).build()) {\n      NamedList<Object> rsp = client.request(request);\n      request.response.nl = rsp;\n      return request.response;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["8d072ec09b14ad4fb38165a9f8669b911287d2b4"],"8c7a6584aa35e033d783e02c6f4eefa6ad21c7fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","dded3df9e710f258905cff1def2f25eb51c62e0f"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["8d072ec09b14ad4fb38165a9f8669b911287d2b4","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"dded3df9e710f258905cff1def2f25eb51c62e0f":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"8d072ec09b14ad4fb38165a9f8669b911287d2b4":["8c7a6584aa35e033d783e02c6f4eefa6ad21c7fe"]},"commit2Childs":{"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"8c7a6584aa35e033d783e02c6f4eefa6ad21c7fe":["8d072ec09b14ad4fb38165a9f8669b911287d2b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8c7a6584aa35e033d783e02c6f4eefa6ad21c7fe"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","dded3df9e710f258905cff1def2f25eb51c62e0f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"dded3df9e710f258905cff1def2f25eb51c62e0f":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"8d072ec09b14ad4fb38165a9f8669b911287d2b4":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}