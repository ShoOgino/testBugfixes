{"path":"solr/core/src/java/org/apache/solr/packagemanager/PackageManager#getPackageParams(String,String).mjava","commits":[{"id":"120bc33d5cbe83eca2e5fce597baf4fef208d579","date":1573735895,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/packagemanager/PackageManager#getPackageParams(String,String).mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n  Map<String, String> getPackageParams(String packageName, String collection) {\n    try {\n      return (Map<String, String>)((Map)((Map)((Map)\n          PackageUtils.getJson(solrClient.getHttpClient(), solrBaseUrl + \"/api/collections/\" + collection + \"/config/params/packages\", Map.class)\n          .get(\"response\"))\n          .get(\"params\"))\n          .get(\"packages\")).get(packageName);\n    } catch (Exception ex) {\n      // This should be because there are no parameters. Be tolerant here.\n      return Collections.emptyMap();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62d55718cd611235e975fa73a6bdf263fbd58859","date":1576386842,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/packagemanager/PackageManager#getPackageParams(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/packagemanager/PackageManager#getPackageParams(String,String).mjava","sourceNew":"  @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n  Map<String, String> getPackageParams(String packageName, String collection) {\n    try {\n      return (Map<String, String>)((Map)((Map)((Map)\n          PackageUtils.getJson(solrClient.getHttpClient(), solrBaseUrl + PackageUtils.getCollectionParamsPath(collection) + \"/packages\", Map.class)\n          .get(\"response\"))\n          .get(\"params\"))\n          .get(\"packages\")).get(packageName);\n    } catch (Exception ex) {\n      // This should be because there are no parameters. Be tolerant here.\n      return Collections.emptyMap();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n  Map<String, String> getPackageParams(String packageName, String collection) {\n    try {\n      return (Map<String, String>)((Map)((Map)((Map)\n          PackageUtils.getJson(solrClient.getHttpClient(), solrBaseUrl + \"/api/collections/\" + collection + \"/config/params/packages\", Map.class)\n          .get(\"response\"))\n          .get(\"params\"))\n          .get(\"packages\")).get(packageName);\n    } catch (Exception ex) {\n      // This should be because there are no parameters. Be tolerant here.\n      return Collections.emptyMap();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06595b0c22c7d3075c4104d3820cccf95d9d8a43","date":1576491645,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/packagemanager/PackageManager#getPackageParams(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/packagemanager/PackageManager#getPackageParams(String,String).mjava","sourceNew":"  @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n  Map<String, String> getPackageParams(String packageName, String collection) {\n    try {\n      return (Map<String, String>)((Map)((Map)((Map)\n          PackageUtils.getJson(solrClient.getHttpClient(), solrBaseUrl + PackageUtils.getCollectionParamsPath(collection) + \"/packages\", Map.class)\n          .get(\"response\"))\n          .get(\"params\"))\n          .get(\"packages\")).get(packageName);\n    } catch (Exception ex) {\n      // This should be because there are no parameters. Be tolerant here.\n      return Collections.emptyMap();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n  Map<String, String> getPackageParams(String packageName, String collection) {\n    try {\n      return (Map<String, String>)((Map)((Map)((Map)\n          PackageUtils.getJson(solrClient.getHttpClient(), solrBaseUrl + \"/api/collections/\" + collection + \"/config/params/packages\", Map.class)\n          .get(\"response\"))\n          .get(\"params\"))\n          .get(\"packages\")).get(packageName);\n    } catch (Exception ex) {\n      // This should be because there are no parameters. Be tolerant here.\n      return Collections.emptyMap();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"06595b0c22c7d3075c4104d3820cccf95d9d8a43":["120bc33d5cbe83eca2e5fce597baf4fef208d579","62d55718cd611235e975fa73a6bdf263fbd58859"],"62d55718cd611235e975fa73a6bdf263fbd58859":["120bc33d5cbe83eca2e5fce597baf4fef208d579"],"120bc33d5cbe83eca2e5fce597baf4fef208d579":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["62d55718cd611235e975fa73a6bdf263fbd58859"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["120bc33d5cbe83eca2e5fce597baf4fef208d579"],"06595b0c22c7d3075c4104d3820cccf95d9d8a43":[],"62d55718cd611235e975fa73a6bdf263fbd58859":["06595b0c22c7d3075c4104d3820cccf95d9d8a43","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"120bc33d5cbe83eca2e5fce597baf4fef208d579":["06595b0c22c7d3075c4104d3820cccf95d9d8a43","62d55718cd611235e975fa73a6bdf263fbd58859"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["06595b0c22c7d3075c4104d3820cccf95d9d8a43","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}