{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#refresh().mjava","commits":[{"id":"a371aa649cc243e82cb8677ca960a1e0232ecedf","date":1393605574,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#refresh().mjava","pathOld":"/dev/null","sourceNew":"  /** Reopens the underlying searcher; it's best to \"batch\n   *  up\" many additions/updates, and then call refresh\n   *  once in the end. */\n  public void refresh() throws IOException {\n    searcherMgr.maybeRefreshBlocking();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6549d5ea6b7b25525309b981de3ec92b4dff99d1","date":1408666035,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#refresh().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#refresh().mjava","sourceNew":"  /** Reopens the underlying searcher; it's best to \"batch\n   *  up\" many additions/updates, and then call refresh\n   *  once in the end. */\n  public void refresh() throws IOException {\n    if (searcherMgr == null) {\n      throw new IllegalStateException(\"suggester was not built\");\n    }\n    searcherMgr.maybeRefreshBlocking();\n  }\n\n","sourceOld":"  /** Reopens the underlying searcher; it's best to \"batch\n   *  up\" many additions/updates, and then call refresh\n   *  once in the end. */\n  public void refresh() throws IOException {\n    searcherMgr.maybeRefreshBlocking();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e15af9ab52794c4f3888b19ff3cf55ccea043db2","date":1479337431,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#refresh().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#refresh().mjava","sourceNew":"  /** Reopens the underlying searcher; it's best to \"batch\n   *  up\" many additions/updates, and then call refresh\n   *  once in the end. */\n  public void refresh() throws IOException {\n    if (searcherMgr == null) {\n      throw new IllegalStateException(\"suggester was not built\");\n    }\n    if (writer != null) {\n      searcherMgr.maybeRefreshBlocking();\n    }\n    // else no-op: writer was committed and closed after the index was built\n    //             and before searchMgr was constructed, so refresh is unnecessary\n  }\n\n","sourceOld":"  /** Reopens the underlying searcher; it's best to \"batch\n   *  up\" many additions/updates, and then call refresh\n   *  once in the end. */\n  public void refresh() throws IOException {\n    if (searcherMgr == null) {\n      throw new IllegalStateException(\"suggester was not built\");\n    }\n    searcherMgr.maybeRefreshBlocking();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e859e664a65796dadf8aaf65db6f66f3a885368","date":1479487334,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#refresh().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester#refresh().mjava","sourceNew":"  /** Reopens the underlying searcher; it's best to \"batch\n   *  up\" many additions/updates, and then call refresh\n   *  once in the end. */\n  public void refresh() throws IOException {\n    if (searcherMgr == null) {\n      throw new IllegalStateException(\"suggester was not built\");\n    }\n    if (writer != null) {\n      searcherMgr.maybeRefreshBlocking();\n    }\n    // else no-op: writer was committed and closed after the index was built\n    //             and before searchMgr was constructed, so refresh is unnecessary\n  }\n\n","sourceOld":"  /** Reopens the underlying searcher; it's best to \"batch\n   *  up\" many additions/updates, and then call refresh\n   *  once in the end. */\n  public void refresh() throws IOException {\n    if (searcherMgr == null) {\n      throw new IllegalStateException(\"suggester was not built\");\n    }\n    searcherMgr.maybeRefreshBlocking();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6549d5ea6b7b25525309b981de3ec92b4dff99d1":["a371aa649cc243e82cb8677ca960a1e0232ecedf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e15af9ab52794c4f3888b19ff3cf55ccea043db2":["6549d5ea6b7b25525309b981de3ec92b4dff99d1"],"2e859e664a65796dadf8aaf65db6f66f3a885368":["6549d5ea6b7b25525309b981de3ec92b4dff99d1","e15af9ab52794c4f3888b19ff3cf55ccea043db2"],"a371aa649cc243e82cb8677ca960a1e0232ecedf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e15af9ab52794c4f3888b19ff3cf55ccea043db2"]},"commit2Childs":{"6549d5ea6b7b25525309b981de3ec92b4dff99d1":["e15af9ab52794c4f3888b19ff3cf55ccea043db2","2e859e664a65796dadf8aaf65db6f66f3a885368"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a371aa649cc243e82cb8677ca960a1e0232ecedf"],"e15af9ab52794c4f3888b19ff3cf55ccea043db2":["2e859e664a65796dadf8aaf65db6f66f3a885368","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2e859e664a65796dadf8aaf65db6f66f3a885368":[],"a371aa649cc243e82cb8677ca960a1e0232ecedf":["6549d5ea6b7b25525309b981de3ec92b4dff99d1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2e859e664a65796dadf8aaf65db6f66f3a885368","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}