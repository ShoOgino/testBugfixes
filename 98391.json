{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestMultiWordSynonyms#testMultiWordSynonyms().mjava","commits":[{"id":"3db4916365e651108fa37ee03410e87f26e10547","date":1343325323,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestMultiWordSynonyms#testMultiWordSynonyms().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestMultiWordSynonyms#testMultiWordSynonyms().mjava","sourceNew":"  public void testMultiWordSynonyms() throws IOException {\n    SynonymFilterFactory factory = new SynonymFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"synonyms\", \"synonyms.txt\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new StringMockResourceLoader(\"a b c,d\"));\n    TokenStream ts = factory.create(new MockTokenizer(new StringReader(\"a e\"), MockTokenizer.WHITESPACE, false));\n    // This fails because [\"e\",\"e\"] is the value of the token stream\n    assertTokenStreamContents(ts, new String[] { \"a\", \"e\" });\n  }\n\n","sourceOld":"  public void testMultiWordSynonyms() throws IOException {\n    SynonymFilterFactory factory = new SynonymFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"synonyms\", \"synonyms.txt\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new StringMockSolrResourceLoader(\"a b c,d\"));\n    TokenStream ts = factory.create(new MockTokenizer(new StringReader(\"a e\"), MockTokenizer.WHITESPACE, false));\n    // This fails because [\"e\",\"e\"] is the value of the token stream\n    assertTokenStreamContents(ts, new String[] { \"a\", \"e\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestMultiWordSynonyms#testMultiWordSynonyms().mjava","pathOld":"/dev/null","sourceNew":"  public void testMultiWordSynonyms() throws IOException {\n    SynonymFilterFactory factory = new SynonymFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"synonyms\", \"synonyms.txt\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new StringMockResourceLoader(\"a b c,d\"));\n    TokenStream ts = factory.create(new MockTokenizer(new StringReader(\"a e\"), MockTokenizer.WHITESPACE, false));\n    // This fails because [\"e\",\"e\"] is the value of the token stream\n    assertTokenStreamContents(ts, new String[] { \"a\", \"e\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestMultiWordSynonyms#testMultiWordSynonyms().mjava","pathOld":"/dev/null","sourceNew":"  public void testMultiWordSynonyms() throws IOException {\n    SynonymFilterFactory factory = new SynonymFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"synonyms\", \"synonyms.txt\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new StringMockResourceLoader(\"a b c,d\"));\n    TokenStream ts = factory.create(new MockTokenizer(new StringReader(\"a e\"), MockTokenizer.WHITESPACE, false));\n    // This fails because [\"e\",\"e\"] is the value of the token stream\n    assertTokenStreamContents(ts, new String[] { \"a\", \"e\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestMultiWordSynonyms#testMultiWordSynonyms().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestMultiWordSynonyms#testMultiWordSynonyms().mjava","sourceNew":"  public void testMultiWordSynonyms() throws Exception {\n    Reader reader = new StringReader(\"a e\");\n    TokenStream stream = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    stream = tokenFilterFactory(\"Synonym\", TEST_VERSION_CURRENT,\n        new StringMockResourceLoader(\"a b c,d\"),\n        \"synonyms\", \"synonyms.txt\").create(stream);\n    // This fails because [\"e\",\"e\"] is the value of the token stream\n    assertTokenStreamContents(stream, new String[] { \"a\", \"e\" });\n  }\n\n","sourceOld":"  public void testMultiWordSynonyms() throws IOException {\n    SynonymFilterFactory factory = new SynonymFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"synonyms\", \"synonyms.txt\");\n    factory.setLuceneMatchVersion(TEST_VERSION_CURRENT);\n    factory.init(args);\n    factory.inform(new StringMockResourceLoader(\"a b c,d\"));\n    TokenStream ts = factory.create(new MockTokenizer(new StringReader(\"a e\"), MockTokenizer.WHITESPACE, false));\n    // This fails because [\"e\",\"e\"] is the value of the token stream\n    assertTokenStreamContents(ts, new String[] { \"a\", \"e\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestMultiWordSynonyms#testMultiWordSynonyms().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestMultiWordSynonyms#testMultiWordSynonyms().mjava","sourceNew":"  public void testMultiWordSynonyms() throws Exception {\n    Reader reader = new StringReader(\"a e\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = tokenFilterFactory(\"Synonym\", TEST_VERSION_CURRENT,\n        new StringMockResourceLoader(\"a b c,d\"),\n        \"synonyms\", \"synonyms.txt\").create(stream);\n    // This fails because [\"e\",\"e\"] is the value of the token stream\n    assertTokenStreamContents(stream, new String[] { \"a\", \"e\" });\n  }\n\n","sourceOld":"  public void testMultiWordSynonyms() throws Exception {\n    Reader reader = new StringReader(\"a e\");\n    TokenStream stream = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    stream = tokenFilterFactory(\"Synonym\", TEST_VERSION_CURRENT,\n        new StringMockResourceLoader(\"a b c,d\"),\n        \"synonyms\", \"synonyms.txt\").create(stream);\n    // This fails because [\"e\",\"e\"] is the value of the token stream\n    assertTokenStreamContents(stream, new String[] { \"a\", \"e\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19e497fe4da591a79332da97681b8017d9c61165","date":1409030374,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestMultiWordSynonyms#testMultiWordSynonyms().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestMultiWordSynonyms#testMultiWordSynonyms().mjava","sourceNew":"  public void testMultiWordSynonyms() throws Exception {\n    Reader reader = new StringReader(\"a e\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = tokenFilterFactory(\"Synonym\", Version.LATEST,\n        new StringMockResourceLoader(\"a b c,d\"),\n        \"synonyms\", \"synonyms.txt\").create(stream);\n    // This fails because [\"e\",\"e\"] is the value of the token stream\n    assertTokenStreamContents(stream, new String[] { \"a\", \"e\" });\n  }\n\n","sourceOld":"  public void testMultiWordSynonyms() throws Exception {\n    Reader reader = new StringReader(\"a e\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = tokenFilterFactory(\"Synonym\", TEST_VERSION_CURRENT,\n        new StringMockResourceLoader(\"a b c,d\"),\n        \"synonyms\", \"synonyms.txt\").create(stream);\n    // This fails because [\"e\",\"e\"] is the value of the token stream\n    assertTokenStreamContents(stream, new String[] { \"a\", \"e\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3db4916365e651108fa37ee03410e87f26e10547"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3db4916365e651108fa37ee03410e87f26e10547"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["3db4916365e651108fa37ee03410e87f26e10547"],"3db4916365e651108fa37ee03410e87f26e10547":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19e497fe4da591a79332da97681b8017d9c61165"],"19e497fe4da591a79332da97681b8017d9c61165":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":[],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["19e497fe4da591a79332da97681b8017d9c61165"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","3db4916365e651108fa37ee03410e87f26e10547"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"3db4916365e651108fa37ee03410e87f26e10547":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"19e497fe4da591a79332da97681b8017d9c61165":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}