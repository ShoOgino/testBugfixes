{"path":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","commits":[{"id":"c8d69fd793570984ecbf79a74f642e88314f225c","date":1081523219,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","pathOld":"/dev/null","sourceNew":"  public void setUp() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer\n      = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    //writer.infoStream = System.out;\n    StringBuffer buffer = new StringBuffer();\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(Field.Text(field, docFields[i]));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b9c6ad49171d39d4831b1593ee88741b7b38b042","date":1085506498,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    StringBuffer buffer = new StringBuffer();\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(Field.Text(field, docFields[i]));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer\n      = new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    //writer.infoStream = System.out;\n    StringBuffer buffer = new StringBuffer();\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(Field.Text(field, docFields[i]));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fd5b727678c6ebce3b83525b6d7aa9ce4e6caf4","date":1091994042,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(Field.Text(field, docFields[i]));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    StringBuffer buffer = new StringBuffer();\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(Field.Text(field, docFields[i]));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"715e4b45eb7889909242a8539d53783b5d95b23d","date":1115407974,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(Field.Text(field, docFields[i]));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"635d9f90d61b81e0f00e87e482ffcc471d5a446f","date":1130579302,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory);\n//System.out.println(\"set up \" + getName());\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"290c401c31db375e771805c3ba7ac5f64c7370dc","date":1192034795,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory);\n//System.out.println(\"set up \" + getName());\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory);\n//System.out.println(\"set up \" + getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0018e7a0579df5d3de71d0bd878322a7abef04d9","date":1202242049,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory);\n//System.out.println(\"set up \" + getName());\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory);\n//System.out.println(\"set up \" + getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd5947db4de866f035b932f219674c03562d904e","date":1219248396,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory);\n//System.out.println(\"set up \" + getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.TOKENIZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestSpans#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    RAMDirectory directory = new RAMDirectory();\n    IndexWriter writer= new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    for (int i = 0; i < docFields.length; i++) {\n      Document doc = new Document();\n      doc.add(new Field(field, docFields[i], Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    writer.close();\n    searcher = new IndexSearcher(directory, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b9c6ad49171d39d4831b1593ee88741b7b38b042":["c8d69fd793570984ecbf79a74f642e88314f225c"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"0a046c0c310bc77931fc8441bd920053b607dd14":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"715e4b45eb7889909242a8539d53783b5d95b23d":["9fd5b727678c6ebce3b83525b6d7aa9ce4e6caf4"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["fd5947db4de866f035b932f219674c03562d904e"],"fd5947db4de866f035b932f219674c03562d904e":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"9fd5b727678c6ebce3b83525b6d7aa9ce4e6caf4":["b9c6ad49171d39d4831b1593ee88741b7b38b042"],"1326054a8d3aa66382d49decc7f330955c9c6f71":["0a046c0c310bc77931fc8441bd920053b607dd14"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"c8d69fd793570984ecbf79a74f642e88314f225c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"290c401c31db375e771805c3ba7ac5f64c7370dc":["635d9f90d61b81e0f00e87e482ffcc471d5a446f"],"635d9f90d61b81e0f00e87e482ffcc471d5a446f":["715e4b45eb7889909242a8539d53783b5d95b23d"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"b9c6ad49171d39d4831b1593ee88741b7b38b042":["9fd5b727678c6ebce3b83525b6d7aa9ce4e6caf4"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"0a046c0c310bc77931fc8441bd920053b607dd14":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"715e4b45eb7889909242a8539d53783b5d95b23d":["635d9f90d61b81e0f00e87e482ffcc471d5a446f"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["0a046c0c310bc77931fc8441bd920053b607dd14","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"fd5947db4de866f035b932f219674c03562d904e":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"9fd5b727678c6ebce3b83525b6d7aa9ce4e6caf4":["715e4b45eb7889909242a8539d53783b5d95b23d"],"0018e7a0579df5d3de71d0bd878322a7abef04d9":["fd5947db4de866f035b932f219674c03562d904e"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"1326054a8d3aa66382d49decc7f330955c9c6f71":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"c8d69fd793570984ecbf79a74f642e88314f225c":["b9c6ad49171d39d4831b1593ee88741b7b38b042"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c8d69fd793570984ecbf79a74f642e88314f225c"],"290c401c31db375e771805c3ba7ac5f64c7370dc":["0018e7a0579df5d3de71d0bd878322a7abef04d9"],"635d9f90d61b81e0f00e87e482ffcc471d5a446f":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}