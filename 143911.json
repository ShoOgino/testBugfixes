{"path":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readFirstTargetArc(Arc[T],Arc[T]).mjava","commits":[{"id":"56da903869515527852ee21ea7ef7bfe414cd40d","date":1294224724,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readFirstTargetArc(Arc[T],Arc[T]).mjava","pathOld":"/dev/null","sourceNew":"  /** Follow the follow arc and read the first arc of its\n   *  target; this changes the provide arc (2nd arg) in-place\n   *  and returns it. */\n  public Arc<T> readFirstTargetArc(Arc<T> follow, Arc<T> arc) throws IOException {\n    //int pos = address;\n    //System.out.println(\"    readFirstTarget follow.target=\" + follow.target + \" isFinal=\" + follow.isFinal());\n    if (follow.isFinal()) {\n      // Insert \"fake\" final first arc:\n      arc.label = -1;\n      arc.output = follow.nextFinalOutput;\n      if (follow.target <= 0) {\n        arc.flags = BIT_LAST_ARC;\n      } else {\n        arc.flags = 0;\n        arc.nextArc = follow.target;\n      }\n      //System.out.println(\"    insert isFinal; nextArc=\" + follow.target + \" isLast=\" + arc.isLast() + \" output=\" + outputs.outputToString(arc.output));\n      return arc;\n    } else {\n      return readFirstRealArc(follow.target, arc);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readFirstTargetArc(Arc[T],Arc[T]).mjava","pathOld":"/dev/null","sourceNew":"  /** Follow the follow arc and read the first arc of its\n   *  target; this changes the provide arc (2nd arg) in-place\n   *  and returns it. */\n  public Arc<T> readFirstTargetArc(Arc<T> follow, Arc<T> arc) throws IOException {\n    //int pos = address;\n    //System.out.println(\"    readFirstTarget follow.target=\" + follow.target + \" isFinal=\" + follow.isFinal());\n    if (follow.isFinal()) {\n      // Insert \"fake\" final first arc:\n      arc.label = -1;\n      arc.output = follow.nextFinalOutput;\n      if (follow.target <= 0) {\n        arc.flags = BIT_LAST_ARC;\n      } else {\n        arc.flags = 0;\n        arc.nextArc = follow.target;\n      }\n      //System.out.println(\"    insert isFinal; nextArc=\" + follow.target + \" isLast=\" + arc.isLast() + \" output=\" + outputs.outputToString(arc.output));\n      return arc;\n    } else {\n      return readFirstRealArc(follow.target, arc);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readFirstTargetArc(Arc[T],Arc[T]).mjava","pathOld":"/dev/null","sourceNew":"  /** Follow the follow arc and read the first arc of its\n   *  target; this changes the provide arc (2nd arg) in-place\n   *  and returns it. */\n  public Arc<T> readFirstTargetArc(Arc<T> follow, Arc<T> arc) throws IOException {\n    //int pos = address;\n    //System.out.println(\"    readFirstTarget follow.target=\" + follow.target + \" isFinal=\" + follow.isFinal());\n    if (follow.isFinal()) {\n      // Insert \"fake\" final first arc:\n      arc.label = -1;\n      arc.output = follow.nextFinalOutput;\n      if (follow.target <= 0) {\n        arc.flags = BIT_LAST_ARC;\n      } else {\n        arc.flags = 0;\n        arc.nextArc = follow.target;\n      }\n      //System.out.println(\"    insert isFinal; nextArc=\" + follow.target + \" isLast=\" + arc.isLast() + \" output=\" + outputs.outputToString(arc.output));\n      return arc;\n    } else {\n      return readFirstRealArc(follow.target, arc);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68b7d6fb5301c56ddb6a803c8fca1dbea2d76906","date":1298298228,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readFirstTargetArc(Arc[T],Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readFirstTargetArc(Arc[T],Arc[T]).mjava","sourceNew":"  /**\n   * Follow the <code>follow</code> arc and read the first arc of its target;\n   * this changes the provided <code>arc</code> (2nd arg) in-place and returns\n   * it.\n   * \n   * @returns Returns the second argument (<code>arc</code>).\n   */\n  public Arc<T> readFirstTargetArc(Arc<T> follow, Arc<T> arc) throws IOException {\n    //int pos = address;\n    //System.out.println(\"    readFirstTarget follow.target=\" + follow.target + \" isFinal=\" + follow.isFinal());\n    if (follow.isFinal()) {\n      // Insert \"fake\" final first arc:\n      arc.label = -1;\n      arc.output = follow.nextFinalOutput;\n      if (follow.target <= 0) {\n        arc.flags = BIT_LAST_ARC;\n      } else {\n        arc.flags = 0;\n        arc.nextArc = follow.target;\n      }\n      //System.out.println(\"    insert isFinal; nextArc=\" + follow.target + \" isLast=\" + arc.isLast() + \" output=\" + outputs.outputToString(arc.output));\n      return arc;\n    } else {\n      return readFirstRealArc(follow.target, arc);\n    }\n  }\n\n","sourceOld":"  /** Follow the follow arc and read the first arc of its\n   *  target; this changes the provide arc (2nd arg) in-place\n   *  and returns it. */\n  public Arc<T> readFirstTargetArc(Arc<T> follow, Arc<T> arc) throws IOException {\n    //int pos = address;\n    //System.out.println(\"    readFirstTarget follow.target=\" + follow.target + \" isFinal=\" + follow.isFinal());\n    if (follow.isFinal()) {\n      // Insert \"fake\" final first arc:\n      arc.label = -1;\n      arc.output = follow.nextFinalOutput;\n      if (follow.target <= 0) {\n        arc.flags = BIT_LAST_ARC;\n      } else {\n        arc.flags = 0;\n        arc.nextArc = follow.target;\n      }\n      //System.out.println(\"    insert isFinal; nextArc=\" + follow.target + \" isLast=\" + arc.isLast() + \" output=\" + outputs.outputToString(arc.output));\n      return arc;\n    } else {\n      return readFirstRealArc(follow.target, arc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readFirstTargetArc(Arc[T],Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readFirstTargetArc(Arc[T],Arc[T]).mjava","sourceNew":"  /**\n   * Follow the <code>follow</code> arc and read the first arc of its target;\n   * this changes the provided <code>arc</code> (2nd arg) in-place and returns\n   * it.\n   * \n   * @returns Returns the second argument (<code>arc</code>).\n   */\n  public Arc<T> readFirstTargetArc(Arc<T> follow, Arc<T> arc) throws IOException {\n    //int pos = address;\n    //System.out.println(\"    readFirstTarget follow.target=\" + follow.target + \" isFinal=\" + follow.isFinal());\n    if (follow.isFinal()) {\n      // Insert \"fake\" final first arc:\n      arc.label = -1;\n      arc.output = follow.nextFinalOutput;\n      if (follow.target <= 0) {\n        arc.flags = BIT_LAST_ARC;\n      } else {\n        arc.flags = 0;\n        arc.nextArc = follow.target;\n      }\n      //System.out.println(\"    insert isFinal; nextArc=\" + follow.target + \" isLast=\" + arc.isLast() + \" output=\" + outputs.outputToString(arc.output));\n      return arc;\n    } else {\n      return readFirstRealArc(follow.target, arc);\n    }\n  }\n\n","sourceOld":"  /** Follow the follow arc and read the first arc of its\n   *  target; this changes the provide arc (2nd arg) in-place\n   *  and returns it. */\n  public Arc<T> readFirstTargetArc(Arc<T> follow, Arc<T> arc) throws IOException {\n    //int pos = address;\n    //System.out.println(\"    readFirstTarget follow.target=\" + follow.target + \" isFinal=\" + follow.isFinal());\n    if (follow.isFinal()) {\n      // Insert \"fake\" final first arc:\n      arc.label = -1;\n      arc.output = follow.nextFinalOutput;\n      if (follow.target <= 0) {\n        arc.flags = BIT_LAST_ARC;\n      } else {\n        arc.flags = 0;\n        arc.nextArc = follow.target;\n      }\n      //System.out.println(\"    insert isFinal; nextArc=\" + follow.target + \" isLast=\" + arc.isLast() + \" output=\" + outputs.outputToString(arc.output));\n      return arc;\n    } else {\n      return readFirstRealArc(follow.target, arc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc83a5aa5437733334022157adbd6c2754fd9fca","date":1298605476,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readFirstTargetArc(Arc[T],Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readFirstTargetArc(Arc[T],Arc[T]).mjava","sourceNew":"  /**\n   * Follow the <code>follow</code> arc and read the first arc of its target;\n   * this changes the provided <code>arc</code> (2nd arg) in-place and returns\n   * it.\n   * \n   * @return Returns the second argument (<code>arc</code>).\n   */\n  public Arc<T> readFirstTargetArc(Arc<T> follow, Arc<T> arc) throws IOException {\n    //int pos = address;\n    //System.out.println(\"    readFirstTarget follow.target=\" + follow.target + \" isFinal=\" + follow.isFinal());\n    if (follow.isFinal()) {\n      // Insert \"fake\" final first arc:\n      arc.label = -1;\n      arc.output = follow.nextFinalOutput;\n      if (follow.target <= 0) {\n        arc.flags = BIT_LAST_ARC;\n      } else {\n        arc.flags = 0;\n        arc.nextArc = follow.target;\n      }\n      //System.out.println(\"    insert isFinal; nextArc=\" + follow.target + \" isLast=\" + arc.isLast() + \" output=\" + outputs.outputToString(arc.output));\n      return arc;\n    } else {\n      return readFirstRealArc(follow.target, arc);\n    }\n  }\n\n","sourceOld":"  /**\n   * Follow the <code>follow</code> arc and read the first arc of its target;\n   * this changes the provided <code>arc</code> (2nd arg) in-place and returns\n   * it.\n   * \n   * @returns Returns the second argument (<code>arc</code>).\n   */\n  public Arc<T> readFirstTargetArc(Arc<T> follow, Arc<T> arc) throws IOException {\n    //int pos = address;\n    //System.out.println(\"    readFirstTarget follow.target=\" + follow.target + \" isFinal=\" + follow.isFinal());\n    if (follow.isFinal()) {\n      // Insert \"fake\" final first arc:\n      arc.label = -1;\n      arc.output = follow.nextFinalOutput;\n      if (follow.target <= 0) {\n        arc.flags = BIT_LAST_ARC;\n      } else {\n        arc.flags = 0;\n        arc.nextArc = follow.target;\n      }\n      //System.out.println(\"    insert isFinal; nextArc=\" + follow.target + \" isLast=\" + arc.isLast() + \" output=\" + outputs.outputToString(arc.output));\n      return arc;\n    } else {\n      return readFirstRealArc(follow.target, arc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfd60688653855da1a42cd89a1df4e6738ac079","date":1298618289,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readFirstTargetArc(Arc[T],Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readFirstTargetArc(Arc[T],Arc[T]).mjava","sourceNew":"  /**\n   * Follow the <code>follow</code> arc and read the first arc of its target;\n   * this changes the provided <code>arc</code> (2nd arg) in-place and returns\n   * it.\n   * \n   * @return Returns the second argument (<code>arc</code>).\n   */\n  public Arc<T> readFirstTargetArc(Arc<T> follow, Arc<T> arc) throws IOException {\n    //int pos = address;\n    //System.out.println(\"    readFirstTarget follow.target=\" + follow.target + \" isFinal=\" + follow.isFinal());\n    if (follow.isFinal()) {\n      // Insert \"fake\" final first arc:\n      arc.label = -1;\n      arc.output = follow.nextFinalOutput;\n      if (follow.target <= 0) {\n        arc.flags = BIT_LAST_ARC;\n      } else {\n        arc.flags = 0;\n        arc.nextArc = follow.target;\n      }\n      //System.out.println(\"    insert isFinal; nextArc=\" + follow.target + \" isLast=\" + arc.isLast() + \" output=\" + outputs.outputToString(arc.output));\n      return arc;\n    } else {\n      return readFirstRealArc(follow.target, arc);\n    }\n  }\n\n","sourceOld":"  /**\n   * Follow the <code>follow</code> arc and read the first arc of its target;\n   * this changes the provided <code>arc</code> (2nd arg) in-place and returns\n   * it.\n   * \n   * @returns Returns the second argument (<code>arc</code>).\n   */\n  public Arc<T> readFirstTargetArc(Arc<T> follow, Arc<T> arc) throws IOException {\n    //int pos = address;\n    //System.out.println(\"    readFirstTarget follow.target=\" + follow.target + \" isFinal=\" + follow.isFinal());\n    if (follow.isFinal()) {\n      // Insert \"fake\" final first arc:\n      arc.label = -1;\n      arc.output = follow.nextFinalOutput;\n      if (follow.target <= 0) {\n        arc.flags = BIT_LAST_ARC;\n      } else {\n        arc.flags = 0;\n        arc.nextArc = follow.target;\n      }\n      //System.out.println(\"    insert isFinal; nextArc=\" + follow.target + \" isLast=\" + arc.isLast() + \" output=\" + outputs.outputToString(arc.output));\n      return arc;\n    } else {\n      return readFirstRealArc(follow.target, arc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readFirstTargetArc(Arc[T],Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readFirstTargetArc(Arc[T],Arc[T]).mjava","sourceNew":"  /**\n   * Follow the <code>follow</code> arc and read the first arc of its target;\n   * this changes the provided <code>arc</code> (2nd arg) in-place and returns\n   * it.\n   * \n   * @return Returns the second argument (<code>arc</code>).\n   */\n  public Arc<T> readFirstTargetArc(Arc<T> follow, Arc<T> arc) throws IOException {\n    //int pos = address;\n    //System.out.println(\"    readFirstTarget follow.target=\" + follow.target + \" isFinal=\" + follow.isFinal());\n    if (follow.isFinal()) {\n      // Insert \"fake\" final first arc:\n      arc.label = -1;\n      arc.output = follow.nextFinalOutput;\n      if (follow.target <= 0) {\n        arc.flags = BIT_LAST_ARC;\n      } else {\n        arc.flags = 0;\n        arc.nextArc = follow.target;\n      }\n      //System.out.println(\"    insert isFinal; nextArc=\" + follow.target + \" isLast=\" + arc.isLast() + \" output=\" + outputs.outputToString(arc.output));\n      return arc;\n    } else {\n      return readFirstRealArc(follow.target, arc);\n    }\n  }\n\n","sourceOld":"  /** Follow the follow arc and read the first arc of its\n   *  target; this changes the provide arc (2nd arg) in-place\n   *  and returns it. */\n  public Arc<T> readFirstTargetArc(Arc<T> follow, Arc<T> arc) throws IOException {\n    //int pos = address;\n    //System.out.println(\"    readFirstTarget follow.target=\" + follow.target + \" isFinal=\" + follow.isFinal());\n    if (follow.isFinal()) {\n      // Insert \"fake\" final first arc:\n      arc.label = -1;\n      arc.output = follow.nextFinalOutput;\n      if (follow.target <= 0) {\n        arc.flags = BIT_LAST_ARC;\n      } else {\n        arc.flags = 0;\n        arc.nextArc = follow.target;\n      }\n      //System.out.println(\"    insert isFinal; nextArc=\" + follow.target + \" isLast=\" + arc.isLast() + \" output=\" + outputs.outputToString(arc.output));\n      return arc;\n    } else {\n      return readFirstRealArc(follow.target, arc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8be6e1e4fbbc94d90b78f175c03ff389b6949373","date":1306674752,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#readFirstTargetArc(Arc[T],Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readFirstTargetArc(Arc[T],Arc[T]).mjava","sourceNew":"  /**\n   * Follow the <code>follow</code> arc and read the first arc of its target;\n   * this changes the provided <code>arc</code> (2nd arg) in-place and returns\n   * it.\n   * \n   * @return Returns the second argument (<code>arc</code>).\n   */\n  public Arc<T> readFirstTargetArc(Arc<T> follow, Arc<T> arc) throws IOException {\n    //int pos = address;\n    //System.out.println(\"    readFirstTarget follow.target=\" + follow.target + \" isFinal=\" + follow.isFinal());\n    if (follow.isFinal()) {\n      // Insert \"fake\" final first arc:\n      arc.label = -1;\n      arc.output = follow.nextFinalOutput;\n      if (follow.target <= 0) {\n        arc.flags = BIT_LAST_ARC;\n      } else {\n        arc.flags = 0;\n        arc.nextArc = follow.target;\n      }\n      //System.out.println(\"    insert isFinal; nextArc=\" + follow.target + \" isLast=\" + arc.isLast() + \" output=\" + outputs.outputToString(arc.output));\n      return arc;\n    } else {\n      return readFirstRealArc(follow.target, arc);\n    }\n  }\n\n","sourceOld":"  /**\n   * Follow the <code>follow</code> arc and read the first arc of its target;\n   * this changes the provided <code>arc</code> (2nd arg) in-place and returns\n   * it.\n   * \n   * @return Returns the second argument (<code>arc</code>).\n   */\n  public Arc<T> readFirstTargetArc(Arc<T> follow, Arc<T> arc) throws IOException {\n    //int pos = address;\n    //System.out.println(\"    readFirstTarget follow.target=\" + follow.target + \" isFinal=\" + follow.isFinal());\n    if (follow.isFinal()) {\n      // Insert \"fake\" final first arc:\n      arc.label = -1;\n      arc.output = follow.nextFinalOutput;\n      if (follow.target <= 0) {\n        arc.flags = BIT_LAST_ARC;\n      } else {\n        arc.flags = 0;\n        arc.nextArc = follow.target;\n      }\n      //System.out.println(\"    insert isFinal; nextArc=\" + follow.target + \" isLast=\" + arc.isLast() + \" output=\" + outputs.outputToString(arc.output));\n      return arc;\n    } else {\n      return readFirstRealArc(follow.target, arc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#readFirstTargetArc(Arc[T],Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readFirstTargetArc(Arc[T],Arc[T]).mjava","sourceNew":"  /**\n   * Follow the <code>follow</code> arc and read the first arc of its target;\n   * this changes the provided <code>arc</code> (2nd arg) in-place and returns\n   * it.\n   * \n   * @return Returns the second argument (<code>arc</code>).\n   */\n  public Arc<T> readFirstTargetArc(Arc<T> follow, Arc<T> arc) throws IOException {\n    //int pos = address;\n    //System.out.println(\"    readFirstTarget follow.target=\" + follow.target + \" isFinal=\" + follow.isFinal());\n    if (follow.isFinal()) {\n      // Insert \"fake\" final first arc:\n      arc.label = -1;\n      arc.output = follow.nextFinalOutput;\n      if (follow.target <= 0) {\n        arc.flags = BIT_LAST_ARC;\n      } else {\n        arc.flags = 0;\n        arc.nextArc = follow.target;\n      }\n      //System.out.println(\"    insert isFinal; nextArc=\" + follow.target + \" isLast=\" + arc.isLast() + \" output=\" + outputs.outputToString(arc.output));\n      return arc;\n    } else {\n      return readFirstRealArc(follow.target, arc);\n    }\n  }\n\n","sourceOld":"  /**\n   * Follow the <code>follow</code> arc and read the first arc of its target;\n   * this changes the provided <code>arc</code> (2nd arg) in-place and returns\n   * it.\n   * \n   * @return Returns the second argument (<code>arc</code>).\n   */\n  public Arc<T> readFirstTargetArc(Arc<T> follow, Arc<T> arc) throws IOException {\n    //int pos = address;\n    //System.out.println(\"    readFirstTarget follow.target=\" + follow.target + \" isFinal=\" + follow.isFinal());\n    if (follow.isFinal()) {\n      // Insert \"fake\" final first arc:\n      arc.label = -1;\n      arc.output = follow.nextFinalOutput;\n      if (follow.target <= 0) {\n        arc.flags = BIT_LAST_ARC;\n      } else {\n        arc.flags = 0;\n        arc.nextArc = follow.target;\n      }\n      //System.out.println(\"    insert isFinal; nextArc=\" + follow.target + \" isLast=\" + arc.isLast() + \" output=\" + outputs.outputToString(arc.output));\n      return arc;\n    } else {\n      return readFirstRealArc(follow.target, arc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#readFirstTargetArc(Arc[T],Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#readFirstTargetArc(Arc[T],Arc[T]).mjava","sourceNew":"  /**\n   * Follow the <code>follow</code> arc and read the first arc of its target;\n   * this changes the provided <code>arc</code> (2nd arg) in-place and returns\n   * it.\n   * \n   * @return Returns the second argument (<code>arc</code>).\n   */\n  public Arc<T> readFirstTargetArc(Arc<T> follow, Arc<T> arc) throws IOException {\n    //int pos = address;\n    //System.out.println(\"    readFirstTarget follow.target=\" + follow.target + \" isFinal=\" + follow.isFinal());\n    if (follow.isFinal()) {\n      // Insert \"fake\" final first arc:\n      arc.label = -1;\n      arc.output = follow.nextFinalOutput;\n      if (follow.target <= 0) {\n        arc.flags = BIT_LAST_ARC;\n      } else {\n        arc.flags = 0;\n        arc.nextArc = follow.target;\n      }\n      //System.out.println(\"    insert isFinal; nextArc=\" + follow.target + \" isLast=\" + arc.isLast() + \" output=\" + outputs.outputToString(arc.output));\n      return arc;\n    } else {\n      return readFirstRealArc(follow.target, arc);\n    }\n  }\n\n","sourceOld":"  /**\n   * Follow the <code>follow</code> arc and read the first arc of its target;\n   * this changes the provided <code>arc</code> (2nd arg) in-place and returns\n   * it.\n   * \n   * @return Returns the second argument (<code>arc</code>).\n   */\n  public Arc<T> readFirstTargetArc(Arc<T> follow, Arc<T> arc) throws IOException {\n    //int pos = address;\n    //System.out.println(\"    readFirstTarget follow.target=\" + follow.target + \" isFinal=\" + follow.isFinal());\n    if (follow.isFinal()) {\n      // Insert \"fake\" final first arc:\n      arc.label = -1;\n      arc.output = follow.nextFinalOutput;\n      if (follow.target <= 0) {\n        arc.flags = BIT_LAST_ARC;\n      } else {\n        arc.flags = 0;\n        arc.nextArc = follow.target;\n      }\n      //System.out.println(\"    insert isFinal; nextArc=\" + follow.target + \" isLast=\" + arc.isLast() + \" output=\" + outputs.outputToString(arc.output));\n      return arc;\n    } else {\n      return readFirstRealArc(follow.target, arc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fc83a5aa5437733334022157adbd6c2754fd9fca":["68b7d6fb5301c56ddb6a803c8fca1dbea2d76906"],"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","56da903869515527852ee21ea7ef7bfe414cd40d"],"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["fc83a5aa5437733334022157adbd6c2754fd9fca"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["70ad682703b8585f5d0a637efec044d57ec05efb","fc83a5aa5437733334022157adbd6c2754fd9fca"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["fc83a5aa5437733334022157adbd6c2754fd9fca","8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"56da903869515527852ee21ea7ef7bfe414cd40d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfd60688653855da1a42cd89a1df4e6738ac079":["bde51b089eb7f86171eb3406e38a274743f9b7ac","fc83a5aa5437733334022157adbd6c2754fd9fca"],"68b7d6fb5301c56ddb6a803c8fca1dbea2d76906":["56da903869515527852ee21ea7ef7bfe414cd40d"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","56da903869515527852ee21ea7ef7bfe414cd40d"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["868da859b43505d9d2a023bfeae6dd0c795f5295","68b7d6fb5301c56ddb6a803c8fca1dbea2d76906"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["d619839baa8ce5503e496b94a9e42ad6f079293f","8be6e1e4fbbc94d90b78f175c03ff389b6949373"]},"commit2Childs":{"fc83a5aa5437733334022157adbd6c2754fd9fca":["8be6e1e4fbbc94d90b78f175c03ff389b6949373","d619839baa8ce5503e496b94a9e42ad6f079293f","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2dfd60688653855da1a42cd89a1df4e6738ac079"],"70ad682703b8585f5d0a637efec044d57ec05efb":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"56da903869515527852ee21ea7ef7bfe414cd40d":["70ad682703b8585f5d0a637efec044d57ec05efb","68b7d6fb5301c56ddb6a803c8fca1dbea2d76906","868da859b43505d9d2a023bfeae6dd0c795f5295"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","56da903869515527852ee21ea7ef7bfe414cd40d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"2dfd60688653855da1a42cd89a1df4e6738ac079":[],"68b7d6fb5301c56ddb6a803c8fca1dbea2d76906":["fc83a5aa5437733334022157adbd6c2754fd9fca","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["2dfd60688653855da1a42cd89a1df4e6738ac079"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2dfd60688653855da1a42cd89a1df4e6738ac079","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}