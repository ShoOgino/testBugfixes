{"path":"lucene/core/src/test/org/apache/lucene/util/TestLongBitSet#makeLongFixedBitSet(int[],int).mjava","commits":[{"id":"3995f83351082af8ae83bb017e63c56818fc1568","date":1392047063,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestLongBitSet#makeLongFixedBitSet(int[],int).mjava","pathOld":"/dev/null","sourceNew":"  private LongBitSet makeLongFixedBitSet(int[] a, int numBits) {\n    LongBitSet bs;\n    if (random().nextBoolean()) {\n      int bits2words = LongBitSet.bits2words(numBits);\n      long[] words = new long[bits2words + random().nextInt(100)];\n      for (int i = bits2words; i < words.length; i++) {\n        words[i] = random().nextLong();\n      }\n      bs = new LongBitSet(words, numBits);\n\n    } else {\n      bs = new LongBitSet(numBits);\n    }\n    for (int e: a) {\n      bs.set(e);\n    }\n    return bs;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af918c7c328775f9fadd5870c21f0fafc2a059cc","date":1430253435,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestLongBitSet#makeLongBitSet(int[],int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestLongBitSet#makeLongFixedBitSet(int[],int).mjava","sourceNew":"  private LongBitSet makeLongBitSet(int[] a, int numBits) {\n    LongBitSet bs;\n    if (random().nextBoolean()) {\n      int bits2words = LongBitSet.bits2words(numBits);\n      long[] words = new long[bits2words + random().nextInt(100)];\n      bs = new LongBitSet(words, numBits);\n    } else {\n      bs = new LongBitSet(numBits);\n    }\n    for (int e: a) {\n      bs.set(e);\n    }\n    return bs;\n  }\n\n","sourceOld":"  private LongBitSet makeLongFixedBitSet(int[] a, int numBits) {\n    LongBitSet bs;\n    if (random().nextBoolean()) {\n      int bits2words = LongBitSet.bits2words(numBits);\n      long[] words = new long[bits2words + random().nextInt(100)];\n      for (int i = bits2words; i < words.length; i++) {\n        words[i] = random().nextLong();\n      }\n      bs = new LongBitSet(words, numBits);\n\n    } else {\n      bs = new LongBitSet(numBits);\n    }\n    for (int e: a) {\n      bs.set(e);\n    }\n    return bs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"af918c7c328775f9fadd5870c21f0fafc2a059cc":["3995f83351082af8ae83bb017e63c56818fc1568"],"3995f83351082af8ae83bb017e63c56818fc1568":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af918c7c328775f9fadd5870c21f0fafc2a059cc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3995f83351082af8ae83bb017e63c56818fc1568"],"af918c7c328775f9fadd5870c21f0fafc2a059cc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3995f83351082af8ae83bb017e63c56818fc1568":["af918c7c328775f9fadd5870c21f0fafc2a059cc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}