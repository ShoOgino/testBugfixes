{"path":"solr/core/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testMultiThreaded().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testMultiThreaded().mjava","pathOld":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testMultiThreaded().mjava","sourceNew":"  @Test\n  public void testMultiThreaded() throws Exception {\n    UpdateRequestProcessorChain chained = h.getCore().getUpdateProcessingChain(\n        \"dedupe\");\n    SignatureUpdateProcessorFactory factory = ((SignatureUpdateProcessorFactory) chained\n        .getFactories()[0]);\n    factory.setEnabled(true);\n    Thread[] threads = null;\n    Thread[] threads2 = null;\n\n    threads = new Thread[7];\n    for (int i = 0; i < threads.length; i++) {\n      threads[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 30; i++) {\n            // h.update(adoc(\"id\", Integer.toString(1+ i), \"v_t\",\n            // \"Goodbye Dude girl!\"));\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads[i].setName(\"testThread-\" + i);\n    }\n\n    threads2 = new Thread[3];\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 10; i++) {\n            // h.update(adoc(\"id\" , Integer.toString(1+ i + 10000), \"v_t\",\n            // \"Goodbye Dude girl\"));\n            // h.update(commit());\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n              addDoc(commit());\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads2[i].setName(\"testThread2-\" + i);\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].start();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].start();\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].join();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].join();\n    }\n    SolrCore core = h.getCore();\n\n    assertU(commit());\n\n    checkNumDocs(1);\n    factory.setEnabled(false);\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreaded() throws Exception {\n    UpdateRequestProcessorChain chained = h.getCore().getUpdateProcessingChain(\n        \"dedupe\");\n    SignatureUpdateProcessorFactory factory = ((SignatureUpdateProcessorFactory) chained\n        .getFactories()[0]);\n    factory.setEnabled(true);\n    Thread[] threads = null;\n    Thread[] threads2 = null;\n\n    threads = new Thread[7];\n    for (int i = 0; i < threads.length; i++) {\n      threads[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 30; i++) {\n            // h.update(adoc(\"id\", Integer.toString(1+ i), \"v_t\",\n            // \"Goodbye Dude girl!\"));\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads[i].setName(\"testThread-\" + i);\n    }\n\n    threads2 = new Thread[3];\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 10; i++) {\n            // h.update(adoc(\"id\" , Integer.toString(1+ i + 10000), \"v_t\",\n            // \"Goodbye Dude girl\"));\n            // h.update(commit());\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n              addDoc(commit());\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads2[i].setName(\"testThread2-\" + i);\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].start();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].start();\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].join();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].join();\n    }\n    SolrCore core = h.getCore();\n\n    assertU(commit());\n\n    checkNumDocs(1);\n    factory.setEnabled(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testMultiThreaded().mjava","pathOld":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testMultiThreaded().mjava","sourceNew":"  @Test\n  public void testMultiThreaded() throws Exception {\n    UpdateRequestProcessorChain chained = h.getCore().getUpdateProcessingChain(\n        \"dedupe\");\n    SignatureUpdateProcessorFactory factory = ((SignatureUpdateProcessorFactory) chained\n        .getFactories()[0]);\n    factory.setEnabled(true);\n    Thread[] threads = null;\n    Thread[] threads2 = null;\n\n    threads = new Thread[7];\n    for (int i = 0; i < threads.length; i++) {\n      threads[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 30; i++) {\n            // h.update(adoc(\"id\", Integer.toString(1+ i), \"v_t\",\n            // \"Goodbye Dude girl!\"));\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads[i].setName(\"testThread-\" + i);\n    }\n\n    threads2 = new Thread[3];\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 10; i++) {\n            // h.update(adoc(\"id\" , Integer.toString(1+ i + 10000), \"v_t\",\n            // \"Goodbye Dude girl\"));\n            // h.update(commit());\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n              addDoc(commit());\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads2[i].setName(\"testThread2-\" + i);\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].start();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].start();\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].join();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].join();\n    }\n    SolrCore core = h.getCore();\n\n    assertU(commit());\n\n    checkNumDocs(1);\n    factory.setEnabled(false);\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreaded() throws Exception {\n    UpdateRequestProcessorChain chained = h.getCore().getUpdateProcessingChain(\n        \"dedupe\");\n    SignatureUpdateProcessorFactory factory = ((SignatureUpdateProcessorFactory) chained\n        .getFactories()[0]);\n    factory.setEnabled(true);\n    Thread[] threads = null;\n    Thread[] threads2 = null;\n\n    threads = new Thread[7];\n    for (int i = 0; i < threads.length; i++) {\n      threads[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 30; i++) {\n            // h.update(adoc(\"id\", Integer.toString(1+ i), \"v_t\",\n            // \"Goodbye Dude girl!\"));\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads[i].setName(\"testThread-\" + i);\n    }\n\n    threads2 = new Thread[3];\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 10; i++) {\n            // h.update(adoc(\"id\" , Integer.toString(1+ i + 10000), \"v_t\",\n            // \"Goodbye Dude girl\"));\n            // h.update(commit());\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n              addDoc(commit());\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads2[i].setName(\"testThread2-\" + i);\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].start();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].start();\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].join();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].join();\n    }\n    SolrCore core = h.getCore();\n\n    assertU(commit());\n\n    checkNumDocs(1);\n    factory.setEnabled(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testMultiThreaded().mjava","pathOld":"solr/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testMultiThreaded().mjava","sourceNew":"  @Test\n  public void testMultiThreaded() throws Exception {\n    UpdateRequestProcessorChain chained = h.getCore().getUpdateProcessingChain(\n        \"dedupe\");\n    SignatureUpdateProcessorFactory factory = ((SignatureUpdateProcessorFactory) chained\n        .getFactories()[0]);\n    factory.setEnabled(true);\n    Thread[] threads = null;\n    Thread[] threads2 = null;\n\n    threads = new Thread[7];\n    for (int i = 0; i < threads.length; i++) {\n      threads[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 30; i++) {\n            // h.update(adoc(\"id\", Integer.toString(1+ i), \"v_t\",\n            // \"Goodbye Dude girl!\"));\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads[i].setName(\"testThread-\" + i);\n    }\n\n    threads2 = new Thread[3];\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 10; i++) {\n            // h.update(adoc(\"id\" , Integer.toString(1+ i + 10000), \"v_t\",\n            // \"Goodbye Dude girl\"));\n            // h.update(commit());\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n              addDoc(commit());\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads2[i].setName(\"testThread2-\" + i);\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].start();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].start();\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].join();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].join();\n    }\n    SolrCore core = h.getCore();\n\n    assertU(commit());\n\n    checkNumDocs(1);\n    factory.setEnabled(false);\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreaded() throws Exception {\n    UpdateRequestProcessorChain chained = h.getCore().getUpdateProcessingChain(\n        \"dedupe\");\n    SignatureUpdateProcessorFactory factory = ((SignatureUpdateProcessorFactory) chained\n        .getFactories()[0]);\n    factory.setEnabled(true);\n    Thread[] threads = null;\n    Thread[] threads2 = null;\n\n    threads = new Thread[7];\n    for (int i = 0; i < threads.length; i++) {\n      threads[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 30; i++) {\n            // h.update(adoc(\"id\", Integer.toString(1+ i), \"v_t\",\n            // \"Goodbye Dude girl!\"));\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads[i].setName(\"testThread-\" + i);\n    }\n\n    threads2 = new Thread[3];\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 10; i++) {\n            // h.update(adoc(\"id\" , Integer.toString(1+ i + 10000), \"v_t\",\n            // \"Goodbye Dude girl\"));\n            // h.update(commit());\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n              addDoc(commit());\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads2[i].setName(\"testThread2-\" + i);\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].start();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].start();\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].join();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].join();\n    }\n    SolrCore core = h.getCore();\n\n    assertU(commit());\n\n    checkNumDocs(1);\n    factory.setEnabled(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testMultiThreaded().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testMultiThreaded().mjava","sourceNew":"  @Test\n  public void testMultiThreaded() throws Exception {\n    UpdateRequestProcessorChain chained = h.getCore().getUpdateProcessingChain(\n        \"dedupe\");\n    SignatureUpdateProcessorFactory factory = ((SignatureUpdateProcessorFactory) chained\n        .getFactories()[0]);\n    factory.setEnabled(true);\n    Thread[] threads = null;\n    Thread[] threads2 = null;\n\n    threads = new Thread[7];\n    for (int i = 0; i < threads.length; i++) {\n      threads[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 30; i++) {\n            // h.update(adoc(\"id\", Integer.toString(1+ i), \"v_t\",\n            // \"Goodbye Dude girl!\"));\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads[i].setName(\"testThread-\" + i);\n    }\n\n    threads2 = new Thread[3];\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 10; i++) {\n            // h.update(adoc(\"id\" , Integer.toString(1+ i + 10000), \"v_t\",\n            // \"Goodbye Dude girl\"));\n            // h.update(commit());\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n              addDoc(commit());\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads2[i].setName(\"testThread2-\" + i);\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].start();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].start();\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].join();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].join();\n    }\n    SolrCore core = h.getCore();\n\n    assertU(commit());\n\n    checkNumDocs(1);\n    factory.setEnabled(false);\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreaded() throws Exception {\n    UpdateRequestProcessorChain chained = h.getCore().getUpdateProcessingChain(\n        \"dedupe\");\n    SignatureUpdateProcessorFactory factory = ((SignatureUpdateProcessorFactory) chained\n        .getFactories()[0]);\n    factory.setEnabled(true);\n    Thread[] threads = null;\n    Thread[] threads2 = null;\n\n    threads = new Thread[7];\n    for (int i = 0; i < threads.length; i++) {\n      threads[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 30; i++) {\n            // h.update(adoc(\"id\", Integer.toString(1+ i), \"v_t\",\n            // \"Goodbye Dude girl!\"));\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads[i].setName(\"testThread-\" + i);\n    }\n\n    threads2 = new Thread[3];\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 10; i++) {\n            // h.update(adoc(\"id\" , Integer.toString(1+ i + 10000), \"v_t\",\n            // \"Goodbye Dude girl\"));\n            // h.update(commit());\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n              addDoc(commit());\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads2[i].setName(\"testThread2-\" + i);\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].start();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].start();\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].join();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].join();\n    }\n    SolrCore core = h.getCore();\n\n    assertU(commit());\n\n    checkNumDocs(1);\n    factory.setEnabled(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testMultiThreaded().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testMultiThreaded().mjava","sourceNew":"  @Test\n  public void testMultiThreaded() throws Exception {\n    UpdateRequestProcessorChain chained = h.getCore().getUpdateProcessingChain(\n        \"dedupe\");\n    SignatureUpdateProcessorFactory factory = ((SignatureUpdateProcessorFactory) chained\n        .getFactories()[0]);\n    factory.setEnabled(true);\n    Thread[] threads = null;\n    Thread[] threads2 = null;\n\n    threads = new Thread[7];\n    for (int i = 0; i < threads.length; i++) {\n      threads[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 30; i++) {\n            // h.update(adoc(\"id\", Integer.toString(1+ i), \"v_t\",\n            // \"Goodbye Dude girl!\"));\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads[i].setName(\"testThread-\" + i);\n    }\n\n    threads2 = new Thread[3];\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 10; i++) {\n            // h.update(adoc(\"id\" , Integer.toString(1+ i + 10000), \"v_t\",\n            // \"Goodbye Dude girl\"));\n            // h.update(commit());\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n              addDoc(commit());\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads2[i].setName(\"testThread2-\" + i);\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].start();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].start();\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].join();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].join();\n    }\n    SolrCore core = h.getCore();\n\n    assertU(commit());\n\n    checkNumDocs(1);\n    factory.setEnabled(false);\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreaded() throws Exception {\n    UpdateRequestProcessorChain chained = h.getCore().getUpdateProcessingChain(\n        \"dedupe\");\n    SignatureUpdateProcessorFactory factory = ((SignatureUpdateProcessorFactory) chained\n        .getFactories()[0]);\n    factory.setEnabled(true);\n    Thread[] threads = null;\n    Thread[] threads2 = null;\n\n    threads = new Thread[7];\n    for (int i = 0; i < threads.length; i++) {\n      threads[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 30; i++) {\n            // h.update(adoc(\"id\", Integer.toString(1+ i), \"v_t\",\n            // \"Goodbye Dude girl!\"));\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads[i].setName(\"testThread-\" + i);\n    }\n\n    threads2 = new Thread[3];\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 10; i++) {\n            // h.update(adoc(\"id\" , Integer.toString(1+ i + 10000), \"v_t\",\n            // \"Goodbye Dude girl\"));\n            // h.update(commit());\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n              addDoc(commit());\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads2[i].setName(\"testThread2-\" + i);\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].start();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].start();\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].join();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].join();\n    }\n    SolrCore core = h.getCore();\n\n    assertU(commit());\n\n    checkNumDocs(1);\n    factory.setEnabled(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"733eaf468f18297b1bcc51031353bdfdd1913bdf","date":1456928540,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testMultiThreaded().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testMultiThreaded().mjava","sourceNew":"  @Test\n  public void testMultiThreaded() throws Exception {\n    UpdateRequestProcessorChain chained = h.getCore().getUpdateProcessingChain(\n        \"dedupe\");\n    SignatureUpdateProcessorFactory factory = ((SignatureUpdateProcessorFactory) chained.getProcessors().get(0));\n    factory.setEnabled(true);\n    Thread[] threads = null;\n    Thread[] threads2 = null;\n\n    threads = new Thread[7];\n    for (int i = 0; i < threads.length; i++) {\n      threads[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 30; i++) {\n            // h.update(adoc(\"id\", Integer.toString(1+ i), \"v_t\",\n            // \"Goodbye Dude girl!\"));\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads[i].setName(\"testThread-\" + i);\n    }\n\n    threads2 = new Thread[3];\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 10; i++) {\n            // h.update(adoc(\"id\" , Integer.toString(1+ i + 10000), \"v_t\",\n            // \"Goodbye Dude girl\"));\n            // h.update(commit());\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n              addDoc(commit());\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads2[i].setName(\"testThread2-\" + i);\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].start();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].start();\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].join();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].join();\n    }\n    SolrCore core = h.getCore();\n\n    assertU(commit());\n\n    checkNumDocs(1);\n    factory.setEnabled(false);\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreaded() throws Exception {\n    UpdateRequestProcessorChain chained = h.getCore().getUpdateProcessingChain(\n        \"dedupe\");\n    SignatureUpdateProcessorFactory factory = ((SignatureUpdateProcessorFactory) chained\n        .getFactories()[0]);\n    factory.setEnabled(true);\n    Thread[] threads = null;\n    Thread[] threads2 = null;\n\n    threads = new Thread[7];\n    for (int i = 0; i < threads.length; i++) {\n      threads[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 30; i++) {\n            // h.update(adoc(\"id\", Integer.toString(1+ i), \"v_t\",\n            // \"Goodbye Dude girl!\"));\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads[i].setName(\"testThread-\" + i);\n    }\n\n    threads2 = new Thread[3];\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 10; i++) {\n            // h.update(adoc(\"id\" , Integer.toString(1+ i + 10000), \"v_t\",\n            // \"Goodbye Dude girl\"));\n            // h.update(commit());\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n              addDoc(commit());\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads2[i].setName(\"testThread2-\" + i);\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].start();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].start();\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].join();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].join();\n    }\n    SolrCore core = h.getCore();\n\n    assertU(commit());\n\n    checkNumDocs(1);\n    factory.setEnabled(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testMultiThreaded().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/SignatureUpdateProcessorFactoryTest#testMultiThreaded().mjava","sourceNew":"  @Test\n  public void testMultiThreaded() throws Exception {\n    UpdateRequestProcessorChain chained = h.getCore().getUpdateProcessingChain(\n        \"dedupe\");\n    SignatureUpdateProcessorFactory factory = ((SignatureUpdateProcessorFactory) chained.getProcessors().get(0));\n    factory.setEnabled(true);\n    Thread[] threads = null;\n    Thread[] threads2 = null;\n\n    threads = new Thread[7];\n    for (int i = 0; i < threads.length; i++) {\n      threads[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 30; i++) {\n            // h.update(adoc(\"id\", Integer.toString(1+ i), \"v_t\",\n            // \"Goodbye Dude girl!\"));\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads[i].setName(\"testThread-\" + i);\n    }\n\n    threads2 = new Thread[3];\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 10; i++) {\n            // h.update(adoc(\"id\" , Integer.toString(1+ i + 10000), \"v_t\",\n            // \"Goodbye Dude girl\"));\n            // h.update(commit());\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n              addDoc(commit());\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads2[i].setName(\"testThread2-\" + i);\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].start();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].start();\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].join();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].join();\n    }\n    SolrCore core = h.getCore();\n\n    assertU(commit());\n\n    checkNumDocs(1);\n    factory.setEnabled(false);\n  }\n\n","sourceOld":"  @Test\n  public void testMultiThreaded() throws Exception {\n    UpdateRequestProcessorChain chained = h.getCore().getUpdateProcessingChain(\n        \"dedupe\");\n    SignatureUpdateProcessorFactory factory = ((SignatureUpdateProcessorFactory) chained\n        .getFactories()[0]);\n    factory.setEnabled(true);\n    Thread[] threads = null;\n    Thread[] threads2 = null;\n\n    threads = new Thread[7];\n    for (int i = 0; i < threads.length; i++) {\n      threads[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 30; i++) {\n            // h.update(adoc(\"id\", Integer.toString(1+ i), \"v_t\",\n            // \"Goodbye Dude girl!\"));\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads[i].setName(\"testThread-\" + i);\n    }\n\n    threads2 = new Thread[3];\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i] = new Thread() {\n\n        @Override\n        public void run() {\n          for (int i = 0; i < 10; i++) {\n            // h.update(adoc(\"id\" , Integer.toString(1+ i + 10000), \"v_t\",\n            // \"Goodbye Dude girl\"));\n            // h.update(commit());\n            try {\n              addDoc(adoc(\"id\", Integer.toString(1 + i), \"v_t\",\n                  \"Goodbye Dude girl!\"));\n              addDoc(commit());\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      };\n\n      threads2[i].setName(\"testThread2-\" + i);\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].start();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].start();\n    }\n\n    for (int i = 0; i < threads.length; i++) {\n      threads[i].join();\n    }\n\n    for (int i = 0; i < threads2.length; i++) {\n      threads2[i].join();\n    }\n    SolrCore core = h.getCore();\n\n    assertU(commit());\n\n    checkNumDocs(1);\n    factory.setEnabled(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["c26f00b574427b55127e869b935845554afde1fa","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["19275ba31e621f6da1b83bf13af75233876fd3d4","733eaf468f18297b1bcc51031353bdfdd1913bdf"],"733eaf468f18297b1bcc51031353bdfdd1913bdf":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cf1a614098b46c9c22afebd7b898ae4d1d2fc273","733eaf468f18297b1bcc51031353bdfdd1913bdf"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"733eaf468f18297b1bcc51031353bdfdd1913bdf":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}