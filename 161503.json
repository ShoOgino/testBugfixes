{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#checkForAlias(String,String).mjava","commits":[{"id":"1cfa38e36fa296bb93d77df7d5556257dffa4535","date":1362635543,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#checkForAlias(String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void checkForAlias(String name, String value) {\n\n    long now = System.currentTimeMillis();\n    long timeout = now + 30000;\n    boolean success = false;\n    Aliases aliases = null;\n    while (System.currentTimeMillis() < timeout) {\n      aliases = zkStateReader.getAliases();\n      String collections = aliases.getCollectionAlias(name);\n      if (collections != null && collections.equals(value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd5bc858b8426d40bbe90b94120ead37c77d7954","date":1393812525,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#checkForAlias(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#checkForAlias(String,String).mjava","sourceNew":"  private void checkForAlias(String name, String value) {\n\n    long now = System.nanoTime();\n    long timeout = now + TimeUnit.NANOSECONDS.convert(30, TimeUnit.SECONDS);\n    boolean success = false;\n    Aliases aliases = null;\n    while (System.nanoTime() < timeout) {\n      aliases = zkStateReader.getAliases();\n      String collections = aliases.getCollectionAlias(name);\n      if (collections != null && collections.equals(value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","sourceOld":"  private void checkForAlias(String name, String value) {\n\n    long now = System.currentTimeMillis();\n    long timeout = now + 30000;\n    boolean success = false;\n    Aliases aliases = null;\n    while (System.currentTimeMillis() < timeout) {\n      aliases = zkStateReader.getAliases();\n      String collections = aliases.getCollectionAlias(name);\n      if (collections != null && collections.equals(value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","date":1438841252,"type":5,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#checkForAlias(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#checkForAlias(String,String).mjava","sourceNew":"  private void checkForAlias(String name, String value) {\n\n    long now = System.nanoTime();\n    long timeout = now + TimeUnit.NANOSECONDS.convert(30, TimeUnit.SECONDS);\n    boolean success = false;\n    Aliases aliases = null;\n    while (System.nanoTime() < timeout) {\n      aliases = zkStateReader.getAliases();\n      String collections = aliases.getCollectionAlias(name);\n      if (collections != null && collections.equals(value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","sourceOld":"  private void checkForAlias(String name, String value) {\n\n    long now = System.nanoTime();\n    long timeout = now + TimeUnit.NANOSECONDS.convert(30, TimeUnit.SECONDS);\n    boolean success = false;\n    Aliases aliases = null;\n    while (System.nanoTime() < timeout) {\n      aliases = zkStateReader.getAliases();\n      String collections = aliases.getCollectionAlias(name);\n      if (collections != null && collections.equals(value)) {\n        success = true;\n        break;\n      }\n    }\n    if (!success) {\n      log.warn(\"Timeout waiting to be notified of Alias change...\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["fd5bc858b8426d40bbe90b94120ead37c77d7954"],"1cfa38e36fa296bb93d77df7d5556257dffa4535":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"fd5bc858b8426d40bbe90b94120ead37c77d7954":["1cfa38e36fa296bb93d77df7d5556257dffa4535"]},"commit2Childs":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1cfa38e36fa296bb93d77df7d5556257dffa4535":["fd5bc858b8426d40bbe90b94120ead37c77d7954"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1cfa38e36fa296bb93d77df7d5556257dffa4535"],"fd5bc858b8426d40bbe90b94120ead37c77d7954":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}