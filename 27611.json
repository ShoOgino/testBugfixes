{"path":"solr/core/src/java/org/apache/solr/schema/BoolField.BoolFieldSource#getValues(Map,LeafReaderContext).mjava","commits":[{"id":"248f6ecc900c3a5633fd5ca6f564ea8b717720da","date":1588863846,"type":0,"author":"Mike Drob","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/BoolField.BoolFieldSource#getValues(Map,LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n      final SortedDocValues sindex = DocValues.getSorted(readerContext.reader(), field);\n\n      // figure out what ord maps to true\n      int nord = sindex.getValueCount();\n      // if no values in the segment, default trueOrd to something other then -1 (missing)\n      int tord = -2;\n      for (int i=0; i<nord; i++) {\n        final BytesRef br = sindex.lookupOrd(i);\n        if (br.length==1 && br.bytes[br.offset]=='T') {\n          tord = i;\n          break;\n        }\n      }\n\n      final int trueOrd = tord;\n\n      return new BoolDocValues(this) {\n\n        private int getOrdForDoc(int doc) throws IOException {\n          if (doc > sindex.docID()) {\n            sindex.advance(doc);\n          }\n          if (doc == sindex.docID()) {\n            return sindex.ordValue();\n          } else {\n            return -1;\n          }\n        }\n\n        @Override\n        public boolean boolVal(int doc) throws IOException {\n          return getOrdForDoc(doc) == trueOrd;\n        }\n\n        @Override\n        public boolean exists(int doc) throws IOException {\n          return getOrdForDoc(doc) != -1;\n        }\n\n        @Override\n        public ValueFiller getValueFiller() {\n          return new ValueFiller() {\n            private final MutableValueBool mval = new MutableValueBool();\n\n            @Override\n            public MutableValue getValue() {\n              return mval;\n            }\n\n            @Override\n            public void fillValue(int doc) throws IOException {\n              int ord = getOrdForDoc(doc);\n              mval.value = (ord == trueOrd);\n              mval.exists = (ord != -1);\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06a8891f085f71282bb3ece1b1732b68f07813a3","date":1591912889,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/BoolField.BoolFieldSource#getValues(Map,LeafReaderContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/BoolField.BoolFieldSource#getValues(Map,LeafReaderContext).mjava","sourceNew":"    @Override\n    public FunctionValues getValues(@SuppressWarnings({\"rawtypes\"})Map context, LeafReaderContext readerContext) throws IOException {\n      final SortedDocValues sindex = DocValues.getSorted(readerContext.reader(), field);\n\n      // figure out what ord maps to true\n      int nord = sindex.getValueCount();\n      // if no values in the segment, default trueOrd to something other then -1 (missing)\n      int tord = -2;\n      for (int i=0; i<nord; i++) {\n        final BytesRef br = sindex.lookupOrd(i);\n        if (br.length==1 && br.bytes[br.offset]=='T') {\n          tord = i;\n          break;\n        }\n      }\n\n      final int trueOrd = tord;\n\n      return new BoolDocValues(this) {\n\n        private int getOrdForDoc(int doc) throws IOException {\n          if (doc > sindex.docID()) {\n            sindex.advance(doc);\n          }\n          if (doc == sindex.docID()) {\n            return sindex.ordValue();\n          } else {\n            return -1;\n          }\n        }\n\n        @Override\n        public boolean boolVal(int doc) throws IOException {\n          return getOrdForDoc(doc) == trueOrd;\n        }\n\n        @Override\n        public boolean exists(int doc) throws IOException {\n          return getOrdForDoc(doc) != -1;\n        }\n\n        @Override\n        public ValueFiller getValueFiller() {\n          return new ValueFiller() {\n            private final MutableValueBool mval = new MutableValueBool();\n\n            @Override\n            public MutableValue getValue() {\n              return mval;\n            }\n\n            @Override\n            public void fillValue(int doc) throws IOException {\n              int ord = getOrdForDoc(doc);\n              mval.value = (ord == trueOrd);\n              mval.exists = (ord != -1);\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n      final SortedDocValues sindex = DocValues.getSorted(readerContext.reader(), field);\n\n      // figure out what ord maps to true\n      int nord = sindex.getValueCount();\n      // if no values in the segment, default trueOrd to something other then -1 (missing)\n      int tord = -2;\n      for (int i=0; i<nord; i++) {\n        final BytesRef br = sindex.lookupOrd(i);\n        if (br.length==1 && br.bytes[br.offset]=='T') {\n          tord = i;\n          break;\n        }\n      }\n\n      final int trueOrd = tord;\n\n      return new BoolDocValues(this) {\n\n        private int getOrdForDoc(int doc) throws IOException {\n          if (doc > sindex.docID()) {\n            sindex.advance(doc);\n          }\n          if (doc == sindex.docID()) {\n            return sindex.ordValue();\n          } else {\n            return -1;\n          }\n        }\n\n        @Override\n        public boolean boolVal(int doc) throws IOException {\n          return getOrdForDoc(doc) == trueOrd;\n        }\n\n        @Override\n        public boolean exists(int doc) throws IOException {\n          return getOrdForDoc(doc) != -1;\n        }\n\n        @Override\n        public ValueFiller getValueFiller() {\n          return new ValueFiller() {\n            private final MutableValueBool mval = new MutableValueBool();\n\n            @Override\n            public MutableValue getValue() {\n              return mval;\n            }\n\n            @Override\n            public void fillValue(int doc) throws IOException {\n              int ord = getOrdForDoc(doc);\n              mval.value = (ord == trueOrd);\n              mval.exists = (ord != -1);\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"06a8891f085f71282bb3ece1b1732b68f07813a3":["248f6ecc900c3a5633fd5ca6f564ea8b717720da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06a8891f085f71282bb3ece1b1732b68f07813a3"]},"commit2Childs":{"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["06a8891f085f71282bb3ece1b1732b68f07813a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["248f6ecc900c3a5633fd5ca6f564ea8b717720da"],"06a8891f085f71282bb3ece1b1732b68f07813a3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}