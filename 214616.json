{"path":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#testNothingAnalyzes().mjava","commits":[{"id":"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2","date":1475611903,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#testNothingAnalyzes().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Not empty but nothing analyzes. Ensures we address null term-vectors.\n   */\n  public void testNothingAnalyzes() throws Exception {\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, indexAnalyzer);\n\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \" \", fieldType));// just a space! (thus not empty)\n    doc.add(newTextField(\"id\", \"id\", Field.Store.YES));\n    iw.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"body\", \"something\", fieldType));\n    iw.addDocument(doc);\n\n    IndexReader ir = iw.getReader();\n    iw.close();\n\n    IndexSearcher searcher = newSearcher(ir);\n    UnifiedHighlighter highlighter = new UnifiedHighlighter(searcher, indexAnalyzer);\n    int docID = searcher.search(new TermQuery(new Term(\"id\", \"id\")), 1).scoreDocs[0].doc;\n\n    Query query = new PrefixQuery(new Term(\"body\", \"nonexistent\"));\n    int[] docIDs = new int[1];\n    docIDs[0] = docID;\n    String snippets[] = highlighter.highlightFields(new String[]{\"body\"}, query, docIDs, new int[]{2}).get(\"body\");\n    assertEquals(1, snippets.length);\n    assertEquals(\" \", snippets[0]);\n\n    ir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#testNothingAnalyzes().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Not empty but nothing analyzes. Ensures we address null term-vectors.\n   */\n  public void testNothingAnalyzes() throws Exception {\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, indexAnalyzer);\n\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \" \", fieldType));// just a space! (thus not empty)\n    doc.add(newTextField(\"id\", \"id\", Field.Store.YES));\n    iw.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"body\", \"something\", fieldType));\n    iw.addDocument(doc);\n\n    IndexReader ir = iw.getReader();\n    iw.close();\n\n    IndexSearcher searcher = newSearcher(ir);\n    UnifiedHighlighter highlighter = new UnifiedHighlighter(searcher, indexAnalyzer);\n    int docID = searcher.search(new TermQuery(new Term(\"id\", \"id\")), 1).scoreDocs[0].doc;\n\n    Query query = new PrefixQuery(new Term(\"body\", \"nonexistent\"));\n    int[] docIDs = new int[1];\n    docIDs[0] = docID;\n    String snippets[] = highlighter.highlightFields(new String[]{\"body\"}, query, docIDs, new int[]{2}).get(\"body\");\n    assertEquals(1, snippets.length);\n    assertEquals(\" \", snippets[0]);\n\n    ir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571","date":1515642580,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#testNothingAnalyzes().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#testNothingAnalyzes().mjava","sourceNew":"  /**\n   * Not empty but nothing analyzes. Ensures we address null term-vectors.\n   */\n  public void testNothingAnalyzes() throws Exception {\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, indexAnalyzer);\n\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \" \", fieldType));// just a space! (thus not empty)\n    doc.add(newTextField(\"id\", \"id\", Field.Store.YES));\n    iw.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"body\", \"something\", fieldType));\n    iw.addDocument(doc);\n\n    IndexReader ir = iw.getReader();\n    iw.close();\n\n    IndexSearcher searcher = newSearcher(ir);\n    UnifiedHighlighter highlighter = randomUnifiedHighlighter(searcher, indexAnalyzer);\n    int docID = searcher.search(new TermQuery(new Term(\"id\", \"id\")), 1).scoreDocs[0].doc;\n\n    Query query = new PrefixQuery(new Term(\"body\", \"nonexistent\"));\n    int[] docIDs = new int[1];\n    docIDs[0] = docID;\n    String snippets[] = highlighter.highlightFields(new String[]{\"body\"}, query, docIDs, new int[]{2}).get(\"body\");\n    assertEquals(1, snippets.length);\n    assertEquals(\" \", snippets[0]);\n\n    ir.close();\n  }\n\n","sourceOld":"  /**\n   * Not empty but nothing analyzes. Ensures we address null term-vectors.\n   */\n  public void testNothingAnalyzes() throws Exception {\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, indexAnalyzer);\n\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \" \", fieldType));// just a space! (thus not empty)\n    doc.add(newTextField(\"id\", \"id\", Field.Store.YES));\n    iw.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"body\", \"something\", fieldType));\n    iw.addDocument(doc);\n\n    IndexReader ir = iw.getReader();\n    iw.close();\n\n    IndexSearcher searcher = newSearcher(ir);\n    UnifiedHighlighter highlighter = new UnifiedHighlighter(searcher, indexAnalyzer);\n    int docID = searcher.search(new TermQuery(new Term(\"id\", \"id\")), 1).scoreDocs[0].doc;\n\n    Query query = new PrefixQuery(new Term(\"body\", \"nonexistent\"));\n    int[] docIDs = new int[1];\n    docIDs[0] = docID;\n    String snippets[] = highlighter.highlightFields(new String[]{\"body\"}, query, docIDs, new int[]{2}).get(\"body\");\n    assertEquals(1, snippets.length);\n    assertEquals(\" \", snippets[0]);\n\n    ir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#testNothingAnalyzes().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#testNothingAnalyzes().mjava","sourceNew":"  /**\n   * Not empty but nothing analyzes. Ensures we address null term-vectors.\n   */\n  public void testNothingAnalyzes() throws Exception {\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, indexAnalyzer);\n\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \" \", fieldType));// just a space! (thus not empty)\n    doc.add(newTextField(\"id\", \"id\", Field.Store.YES));\n    iw.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"body\", \"something\", fieldType));\n    iw.addDocument(doc);\n\n    IndexReader ir = iw.getReader();\n    iw.close();\n\n    IndexSearcher searcher = newSearcher(ir);\n    UnifiedHighlighter highlighter = randomUnifiedHighlighter(searcher, indexAnalyzer);\n    int docID = searcher.search(new TermQuery(new Term(\"id\", \"id\")), 1).scoreDocs[0].doc;\n\n    Query query = new PrefixQuery(new Term(\"body\", \"nonexistent\"));\n    int[] docIDs = new int[1];\n    docIDs[0] = docID;\n    String snippets[] = highlighter.highlightFields(new String[]{\"body\"}, query, docIDs, new int[]{2}).get(\"body\");\n    assertEquals(1, snippets.length);\n    assertEquals(\" \", snippets[0]);\n\n    ir.close();\n  }\n\n","sourceOld":"  /**\n   * Not empty but nothing analyzes. Ensures we address null term-vectors.\n   */\n  public void testNothingAnalyzes() throws Exception {\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, indexAnalyzer);\n\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \" \", fieldType));// just a space! (thus not empty)\n    doc.add(newTextField(\"id\", \"id\", Field.Store.YES));\n    iw.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"body\", \"something\", fieldType));\n    iw.addDocument(doc);\n\n    IndexReader ir = iw.getReader();\n    iw.close();\n\n    IndexSearcher searcher = newSearcher(ir);\n    UnifiedHighlighter highlighter = new UnifiedHighlighter(searcher, indexAnalyzer);\n    int docID = searcher.search(new TermQuery(new Term(\"id\", \"id\")), 1).scoreDocs[0].doc;\n\n    Query query = new PrefixQuery(new Term(\"body\", \"nonexistent\"));\n    int[] docIDs = new int[1];\n    docIDs[0] = docID;\n    String snippets[] = highlighter.highlightFields(new String[]{\"body\"}, query, docIDs, new int[]{2}).get(\"body\");\n    assertEquals(1, snippets.length);\n    assertEquals(\" \", snippets[0]);\n\n    ir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2","eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571":["1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2":["b94236357aaa22b76c10629851fe4e376e0cea82","eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"eef54e3d232eae0e9fc18d75e9b0c3d9ce04b571":["b94236357aaa22b76c10629851fe4e376e0cea82"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}