{"path":"solr/core/src/java/org/apache/solr/handler/export/SortQueue#SortQueue(int,SortDoc).mjava","commits":[{"id":"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80","date":1532111887,"type":0,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/export/SortQueue#SortQueue(int,SortDoc).mjava","pathOld":"/dev/null","sourceNew":"  public SortQueue(int len, SortDoc proto) {\n    super(len);\n    this.proto = proto;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d810b19e2ed4ec2e2b3d79844c7d5dea82794ee","date":1593704090,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/export/SortQueue#SortQueue(int,SortDoc).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/export/SortQueue#SortQueue(int,SortDoc).mjava","sourceNew":"  public SortQueue(int maxSize, SortDoc proto) {\n    this.proto = proto;\n    final int heapSize;\n    if (0 == maxSize) {\n      // We allocate 1 extra to avoid if statement in top()\n      heapSize = 2;\n    } else {\n      if (maxSize > ArrayUtil.MAX_ARRAY_LENGTH) {\n        // Don't wrap heapSize to -1, in this case, which\n        // causes a confusing NegativeArraySizeException.\n        // Note that very likely this will simply then hit\n        // an OOME, but at least that's more indicative to\n        // caller that this values is too big.  We don't +1\n        // in this case, but it's very unlikely in practice\n        // one will actually insert this many objects into\n        // the PQ:\n        // Throw exception to prevent confusing OOME:\n        throw new IllegalArgumentException(\"maxSize must be <= \" + ArrayUtil.MAX_ARRAY_LENGTH + \"; got: \" + maxSize);\n      } else {\n        // NOTE: we add +1 because all access to heap is\n        // 1-based not 0-based.  heap[0] is unused.\n        heapSize = maxSize + 1;\n      }\n    }\n    this.heap = new SortDoc[heapSize];\n    this.maxSize = maxSize;\n  }\n\n","sourceOld":"  public SortQueue(int len, SortDoc proto) {\n    super(len);\n    this.proto = proto;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1d810b19e2ed4ec2e2b3d79844c7d5dea82794ee":["16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80"],"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d810b19e2ed4ec2e2b3d79844c7d5dea82794ee"]},"commit2Childs":{"1d810b19e2ed4ec2e2b3d79844c7d5dea82794ee":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80":["1d810b19e2ed4ec2e2b3d79844c7d5dea82794ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}