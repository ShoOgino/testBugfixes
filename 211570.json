{"path":"lucene/src/java/org/apache/lucene/index/CompositeIndexReader#lastModified(Directory).mjava","commits":[{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompositeIndexReader#lastModified(Directory).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the time the index in the named directory was last modified. \n   * Do not use this to check whether the reader is still up-to-date, use\n   * {@link #isCurrent()} instead. \n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static long lastModified(final Directory directory) throws CorruptIndexException, IOException {\n    return ((Long) new SegmentInfos.FindSegmentsFile(directory) {\n      @Override\n      public Object doBody(String segmentFileName) throws IOException {\n        return Long.valueOf(directory.fileModified(segmentFileName));\n      }\n    }.run()).longValue();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"893d07555f01912f57b453a320e4d46363a31b50","date":1327312526,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#lastModified(Directory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/CompositeIndexReader#lastModified(Directory).mjava","sourceNew":"  /**\n   * Returns the time the index in the named directory was last modified. \n   * Do not use this to check whether the reader is still up-to-date, use\n   * {@link #isCurrent()} instead. \n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static long lastModified(final Directory directory) throws CorruptIndexException, IOException {\n    return ((Long) new SegmentInfos.FindSegmentsFile(directory) {\n      @Override\n      public Object doBody(String segmentFileName) throws IOException {\n        return Long.valueOf(directory.fileModified(segmentFileName));\n      }\n    }.run()).longValue();\n  }\n\n","sourceOld":"  /**\n   * Returns the time the index in the named directory was last modified. \n   * Do not use this to check whether the reader is still up-to-date, use\n   * {@link #isCurrent()} instead. \n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static long lastModified(final Directory directory) throws CorruptIndexException, IOException {\n    return ((Long) new SegmentInfos.FindSegmentsFile(directory) {\n      @Override\n      public Object doBody(String segmentFileName) throws IOException {\n        return Long.valueOf(directory.fileModified(segmentFileName));\n      }\n    }.run()).longValue();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"893d07555f01912f57b453a320e4d46363a31b50":["2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"893d07555f01912f57b453a320e4d46363a31b50":[],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["893d07555f01912f57b453a320e4d46363a31b50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["893d07555f01912f57b453a320e4d46363a31b50","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}