{"path":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#indexSolrInputDocumentsDirectly(SolrInputDocument...).mjava","commits":[{"id":"c5ce7c704ca874aa623a99f2669737b52ec71cfc","date":1528728510,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#indexSolrInputDocumentsDirectly(SolrInputDocument...).mjava","pathOld":"/dev/null","sourceNew":"  private void indexSolrInputDocumentsDirectly(SolrInputDocument ... docs) throws IOException {\n    SolrQueryRequest coreReq = new LocalSolrQueryRequest(h.getCore(), new ModifiableSolrParams());\n    AddUpdateCommand updateCmd = new AddUpdateCommand(coreReq);\n    for (SolrInputDocument doc: docs) {\n      long version = getNewClock();\n      updateCmd.setVersion(Math.abs(version));\n      updateCmd.solrDoc = doc;\n      h.getCore().getUpdateHandler().addDoc(updateCmd);\n      updateCmd.clear();\n    }\n    assertU(commit());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"422960e680e017b363073770cda4fb73588e87f4","date":1529380784,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#indexSolrInputDocumentsDirectly(SolrInputDocument...).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#indexSolrInputDocumentsDirectly(SolrInputDocument...).mjava","sourceNew":"  private void indexSolrInputDocumentsDirectly(SolrInputDocument ... docs) throws IOException {\n    SolrQueryRequest coreReq = new LocalSolrQueryRequest(h.getCore(), new ModifiableSolrParams());\n    AddUpdateCommand updateCmd = new AddUpdateCommand(coreReq);\n    for (SolrInputDocument doc: docs) {\n      updateCmd.solrDoc = doc;\n      h.getCore().getUpdateHandler().addDoc(updateCmd);\n      updateCmd.clear();\n    }\n    assertU(commit());\n  }\n\n","sourceOld":"  private void indexSolrInputDocumentsDirectly(SolrInputDocument ... docs) throws IOException {\n    SolrQueryRequest coreReq = new LocalSolrQueryRequest(h.getCore(), new ModifiableSolrParams());\n    AddUpdateCommand updateCmd = new AddUpdateCommand(coreReq);\n    for (SolrInputDocument doc: docs) {\n      long version = getNewClock();\n      updateCmd.setVersion(Math.abs(version));\n      updateCmd.solrDoc = doc;\n      h.getCore().getUpdateHandler().addDoc(updateCmd);\n      updateCmd.clear();\n    }\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#indexSolrInputDocumentsDirectly(SolrInputDocument...).mjava","pathOld":"/dev/null","sourceNew":"  private void indexSolrInputDocumentsDirectly(SolrInputDocument ... docs) throws IOException {\n    SolrQueryRequest coreReq = new LocalSolrQueryRequest(h.getCore(), new ModifiableSolrParams());\n    AddUpdateCommand updateCmd = new AddUpdateCommand(coreReq);\n    for (SolrInputDocument doc: docs) {\n      updateCmd.solrDoc = doc;\n      h.getCore().getUpdateHandler().addDoc(updateCmd);\n      updateCmd.clear();\n    }\n    assertU(commit());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#indexSolrInputDocumentsDirectly(SolrInputDocument...).mjava","pathOld":"/dev/null","sourceNew":"  private void indexSolrInputDocumentsDirectly(SolrInputDocument ... docs) throws IOException {\n    SolrQueryRequest coreReq = new LocalSolrQueryRequest(h.getCore(), new ModifiableSolrParams());\n    AddUpdateCommand updateCmd = new AddUpdateCommand(coreReq);\n    for (SolrInputDocument doc: docs) {\n      updateCmd.solrDoc = doc;\n      h.getCore().getUpdateHandler().addDoc(updateCmd);\n      updateCmd.clear();\n    }\n    assertU(commit());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","422960e680e017b363073770cda4fb73588e87f4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"422960e680e017b363073770cda4fb73588e87f4":["c5ce7c704ca874aa623a99f2669737b52ec71cfc"],"c5ce7c704ca874aa623a99f2669737b52ec71cfc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["422960e680e017b363073770cda4fb73588e87f4"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","422960e680e017b363073770cda4fb73588e87f4"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","c5ce7c704ca874aa623a99f2669737b52ec71cfc","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"422960e680e017b363073770cda4fb73588e87f4":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"c5ce7c704ca874aa623a99f2669737b52ec71cfc":["422960e680e017b363073770cda4fb73588e87f4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}