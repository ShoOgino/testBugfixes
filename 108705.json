{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/PrecisionEvaluator#doWork(Object,Object).mjava","commits":[{"id":"93f1e2e97b1cdca850c22c24102ab066aa1cdede","date":1509557735,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/PrecisionEvaluator#doWork(Object,Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object doWork(Object value, Object value2) {\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      return ((List<?>)value).stream().map(innerValue -> doWork(innerValue, ((Number)value2).intValue())).collect(Collectors.toList());\n    }\n    else{\n      return Precision.round(((Number)value).doubleValue(), ((Number)value2).intValue());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c43c3dc5bb48bb7b5754b276264c3080d1665b2","date":1576000625,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/PrecisionEvaluator#doWork(Object,Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/PrecisionEvaluator#doWork(Object,Object).mjava","sourceNew":"  @Override\n  public Object doWork(Object value, Object value2) {\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      return ((List<?>)value).stream().map(innerValue -> doWork(innerValue, ((Number)value2).intValue())).collect(Collectors.toList());\n    } else if(value instanceof Matrix) {\n      int p = ((Number)value2).intValue();\n      Matrix matrix = (Matrix)value;\n      double[][] data = matrix.getData();\n      for(int i=0; i<data.length; ++i) {\n        for(int j=0; j < data[i].length; j++) {\n          data[i][j] = Precision.round(data[i][j], p);\n        }\n      }\n\n      return matrix;\n    }\n    else{\n      return Precision.round(((Number)value).doubleValue(), ((Number)value2).intValue());\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object doWork(Object value, Object value2) {\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      return ((List<?>)value).stream().map(innerValue -> doWork(innerValue, ((Number)value2).intValue())).collect(Collectors.toList());\n    }\n    else{\n      return Precision.round(((Number)value).doubleValue(), ((Number)value2).intValue());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a229cb50768e988c50a2106bdae3a92154f428bf","date":1576051038,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/PrecisionEvaluator#doWork(Object,Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/PrecisionEvaluator#doWork(Object,Object).mjava","sourceNew":"  @Override\n  public Object doWork(Object value, Object value2) {\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      return ((List<?>)value).stream().map(innerValue -> doWork(innerValue, ((Number)value2).intValue())).collect(Collectors.toList());\n    } else if(value instanceof Matrix) {\n      int p = ((Number)value2).intValue();\n      Matrix matrix = (Matrix)value;\n      double[][] data = matrix.getData();\n      for(int i=0; i<data.length; ++i) {\n        for(int j=0; j < data[i].length; j++) {\n          data[i][j] = Precision.round(data[i][j], p);\n        }\n      }\n\n      return matrix;\n    }\n    else{\n      return Precision.round(((Number)value).doubleValue(), ((Number)value2).intValue());\n    }\n  }\n\n","sourceOld":"  @Override\n  public Object doWork(Object value, Object value2) {\n    if(null == value){\n      return null;\n    }\n    else if(value instanceof List){\n      return ((List<?>)value).stream().map(innerValue -> doWork(innerValue, ((Number)value2).intValue())).collect(Collectors.toList());\n    }\n    else{\n      return Precision.round(((Number)value).doubleValue(), ((Number)value2).intValue());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4c43c3dc5bb48bb7b5754b276264c3080d1665b2":["93f1e2e97b1cdca850c22c24102ab066aa1cdede"],"a229cb50768e988c50a2106bdae3a92154f428bf":["93f1e2e97b1cdca850c22c24102ab066aa1cdede","4c43c3dc5bb48bb7b5754b276264c3080d1665b2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"93f1e2e97b1cdca850c22c24102ab066aa1cdede":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4c43c3dc5bb48bb7b5754b276264c3080d1665b2"]},"commit2Childs":{"4c43c3dc5bb48bb7b5754b276264c3080d1665b2":["a229cb50768e988c50a2106bdae3a92154f428bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a229cb50768e988c50a2106bdae3a92154f428bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["93f1e2e97b1cdca850c22c24102ab066aa1cdede"],"93f1e2e97b1cdca850c22c24102ab066aa1cdede":["4c43c3dc5bb48bb7b5754b276264c3080d1665b2","a229cb50768e988c50a2106bdae3a92154f428bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a229cb50768e988c50a2106bdae3a92154f428bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}