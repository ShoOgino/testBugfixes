{"path":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner#JettySolrRunner(String,Properties,JettyConfig,boolean).mjava","commits":[{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":0,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner#JettySolrRunner(String,Properties,JettyConfig,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Construct a JettySolrRunner\n   *\n   * After construction, you must start the jetty with {@link #start()}\n   *\n   * @param solrHome            the solrHome to use\n   * @param nodeProperties      the container properties\n   * @param config         the configuration\n   * @param enableProxy       enables proxy feature to disable connections\n   */\n  public JettySolrRunner(String solrHome, Properties nodeProperties, JettyConfig config, boolean enableProxy) {\n    this.enableProxy = enableProxy;\n    this.solrHome = solrHome;\n    this.config = config;\n    this.nodeProperties = nodeProperties;\n    \n    if (enableProxy) {\n      try {\n        proxy = new SocketProxy(0, config.sslConfig != null && config.sslConfig.isSSLMode());\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n      setProxyPort(proxy.getListenPort());\n    }\n\n    this.init(this.config.port);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner#JettySolrRunner(String,Properties,JettyConfig,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner#JettySolrRunner(String,Properties,JettyConfig,boolean).mjava","sourceNew":"  /**\n   * Construct a JettySolrRunner\n   *\n   * After construction, you must start the jetty with {@link #start()}\n   *\n   * @param solrHome            the solrHome to use\n   * @param nodeProperties      the container properties\n   * @param config         the configuration\n   * @param enableProxy       enables proxy feature to disable connections\n   */\n  public JettySolrRunner(String solrHome, Properties nodeProperties, JettyConfig config, boolean enableProxy) {\n    this.enableProxy = enableProxy;\n    this.solrHome = solrHome;\n    this.config = config;\n    this.nodeProperties = nodeProperties;\n\n    if (enableProxy) {\n      try {\n        proxy = new SocketProxy(0, config.sslConfig != null && config.sslConfig.isSSLMode());\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n      setProxyPort(proxy.getListenPort());\n    }\n\n    this.init(this.config.port);\n  }\n\n","sourceOld":"  /**\n   * Construct a JettySolrRunner\n   *\n   * After construction, you must start the jetty with {@link #start()}\n   *\n   * @param solrHome            the solrHome to use\n   * @param nodeProperties      the container properties\n   * @param config         the configuration\n   * @param enableProxy       enables proxy feature to disable connections\n   */\n  public JettySolrRunner(String solrHome, Properties nodeProperties, JettyConfig config, boolean enableProxy) {\n    this.enableProxy = enableProxy;\n    this.solrHome = solrHome;\n    this.config = config;\n    this.nodeProperties = nodeProperties;\n    \n    if (enableProxy) {\n      try {\n        proxy = new SocketProxy(0, config.sslConfig != null && config.sslConfig.isSSLMode());\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n      setProxyPort(proxy.getListenPort());\n    }\n\n    this.init(this.config.port);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"]},"commit2Childs":{"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}