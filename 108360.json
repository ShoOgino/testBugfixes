{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/Aliases#toJSON().mjava","commits":[{"id":"6b824daa61db3f30b91a22213d6c04e1fa2e2b06","date":1508385744,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Aliases#toJSON().mjava","pathOld":"/dev/null","sourceNew":"  /** Serialize to ZooKeeper. */\n  public byte[] toJSON() {\n    if (collectionAliasListMap.isEmpty()) {\n      return null;\n    } else {\n      return Utils.toJSON(aliasMap);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"215e40821821b2df2e69355e208532c05ef095a5","date":1510858642,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Aliases#toJSON().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Aliases#toJSON().mjava","sourceNew":"  /**\n   * Serialize our state.\n   */\n  public byte[] toJSON() {\n    if (collectionAliases.isEmpty()) {\n      assert collectionAliasMetadata.isEmpty();\n      return null;\n    } else {\n      Map<String,Map> tmp = new LinkedHashMap<>();\n      tmp.put(COLLECTION, convertMapOfListToMapOfCommaDelimited(collectionAliases));\n      if (!collectionAliasMetadata.isEmpty()) {\n        tmp.put(COLLECTION_METADATA, collectionAliasMetadata);\n      }\n      return Utils.toJSON(tmp);\n    }\n  }\n\n","sourceOld":"  /** Serialize to ZooKeeper. */\n  public byte[] toJSON() {\n    if (collectionAliasListMap.isEmpty()) {\n      return null;\n    } else {\n      return Utils.toJSON(aliasMap);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767","date":1520865397,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Aliases#toJSON().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Aliases#toJSON().mjava","sourceNew":"  /**\n   * Serialize our state.\n   */\n  public byte[] toJSON() {\n    if (collectionAliases.isEmpty()) {\n      assert collectionAliasProperties.isEmpty();\n      return null;\n    } else {\n      Map<String,Map> tmp = new LinkedHashMap<>();\n      tmp.put(COLLECTION, convertMapOfListToMapOfCommaDelimited(collectionAliases));\n      if (!collectionAliasProperties.isEmpty()) {\n        tmp.put(COLLECTION_METADATA, collectionAliasProperties);\n      }\n      return Utils.toJSON(tmp);\n    }\n  }\n\n","sourceOld":"  /**\n   * Serialize our state.\n   */\n  public byte[] toJSON() {\n    if (collectionAliases.isEmpty()) {\n      assert collectionAliasMetadata.isEmpty();\n      return null;\n    } else {\n      Map<String,Map> tmp = new LinkedHashMap<>();\n      tmp.put(COLLECTION, convertMapOfListToMapOfCommaDelimited(collectionAliases));\n      if (!collectionAliasMetadata.isEmpty()) {\n        tmp.put(COLLECTION_METADATA, collectionAliasMetadata);\n      }\n      return Utils.toJSON(tmp);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7dfea4f7c80813344b0152e37fc18b31369e8ff","date":1592136683,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/Aliases#toJSON().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/Aliases#toJSON().mjava","sourceNew":"  /**\n   * Serialize our state.\n   */\n  public byte[] toJSON() {\n    if (collectionAliases.isEmpty()) {\n      assert collectionAliasProperties.isEmpty();\n      return null;\n    } else {\n      @SuppressWarnings({\"rawtypes\"})\n      Map<String,Map> tmp = new LinkedHashMap<>();\n      tmp.put(COLLECTION, convertMapOfListToMapOfCommaDelimited(collectionAliases));\n      if (!collectionAliasProperties.isEmpty()) {\n        tmp.put(COLLECTION_METADATA, collectionAliasProperties);\n      }\n      return Utils.toJSON(tmp);\n    }\n  }\n\n","sourceOld":"  /**\n   * Serialize our state.\n   */\n  public byte[] toJSON() {\n    if (collectionAliases.isEmpty()) {\n      assert collectionAliasProperties.isEmpty();\n      return null;\n    } else {\n      Map<String,Map> tmp = new LinkedHashMap<>();\n      tmp.put(COLLECTION, convertMapOfListToMapOfCommaDelimited(collectionAliases));\n      if (!collectionAliasProperties.isEmpty()) {\n        tmp.put(COLLECTION_METADATA, collectionAliasProperties);\n      }\n      return Utils.toJSON(tmp);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767":["215e40821821b2df2e69355e208532c05ef095a5"],"215e40821821b2df2e69355e208532c05ef095a5":["6b824daa61db3f30b91a22213d6c04e1fa2e2b06"],"6b824daa61db3f30b91a22213d6c04e1fa2e2b06":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a7dfea4f7c80813344b0152e37fc18b31369e8ff"]},"commit2Childs":{"6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767":["a7dfea4f7c80813344b0152e37fc18b31369e8ff"],"215e40821821b2df2e69355e208532c05ef095a5":["6f29e9eb6c1655cd0b273f3c0dcdf43bc0822767"],"6b824daa61db3f30b91a22213d6c04e1fa2e2b06":["215e40821821b2df2e69355e208532c05ef095a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6b824daa61db3f30b91a22213d6c04e1fa2e2b06"],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}