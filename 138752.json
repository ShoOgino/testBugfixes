{"path":"solr/core/src/java/org/apache/solr/core/RequestHandlers#[T-extends-SolrRequestHandler]_getAll(Class[T]).mjava","commits":[{"id":"a3b687d77563d946578f099495d70e55c92f3f1d","date":1373111282,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestHandlers#[T-extends-SolrRequestHandler]_getAll(Class[T]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/RequestHandlers#getAll(Class).mjava","sourceNew":"  /**\n   * @return a Map of all registered handlers of the specified type.\n   */\n  public <T extends SolrRequestHandler> Map<String,T> getAll(Class<T> clazz) {\n    Map<String,T> result = new HashMap<String,T>(7);\n    for (Map.Entry<String,SolrRequestHandler> e : handlers.entrySet()) {\n      if(clazz.isInstance(e.getValue())) result.put(e.getKey(), clazz.cast(e.getValue()));\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * @return a Map of all registered handlers of the specified type.\n   */\n  public Map<String,SolrRequestHandler> getAll(Class clazz) {\n    Map<String,SolrRequestHandler> result \n      = new HashMap<String,SolrRequestHandler>(7);\n    for (Map.Entry<String,SolrRequestHandler> e : handlers.entrySet()) {\n      if(clazz.isInstance(e.getValue())) result.put(e.getKey(), e.getValue());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestHandlers#[T-extends-SolrRequestHandler]_getAll(Class[T]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @return a Map of all registered handlers of the specified type.\n   */\n  public <T extends SolrRequestHandler> Map<String,T> getAll(Class<T> clazz) {\n    Map<String,T> result = new HashMap<String,T>(7);\n    for (Map.Entry<String,SolrRequestHandler> e : handlers.entrySet()) {\n      if(clazz.isInstance(e.getValue())) result.put(e.getKey(), clazz.cast(e.getValue()));\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestHandlers#[T-extends-SolrRequestHandler]_getAll(Class[T]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/RequestHandlers#[T-extends-SolrRequestHandler]_getAll(Class[T]).mjava","sourceNew":"  /**\n   * @return a Map of all registered handlers of the specified type.\n   */\n  public <T extends SolrRequestHandler> Map<String,T> getAll(Class<T> clazz) {\n    Map<String,T> result = new HashMap<>(7);\n    for (Map.Entry<String,SolrRequestHandler> e : handlers.entrySet()) {\n      if(clazz.isInstance(e.getValue())) result.put(e.getKey(), clazz.cast(e.getValue()));\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * @return a Map of all registered handlers of the specified type.\n   */\n  public <T extends SolrRequestHandler> Map<String,T> getAll(Class<T> clazz) {\n    Map<String,T> result = new HashMap<String,T>(7);\n    for (Map.Entry<String,SolrRequestHandler> e : handlers.entrySet()) {\n      if(clazz.isInstance(e.getValue())) result.put(e.getKey(), clazz.cast(e.getValue()));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9aea0485ecacb6734c17da2d02569816c23a69c1","date":1425707735,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/RequestHandlers#[T-extends-SolrRequestHandler]_getAll(Class[T]).mjava","sourceNew":null,"sourceOld":"  /**\n   * @return a Map of all registered handlers of the specified type.\n   */\n  public <T extends SolrRequestHandler> Map<String,T> getAll(Class<T> clazz) {\n    Map<String,T> result = new HashMap<>(7);\n    for (Map.Entry<String,SolrRequestHandler> e : handlers.entrySet()) {\n      if(clazz.isInstance(e.getValue())) result.put(e.getKey(), clazz.cast(e.getValue()));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/RequestHandlers#[T-extends-SolrRequestHandler]_getAll(Class[T]).mjava","sourceNew":null,"sourceOld":"  /**\n   * @return a Map of all registered handlers of the specified type.\n   */\n  public <T extends SolrRequestHandler> Map<String,T> getAll(Class<T> clazz) {\n    Map<String,T> result = new HashMap<>(7);\n    for (Map.Entry<String,SolrRequestHandler> e : handlers.entrySet()) {\n      if(clazz.isInstance(e.getValue())) result.put(e.getKey(), clazz.cast(e.getValue()));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["a3b687d77563d946578f099495d70e55c92f3f1d"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","9aea0485ecacb6734c17da2d02569816c23a69c1"],"a3b687d77563d946578f099495d70e55c92f3f1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a3b687d77563d946578f099495d70e55c92f3f1d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9aea0485ecacb6734c17da2d02569816c23a69c1":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9aea0485ecacb6734c17da2d02569816c23a69c1"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9aea0485ecacb6734c17da2d02569816c23a69c1"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a3b687d77563d946578f099495d70e55c92f3f1d":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3b687d77563d946578f099495d70e55c92f3f1d","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}