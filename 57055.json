{"path":"client/java/solrj/src/org/apache/solr/client/solrj/impl/XMLResponseParser#XMLResponseParser().mjava","commits":[{"id":"acdd729ace9db5d0803eea4849ddc3c2ba196127","date":1181861605,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/impl/XMLResponseParser#XMLResponseParser().mjava","pathOld":"/dev/null","sourceNew":"  public XMLResponseParser()\n  {\n    factory = XMLInputFactory.newInstance();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e4b76c0ba6d3b84b475247b1210a43c9345e569","date":1191604284,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/impl/XMLResponseParser#XMLResponseParser().mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/impl/XMLResponseParser#XMLResponseParser().mjava","sourceNew":"  public XMLResponseParser()\n  {\n    factory = XMLInputFactory.newInstance();\n    try {\n      // The java 1.6 bundled stax parser (sjsxp) does not currently have a thread-safe\n      // XMLInputFactory, as that implementation tries to cache and reuse the\n      // XMLStreamReader.  Setting the parser-specific \"reuse-instance\" property to false\n      // prevents this.\n      // All other known open-source stax parsers (and the bea ref impl)\n      // have thread-safe factories.\n      factory.setProperty(\"reuse-instance\", Boolean.FALSE);\n    }\n    catch( IllegalArgumentException ex ) {\n      // Other implementations will likely throw this exception since \"reuse-instance\"\n      // isimplementation specific.\n      log.fine( \"Unable to set the 'reuse-instance' property for the input factory: \"+factory );\n    }\n  }\n\n","sourceOld":"  public XMLResponseParser()\n  {\n    factory = XMLInputFactory.newInstance();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f9e70cea495aaf83300e16f5027ed8cb2da59fd","date":1201238296,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/impl/XMLResponseParser#XMLResponseParser().mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/impl/XMLResponseParser#XMLResponseParser().mjava","sourceNew":"  public XMLResponseParser() {}\n\n","sourceOld":"  public XMLResponseParser()\n  {\n    factory = XMLInputFactory.newInstance();\n    try {\n      // The java 1.6 bundled stax parser (sjsxp) does not currently have a thread-safe\n      // XMLInputFactory, as that implementation tries to cache and reuse the\n      // XMLStreamReader.  Setting the parser-specific \"reuse-instance\" property to false\n      // prevents this.\n      // All other known open-source stax parsers (and the bea ref impl)\n      // have thread-safe factories.\n      factory.setProperty(\"reuse-instance\", Boolean.FALSE);\n    }\n    catch( IllegalArgumentException ex ) {\n      // Other implementations will likely throw this exception since \"reuse-instance\"\n      // isimplementation specific.\n      log.fine( \"Unable to set the 'reuse-instance' property for the input factory: \"+factory );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/impl/XMLResponseParser#XMLResponseParser().mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/impl/XMLResponseParser#XMLResponseParser().mjava","sourceNew":"  public XMLResponseParser() {}\n\n","sourceOld":"  public XMLResponseParser() {}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["4f9e70cea495aaf83300e16f5027ed8cb2da59fd"],"2e4b76c0ba6d3b84b475247b1210a43c9345e569":["acdd729ace9db5d0803eea4849ddc3c2ba196127"],"acdd729ace9db5d0803eea4849ddc3c2ba196127":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4f9e70cea495aaf83300e16f5027ed8cb2da59fd":["2e4b76c0ba6d3b84b475247b1210a43c9345e569"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":[],"2e4b76c0ba6d3b84b475247b1210a43c9345e569":["4f9e70cea495aaf83300e16f5027ed8cb2da59fd"],"acdd729ace9db5d0803eea4849ddc3c2ba196127":["2e4b76c0ba6d3b84b475247b1210a43c9345e569"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["acdd729ace9db5d0803eea4849ddc3c2ba196127"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4f9e70cea495aaf83300e16f5027ed8cb2da59fd":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e3602d5eab954caecc726ab136ad580ac1ceb917","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}