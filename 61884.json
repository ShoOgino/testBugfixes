{"path":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKG.TermFacet#randomSortParam(Random).mjava","commits":[{"id":"92910727264a23a47b7a6c94b0f75d655537b9ea","date":1540414655,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKG.TermFacet#randomSortParam(Random).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestCloudJSONFacetSKG.TermFacet#randomSortParam(Random).mjava","sourceNew":"    /**\n     * picks a random value for the \"sort\" param, biased in favor of interesting test cases\n     *\n     * @return a sort string (w/direction), or null to specify nothing (trigger default behavior)\n     * @see #randomLimitParam\n     */\n    public static String randomSortParam(Random r) {\n\n      // IMPORTANT!!!\n      // if this method is modified to produce new sorts, make sure to update\n      // randomLimitParam to account for them if they are impacted by SOLR-12556\n      final String dir = random().nextBoolean() ? \"asc\" : \"desc\";\n      switch(r.nextInt(4)) {\n        case 0: return null;\n        case 1: return \"count \" + dir;\n        case 2: return \"skg \" + dir;\n        case 3: return \"index \" + dir;\n        default: throw new RuntimeException(\"Broken case statement\");\n      }\n    }\n\n","sourceOld":"    /**\n     * picks a random value for the \"sort\" param, biased in favor of interesting test cases\n     *\n     * @return a sort string (w/direction), or null to specify nothing (trigger default behavior)\n     * @see #randomLimitParam\n     */\n    public static String randomSortParam(Random r) {\n\n      // IMPORTANT!!!\n      // if this method is modified to produce new sorts, make sure to update\n      // randomLimitParam to account for them if they are impacted by SOLR-12556\n      final String dir = random().nextBoolean() ? \"asc\" : \"desc\";\n      switch(r.nextInt(4)) {\n        case 0: return null;\n        case 1: return \"count \" + dir;\n        case 2: return \"skg \" + dir;\n        case 3: return \"index \" + dir;\n        default: throw new RuntimeException(\"Broken case statement\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5ec3c464e62e57df598ba20e010313bf6d5d7b4","date":1589998565,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKG.TermFacet#randomSortParam(Random).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKG.TermFacet#randomSortParam(Random).mjava","sourceNew":"    /**\n     * picks a random value for the \"sort\" param, biased in favor of interesting test cases\n     *\n     * @return a sort string (w/direction), or null to specify nothing (trigger default behavior)\n     * @see #randomLimitParam\n     * @see #randomPrelimSortParam\n     */\n    public static String randomSortParam(Random r) {\n\n      // IMPORTANT!!!\n      // if this method is modified to produce new sorts, make sure to update\n      // randomLimitParam to account for them if they are impacted by SOLR-12556\n      final String dir = random().nextBoolean() ? \"asc\" : \"desc\";\n      switch(r.nextInt(4)) {\n        case 0: return null;\n        case 1: return \"count \" + dir;\n        case 2: return \"skg \" + dir;\n        case 3: return \"index \" + dir;\n        default: throw new RuntimeException(\"Broken case statement\");\n      }\n    }\n\n","sourceOld":"    /**\n     * picks a random value for the \"sort\" param, biased in favor of interesting test cases\n     *\n     * @return a sort string (w/direction), or null to specify nothing (trigger default behavior)\n     * @see #randomLimitParam\n     */\n    public static String randomSortParam(Random r) {\n\n      // IMPORTANT!!!\n      // if this method is modified to produce new sorts, make sure to update\n      // randomLimitParam to account for them if they are impacted by SOLR-12556\n      final String dir = random().nextBoolean() ? \"asc\" : \"desc\";\n      switch(r.nextInt(4)) {\n        case 0: return null;\n        case 1: return \"count \" + dir;\n        case 2: return \"skg \" + dir;\n        case 3: return \"index \" + dir;\n        default: throw new RuntimeException(\"Broken case statement\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22d2c45da6e47ff0ada29a8f98566b76f0b278de","date":1591372739,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKG.TermFacet#randomSortParam(Random).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestCloudJSONFacetSKG.TermFacet#randomSortParam(Random).mjava","sourceNew":"    /**\n     * picks a random value for the \"sort\" param, biased in favor of interesting test cases\n     *\n     * @return a sort string (w/direction), or null to specify nothing (trigger default behavior)\n     * @see #randomLimitParam\n     * @see #randomAllBucketsParam\n     * @see #randomPrelimSortParam\n     */\n    public static String randomSortParam(Random r) {\n\n      // IMPORTANT!!!\n      // if this method is modified to produce new sorts, make sure to update\n      // randomLimitParam to account for them if they are impacted by SOLR-12556\n      final String dir = random().nextBoolean() ? \"asc\" : \"desc\";\n      switch(r.nextInt(4)) {\n        case 0: return null;\n        case 1: return \"count \" + dir;\n        case 2: return \"skg \" + dir;\n        case 3: return \"index \" + dir;\n        default: throw new RuntimeException(\"Broken case statement\");\n      }\n    }\n\n","sourceOld":"    /**\n     * picks a random value for the \"sort\" param, biased in favor of interesting test cases\n     *\n     * @return a sort string (w/direction), or null to specify nothing (trigger default behavior)\n     * @see #randomLimitParam\n     * @see #randomPrelimSortParam\n     */\n    public static String randomSortParam(Random r) {\n\n      // IMPORTANT!!!\n      // if this method is modified to produce new sorts, make sure to update\n      // randomLimitParam to account for them if they are impacted by SOLR-12556\n      final String dir = random().nextBoolean() ? \"asc\" : \"desc\";\n      switch(r.nextInt(4)) {\n        case 0: return null;\n        case 1: return \"count \" + dir;\n        case 2: return \"skg \" + dir;\n        case 3: return \"index \" + dir;\n        default: throw new RuntimeException(\"Broken case statement\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c5ec3c464e62e57df598ba20e010313bf6d5d7b4":["92910727264a23a47b7a6c94b0f75d655537b9ea"],"22d2c45da6e47ff0ada29a8f98566b76f0b278de":["c5ec3c464e62e57df598ba20e010313bf6d5d7b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"92910727264a23a47b7a6c94b0f75d655537b9ea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["22d2c45da6e47ff0ada29a8f98566b76f0b278de"]},"commit2Childs":{"c5ec3c464e62e57df598ba20e010313bf6d5d7b4":["22d2c45da6e47ff0ada29a8f98566b76f0b278de"],"22d2c45da6e47ff0ada29a8f98566b76f0b278de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["92910727264a23a47b7a6c94b0f75d655537b9ea"],"92910727264a23a47b7a6c94b0f75d655537b9ea":["c5ec3c464e62e57df598ba20e010313bf6d5d7b4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}