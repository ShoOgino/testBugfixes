{"path":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#setSlop(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#setSlop(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MultiPhraseQuery#setSlop(int).mjava","sourceNew":"  /** Sets the phrase slop for this query.\n   * @see PhraseQuery#setSlop(int)\n   */\n  public void setSlop(int s) { slop = s; }\n\n","sourceOld":"  /** Sets the phrase slop for this query.\n   * @see PhraseQuery#setSlop(int)\n   */\n  public void setSlop(int s) { slop = s; }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bae2070aa7aaff000145c4978276eb085e2ff279","date":1391309822,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#setSlop(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#setSlop(int).mjava","sourceNew":"  /** Sets the phrase slop for this query.\n   * @see PhraseQuery#setSlop(int)\n   */\n  public void setSlop(int s) {\n    if (s < 0) {\n      throw new IllegalArgumentException(\"slop value cannot be negative\");\n    }\n    slop = s; \n  }\n\n","sourceOld":"  /** Sets the phrase slop for this query.\n   * @see PhraseQuery#setSlop(int)\n   */\n  public void setSlop(int s) { slop = s; }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9e1499c5d26c936238506df90a3c02c76707722","date":1434449920,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#setSlop(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#setSlop(int).mjava","sourceNew":"  /** Sets the phrase slop for this query.\n   * @see PhraseQuery#getSlop()\n   */\n  public void setSlop(int s) {\n    if (s < 0) {\n      throw new IllegalArgumentException(\"slop value cannot be negative\");\n    }\n    slop = s; \n  }\n\n","sourceOld":"  /** Sets the phrase slop for this query.\n   * @see PhraseQuery#setSlop(int)\n   */\n  public void setSlop(int s) {\n    if (s < 0) {\n      throw new IllegalArgumentException(\"slop value cannot be negative\");\n    }\n    slop = s; \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92b4a131f1796dd57cc6698aae3d589d32a29deb","date":1457087316,"type":4,"author":"Luc Vanlerberghe","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#setSlop(int).mjava","sourceNew":null,"sourceOld":"  /** Sets the phrase slop for this query.\n   * @see PhraseQuery#getSlop()\n   */\n  public void setSlop(int s) {\n    if (s < 0) {\n      throw new IllegalArgumentException(\"slop value cannot be negative\");\n    }\n    slop = s; \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiPhraseQuery#setSlop(int).mjava","sourceNew":null,"sourceOld":"  /** Sets the phrase slop for this query.\n   * @see PhraseQuery#getSlop()\n   */\n  public void setSlop(int s) {\n    if (s < 0) {\n      throw new IllegalArgumentException(\"slop value cannot be negative\");\n    }\n    slop = s; \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"92b4a131f1796dd57cc6698aae3d589d32a29deb":["e9e1499c5d26c936238506df90a3c02c76707722"],"e9e1499c5d26c936238506df90a3c02c76707722":["bae2070aa7aaff000145c4978276eb085e2ff279"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bae2070aa7aaff000145c4978276eb085e2ff279":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["e9e1499c5d26c936238506df90a3c02c76707722","92b4a131f1796dd57cc6698aae3d589d32a29deb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"]},"commit2Childs":{"92b4a131f1796dd57cc6698aae3d589d32a29deb":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"e9e1499c5d26c936238506df90a3c02c76707722":["92b4a131f1796dd57cc6698aae3d589d32a29deb","cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["bae2070aa7aaff000145c4978276eb085e2ff279"],"bae2070aa7aaff000145c4978276eb085e2ff279":["e9e1499c5d26c936238506df90a3c02c76707722"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}