{"path":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempTermOutputs#write(TempMetaData,DataOutput).mjava","commits":[{"id":"232252bc7056b698c1e1c550f4b97a9a3c00e520","date":1372943634,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempTermOutputs#write(TempMetaData,DataOutput).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void write(TempMetaData data, DataOutput out) throws IOException {\n    for (int pos = 0; pos < longsSize; pos++) {\n      out.writeVLong(data.longs[pos]);\n    }\n    if (data.bytes != null) {\n      out.writeVInt(data.bytes.length);\n      out.writeBytes(data.bytes, 0, data.bytes.length);\n    } else {\n      out.writeVInt(0);\n    }\n  }\n  // nocommit: can this non-null byte case be used in Final Output?\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a509b6df968a74c38a0528f5bf6ea26f503b756","date":1373188457,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempTermOutputs#write(TempMetaData,DataOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempTermOutputs#write(TempMetaData,DataOutput).mjava","sourceNew":"  @Override\n  public void write(TempMetaData data, DataOutput out) throws IOException {\n    for (int pos = 0; pos < longsSize; pos++) {\n      out.writeVLong(data.longs[pos]);\n    }\n    int code = data.docFreq == 0 ? 0 : 1;\n    if (data.bytes != null) {\n      out.writeVInt((data.bytes.length << 1) | code);\n      out.writeBytes(data.bytes, 0, data.bytes.length);\n    } else {\n      out.writeVInt(code);\n    }\n    if (data.docFreq > 0) {\n      out.writeVInt(data.docFreq);\n      if (fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n        out.writeVLong(data.totalTermFreq - data.docFreq);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(TempMetaData data, DataOutput out) throws IOException {\n    for (int pos = 0; pos < longsSize; pos++) {\n      out.writeVLong(data.longs[pos]);\n    }\n    if (data.bytes != null) {\n      out.writeVInt(data.bytes.length);\n      out.writeBytes(data.bytes, 0, data.bytes.length);\n    } else {\n      out.writeVInt(0);\n    }\n  }\n  // nocommit: can this non-null byte case be used in Final Output?\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f962e7e670c8f2b5f205969d2ab166dd92d4a5ce","date":1373299712,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempTermOutputs#write(TempMetaData,DataOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempTermOutputs#write(TempMetaData,DataOutput).mjava","sourceNew":"  @Override\n  public void write(TempMetaData data, DataOutput out) throws IOException {\n    for (int pos = 0; pos < longsSize; pos++) {\n      out.writeVLong(data.longs[pos]);\n    }\n    int code = data.docFreq == 0 ? 0 : 1;\n    if (data.bytes != null) {\n      out.writeVInt((data.bytes.length << 1) | code);\n      out.writeBytes(data.bytes, 0, data.bytes.length);\n    } else {\n      out.writeVInt(code);\n    }\n    if (data.docFreq > 0) {\n      out.writeVInt(data.docFreq);\n      if (hasPos) {\n        out.writeVLong(data.totalTermFreq - data.docFreq);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(TempMetaData data, DataOutput out) throws IOException {\n    for (int pos = 0; pos < longsSize; pos++) {\n      out.writeVLong(data.longs[pos]);\n    }\n    int code = data.docFreq == 0 ? 0 : 1;\n    if (data.bytes != null) {\n      out.writeVInt((data.bytes.length << 1) | code);\n      out.writeBytes(data.bytes, 0, data.bytes.length);\n    } else {\n      out.writeVInt(code);\n    }\n    if (data.docFreq > 0) {\n      out.writeVInt(data.docFreq);\n      if (fieldInfo.getIndexOptions() != IndexOptions.DOCS_ONLY) {\n        out.writeVLong(data.totalTermFreq - data.docFreq);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0bb367a7107f7ab6bfbb3d504d5f17f9a452e26b","date":1373471768,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempTermOutputs#write(TempMetaData,DataOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempTermOutputs#write(TempMetaData,DataOutput).mjava","sourceNew":"  @Override\n  public void write(TempMetaData data, DataOutput out) throws IOException {\n    int bit0 = allZero(data.longs) ? 0 : 1;\n    int bit1 = ((data.bytes == null || data.bytes.length == 0) ? 0 : 1) << 1;\n    int bit2 = ((data.docFreq == 0)  ? 0 : 1) << 2;\n    int bits = bit0 | bit1 | bit2;\n    if (bit1 > 0) {  // determine extra length\n      if (data.bytes.length < 32) {\n        bits |= (data.bytes.length << 3);\n        out.writeByte((byte)bits);\n      } else {\n        out.writeByte((byte)bits);\n        out.writeVInt(data.bytes.length);\n      }\n    } else {\n      out.writeByte((byte)bits);\n    }\n    if (bit0 > 0) {  // not all-zero case\n      for (int pos = 0; pos < longsSize; pos++) {\n        out.writeVLong(data.longs[pos]);\n      }\n    }\n    if (bit1 > 0) {  // bytes exists\n      out.writeBytes(data.bytes, 0, data.bytes.length);\n    }\n    if (bit2 > 0) {  // stats exist\n      out.writeVInt(data.docFreq);\n      if (hasPos) {\n        out.writeVLong(data.totalTermFreq - data.docFreq);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(TempMetaData data, DataOutput out) throws IOException {\n    for (int pos = 0; pos < longsSize; pos++) {\n      out.writeVLong(data.longs[pos]);\n    }\n    int code = data.docFreq == 0 ? 0 : 1;\n    if (data.bytes != null) {\n      out.writeVInt((data.bytes.length << 1) | code);\n      out.writeBytes(data.bytes, 0, data.bytes.length);\n    } else {\n      out.writeVInt(code);\n    }\n    if (data.docFreq > 0) {\n      out.writeVInt(data.docFreq);\n      if (hasPos) {\n        out.writeVLong(data.totalTermFreq - data.docFreq);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7515c01f3d3a5d6f8a72f1407d8bb91e91c53977","date":1373531735,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempTermOutputs#write(TempMetaData,DataOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempTermOutputs#write(TempMetaData,DataOutput).mjava","sourceNew":"  @Override\n  public void write(TempMetaData data, DataOutput out) throws IOException {\n    int bit0 = allZero(data.longs) ? 0 : 1;\n    int bit1 = ((data.bytes == null || data.bytes.length == 0) ? 0 : 1) << 1;\n    int bit2 = ((data.docFreq == 0)  ? 0 : 1) << 2;\n    int bits = bit0 | bit1 | bit2;\n    if (bit1 > 0) {  // determine extra length\n      if (data.bytes.length < 32) {\n        bits |= (data.bytes.length << 3);\n        out.writeByte((byte)bits);\n      } else {\n        out.writeByte((byte)bits);\n        out.writeVInt(data.bytes.length);\n      }\n    } else {\n      out.writeByte((byte)bits);\n    }\n    if (bit0 > 0) {  // not all-zero case\n      for (int pos = 0; pos < longsSize; pos++) {\n        out.writeVLong(data.longs[pos]);\n      }\n    }\n    if (bit1 > 0) {  // bytes exists\n      out.writeBytes(data.bytes, 0, data.bytes.length);\n    }\n    if (bit2 > 0) {  // stats exist\n      if (hasPos) {\n        if (data.docFreq == data.totalTermFreq) {\n          out.writeVInt((data.docFreq << 1) | 1);\n        } else {\n          out.writeVInt((data.docFreq << 1));\n          out.writeVLong(data.totalTermFreq - data.docFreq);\n        }\n      } else {\n        out.writeVInt(data.docFreq);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(TempMetaData data, DataOutput out) throws IOException {\n    int bit0 = allZero(data.longs) ? 0 : 1;\n    int bit1 = ((data.bytes == null || data.bytes.length == 0) ? 0 : 1) << 1;\n    int bit2 = ((data.docFreq == 0)  ? 0 : 1) << 2;\n    int bits = bit0 | bit1 | bit2;\n    if (bit1 > 0) {  // determine extra length\n      if (data.bytes.length < 32) {\n        bits |= (data.bytes.length << 3);\n        out.writeByte((byte)bits);\n      } else {\n        out.writeByte((byte)bits);\n        out.writeVInt(data.bytes.length);\n      }\n    } else {\n      out.writeByte((byte)bits);\n    }\n    if (bit0 > 0) {  // not all-zero case\n      for (int pos = 0; pos < longsSize; pos++) {\n        out.writeVLong(data.longs[pos]);\n      }\n    }\n    if (bit1 > 0) {  // bytes exists\n      out.writeBytes(data.bytes, 0, data.bytes.length);\n    }\n    if (bit2 > 0) {  // stats exist\n      out.writeVInt(data.docFreq);\n      if (hasPos) {\n        out.writeVLong(data.totalTermFreq - data.docFreq);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":5,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempTermOutputs#write(TempMetaData,DataOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempTermOutputs#write(TempMetaData,DataOutput).mjava","sourceNew":"  @Override\n  public void write(TempMetaData data, DataOutput out) throws IOException {\n    int bit0 = allZero(data.longs) ? 0 : 1;\n    int bit1 = ((data.bytes == null || data.bytes.length == 0) ? 0 : 1) << 1;\n    int bit2 = ((data.docFreq == 0)  ? 0 : 1) << 2;\n    int bits = bit0 | bit1 | bit2;\n    if (bit1 > 0) {  // determine extra length\n      if (data.bytes.length < 32) {\n        bits |= (data.bytes.length << 3);\n        out.writeByte((byte)bits);\n      } else {\n        out.writeByte((byte)bits);\n        out.writeVInt(data.bytes.length);\n      }\n    } else {\n      out.writeByte((byte)bits);\n    }\n    if (bit0 > 0) {  // not all-zero case\n      for (int pos = 0; pos < longsSize; pos++) {\n        out.writeVLong(data.longs[pos]);\n      }\n    }\n    if (bit1 > 0) {  // bytes exists\n      out.writeBytes(data.bytes, 0, data.bytes.length);\n    }\n    if (bit2 > 0) {  // stats exist\n      if (hasPos) {\n        if (data.docFreq == data.totalTermFreq) {\n          out.writeVInt((data.docFreq << 1) | 1);\n        } else {\n          out.writeVInt((data.docFreq << 1));\n          out.writeVLong(data.totalTermFreq - data.docFreq);\n        }\n      } else {\n        out.writeVInt(data.docFreq);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(TempMetaData data, DataOutput out) throws IOException {\n    int bit0 = allZero(data.longs) ? 0 : 1;\n    int bit1 = ((data.bytes == null || data.bytes.length == 0) ? 0 : 1) << 1;\n    int bit2 = ((data.docFreq == 0)  ? 0 : 1) << 2;\n    int bits = bit0 | bit1 | bit2;\n    if (bit1 > 0) {  // determine extra length\n      if (data.bytes.length < 32) {\n        bits |= (data.bytes.length << 3);\n        out.writeByte((byte)bits);\n      } else {\n        out.writeByte((byte)bits);\n        out.writeVInt(data.bytes.length);\n      }\n    } else {\n      out.writeByte((byte)bits);\n    }\n    if (bit0 > 0) {  // not all-zero case\n      for (int pos = 0; pos < longsSize; pos++) {\n        out.writeVLong(data.longs[pos]);\n      }\n    }\n    if (bit1 > 0) {  // bytes exists\n      out.writeBytes(data.bytes, 0, data.bytes.length);\n    }\n    if (bit2 > 0) {  // stats exist\n      if (hasPos) {\n        if (data.docFreq == data.totalTermFreq) {\n          out.writeVInt((data.docFreq << 1) | 1);\n        } else {\n          out.writeVInt((data.docFreq << 1));\n          out.writeVLong(data.totalTermFreq - data.docFreq);\n        }\n      } else {\n        out.writeVInt(data.docFreq);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0bb367a7107f7ab6bfbb3d504d5f17f9a452e26b":["f962e7e670c8f2b5f205969d2ab166dd92d4a5ce"],"7515c01f3d3a5d6f8a72f1407d8bb91e91c53977":["0bb367a7107f7ab6bfbb3d504d5f17f9a452e26b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f962e7e670c8f2b5f205969d2ab166dd92d4a5ce":["3a509b6df968a74c38a0528f5bf6ea26f503b756"],"232252bc7056b698c1e1c550f4b97a9a3c00e520":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["7515c01f3d3a5d6f8a72f1407d8bb91e91c53977"],"3a509b6df968a74c38a0528f5bf6ea26f503b756":["232252bc7056b698c1e1c550f4b97a9a3c00e520"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0bb367a7107f7ab6bfbb3d504d5f17f9a452e26b":["7515c01f3d3a5d6f8a72f1407d8bb91e91c53977"],"7515c01f3d3a5d6f8a72f1407d8bb91e91c53977":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["232252bc7056b698c1e1c550f4b97a9a3c00e520","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f962e7e670c8f2b5f205969d2ab166dd92d4a5ce":["0bb367a7107f7ab6bfbb3d504d5f17f9a452e26b"],"232252bc7056b698c1e1c550f4b97a9a3c00e520":["3a509b6df968a74c38a0528f5bf6ea26f503b756"],"3a509b6df968a74c38a0528f5bf6ea26f503b756":["f962e7e670c8f2b5f205969d2ab166dd92d4a5ce"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}