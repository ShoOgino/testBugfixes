{"path":"solr/core/src/java/org/apache/solr/util/NumberUtils#readableSize(long).mjava","commits":[{"id":"ba74b188d46af33b86ff8e5a500d6f066852a182","date":1312857652,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/NumberUtils#readableSize(long).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#readableSize(long).mjava","sourceNew":"  public static String readableSize(long size) {\n    NumberFormat formatter = NumberFormat.getNumberInstance();\n    formatter.setMaximumFractionDigits(2);\n    if (size / (1024 * 1024 * 1024) > 0) {\n      return formatter.format(size * 1.0d / (1024 * 1024 * 1024)) + \" GB\";\n    } else if (size / (1024 * 1024) > 0) {\n      return formatter.format(size * 1.0d / (1024 * 1024)) + \" MB\";\n    } else if (size / 1024 > 0) {\n      return formatter.format(size * 1.0d / 1024) + \" KB\";\n    } else {\n      return String.valueOf(size) + \" bytes\";\n    }\n  }\n\n","sourceOld":"  String readableSize(long size) {\n    NumberFormat formatter = NumberFormat.getNumberInstance();\n    formatter.setMaximumFractionDigits(2);\n    if (size / (1024 * 1024 * 1024) > 0) {\n      return formatter.format(size * 1.0d / (1024 * 1024 * 1024)) + \" GB\";\n    } else if (size / (1024 * 1024) > 0) {\n      return formatter.format(size * 1.0d / (1024 * 1024)) + \" MB\";\n    } else if (size / 1024 > 0) {\n      return formatter.format(size * 1.0d / 1024) + \" KB\";\n    } else {\n      return String.valueOf(size) + \" bytes\";\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"197070b7f9191af8b5d8598b579393d4a67e32f0","date":1341843740,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/NumberUtils#readableSize(long).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/NumberUtils#readableSize(long).mjava","sourceNew":"  public static String readableSize(long size) {\n    NumberFormat formatter = NumberFormat.getNumberInstance(Locale.ROOT);\n    formatter.setMaximumFractionDigits(2);\n    if (size / (1024 * 1024 * 1024) > 0) {\n      return formatter.format(size * 1.0d / (1024 * 1024 * 1024)) + \" GB\";\n    } else if (size / (1024 * 1024) > 0) {\n      return formatter.format(size * 1.0d / (1024 * 1024)) + \" MB\";\n    } else if (size / 1024 > 0) {\n      return formatter.format(size * 1.0d / 1024) + \" KB\";\n    } else {\n      return String.valueOf(size) + \" bytes\";\n    }\n  }\n\n","sourceOld":"  public static String readableSize(long size) {\n    NumberFormat formatter = NumberFormat.getNumberInstance();\n    formatter.setMaximumFractionDigits(2);\n    if (size / (1024 * 1024 * 1024) > 0) {\n      return formatter.format(size * 1.0d / (1024 * 1024 * 1024)) + \" GB\";\n    } else if (size / (1024 * 1024) > 0) {\n      return formatter.format(size * 1.0d / (1024 * 1024)) + \" MB\";\n    } else if (size / 1024 > 0) {\n      return formatter.format(size * 1.0d / 1024) + \" KB\";\n    } else {\n      return String.valueOf(size) + \" bytes\";\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/NumberUtils#readableSize(long).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/NumberUtils#readableSize(long).mjava","sourceNew":"  public static String readableSize(long size) {\n    NumberFormat formatter = NumberFormat.getNumberInstance(Locale.ROOT);\n    formatter.setMaximumFractionDigits(2);\n    if (size / (1024 * 1024 * 1024) > 0) {\n      return formatter.format(size * 1.0d / (1024 * 1024 * 1024)) + \" GB\";\n    } else if (size / (1024 * 1024) > 0) {\n      return formatter.format(size * 1.0d / (1024 * 1024)) + \" MB\";\n    } else if (size / 1024 > 0) {\n      return formatter.format(size * 1.0d / 1024) + \" KB\";\n    } else {\n      return String.valueOf(size) + \" bytes\";\n    }\n  }\n\n","sourceOld":"  public static String readableSize(long size) {\n    NumberFormat formatter = NumberFormat.getNumberInstance();\n    formatter.setMaximumFractionDigits(2);\n    if (size / (1024 * 1024 * 1024) > 0) {\n      return formatter.format(size * 1.0d / (1024 * 1024 * 1024)) + \" GB\";\n    } else if (size / (1024 * 1024) > 0) {\n      return formatter.format(size * 1.0d / (1024 * 1024)) + \" MB\";\n    } else if (size / 1024 > 0) {\n      return formatter.format(size * 1.0d / 1024) + \" KB\";\n    } else {\n      return String.valueOf(size) + \" bytes\";\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/NumberUtils#readableSize(long).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/NumberUtils#readableSize(long).mjava","sourceNew":"  public static String readableSize(long size) {\n    NumberFormat formatter = NumberFormat.getNumberInstance(Locale.ROOT);\n    formatter.setMaximumFractionDigits(2);\n    if (size / (1024 * 1024 * 1024) > 0) {\n      return formatter.format(size * 1.0d / (1024 * 1024 * 1024)) + \" GB\";\n    } else if (size / (1024 * 1024) > 0) {\n      return formatter.format(size * 1.0d / (1024 * 1024)) + \" MB\";\n    } else if (size / 1024 > 0) {\n      return formatter.format(size * 1.0d / 1024) + \" KB\";\n    } else {\n      return String.valueOf(size) + \" bytes\";\n    }\n  }\n\n","sourceOld":"  public static String readableSize(long size) {\n    NumberFormat formatter = NumberFormat.getNumberInstance();\n    formatter.setMaximumFractionDigits(2);\n    if (size / (1024 * 1024 * 1024) > 0) {\n      return formatter.format(size * 1.0d / (1024 * 1024 * 1024)) + \" GB\";\n    } else if (size / (1024 * 1024) > 0) {\n      return formatter.format(size * 1.0d / (1024 * 1024)) + \" MB\";\n    } else if (size / 1024 > 0) {\n      return formatter.format(size * 1.0d / 1024) + \" KB\";\n    } else {\n      return String.valueOf(size) + \" bytes\";\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/NumberUtils#readableSize(long).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/NumberUtils#readableSize(long).mjava","sourceNew":"  public static String readableSize(long size) {\n    NumberFormat formatter = NumberFormat.getNumberInstance(Locale.ROOT);\n    formatter.setMaximumFractionDigits(2);\n    if (size / (1024 * 1024 * 1024) > 0) {\n      return formatter.format(size * 1.0d / (1024 * 1024 * 1024)) + \" GB\";\n    } else if (size / (1024 * 1024) > 0) {\n      return formatter.format(size * 1.0d / (1024 * 1024)) + \" MB\";\n    } else if (size / 1024 > 0) {\n      return formatter.format(size * 1.0d / 1024) + \" KB\";\n    } else {\n      return String.valueOf(size) + \" bytes\";\n    }\n  }\n\n","sourceOld":"  public static String readableSize(long size) {\n    NumberFormat formatter = NumberFormat.getNumberInstance();\n    formatter.setMaximumFractionDigits(2);\n    if (size / (1024 * 1024 * 1024) > 0) {\n      return formatter.format(size * 1.0d / (1024 * 1024 * 1024)) + \" GB\";\n    } else if (size / (1024 * 1024) > 0) {\n      return formatter.format(size * 1.0d / (1024 * 1024)) + \" MB\";\n    } else if (size / 1024 > 0) {\n      return formatter.format(size * 1.0d / 1024) + \" KB\";\n    } else {\n      return String.valueOf(size) + \" bytes\";\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ba74b188d46af33b86ff8e5a500d6f066852a182":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["ba74b188d46af33b86ff8e5a500d6f066852a182","2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2acf500f78aa12b92e371fd89c719291986b6b90":["ba74b188d46af33b86ff8e5a500d6f066852a182","197070b7f9191af8b5d8598b579393d4a67e32f0"],"197070b7f9191af8b5d8598b579393d4a67e32f0":["ba74b188d46af33b86ff8e5a500d6f066852a182"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2acf500f78aa12b92e371fd89c719291986b6b90"],"46d8ada1fff8d18cb197c38c7983225162599948":["ba74b188d46af33b86ff8e5a500d6f066852a182","2acf500f78aa12b92e371fd89c719291986b6b90"]},"commit2Childs":{"ba74b188d46af33b86ff8e5a500d6f066852a182":["fe33227f6805edab2036cbb80645cc4e2d1fa424","2acf500f78aa12b92e371fd89c719291986b6b90","197070b7f9191af8b5d8598b579393d4a67e32f0","46d8ada1fff8d18cb197c38c7983225162599948"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba74b188d46af33b86ff8e5a500d6f066852a182"],"2acf500f78aa12b92e371fd89c719291986b6b90":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817","46d8ada1fff8d18cb197c38c7983225162599948"],"197070b7f9191af8b5d8598b579393d4a67e32f0":["2acf500f78aa12b92e371fd89c719291986b6b90"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"46d8ada1fff8d18cb197c38c7983225162599948":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817","46d8ada1fff8d18cb197c38c7983225162599948"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}