{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testQuery().mjava","commits":[{"id":"22c400c38732e4cee017b09622fb10e5c55b04b8","date":1334921975,"type":0,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testQuery().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testQuery(){\n    DebugServlet.clear();\n    HttpSolrServer server = new HttpSolrServer(\"http://127.0.0.1:\"\n        + jetty.getLocalPort() + \"/solr/debug/foo\");\n    SolrQuery q = new SolrQuery(\"foo\");\n    q.setParam(\"a\", \"\\u1234\");\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    //content-type\n    assertEquals(null, DebugServlet.headers.get(\"Content-Type\"));\n    //param encoding\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n\n    //POST\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n    assertEquals(\"UTF-8\", DebugServlet.headers.get(\"Content-Charset\"));\n\n    //XML/GET\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML/POST\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n    assertEquals(\"UTF-8\", DebugServlet.headers.get(\"Content-Charset\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["e1ae7b855157931b62ac3e8d17966c323980f75d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f2425308ebcd91b538a601df94ae1551ccaab2bb","date":1340702883,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testQuery().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testQuery().mjava","sourceNew":"  @Test\n  public void testQuery(){\n    DebugServlet.clear();\n    HttpSolrServer server = new HttpSolrServer(\"http://127.0.0.1:\"\n        + jetty.getLocalPort() + \"/solr/debug/foo\");\n    SolrQuery q = new SolrQuery(\"foo\");\n    q.setParam(\"a\", \"\\u1234\");\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    //content-type\n    assertEquals(null, DebugServlet.headers.get(\"Content-Type\"));\n    //param encoding\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n\n    //POST\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n    assertEquals(\"UTF-8\", DebugServlet.headers.get(\"Content-Charset\"));\n\n    //XML/GET\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML/POST\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n    assertEquals(\"UTF-8\", DebugServlet.headers.get(\"Content-Charset\"));\n    server.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testQuery(){\n    DebugServlet.clear();\n    HttpSolrServer server = new HttpSolrServer(\"http://127.0.0.1:\"\n        + jetty.getLocalPort() + \"/solr/debug/foo\");\n    SolrQuery q = new SolrQuery(\"foo\");\n    q.setParam(\"a\", \"\\u1234\");\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    //content-type\n    assertEquals(null, DebugServlet.headers.get(\"Content-Type\"));\n    //param encoding\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n\n    //POST\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n    assertEquals(\"UTF-8\", DebugServlet.headers.get(\"Content-Charset\"));\n\n    //XML/GET\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML/POST\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n    assertEquals(\"UTF-8\", DebugServlet.headers.get(\"Content-Charset\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testQuery().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testQuery().mjava","sourceNew":"  @Test\n  public void testQuery(){\n    DebugServlet.clear();\n    HttpSolrServer server = new HttpSolrServer(\"http://127.0.0.1:\"\n        + jetty.getLocalPort() + \"/solr/debug/foo\");\n    SolrQuery q = new SolrQuery(\"foo\");\n    q.setParam(\"a\", \"\\u1234\");\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    //content-type\n    assertEquals(null, DebugServlet.headers.get(\"Content-Type\"));\n    //param encoding\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n\n    //POST\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n    assertEquals(\"UTF-8\", DebugServlet.headers.get(\"Content-Charset\"));\n\n    //XML/GET\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML/POST\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n    assertEquals(\"UTF-8\", DebugServlet.headers.get(\"Content-Charset\"));\n    server.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testQuery(){\n    DebugServlet.clear();\n    HttpSolrServer server = new HttpSolrServer(\"http://127.0.0.1:\"\n        + jetty.getLocalPort() + \"/solr/debug/foo\");\n    SolrQuery q = new SolrQuery(\"foo\");\n    q.setParam(\"a\", \"\\u1234\");\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    //content-type\n    assertEquals(null, DebugServlet.headers.get(\"Content-Type\"));\n    //param encoding\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n\n    //POST\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n    assertEquals(\"UTF-8\", DebugServlet.headers.get(\"Content-Charset\"));\n\n    //XML/GET\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML/POST\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n    assertEquals(\"UTF-8\", DebugServlet.headers.get(\"Content-Charset\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa11c355cd3b3b9207608b85fbd33b34f6f1966e","date":1361303536,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testQuery().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testQuery().mjava","sourceNew":"  @Test\n  public void testQuery(){\n    DebugServlet.clear();\n    HttpSolrServer server = new HttpSolrServer(jetty.getBaseUrl().toString() +\n                                               \"/debug/foo\");\n    SolrQuery q = new SolrQuery(\"foo\");\n    q.setParam(\"a\", \"\\u1234\");\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    //content-type\n    assertEquals(null, DebugServlet.headers.get(\"Content-Type\"));\n    //param encoding\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n\n    //POST\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n    assertEquals(\"UTF-8\", DebugServlet.headers.get(\"Content-Charset\"));\n\n    //XML/GET\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML/POST\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n    assertEquals(\"UTF-8\", DebugServlet.headers.get(\"Content-Charset\"));\n    server.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testQuery(){\n    DebugServlet.clear();\n    HttpSolrServer server = new HttpSolrServer(\"http://127.0.0.1:\"\n        + jetty.getLocalPort() + \"/solr/debug/foo\");\n    SolrQuery q = new SolrQuery(\"foo\");\n    q.setParam(\"a\", \"\\u1234\");\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    //content-type\n    assertEquals(null, DebugServlet.headers.get(\"Content-Type\"));\n    //param encoding\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n\n    //POST\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n    assertEquals(\"UTF-8\", DebugServlet.headers.get(\"Content-Charset\"));\n\n    //XML/GET\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML/POST\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n    assertEquals(\"UTF-8\", DebugServlet.headers.get(\"Content-Charset\"));\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e1ae7b855157931b62ac3e8d17966c323980f75d","date":1407744420,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testQuery().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testQuery().mjava","sourceNew":"  @Test\n  public void testQuery(){\n    DebugServlet.clear();\n    HttpSolrServer server = new HttpSolrServer(jetty.getBaseUrl().toString() +\n                                               \"/debug/foo\");\n    SolrQuery q = new SolrQuery(\"foo\");\n    q.setParam(\"a\", \"\\u1234\");\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    //content-type\n    assertEquals(null, DebugServlet.headers.get(\"Content-Type\"));\n    //param encoding\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n\n    //POST\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n\n    //XML/GET\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML/POST\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n    server.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testQuery(){\n    DebugServlet.clear();\n    HttpSolrServer server = new HttpSolrServer(jetty.getBaseUrl().toString() +\n                                               \"/debug/foo\");\n    SolrQuery q = new SolrQuery(\"foo\");\n    q.setParam(\"a\", \"\\u1234\");\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    //content-type\n    assertEquals(null, DebugServlet.headers.get(\"Content-Type\"));\n    //param encoding\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n\n    //POST\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n    assertEquals(\"UTF-8\", DebugServlet.headers.get(\"Content-Charset\"));\n\n    //XML/GET\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML/POST\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n    assertEquals(\"UTF-8\", DebugServlet.headers.get(\"Content-Charset\"));\n    server.shutdown();\n  }\n\n","bugFix":["22c400c38732e4cee017b09622fb10e5c55b04b8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf5f0a722ca79f92ea9e7ab1a7d803909655f0f8","date":1411625045,"type":3,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testQuery().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testQuery().mjava","sourceNew":"  @Test\n  public void testQuery(){\n    DebugServlet.clear();\n    HttpSolrServer server = new HttpSolrServer(jetty.getBaseUrl().toString() +\n                                               \"/debug/foo\");\n    SolrQuery q = new SolrQuery(\"foo\");\n    q.setParam(\"a\", \"\\u1234\");\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    //content-type\n    assertEquals(null, DebugServlet.headers.get(\"Content-Type\"));\n    //param encoding\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n\n    //POST\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n\n    //PUT\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.PUT);\n    } catch (Throwable t) {}\n    assertEquals(\"put\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n\n    //XML/GET\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML/POST\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.PUT);\n    } catch (Throwable t) {}\n    assertEquals(\"put\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n    server.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testQuery(){\n    DebugServlet.clear();\n    HttpSolrServer server = new HttpSolrServer(jetty.getBaseUrl().toString() +\n                                               \"/debug/foo\");\n    SolrQuery q = new SolrQuery(\"foo\");\n    q.setParam(\"a\", \"\\u1234\");\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    //content-type\n    assertEquals(null, DebugServlet.headers.get(\"Content-Type\"));\n    //param encoding\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n\n    //POST\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n\n    //XML/GET\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML/POST\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrClientTest#testQuery().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/BasicHttpSolrServerTest#testQuery().mjava","sourceNew":"  @Test\n  public void testQuery(){\n    DebugServlet.clear();\n    HttpSolrClient client = new HttpSolrClient(jetty.getBaseUrl().toString() + \"/debug/foo\");\n    SolrQuery q = new SolrQuery(\"foo\");\n    q.setParam(\"a\", \"\\u1234\");\n    try {\n      client.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    //content-type\n    assertEquals(null, DebugServlet.headers.get(\"Content-Type\"));\n    //param encoding\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n\n    //POST\n    DebugServlet.clear();\n    try {\n      client.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n\n    //PUT\n    DebugServlet.clear();\n    try {\n      client.query(q, METHOD.PUT);\n    } catch (Throwable t) {}\n    assertEquals(\"put\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n\n    //XML/GET\n    client.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      client.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML/POST\n    client.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      client.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n\n    client.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      client.query(q, METHOD.PUT);\n    } catch (Throwable t) {}\n    assertEquals(\"put\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(client.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + HttpSolrClient.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n    client.shutdown();\n  }\n\n","sourceOld":"  @Test\n  public void testQuery(){\n    DebugServlet.clear();\n    HttpSolrServer server = new HttpSolrServer(jetty.getBaseUrl().toString() +\n                                               \"/debug/foo\");\n    SolrQuery q = new SolrQuery(\"foo\");\n    q.setParam(\"a\", \"\\u1234\");\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    \n    //default method\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //default wt\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    //default version\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    //agent\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    //keepalive\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    //content-type\n    assertEquals(null, DebugServlet.headers.get(\"Content-Type\"));\n    //param encoding\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n\n    //POST\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n\n    //PUT\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.PUT);\n    } catch (Throwable t) {}\n    assertEquals(\"put\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"javabin\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n\n    //XML/GET\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.GET);\n    } catch (Throwable t) {}\n    assertEquals(\"get\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n\n    //XML/POST\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.POST);\n    } catch (Throwable t) {}\n    assertEquals(\"post\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n\n    server.setParser(new XMLResponseParser());\n    DebugServlet.clear();\n    try {\n      server.query(q, METHOD.PUT);\n    } catch (Throwable t) {}\n    assertEquals(\"put\", DebugServlet.lastMethod);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.WT).length);\n    assertEquals(\"xml\", DebugServlet.parameters.get(CommonParams.WT)[0]);\n    assertEquals(1, DebugServlet.parameters.get(CommonParams.VERSION).length);\n    assertEquals(server.getParser().getVersion(), DebugServlet.parameters.get(CommonParams.VERSION)[0]);\n    assertEquals(1, DebugServlet.parameters.get(\"a\").length);\n    assertEquals(\"\\u1234\", DebugServlet.parameters.get(\"a\")[0]);\n    assertEquals(\"Solr[\" + org.apache.solr.client.solrj.impl.HttpSolrServer.class.getName() + \"] 1.0\", DebugServlet.headers.get(\"User-Agent\"));\n    assertEquals(\"keep-alive\", DebugServlet.headers.get(\"Connection\"));\n    assertEquals(\"application/x-www-form-urlencoded; charset=UTF-8\", DebugServlet.headers.get(\"Content-Type\"));\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fa11c355cd3b3b9207608b85fbd33b34f6f1966e":["f2425308ebcd91b538a601df94ae1551ccaab2bb"],"e1ae7b855157931b62ac3e8d17966c323980f75d":["fa11c355cd3b3b9207608b85fbd33b34f6f1966e"],"22c400c38732e4cee017b09622fb10e5c55b04b8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["22c400c38732e4cee017b09622fb10e5c55b04b8","f2425308ebcd91b538a601df94ae1551ccaab2bb"],"cf5f0a722ca79f92ea9e7ab1a7d803909655f0f8":["e1ae7b855157931b62ac3e8d17966c323980f75d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["cf5f0a722ca79f92ea9e7ab1a7d803909655f0f8"],"f2425308ebcd91b538a601df94ae1551ccaab2bb":["22c400c38732e4cee017b09622fb10e5c55b04b8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"fa11c355cd3b3b9207608b85fbd33b34f6f1966e":["e1ae7b855157931b62ac3e8d17966c323980f75d"],"e1ae7b855157931b62ac3e8d17966c323980f75d":["cf5f0a722ca79f92ea9e7ab1a7d803909655f0f8"],"22c400c38732e4cee017b09622fb10e5c55b04b8":["fe33227f6805edab2036cbb80645cc4e2d1fa424","f2425308ebcd91b538a601df94ae1551ccaab2bb"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["22c400c38732e4cee017b09622fb10e5c55b04b8"],"cf5f0a722ca79f92ea9e7ab1a7d803909655f0f8":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f2425308ebcd91b538a601df94ae1551ccaab2bb":["fa11c355cd3b3b9207608b85fbd33b34f6f1966e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}