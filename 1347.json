{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#Http2SolrClient(String,Builder).mjava","commits":[{"id":"1a77e5e21cbd575a8240b0e3926164f15295f4e8","date":1544979500,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#Http2SolrClient(String,Builder).mjava","pathOld":"/dev/null","sourceNew":"  protected Http2SolrClient(String serverBaseUrl, Builder builder) {\n    if (serverBaseUrl != null)  {\n      if (!serverBaseUrl.equals(\"/\") && serverBaseUrl.endsWith(\"/\")) {\n        serverBaseUrl = serverBaseUrl.substring(0, serverBaseUrl.length() - 1);\n      }\n\n      if (serverBaseUrl.startsWith(\"//\")) {\n        serverBaseUrl = serverBaseUrl.substring(1, serverBaseUrl.length());\n      }\n      this.serverBaseUrl = serverBaseUrl;\n    }\n\n    if (builder.idleTimeout != null) idleTimeout = builder.idleTimeout;\n    else idleTimeout = HttpClientUtil.DEFAULT_SO_TIMEOUT;\n\n    if (builder.httpClient == null) {\n      httpClient = createHttpClient(builder);\n      closeClient = true;\n    } else {\n      httpClient = builder.httpClient;\n    }\n    if (!httpClient.isStarted()) {\n      try {\n        httpClient.start();\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n    assert ObjectReleaseTracker.track(this);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["e58d986bd494d977efeae8ed9795f508e8325cb4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0544142c22eb88b6d8b3817f2e1190156aa4f9af","date":1551692505,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#Http2SolrClient(String,Builder).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#Http2SolrClient(String,Builder).mjava","sourceNew":"  protected Http2SolrClient(String serverBaseUrl, Builder builder) {\n    if (serverBaseUrl != null)  {\n      if (!serverBaseUrl.equals(\"/\") && serverBaseUrl.endsWith(\"/\")) {\n        serverBaseUrl = serverBaseUrl.substring(0, serverBaseUrl.length() - 1);\n      }\n\n      if (serverBaseUrl.startsWith(\"//\")) {\n        serverBaseUrl = serverBaseUrl.substring(1, serverBaseUrl.length());\n      }\n      this.serverBaseUrl = serverBaseUrl;\n    }\n\n    if (builder.idleTimeout != null) idleTimeout = builder.idleTimeout;\n    else idleTimeout = HttpClientUtil.DEFAULT_SO_TIMEOUT;\n\n    if (builder.http2SolrClient == null) {\n      httpClient = createHttpClient(builder);\n      closeClient = true;\n    } else {\n      httpClient = builder.http2SolrClient.httpClient;\n    }\n    assert ObjectReleaseTracker.track(this);\n  }\n\n","sourceOld":"  protected Http2SolrClient(String serverBaseUrl, Builder builder) {\n    if (serverBaseUrl != null)  {\n      if (!serverBaseUrl.equals(\"/\") && serverBaseUrl.endsWith(\"/\")) {\n        serverBaseUrl = serverBaseUrl.substring(0, serverBaseUrl.length() - 1);\n      }\n\n      if (serverBaseUrl.startsWith(\"//\")) {\n        serverBaseUrl = serverBaseUrl.substring(1, serverBaseUrl.length());\n      }\n      this.serverBaseUrl = serverBaseUrl;\n    }\n\n    if (builder.idleTimeout != null) idleTimeout = builder.idleTimeout;\n    else idleTimeout = HttpClientUtil.DEFAULT_SO_TIMEOUT;\n\n    if (builder.httpClient == null) {\n      httpClient = createHttpClient(builder);\n      closeClient = true;\n    } else {\n      httpClient = builder.httpClient;\n    }\n    if (!httpClient.isStarted()) {\n      try {\n        httpClient.start();\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n    assert ObjectReleaseTracker.track(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e58d986bd494d977efeae8ed9795f508e8325cb4","date":1580930137,"type":3,"author":"Houston Putman","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#Http2SolrClient(String,Builder).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/Http2SolrClient#Http2SolrClient(String,Builder).mjava","sourceNew":"  protected Http2SolrClient(String serverBaseUrl, Builder builder) {\n    if (serverBaseUrl != null)  {\n      if (!serverBaseUrl.equals(\"/\") && serverBaseUrl.endsWith(\"/\")) {\n        serverBaseUrl = serverBaseUrl.substring(0, serverBaseUrl.length() - 1);\n      }\n\n      if (serverBaseUrl.startsWith(\"//\")) {\n        serverBaseUrl = serverBaseUrl.substring(1, serverBaseUrl.length());\n      }\n      this.serverBaseUrl = serverBaseUrl;\n    }\n\n    if (builder.idleTimeout != null && builder.idleTimeout > 0) idleTimeout = builder.idleTimeout;\n    else idleTimeout = HttpClientUtil.DEFAULT_SO_TIMEOUT;\n\n    if (builder.http2SolrClient == null) {\n      httpClient = createHttpClient(builder);\n      closeClient = true;\n    } else {\n      httpClient = builder.http2SolrClient.httpClient;\n    }\n    assert ObjectReleaseTracker.track(this);\n  }\n\n","sourceOld":"  protected Http2SolrClient(String serverBaseUrl, Builder builder) {\n    if (serverBaseUrl != null)  {\n      if (!serverBaseUrl.equals(\"/\") && serverBaseUrl.endsWith(\"/\")) {\n        serverBaseUrl = serverBaseUrl.substring(0, serverBaseUrl.length() - 1);\n      }\n\n      if (serverBaseUrl.startsWith(\"//\")) {\n        serverBaseUrl = serverBaseUrl.substring(1, serverBaseUrl.length());\n      }\n      this.serverBaseUrl = serverBaseUrl;\n    }\n\n    if (builder.idleTimeout != null) idleTimeout = builder.idleTimeout;\n    else idleTimeout = HttpClientUtil.DEFAULT_SO_TIMEOUT;\n\n    if (builder.http2SolrClient == null) {\n      httpClient = createHttpClient(builder);\n      closeClient = true;\n    } else {\n      httpClient = builder.http2SolrClient.httpClient;\n    }\n    assert ObjectReleaseTracker.track(this);\n  }\n\n","bugFix":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0544142c22eb88b6d8b3817f2e1190156aa4f9af":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e58d986bd494d977efeae8ed9795f508e8325cb4":["0544142c22eb88b6d8b3817f2e1190156aa4f9af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e58d986bd494d977efeae8ed9795f508e8325cb4"]},"commit2Childs":{"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["0544142c22eb88b6d8b3817f2e1190156aa4f9af"],"0544142c22eb88b6d8b3817f2e1190156aa4f9af":["e58d986bd494d977efeae8ed9795f508e8325cb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"e58d986bd494d977efeae8ed9795f508e8325cb4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}