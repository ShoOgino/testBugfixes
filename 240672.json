{"path":"lucene/facet/src/java/org/apache/lucene/facet/DrillSidewaysCollector#findScorers(Scorer).mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillSidewaysCollector#findScorers(Scorer).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillSidewaysCollector#findScorers(Scorer).mjava","sourceNew":"  private void findScorers(Scorer scorer) {\n    Integer index = weightToIndex.get(scorer.getWeight());\n    if (index != null) {\n      if (index.intValue() == -1) {\n        mainScorer = scorer;\n      } else {\n        subScorers[index] = scorer;\n      }\n    }\n    for(ChildScorer child : scorer.getChildren()) {\n      findScorers(child.child);\n    }\n  }\n\n","sourceOld":"  private void findScorers(Scorer scorer) {\n    Integer index = weightToIndex.get(scorer.getWeight());\n    if (index != null) {\n      if (index.intValue() == -1) {\n        mainScorer = scorer;\n      } else {\n        subScorers[index] = scorer;\n      }\n    }\n    for(ChildScorer child : scorer.getChildren()) {\n      findScorers(child.child);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillSidewaysCollector#findScorers(Scorer).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/DrillSidewaysCollector#findScorers(Scorer).mjava","sourceNew":"  private void findScorers(Scorer scorer) {\n    Integer index = weightToIndex.get(scorer.getWeight());\n    if (index != null) {\n      if (index.intValue() == -1) {\n        mainScorer = scorer;\n      } else {\n        subScorers[index] = scorer;\n      }\n    }\n    for(ChildScorer child : scorer.getChildren()) {\n      findScorers(child.child);\n    }\n  }\n\n","sourceOld":"  private void findScorers(Scorer scorer) {\n    Integer index = weightToIndex.get(scorer.getWeight());\n    if (index != null) {\n      if (index.intValue() == -1) {\n        mainScorer = scorer;\n      } else {\n        subScorers[index] = scorer;\n      }\n    }\n    for(ChildScorer child : scorer.getChildren()) {\n      findScorers(child.child);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"40640359164f629dd440a47df2e145d084ce9645","date":1391711808,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/DrillSidewaysCollector#findScorers(Scorer).mjava","sourceNew":null,"sourceOld":"  private void findScorers(Scorer scorer) {\n    Integer index = weightToIndex.get(scorer.getWeight());\n    if (index != null) {\n      if (index.intValue() == -1) {\n        mainScorer = scorer;\n      } else {\n        subScorers[index] = scorer;\n      }\n    }\n    for(ChildScorer child : scorer.getChildren()) {\n      findScorers(child.child);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","21d36d0db865f7b84026b447bec653469a6e66df"],"40640359164f629dd440a47df2e145d084ce9645":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["40640359164f629dd440a47df2e145d084ce9645"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","3cc728b07df73b197e6d940d27f9b08b63918f13"],"21d36d0db865f7b84026b447bec653469a6e66df":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["40640359164f629dd440a47df2e145d084ce9645"],"40640359164f629dd440a47df2e145d084ce9645":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}