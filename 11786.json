{"path":"solr/core/src/test/org/apache/solr/schema/ManagedSchemaRoundRobinCloudTest#testAddFieldsRoundRobin().mjava","commits":[{"id":"5b25ee75ed6af3df45e6fa30072db01d921df493","date":1481047896,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/ManagedSchemaRoundRobinCloudTest#testAddFieldsRoundRobin().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testAddFieldsRoundRobin() throws Exception {\n    List<HttpSolrClient> clients = new ArrayList<>(NUM_SHARDS);\n    try {\n      for (int shardNum = 0 ; shardNum < NUM_SHARDS ; ++shardNum) {\n        clients.add(getHttpSolrClient(cluster.getJettySolrRunners().get(shardNum).getBaseUrl().toString()));\n      }\n      int shardNum = 0;\n      for (int fieldNum = 0 ; fieldNum < NUM_FIELDS_TO_ADD ; ++fieldNum) {\n        addField(clients.get(shardNum), keyValueArrayToMap(\"name\", FIELD_PREFIX + fieldNum, \"type\", \"string\"));\n        if (++shardNum == NUM_SHARDS) { \n          shardNum = 0;\n        }\n      }\n    } finally {\n      for (int shardNum = 0 ; shardNum < NUM_SHARDS ; ++shardNum) {\n        clients.get(shardNum).close();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee8992dea79b51ba77a3fd1a5c0f94a5f0b8808d","date":1481116359,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/ManagedSchemaRoundRobinCloudTest#testAddFieldsRoundRobin().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testAddFieldsRoundRobin() throws Exception {\n    List<HttpSolrClient> clients = new ArrayList<>(NUM_SHARDS);\n    try {\n      for (int shardNum = 0 ; shardNum < NUM_SHARDS ; ++shardNum) {\n        clients.add(getHttpSolrClient(cluster.getJettySolrRunners().get(shardNum).getBaseUrl().toString()));\n      }\n      int shardNum = 0;\n      for (int fieldNum = 0 ; fieldNum < NUM_FIELDS_TO_ADD ; ++fieldNum) {\n        addField(clients.get(shardNum), keyValueArrayToMap(\"name\", FIELD_PREFIX + fieldNum, \"type\", \"string\"));\n        if (++shardNum == NUM_SHARDS) { \n          shardNum = 0;\n        }\n      }\n    } finally {\n      for (int shardNum = 0 ; shardNum < NUM_SHARDS ; ++shardNum) {\n        clients.get(shardNum).close();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/ManagedSchemaRoundRobinCloudTest#testAddFieldsRoundRobin().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testAddFieldsRoundRobin() throws Exception {\n    List<HttpSolrClient> clients = new ArrayList<>(NUM_SHARDS);\n    try {\n      for (int shardNum = 0 ; shardNum < NUM_SHARDS ; ++shardNum) {\n        clients.add(getHttpSolrClient(cluster.getJettySolrRunners().get(shardNum).getBaseUrl().toString()));\n      }\n      int shardNum = 0;\n      for (int fieldNum = 0 ; fieldNum < NUM_FIELDS_TO_ADD ; ++fieldNum) {\n        addField(clients.get(shardNum), keyValueArrayToMap(\"name\", FIELD_PREFIX + fieldNum, \"type\", \"string\"));\n        if (++shardNum == NUM_SHARDS) { \n          shardNum = 0;\n        }\n      }\n    } finally {\n      for (int shardNum = 0 ; shardNum < NUM_SHARDS ; ++shardNum) {\n        clients.get(shardNum).close();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ee8992dea79b51ba77a3fd1a5c0f94a5f0b8808d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5b25ee75ed6af3df45e6fa30072db01d921df493"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9856095f7afb5a607bf5e65077615ed91273508c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ee8992dea79b51ba77a3fd1a5c0f94a5f0b8808d"],"5b25ee75ed6af3df45e6fa30072db01d921df493":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ee8992dea79b51ba77a3fd1a5c0f94a5f0b8808d"]},"commit2Childs":{"ee8992dea79b51ba77a3fd1a5c0f94a5f0b8808d":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ee8992dea79b51ba77a3fd1a5c0f94a5f0b8808d","9856095f7afb5a607bf5e65077615ed91273508c","5b25ee75ed6af3df45e6fa30072db01d921df493"],"9856095f7afb5a607bf5e65077615ed91273508c":[],"5b25ee75ed6af3df45e6fa30072db01d921df493":["ee8992dea79b51ba77a3fd1a5c0f94a5f0b8808d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}