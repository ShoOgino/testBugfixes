{"path":"src/java/org/apache/lucene/search/FieldValueHitQueue#FieldValueHitQueue(SortField[],int,IndexReader[]).mjava","commits":[{"id":"63bc3238545c6012bd44f5d294077997f236bc4e","date":1233087321,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldValueHitQueue#FieldValueHitQueue(SortField[],int,IndexReader[]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a hit queue sorted by the given list of fields.\n   * @param fields SortField array we are sorting by in\n   *   priority order (highest priority first); cannot be <code>null</code> or empty\n   * @param size  The number of hits to retain.  Must be\n   *   greater than zero.\n   * @param subReaders Array of IndexReaders we will search,\n   *   in order that they will be searched\n   * @throws IOException\n   */\n  public FieldValueHitQueue(SortField[] fields, int size, IndexReader[] subReaders) throws IOException {\n    numComparators = fields.length;\n    comparators = new FieldComparator[numComparators];\n    reverseMul = new int[numComparators];\n\n    if (fields.length == 0) {\n      throw new IllegalArgumentException(\"Sort must contain at least one field\");\n    }\n\n    this.fields = fields;\n    for (int i=0; i<numComparators; ++i) {\n      SortField field = fields[i];\n\n      // AUTO is resolved before we are called\n      assert field.getType() != SortField.AUTO;\n\n      reverseMul[i] = field.reverse ? -1 : 1;\n      comparators[i] = field.getComparator(subReaders, size, i, field.reverse);\n    }\n\n    if (numComparators == 1) {\n      comparator1 = comparators[0];\n      reverseMul1 = reverseMul[0];\n    } else {\n      comparator1 = null;\n      reverseMul1 = 0;\n    }\n\n    initialize(size);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64714133cf5ec732e3bbceee63351bb9af0117dc","date":1239647636,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/FieldValueHitQueue#FieldValueHitQueue(SortField[],int,IndexReader[]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a hit queue sorted by the given list of fields.\n   * @param fields SortField array we are sorting by in\n   *   priority order (highest priority first); cannot be <code>null</code> or empty\n   * @param size  The number of hits to retain.  Must be\n   *   greater than zero.\n   * @param subReaders Array of IndexReaders we will search,\n   *   in order that they will be searched\n   * @throws IOException\n   */\n  public FieldValueHitQueue(SortField[] fields, int size, IndexReader[] subReaders) throws IOException {\n    numComparators = fields.length;\n    comparators = new FieldComparator[numComparators];\n    reverseMul = new int[numComparators];\n\n    if (fields.length == 0) {\n      throw new IllegalArgumentException(\"Sort must contain at least one field\");\n    }\n\n    this.fields = fields;\n    for (int i=0; i<numComparators; ++i) {\n      SortField field = fields[i];\n\n      // AUTO is resolved before we are called\n      assert field.getType() != SortField.AUTO;\n\n      reverseMul[i] = field.reverse ? -1 : 1;\n      comparators[i] = field.getComparator(subReaders, size, i, field.reverse);\n    }\n\n    if (numComparators == 1) {\n      comparator1 = comparators[0];\n      reverseMul1 = reverseMul[0];\n    } else {\n      comparator1 = null;\n      reverseMul1 = 0;\n    }\n\n    initialize(size);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"64714133cf5ec732e3bbceee63351bb9af0117dc":["63bc3238545c6012bd44f5d294077997f236bc4e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"63bc3238545c6012bd44f5d294077997f236bc4e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["64714133cf5ec732e3bbceee63351bb9af0117dc"]},"commit2Childs":{"64714133cf5ec732e3bbceee63351bb9af0117dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["63bc3238545c6012bd44f5d294077997f236bc4e"],"63bc3238545c6012bd44f5d294077997f236bc4e":["64714133cf5ec732e3bbceee63351bb9af0117dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}