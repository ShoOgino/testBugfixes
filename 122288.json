{"path":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(String).mjava","commits":[{"id":"a799d5c6eb6dd4c46e099b34640cc369f6db9155","date":1318737330,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected List<DetectedLanguage> detectLanguage(String content) {\n    List<DetectedLanguage> languages = new ArrayList<DetectedLanguage>();\n    if(content.trim().length() != 0) { \n      LanguageIdentifier identifier = new LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance); \n      certainty = (certainty < 0) ? 0 : certainty;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      log.debug(\"Language detected as \"+language+\" with a certainty of \"+language.getCertainty()+\" (Tika distance=\"+identifier.toString()+\")\");\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(String).mjava","pathOld":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(String).mjava","sourceNew":"  @Override\n  protected List<DetectedLanguage> detectLanguage(String content) {\n    List<DetectedLanguage> languages = new ArrayList<>();\n    if(content.trim().length() != 0) { \n      LanguageIdentifier identifier = new LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance); \n      certainty = (certainty < 0) ? 0 : certainty;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      log.debug(\"Language detected as \"+language+\" with a certainty of \"+language.getCertainty()+\" (Tika distance=\"+identifier.toString()+\")\");\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","sourceOld":"  @Override\n  protected List<DetectedLanguage> detectLanguage(String content) {\n    List<DetectedLanguage> languages = new ArrayList<DetectedLanguage>();\n    if(content.trim().length() != 0) { \n      LanguageIdentifier identifier = new LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance); \n      certainty = (certainty < 0) ? 0 : certainty;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      log.debug(\"Language detected as \"+language+\" with a certainty of \"+language.getCertainty()+\" (Tika distance=\"+identifier.toString()+\")\");\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ff1a276d1c94e9393032df34ad607eda09ee3a6","date":1417803750,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(SolrInputDocument).mjava","pathOld":"solr/contrib/langid/src/java/org/apache/solr/update/processor/TikaLanguageIdentifierUpdateProcessor#detectLanguage(String).mjava","sourceNew":"  @Override\n  protected List<DetectedLanguage> detectLanguage(SolrInputDocument doc) {\n    List<DetectedLanguage> languages = new ArrayList<>();\n    String content = concatFields(doc);\n    if (content.length() != 0) {\n      LanguageIdentifier identifier = new LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance); \n      certainty = (certainty < 0) ? 0 : certainty;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      log.debug(\"Language detected as \"+language+\" with a certainty of \"+language.getCertainty()+\" (Tika distance=\"+identifier.toString()+\")\");\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","sourceOld":"  @Override\n  protected List<DetectedLanguage> detectLanguage(String content) {\n    List<DetectedLanguage> languages = new ArrayList<>();\n    if(content.trim().length() != 0) { \n      LanguageIdentifier identifier = new LanguageIdentifier(content);\n      // FIXME: Hack - we get the distance from toString and calculate our own certainty score\n      Double distance = Double.parseDouble(tikaSimilarityPattern.matcher(identifier.toString()).replaceFirst(\"$1\"));\n      // This formula gives: 0.02 => 0.8, 0.1 => 0.5 which is a better sweetspot than isReasonablyCertain()\n      Double certainty = 1 - (5 * distance); \n      certainty = (certainty < 0) ? 0 : certainty;\n      DetectedLanguage language = new DetectedLanguage(identifier.getLanguage(), certainty);\n      languages.add(language);\n      log.debug(\"Language detected as \"+language+\" with a certainty of \"+language.getCertainty()+\" (Tika distance=\"+identifier.toString()+\")\");\n    } else {\n      log.debug(\"No input text to detect language from, returning empty list\");\n    }\n    return languages;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["a799d5c6eb6dd4c46e099b34640cc369f6db9155"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a799d5c6eb6dd4c46e099b34640cc369f6db9155":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3ff1a276d1c94e9393032df34ad607eda09ee3a6":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3ff1a276d1c94e9393032df34ad607eda09ee3a6"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["3ff1a276d1c94e9393032df34ad607eda09ee3a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a799d5c6eb6dd4c46e099b34640cc369f6db9155"],"a799d5c6eb6dd4c46e099b34640cc369f6db9155":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"3ff1a276d1c94e9393032df34ad607eda09ee3a6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}