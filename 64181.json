{"path":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","commits":[{"id":"b0c7a8f7304b75b1528814c5820fa23a96816c27","date":1298314239,"type":1,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n\n    assert localFieldInfos.get(fi.number) == null;\n    localFieldInfos.put(fi);\n    return fi;\n  }\n\n","sourceOld":"  private FieldInfo addInternal(String name, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, byNumber.size(), storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n    byNumber.add(fi);\n    byName.put(name, fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector,\n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n\n    assert localFieldInfos.get(fi.number) == null;\n    localFieldInfos.put(fi);\n    return fi;\n  }\n\n","sourceOld":"  private FieldInfo addInternal(String name, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector,\n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, byNumber.size(), storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n    byNumber.add(fi);\n    byName.put(name, fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14ec33385f6fbb6ce172882d14605790418a5d31","date":1298910796,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  private FieldInfo addInternal(String name, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, byNumber.size(), storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n    byNumber.add(fi);\n    byName.put(name, fi);\n    return fi;\n  }\n\n","sourceOld":"  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n\n    assert localFieldInfos.get(fi.number) == null;\n    localFieldInfos.put(fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1224a4027481acce15495b03bce9b48b93b42722","date":1300792329,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n\n    assert byNumber.get(fi.number) == null;\n    putInternal(fi);\n    return fi;\n  }\n\n","sourceOld":"  private FieldInfo addInternal(String name, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, byNumber.size(), storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n    byNumber.add(fi);\n    byName.put(name, fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c2cf5832e0f01230bc2c4886e16887a0d1f3341","date":1301042882,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    // don't check modifiable here since we use that to initially build up FIs\n    name = StringHelper.intern(name);\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n\n    putInternal(fi);\n    return fi;\n  }\n\n","sourceOld":"  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n\n    assert byNumber.get(fi.number) == null;\n    putInternal(fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    // don't check modifiable here since we use that to initially build up FIs\n    name = StringHelper.intern(name);\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n\n    putInternal(fi);\n    return fi;\n  }\n\n","sourceOld":"  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector,\n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    name = StringHelper.intern(name);\n    globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n\n    assert localFieldInfos.get(fi.number) == null;\n    localFieldInfos.put(fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":null,"sourceOld":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    // don't check modifiable here since we use that to initially build up FIs\n    name = StringHelper.intern(name);\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n\n    putInternal(fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfos#addInternal(String,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean).mjava","sourceNew":null,"sourceOld":"  /*\n   * NOTE: if you call this method from a public method make sure you check if we are modifiable and throw an exception otherwise\n   */\n  private FieldInfo addInternal(String name, int fieldNumber, boolean isIndexed,\n                                boolean storeTermVector, boolean storePositionWithTermVector, \n                                boolean storeOffsetWithTermVector, boolean omitNorms, boolean storePayloads, boolean omitTermFreqAndPositions) {\n    // don't check modifiable here since we use that to initially build up FIs\n    name = StringHelper.intern(name);\n    if (globalFieldNumbers != null) {\n      globalFieldNumbers.setIfNotSet(fieldNumber, name);\n    } \n    final FieldInfo fi = new FieldInfo(name, isIndexed, fieldNumber, storeTermVector, storePositionWithTermVector,\n                                 storeOffsetWithTermVector, omitNorms, storePayloads, omitTermFreqAndPositions);\n\n    putInternal(fi);\n    return fi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["5c2cf5832e0f01230bc2c4886e16887a0d1f3341","2e8d7ba2175f47e280231533f7d3016249cea88b"],"5c2cf5832e0f01230bc2c4886e16887a0d1f3341":["1224a4027481acce15495b03bce9b48b93b42722"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["5c2cf5832e0f01230bc2c4886e16887a0d1f3341","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["bde51b089eb7f86171eb3406e38a274743f9b7ac","5c2cf5832e0f01230bc2c4886e16887a0d1f3341"],"14ec33385f6fbb6ce172882d14605790418a5d31":["b0c7a8f7304b75b1528814c5820fa23a96816c27"],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b0c7a8f7304b75b1528814c5820fa23a96816c27"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"1224a4027481acce15495b03bce9b48b93b42722":["14ec33385f6fbb6ce172882d14605790418a5d31"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"5c2cf5832e0f01230bc2c4886e16887a0d1f3341":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"14ec33385f6fbb6ce172882d14605790418a5d31":["1224a4027481acce15495b03bce9b48b93b42722"],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["14ec33385f6fbb6ce172882d14605790418a5d31","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2e8d7ba2175f47e280231533f7d3016249cea88b","b0c7a8f7304b75b1528814c5820fa23a96816c27","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"1224a4027481acce15495b03bce9b48b93b42722":["5c2cf5832e0f01230bc2c4886e16887a0d1f3341"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}