{"path":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempPostingsReader#readTermsBlock(IndexInput,FieldInfo,TempTermState).mjava","commits":[{"id":"0a570bec4aec8585a4eea44849bfb2bc264208c4","date":1371308653,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempPostingsReader#readTermsBlock(IndexInput,FieldInfo,TempTermState).mjava","pathOld":"/dev/null","sourceNew":"  /* Reads but does not decode the byte[] blob holding\n     metadata for the current terms block */\n  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, TempTermState _termState) throws IOException {\n    final IntBlockTermState termState = (IntBlockTermState) _termState;\n\n    final int numBytes = termsIn.readVInt();\n\n    if (termState.bytes == null) {\n      termState.bytes = new byte[ArrayUtil.oversize(numBytes, 1)];\n      termState.bytesReader = new ByteArrayDataInput();\n    } else if (termState.bytes.length < numBytes) {\n      termState.bytes = new byte[ArrayUtil.oversize(numBytes, 1)];\n    }\n\n    termsIn.readBytes(termState.bytes, 0, numBytes);\n    termState.bytesReader.reset(termState.bytes, 0, numBytes);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a10f5f1c7f2dcd4a60664dd5c34d803794e023c9","date":1371380031,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempPostingsReader#readTermsBlock(IndexInput,FieldInfo,TempTermState).mjava","sourceNew":null,"sourceOld":"  /* Reads but does not decode the byte[] blob holding\n     metadata for the current terms block */\n  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, TempTermState _termState) throws IOException {\n    final IntBlockTermState termState = (IntBlockTermState) _termState;\n\n    final int numBytes = termsIn.readVInt();\n\n    if (termState.bytes == null) {\n      termState.bytes = new byte[ArrayUtil.oversize(numBytes, 1)];\n      termState.bytesReader = new ByteArrayDataInput();\n    } else if (termState.bytes.length < numBytes) {\n      termState.bytes = new byte[ArrayUtil.oversize(numBytes, 1)];\n    }\n\n    termsIn.readBytes(termState.bytes, 0, numBytes);\n    termState.bytesReader.reset(termState.bytes, 0, numBytes);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a570bec4aec8585a4eea44849bfb2bc264208c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a10f5f1c7f2dcd4a60664dd5c34d803794e023c9":["0a570bec4aec8585a4eea44849bfb2bc264208c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0a570bec4aec8585a4eea44849bfb2bc264208c4":["a10f5f1c7f2dcd4a60664dd5c34d803794e023c9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a570bec4aec8585a4eea44849bfb2bc264208c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a10f5f1c7f2dcd4a60664dd5c34d803794e023c9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a10f5f1c7f2dcd4a60664dd5c34d803794e023c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}