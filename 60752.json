{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/StatePair#hashCode().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/StatePair#hashCode().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/StatePair#hashCode().mjava","sourceNew":"  /**\n   * Returns hash code.\n   * \n   * @return hash code\n   */\n  @Override\n  public int hashCode() {\n    return s1.hashCode() + s2.hashCode();\n  }\n\n","sourceOld":"  /**\n   * Returns hash code.\n   * \n   * @return hash code\n   */\n  @Override\n  public int hashCode() {\n    return s1.hashCode() + s2.hashCode();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f4ef381bf0c2d618c6db830d3dd668c6901c05a","date":1402592253,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/StatePair#hashCode().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns hash code.\n   * \n   * @return hash code\n   */\n  @Override\n  public int hashCode() {\n    return s1.hashCode() + s2.hashCode();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ca1c732df8923f5624f6c06b1dcca9e69d98c96","date":1402957391,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/StatePair#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/LightStatePair#hashCode().mjava","sourceNew":"  /**\n   * Returns hash code.\n   * \n   * @return hash code\n   */\n  @Override\n  public int hashCode() {\n    return s1 ^ s2;\n  }\n\n","sourceOld":"  /**\n   * Returns hash code.\n   * \n   * @return hash code\n   */\n  @Override\n  public int hashCode() {\n    return s1 ^ s2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c84485629d80d203608e8975a1139de9933cc38","date":1403166128,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/StatePair#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/StatePair#hashCode().mjava","sourceNew":"  /**\n   * Returns hash code.\n   * \n   * @return hash code\n   */\n  @Override\n  public int hashCode() {\n    return s1 ^ s2;\n  }\n\n","sourceOld":"  /**\n   * Returns hash code.\n   * \n   * @return hash code\n   */\n  @Override\n  public int hashCode() {\n    return s1.hashCode() + s2.hashCode();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24a98f5fdd23e04f85819dbc63b47a12f7c44311","date":1482439157,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/StatePair#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/StatePair#hashCode().mjava","sourceNew":"  /**\n   * Returns hash code.\n   * \n   * @return hash code\n   */\n  @Override\n  public int hashCode() {\n    // Don't use s1 ^ s2 since it's vulnerable to the case where s1 == s2 always --> hashCode = 0, e.g. if you call Operations.sameLanguage, \n    // passing the same automaton against itself:\n    return s1 * 31 + s2;\n  }\n\n","sourceOld":"  /**\n   * Returns hash code.\n   * \n   * @return hash code\n   */\n  @Override\n  public int hashCode() {\n    return s1 ^ s2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/StatePair#hashCode().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/StatePair#hashCode().mjava","sourceNew":"  /**\n   * Returns hash code.\n   * \n   * @return hash code\n   */\n  @Override\n  public int hashCode() {\n    // Don't use s1 ^ s2 since it's vulnerable to the case where s1 == s2 always --> hashCode = 0, e.g. if you call Operations.sameLanguage, \n    // passing the same automaton against itself:\n    return s1 * 31 + s2;\n  }\n\n","sourceOld":"  /**\n   * Returns hash code.\n   * \n   * @return hash code\n   */\n  @Override\n  public int hashCode() {\n    return s1 ^ s2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["7f4ef381bf0c2d618c6db830d3dd668c6901c05a"],"7f4ef381bf0c2d618c6db830d3dd668c6901c05a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"24a98f5fdd23e04f85819dbc63b47a12f7c44311":["5c84485629d80d203608e8975a1139de9933cc38"],"5c84485629d80d203608e8975a1139de9933cc38":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["24a98f5fdd23e04f85819dbc63b47a12f7c44311"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["5c84485629d80d203608e8975a1139de9933cc38","24a98f5fdd23e04f85819dbc63b47a12f7c44311"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7f4ef381bf0c2d618c6db830d3dd668c6901c05a","5c84485629d80d203608e8975a1139de9933cc38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4ca1c732df8923f5624f6c06b1dcca9e69d98c96":["5c84485629d80d203608e8975a1139de9933cc38"],"7f4ef381bf0c2d618c6db830d3dd668c6901c05a":["4ca1c732df8923f5624f6c06b1dcca9e69d98c96"],"24a98f5fdd23e04f85819dbc63b47a12f7c44311":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"5c84485629d80d203608e8975a1139de9933cc38":["24a98f5fdd23e04f85819dbc63b47a12f7c44311","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}