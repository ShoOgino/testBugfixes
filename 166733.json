{"path":"lucene/core/src/test/org/apache/lucene/util/compress/TestLowercaseAsciiCompression#testRandomCompressibleAscii().mjava","commits":[{"id":"9407318969e8504257b4c5764c65755a043e5404","date":1579873617,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/compress/TestLowercaseAsciiCompression#testRandomCompressibleAscii().mjava","pathOld":"/dev/null","sourceNew":"  public void testRandomCompressibleAscii() throws IOException {\n    for (int iter = 0; iter < 1000; ++iter) {\n      int len = TestUtil.nextInt(random(), 8, 1000);\n      byte[] bytes = new byte[len + random().nextInt(10)];\n      for (int i = 0; i < bytes.length; ++i) {\n        // only use always compressible bytes\n        int b = random().nextInt(32);\n        b = b | 0x20 | ((b & 0x20) << 1);\n        b -= 1;\n        bytes[i] = (byte) b;\n      }\n      assertTrue(doTestCompress(bytes, len));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9407318969e8504257b4c5764c65755a043e5404":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9407318969e8504257b4c5764c65755a043e5404"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9407318969e8504257b4c5764c65755a043e5404"],"9407318969e8504257b4c5764c65755a043e5404":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}