{"path":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/CachedFilterBuilder#getFilter(Element).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/CachedFilterBuilder#getFilter(Element).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/CachedFilterBuilder#getFilter(Element).mjava","sourceNew":"\tpublic synchronized Filter getFilter(Element e) throws ParserException\n\t{\n\n\t\tElement childElement = DOMUtils.getFirstChildOrFail(e);\n\n\t\tif (filterCache == null)\n\t\t{\n\t\t\tfilterCache = new LRUCache<Object,Filter>(cacheSize);\n\t\t}\n\n\t\t// Test to see if child Element is a query or filter that needs to be\n\t\t// cached\n\t\tQueryBuilder qb = queryFactory.getQueryBuilder(childElement.getNodeName());\n\t\tObject cacheKey = null;\n\t\tQuery q = null;\n\t\tFilter f = null;\n\t\tif (qb != null)\n\t\t{\n\t\t\tq = qb.getQuery(childElement);\n\t\t\tcacheKey = q;\n\t\t} else\n\t\t{\n\t\t\tf = filterFactory.getFilter(childElement);\n\t\t\tcacheKey = f;\n\t\t}\n\t\tFilter cachedFilter = filterCache.get(cacheKey);\n\t\tif (cachedFilter != null)\n\t\t{\n\t\t\treturn cachedFilter; // cache hit\n\t\t}\n\t\t\n\t\t//cache miss\n\t\tif (qb != null)\n\t\t{\n\t\t\tcachedFilter = new QueryWrapperFilter(q);\n\t\t} else\n\t\t{\n\t\t\tcachedFilter = new CachingWrapperFilter(f);\n\t\t}\n\n\t\tfilterCache.put(cacheKey, cachedFilter);\n\t\treturn cachedFilter;\n\t}\n\n","sourceOld":"\tpublic synchronized Filter getFilter(Element e) throws ParserException\n\t{\n\n\t\tElement childElement = DOMUtils.getFirstChildOrFail(e);\n\n\t\tif (filterCache == null)\n\t\t{\n\t\t\tfilterCache = new LRUCache<Object,Filter>(cacheSize);\n\t\t}\n\n\t\t// Test to see if child Element is a query or filter that needs to be\n\t\t// cached\n\t\tQueryBuilder qb = queryFactory.getQueryBuilder(childElement.getNodeName());\n\t\tObject cacheKey = null;\n\t\tQuery q = null;\n\t\tFilter f = null;\n\t\tif (qb != null)\n\t\t{\n\t\t\tq = qb.getQuery(childElement);\n\t\t\tcacheKey = q;\n\t\t} else\n\t\t{\n\t\t\tf = filterFactory.getFilter(childElement);\n\t\t\tcacheKey = f;\n\t\t}\n\t\tFilter cachedFilter = filterCache.get(cacheKey);\n\t\tif (cachedFilter != null)\n\t\t{\n\t\t\treturn cachedFilter; // cache hit\n\t\t}\n\t\t\n\t\t//cache miss\n\t\tif (qb != null)\n\t\t{\n\t\t\tcachedFilter = new QueryWrapperFilter(q);\n\t\t} else\n\t\t{\n\t\t\tcachedFilter = new CachingWrapperFilter(f);\n\t\t}\n\n\t\tfilterCache.put(cacheKey, cachedFilter);\n\t\treturn cachedFilter;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2","date":1313460667,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/CachedFilterBuilder#getFilter(Element).mjava","pathOld":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/CachedFilterBuilder#getFilter(Element).mjava","sourceNew":"  public synchronized Filter getFilter(Element e) throws ParserException {\n    Element childElement = DOMUtils.getFirstChildOrFail(e);\n\n    if (filterCache == null) {\n      filterCache = new LRUCache<Object, Filter>(cacheSize);\n    }\n\n    // Test to see if child Element is a query or filter that needs to be\n    // cached\n    QueryBuilder qb = queryFactory.getQueryBuilder(childElement.getNodeName());\n    Object cacheKey = null;\n    Query q = null;\n    Filter f = null;\n    if (qb != null) {\n      q = qb.getQuery(childElement);\n      cacheKey = q;\n    } else {\n      f = filterFactory.getFilter(childElement);\n      cacheKey = f;\n    }\n    Filter cachedFilter = filterCache.get(cacheKey);\n    if (cachedFilter != null) {\n      return cachedFilter; // cache hit\n    }\n\n    //cache miss\n    if (qb != null) {\n      cachedFilter = new QueryWrapperFilter(q);\n    } else {\n      cachedFilter = new CachingWrapperFilter(f);\n    }\n\n    filterCache.put(cacheKey, cachedFilter);\n    return cachedFilter;\n  }\n\n","sourceOld":"\tpublic synchronized Filter getFilter(Element e) throws ParserException\n\t{\n\n\t\tElement childElement = DOMUtils.getFirstChildOrFail(e);\n\n\t\tif (filterCache == null)\n\t\t{\n\t\t\tfilterCache = new LRUCache<Object,Filter>(cacheSize);\n\t\t}\n\n\t\t// Test to see if child Element is a query or filter that needs to be\n\t\t// cached\n\t\tQueryBuilder qb = queryFactory.getQueryBuilder(childElement.getNodeName());\n\t\tObject cacheKey = null;\n\t\tQuery q = null;\n\t\tFilter f = null;\n\t\tif (qb != null)\n\t\t{\n\t\t\tq = qb.getQuery(childElement);\n\t\t\tcacheKey = q;\n\t\t} else\n\t\t{\n\t\t\tf = filterFactory.getFilter(childElement);\n\t\t\tcacheKey = f;\n\t\t}\n\t\tFilter cachedFilter = filterCache.get(cacheKey);\n\t\tif (cachedFilter != null)\n\t\t{\n\t\t\treturn cachedFilter; // cache hit\n\t\t}\n\t\t\n\t\t//cache miss\n\t\tif (qb != null)\n\t\t{\n\t\t\tcachedFilter = new QueryWrapperFilter(q);\n\t\t} else\n\t\t{\n\t\t\tcachedFilter = new CachingWrapperFilter(f);\n\t\t}\n\n\t\tfilterCache.put(cacheKey, cachedFilter);\n\t\treturn cachedFilter;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"251550f5d19b526a76f8c5126ae7bb2d22cf8935","date":1315202008,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/CachedFilterBuilder#getFilter(Element).mjava","pathOld":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/CachedFilterBuilder#getFilter(Element).mjava","sourceNew":"  public synchronized Filter getFilter(Element e) throws ParserException {\n    Element childElement = DOMUtils.getFirstChildOrFail(e);\n\n    if (filterCache == null) {\n      filterCache = new LRUCache<Object, Filter>(cacheSize);\n    }\n\n    // Test to see if child Element is a query or filter that needs to be\n    // cached\n    QueryBuilder qb = queryFactory.getQueryBuilder(childElement.getNodeName());\n    Object cacheKey = null;\n    Query q = null;\n    Filter f = null;\n    if (qb != null) {\n      q = qb.getQuery(childElement);\n      cacheKey = q;\n    } else {\n      f = filterFactory.getFilter(childElement);\n      cacheKey = f;\n    }\n    Filter cachedFilter = filterCache.get(cacheKey);\n    if (cachedFilter != null) {\n      return cachedFilter; // cache hit\n    }\n\n    //cache miss\n    if (qb != null) {\n      cachedFilter = new QueryWrapperFilter(q);\n    } else {\n      cachedFilter = new CachingWrapperFilter(f);\n    }\n\n    filterCache.put(cacheKey, cachedFilter);\n    return cachedFilter;\n  }\n\n","sourceOld":"  public synchronized Filter getFilter(Element e) throws ParserException {\n    Element childElement = DOMUtils.getFirstChildOrFail(e);\n\n    if (filterCache == null) {\n      filterCache = new LRUCache<Object, Filter>(cacheSize);\n    }\n\n    // Test to see if child Element is a query or filter that needs to be\n    // cached\n    QueryBuilder qb = queryFactory.getQueryBuilder(childElement.getNodeName());\n    Object cacheKey = null;\n    Query q = null;\n    Filter f = null;\n    if (qb != null) {\n      q = qb.getQuery(childElement);\n      cacheKey = q;\n    } else {\n      f = filterFactory.getFilter(childElement);\n      cacheKey = f;\n    }\n    Filter cachedFilter = filterCache.get(cacheKey);\n    if (cachedFilter != null) {\n      return cachedFilter; // cache hit\n    }\n\n    //cache miss\n    if (qb != null) {\n      cachedFilter = new QueryWrapperFilter(q);\n    } else {\n      cachedFilter = new CachingWrapperFilter(f);\n    }\n\n    filterCache.put(cacheKey, cachedFilter);\n    return cachedFilter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}