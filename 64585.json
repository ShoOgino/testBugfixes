{"path":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#getDocIdSet(IndexReader,int[],int[]).mjava","commits":[{"id":"90329759f82c33c8fdb14d8bc0db5e81d17934b8","date":1270913806,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#getDocIdSet(IndexReader,int[],int[]).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/misc/ChainedFilter#getDocIdSet(IndexReader,int[],int[]).mjava","sourceNew":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return DocIdSet\n     */\n    private DocIdSet getDocIdSet(IndexReader reader, int[] logic, int[] index)\n    throws IOException\n    {\n        if (logic.length != chain.length)\n            throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n\n        OpenBitSetDISI result = initialResult(reader, logic[0], index);\n        for (; index[0] < chain.length; index[0]++)\n        {\n            doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(reader));\n        }\n        return finalResult(result, reader.maxDoc());\n    }\n\n","sourceOld":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return DocIdSet\n     */\n    private DocIdSet getDocIdSet(IndexReader reader, int[] logic, int[] index)\n    throws IOException\n    {\n        if (logic.length != chain.length)\n            throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n\n        OpenBitSetDISI result = initialResult(reader, logic[0], index);\n        for (; index[0] < chain.length; index[0]++)\n        {\n            doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(reader));\n        }\n        return finalResult(result, reader.maxDoc());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#getDocIdSet(IndexReader,int[],int[]).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#getDocIdSet(IndexReader,int[],int[]).mjava","sourceNew":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return DocIdSet\n     */\n    private DocIdSet getDocIdSet(IndexReader reader, int[] logic, int[] index)\n    throws IOException\n    {\n        if (logic.length != chain.length)\n            throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n\n        OpenBitSetDISI result = initialResult(reader, logic[0], index);\n        for (; index[0] < chain.length; index[0]++)\n        {\n            doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(reader));\n        }\n        return result;\n    }\n\n","sourceOld":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return DocIdSet\n     */\n    private DocIdSet getDocIdSet(IndexReader reader, int[] logic, int[] index)\n    throws IOException\n    {\n        if (logic.length != chain.length)\n            throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n\n        OpenBitSetDISI result = initialResult(reader, logic[0], index);\n        for (; index[0] < chain.length; index[0]++)\n        {\n            doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(reader));\n        }\n        return finalResult(result, reader.maxDoc());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#getDocIdSet(IndexReader,int[],int[]).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#getDocIdSet(IndexReader,int[],int[]).mjava","sourceNew":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return DocIdSet\n     */\n    private DocIdSet getDocIdSet(IndexReader reader, int[] logic, int[] index)\n    throws IOException\n    {\n        if (logic.length != chain.length)\n            throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n\n        OpenBitSetDISI result = initialResult(reader, logic[0], index);\n        for (; index[0] < chain.length; index[0]++)\n        {\n            doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(reader));\n        }\n        return result;\n    }\n\n","sourceOld":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return DocIdSet\n     */\n    private DocIdSet getDocIdSet(IndexReader reader, int[] logic, int[] index)\n    throws IOException\n    {\n        if (logic.length != chain.length)\n            throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n\n        OpenBitSetDISI result = initialResult(reader, logic[0], index);\n        for (; index[0] < chain.length; index[0]++)\n        {\n            doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(reader));\n        }\n        return finalResult(result, reader.maxDoc());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#getDocIdSet(IndexReader,int[],int[]).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#getDocIdSet(IndexReader,int[],int[]).mjava","sourceNew":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return DocIdSet\n     */\n    private DocIdSet getDocIdSet(IndexReader reader, int[] logic, int[] index)\n    throws IOException\n    {\n        if (logic.length != chain.length)\n            throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n\n        OpenBitSetDISI result = initialResult(reader, logic[0], index);\n        for (; index[0] < chain.length; index[0]++)\n        {\n            doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(reader));\n        }\n        return result;\n    }\n\n","sourceOld":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return DocIdSet\n     */\n    private DocIdSet getDocIdSet(IndexReader reader, int[] logic, int[] index)\n    throws IOException\n    {\n        if (logic.length != chain.length)\n            throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n\n        OpenBitSetDISI result = initialResult(reader, logic[0], index);\n        for (; index[0] < chain.length; index[0]++)\n        {\n            doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(reader));\n        }\n        return finalResult(result, reader.maxDoc());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dadf0f3286a34a0fee6e788ffce88624bf2984e","date":1294260428,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#getDocIdSet(ReaderContext,int[],int[]).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#getDocIdSet(IndexReader,int[],int[]).mjava","sourceNew":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return DocIdSet\n     */\n    private DocIdSet getDocIdSet(ReaderContext info, int[] logic, int[] index)\n    throws IOException\n    {\n        if (logic.length != chain.length)\n            throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n\n        OpenBitSetDISI result = initialResult(info, logic[0], index);\n        for (; index[0] < chain.length; index[0]++)\n        {\n            doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(info));\n        }\n        return result;\n    }\n\n","sourceOld":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return DocIdSet\n     */\n    private DocIdSet getDocIdSet(IndexReader reader, int[] logic, int[] index)\n    throws IOException\n    {\n        if (logic.length != chain.length)\n            throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n\n        OpenBitSetDISI result = initialResult(reader, logic[0], index);\n        for (; index[0] < chain.length; index[0]++)\n        {\n            doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(reader));\n        }\n        return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#getDocIdSet(IndexReader,int[],int[]).mjava","sourceNew":null,"sourceOld":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return DocIdSet\n     */\n    private DocIdSet getDocIdSet(IndexReader reader, int[] logic, int[] index)\n    throws IOException\n    {\n        if (logic.length != chain.length)\n            throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n\n        OpenBitSetDISI result = initialResult(reader, logic[0], index);\n        for (; index[0] < chain.length; index[0]++)\n        {\n            doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(reader));\n        }\n        return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#getDocIdSet(IndexReader,int[],int[]).mjava","sourceNew":null,"sourceOld":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return DocIdSet\n     */\n    private DocIdSet getDocIdSet(IndexReader reader, int[] logic, int[] index)\n    throws IOException\n    {\n        if (logic.length != chain.length)\n            throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n\n        OpenBitSetDISI result = initialResult(reader, logic[0], index);\n        for (; index[0] < chain.length; index[0]++)\n        {\n            doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(reader));\n        }\n        return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90329759f82c33c8fdb14d8bc0db5e81d17934b8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["3bb13258feba31ab676502787ab2e1779f129b7a","2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["90329759f82c33c8fdb14d8bc0db5e81d17934b8","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"3bb13258feba31ab676502787ab2e1779f129b7a":["90329759f82c33c8fdb14d8bc0db5e81d17934b8","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["90329759f82c33c8fdb14d8bc0db5e81d17934b8"]},"commit2Childs":{"90329759f82c33c8fdb14d8bc0db5e81d17934b8":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["90329759f82c33c8fdb14d8bc0db5e81d17934b8"],"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"3bb13258feba31ab676502787ab2e1779f129b7a":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["2dadf0f3286a34a0fee6e788ffce88624bf2984e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}