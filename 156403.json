{"path":"solr/core/src/java/org/apache/solr/rest/SolrSchemaRestApi#createInboundRoot().mjava","commits":[{"id":"afb6bf9ce227ab6aac5068547e286ecc958b8b9d","date":1394661169,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/SolrSchemaRestApi#createInboundRoot().mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/SolrRestApi#createInboundRoot().mjava","sourceNew":"  /**\n   * Bind URL paths to the appropriate ServerResource subclass. \n   */\n  @Override\n  public synchronized Restlet createInboundRoot() {\n\n    log.info(\"createInboundRoot started for /schema\");\n\n    router.attach(\"\", SchemaResource.class);\n    // Allow a trailing slash on full-schema requests\n    router.attach(\"/\", SchemaResource.class);\n    \n    router.attach(FIELDS_PATH, FieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(FIELDS_PATH + \"/\", FieldCollectionResource.class);\n    router.attach(FIELDS_PATH + NAME_SEGMENT, FieldResource.class);\n\n    router.attach(DYNAMIC_FIELDS_PATH, DynamicFieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(DYNAMIC_FIELDS_PATH + \"/\", DynamicFieldCollectionResource.class);\n    router.attach(DYNAMIC_FIELDS_PATH + NAME_SEGMENT, DynamicFieldResource.class);\n\n    router.attach(FIELDTYPES_PATH, FieldTypeCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(FIELDTYPES_PATH + \"/\", FieldTypeCollectionResource.class);\n    router.attach(FIELDTYPES_PATH + NAME_SEGMENT, FieldTypeResource.class);\n\n    router.attach(COPY_FIELDS_PATH, CopyFieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(COPY_FIELDS_PATH + \"/\", CopyFieldCollectionResource.class);\n    \n    router.attach(NAME_PATH, SchemaNameResource.class);\n    \n    router.attach(VERSION_PATH, SchemaVersionResource.class);\n    \n    router.attach(UNIQUE_KEY_FIELD_PATH, UniqueKeyFieldResource.class);\n\n    router.attach(DEFAULT_SEARCH_FIELD_PATH, DefaultSearchFieldResource.class);\n    \n    router.attach(SIMILARITY_PATH, SchemaSimilarityResource.class);\n\n    // At present solrQueryParser only contains defaultOperator, but there may be more children in the future\n    router.attach(SOLR_QUERY_PARSER_PATH, SolrQueryParserResource.class);\n    router.attach(DEFAULT_OPERATOR_PATH, SolrQueryParserDefaultOperatorResource.class);\n\n    router.attachDefault(RestManager.ManagedEndpoint.class);\n    \n    // attach all the dynamically registered schema resources\n    RestManager.getRestManager(SolrRequestInfo.getRequestInfo())\n        .attachManagedResources(RestManager.SCHEMA_BASE_PATH, router);\n\n    log.info(\"createInboundRoot complete for /schema\");\n\n    return router;\n  }  \n\n","sourceOld":"  /**\n   * Bind URL paths to the appropriate ServerResource subclass. \n   */\n  @Override\n  public synchronized Restlet createInboundRoot() {\n\n    log.info(\"createInboundRoot started\");\n    \n    router.attach(\"\", SchemaResource.class);\n    // Allow a trailing slash on full-schema requests\n    router.attach(\"/\", SchemaResource.class);\n    \n    router.attach(FIELDS_PATH, FieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(FIELDS_PATH + \"/\", FieldCollectionResource.class);\n    router.attach(FIELDS_PATH + NAME_SEGMENT, FieldResource.class);\n\n    router.attach(DYNAMIC_FIELDS_PATH, DynamicFieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(DYNAMIC_FIELDS_PATH + \"/\", DynamicFieldCollectionResource.class);\n    router.attach(DYNAMIC_FIELDS_PATH + NAME_SEGMENT, DynamicFieldResource.class);\n\n    router.attach(FIELDTYPES_PATH, FieldTypeCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(FIELDTYPES_PATH + \"/\", FieldTypeCollectionResource.class);\n    router.attach(FIELDTYPES_PATH + NAME_SEGMENT, FieldTypeResource.class);\n\n    router.attach(COPY_FIELDS_PATH, CopyFieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(COPY_FIELDS_PATH + \"/\", CopyFieldCollectionResource.class);\n    \n    router.attach(NAME_PATH, SchemaNameResource.class);\n    \n    router.attach(VERSION_PATH, SchemaVersionResource.class);\n    \n    router.attach(UNIQUE_KEY_FIELD_PATH, UniqueKeyFieldResource.class);\n\n    router.attach(DEFAULT_SEARCH_FIELD_PATH, DefaultSearchFieldResource.class);\n    \n    router.attach(SIMILARITY_PATH, SchemaSimilarityResource.class);\n\n    // At present solrQueryParser only contains defaultOperator, but there may be more children in the future\n    router.attach(SOLR_QUERY_PARSER_PATH, SolrQueryParserResource.class);\n    router.attach(DEFAULT_OPERATOR_PATH, SolrQueryParserDefaultOperatorResource.class);\n\n    router.attachDefault(DefaultSchemaResource.class);\n\n    log.info(\"createInboundRoot complete\");\n\n    return router;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"106069d345c14ee5c76f0ea76397b02a656f883c","date":1411998064,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/SolrSchemaRestApi#createInboundRoot().mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/SolrSchemaRestApi#createInboundRoot().mjava","sourceNew":"  /**\n   * Bind URL paths to the appropriate ServerResource subclass. \n   */\n  @Override\n  public synchronized Restlet createInboundRoot() {\n\n    log.info(\"createInboundRoot started for /schema\");\n\n    router.attach(\"\", SchemaResource.class);\n    // Allow a trailing slash on full-schema requests\n    router.attach(\"/\", SchemaResource.class);\n    \n    router.attach(FIELDS_PATH, FieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(FIELDS_PATH + \"/\", FieldCollectionResource.class);\n    router.attach(FIELDS_PATH + NAME_SEGMENT, FieldResource.class);\n\n    router.attach(DYNAMIC_FIELDS_PATH, DynamicFieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(DYNAMIC_FIELDS_PATH + \"/\", DynamicFieldCollectionResource.class);\n    router.attach(DYNAMIC_FIELDS_PATH + NAME_SEGMENT, DynamicFieldResource.class);\n\n    router.attach(FIELDTYPES_PATH, FieldTypeCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(FIELDTYPES_PATH + \"/\", FieldTypeCollectionResource.class);\n    router.attach(FIELDTYPES_PATH + NAME_SEGMENT, FieldTypeResource.class);\n\n    router.attach(COPY_FIELDS_PATH, CopyFieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(COPY_FIELDS_PATH + \"/\", CopyFieldCollectionResource.class);\n    \n    router.attach(NAME_PATH, SchemaNameResource.class);\n    \n    router.attach(VERSION_PATH, SchemaVersionResource.class);\n    \n    router.attach(UNIQUE_KEY_FIELD_PATH, UniqueKeyFieldResource.class);\n\n    router.attach(DEFAULT_SEARCH_FIELD_PATH, DefaultSearchFieldResource.class);\n    \n    router.attach(SIMILARITY_PATH, SchemaSimilarityResource.class);\n\n    // At present solrQueryParser only contains defaultOperator, but there may be more children in the future\n    router.attach(SOLR_QUERY_PARSER_PATH, SolrQueryParserResource.class);\n    router.attach(DEFAULT_OPERATOR_PATH, SolrQueryParserDefaultOperatorResource.class);\n\n    router.attach(ZK_VERSION_PATH, SchemaZkVersionResource.class);\n    \n    router.attachDefault(RestManager.ManagedEndpoint.class);\n    \n    // attach all the dynamically registered schema resources\n    RestManager.getRestManager(SolrRequestInfo.getRequestInfo())\n        .attachManagedResources(RestManager.SCHEMA_BASE_PATH, router);\n\n    log.info(\"createInboundRoot complete for /schema\");\n\n    return router;\n  }  \n\n","sourceOld":"  /**\n   * Bind URL paths to the appropriate ServerResource subclass. \n   */\n  @Override\n  public synchronized Restlet createInboundRoot() {\n\n    log.info(\"createInboundRoot started for /schema\");\n\n    router.attach(\"\", SchemaResource.class);\n    // Allow a trailing slash on full-schema requests\n    router.attach(\"/\", SchemaResource.class);\n    \n    router.attach(FIELDS_PATH, FieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(FIELDS_PATH + \"/\", FieldCollectionResource.class);\n    router.attach(FIELDS_PATH + NAME_SEGMENT, FieldResource.class);\n\n    router.attach(DYNAMIC_FIELDS_PATH, DynamicFieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(DYNAMIC_FIELDS_PATH + \"/\", DynamicFieldCollectionResource.class);\n    router.attach(DYNAMIC_FIELDS_PATH + NAME_SEGMENT, DynamicFieldResource.class);\n\n    router.attach(FIELDTYPES_PATH, FieldTypeCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(FIELDTYPES_PATH + \"/\", FieldTypeCollectionResource.class);\n    router.attach(FIELDTYPES_PATH + NAME_SEGMENT, FieldTypeResource.class);\n\n    router.attach(COPY_FIELDS_PATH, CopyFieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(COPY_FIELDS_PATH + \"/\", CopyFieldCollectionResource.class);\n    \n    router.attach(NAME_PATH, SchemaNameResource.class);\n    \n    router.attach(VERSION_PATH, SchemaVersionResource.class);\n    \n    router.attach(UNIQUE_KEY_FIELD_PATH, UniqueKeyFieldResource.class);\n\n    router.attach(DEFAULT_SEARCH_FIELD_PATH, DefaultSearchFieldResource.class);\n    \n    router.attach(SIMILARITY_PATH, SchemaSimilarityResource.class);\n\n    // At present solrQueryParser only contains defaultOperator, but there may be more children in the future\n    router.attach(SOLR_QUERY_PARSER_PATH, SolrQueryParserResource.class);\n    router.attach(DEFAULT_OPERATOR_PATH, SolrQueryParserDefaultOperatorResource.class);\n\n    router.attachDefault(RestManager.ManagedEndpoint.class);\n    \n    // attach all the dynamically registered schema resources\n    RestManager.getRestManager(SolrRequestInfo.getRequestInfo())\n        .attachManagedResources(RestManager.SCHEMA_BASE_PATH, router);\n\n    log.info(\"createInboundRoot complete for /schema\");\n\n    return router;\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/rest/SolrSchemaRestApi#createInboundRoot().mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/SolrSchemaRestApi#createInboundRoot().mjava","sourceNew":"  /**\n   * Bind URL paths to the appropriate ServerResource subclass. \n   */\n  @Override\n  public synchronized Restlet createInboundRoot() {\n\n    log.info(\"createInboundRoot started for /schema\");\n\n    router.attach(\"\", SchemaResource.class);\n    // Allow a trailing slash on full-schema requests\n    router.attach(\"/\", SchemaResource.class);\n    \n    router.attach(FIELDS_PATH, FieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(FIELDS_PATH + \"/\", FieldCollectionResource.class);\n    router.attach(FIELDS_PATH + NAME_SEGMENT, FieldResource.class);\n\n    router.attach(DYNAMIC_FIELDS_PATH, DynamicFieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(DYNAMIC_FIELDS_PATH + \"/\", DynamicFieldCollectionResource.class);\n    router.attach(DYNAMIC_FIELDS_PATH + NAME_SEGMENT, DynamicFieldResource.class);\n\n    router.attach(FIELDTYPES_PATH, FieldTypeCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(FIELDTYPES_PATH + \"/\", FieldTypeCollectionResource.class);\n    router.attach(FIELDTYPES_PATH + NAME_SEGMENT, FieldTypeResource.class);\n\n    router.attach(COPY_FIELDS_PATH, CopyFieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(COPY_FIELDS_PATH + \"/\", CopyFieldCollectionResource.class);\n    \n    router.attach(NAME_PATH, SchemaNameResource.class);\n    \n    router.attach(VERSION_PATH, SchemaVersionResource.class);\n    \n    router.attach(UNIQUE_KEY_FIELD_PATH, UniqueKeyFieldResource.class);\n\n    router.attach(DEFAULT_SEARCH_FIELD_PATH, DefaultSearchFieldResource.class);\n    \n    router.attach(SIMILARITY_PATH, SchemaSimilarityResource.class);\n\n    // At present solrQueryParser only contains defaultOperator, but there may be more children in the future\n    router.attach(SOLR_QUERY_PARSER_PATH, SolrQueryParserResource.class);\n    router.attach(DEFAULT_OPERATOR_PATH, SolrQueryParserDefaultOperatorResource.class);\n\n    router.attach(ZK_VERSION_PATH, SchemaZkVersionResource.class);\n    \n    router.attachDefault(RestManager.ManagedEndpoint.class);\n    \n    // attach all the dynamically registered schema resources\n    RestManager.getRestManager(SolrRequestInfo.getRequestInfo())\n        .attachManagedResources(RestManager.SCHEMA_BASE_PATH, router);\n\n    log.info(\"createInboundRoot complete for /schema\");\n\n    return router;\n  }  \n\n","sourceOld":"  /**\n   * Bind URL paths to the appropriate ServerResource subclass. \n   */\n  @Override\n  public synchronized Restlet createInboundRoot() {\n\n    log.info(\"createInboundRoot started for /schema\");\n\n    router.attach(\"\", SchemaResource.class);\n    // Allow a trailing slash on full-schema requests\n    router.attach(\"/\", SchemaResource.class);\n    \n    router.attach(FIELDS_PATH, FieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(FIELDS_PATH + \"/\", FieldCollectionResource.class);\n    router.attach(FIELDS_PATH + NAME_SEGMENT, FieldResource.class);\n\n    router.attach(DYNAMIC_FIELDS_PATH, DynamicFieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(DYNAMIC_FIELDS_PATH + \"/\", DynamicFieldCollectionResource.class);\n    router.attach(DYNAMIC_FIELDS_PATH + NAME_SEGMENT, DynamicFieldResource.class);\n\n    router.attach(FIELDTYPES_PATH, FieldTypeCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(FIELDTYPES_PATH + \"/\", FieldTypeCollectionResource.class);\n    router.attach(FIELDTYPES_PATH + NAME_SEGMENT, FieldTypeResource.class);\n\n    router.attach(COPY_FIELDS_PATH, CopyFieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(COPY_FIELDS_PATH + \"/\", CopyFieldCollectionResource.class);\n    \n    router.attach(NAME_PATH, SchemaNameResource.class);\n    \n    router.attach(VERSION_PATH, SchemaVersionResource.class);\n    \n    router.attach(UNIQUE_KEY_FIELD_PATH, UniqueKeyFieldResource.class);\n\n    router.attach(DEFAULT_SEARCH_FIELD_PATH, DefaultSearchFieldResource.class);\n    \n    router.attach(SIMILARITY_PATH, SchemaSimilarityResource.class);\n\n    // At present solrQueryParser only contains defaultOperator, but there may be more children in the future\n    router.attach(SOLR_QUERY_PARSER_PATH, SolrQueryParserResource.class);\n    router.attach(DEFAULT_OPERATOR_PATH, SolrQueryParserDefaultOperatorResource.class);\n\n    router.attachDefault(RestManager.ManagedEndpoint.class);\n    \n    // attach all the dynamically registered schema resources\n    RestManager.getRestManager(SolrRequestInfo.getRequestInfo())\n        .attachManagedResources(RestManager.SCHEMA_BASE_PATH, router);\n\n    log.info(\"createInboundRoot complete for /schema\");\n\n    return router;\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d72e80cee24be385c713864a9f1f90be3744482","date":1417420925,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/SolrSchemaRestApi#createInboundRoot().mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/SolrSchemaRestApi#createInboundRoot().mjava","sourceNew":"  /**\n   * Bind URL paths to the appropriate ServerResource subclass. \n   */\n  @Override\n  public synchronized Restlet createInboundRoot() {\n\n    log.info(\"createInboundRoot started for /schema\");\n\n\n    router.attach(FIELDS_PATH, FieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(FIELDS_PATH + \"/\", FieldCollectionResource.class);\n    router.attach(FIELDS_PATH + NAME_SEGMENT, FieldResource.class);\n\n    router.attach(DYNAMIC_FIELDS_PATH, DynamicFieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(DYNAMIC_FIELDS_PATH + \"/\", DynamicFieldCollectionResource.class);\n    router.attach(DYNAMIC_FIELDS_PATH + NAME_SEGMENT, DynamicFieldResource.class);\n\n    router.attach(FIELDTYPES_PATH, FieldTypeCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(FIELDTYPES_PATH + \"/\", FieldTypeCollectionResource.class);\n    router.attach(FIELDTYPES_PATH + NAME_SEGMENT, FieldTypeResource.class);\n\n    router.attach(COPY_FIELDS_PATH, CopyFieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(COPY_FIELDS_PATH + \"/\", CopyFieldCollectionResource.class);\n\n    router.attachDefault(RestManager.ManagedEndpoint.class);\n    \n    // attach all the dynamically registered schema resources\n    RestManager.getRestManager(SolrRequestInfo.getRequestInfo())\n        .attachManagedResources(RestManager.SCHEMA_BASE_PATH, router);\n\n    log.info(\"createInboundRoot complete for /schema\");\n\n    return router;\n  }  \n\n","sourceOld":"  /**\n   * Bind URL paths to the appropriate ServerResource subclass. \n   */\n  @Override\n  public synchronized Restlet createInboundRoot() {\n\n    log.info(\"createInboundRoot started for /schema\");\n\n    router.attach(\"\", SchemaResource.class);\n    // Allow a trailing slash on full-schema requests\n    router.attach(\"/\", SchemaResource.class);\n    \n    router.attach(FIELDS_PATH, FieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(FIELDS_PATH + \"/\", FieldCollectionResource.class);\n    router.attach(FIELDS_PATH + NAME_SEGMENT, FieldResource.class);\n\n    router.attach(DYNAMIC_FIELDS_PATH, DynamicFieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(DYNAMIC_FIELDS_PATH + \"/\", DynamicFieldCollectionResource.class);\n    router.attach(DYNAMIC_FIELDS_PATH + NAME_SEGMENT, DynamicFieldResource.class);\n\n    router.attach(FIELDTYPES_PATH, FieldTypeCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(FIELDTYPES_PATH + \"/\", FieldTypeCollectionResource.class);\n    router.attach(FIELDTYPES_PATH + NAME_SEGMENT, FieldTypeResource.class);\n\n    router.attach(COPY_FIELDS_PATH, CopyFieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(COPY_FIELDS_PATH + \"/\", CopyFieldCollectionResource.class);\n    \n    router.attach(NAME_PATH, SchemaNameResource.class);\n    \n    router.attach(VERSION_PATH, SchemaVersionResource.class);\n    \n    router.attach(UNIQUE_KEY_FIELD_PATH, UniqueKeyFieldResource.class);\n\n    router.attach(DEFAULT_SEARCH_FIELD_PATH, DefaultSearchFieldResource.class);\n    \n    router.attach(SIMILARITY_PATH, SchemaSimilarityResource.class);\n\n    // At present solrQueryParser only contains defaultOperator, but there may be more children in the future\n    router.attach(SOLR_QUERY_PARSER_PATH, SolrQueryParserResource.class);\n    router.attach(DEFAULT_OPERATOR_PATH, SolrQueryParserDefaultOperatorResource.class);\n\n    router.attach(ZK_VERSION_PATH, SchemaZkVersionResource.class);\n    \n    router.attachDefault(RestManager.ManagedEndpoint.class);\n    \n    // attach all the dynamically registered schema resources\n    RestManager.getRestManager(SolrRequestInfo.getRequestInfo())\n        .attachManagedResources(RestManager.SCHEMA_BASE_PATH, router);\n\n    log.info(\"createInboundRoot complete for /schema\");\n\n    return router;\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f494bc636a1302995e4930fdccd371eeda452f87","date":1457370876,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/SolrSchemaRestApi#createInboundRoot().mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/SolrSchemaRestApi#createInboundRoot().mjava","sourceNew":"  /**\n   * Bind URL paths to the appropriate ServerResource subclass. \n   */\n  @Override\n  public synchronized Restlet createInboundRoot() {\n\n    log.info(\"createInboundRoot started for /schema\");\n\n\n    router.attachDefault(RestManager.ManagedEndpoint.class);\n    \n    // attach all the dynamically registered schema resources\n    RestManager.getRestManager(SolrRequestInfo.getRequestInfo())\n        .attachManagedResources(RestManager.SCHEMA_BASE_PATH, router);\n\n    log.info(\"createInboundRoot complete for /schema\");\n\n    return router;\n  }  \n\n","sourceOld":"  /**\n   * Bind URL paths to the appropriate ServerResource subclass. \n   */\n  @Override\n  public synchronized Restlet createInboundRoot() {\n\n    log.info(\"createInboundRoot started for /schema\");\n\n\n    router.attach(FIELDS_PATH, FieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(FIELDS_PATH + \"/\", FieldCollectionResource.class);\n    router.attach(FIELDS_PATH + NAME_SEGMENT, FieldResource.class);\n\n    router.attach(DYNAMIC_FIELDS_PATH, DynamicFieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(DYNAMIC_FIELDS_PATH + \"/\", DynamicFieldCollectionResource.class);\n    router.attach(DYNAMIC_FIELDS_PATH + NAME_SEGMENT, DynamicFieldResource.class);\n\n    router.attach(FIELDTYPES_PATH, FieldTypeCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(FIELDTYPES_PATH + \"/\", FieldTypeCollectionResource.class);\n    router.attach(FIELDTYPES_PATH + NAME_SEGMENT, FieldTypeResource.class);\n\n    router.attach(COPY_FIELDS_PATH, CopyFieldCollectionResource.class);\n    // Allow a trailing slash on collection requests\n    router.attach(COPY_FIELDS_PATH + \"/\", CopyFieldCollectionResource.class);\n\n    router.attachDefault(RestManager.ManagedEndpoint.class);\n    \n    // attach all the dynamically registered schema resources\n    RestManager.getRestManager(SolrRequestInfo.getRequestInfo())\n        .attachManagedResources(RestManager.SCHEMA_BASE_PATH, router);\n\n    log.info(\"createInboundRoot complete for /schema\");\n\n    return router;\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b","date":1601832109,"type":4,"author":"Timothy Potter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/rest/SolrSchemaRestApi#createInboundRoot().mjava","sourceNew":null,"sourceOld":"  /**\n   * Bind URL paths to the appropriate ServerResource subclass. \n   */\n  @Override\n  public synchronized Restlet createInboundRoot() {\n\n    log.info(\"createInboundRoot started for /schema\");\n\n\n    router.attachDefault(RestManager.ManagedEndpoint.class);\n    \n    // attach all the dynamically registered schema resources\n    RestManager.getRestManager(SolrRequestInfo.getRequestInfo())\n        .attachManagedResources(RestManager.SCHEMA_BASE_PATH, router);\n\n    log.info(\"createInboundRoot complete for /schema\");\n\n    return router;\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b":["f494bc636a1302995e4930fdccd371eeda452f87"],"7d72e80cee24be385c713864a9f1f90be3744482":["106069d345c14ee5c76f0ea76397b02a656f883c"],"f494bc636a1302995e4930fdccd371eeda452f87":["7d72e80cee24be385c713864a9f1f90be3744482"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d","106069d345c14ee5c76f0ea76397b02a656f883c"],"106069d345c14ee5c76f0ea76397b02a656f883c":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b"]},"commit2Childs":{"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7d72e80cee24be385c713864a9f1f90be3744482":["f494bc636a1302995e4930fdccd371eeda452f87"],"f494bc636a1302995e4930fdccd371eeda452f87":["89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["d9a47902d6207303f5ed3e7aaca62ca33433af66","106069d345c14ee5c76f0ea76397b02a656f883c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"106069d345c14ee5c76f0ea76397b02a656f883c":["7d72e80cee24be385c713864a9f1f90be3744482","d9a47902d6207303f5ed3e7aaca62ca33433af66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}