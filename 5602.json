{"path":"lucene/core/src/java/org/apache/lucene/util/IOUtils#fsync(File).mjava","commits":[{"id":"0708f93f78bcbc47a9202f9387e17ec20b4df20d","date":1397053744,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#fsync(File).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Ensure that any writes to the given file is written to the storage device that contains it.\n   * @param fileToSync the file to fsync\n   */\n  public static void fsync(File fileToSync) throws IOException {\n    IOException exc = null;\n    for (int retry = 0; retry < 5; retry++) {\n      try {\n        try (FileChannel file = FileChannel.open(fileToSync.toPath(), StandardOpenOption.WRITE)) {\n          file.force(true); // TODO: we probably dont care about metadata, but this is what we did before...\n          return;\n        }\n      } catch (IOException ioe) {\n        if (exc == null) {\n          exc = ioe;\n        }\n        try {\n          // Pause 5 msec\n          Thread.sleep(5);\n        } catch (InterruptedException ie) {\n          ThreadInterruptedException ex = new ThreadInterruptedException(ie);\n          ex.addSuppressed(exc);\n          throw ex;\n        }\n      }\n    }\n    // Throw original exception\n    throw exc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e51a73abd3e0a6985e6c31e220c3ac5a5be01d45","date":1397155593,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#fsync(File).mjava","sourceNew":null,"sourceOld":"  /**\n   * Ensure that any writes to the given file is written to the storage device that contains it.\n   * @param fileToSync the file to fsync\n   */\n  public static void fsync(File fileToSync) throws IOException {\n    IOException exc = null;\n    for (int retry = 0; retry < 5; retry++) {\n      try {\n        try (FileChannel file = FileChannel.open(fileToSync.toPath(), StandardOpenOption.WRITE)) {\n          file.force(true); // TODO: we probably dont care about metadata, but this is what we did before...\n          return;\n        }\n      } catch (IOException ioe) {\n        if (exc == null) {\n          exc = ioe;\n        }\n        try {\n          // Pause 5 msec\n          Thread.sleep(5);\n        } catch (InterruptedException ie) {\n          ThreadInterruptedException ex = new ThreadInterruptedException(ie);\n          ex.addSuppressed(exc);\n          throw ex;\n        }\n      }\n    }\n    // Throw original exception\n    throw exc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e51a73abd3e0a6985e6c31e220c3ac5a5be01d45":["0708f93f78bcbc47a9202f9387e17ec20b4df20d"],"0708f93f78bcbc47a9202f9387e17ec20b4df20d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e51a73abd3e0a6985e6c31e220c3ac5a5be01d45"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0708f93f78bcbc47a9202f9387e17ec20b4df20d"],"e51a73abd3e0a6985e6c31e220c3ac5a5be01d45":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0708f93f78bcbc47a9202f9387e17ec20b4df20d":["e51a73abd3e0a6985e6c31e220c3ac5a5be01d45"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}