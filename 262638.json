{"path":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#DirectoryReader(Directory,AtomicReader[]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#DirectoryReader(Directory,AtomicReader[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#DirectoryReader(Directory,AtomicReader[]).mjava","sourceNew":"  protected DirectoryReader(Directory directory, AtomicReader[] readers) throws CorruptIndexException, IOException {\n    super(readers);\n    this.directory = directory;\n  }\n\n","sourceOld":"  protected DirectoryReader(Directory directory, AtomicReader[] readers) throws CorruptIndexException, IOException {\n    super(readers);\n    this.directory = directory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55fd9dcf98ceb0c5bf520ec1a7985676384b8747","date":1331629546,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#DirectoryReader(Directory,AtomicReader[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#DirectoryReader(Directory,AtomicReader[]).mjava","sourceNew":"  /**\n   * Expert: Constructs a {@code DirectoryReader} on the given subReaders.\n   * @param segmentReaders the wrapped atomic index segment readers. This array is\n   * returned by {@link #getSequentialSubReaders} and used to resolve the correct\n   * subreader for docID-based methods. <b>Please note:</b> This array is <b>not</b>\n   * cloned and not protected for modification outside of this reader.\n   * Subclasses of {@code DirectoryReader} should take care to not allow\n   * modification of this internal array, e.g. {@link #doOpenIfChanged()}.\n   */\n  protected DirectoryReader(Directory directory, AtomicReader[] segmentReaders) throws CorruptIndexException, IOException {\n    super(segmentReaders);\n    this.directory = directory;\n  }\n\n","sourceOld":"  protected DirectoryReader(Directory directory, AtomicReader[] readers) throws CorruptIndexException, IOException {\n    super(readers);\n    this.directory = directory;\n  }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#DirectoryReader(Directory,AtomicReader[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#DirectoryReader(Directory,AtomicReader[]).mjava","sourceNew":"  /**\n   * Expert: Constructs a {@code DirectoryReader} on the given subReaders.\n   * @param segmentReaders the wrapped atomic index segment readers. This array is\n   * returned by {@link #getSequentialSubReaders} and used to resolve the correct\n   * subreader for docID-based methods. <b>Please note:</b> This array is <b>not</b>\n   * cloned and not protected for modification outside of this reader.\n   * Subclasses of {@code DirectoryReader} should take care to not allow\n   * modification of this internal array, e.g. {@link #doOpenIfChanged()}.\n   */\n  protected DirectoryReader(Directory directory, AtomicReader[] segmentReaders) throws CorruptIndexException, IOException {\n    super(segmentReaders);\n    this.directory = directory;\n  }\n\n","sourceOld":"  protected DirectoryReader(Directory directory, AtomicReader[] readers) throws CorruptIndexException, IOException {\n    super(readers);\n    this.directory = directory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#DirectoryReader(Directory,AtomicReader[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#DirectoryReader(Directory,AtomicReader[]).mjava","sourceNew":"  /**\n   * Expert: Constructs a {@code DirectoryReader} on the given subReaders.\n   * @param segmentReaders the wrapped atomic index segment readers. This array is\n   * returned by {@link #getSequentialSubReaders} and used to resolve the correct\n   * subreader for docID-based methods. <b>Please note:</b> This array is <b>not</b>\n   * cloned and not protected for modification outside of this reader.\n   * Subclasses of {@code DirectoryReader} should take care to not allow\n   * modification of this internal array, e.g. {@link #doOpenIfChanged()}.\n   */\n  protected DirectoryReader(Directory directory, AtomicReader[] segmentReaders) {\n    super(segmentReaders);\n    this.directory = directory;\n  }\n\n","sourceOld":"  /**\n   * Expert: Constructs a {@code DirectoryReader} on the given subReaders.\n   * @param segmentReaders the wrapped atomic index segment readers. This array is\n   * returned by {@link #getSequentialSubReaders} and used to resolve the correct\n   * subreader for docID-based methods. <b>Please note:</b> This array is <b>not</b>\n   * cloned and not protected for modification outside of this reader.\n   * Subclasses of {@code DirectoryReader} should take care to not allow\n   * modification of this internal array, e.g. {@link #doOpenIfChanged()}.\n   */\n  protected DirectoryReader(Directory directory, AtomicReader[] segmentReaders) throws CorruptIndexException, IOException {\n    super(segmentReaders);\n    this.directory = directory;\n  }\n\n","bugFix":["55fd9dcf98ceb0c5bf520ec1a7985676384b8747"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#DirectoryReader(Directory,AtomicReader[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#DirectoryReader(Directory,AtomicReader[]).mjava","sourceNew":"  /**\n   * Expert: Constructs a {@code DirectoryReader} on the given subReaders.\n   * @param segmentReaders the wrapped atomic index segment readers. This array is\n   * returned by {@link #getSequentialSubReaders} and used to resolve the correct\n   * subreader for docID-based methods. <b>Please note:</b> This array is <b>not</b>\n   * cloned and not protected for modification outside of this reader.\n   * Subclasses of {@code DirectoryReader} should take care to not allow\n   * modification of this internal array, e.g. {@link #doOpenIfChanged()}.\n   */\n  protected DirectoryReader(Directory directory, AtomicReader[] segmentReaders) {\n    super(segmentReaders);\n    this.directory = directory;\n  }\n\n","sourceOld":"  /**\n   * Expert: Constructs a {@code DirectoryReader} on the given subReaders.\n   * @param segmentReaders the wrapped atomic index segment readers. This array is\n   * returned by {@link #getSequentialSubReaders} and used to resolve the correct\n   * subreader for docID-based methods. <b>Please note:</b> This array is <b>not</b>\n   * cloned and not protected for modification outside of this reader.\n   * Subclasses of {@code DirectoryReader} should take care to not allow\n   * modification of this internal array, e.g. {@link #doOpenIfChanged()}.\n   */\n  protected DirectoryReader(Directory directory, AtomicReader[] segmentReaders) throws CorruptIndexException, IOException {\n    super(segmentReaders);\n    this.directory = directory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DirectoryReader#DirectoryReader(Directory,AtomicReader[]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Expert: Constructs a {@code DirectoryReader} on the given subReaders.\n   * @param segmentReaders the wrapped atomic index segment readers. This array is\n   * returned by {@link #getSequentialSubReaders} and used to resolve the correct\n   * subreader for docID-based methods. <b>Please note:</b> This array is <b>not</b>\n   * cloned and not protected for modification outside of this reader.\n   * Subclasses of {@code DirectoryReader} should take care to not allow\n   * modification of this internal array, e.g. {@link #doOpenIfChanged()}.\n   */\n  protected DirectoryReader(Directory directory, AtomicReader[] segmentReaders) {\n    super(segmentReaders);\n    this.directory = directory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","55fd9dcf98ceb0c5bf520ec1a7985676384b8747"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["55fd9dcf98ceb0c5bf520ec1a7985676384b8747","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"55fd9dcf98ceb0c5bf520ec1a7985676384b8747":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["55fd9dcf98ceb0c5bf520ec1a7985676384b8747"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["38e3b736c7ca086d61b7dbb841c905ee115490da","55fd9dcf98ceb0c5bf520ec1a7985676384b8747"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"55fd9dcf98ceb0c5bf520ec1a7985676384b8747":["38e3b736c7ca086d61b7dbb841c905ee115490da","fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}