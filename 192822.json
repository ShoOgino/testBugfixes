{"path":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#SpanWeight(SpanQuery,IndexSearcher,SpanCollector).mjava","commits":[{"id":"2d530e71ed32ab23b34ca3fc72b080a554a40404","date":1432026158,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#SpanWeight(SpanQuery,IndexSearcher,SpanCollector).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#SpanWeight(SpanQuery,IndexSearcher).mjava","sourceNew":"  public SpanWeight(SpanQuery query, IndexSearcher searcher, SpanCollector collector) throws IOException {\n    super(query);\n    this.similarity = searcher.getSimilarity();\n    this.query = query;\n    this.collector = collector;\n\n    termContexts = new HashMap<>();\n    TreeSet<Term> terms = new TreeSet<>();\n    query.extractTerms(terms);\n    final IndexReaderContext context = searcher.getTopReaderContext();\n    final TermStatistics termStats[] = new TermStatistics[terms.size()];\n    int i = 0;\n    for (Term term : terms) {\n      TermContext state = TermContext.build(context, term);\n      termStats[i] = searcher.termStatistics(term, state);\n      termContexts.put(term, state);\n      i++;\n    }\n    final String field = query.getField();\n    if (field != null) {\n      stats = similarity.computeWeight(query.getBoost(),\n                                       searcher.collectionStatistics(query.getField()),\n                                       termStats);\n    }\n  }\n\n","sourceOld":"  public SpanWeight(SpanQuery query, IndexSearcher searcher) throws IOException {\n    super(query);\n    this.similarity = searcher.getSimilarity();\n    this.query = query;\n\n    termContexts = new HashMap<>();\n    TreeSet<Term> terms = new TreeSet<>();\n    query.extractTerms(terms);\n    final IndexReaderContext context = searcher.getTopReaderContext();\n    final TermStatistics termStats[] = new TermStatistics[terms.size()];\n    int i = 0;\n    for (Term term : terms) {\n      TermContext state = TermContext.build(context, term);\n      termStats[i] = searcher.termStatistics(term, state);\n      termContexts.put(term, state);\n      i++;\n    }\n    final String field = query.getField();\n    if (field != null) {\n      stats = similarity.computeWeight(query.getBoost(),\n                                       searcher.collectionStatistics(query.getField()),\n                                       termStats);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f6e2f8b5923e09c68fcefca2b75678c8d9c89f2","date":1432114286,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#SpanWeight(SpanQuery,IndexSearcher,SpanCollectorFactory[#]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#SpanWeight(SpanQuery,IndexSearcher,SpanCollector).mjava","sourceNew":"  public SpanWeight(SpanQuery query, IndexSearcher searcher, SpanCollectorFactory<?> collectorFactory) throws IOException {\n    super(query);\n    this.similarity = searcher.getSimilarity();\n    this.query = query;\n    this.collectorFactory = collectorFactory;\n\n    termContexts = new HashMap<>();\n    TreeSet<Term> terms = new TreeSet<>();\n    query.extractTerms(terms);\n    final IndexReaderContext context = searcher.getTopReaderContext();\n    final TermStatistics termStats[] = new TermStatistics[terms.size()];\n    int i = 0;\n    for (Term term : terms) {\n      TermContext state = TermContext.build(context, term);\n      termStats[i] = searcher.termStatistics(term, state);\n      termContexts.put(term, state);\n      i++;\n    }\n    final String field = query.getField();\n    if (field != null) {\n      stats = similarity.computeWeight(query.getBoost(),\n                                       searcher.collectionStatistics(query.getField()),\n                                       termStats);\n    }\n  }\n\n","sourceOld":"  public SpanWeight(SpanQuery query, IndexSearcher searcher, SpanCollector collector) throws IOException {\n    super(query);\n    this.similarity = searcher.getSimilarity();\n    this.query = query;\n    this.collector = collector;\n\n    termContexts = new HashMap<>();\n    TreeSet<Term> terms = new TreeSet<>();\n    query.extractTerms(terms);\n    final IndexReaderContext context = searcher.getTopReaderContext();\n    final TermStatistics termStats[] = new TermStatistics[terms.size()];\n    int i = 0;\n    for (Term term : terms) {\n      TermContext state = TermContext.build(context, term);\n      termStats[i] = searcher.termStatistics(term, state);\n      termContexts.put(term, state);\n      i++;\n    }\n    final String field = query.getField();\n    if (field != null) {\n      stats = similarity.computeWeight(query.getBoost(),\n                                       searcher.collectionStatistics(query.getField()),\n                                       termStats);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2d530e71ed32ab23b34ca3fc72b080a554a40404":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8f6e2f8b5923e09c68fcefca2b75678c8d9c89f2":["2d530e71ed32ab23b34ca3fc72b080a554a40404"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8f6e2f8b5923e09c68fcefca2b75678c8d9c89f2"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2d530e71ed32ab23b34ca3fc72b080a554a40404"],"2d530e71ed32ab23b34ca3fc72b080a554a40404":["8f6e2f8b5923e09c68fcefca2b75678c8d9c89f2"],"8f6e2f8b5923e09c68fcefca2b75678c8d9c89f2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}