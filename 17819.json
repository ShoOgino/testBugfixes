{"path":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","sourceNew":"    protected void retrieveGroupHeadAndAddIfNotExist(int doc) throws IOException {\n      final int ord = groupIndex.getOrd(doc);\n      final BytesRef groupValue = ord == 0 ? null : groupIndex.lookup(ord, scratchBytesRef);\n      GroupHead groupHead = groups.get(groupValue);\n      if (groupHead == null) {\n        groupHead = new GroupHead(groupValue, sortWithinGroup, doc);\n        groups.put(groupValue == null ? null : BytesRef.deepCopyOf(groupValue), groupHead);\n        temporalResult.stop = true;\n      } else {\n        temporalResult.stop = false;\n      }\n      temporalResult.groupHead = groupHead;\n    }\n\n","sourceOld":"    protected void retrieveGroupHeadAndAddIfNotExist(int doc) throws IOException {\n      final int ord = groupIndex.getOrd(doc);\n      final BytesRef groupValue = ord == 0 ? null : groupIndex.lookup(ord, scratchBytesRef);\n      GroupHead groupHead = groups.get(groupValue);\n      if (groupHead == null) {\n        groupHead = new GroupHead(groupValue, sortWithinGroup, doc);\n        groups.put(groupValue == null ? null : BytesRef.deepCopyOf(groupValue), groupHead);\n        temporalResult.stop = true;\n      } else {\n        temporalResult.stop = false;\n      }\n      temporalResult.groupHead = groupHead;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"854f97cd3613b9579fba83755c80b697e2f3993f","date":1353527621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","sourceNew":"    protected void retrieveGroupHeadAndAddIfNotExist(int doc) throws IOException {\n      final int ord = groupIndex.getOrd(doc);\n      final BytesRef groupValue = ord == -1 ? null : groupIndex.lookup(ord, scratchBytesRef);\n      GroupHead groupHead = groups.get(groupValue);\n      if (groupHead == null) {\n        groupHead = new GroupHead(groupValue, sortWithinGroup, doc);\n        groups.put(groupValue == null ? null : BytesRef.deepCopyOf(groupValue), groupHead);\n        temporalResult.stop = true;\n      } else {\n        temporalResult.stop = false;\n      }\n      temporalResult.groupHead = groupHead;\n    }\n\n","sourceOld":"    protected void retrieveGroupHeadAndAddIfNotExist(int doc) throws IOException {\n      final int ord = groupIndex.getOrd(doc);\n      final BytesRef groupValue = ord == 0 ? null : groupIndex.lookup(ord, scratchBytesRef);\n      GroupHead groupHead = groups.get(groupValue);\n      if (groupHead == null) {\n        groupHead = new GroupHead(groupValue, sortWithinGroup, doc);\n        groups.put(groupValue == null ? null : BytesRef.deepCopyOf(groupValue), groupHead);\n        temporalResult.stop = true;\n      } else {\n        temporalResult.stop = false;\n      }\n      temporalResult.groupHead = groupHead;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9d7e5f3aa5935964617824d1f9b2599ddb334464","date":1353762831,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","sourceNew":"    protected void retrieveGroupHeadAndAddIfNotExist(int doc) throws IOException {\n      final int ord = groupIndex.getOrd(doc);\n      final BytesRef groupValue;\n      if (ord == -1) {\n        groupValue = null;\n      } else {\n        groupIndex.lookupOrd(ord, scratchBytesRef);\n        groupValue = scratchBytesRef;\n      }\n      GroupHead groupHead = groups.get(groupValue);\n      if (groupHead == null) {\n        groupHead = new GroupHead(groupValue, sortWithinGroup, doc);\n        groups.put(groupValue == null ? null : BytesRef.deepCopyOf(groupValue), groupHead);\n        temporalResult.stop = true;\n      } else {\n        temporalResult.stop = false;\n      }\n      temporalResult.groupHead = groupHead;\n    }\n\n","sourceOld":"    protected void retrieveGroupHeadAndAddIfNotExist(int doc) throws IOException {\n      final int ord = groupIndex.getOrd(doc);\n      final BytesRef groupValue = ord == -1 ? null : groupIndex.lookup(ord, scratchBytesRef);\n      GroupHead groupHead = groups.get(groupValue);\n      if (groupHead == null) {\n        groupHead = new GroupHead(groupValue, sortWithinGroup, doc);\n        groups.put(groupValue == null ? null : BytesRef.deepCopyOf(groupValue), groupHead);\n        temporalResult.stop = true;\n      } else {\n        temporalResult.stop = false;\n      }\n      temporalResult.groupHead = groupHead;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","sourceNew":"    @Override\n    protected void retrieveGroupHeadAndAddIfNotExist(int doc) throws IOException {\n      final int ord = groupIndex.getOrd(doc);\n      final BytesRef groupValue = ord == 0 ? null : groupIndex.lookup(ord, scratchBytesRef);\n      GroupHead groupHead = groups.get(groupValue);\n      if (groupHead == null) {\n        groupHead = new GroupHead(groupValue, sortWithinGroup, doc);\n        groups.put(groupValue == null ? null : BytesRef.deepCopyOf(groupValue), groupHead);\n        temporalResult.stop = true;\n      } else {\n        temporalResult.stop = false;\n      }\n      temporalResult.groupHead = groupHead;\n    }\n\n","sourceOld":"    protected void retrieveGroupHeadAndAddIfNotExist(int doc) throws IOException {\n      final int ord = groupIndex.getOrd(doc);\n      final BytesRef groupValue = ord == 0 ? null : groupIndex.lookup(ord, scratchBytesRef);\n      GroupHead groupHead = groups.get(groupValue);\n      if (groupHead == null) {\n        groupHead = new GroupHead(groupValue, sortWithinGroup, doc);\n        groups.put(groupValue == null ? null : BytesRef.deepCopyOf(groupValue), groupHead);\n        temporalResult.stop = true;\n      } else {\n        temporalResult.stop = false;\n      }\n      temporalResult.groupHead = groupHead;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","sourceNew":"    @Override\n    protected void retrieveGroupHeadAndAddIfNotExist(int doc) throws IOException {\n      final int ord = groupIndex.getOrd(doc);\n      final BytesRef groupValue;\n      if (ord == -1) {\n        groupValue = null;\n      } else {\n        groupIndex.lookupOrd(ord, scratchBytesRef);\n        groupValue = scratchBytesRef;\n      }\n      GroupHead groupHead = groups.get(groupValue);\n      if (groupHead == null) {\n        groupHead = new GroupHead(groupValue, sortWithinGroup, doc);\n        groups.put(groupValue == null ? null : BytesRef.deepCopyOf(groupValue), groupHead);\n        temporalResult.stop = true;\n      } else {\n        temporalResult.stop = false;\n      }\n      temporalResult.groupHead = groupHead;\n    }\n\n","sourceOld":"    protected void retrieveGroupHeadAndAddIfNotExist(int doc) throws IOException {\n      final int ord = groupIndex.getOrd(doc);\n      final BytesRef groupValue;\n      if (ord == -1) {\n        groupValue = null;\n      } else {\n        groupIndex.lookupOrd(ord, scratchBytesRef);\n        groupValue = scratchBytesRef;\n      }\n      GroupHead groupHead = groups.get(groupValue);\n      if (groupHead == null) {\n        groupHead = new GroupHead(groupValue, sortWithinGroup, doc);\n        groups.put(groupValue == null ? null : BytesRef.deepCopyOf(groupValue), groupHead);\n        temporalResult.stop = true;\n      } else {\n        temporalResult.stop = false;\n      }\n      temporalResult.groupHead = groupHead;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","sourceNew":"    @Override\n    protected void retrieveGroupHeadAndAddIfNotExist(int doc) throws IOException {\n      final int ord = groupIndex.getOrd(doc);\n      final BytesRef groupValue;\n      if (ord == -1) {\n        groupValue = null;\n      } else {\n        groupIndex.lookupOrd(ord, scratchBytesRef);\n        groupValue = scratchBytesRef;\n      }\n      GroupHead groupHead = groups.get(groupValue);\n      if (groupHead == null) {\n        groupHead = new GroupHead(groupValue, sortWithinGroup, doc);\n        groups.put(groupValue == null ? null : BytesRef.deepCopyOf(groupValue), groupHead);\n        temporalResult.stop = true;\n      } else {\n        temporalResult.stop = false;\n      }\n      temporalResult.groupHead = groupHead;\n    }\n\n","sourceOld":"    @Override\n    protected void retrieveGroupHeadAndAddIfNotExist(int doc) throws IOException {\n      final int ord = groupIndex.getOrd(doc);\n      final BytesRef groupValue = ord == 0 ? null : groupIndex.lookup(ord, scratchBytesRef);\n      GroupHead groupHead = groups.get(groupValue);\n      if (groupHead == null) {\n        groupHead = new GroupHead(groupValue, sortWithinGroup, doc);\n        groups.put(groupValue == null ? null : BytesRef.deepCopyOf(groupValue), groupHead);\n        temporalResult.stop = true;\n      } else {\n        temporalResult.stop = false;\n      }\n      temporalResult.groupHead = groupHead;\n    }\n\n","bugFix":["4e622d1d7e4496e3a8c1709c84e5be91ced69889"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","date":1401983689,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","sourceNew":"    @Override\n    protected void retrieveGroupHeadAndAddIfNotExist(int doc) throws IOException {\n      final int ord = groupIndex.getOrd(doc);\n      BytesRef groupValue;\n      if (ord == -1) {\n        groupValue = null;\n      } else {\n        groupValue = groupIndex.lookupOrd(ord);\n      }\n      GroupHead groupHead = groups.get(groupValue);\n      if (groupHead == null) {\n        groupValue = groupValue == null ? null : BytesRef.deepCopyOf(groupValue);\n        groupHead = new GroupHead(groupValue, sortWithinGroup, doc);\n        groups.put(groupValue, groupHead);\n        temporalResult.stop = true;\n      } else {\n        temporalResult.stop = false;\n      }\n      temporalResult.groupHead = groupHead;\n    }\n\n","sourceOld":"    @Override\n    protected void retrieveGroupHeadAndAddIfNotExist(int doc) throws IOException {\n      final int ord = groupIndex.getOrd(doc);\n      final BytesRef groupValue;\n      if (ord == -1) {\n        groupValue = null;\n      } else {\n        groupIndex.lookupOrd(ord, scratchBytesRef);\n        groupValue = scratchBytesRef;\n      }\n      GroupHead groupHead = groups.get(groupValue);\n      if (groupHead == null) {\n        groupHead = new GroupHead(groupValue, sortWithinGroup, doc);\n        groups.put(groupValue == null ? null : BytesRef.deepCopyOf(groupValue), groupHead);\n        temporalResult.stop = true;\n      } else {\n        temporalResult.stop = false;\n      }\n      temporalResult.groupHead = groupHead;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","sourceNew":"    @Override\n    protected void retrieveGroupHeadAndAddIfNotExist(int doc) throws IOException {\n      int ord = getOrdForDoc(doc);\n\n      BytesRef groupValue;\n      if (ord == -1) {\n        groupValue = null;\n      } else {\n        groupValue = groupIndex.lookupOrd(ord);\n      }\n        \n      GroupHead groupHead = groups.get(groupValue);\n      if (groupHead == null) {\n        groupValue = groupValue == null ? null : BytesRef.deepCopyOf(groupValue);\n        groupHead = new GroupHead(groupValue, sortWithinGroup, doc);\n        groups.put(groupValue, groupHead);\n        temporalResult.stop = true;\n      } else {\n        temporalResult.stop = false;\n      }\n      temporalResult.groupHead = groupHead;\n    }\n\n","sourceOld":"    @Override\n    protected void retrieveGroupHeadAndAddIfNotExist(int doc) throws IOException {\n      final int ord = groupIndex.getOrd(doc);\n      BytesRef groupValue;\n      if (ord == -1) {\n        groupValue = null;\n      } else {\n        groupValue = groupIndex.lookupOrd(ord);\n      }\n      GroupHead groupHead = groups.get(groupValue);\n      if (groupHead == null) {\n        groupValue = groupValue == null ? null : BytesRef.deepCopyOf(groupValue);\n        groupHead = new GroupHead(groupValue, sortWithinGroup, doc);\n        groups.put(groupValue, groupHead);\n        temporalResult.stop = true;\n      } else {\n        temporalResult.stop = false;\n      }\n      temporalResult.groupHead = groupHead;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","sourceNew":"    @Override\n    protected void retrieveGroupHeadAndAddIfNotExist(int doc) throws IOException {\n      int ord = getOrdForDoc(doc);\n\n      BytesRef groupValue;\n      if (ord == -1) {\n        groupValue = null;\n      } else {\n        groupValue = groupIndex.lookupOrd(ord);\n      }\n        \n      GroupHead groupHead = groups.get(groupValue);\n      if (groupHead == null) {\n        groupValue = groupValue == null ? null : BytesRef.deepCopyOf(groupValue);\n        groupHead = new GroupHead(groupValue, sortWithinGroup, doc);\n        groups.put(groupValue, groupHead);\n        temporalResult.stop = true;\n      } else {\n        temporalResult.stop = false;\n      }\n      temporalResult.groupHead = groupHead;\n    }\n\n","sourceOld":"    @Override\n    protected void retrieveGroupHeadAndAddIfNotExist(int doc) throws IOException {\n      final int ord = groupIndex.getOrd(doc);\n      BytesRef groupValue;\n      if (ord == -1) {\n        groupValue = null;\n      } else {\n        groupValue = groupIndex.lookupOrd(ord);\n      }\n      GroupHead groupHead = groups.get(groupValue);\n      if (groupHead == null) {\n        groupValue = groupValue == null ? null : BytesRef.deepCopyOf(groupValue);\n        groupHead = new GroupHead(groupValue, sortWithinGroup, doc);\n        groups.put(groupValue, groupHead);\n        temporalResult.stop = true;\n      } else {\n        temporalResult.stop = false;\n      }\n      temporalResult.groupHead = groupHead;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","sourceNew":"    @Override\n    protected void retrieveGroupHeadAndAddIfNotExist(int doc) throws IOException {\n      int ord = getOrdForDoc(doc);\n\n      BytesRef groupValue;\n      if (ord == -1) {\n        groupValue = null;\n      } else {\n        groupValue = groupIndex.lookupOrd(ord);\n      }\n        \n      GroupHead groupHead = groups.get(groupValue);\n      if (groupHead == null) {\n        groupValue = groupValue == null ? null : BytesRef.deepCopyOf(groupValue);\n        groupHead = new GroupHead(groupValue, sortWithinGroup, doc);\n        groups.put(groupValue, groupHead);\n        temporalResult.stop = true;\n      } else {\n        temporalResult.stop = false;\n      }\n      temporalResult.groupHead = groupHead;\n    }\n\n","sourceOld":"    @Override\n    protected void retrieveGroupHeadAndAddIfNotExist(int doc) throws IOException {\n      final int ord = groupIndex.getOrd(doc);\n      BytesRef groupValue;\n      if (ord == -1) {\n        groupValue = null;\n      } else {\n        groupValue = groupIndex.lookupOrd(ord);\n      }\n      GroupHead groupHead = groups.get(groupValue);\n      if (groupHead == null) {\n        groupValue = groupValue == null ? null : BytesRef.deepCopyOf(groupValue);\n        groupHead = new GroupHead(groupValue, sortWithinGroup, doc);\n        groups.put(groupValue, groupHead);\n        temporalResult.stop = true;\n      } else {\n        temporalResult.stop = false;\n      }\n      temporalResult.groupHead = groupHead;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ae958a739da1866696f442384393ba2f13e33e5","date":1491819018,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","sourceNew":null,"sourceOld":"    @Override\n    protected void retrieveGroupHeadAndAddIfNotExist(int doc) throws IOException {\n      int ord = getOrdForDoc(doc);\n\n      BytesRef groupValue;\n      if (ord == -1) {\n        groupValue = null;\n      } else {\n        groupValue = groupIndex.lookupOrd(ord);\n      }\n        \n      GroupHead groupHead = groups.get(groupValue);\n      if (groupHead == null) {\n        groupValue = groupValue == null ? null : BytesRef.deepCopyOf(groupValue);\n        groupHead = new GroupHead(groupValue, sortWithinGroup, doc);\n        groups.put(groupValue, groupHead);\n        temporalResult.stop = true;\n      } else {\n        temporalResult.stop = false;\n      }\n      temporalResult.groupHead = groupHead;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupHeadsCollector.GeneralAllGroupHeadsCollector#retrieveGroupHeadAndAddIfNotExist(int).mjava","sourceNew":null,"sourceOld":"    @Override\n    protected void retrieveGroupHeadAndAddIfNotExist(int doc) throws IOException {\n      int ord = getOrdForDoc(doc);\n\n      BytesRef groupValue;\n      if (ord == -1) {\n        groupValue = null;\n      } else {\n        groupValue = groupIndex.lookupOrd(ord);\n      }\n        \n      GroupHead groupHead = groups.get(groupValue);\n      if (groupHead == null) {\n        groupValue = groupValue == null ? null : BytesRef.deepCopyOf(groupValue);\n        groupHead = new GroupHead(groupValue, sortWithinGroup, doc);\n        groups.put(groupValue, groupHead);\n        temporalResult.stop = true;\n      } else {\n        temporalResult.stop = false;\n      }\n      temporalResult.groupHead = groupHead;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["9d7e5f3aa5935964617824d1f9b2599ddb334464","7530de27b87b961b51f01bd1299b7004d46e8823"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["7530de27b87b961b51f01bd1299b7004d46e8823","d3fcb70cf561547c7bb1506e0cf32ca7b1287064"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"9d7e5f3aa5935964617824d1f9b2599ddb334464":["854f97cd3613b9579fba83755c80b697e2f3993f"],"854f97cd3613b9579fba83755c80b697e2f3993f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7530de27b87b961b51f01bd1299b7004d46e8823":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7ae958a739da1866696f442384393ba2f13e33e5"],"7ae958a739da1866696f442384393ba2f13e33e5":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["854f97cd3613b9579fba83755c80b697e2f3993f","7530de27b87b961b51f01bd1299b7004d46e8823"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","7ae958a739da1866696f442384393ba2f13e33e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"9d7e5f3aa5935964617824d1f9b2599ddb334464":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064"],"854f97cd3613b9579fba83755c80b697e2f3993f":["9d7e5f3aa5935964617824d1f9b2599ddb334464"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7ae958a739da1866696f442384393ba2f13e33e5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}