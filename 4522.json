{"path":"lucene/src/java/org/apache/lucene/util/DoubleBarrelLRUCache#get(K).mjava","commits":[{"id":"2a601ce5b08e2b880ebc2229ae1456a0f9d570df","date":1273256555,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/DoubleBarrelLRUCache#get(K).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/cache/DoubleBarrelLRUCache#get(Object).mjava","sourceNew":"  public V get(K key) {\n    final Map<K,V> primary;\n    final Map<K,V> secondary;\n    if (swapped) {\n      primary = cache2;\n      secondary = cache1;\n    } else {\n      primary = cache1;\n      secondary = cache2;\n    }\n\n    // Try primary frist\n    V result = primary.get(key);\n    if (result == null) {\n      // Not found -- try secondary\n      result = secondary.get(key);\n      if (result != null) {\n        // Promote to primary\n        put(key, result);\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  @Override @SuppressWarnings(\"unchecked\")\n  public V get(Object key) {\n    final Map<K,V> primary;\n    final Map<K,V> secondary;\n    if (swapped) {\n      primary = cache2;\n      secondary = cache1;\n    } else {\n      primary = cache1;\n      secondary = cache2;\n    }\n\n    // Try primary frist\n    V result = primary.get(key);\n    if (result == null) {\n      // Not found -- try secondary\n      result = secondary.get(key);\n      if (result != null) {\n        // Promote to primary\n        put((K) key, result);\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4305c035b0ff6b9c317310bca62a6673049f8d0b","date":1273768894,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/DoubleBarrelLRUCache#get(K).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/DoubleBarrelLRUCache#get(K).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\") \n  public V get(K key) {\n    final Map<K,V> primary;\n    final Map<K,V> secondary;\n    if (swapped) {\n      primary = cache2;\n      secondary = cache1;\n    } else {\n      primary = cache1;\n      secondary = cache2;\n    }\n\n    // Try primary frist\n    V result = primary.get(key);\n    if (result == null) {\n      // Not found -- try secondary\n      result = secondary.get(key);\n      if (result != null) {\n        // Promote to primary\n        put((K) key.clone(), result);\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  public V get(K key) {\n    final Map<K,V> primary;\n    final Map<K,V> secondary;\n    if (swapped) {\n      primary = cache2;\n      secondary = cache1;\n    } else {\n      primary = cache1;\n      secondary = cache2;\n    }\n\n    // Try primary frist\n    V result = primary.get(key);\n    if (result == null) {\n      // Not found -- try secondary\n      result = secondary.get(key);\n      if (result != null) {\n        // Promote to primary\n        put(key, result);\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7235f072992928845d8cfd2dfc1c90362360e1e","date":1296426876,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/DoubleBarrelLRUCache#get(K).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/DoubleBarrelLRUCache#get(K).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\") \n  public V get(K key) {\n    final Map<K,V> primary;\n    final Map<K,V> secondary;\n    if (swapped) {\n      primary = cache2;\n      secondary = cache1;\n    } else {\n      primary = cache1;\n      secondary = cache2;\n    }\n\n    // Try primary first\n    V result = primary.get(key);\n    if (result == null) {\n      // Not found -- try secondary\n      result = secondary.get(key);\n      if (result != null) {\n        // Promote to primary\n        put((K) key.clone(), result);\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\") \n  public V get(K key) {\n    final Map<K,V> primary;\n    final Map<K,V> secondary;\n    if (swapped) {\n      primary = cache2;\n      secondary = cache1;\n    } else {\n      primary = cache1;\n      secondary = cache2;\n    }\n\n    // Try primary frist\n    V result = primary.get(key);\n    if (result == null) {\n      // Not found -- try secondary\n      result = secondary.get(key);\n      if (result != null) {\n        // Promote to primary\n        put((K) key.clone(), result);\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/DoubleBarrelLRUCache#get(K).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/DoubleBarrelLRUCache#get(K).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\") \n  public V get(K key) {\n    final Map<K,V> primary;\n    final Map<K,V> secondary;\n    if (swapped) {\n      primary = cache2;\n      secondary = cache1;\n    } else {\n      primary = cache1;\n      secondary = cache2;\n    }\n\n    // Try primary first\n    V result = primary.get(key);\n    if (result == null) {\n      // Not found -- try secondary\n      result = secondary.get(key);\n      if (result != null) {\n        // Promote to primary\n        put((K) key.clone(), result);\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\") \n  public V get(K key) {\n    final Map<K,V> primary;\n    final Map<K,V> secondary;\n    if (swapped) {\n      primary = cache2;\n      secondary = cache1;\n    } else {\n      primary = cache1;\n      secondary = cache2;\n    }\n\n    // Try primary frist\n    V result = primary.get(key);\n    if (result == null) {\n      // Not found -- try secondary\n      result = secondary.get(key);\n      if (result != null) {\n        // Promote to primary\n        put((K) key.clone(), result);\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/DoubleBarrelLRUCache#get(K).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/DoubleBarrelLRUCache#get(K).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\") \n  public V get(K key) {\n    final Map<K,V> primary;\n    final Map<K,V> secondary;\n    if (swapped) {\n      primary = cache2;\n      secondary = cache1;\n    } else {\n      primary = cache1;\n      secondary = cache2;\n    }\n\n    // Try primary first\n    V result = primary.get(key);\n    if (result == null) {\n      // Not found -- try secondary\n      result = secondary.get(key);\n      if (result != null) {\n        // Promote to primary\n        put((K) key.clone(), result);\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\") \n  public V get(K key) {\n    final Map<K,V> primary;\n    final Map<K,V> secondary;\n    if (swapped) {\n      primary = cache2;\n      secondary = cache1;\n    } else {\n      primary = cache1;\n      secondary = cache2;\n    }\n\n    // Try primary frist\n    V result = primary.get(key);\n    if (result == null) {\n      // Not found -- try secondary\n      result = secondary.get(key);\n      if (result != null) {\n        // Promote to primary\n        put((K) key.clone(), result);\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DoubleBarrelLRUCache#get(K).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/DoubleBarrelLRUCache#get(K).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\") \n  public V get(K key) {\n    final Map<K,V> primary;\n    final Map<K,V> secondary;\n    if (swapped) {\n      primary = cache2;\n      secondary = cache1;\n    } else {\n      primary = cache1;\n      secondary = cache2;\n    }\n\n    // Try primary first\n    V result = primary.get(key);\n    if (result == null) {\n      // Not found -- try secondary\n      result = secondary.get(key);\n      if (result != null) {\n        // Promote to primary\n        put((K) key.clone(), result);\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\") \n  public V get(K key) {\n    final Map<K,V> primary;\n    final Map<K,V> secondary;\n    if (swapped) {\n      primary = cache2;\n      secondary = cache1;\n    } else {\n      primary = cache1;\n      secondary = cache2;\n    }\n\n    // Try primary first\n    V result = primary.get(key);\n    if (result == null) {\n      // Not found -- try secondary\n      result = secondary.get(key);\n      if (result != null) {\n        // Promote to primary\n        put((K) key.clone(), result);\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2a601ce5b08e2b880ebc2229ae1456a0f9d570df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c7235f072992928845d8cfd2dfc1c90362360e1e"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["4305c035b0ff6b9c317310bca62a6673049f8d0b","c7235f072992928845d8cfd2dfc1c90362360e1e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c7235f072992928845d8cfd2dfc1c90362360e1e":["4305c035b0ff6b9c317310bca62a6673049f8d0b"],"4305c035b0ff6b9c317310bca62a6673049f8d0b":["2a601ce5b08e2b880ebc2229ae1456a0f9d570df"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["4305c035b0ff6b9c317310bca62a6673049f8d0b","c7235f072992928845d8cfd2dfc1c90362360e1e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"2a601ce5b08e2b880ebc2229ae1456a0f9d570df":["4305c035b0ff6b9c317310bca62a6673049f8d0b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2a601ce5b08e2b880ebc2229ae1456a0f9d570df"],"c7235f072992928845d8cfd2dfc1c90362360e1e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"4305c035b0ff6b9c317310bca62a6673049f8d0b":["29ef99d61cda9641b6250bf9567329a6e65f901d","c7235f072992928845d8cfd2dfc1c90362360e1e","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}