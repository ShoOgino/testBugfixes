{"path":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setReaderTermsIndexDivisor(int).mjava","commits":[{"id":"7f4e54ed7cef46f86888b5fb547594f62160395c","date":1340006971,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setReaderTermsIndexDivisor(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sets the termsIndexDivisor passed to any readers that IndexWriter opens,\n   * for example when applying deletes or creating a near-real-time reader in\n   * {@link DirectoryReader#open(IndexWriter, boolean)}. If you pass -1, the\n   * terms index won't be loaded by the readers. This is only useful in advanced\n   * situations when you will only .next() through all terms; attempts to seek\n   * will hit an exception.\n   * \n   * <p>\n   * Takes effect immediately, but only applies to readers opened after this\n   * call\n   */\n  public LiveIndexWriterConfig setReaderTermsIndexDivisor(int divisor) {\n    if (divisor <= 0 && divisor != -1) {\n      throw new IllegalArgumentException(\"divisor must be >= 1, or -1 (got \" + divisor + \")\");\n    }\n    readerTermsIndexDivisor = divisor;\n    return this;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9574fd7667d776b150040d29c4ca217a0d726ac","date":1344007238,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setReaderTermsIndexDivisor(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setReaderTermsIndexDivisor(int).mjava","sourceNew":"  /**\n   * Sets the termsIndexDivisor passed to any readers that IndexWriter opens,\n   * for example when applying deletes or creating a near-real-time reader in\n   * {@link DirectoryReader#open(IndexWriter, boolean)}. If you pass -1, the\n   * terms index won't be loaded by the readers. This is only useful in advanced\n   * situations when you will only .next() through all terms; attempts to seek\n   * will hit an exception.\n   * \n   * <p>\n   * Takes effect immediately, but only applies to readers opened after this\n   * call\n   * <p>\n   * <b>NOTE:</b> divisor settings &gt; 1 do not apply to all PostingsFormat\n   * implementations, including the default one in this release. It only makes\n   * sense for terms indexes that can efficiently re-sample terms at load time.\n   */\n  public LiveIndexWriterConfig setReaderTermsIndexDivisor(int divisor) {\n    if (divisor <= 0 && divisor != -1) {\n      throw new IllegalArgumentException(\"divisor must be >= 1, or -1 (got \" + divisor + \")\");\n    }\n    readerTermsIndexDivisor = divisor;\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Sets the termsIndexDivisor passed to any readers that IndexWriter opens,\n   * for example when applying deletes or creating a near-real-time reader in\n   * {@link DirectoryReader#open(IndexWriter, boolean)}. If you pass -1, the\n   * terms index won't be loaded by the readers. This is only useful in advanced\n   * situations when you will only .next() through all terms; attempts to seek\n   * will hit an exception.\n   * \n   * <p>\n   * Takes effect immediately, but only applies to readers opened after this\n   * call\n   */\n  public LiveIndexWriterConfig setReaderTermsIndexDivisor(int divisor) {\n    if (divisor <= 0 && divisor != -1) {\n      throw new IllegalArgumentException(\"divisor must be >= 1, or -1 (got \" + divisor + \")\");\n    }\n    readerTermsIndexDivisor = divisor;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setReaderTermsIndexDivisor(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setReaderTermsIndexDivisor(int).mjava","sourceNew":"  /**\n   * Sets the termsIndexDivisor passed to any readers that IndexWriter opens,\n   * for example when applying deletes or creating a near-real-time reader in\n   * {@link DirectoryReader#open(IndexWriter, boolean)}. If you pass -1, the\n   * terms index won't be loaded by the readers. This is only useful in advanced\n   * situations when you will only .next() through all terms; attempts to seek\n   * will hit an exception.\n   * \n   * <p>\n   * Takes effect immediately, but only applies to readers opened after this\n   * call\n   * <p>\n   * <b>NOTE:</b> divisor settings &gt; 1 do not apply to all PostingsFormat\n   * implementations, including the default one in this release. It only makes\n   * sense for terms indexes that can efficiently re-sample terms at load time.\n   */\n  public LiveIndexWriterConfig setReaderTermsIndexDivisor(int divisor) {\n    if (divisor <= 0 && divisor != -1) {\n      throw new IllegalArgumentException(\"divisor must be >= 1, or -1 (got \" + divisor + \")\");\n    }\n    readerTermsIndexDivisor = divisor;\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Sets the termsIndexDivisor passed to any readers that IndexWriter opens,\n   * for example when applying deletes or creating a near-real-time reader in\n   * {@link DirectoryReader#open(IndexWriter, boolean)}. If you pass -1, the\n   * terms index won't be loaded by the readers. This is only useful in advanced\n   * situations when you will only .next() through all terms; attempts to seek\n   * will hit an exception.\n   * \n   * <p>\n   * Takes effect immediately, but only applies to readers opened after this\n   * call\n   */\n  public LiveIndexWriterConfig setReaderTermsIndexDivisor(int divisor) {\n    if (divisor <= 0 && divisor != -1) {\n      throw new IllegalArgumentException(\"divisor must be >= 1, or -1 (got \" + divisor + \")\");\n    }\n    readerTermsIndexDivisor = divisor;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setReaderTermsIndexDivisor(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setReaderTermsIndexDivisor(int).mjava","sourceNew":"  /**\n   * Sets the termsIndexDivisor passed to any readers that IndexWriter opens,\n   * for example when applying deletes or creating a near-real-time reader in\n   * {@link DirectoryReader#open(IndexWriter, boolean)}. If you pass -1, the\n   * terms index won't be loaded by the readers. This is only useful in advanced\n   * situations when you will only .next() through all terms; attempts to seek\n   * will hit an exception.\n   * \n   * <p>\n   * Takes effect immediately, but only applies to readers opened after this\n   * call\n   * <p>\n   * <b>NOTE:</b> divisor settings &gt; 1 do not apply to all PostingsFormat\n   * implementations, including the default one in this release. It only makes\n   * sense for terms indexes that can efficiently re-sample terms at load time.\n   */\n  public LiveIndexWriterConfig setReaderTermsIndexDivisor(int divisor) {\n    if (divisor <= 0 && divisor != -1) {\n      throw new IllegalArgumentException(\"divisor must be >= 1, or -1 (got \" + divisor + \")\");\n    }\n    readerTermsIndexDivisor = divisor;\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Sets the termsIndexDivisor passed to any readers that IndexWriter opens,\n   * for example when applying deletes or creating a near-real-time reader in\n   * {@link DirectoryReader#open(IndexWriter, boolean)}. If you pass -1, the\n   * terms index won't be loaded by the readers. This is only useful in advanced\n   * situations when you will only .next() through all terms; attempts to seek\n   * will hit an exception.\n   * \n   * <p>\n   * Takes effect immediately, but only applies to readers opened after this\n   * call\n   */\n  public LiveIndexWriterConfig setReaderTermsIndexDivisor(int divisor) {\n    if (divisor <= 0 && divisor != -1) {\n      throw new IllegalArgumentException(\"divisor must be >= 1, or -1 (got \" + divisor + \")\");\n    }\n    readerTermsIndexDivisor = divisor;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setReaderTermsIndexDivisor(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setReaderTermsIndexDivisor(int).mjava","sourceNew":"  /**\n   * Sets the termsIndexDivisor passed to any readers that IndexWriter opens,\n   * for example when applying deletes or creating a near-real-time reader in\n   * {@link DirectoryReader#open(IndexWriter, boolean)}. If you pass -1, the\n   * terms index won't be loaded by the readers. This is only useful in advanced\n   * situations when you will only .next() through all terms; attempts to seek\n   * will hit an exception.\n   * \n   * <p>\n   * Takes effect immediately, but only applies to readers opened after this\n   * call\n   * <p>\n   * <b>NOTE:</b> divisor settings &gt; 1 do not apply to all PostingsFormat\n   * implementations, including the default one in this release. It only makes\n   * sense for terms indexes that can efficiently re-sample terms at load time.\n   */\n  public LiveIndexWriterConfig setReaderTermsIndexDivisor(int divisor) {\n    if (divisor <= 0 && divisor != -1) {\n      throw new IllegalArgumentException(\"divisor must be >= 1, or -1 (got \" + divisor + \")\");\n    }\n    readerTermsIndexDivisor = divisor;\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Sets the termsIndexDivisor passed to any readers that IndexWriter opens,\n   * for example when applying deletes or creating a near-real-time reader in\n   * {@link DirectoryReader#open(IndexWriter, boolean)}. If you pass -1, the\n   * terms index won't be loaded by the readers. This is only useful in advanced\n   * situations when you will only .next() through all terms; attempts to seek\n   * will hit an exception.\n   * \n   * <p>\n   * Takes effect immediately, but only applies to readers opened after this\n   * call\n   * <p>\n   * <b>NOTE:</b> divisor settings &gt; 1 do not apply to all PostingsFormat\n   * implementations, including the default one in this release. It only makes\n   * sense for terms indexes that can efficiently re-sample terms at load time.\n   */\n  public LiveIndexWriterConfig setReaderTermsIndexDivisor(int divisor) {\n    if (divisor <= 0 && divisor != -1) {\n      throw new IllegalArgumentException(\"divisor must be >= 1, or -1 (got \" + divisor + \")\");\n    }\n    readerTermsIndexDivisor = divisor;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a45bec74b98f6fc05f52770cfb425739e6563960","date":1375119292,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setReaderTermsIndexDivisor(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Sets the termsIndexDivisor passed to any readers that IndexWriter opens,\n   * for example when applying deletes or creating a near-real-time reader in\n   * {@link DirectoryReader#open(IndexWriter, boolean)}. If you pass -1, the\n   * terms index won't be loaded by the readers. This is only useful in advanced\n   * situations when you will only .next() through all terms; attempts to seek\n   * will hit an exception.\n   * \n   * <p>\n   * Takes effect immediately, but only applies to readers opened after this\n   * call\n   * <p>\n   * <b>NOTE:</b> divisor settings &gt; 1 do not apply to all PostingsFormat\n   * implementations, including the default one in this release. It only makes\n   * sense for terms indexes that can efficiently re-sample terms at load time.\n   */\n  public LiveIndexWriterConfig setReaderTermsIndexDivisor(int divisor) {\n    if (divisor <= 0 && divisor != -1) {\n      throw new IllegalArgumentException(\"divisor must be >= 1, or -1 (got \" + divisor + \")\");\n    }\n    readerTermsIndexDivisor = divisor;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/LiveIndexWriterConfig#setReaderTermsIndexDivisor(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Sets the termsIndexDivisor passed to any readers that IndexWriter opens,\n   * for example when applying deletes or creating a near-real-time reader in\n   * {@link DirectoryReader#open(IndexWriter, boolean)}. If you pass -1, the\n   * terms index won't be loaded by the readers. This is only useful in advanced\n   * situations when you will only .next() through all terms; attempts to seek\n   * will hit an exception.\n   * \n   * <p>\n   * Takes effect immediately, but only applies to readers opened after this\n   * call\n   * <p>\n   * <b>NOTE:</b> divisor settings &gt; 1 do not apply to all PostingsFormat\n   * implementations, including the default one in this release. It only makes\n   * sense for terms indexes that can efficiently re-sample terms at load time.\n   */\n  public LiveIndexWriterConfig setReaderTermsIndexDivisor(int divisor) {\n    if (divisor <= 0 && divisor != -1) {\n      throw new IllegalArgumentException(\"divisor must be >= 1, or -1 (got \" + divisor + \")\");\n    }\n    readerTermsIndexDivisor = divisor;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9574fd7667d776b150040d29c4ca217a0d726ac":["7f4e54ed7cef46f86888b5fb547594f62160395c"],"a45bec74b98f6fc05f52770cfb425739e6563960":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7f4e54ed7cef46f86888b5fb547594f62160395c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["e9574fd7667d776b150040d29c4ca217a0d726ac"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["7f4e54ed7cef46f86888b5fb547594f62160395c","e9574fd7667d776b150040d29c4ca217a0d726ac"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["e9574fd7667d776b150040d29c4ca217a0d726ac"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["7f4e54ed7cef46f86888b5fb547594f62160395c","e9574fd7667d776b150040d29c4ca217a0d726ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a45bec74b98f6fc05f52770cfb425739e6563960"]},"commit2Childs":{"e9574fd7667d776b150040d29c4ca217a0d726ac":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","d6f074e73200c07d54f242d3880a8da5a35ff97b","19275ba31e621f6da1b83bf13af75233876fd3d4","8fd5be977c105554c6a7b68afcdbc511439723ab"],"a45bec74b98f6fc05f52770cfb425739e6563960":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7f4e54ed7cef46f86888b5fb547594f62160395c"],"7f4e54ed7cef46f86888b5fb547594f62160395c":["e9574fd7667d776b150040d29c4ca217a0d726ac","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["a45bec74b98f6fc05f52770cfb425739e6563960"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}