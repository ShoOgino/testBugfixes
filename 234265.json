{"path":"lucene/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,TermContext).mjava","commits":[{"id":"0f3cee3d20b0c786e6fca20539454262e29edcab","date":1310101685,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,TermContext).mjava","pathOld":"/dev/null","sourceNew":"    public TermWeight(IndexSearcher searcher, TermContext termStates)\n      throws IOException {\n      assert termStates != null : \"TermContext must not be null\";\n      this.termStates = termStates;\n      this.similarity = searcher.getSimilarityProvider().get(term.field());\n      this.stats = similarity.computeStats(searcher, term.field(), getBoost(), termStates);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,TermContext).mjava","pathOld":"/dev/null","sourceNew":"    public TermWeight(IndexSearcher searcher, TermContext termStates)\n      throws IOException {\n      assert termStates != null : \"TermContext must not be null\";\n      this.termStates = termStates;\n      this.similarity = searcher.getSimilarityProvider().get(term.field());\n      this.stats = similarity.computeStats(searcher, term.field(), getBoost(), termStates);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,TermContext).mjava","pathOld":"/dev/null","sourceNew":"    public TermWeight(IndexSearcher searcher, TermContext termStates)\n      throws IOException {\n      assert termStates != null : \"TermContext must not be null\";\n      this.termStates = termStates;\n      this.similarity = searcher.getSimilarityProvider().get(term.field());\n      this.stats = similarity.computeStats(searcher, term.field(), getBoost(), termStates);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ce8e026ad419f6c1e2d26851d5b4b35e6239c9d","date":1320398636,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,TermContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,TermContext).mjava","sourceNew":"    public TermWeight(IndexSearcher searcher, TermContext termStates)\n      throws IOException {\n      assert termStates != null : \"TermContext must not be null\";\n      this.termStates = termStates;\n      this.similarity = searcher.getSimilarityProvider().get(term.field());\n      this.stats = similarity.computeStats(\n          searcher.collectionStatistics(term.field()), \n          getBoost(), \n          searcher.termStatistics(term, termStates));\n    }\n\n","sourceOld":"    public TermWeight(IndexSearcher searcher, TermContext termStates)\n      throws IOException {\n      assert termStates != null : \"TermContext must not be null\";\n      this.termStates = termStates;\n      this.similarity = searcher.getSimilarityProvider().get(term.field());\n      this.stats = similarity.computeStats(searcher, term.field(), getBoost(), termStates);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"660345363f16c7d4c38aa11a35bf59aa99466cf1","date":1328227279,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,TermContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,TermContext).mjava","sourceNew":"    public TermWeight(IndexSearcher searcher, TermContext termStates)\n      throws IOException {\n      assert termStates != null : \"TermContext must not be null\";\n      this.termStates = termStates;\n      this.similarity = searcher.getSimilarityProvider().get(term.field());\n      this.stats = similarity.computeWeight(\n          getBoost(), \n          searcher.collectionStatistics(term.field()), \n          searcher.termStatistics(term, termStates));\n    }\n\n","sourceOld":"    public TermWeight(IndexSearcher searcher, TermContext termStates)\n      throws IOException {\n      assert termStates != null : \"TermContext must not be null\";\n      this.termStates = termStates;\n      this.similarity = searcher.getSimilarityProvider().get(term.field());\n      this.stats = similarity.computeStats(\n          searcher.collectionStatistics(term.field()), \n          getBoost(), \n          searcher.termStatistics(term, termStates));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b","date":1328532481,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,TermContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,TermContext).mjava","sourceNew":"    public TermWeight(IndexSearcher searcher, TermContext termStates)\n      throws IOException {\n      assert termStates != null : \"TermContext must not be null\";\n      this.termStates = termStates;\n      this.similarity = searcher.getSimilarity();\n      this.stats = similarity.computeWeight(\n          getBoost(), \n          searcher.collectionStatistics(term.field()), \n          searcher.termStatistics(term, termStates));\n    }\n\n","sourceOld":"    public TermWeight(IndexSearcher searcher, TermContext termStates)\n      throws IOException {\n      assert termStates != null : \"TermContext must not be null\";\n      this.termStates = termStates;\n      this.similarity = searcher.getSimilarityProvider().get(term.field());\n      this.stats = similarity.computeWeight(\n          getBoost(), \n          searcher.collectionStatistics(term.field()), \n          searcher.termStatistics(term, termStates));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,TermContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TermQuery.TermWeight#TermWeight(IndexSearcher,TermContext).mjava","sourceNew":"    public TermWeight(IndexSearcher searcher, TermContext termStates)\n      throws IOException {\n      assert termStates != null : \"TermContext must not be null\";\n      this.termStates = termStates;\n      this.similarity = searcher.getSimilarity();\n      this.stats = similarity.computeWeight(\n          getBoost(), \n          searcher.collectionStatistics(term.field()), \n          searcher.termStatistics(term, termStates));\n    }\n\n","sourceOld":"    public TermWeight(IndexSearcher searcher, TermContext termStates)\n      throws IOException {\n      assert termStates != null : \"TermContext must not be null\";\n      this.termStates = termStates;\n      this.similarity = searcher.getSimilarity();\n      this.stats = similarity.computeWeight(\n          getBoost(), \n          searcher.collectionStatistics(term.field()), \n          searcher.termStatistics(term, termStates));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1291e4568eb7d9463d751627596ef14baf4c1603":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0f3cee3d20b0c786e6fca20539454262e29edcab"],"660345363f16c7d4c38aa11a35bf59aa99466cf1":["9ce8e026ad419f6c1e2d26851d5b4b35e6239c9d"],"0f3cee3d20b0c786e6fca20539454262e29edcab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9ce8e026ad419f6c1e2d26851d5b4b35e6239c9d":["0f3cee3d20b0c786e6fca20539454262e29edcab"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0f3cee3d20b0c786e6fca20539454262e29edcab"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["660345363f16c7d4c38aa11a35bf59aa99466cf1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"1291e4568eb7d9463d751627596ef14baf4c1603":[],"0f3cee3d20b0c786e6fca20539454262e29edcab":["1291e4568eb7d9463d751627596ef14baf4c1603","9ce8e026ad419f6c1e2d26851d5b4b35e6239c9d","f0b9507caf22f292ac0e5e59f62db4275adf4511"],"660345363f16c7d4c38aa11a35bf59aa99466cf1":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"9ce8e026ad419f6c1e2d26851d5b4b35e6239c9d":["660345363f16c7d4c38aa11a35bf59aa99466cf1"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1291e4568eb7d9463d751627596ef14baf4c1603","0f3cee3d20b0c786e6fca20539454262e29edcab","f0b9507caf22f292ac0e5e59f62db4275adf4511"],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}