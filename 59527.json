{"path":"sandbox/contributions/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","commits":[{"id":"8497ea87d47a78ce96caf21099e6e5fd3536b512","date":1040423984,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"sandbox/contributions/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","pathOld":"/dev/null","sourceNew":"  public SnowballFilter(TokenStream in, String language) {\n    this.input = in;\n    try {\n      Class stemClass =\n        Class.forName(\"net.sf.snowball.ext.\" + language + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n      stemMethod = stemClass.getMethod(\"stem\", new Class[0]);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ba94d8b6cff26ee9d32619fa6d50bdc55c2ebf6","date":1040425519,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"sandbox/contributions/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","pathOld":"sandbox/contributions/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","sourceNew":"  /** Construct the named stemming filter.\n   *\n   * @param in the input tokens to stem\n   * @param in the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    this.input = in;\n    try {\n      Class stemClass =\n        Class.forName(\"net.sf.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n      stemMethod = stemClass.getMethod(\"stem\", new Class[0]);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  public SnowballFilter(TokenStream in, String language) {\n    this.input = in;\n    try {\n      Class stemClass =\n        Class.forName(\"net.sf.snowball.ext.\" + language + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n      stemMethod = stemClass.getMethod(\"stem\", new Class[0]);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"62d0fdff2a149d9e624677cac749c52b42f68ed7","date":1054228819,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","pathOld":"sandbox/contributions/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","sourceNew":"  /** Construct the named stemming filter.\n   *\n   * @param in the input tokens to stem\n   * @param in the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    this.input = in;\n    try {\n      Class stemClass =\n        Class.forName(\"net.sf.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n      stemMethod = stemClass.getMethod(\"stem\", new Class[0]);\n    } catch (Exception e) {\n      throw new RuntimeException();\n    }\n  }\n\n","sourceOld":"  /** Construct the named stemming filter.\n   *\n   * @param in the input tokens to stem\n   * @param in the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    this.input = in;\n    try {\n      Class stemClass =\n        Class.forName(\"net.sf.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n      stemMethod = stemClass.getMethod(\"stem\", new Class[0]);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cf4d7ebce4950ca82b78f6b20a6d427fb03a599","date":1054444299,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","pathOld":"sandbox/contributions/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","sourceNew":"  /** Construct the named stemming filter.\n   *\n   * @param in the input tokens to stem\n   * @param in the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    this.input = in;\n    try {\n      Class stemClass =\n        Class.forName(\"net.sf.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n      stemMethod = stemClass.getMethod(\"stem\", new Class[0]);\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n  }\n\n","sourceOld":"  /** Construct the named stemming filter.\n   *\n   * @param in the input tokens to stem\n   * @param in the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    this.input = in;\n    try {\n      Class stemClass =\n        Class.forName(\"net.sf.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n      stemMethod = stemClass.getMethod(\"stem\", new Class[0]);\n    } catch (Exception e) {\n      throw new RuntimeException();\n    }\n  }\n\n","bugFix":null,"bugIntro":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"901a21fbdb9b2a91c0f280aa5729ac6a5047189b","date":1073317069,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","pathOld":"sandbox/contributions/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","sourceNew":"  /** Construct the named stemming filter.\n   *\n   * @param in the input tokens to stem\n   * @param in the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {\n      Class stemClass =\n        Class.forName(\"net.sf.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n      stemMethod = stemClass.getMethod(\"stem\", new Class[0]);\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n  }\n\n","sourceOld":"  /** Construct the named stemming filter.\n   *\n   * @param in the input tokens to stem\n   * @param in the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    this.input = in;\n    try {\n      Class stemClass =\n        Class.forName(\"net.sf.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n      stemMethod = stemClass.getMethod(\"stem\", new Class[0]);\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"769b42f300ec1653b3a27fe7cc5bd991480f77a8","date":1074859503,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","pathOld":"sandbox/contributions/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","sourceNew":"  /** Construct the named stemming filter.\n   *\n   * @param in the input tokens to stem\n   * @param in the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {\n      Class stemClass =\n        Class.forName(\"net.sf.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n      // why doesn't the SnowballProgram class have an (abstract?) stem method?\n      stemMethod = stemClass.getMethod(\"stem\", new Class[0]);\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n  }\n\n","sourceOld":"  /** Construct the named stemming filter.\n   *\n   * @param in the input tokens to stem\n   * @param in the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {\n      Class stemClass =\n        Class.forName(\"net.sf.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n      stemMethod = stemClass.getMethod(\"stem\", new Class[0]);\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ce3264aee2497a01ca41ed78cac13087b6548ad7","date":1077649656,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"sandbox/contributions/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","pathOld":"sandbox/contributions/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","sourceNew":"  /** Construct the named stemming filter.\n   *\n   * @param in the input tokens to stem\n   * @param name the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {\n      Class stemClass =\n        Class.forName(\"net.sf.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n      // why doesn't the SnowballProgram class have an (abstract?) stem method?\n      stemMethod = stemClass.getMethod(\"stem\", new Class[0]);\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n  }\n\n","sourceOld":"  /** Construct the named stemming filter.\n   *\n   * @param in the input tokens to stem\n   * @param in the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {\n      Class stemClass =\n        Class.forName(\"net.sf.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n      // why doesn't the SnowballProgram class have an (abstract?) stem method?\n      stemMethod = stemClass.getMethod(\"stem\", new Class[0]);\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","pathOld":"sandbox/contributions/snowball/src/java/org/apache/lucene/analysis/snowball/SnowballFilter#SnowballFilter(TokenStream,String).mjava","sourceNew":"  /** Construct the named stemming filter.\n   *\n   * @param in the input tokens to stem\n   * @param name the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {\n      Class stemClass =\n        Class.forName(\"net.sf.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n      // why doesn't the SnowballProgram class have an (abstract?) stem method?\n      stemMethod = stemClass.getMethod(\"stem\", new Class[0]);\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n  }\n\n","sourceOld":"  /** Construct the named stemming filter.\n   *\n   * @param in the input tokens to stem\n   * @param name the name of a stemmer\n   */\n  public SnowballFilter(TokenStream in, String name) {\n    super(in);\n    try {\n      Class stemClass =\n        Class.forName(\"net.sf.snowball.ext.\" + name + \"Stemmer\");\n      stemmer = (SnowballProgram) stemClass.newInstance();\n      // why doesn't the SnowballProgram class have an (abstract?) stem method?\n      stemMethod = stemClass.getMethod(\"stem\", new Class[0]);\n    } catch (Exception e) {\n      throw new RuntimeException(e.toString());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"4cf4d7ebce4950ca82b78f6b20a6d427fb03a599":["62d0fdff2a149d9e624677cac749c52b42f68ed7"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["ce3264aee2497a01ca41ed78cac13087b6548ad7"],"62d0fdff2a149d9e624677cac749c52b42f68ed7":["2ba94d8b6cff26ee9d32619fa6d50bdc55c2ebf6"],"2ba94d8b6cff26ee9d32619fa6d50bdc55c2ebf6":["8497ea87d47a78ce96caf21099e6e5fd3536b512"],"769b42f300ec1653b3a27fe7cc5bd991480f77a8":["901a21fbdb9b2a91c0f280aa5729ac6a5047189b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ce3264aee2497a01ca41ed78cac13087b6548ad7":["769b42f300ec1653b3a27fe7cc5bd991480f77a8"],"901a21fbdb9b2a91c0f280aa5729ac6a5047189b":["4cf4d7ebce4950ca82b78f6b20a6d427fb03a599"],"8497ea87d47a78ce96caf21099e6e5fd3536b512":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"]},"commit2Childs":{"4cf4d7ebce4950ca82b78f6b20a6d427fb03a599":["901a21fbdb9b2a91c0f280aa5729ac6a5047189b"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"62d0fdff2a149d9e624677cac749c52b42f68ed7":["4cf4d7ebce4950ca82b78f6b20a6d427fb03a599"],"2ba94d8b6cff26ee9d32619fa6d50bdc55c2ebf6":["62d0fdff2a149d9e624677cac749c52b42f68ed7"],"769b42f300ec1653b3a27fe7cc5bd991480f77a8":["ce3264aee2497a01ca41ed78cac13087b6548ad7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8497ea87d47a78ce96caf21099e6e5fd3536b512"],"ce3264aee2497a01ca41ed78cac13087b6548ad7":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"901a21fbdb9b2a91c0f280aa5729ac6a5047189b":["769b42f300ec1653b3a27fe7cc5bd991480f77a8"],"8497ea87d47a78ce96caf21099e6e5fd3536b512":["2ba94d8b6cff26ee9d32619fa6d50bdc55c2ebf6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}