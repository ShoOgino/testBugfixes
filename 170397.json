{"path":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreExplanations#testTopLevelBoost().mjava","commits":[{"id":"40ed2b673f6264a3f84e2f3925b529283f2eb096","date":1415102987,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreExplanations#testTopLevelBoost().mjava","pathOld":"/dev/null","sourceNew":"  public void testTopLevelBoost() throws Exception {\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    CustomScoreQuery csq = new CustomScoreQuery(q, new FunctionQuery(new ConstValueSource(5)));\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(csq, BooleanClause.Occur.MUST);\n    bq.setBoost(6);\n    qtest(bq, new int[] { 0,1,2,3 });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreExplanations#testTopLevelBoost().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreExplanations#testTopLevelBoost().mjava","sourceNew":"  public void testTopLevelBoost() throws Exception {\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    CustomScoreQuery csq = new CustomScoreQuery(q, new FunctionQuery(new ConstValueSource(5)));\n    BooleanQuery.Builder bqB = new BooleanQuery.Builder();\n    bqB.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bqB.add(csq, BooleanClause.Occur.MUST);\n    BooleanQuery bq = bqB.build();\n    bq.setBoost(6);\n    qtest(bq, new int[] { 0,1,2,3 });\n  }\n\n","sourceOld":"  public void testTopLevelBoost() throws Exception {\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    CustomScoreQuery csq = new CustomScoreQuery(q, new FunctionQuery(new ConstValueSource(5)));\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bq.add(csq, BooleanClause.Occur.MUST);\n    bq.setBoost(6);\n    qtest(bq, new int[] { 0,1,2,3 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreExplanations#testTopLevelBoost().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreExplanations#testTopLevelBoost().mjava","sourceNew":"  public void testTopLevelBoost() throws Exception {\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    CustomScoreQuery csq = new CustomScoreQuery(q, new FunctionQuery(new ConstValueSource(5)));\n    BooleanQuery.Builder bqB = new BooleanQuery.Builder();\n    bqB.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bqB.add(csq, BooleanClause.Occur.MUST);\n    BooleanQuery bq = bqB.build();\n    qtest(new BoostQuery(bq, 6), new int[] { 0,1,2,3 });\n  }\n\n","sourceOld":"  public void testTopLevelBoost() throws Exception {\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    CustomScoreQuery csq = new CustomScoreQuery(q, new FunctionQuery(new ConstValueSource(5)));\n    BooleanQuery.Builder bqB = new BooleanQuery.Builder();\n    bqB.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bqB.add(csq, BooleanClause.Occur.MUST);\n    BooleanQuery bq = bqB.build();\n    bq.setBoost(6);\n    qtest(bq, new int[] { 0,1,2,3 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a82662cae660e76ded4de1e9b451633e523d83e1","date":1513619223,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreExplanations#testTopLevelBoost().mjava","sourceNew":null,"sourceOld":"  public void testTopLevelBoost() throws Exception {\n    Query q = new TermQuery(new Term(FIELD, \"w1\"));\n    CustomScoreQuery csq = new CustomScoreQuery(q, new FunctionQuery(new ConstValueSource(5)));\n    BooleanQuery.Builder bqB = new BooleanQuery.Builder();\n    bqB.add(new MatchAllDocsQuery(), BooleanClause.Occur.MUST);\n    bqB.add(csq, BooleanClause.Occur.MUST);\n    BooleanQuery bq = bqB.build();\n    qtest(new BoostQuery(bq, 6), new int[] { 0,1,2,3 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["40ed2b673f6264a3f84e2f3925b529283f2eb096"],"a82662cae660e76ded4de1e9b451633e523d83e1":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"40ed2b673f6264a3f84e2f3925b529283f2eb096":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a82662cae660e76ded4de1e9b451633e523d83e1"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"a82662cae660e76ded4de1e9b451633e523d83e1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["40ed2b673f6264a3f84e2f3925b529283f2eb096"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["a82662cae660e76ded4de1e9b451633e523d83e1"],"40ed2b673f6264a3f84e2f3925b529283f2eb096":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}