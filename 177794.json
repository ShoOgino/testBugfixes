{"path":"src/test/org/apache/lucene/search/TestThreadSafe#doTest(int,int).mjava","commits":[{"id":"1ab51a69d46b495c00b86cf406ed599035e94d70","date":1161321049,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestThreadSafe#doTest(int,int).mjava","pathOld":"/dev/null","sourceNew":"  void doTest(int iter, int nThreads) throws Exception {\n    Thr[] tarr = new Thr[nThreads];\n    for (int i=0; i<nThreads; i++) {\n      tarr[i] = new Thr(iter, new Random(), 1);\n      tarr[i].start();\n    }\n    for (int i=0; i<nThreads; i++) {\n      tarr[i].join();\n    }\n    if (failure!=null) {\n      TestCase.fail(failure);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["34aad2b15e35959ef2a8c4b991feea4c497936b7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cb1066f2afe9450585d0d10063ea4450085236f1","date":1233870820,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestThreadSafe#doTest(int,int).mjava","pathOld":"src/test/org/apache/lucene/search/TestThreadSafe#doTest(int,int).mjava","sourceNew":"  void doTest(int iter, int nThreads) throws Exception {\n    Thr[] tarr = new Thr[nThreads];\n    for (int i=0; i<nThreads; i++) {\n      tarr[i] = new Thr(iter, new Random(r.nextLong()));\n      tarr[i].start();\n    }\n    for (int i=0; i<nThreads; i++) {\n      tarr[i].join();\n    }\n    if (failure!=null) {\n      TestCase.fail(failure);\n    }\n  }\n\n","sourceOld":"  void doTest(int iter, int nThreads) throws Exception {\n    Thr[] tarr = new Thr[nThreads];\n    for (int i=0; i<nThreads; i++) {\n      tarr[i] = new Thr(iter, new Random(), 1);\n      tarr[i].start();\n    }\n    for (int i=0; i<nThreads; i++) {\n      tarr[i].join();\n    }\n    if (failure!=null) {\n      TestCase.fail(failure);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestThreadSafe#doTest(int,int).mjava","pathOld":"src/test/org/apache/lucene/search/TestThreadSafe#doTest(int,int).mjava","sourceNew":"  void doTest(int iter, int nThreads) throws Exception {\n    Thr[] tarr = new Thr[nThreads];\n    for (int i=0; i<nThreads; i++) {\n      tarr[i] = new Thr(iter, new Random(r.nextLong()));\n      tarr[i].start();\n    }\n    for (int i=0; i<nThreads; i++) {\n      tarr[i].join();\n    }\n    if (failure!=null) {\n      fail(failure);\n    }\n  }\n\n","sourceOld":"  void doTest(int iter, int nThreads) throws Exception {\n    Thr[] tarr = new Thr[nThreads];\n    for (int i=0; i<nThreads; i++) {\n      tarr[i] = new Thr(iter, new Random(r.nextLong()));\n      tarr[i].start();\n    }\n    for (int i=0; i<nThreads; i++) {\n      tarr[i].join();\n    }\n    if (failure!=null) {\n      TestCase.fail(failure);\n    }\n  }\n\n","bugFix":null,"bugIntro":["34aad2b15e35959ef2a8c4b991feea4c497936b7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#doTest(int,int).mjava","pathOld":"src/test/org/apache/lucene/search/TestThreadSafe#doTest(int,int).mjava","sourceNew":"  void doTest(int iter, int nThreads) throws Exception {\n    Thr[] tarr = new Thr[nThreads];\n    for (int i=0; i<nThreads; i++) {\n      tarr[i] = new Thr(iter, new Random(r.nextLong()));\n      tarr[i].start();\n    }\n    for (int i=0; i<nThreads; i++) {\n      tarr[i].join();\n    }\n    if (failure!=null) {\n      fail(failure);\n    }\n  }\n\n","sourceOld":"  void doTest(int iter, int nThreads) throws Exception {\n    Thr[] tarr = new Thr[nThreads];\n    for (int i=0; i<nThreads; i++) {\n      tarr[i] = new Thr(iter, new Random(r.nextLong()));\n      tarr[i].start();\n    }\n    for (int i=0; i<nThreads; i++) {\n      tarr[i].join();\n    }\n    if (failure!=null) {\n      fail(failure);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"1ab51a69d46b495c00b86cf406ed599035e94d70":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cb1066f2afe9450585d0d10063ea4450085236f1":["1ab51a69d46b495c00b86cf406ed599035e94d70"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["cb1066f2afe9450585d0d10063ea4450085236f1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"1ab51a69d46b495c00b86cf406ed599035e94d70":["cb1066f2afe9450585d0d10063ea4450085236f1"],"cb1066f2afe9450585d0d10063ea4450085236f1":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1ab51a69d46b495c00b86cf406ed599035e94d70"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}