{"path":"lucene/facet/src/test/org/apache/lucene/facet/sampling/OversampleWithDepthTest#searchWithFacets(IndexReader,TaxonomyReader,FacetSearchParams,SamplingParams).mjava","commits":[{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sampling/OversampleWithDepthTest#searchWithFacets(IndexReader,TaxonomyReader,FacetSearchParams,SamplingParams).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/sampling/OversampleWithDepthTest#searchWithFacets(IndexReader,TaxonomyReader,FacetSearchParams,SamplingParams).mjava","sourceNew":"  /** search reader <code>r</code>*/\n  private FacetResult searchWithFacets(IndexReader r, TaxonomyReader tr, FacetSearchParams fsp, \n      final SamplingParams params) throws IOException {\n    // a FacetsCollector with a sampling accumulator\n    Sampler sampler = new RandomSampler(params, random());\n    StandardFacetsAccumulator sfa = new SamplingAccumulator(sampler, fsp, r, tr);\n    FacetsCollector fcWithSampling = FacetsCollector.create(sfa);\n    \n    IndexSearcher s = new IndexSearcher(r);\n    s.search(new MatchAllDocsQuery(), fcWithSampling);\n    \n    // there's only one expected result, return just it.\n    return fcWithSampling.getFacetResults().get(0);\n  }\n\n","sourceOld":"  /** search reader <code>r</code>*/\n  private FacetResult searchWithFacets(IndexReader r, TaxonomyReader tr, FacetSearchParams fsp, \n      final SamplingParams params) throws IOException {\n    // a FacetsCollector with a sampling accumulator\n    Sampler sampler = new RandomSampler(params, random());\n    StandardFacetsAccumulator sfa = new SamplingAccumulator(sampler, fsp, r, tr);\n    FacetsCollector fcWithSampling = FacetsCollector.create(sfa);\n    \n    IndexSearcher s = new IndexSearcher(r);\n    s.search(new MatchAllDocsQuery(), fcWithSampling);\n    \n    // there's only one expected result, return just it.\n    return fcWithSampling.getFacetResults().get(0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc","date":1366056945,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sampling/OversampleWithDepthTest#searchWithFacets(IndexReader,TaxonomyReader,FacetSearchParams,SamplingParams).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sampling/OversampleWithDepthTest#searchWithFacets(IndexReader,TaxonomyReader,FacetSearchParams,SamplingParams).mjava","sourceNew":"  /** search reader <code>r</code>*/\n  private FacetResult searchWithFacets(IndexReader r, TaxonomyReader tr, FacetSearchParams fsp, \n      final SamplingParams params) throws IOException {\n    // a FacetsCollector with a sampling accumulator\n    Sampler sampler = new RandomSampler(params, random());\n    StandardFacetsAccumulator sfa = new SamplingAccumulator(sampler, fsp, r, tr);\n    FacetsCollector fcWithSampling = FacetsCollector.create(sfa);\n    \n    IndexSearcher s = newSearcher(r);\n    s.search(new MatchAllDocsQuery(), fcWithSampling);\n    \n    // there's only one expected result, return just it.\n    return fcWithSampling.getFacetResults().get(0);\n  }\n\n","sourceOld":"  /** search reader <code>r</code>*/\n  private FacetResult searchWithFacets(IndexReader r, TaxonomyReader tr, FacetSearchParams fsp, \n      final SamplingParams params) throws IOException {\n    // a FacetsCollector with a sampling accumulator\n    Sampler sampler = new RandomSampler(params, random());\n    StandardFacetsAccumulator sfa = new SamplingAccumulator(sampler, fsp, r, tr);\n    FacetsCollector fcWithSampling = FacetsCollector.create(sfa);\n    \n    IndexSearcher s = new IndexSearcher(r);\n    s.search(new MatchAllDocsQuery(), fcWithSampling);\n    \n    // there's only one expected result, return just it.\n    return fcWithSampling.getFacetResults().get(0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6","date":1375108983,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sampling/OversampleWithDepthTest#searchWithFacets(IndexReader,TaxonomyReader,FacetSearchParams,SamplingParams).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sampling/OversampleWithDepthTest#searchWithFacets(IndexReader,TaxonomyReader,FacetSearchParams,SamplingParams).mjava","sourceNew":"  /** search reader <code>r</code>*/\n  private FacetResult searchWithFacets(IndexReader r, TaxonomyReader tr, FacetSearchParams fsp, \n      final SamplingParams params) throws IOException {\n    // a FacetsCollector with a sampling accumulator\n    Sampler sampler = new RandomSampler(params, random());\n    OldFacetsAccumulator sfa = new SamplingAccumulator(sampler, fsp, r, tr);\n    FacetsCollector fcWithSampling = FacetsCollector.create(sfa);\n    \n    IndexSearcher s = newSearcher(r);\n    s.search(new MatchAllDocsQuery(), fcWithSampling);\n    \n    // there's only one expected result, return just it.\n    return fcWithSampling.getFacetResults().get(0);\n  }\n\n","sourceOld":"  /** search reader <code>r</code>*/\n  private FacetResult searchWithFacets(IndexReader r, TaxonomyReader tr, FacetSearchParams fsp, \n      final SamplingParams params) throws IOException {\n    // a FacetsCollector with a sampling accumulator\n    Sampler sampler = new RandomSampler(params, random());\n    StandardFacetsAccumulator sfa = new SamplingAccumulator(sampler, fsp, r, tr);\n    FacetsCollector fcWithSampling = FacetsCollector.create(sfa);\n    \n    IndexSearcher s = newSearcher(r);\n    s.search(new MatchAllDocsQuery(), fcWithSampling);\n    \n    // there's only one expected result, return just it.\n    return fcWithSampling.getFacetResults().get(0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/sampling/OversampleWithDepthTest#searchWithFacets(IndexReader,TaxonomyReader,FacetSearchParams,SamplingParams).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sampling/OversampleWithDepthTest#searchWithFacets(IndexReader,TaxonomyReader,FacetSearchParams,SamplingParams).mjava","sourceNew":"  /** search reader <code>r</code>*/\n  private FacetResult searchWithFacets(IndexReader r, TaxonomyReader tr, FacetSearchParams fsp, \n      final SamplingParams params) throws IOException {\n    // a FacetsCollector with a sampling accumulator\n    Sampler sampler = new RandomSampler(params, random());\n    OldFacetsAccumulator sfa = new SamplingAccumulator(sampler, fsp, r, tr);\n    FacetsCollector fcWithSampling = FacetsCollector.create(sfa);\n    \n    IndexSearcher s = newSearcher(r);\n    s.search(new MatchAllDocsQuery(), fcWithSampling);\n    \n    // there's only one expected result, return just it.\n    return fcWithSampling.getFacetResults().get(0);\n  }\n\n","sourceOld":"  /** search reader <code>r</code>*/\n  private FacetResult searchWithFacets(IndexReader r, TaxonomyReader tr, FacetSearchParams fsp, \n      final SamplingParams params) throws IOException {\n    // a FacetsCollector with a sampling accumulator\n    Sampler sampler = new RandomSampler(params, random());\n    StandardFacetsAccumulator sfa = new SamplingAccumulator(sampler, fsp, r, tr);\n    FacetsCollector fcWithSampling = FacetsCollector.create(sfa);\n    \n    IndexSearcher s = newSearcher(r);\n    s.search(new MatchAllDocsQuery(), fcWithSampling);\n    \n    // there's only one expected result, return just it.\n    return fcWithSampling.getFacetResults().get(0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sampling/OversampleWithDepthTest#searchWithFacets(IndexReader,TaxonomyReader,FacetSearchParams,SamplingParams).mjava","sourceNew":null,"sourceOld":"  /** search reader <code>r</code>*/\n  private FacetResult searchWithFacets(IndexReader r, TaxonomyReader tr, FacetSearchParams fsp, \n      final SamplingParams params) throws IOException {\n    // a FacetsCollector with a sampling accumulator\n    Sampler sampler = new RandomSampler(params, random());\n    OldFacetsAccumulator sfa = new SamplingAccumulator(sampler, fsp, r, tr);\n    FacetsCollector fcWithSampling = FacetsCollector.create(sfa);\n    \n    IndexSearcher s = newSearcher(r);\n    s.search(new MatchAllDocsQuery(), fcWithSampling);\n    \n    // there's only one expected result, return just it.\n    return fcWithSampling.getFacetResults().get(0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/sampling/OversampleWithDepthTest#searchWithFacets(IndexReader,TaxonomyReader,FacetSearchParams,SamplingParams).mjava","sourceNew":null,"sourceOld":"  /** search reader <code>r</code>*/\n  private FacetResult searchWithFacets(IndexReader r, TaxonomyReader tr, FacetSearchParams fsp, \n      final SamplingParams params) throws IOException {\n    // a FacetsCollector with a sampling accumulator\n    Sampler sampler = new RandomSampler(params, random());\n    OldFacetsAccumulator sfa = new SamplingAccumulator(sampler, fsp, r, tr);\n    FacetsCollector fcWithSampling = FacetsCollector.create(sfa);\n    \n    IndexSearcher s = newSearcher(r);\n    s.search(new MatchAllDocsQuery(), fcWithSampling);\n    \n    // there's only one expected result, return just it.\n    return fcWithSampling.getFacetResults().get(0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"607428da722dcb3e86bbd11c63de8986e6275c36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d33e19a97046248623a7591aeaa6547233fd15e2":["d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6","d33e19a97046248623a7591aeaa6547233fd15e2"],"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc":["607428da722dcb3e86bbd11c63de8986e6275c36"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13"],"607428da722dcb3e86bbd11c63de8986e6275c36":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["607428da722dcb3e86bbd11c63de8986e6275c36"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc":["d9b07d1cdffdee4f4bb3cef8670f6066cf6f64e6","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}