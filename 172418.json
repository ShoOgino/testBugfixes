{"path":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterSSL#testNoSslButSillyClientAuth().mjava","commits":[{"id":"e58bb31b4af6b8eeb1539849575c59df745bc6e6","date":1461874681,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterSSL#testNoSslButSillyClientAuth().mjava","pathOld":"/dev/null","sourceNew":"  public void testNoSslButSillyClientAuth() throws Exception {\n    // this combination doesn't really make sense, since ssl==false the clientauth option will be ignored\n    // but we test it anyway for completeness of sanity checking the behavior of code that looks at those\n    // options.\n    final SSLTestConfig sslConfig = new SSLTestConfig(false, true);\n    HttpClientUtil.setSchemaRegistryProvider(sslConfig.buildClientSchemaRegistryProvider());\n    System.setProperty(ZkStateReader.URL_SCHEME, \"http\");\n    checkClusterWithNodeReplacement(sslConfig);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55b50463286869f584cf849d1587a0fcd54d1dfa","date":1462378517,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterSSL#testNoSslButSillyClientAuth().mjava","pathOld":"/dev/null","sourceNew":"  public void testNoSslButSillyClientAuth() throws Exception {\n    // this combination doesn't really make sense, since ssl==false the clientauth option will be ignored\n    // but we test it anyway for completeness of sanity checking the behavior of code that looks at those\n    // options.\n    final SSLTestConfig sslConfig = new SSLTestConfig(false, true);\n    HttpClientUtil.setSchemaRegistryProvider(sslConfig.buildClientSchemaRegistryProvider());\n    System.setProperty(ZkStateReader.URL_SCHEME, \"http\");\n    checkClusterWithNodeReplacement(sslConfig);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a77e5e21cbd575a8240b0e3926164f15295f4e8","date":1544979500,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterSSL#testNoSslButSillyClientAuth().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterSSL#testNoSslButSillyClientAuth().mjava","sourceNew":"  public void testNoSslButSillyClientAuth() throws Exception {\n    // this combination doesn't really make sense, since ssl==false the clientauth option will be ignored\n    // but we test it anyway for completeness of sanity checking the behavior of code that looks at those\n    // options.\n    final SSLTestConfig sslConfig = new SSLTestConfig(false, true);\n    HttpClientUtil.setSchemaRegistryProvider(sslConfig.buildClientSchemaRegistryProvider());\n    Http2SolrClient.setDefaultSSLConfig(sslConfig.buildClientSSLConfig());\n    System.setProperty(ZkStateReader.URL_SCHEME, \"http\");\n    checkClusterWithNodeReplacement(sslConfig);\n  }\n\n","sourceOld":"  public void testNoSslButSillyClientAuth() throws Exception {\n    // this combination doesn't really make sense, since ssl==false the clientauth option will be ignored\n    // but we test it anyway for completeness of sanity checking the behavior of code that looks at those\n    // options.\n    final SSLTestConfig sslConfig = new SSLTestConfig(false, true);\n    HttpClientUtil.setSchemaRegistryProvider(sslConfig.buildClientSchemaRegistryProvider());\n    System.setProperty(ZkStateReader.URL_SCHEME, \"http\");\n    checkClusterWithNodeReplacement(sslConfig);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e856e5ac973044540959acff90fa900278d2692","date":1585275350,"type":3,"author":"Andy Throgmorton","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterSSL#testNoSslButSillyClientAuth().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudClusterSSL#testNoSslButSillyClientAuth().mjava","sourceNew":"  public void testNoSslButSillyClientAuth() throws Exception {\n    // this combination doesn't really make sense, since ssl==false the clientauth option will be ignored\n    // but we test it anyway for completeness of sanity checking the behavior of code that looks at those\n    // options.\n    final SSLTestConfig sslConfig = new SSLTestConfig(false, true);\n    HttpClientUtil.setSocketFactoryRegistryProvider(sslConfig.buildClientSocketFactoryRegistryProvider());\n    Http2SolrClient.setDefaultSSLConfig(sslConfig.buildClientSSLConfig());\n    System.setProperty(ZkStateReader.URL_SCHEME, \"http\");\n    checkClusterWithNodeReplacement(sslConfig);\n  }\n\n","sourceOld":"  public void testNoSslButSillyClientAuth() throws Exception {\n    // this combination doesn't really make sense, since ssl==false the clientauth option will be ignored\n    // but we test it anyway for completeness of sanity checking the behavior of code that looks at those\n    // options.\n    final SSLTestConfig sslConfig = new SSLTestConfig(false, true);\n    HttpClientUtil.setSchemaRegistryProvider(sslConfig.buildClientSchemaRegistryProvider());\n    Http2SolrClient.setDefaultSSLConfig(sslConfig.buildClientSSLConfig());\n    System.setProperty(ZkStateReader.URL_SCHEME, \"http\");\n    checkClusterWithNodeReplacement(sslConfig);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["e58bb31b4af6b8eeb1539849575c59df745bc6e6"],"9e856e5ac973044540959acff90fa900278d2692":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"e58bb31b4af6b8eeb1539849575c59df745bc6e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9e856e5ac973044540959acff90fa900278d2692"],"55b50463286869f584cf849d1587a0fcd54d1dfa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e58bb31b4af6b8eeb1539849575c59df745bc6e6"]},"commit2Childs":{"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["9e856e5ac973044540959acff90fa900278d2692"],"9e856e5ac973044540959acff90fa900278d2692":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e58bb31b4af6b8eeb1539849575c59df745bc6e6":["1a77e5e21cbd575a8240b0e3926164f15295f4e8","55b50463286869f584cf849d1587a0fcd54d1dfa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e58bb31b4af6b8eeb1539849575c59df745bc6e6","55b50463286869f584cf849d1587a0fcd54d1dfa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"55b50463286869f584cf849d1587a0fcd54d1dfa":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","55b50463286869f584cf849d1587a0fcd54d1dfa"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}