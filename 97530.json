{"path":"solr/core/src/java/org/apache/solr/handler/admin/ZookeeperInfoHandler.ZKPrinter#print(String).mjava","commits":[{"id":"80ebe5b1d946f7c2ed9c46206b0c7254dc21206a","date":1443442239,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/ZookeeperInfoHandler.ZKPrinter#print(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/ZookeeperInfoServlet.ZKPrinter#print(String).mjava","sourceNew":"    // main entry point\n    void print(String path) throws IOException {\n      if (zkClient == null) {\n        return;\n      }\n\n      // normalize path\n      if (path == null) {\n        path = \"/\";\n      } else {\n        path = path.trim();\n        if (path.length() == 0) {\n          path = \"/\";\n        }\n      }\n\n      if (path.endsWith(\"/\") && path.length() > 1) {\n        path = path.substring(0, path.length() - 1);\n      }\n\n      int idx = path.lastIndexOf('/');\n      String parent = idx >= 0 ? path.substring(0, idx) : path;\n      if (parent.length() == 0) {\n        parent = \"/\";\n      }\n\n      CharArr chars = new CharArr();\n      JSONWriter json = new JSONWriter(chars, 2);\n      json.startObject();\n\n      if (detail) {\n        if (!printZnode(json, path)) {\n          return;\n        }\n        json.writeValueSeparator();\n      }\n\n      json.writeString(\"tree\");\n      json.writeNameSeparator();\n      json.startArray();\n      if (!printTree(json, path)) {\n        return; // there was an error\n      }\n      json.endArray();\n      json.endObject();\n      out.write(chars.toString());\n    }\n\n","sourceOld":"    // main entry point\n    void print(String path) throws IOException {\n      if (zkClient == null) {\n        return;\n      }\n\n      // normalize path\n      if (path == null) {\n        path = \"/\";\n      } else {\n        path = path.trim();\n        if (path.length() == 0) {\n          path = \"/\";\n        }\n      }\n\n      if (path.endsWith(\"/\") && path.length() > 1) {\n        path = path.substring(0, path.length() - 1);\n      }\n\n      int idx = path.lastIndexOf('/');\n      String parent = idx >= 0 ? path.substring(0, idx) : path;\n      if (parent.length() == 0) {\n        parent = \"/\";\n      }\n\n      CharArr chars = new CharArr();\n      JSONWriter json = new JSONWriter(chars, 2);\n      json.startObject();\n\n      if (detail) {\n        if (!printZnode(json, path)) {\n          return;\n        }\n        json.writeValueSeparator();\n      }\n\n      json.writeString(\"tree\");\n      json.writeNameSeparator();\n      json.startArray();\n      if (!printTree(json, path)) {\n        return; // there was an error\n      }\n      json.endArray();\n      json.endObject();\n      out.write(chars.toString());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ad9c35f926b4bf8da0336d1300efc709c8d5a56","date":1591729157,"type":3,"author":"murblanc","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/ZookeeperInfoHandler.ZKPrinter#print(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/ZookeeperInfoHandler.ZKPrinter#print(String).mjava","sourceNew":"    // main entry point for printing from path\n    void print(String path) throws IOException {\n      if (zkClient == null) {\n        return;\n      }\n\n      // normalize path\n      if (path == null) {\n        path = \"/\";\n      } else {\n        path = path.trim();\n        if (path.length() == 0) {\n          path = \"/\";\n        }\n      }\n\n      if (path.endsWith(\"/\") && path.length() > 1) {\n        path = path.substring(0, path.length() - 1);\n      }\n\n      int idx = path.lastIndexOf('/');\n      String parent = idx >= 0 ? path.substring(0, idx) : path;\n      if (parent.length() == 0) {\n        parent = \"/\";\n      }\n\n      CharArr chars = new CharArr();\n      JSONWriter json = new JSONWriter(chars, 2);\n      json.startObject();\n\n      if (detail) {\n        if (!printZnode(json, path)) {\n          return;\n        }\n        json.writeValueSeparator();\n      }\n\n      json.writeString(\"tree\");\n      json.writeNameSeparator();\n      json.startArray();\n      if (!printTree(json, path)) {\n        return; // there was an error\n      }\n      json.endArray();\n      json.endObject();\n      out.write(chars.toString());\n    }\n\n","sourceOld":"    // main entry point\n    void print(String path) throws IOException {\n      if (zkClient == null) {\n        return;\n      }\n\n      // normalize path\n      if (path == null) {\n        path = \"/\";\n      } else {\n        path = path.trim();\n        if (path.length() == 0) {\n          path = \"/\";\n        }\n      }\n\n      if (path.endsWith(\"/\") && path.length() > 1) {\n        path = path.substring(0, path.length() - 1);\n      }\n\n      int idx = path.lastIndexOf('/');\n      String parent = idx >= 0 ? path.substring(0, idx) : path;\n      if (parent.length() == 0) {\n        parent = \"/\";\n      }\n\n      CharArr chars = new CharArr();\n      JSONWriter json = new JSONWriter(chars, 2);\n      json.startObject();\n\n      if (detail) {\n        if (!printZnode(json, path)) {\n          return;\n        }\n        json.writeValueSeparator();\n      }\n\n      json.writeString(\"tree\");\n      json.writeNameSeparator();\n      json.startArray();\n      if (!printTree(json, path)) {\n        return; // there was an error\n      }\n      json.endArray();\n      json.endObject();\n      out.write(chars.toString());\n    }\n\n","bugFix":["5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5ad9c35f926b4bf8da0336d1300efc709c8d5a56":["80ebe5b1d946f7c2ed9c46206b0c7254dc21206a"],"80ebe5b1d946f7c2ed9c46206b0c7254dc21206a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"]},"commit2Childs":{"5ad9c35f926b4bf8da0336d1300efc709c8d5a56":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"80ebe5b1d946f7c2ed9c46206b0c7254dc21206a":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["80ebe5b1d946f7c2ed9c46206b0c7254dc21206a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}