{"path":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/SimplePrimaryNode#verifyAtLeastMarkerCount(int,DataOutput).mjava","commits":[{"id":"ec317d5d3de749e12abcc9e6f976d765638fe9e2","date":1454411397,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/SimplePrimaryNode#verifyAtLeastMarkerCount(int,DataOutput).mjava","pathOld":"/dev/null","sourceNew":"  private void verifyAtLeastMarkerCount(int expectedAtLeastCount, DataOutput out) throws IOException {\n    IndexSearcher searcher = mgr.acquire();\n    try {\n      long version = ((DirectoryReader) searcher.getIndexReader()).getVersion();\n      int hitCount = searcher.count(new TermQuery(new Term(\"marker\", \"marker\")));\n\n      if (hitCount < expectedAtLeastCount) {\n        message(\"marker search: expectedAtLeastCount=\" + expectedAtLeastCount + \" but hitCount=\" + hitCount);\n        TopDocs hits = searcher.search(new TermQuery(new Term(\"marker\", \"marker\")), expectedAtLeastCount);\n        List<Integer> seen = new ArrayList<>();\n        for(ScoreDoc hit : hits.scoreDocs) {\n          Document doc = searcher.doc(hit.doc);\n          seen.add(Integer.parseInt(doc.get(\"docid\").substring(1)));\n        }\n        Collections.sort(seen);\n        message(\"saw markers:\");\n        for(int marker : seen) {\n          message(\"saw m\" + marker);\n        }\n        throw new IllegalStateException(\"at flush: marker count \" + hitCount + \" but expected at least \" + expectedAtLeastCount + \" version=\" + version);\n      }\n\n      if (out != null) {\n        out.writeVLong(version);\n        out.writeVInt(hitCount);\n      }\n    } finally {\n      mgr.release(searcher);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/SimplePrimaryNode#verifyAtLeastMarkerCount(int,DataOutput).mjava","pathOld":"/dev/null","sourceNew":"  private void verifyAtLeastMarkerCount(int expectedAtLeastCount, DataOutput out) throws IOException {\n    IndexSearcher searcher = mgr.acquire();\n    try {\n      long version = ((DirectoryReader) searcher.getIndexReader()).getVersion();\n      int hitCount = searcher.count(new TermQuery(new Term(\"marker\", \"marker\")));\n\n      if (hitCount < expectedAtLeastCount) {\n        message(\"marker search: expectedAtLeastCount=\" + expectedAtLeastCount + \" but hitCount=\" + hitCount);\n        TopDocs hits = searcher.search(new TermQuery(new Term(\"marker\", \"marker\")), expectedAtLeastCount);\n        List<Integer> seen = new ArrayList<>();\n        for(ScoreDoc hit : hits.scoreDocs) {\n          Document doc = searcher.doc(hit.doc);\n          seen.add(Integer.parseInt(doc.get(\"docid\").substring(1)));\n        }\n        Collections.sort(seen);\n        message(\"saw markers:\");\n        for(int marker : seen) {\n          message(\"saw m\" + marker);\n        }\n        throw new IllegalStateException(\"at flush: marker count \" + hitCount + \" but expected at least \" + expectedAtLeastCount + \" version=\" + version);\n      }\n\n      if (out != null) {\n        out.writeVLong(version);\n        out.writeVInt(hitCount);\n      }\n    } finally {\n      mgr.release(searcher);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ec317d5d3de749e12abcc9e6f976d765638fe9e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"68496c2200e559fb7802f7575427b7a482659afb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ec317d5d3de749e12abcc9e6f976d765638fe9e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["68496c2200e559fb7802f7575427b7a482659afb"]},"commit2Childs":{"ec317d5d3de749e12abcc9e6f976d765638fe9e2":["68496c2200e559fb7802f7575427b7a482659afb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ec317d5d3de749e12abcc9e6f976d765638fe9e2","68496c2200e559fb7802f7575427b7a482659afb"],"68496c2200e559fb7802f7575427b7a482659afb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}