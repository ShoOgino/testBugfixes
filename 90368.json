{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction#getRequestedNumOps(TriggerEvent).mjava","commits":[{"id":"d9ccfe45460d496c5e5e1b70396521dac842d966","date":1516798975,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction#getRequestedNumOps(TriggerEvent).mjava","pathOld":"/dev/null","sourceNew":"  protected int getRequestedNumOps(TriggerEvent event) {\n    Collection<TriggerEvent.Op> ops = (Collection<TriggerEvent.Op>)event.getProperty(TriggerEvent.REQUESTED_OPS, Collections.emptyList());\n    if (ops.isEmpty()) {\n      return -1;\n    } else {\n      return ops.size();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43a787a75ad72a9bf26e8ff714d8b6d01f9eb441","date":1516881857,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction#getRequestedNumOps(TriggerEvent).mjava","pathOld":"/dev/null","sourceNew":"  protected int getRequestedNumOps(TriggerEvent event) {\n    Collection<TriggerEvent.Op> ops = (Collection<TriggerEvent.Op>)event.getProperty(TriggerEvent.REQUESTED_OPS, Collections.emptyList());\n    if (ops.isEmpty()) {\n      return -1;\n    } else {\n      return ops.size();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f0e33082a86447f4f2b59a1a5f69a310500276a","date":1519970482,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction#getRequestedNumOps(TriggerEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction#getRequestedNumOps(TriggerEvent).mjava","sourceNew":"  protected int getRequestedNumOps(TriggerEvent event) {\n    Collection<TriggerEvent.Op> ops = (Collection<TriggerEvent.Op>) event.getProperty(TriggerEvent.REQUESTED_OPS, Collections.emptyList());\n    if (ops.isEmpty()) {\n      return -1;\n    } else {\n      return ops.size();\n    }\n  }\n\n","sourceOld":"  protected int getRequestedNumOps(TriggerEvent event) {\n    Collection<TriggerEvent.Op> ops = (Collection<TriggerEvent.Op>)event.getProperty(TriggerEvent.REQUESTED_OPS, Collections.emptyList());\n    if (ops.isEmpty()) {\n      return -1;\n    } else {\n      return ops.size();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"daa0f21a44e235a2299ea1fa913898b182dd7cce","date":1590952026,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction#getRequestedNumOps(TriggerEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction#getRequestedNumOps(TriggerEvent).mjava","sourceNew":"  protected int getRequestedNumOps(TriggerEvent event) {\n    @SuppressWarnings({\"unchecked\"})\n    Collection<TriggerEvent.Op> ops = (Collection<TriggerEvent.Op>) event.getProperty(TriggerEvent.REQUESTED_OPS, Collections.emptyList());\n    if (ops.isEmpty()) {\n      return -1;\n    } else {\n      return ops.size();\n    }\n  }\n\n","sourceOld":"  protected int getRequestedNumOps(TriggerEvent event) {\n    Collection<TriggerEvent.Op> ops = (Collection<TriggerEvent.Op>) event.getProperty(TriggerEvent.REQUESTED_OPS, Collections.emptyList());\n    if (ops.isEmpty()) {\n      return -1;\n    } else {\n      return ops.size();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/ComputePlanAction#getRequestedNumOps(TriggerEvent).mjava","sourceNew":null,"sourceOld":"  protected int getRequestedNumOps(TriggerEvent event) {\n    @SuppressWarnings({\"unchecked\"})\n    Collection<TriggerEvent.Op> ops = (Collection<TriggerEvent.Op>) event.getProperty(TriggerEvent.REQUESTED_OPS, Collections.emptyList());\n    if (ops.isEmpty()) {\n      return -1;\n    } else {\n      return ops.size();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["daa0f21a44e235a2299ea1fa913898b182dd7cce"],"daa0f21a44e235a2299ea1fa913898b182dd7cce":["9f0e33082a86447f4f2b59a1a5f69a310500276a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9f0e33082a86447f4f2b59a1a5f69a310500276a":["43a787a75ad72a9bf26e8ff714d8b6d01f9eb441"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"],"43a787a75ad72a9bf26e8ff714d8b6d01f9eb441":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d9ccfe45460d496c5e5e1b70396521dac842d966"],"d9ccfe45460d496c5e5e1b70396521dac842d966":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"daa0f21a44e235a2299ea1fa913898b182dd7cce":["3f504512a03d978990cbff30db0522b354e846db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["43a787a75ad72a9bf26e8ff714d8b6d01f9eb441","d9ccfe45460d496c5e5e1b70396521dac842d966"],"9f0e33082a86447f4f2b59a1a5f69a310500276a":["daa0f21a44e235a2299ea1fa913898b182dd7cce"],"43a787a75ad72a9bf26e8ff714d8b6d01f9eb441":["9f0e33082a86447f4f2b59a1a5f69a310500276a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d9ccfe45460d496c5e5e1b70396521dac842d966":["43a787a75ad72a9bf26e8ff714d8b6d01f9eb441"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}