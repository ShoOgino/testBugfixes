{"path":"src/java/org/apache/solr/analysis/EnglishPorterFilter[EnglishPorterFilterFactory]#next(Token).mjava","commits":[{"id":"fe8ae1ed027200f075b0de9f264776fa32c4862f","date":1207066219,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/EnglishPorterFilter[EnglishPorterFilterFactory]#next(Token).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * the original code from lucene sandbox\n   * public final Token next() throws IOException {\n   * Token token = input.next();\n   * if (token == null)\n   * return null;\n   * stemmer.setCurrent(token.termText());\n   * try {\n   * stemMethod.invoke(stemmer, EMPTY_ARGS);\n   * } catch (Exception e) {\n   * throw new RuntimeException(e.toString());\n   * }\n   * return new Token(stemmer.getCurrent(),\n   * token.startOffset(), token.endOffset(), token.type());\n   * }\n   */\n\n  @Override\n  public Token next(Token token) throws IOException {\n    Token result = input.next(token);\n    if (result != null) {\n      char[] termBuffer = result.termBuffer();\n      int len = result.termLength();\n      // if protected, don't stem.  use this to avoid stemming collisions.\n      if (protWords != null && protWords.contains(termBuffer, 0, len)) {\n        return result;\n      }\n      stemmer.setCurrent(new String(termBuffer, 0, len));//ugh, wish the Stemmer took a char array\n      stemmer.stem();\n      String newstr = stemmer.getCurrent();\n      result.setTermBuffer(newstr.toCharArray(), 0, newstr.length());\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be29e0e2cef1fd569147732e48caf8538790339b","date":1250443738,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/solr/analysis/EnglishPorterFilter[EnglishPorterFilterFactory]#next(Token).mjava","sourceNew":null,"sourceOld":"  /**\n   * the original code from lucene sandbox\n   * public final Token next() throws IOException {\n   * Token token = input.next();\n   * if (token == null)\n   * return null;\n   * stemmer.setCurrent(token.termText());\n   * try {\n   * stemMethod.invoke(stemmer, EMPTY_ARGS);\n   * } catch (Exception e) {\n   * throw new RuntimeException(e.toString());\n   * }\n   * return new Token(stemmer.getCurrent(),\n   * token.startOffset(), token.endOffset(), token.type());\n   * }\n   */\n\n  @Override\n  public Token next(Token token) throws IOException {\n    Token result = input.next(token);\n    if (result != null) {\n      char[] termBuffer = result.termBuffer();\n      int len = result.termLength();\n      // if protected, don't stem.  use this to avoid stemming collisions.\n      if (protWords != null && protWords.contains(termBuffer, 0, len)) {\n        return result;\n      }\n      stemmer.setCurrent(new String(termBuffer, 0, len));//ugh, wish the Stemmer took a char array\n      stemmer.stem();\n      String newstr = stemmer.getCurrent();\n      result.setTermBuffer(newstr.toCharArray(), 0, newstr.length());\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fe8ae1ed027200f075b0de9f264776fa32c4862f":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"be29e0e2cef1fd569147732e48caf8538790339b":["fe8ae1ed027200f075b0de9f264776fa32c4862f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"fe8ae1ed027200f075b0de9f264776fa32c4862f":["be29e0e2cef1fd569147732e48caf8538790339b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["fe8ae1ed027200f075b0de9f264776fa32c4862f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"be29e0e2cef1fd569147732e48caf8538790339b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["be29e0e2cef1fd569147732e48caf8538790339b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}