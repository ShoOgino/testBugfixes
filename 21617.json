{"path":"src/java/org/apache/lucene/util/BitVector#BitVector(Directory,String).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/BitVector#BitVector(Directory,String).mjava","pathOld":"/dev/null","sourceNew":"  /** Constructs a bit vector from the file <code>name</code> in Directory\n    <code>d</code>, as written by the {@link #write} method.\n    */\n  public BitVector(Directory d, String name) throws IOException {\n    InputStream input = d.openFile(name);\n    try {\n      size = input.readInt();\t\t\t  // read size\n      count = input.readInt();\t\t\t  // read count\n      bits = new byte[(size >> 3) + 1];\t\t  // allocate bits\n      input.readBytes(bits, 0, bits.length);\t  // read bits\n    } finally {\n      input.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["9a70ce9bddc6f985feb8e5e182aebe20872328d4","9a70ce9bddc6f985feb8e5e182aebe20872328d4","9a70ce9bddc6f985feb8e5e182aebe20872328d4","9a70ce9bddc6f985feb8e5e182aebe20872328d4","9a70ce9bddc6f985feb8e5e182aebe20872328d4","9a70ce9bddc6f985feb8e5e182aebe20872328d4","9a70ce9bddc6f985feb8e5e182aebe20872328d4","9a70ce9bddc6f985feb8e5e182aebe20872328d4","9a70ce9bddc6f985feb8e5e182aebe20872328d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e971ba25509e21a130fef61f0687be0446ca27a0","date":1095369217,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/BitVector#BitVector(Directory,String).mjava","pathOld":"src/java/org/apache/lucene/util/BitVector#BitVector(Directory,String).mjava","sourceNew":"  /** Constructs a bit vector from the file <code>name</code> in Directory\n    <code>d</code>, as written by the {@link #write} method.\n    */\n  public BitVector(Directory d, String name) throws IOException {\n    IndexInput input = d.openInput(name);\n    try {\n      size = input.readInt();\t\t\t  // read size\n      count = input.readInt();\t\t\t  // read count\n      bits = new byte[(size >> 3) + 1];\t\t  // allocate bits\n      input.readBytes(bits, 0, bits.length);\t  // read bits\n    } finally {\n      input.close();\n    }\n  }\n\n","sourceOld":"  /** Constructs a bit vector from the file <code>name</code> in Directory\n    <code>d</code>, as written by the {@link #write} method.\n    */\n  public BitVector(Directory d, String name) throws IOException {\n    InputStream input = d.openFile(name);\n    try {\n      size = input.readInt();\t\t\t  // read size\n      count = input.readInt();\t\t\t  // read count\n      bits = new byte[(size >> 3) + 1];\t\t  // allocate bits\n      input.readBytes(bits, 0, bits.length);\t  // read bits\n    } finally {\n      input.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5e9c92541487f346938eae718677aac806afcdab","date":1165802618,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/BitVector#BitVector(Directory,String).mjava","pathOld":"src/java/org/apache/lucene/util/BitVector#BitVector(Directory,String).mjava","sourceNew":"  /** Constructs a bit vector from the file <code>name</code> in Directory\n    <code>d</code>, as written by the {@link #write} method.\n    */\n  public BitVector(Directory d, String name) throws IOException {\n    IndexInput input = d.openInput(name);\n    try {\n      size = input.readInt();       // read size\n      if (size == -1) {\n        readDgaps(input);\n      } else {\n        readBits(input);\n      }\n    } finally {\n      input.close();\n    }\n  }\n\n","sourceOld":"  /** Constructs a bit vector from the file <code>name</code> in Directory\n    <code>d</code>, as written by the {@link #write} method.\n    */\n  public BitVector(Directory d, String name) throws IOException {\n    IndexInput input = d.openInput(name);\n    try {\n      size = input.readInt();\t\t\t  // read size\n      count = input.readInt();\t\t\t  // read count\n      bits = new byte[(size >> 3) + 1];\t\t  // allocate bits\n      input.readBytes(bits, 0, bits.length);\t  // read bits\n    } finally {\n      input.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":["ffa56322f560268d9e8c21373d8a84a9bbbbb7e2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/BitVector#BitVector(Directory,String).mjava","pathOld":"src/java/org/apache/lucene/util/BitVector#BitVector(Directory,String).mjava","sourceNew":"  /** Constructs a bit vector from the file <code>name</code> in Directory\n    <code>d</code>, as written by the {@link #write} method.\n    */\n  public BitVector(Directory d, String name) throws IOException {\n    IndexInput input = d.openInput(name);\n    try {\n      size = input.readInt();       // read size\n      if (size == -1) {\n        readDgaps(input);\n      } else {\n        readBits(input);\n      }\n    } finally {\n      input.close();\n    }\n  }\n\n","sourceOld":"  /** Constructs a bit vector from the file <code>name</code> in Directory\n    <code>d</code>, as written by the {@link #write} method.\n    */\n  public BitVector(Directory d, String name) throws IOException {\n    IndexInput input = d.openInput(name);\n    try {\n      size = input.readInt();       // read size\n      if (size == -1) {\n        readDgaps(input);\n      } else {\n        readBits(input);\n      }\n    } finally {\n      input.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e971ba25509e21a130fef61f0687be0446ca27a0":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5e9c92541487f346938eae718677aac806afcdab":["e971ba25509e21a130fef61f0687be0446ca27a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5e9c92541487f346938eae718677aac806afcdab"]},"commit2Childs":{"e971ba25509e21a130fef61f0687be0446ca27a0":["5e9c92541487f346938eae718677aac806afcdab"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["e971ba25509e21a130fef61f0687be0446ca27a0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"5e9c92541487f346938eae718677aac806afcdab":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}