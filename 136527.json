{"path":"src/java/org/apache/solr/handler/StaxUpdateRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"fc25891451b288866eb099252dfdaacdb8eaefd2","date":1181874819,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/StaxUpdateRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    Iterable<ContentStream> streams = req.getContentStreams();\n    if( streams == null ) {\n      if( !RequestHandlerUtils.handleCommit(req, rsp, false) ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"missing content stream\" );\n      }\n      return;\n    }\n    \n    RequestHandlerUtils.addExperimentalFormatWarning( rsp );\n    \n    // Cycle through each stream\n    for( ContentStream stream : req.getContentStreams() ) {\n      Reader reader = stream.getReader();\n      try {\n        NamedList out = this.update( req, req.getCore(), reader );\n        rsp.add( \"update\", out );\n      }\n      finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n    \n    // perhaps commit when we are done\n    RequestHandlerUtils.handleCommit(req, rsp, false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4039ee26c484fda13f0428eeeb09969370ff9149","date":1183229536,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/XmlUpdateRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/StaxUpdateRequestHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    Iterable<ContentStream> streams = req.getContentStreams();\n    if( streams == null ) {\n      if( !RequestHandlerUtils.handleCommit(req, rsp, false) ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"missing content stream\" );\n      }\n      return;\n    }\n    \n    RequestHandlerUtils.addExperimentalFormatWarning( rsp );\n    \n    // Cycle through each stream\n    for( ContentStream stream : req.getContentStreams() ) {\n      Reader reader = stream.getReader();\n      try {\n        NamedList out = this.update( req, req.getCore(), reader );\n        rsp.add( \"update\", out );\n      }\n      finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n    \n    // perhaps commit when we are done\n    RequestHandlerUtils.handleCommit(req, rsp, false);\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    Iterable<ContentStream> streams = req.getContentStreams();\n    if( streams == null ) {\n      if( !RequestHandlerUtils.handleCommit(req, rsp, false) ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, \"missing content stream\" );\n      }\n      return;\n    }\n    \n    RequestHandlerUtils.addExperimentalFormatWarning( rsp );\n    \n    // Cycle through each stream\n    for( ContentStream stream : req.getContentStreams() ) {\n      Reader reader = stream.getReader();\n      try {\n        NamedList out = this.update( req, req.getCore(), reader );\n        rsp.add( \"update\", out );\n      }\n      finally {\n        IOUtils.closeQuietly(reader);\n      }\n    }\n    \n    // perhaps commit when we are done\n    RequestHandlerUtils.handleCommit(req, rsp, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4039ee26c484fda13f0428eeeb09969370ff9149":["fc25891451b288866eb099252dfdaacdb8eaefd2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"fc25891451b288866eb099252dfdaacdb8eaefd2":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4039ee26c484fda13f0428eeeb09969370ff9149":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["fc25891451b288866eb099252dfdaacdb8eaefd2"],"fc25891451b288866eb099252dfdaacdb8eaefd2":["4039ee26c484fda13f0428eeeb09969370ff9149"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4039ee26c484fda13f0428eeeb09969370ff9149","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}