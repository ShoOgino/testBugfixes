{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/Lucene70DocValuesConsumer#addOrdIndex(FieldInfo,Iterable[Number]).mjava","commits":[{"id":"084884d4602f4d1c7411eab29e897e349ce62675","date":1475571034,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/Lucene70DocValuesConsumer#addOrdIndex(FieldInfo,Iterable[Number]).mjava","pathOld":"/dev/null","sourceNew":"  // writes addressing information as MONOTONIC_COMPRESSED integer\n  private void addOrdIndex(FieldInfo field, Iterable<Number> values) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene70DocValuesFormat.NUMERIC);\n    meta.writeVInt(MONOTONIC_COMPRESSED);\n    meta.writeLong(-1L);\n    meta.writeLong(data.getFilePointer());\n    meta.writeVLong(maxDoc);\n    meta.writeVInt(DIRECT_MONOTONIC_BLOCK_SHIFT);\n\n    final DirectMonotonicWriter writer = DirectMonotonicWriter.getInstance(meta, data, maxDoc + 1, DIRECT_MONOTONIC_BLOCK_SHIFT);\n    long addr = 0;\n    writer.add(addr);\n    for (Number v : values) {\n      addr += v.longValue();\n      writer.add(addr);\n    }\n    writer.finish();\n    meta.writeLong(data.getFilePointer());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1967bed916cc89da82a1c2085f27976da6d08cbd","date":1475588750,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/Lucene70DocValuesConsumer#addOrdIndex(FieldInfo,Iterable[Number]).mjava","pathOld":"/dev/null","sourceNew":"  // writes addressing information as MONOTONIC_COMPRESSED integer\n  private void addOrdIndex(FieldInfo field, Iterable<Number> values) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene70DocValuesFormat.NUMERIC);\n    meta.writeVInt(MONOTONIC_COMPRESSED);\n    meta.writeLong(-1L);\n    meta.writeLong(data.getFilePointer());\n    meta.writeVLong(maxDoc);\n    meta.writeVInt(DIRECT_MONOTONIC_BLOCK_SHIFT);\n\n    final DirectMonotonicWriter writer = DirectMonotonicWriter.getInstance(meta, data, maxDoc + 1, DIRECT_MONOTONIC_BLOCK_SHIFT);\n    long addr = 0;\n    writer.add(addr);\n    for (Number v : values) {\n      addr += v.longValue();\n      writer.add(addr);\n    }\n    writer.finish();\n    meta.writeLong(data.getFilePointer());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23e44daeaa8b89694d10df5999956c8e14a7dd09","date":1476689300,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene70/Lucene70DocValuesConsumer#addOrdIndex(FieldInfo,Iterable[Number]).mjava","sourceNew":null,"sourceOld":"  // writes addressing information as MONOTONIC_COMPRESSED integer\n  private void addOrdIndex(FieldInfo field, Iterable<Number> values) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(Lucene70DocValuesFormat.NUMERIC);\n    meta.writeVInt(MONOTONIC_COMPRESSED);\n    meta.writeLong(-1L);\n    meta.writeLong(data.getFilePointer());\n    meta.writeVLong(maxDoc);\n    meta.writeVInt(DIRECT_MONOTONIC_BLOCK_SHIFT);\n\n    final DirectMonotonicWriter writer = DirectMonotonicWriter.getInstance(meta, data, maxDoc + 1, DIRECT_MONOTONIC_BLOCK_SHIFT);\n    long addr = 0;\n    writer.add(addr);\n    for (Number v : values) {\n      addr += v.longValue();\n      writer.add(addr);\n    }\n    writer.finish();\n    meta.writeLong(data.getFilePointer());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"23e44daeaa8b89694d10df5999956c8e14a7dd09":["1967bed916cc89da82a1c2085f27976da6d08cbd"],"1967bed916cc89da82a1c2085f27976da6d08cbd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","084884d4602f4d1c7411eab29e897e349ce62675"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23e44daeaa8b89694d10df5999956c8e14a7dd09"],"084884d4602f4d1c7411eab29e897e349ce62675":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"23e44daeaa8b89694d10df5999956c8e14a7dd09":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1967bed916cc89da82a1c2085f27976da6d08cbd":["23e44daeaa8b89694d10df5999956c8e14a7dd09"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1967bed916cc89da82a1c2085f27976da6d08cbd","084884d4602f4d1c7411eab29e897e349ce62675"],"084884d4602f4d1c7411eab29e897e349ce62675":["1967bed916cc89da82a1c2085f27976da6d08cbd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}