{"path":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#getDVFields(IndexReader).mjava","commits":[{"id":"51c8450b3b616b6777f722ff4083c0bf946381a2","date":1363812022,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#getDVFields(IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#getDVFields(IndexReader).mjava","sourceNew":"  private static Set<String> getDVFields(IndexReader reader) {\n    Set<String> fields = new HashSet<String>();\n    for(FieldInfo fi : MultiFields.getMergedFieldInfos(reader)) {\n      if (fi.hasDocValues()) {\n        fields.add(fi.name);\n      }\n    }\n\n    return fields;\n  }\n\n","sourceOld":"  private static Set<String> getDVFields(IndexReader reader) {\n    Set<String> fields = new HashSet<String>();\n    for(FieldInfo fi : MultiFields.getMergedFieldInfos(reader)) {\n      if (fi.hasDocValues()) {\n        fields.add(fi.name);\n      }\n    }\n\n    return fields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#getDVFields(IndexReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#getDVFields(IndexReader).mjava","sourceNew":"  private static Set<String> getDVFields(IndexReader reader) {\n    Set<String> fields = new HashSet<>();\n    for(FieldInfo fi : MultiFields.getMergedFieldInfos(reader)) {\n      if (fi.hasDocValues()) {\n        fields.add(fi.name);\n      }\n    }\n\n    return fields;\n  }\n\n","sourceOld":"  private static Set<String> getDVFields(IndexReader reader) {\n    Set<String> fields = new HashSet<String>();\n    for(FieldInfo fi : MultiFields.getMergedFieldInfos(reader)) {\n      if (fi.hasDocValues()) {\n        fields.add(fi.name);\n      }\n    }\n\n    return fields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"556a4aab886d75371b2af129d87be3c2795cea76","date":1414954991,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#getDVFields(IndexReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#getDVFields(IndexReader).mjava","sourceNew":"  private static Set<String> getDVFields(IndexReader reader) {\n    Set<String> fields = new HashSet<>();\n    for(FieldInfo fi : MultiFields.getMergedFieldInfos(reader)) {\n      if (fi.getDocValuesType() != DocValuesType.NONE) {\n        fields.add(fi.name);\n      }\n    }\n\n    return fields;\n  }\n\n","sourceOld":"  private static Set<String> getDVFields(IndexReader reader) {\n    Set<String> fields = new HashSet<>();\n    for(FieldInfo fi : MultiFields.getMergedFieldInfos(reader)) {\n      if (fi.hasDocValues()) {\n        fields.add(fi.name);\n      }\n    }\n\n    return fields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e775de416dd2d8067b10db1c8af975a1d5017e","date":1539906554,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#getDVFields(IndexReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#getDVFields(IndexReader).mjava","sourceNew":"  private static Set<String> getDVFields(IndexReader reader) {\n    Set<String> fields = new HashSet<>();\n    for(FieldInfo fi : FieldInfos.getMergedFieldInfos(reader)) {\n      if (fi.getDocValuesType() != DocValuesType.NONE) {\n        fields.add(fi.name);\n      }\n    }\n\n    return fields;\n  }\n\n","sourceOld":"  private static Set<String> getDVFields(IndexReader reader) {\n    Set<String> fields = new HashSet<>();\n    for(FieldInfo fi : MultiFields.getMergedFieldInfos(reader)) {\n      if (fi.getDocValuesType() != DocValuesType.NONE) {\n        fields.add(fi.name);\n      }\n    }\n\n    return fields;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["51c8450b3b616b6777f722ff4083c0bf946381a2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"04e775de416dd2d8067b10db1c8af975a1d5017e":["556a4aab886d75371b2af129d87be3c2795cea76"],"556a4aab886d75371b2af129d87be3c2795cea76":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"51c8450b3b616b6777f722ff4083c0bf946381a2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["04e775de416dd2d8067b10db1c8af975a1d5017e"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["556a4aab886d75371b2af129d87be3c2795cea76"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["51c8450b3b616b6777f722ff4083c0bf946381a2"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"556a4aab886d75371b2af129d87be3c2795cea76":["04e775de416dd2d8067b10db1c8af975a1d5017e"],"51c8450b3b616b6777f722ff4083c0bf946381a2":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}