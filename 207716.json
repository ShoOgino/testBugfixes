{"path":"lucene/replicator/src/java/org/apache/lucene/replicator/IndexReplicationHandler#writeSegmentsGen(String,Directory).mjava","commits":[{"id":"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4","date":1368446242,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/IndexReplicationHandler#writeSegmentsGen(String,Directory).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Writes {@link IndexFileNames#SEGMENTS_GEN} file to the directory, reading\n   * the generation from the given {@code segmentsFile}. If it is {@code null},\n   * this method deletes segments.gen from the directory.\n   */\n  public static void writeSegmentsGen(String segmentsFile, Directory dir) {\n    if (segmentsFile != null) {\n      SegmentInfos.writeSegmentsGen(dir, SegmentInfos.generationFromSegmentsFileName(segmentsFile));\n    } else {\n      try {\n        if (dir.fileExists(IndexFileNames.SEGMENTS_GEN)) {\n          dir.deleteFile(IndexFileNames.SEGMENTS_GEN);\n        }\n      } catch (Throwable t) {\n        // suppress any errors while deleting this file.\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/IndexReplicationHandler#writeSegmentsGen(String,Directory).mjava","pathOld":"lucene/replicator/src/java/org/apache/lucene/replicator/IndexReplicationHandler#writeSegmentsGen(String,Directory).mjava","sourceNew":"  /**\n   * Writes {@link IndexFileNames#SEGMENTS_GEN} file to the directory, reading\n   * the generation from the given {@code segmentsFile}. If it is {@code null},\n   * this method deletes segments.gen from the directory.\n   */\n  public static void writeSegmentsGen(String segmentsFile, Directory dir) {\n    if (segmentsFile != null) {\n      SegmentInfos.writeSegmentsGen(dir, SegmentInfos.generationFromSegmentsFileName(segmentsFile));\n    } else {\n      try {\n        if (dir.fileExists(IndexFileNames.SEGMENTS_GEN)) {\n          dir.deleteFile(IndexFileNames.SEGMENTS_GEN);\n        }\n      } catch (Throwable t) {\n        // suppress any errors while deleting this file.\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Writes {@link IndexFileNames#SEGMENTS_GEN} file to the directory, reading\n   * the generation from the given {@code segmentsFile}. If it is {@code null},\n   * this method deletes segments.gen from the directory.\n   */\n  public static void writeSegmentsGen(String segmentsFile, Directory dir) {\n    if (segmentsFile != null) {\n      SegmentInfos.writeSegmentsGen(dir, SegmentInfos.generationFromSegmentsFileName(segmentsFile));\n    } else {\n      try {\n        if (dir.fileExists(IndexFileNames.SEGMENTS_GEN)) {\n          dir.deleteFile(IndexFileNames.SEGMENTS_GEN);\n        }\n      } catch (Throwable t) {\n        // suppress any errors while deleting this file.\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/IndexReplicationHandler#writeSegmentsGen(String,Directory).mjava","pathOld":"lucene/replicator/src/java/org/apache/lucene/replicator/IndexReplicationHandler#writeSegmentsGen(String,Directory).mjava","sourceNew":"  /**\n   * Writes {@link IndexFileNames#SEGMENTS_GEN} file to the directory, reading\n   * the generation from the given {@code segmentsFile}. If it is {@code null},\n   * this method deletes segments.gen from the directory.\n   */\n  public static void writeSegmentsGen(String segmentsFile, Directory dir) {\n    if (segmentsFile != null) {\n      SegmentInfos.writeSegmentsGen(dir, SegmentInfos.generationFromSegmentsFileName(segmentsFile));\n    } else {\n      try {\n        if (dir.fileExists(IndexFileNames.SEGMENTS_GEN)) {\n          dir.deleteFile(IndexFileNames.SEGMENTS_GEN);\n        }\n      } catch (Throwable t) {\n        // suppress any errors while deleting this file.\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Writes {@link IndexFileNames#SEGMENTS_GEN} file to the directory, reading\n   * the generation from the given {@code segmentsFile}. If it is {@code null},\n   * this method deletes segments.gen from the directory.\n   */\n  public static void writeSegmentsGen(String segmentsFile, Directory dir) {\n    if (segmentsFile != null) {\n      SegmentInfos.writeSegmentsGen(dir, SegmentInfos.generationFromSegmentsFileName(segmentsFile));\n    } else {\n      try {\n        if (dir.fileExists(IndexFileNames.SEGMENTS_GEN)) {\n          dir.deleteFile(IndexFileNames.SEGMENTS_GEN);\n        }\n      } catch (Throwable t) {\n        // suppress any errors while deleting this file.\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cd4e13d997cf4fb810398a20a299c2c5a9f6b796","date":1395594336,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/IndexReplicationHandler#writeSegmentsGen(String,Directory).mjava","pathOld":"lucene/replicator/src/java/org/apache/lucene/replicator/IndexReplicationHandler#writeSegmentsGen(String,Directory).mjava","sourceNew":"  /**\n   * Writes {@link IndexFileNames#SEGMENTS_GEN} file to the directory, reading\n   * the generation from the given {@code segmentsFile}. If it is {@code null},\n   * this method deletes segments.gen from the directory.\n   */\n  public static void writeSegmentsGen(String segmentsFile, Directory dir) {\n    if (segmentsFile != null) {\n      SegmentInfos.writeSegmentsGen(dir, SegmentInfos.generationFromSegmentsFileName(segmentsFile));\n    } else {\n      try {\n        dir.deleteFile(IndexFileNames.SEGMENTS_GEN);\n      } catch (Throwable t) {\n        // suppress any errors while deleting this file.\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Writes {@link IndexFileNames#SEGMENTS_GEN} file to the directory, reading\n   * the generation from the given {@code segmentsFile}. If it is {@code null},\n   * this method deletes segments.gen from the directory.\n   */\n  public static void writeSegmentsGen(String segmentsFile, Directory dir) {\n    if (segmentsFile != null) {\n      SegmentInfos.writeSegmentsGen(dir, SegmentInfos.generationFromSegmentsFileName(segmentsFile));\n    } else {\n      try {\n        if (dir.fileExists(IndexFileNames.SEGMENTS_GEN)) {\n          dir.deleteFile(IndexFileNames.SEGMENTS_GEN);\n        }\n      } catch (Throwable t) {\n        // suppress any errors while deleting this file.\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98d2deb8c96c79ebef084a1f8e5a1a6c08608f13","date":1409346855,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/IndexReplicationHandler#writeSegmentsGen(String,Directory).mjava","pathOld":"lucene/replicator/src/java/org/apache/lucene/replicator/IndexReplicationHandler#writeSegmentsGen(String,Directory).mjava","sourceNew":"  /**\n   * Writes {@link IndexFileNames#SEGMENTS_GEN} file to the directory, reading\n   * the generation from the given {@code segmentsFile}. If it is {@code null},\n   * this method deletes segments.gen from the directory.\n   */\n  public static void writeSegmentsGen(String segmentsFile, Directory dir) {\n    if (segmentsFile != null) {\n      SegmentInfos.writeSegmentsGen(dir, SegmentInfos.generationFromSegmentsFileName(segmentsFile));\n    } else {\n      IOUtils.deleteFilesIgnoringExceptions(dir, IndexFileNames.SEGMENTS_GEN);\n    }\n  }\n\n","sourceOld":"  /**\n   * Writes {@link IndexFileNames#SEGMENTS_GEN} file to the directory, reading\n   * the generation from the given {@code segmentsFile}. If it is {@code null},\n   * this method deletes segments.gen from the directory.\n   */\n  public static void writeSegmentsGen(String segmentsFile, Directory dir) {\n    if (segmentsFile != null) {\n      SegmentInfos.writeSegmentsGen(dir, SegmentInfos.generationFromSegmentsFileName(segmentsFile));\n    } else {\n      try {\n        dir.deleteFile(IndexFileNames.SEGMENTS_GEN);\n      } catch (Throwable t) {\n        // suppress any errors while deleting this file.\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46e4a8bdfbafda795ef9c39a2bc2d47095770299","date":1410411846,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/replicator/src/java/org/apache/lucene/replicator/IndexReplicationHandler#writeSegmentsGen(String,Directory).mjava","sourceNew":null,"sourceOld":"  /**\n   * Writes {@link IndexFileNames#SEGMENTS_GEN} file to the directory, reading\n   * the generation from the given {@code segmentsFile}. If it is {@code null},\n   * this method deletes segments.gen from the directory.\n   */\n  public static void writeSegmentsGen(String segmentsFile, Directory dir) {\n    if (segmentsFile != null) {\n      SegmentInfos.writeSegmentsGen(dir, SegmentInfos.generationFromSegmentsFileName(segmentsFile));\n    } else {\n      IOUtils.deleteFilesIgnoringExceptions(dir, IndexFileNames.SEGMENTS_GEN);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"46e4a8bdfbafda795ef9c39a2bc2d47095770299":["98d2deb8c96c79ebef084a1f8e5a1a6c08608f13"],"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd4e13d997cf4fb810398a20a299c2c5a9f6b796":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"98d2deb8c96c79ebef084a1f8e5a1a6c08608f13":["cd4e13d997cf4fb810398a20a299c2c5a9f6b796"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["46e4a8bdfbafda795ef9c39a2bc2d47095770299"]},"commit2Childs":{"46e4a8bdfbafda795ef9c39a2bc2d47095770299":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd4e13d997cf4fb810398a20a299c2c5a9f6b796":["98d2deb8c96c79ebef084a1f8e5a1a6c08608f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"98d2deb8c96c79ebef084a1f8e5a1a6c08608f13":["46e4a8bdfbafda795ef9c39a2bc2d47095770299"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["cd4e13d997cf4fb810398a20a299c2c5a9f6b796"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}