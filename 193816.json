{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#append(BytesRef).mjava","commits":[{"id":"847d1294c8ff2f0172af20892ef98a1c6a952e09","date":1359503775,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#append(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#append(BytesRef).mjava","sourceNew":"  /**\n   * Appends a copy of the given {@link BytesRef} to this {@link BytesRefArray}.\n   * @param bytes the bytes to append\n   * @return the ordinal of the appended bytes\n   */\n  public int append(BytesRef bytes) {\n    if (lastElement >= offsets.length) {\n      int oldLen = offsets.length;\n      offsets = ArrayUtil.grow(offsets, offsets.length + 1);\n      bytesUsed.addAndGet((offsets.length - oldLen)\n          * RamUsageEstimator.NUM_BYTES_INT);\n    }\n    pool.copy(bytes);\n    offsets[lastElement++] = currentOffset;\n    currentOffset += bytes.length;\n    return lastElement;\n  }\n\n","sourceOld":"  /**\n   * Appends a copy of the given {@link BytesRef} to this {@link BytesRefArray}.\n   * @param bytes the bytes to append\n   * @return the ordinal of the appended bytes\n   */\n  public int append(BytesRef bytes) {\n    if (lastElement >= offsets.length) {\n      int oldLen = offsets.length;\n      offsets = ArrayUtil.grow(offsets, offsets.length + 1);\n      bytesUsed.addAndGet((offsets.length - oldLen)\n          * RamUsageEstimator.NUM_BYTES_INT);\n    }\n    pool.copy(bytes);\n    offsets[lastElement++] = currentOffset;\n    currentOffset += bytes.length;\n    return lastElement;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c447e0427ce53ca53d708ce8b64eaf8cfd372591","date":1359552077,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#append(BytesRef).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#append(BytesRef).mjava","sourceNew":"  /**\n   * Appends a copy of the given {@link BytesRef} to this {@link BytesRefArray}.\n   * @param bytes the bytes to append\n   * @return the ordinal of the appended bytes\n   */\n  public int append(BytesRef bytes) {\n    if (lastElement >= offsets.length) {\n      int oldLen = offsets.length;\n      offsets = ArrayUtil.grow(offsets, offsets.length + 1);\n      bytesUsed.addAndGet((offsets.length - oldLen)\n          * RamUsageEstimator.NUM_BYTES_INT);\n    }\n    pool.append(bytes);\n    offsets[lastElement++] = currentOffset;\n    currentOffset += bytes.length;\n    return lastElement;\n  }\n\n","sourceOld":"  /**\n   * Appends a copy of the given {@link BytesRef} to this {@link BytesRefArray}.\n   * @param bytes the bytes to append\n   * @return the ordinal of the appended bytes\n   */\n  public int append(BytesRef bytes) {\n    if (lastElement >= offsets.length) {\n      int oldLen = offsets.length;\n      offsets = ArrayUtil.grow(offsets, offsets.length + 1);\n      bytesUsed.addAndGet((offsets.length - oldLen)\n          * RamUsageEstimator.NUM_BYTES_INT);\n    }\n    pool.copy(bytes);\n    offsets[lastElement++] = currentOffset;\n    currentOffset += bytes.length;\n    return lastElement;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#append(BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Appends a copy of the given {@link BytesRef} to this {@link BytesRefArray}.\n   * @param bytes the bytes to append\n   * @return the ordinal of the appended bytes\n   */\n  public int append(BytesRef bytes) {\n    if (lastElement >= offsets.length) {\n      int oldLen = offsets.length;\n      offsets = ArrayUtil.grow(offsets, offsets.length + 1);\n      bytesUsed.addAndGet((offsets.length - oldLen)\n          * RamUsageEstimator.NUM_BYTES_INT);\n    }\n    pool.append(bytes);\n    offsets[lastElement++] = currentOffset;\n    currentOffset += bytes.length;\n    return lastElement;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a4e3a7c47e11ff0c156c646c37d20af7249370d2","date":1363813308,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#append(BytesRef).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#append(BytesRef).mjava","sourceNew":"  /**\n   * Appends a copy of the given {@link BytesRef} to this {@link BytesRefArray}.\n   * @param bytes the bytes to append\n   * @return the index of the appended bytes\n   */\n  public int append(BytesRef bytes) {\n    if (lastElement >= offsets.length) {\n      int oldLen = offsets.length;\n      offsets = ArrayUtil.grow(offsets, offsets.length + 1);\n      bytesUsed.addAndGet((offsets.length - oldLen)\n          * RamUsageEstimator.NUM_BYTES_INT);\n    }\n    pool.append(bytes);\n    offsets[lastElement++] = currentOffset;\n    currentOffset += bytes.length;\n    return lastElement-1;\n  }\n\n","sourceOld":"  /**\n   * Appends a copy of the given {@link BytesRef} to this {@link BytesRefArray}.\n   * @param bytes the bytes to append\n   * @return the ordinal of the appended bytes\n   */\n  public int append(BytesRef bytes) {\n    if (lastElement >= offsets.length) {\n      int oldLen = offsets.length;\n      offsets = ArrayUtil.grow(offsets, offsets.length + 1);\n      bytesUsed.addAndGet((offsets.length - oldLen)\n          * RamUsageEstimator.NUM_BYTES_INT);\n    }\n    pool.append(bytes);\n    offsets[lastElement++] = currentOffset;\n    currentOffset += bytes.length;\n    return lastElement;\n  }\n\n","bugFix":["dc3c850c5222a1ce7d619563f67bf047a11b32b6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36f5a8c57e16c0f801006a52f87c75378427852e","date":1393256707,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#append(BytesRef).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#append(BytesRef).mjava","sourceNew":"  /**\n   * Appends a copy of the given {@link BytesRef} to this {@link BytesRefArray}.\n   * @param bytes the bytes to append\n   * @return the index of the appended bytes\n   */\n  public int append(BytesRef bytes) {\n    if (lastElement >= offsets.length) {\n      int oldLen = offsets.length;\n      offsets = ArrayUtil.grow(offsets, offsets.length + 1);\n      bytesUsed.addAndGet((offsets.length - oldLen)\n          * RamUsageEstimator.NUM_BYTES_INT);\n    }\n    pool.append(bytes);\n    offsets[lastElement++] = currentOffset;\n    currentOffset += bytes.length;\n    return lastElement-1;\n  }\n\n","sourceOld":"  /**\n   * Appends a copy of the given {@link BytesRef} to this {@link BytesRefArray}.\n   * @param bytes the bytes to append\n   * @return the index of the appended bytes\n   */\n  public int append(BytesRef bytes) {\n    if (lastElement >= offsets.length) {\n      int oldLen = offsets.length;\n      offsets = ArrayUtil.grow(offsets, offsets.length + 1);\n      bytesUsed.addAndGet((offsets.length - oldLen)\n          * RamUsageEstimator.NUM_BYTES_INT);\n    }\n    pool.append(bytes);\n    offsets[lastElement++] = currentOffset;\n    currentOffset += bytes.length;\n    return lastElement-1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba791bce8103c79e38f957e9c5a53a75871bd918","date":1393539206,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BytesRefArray#append(BytesRef).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/BytesRefArray#append(BytesRef).mjava","sourceNew":"  /**\n   * Appends a copy of the given {@link BytesRef} to this {@link BytesRefArray}.\n   * @param bytes the bytes to append\n   * @return the index of the appended bytes\n   */\n  public int append(BytesRef bytes) {\n    if (lastElement >= offsets.length) {\n      int oldLen = offsets.length;\n      offsets = ArrayUtil.grow(offsets, offsets.length + 1);\n      bytesUsed.addAndGet((offsets.length - oldLen)\n          * RamUsageEstimator.NUM_BYTES_INT);\n    }\n    pool.append(bytes);\n    offsets[lastElement++] = currentOffset;\n    currentOffset += bytes.length;\n    return lastElement-1;\n  }\n\n","sourceOld":"  /**\n   * Appends a copy of the given {@link BytesRef} to this {@link BytesRefArray}.\n   * @param bytes the bytes to append\n   * @return the index of the appended bytes\n   */\n  public int append(BytesRef bytes) {\n    if (lastElement >= offsets.length) {\n      int oldLen = offsets.length;\n      offsets = ArrayUtil.grow(offsets, offsets.length + 1);\n      bytesUsed.addAndGet((offsets.length - oldLen)\n          * RamUsageEstimator.NUM_BYTES_INT);\n    }\n    pool.append(bytes);\n    offsets[lastElement++] = currentOffset;\n    currentOffset += bytes.length;\n    return lastElement-1;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c447e0427ce53ca53d708ce8b64eaf8cfd372591":["847d1294c8ff2f0172af20892ef98a1c6a952e09"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c447e0427ce53ca53d708ce8b64eaf8cfd372591"],"ba791bce8103c79e38f957e9c5a53a75871bd918":["a4e3a7c47e11ff0c156c646c37d20af7249370d2","36f5a8c57e16c0f801006a52f87c75378427852e"],"a4e3a7c47e11ff0c156c646c37d20af7249370d2":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"36f5a8c57e16c0f801006a52f87c75378427852e":["a4e3a7c47e11ff0c156c646c37d20af7249370d2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"847d1294c8ff2f0172af20892ef98a1c6a952e09":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba791bce8103c79e38f957e9c5a53a75871bd918"]},"commit2Childs":{"c447e0427ce53ca53d708ce8b64eaf8cfd372591":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a4e3a7c47e11ff0c156c646c37d20af7249370d2"],"ba791bce8103c79e38f957e9c5a53a75871bd918":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a4e3a7c47e11ff0c156c646c37d20af7249370d2":["ba791bce8103c79e38f957e9c5a53a75871bd918","36f5a8c57e16c0f801006a52f87c75378427852e"],"36f5a8c57e16c0f801006a52f87c75378427852e":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","847d1294c8ff2f0172af20892ef98a1c6a952e09"],"847d1294c8ff2f0172af20892ef98a1c6a952e09":["c447e0427ce53ca53d708ce8b64eaf8cfd372591"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}