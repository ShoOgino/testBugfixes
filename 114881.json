{"path":"lucene/src/java/org/apache/lucene/util/MultiBits#getMatchingSub(ReaderUtil.Slice).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/MultiBits#getMatchingSub(ReaderUtil.Slice).mjava","pathOld":"/dev/null","sourceNew":"  public SubResult getMatchingSub(ReaderUtil.Slice slice) {\n    int reader = ReaderUtil.subIndex(slice.start, starts);\n    assert reader != -1;\n    assert reader < subs.length: \"slice=\" + slice + \" starts[-1]=\" + starts[starts.length-1];\n    if (starts[reader] == slice.start && starts[1+reader] == slice.start+slice.length) {\n      subResult.matches = true;\n      subResult.result = subs[reader];\n    } else {\n      subResult.matches = false;\n    }\n    return subResult;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ec5d4cc15bae497db86ea4e1f7ea8ee7c1b9e5b","date":1275753210,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/MultiBits#getMatchingSub(ReaderUtil.Slice).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/MultiBits#getMatchingSub(ReaderUtil.Slice).mjava","sourceNew":"  public SubResult getMatchingSub(ReaderUtil.Slice slice) {\n    int reader = ReaderUtil.subIndex(slice.start, starts);\n    assert reader != -1;\n    assert reader < subs.length: \"slice=\" + slice + \" starts[-1]=\" + starts[starts.length-1];\n    final SubResult subResult = new SubResult();\n    if (starts[reader] == slice.start && starts[1+reader] == slice.start+slice.length) {\n      subResult.matches = true;\n      subResult.result = subs[reader];\n    } else {\n      subResult.matches = false;\n    }\n    return subResult;\n  }\n\n","sourceOld":"  public SubResult getMatchingSub(ReaderUtil.Slice slice) {\n    int reader = ReaderUtil.subIndex(slice.start, starts);\n    assert reader != -1;\n    assert reader < subs.length: \"slice=\" + slice + \" starts[-1]=\" + starts[starts.length-1];\n    if (starts[reader] == slice.start && starts[1+reader] == slice.start+slice.length) {\n      subResult.matches = true;\n      subResult.result = subs[reader];\n    } else {\n      subResult.matches = false;\n    }\n    return subResult;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/MultiBits#getMatchingSub(ReaderUtil.Slice).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/MultiBits#getMatchingSub(ReaderUtil.Slice).mjava","sourceNew":"  public SubResult getMatchingSub(ReaderUtil.Slice slice) {\n    int reader = ReaderUtil.subIndex(slice.start, starts);\n    assert reader != -1;\n    assert reader < subs.length: \"slice=\" + slice + \" starts[-1]=\" + starts[starts.length-1];\n    final SubResult subResult = new SubResult();\n    if (starts[reader] == slice.start && starts[1+reader] == slice.start+slice.length) {\n      subResult.matches = true;\n      subResult.result = subs[reader];\n    } else {\n      subResult.matches = false;\n    }\n    return subResult;\n  }\n\n","sourceOld":"  public SubResult getMatchingSub(ReaderUtil.Slice slice) {\n    int reader = ReaderUtil.subIndex(slice.start, starts);\n    assert reader != -1;\n    assert reader < subs.length: \"slice=\" + slice + \" starts[-1]=\" + starts[starts.length-1];\n    final SubResult subResult = new SubResult();\n    if (starts[reader] == slice.start && starts[1+reader] == slice.start+slice.length) {\n      subResult.matches = true;\n      subResult.result = subs[reader];\n    } else {\n      subResult.matches = false;\n    }\n    return subResult;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["4ec5d4cc15bae497db86ea4e1f7ea8ee7c1b9e5b"],"4ec5d4cc15bae497db86ea4e1f7ea8ee7c1b9e5b":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4ec5d4cc15bae497db86ea4e1f7ea8ee7c1b9e5b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["4ec5d4cc15bae497db86ea4e1f7ea8ee7c1b9e5b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}