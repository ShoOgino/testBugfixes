{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/SrndBooleanQuery#addQueriesToBoolean(BooleanQuery,List[Query],BooleanClause.Occur).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/SrndBooleanQuery#addQueriesToBoolean(BooleanQuery,List[Query],BooleanClause.Occur).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/surround/query/SrndBooleanQuery#addQueriesToBoolean(BooleanQuery,List[Query],BooleanClause.Occur).mjava","sourceNew":"  public static void addQueriesToBoolean(\n          BooleanQuery bq,\n          List<Query> queries,\n          BooleanClause.Occur occur) {\n    for (int i = 0; i < queries.size(); i++) {\n      bq.add( queries.get(i), occur);\n    }\n  }\n\n","sourceOld":"  public static void addQueriesToBoolean(\n          BooleanQuery bq,\n          List<Query> queries,\n          BooleanClause.Occur occur) {\n    for (int i = 0; i < queries.size(); i++) {\n      bq.add( queries.get(i), occur);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/SrndBooleanQuery#addQueriesToBoolean(BooleanQuery.Builder,List[Query],BooleanClause.Occur).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/surround/query/SrndBooleanQuery#addQueriesToBoolean(BooleanQuery,List[Query],BooleanClause.Occur).mjava","sourceNew":"  public static void addQueriesToBoolean(\n          BooleanQuery.Builder bq,\n          List<Query> queries,\n          BooleanClause.Occur occur) {\n    for (int i = 0; i < queries.size(); i++) {\n      bq.add( queries.get(i), occur);\n    }\n  }\n\n","sourceOld":"  public static void addQueriesToBoolean(\n          BooleanQuery bq,\n          List<Query> queries,\n          BooleanClause.Occur occur) {\n    for (int i = 0; i < queries.size(); i++) {\n      bq.add( queries.get(i), occur);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}