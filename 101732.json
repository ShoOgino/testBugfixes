{"path":"backwards/src/java/org/apache/lucene/index/CompoundFileWriter#addFile(String).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/index/CompoundFileWriter#addFile(String).mjava","pathOld":"/dev/null","sourceNew":"    /** Add a source stream. <code>file</code> is the string by which the \n     *  sub-stream will be known in the compound stream.\n     * \n     *  @throws IllegalStateException if this writer is closed\n     *  @throws NullPointerException if <code>file</code> is null\n     *  @throws IllegalArgumentException if a file with the same name\n     *   has been added already\n     */\n    public void addFile(String file) {\n        if (merged)\n            throw new IllegalStateException(\n                \"Can't add extensions after merge has been called\");\n\n        if (file == null)\n            throw new NullPointerException(\n                \"file cannot be null\");\n\n        if (! ids.add(file))\n            throw new IllegalArgumentException(\n                \"File \" + file + \" already added\");\n\n        FileEntry entry = new FileEntry();\n        entry.file = file;\n        entries.add(entry);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/CompoundFileWriter#addFile(String).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/CompoundFileWriter#addFile(String).mjava","sourceNew":"    /** Add a source stream. <code>file</code> is the string by which the \n     *  sub-stream will be known in the compound stream.\n     * \n     *  @throws IllegalStateException if this writer is closed\n     *  @throws NullPointerException if <code>file</code> is null\n     *  @throws IllegalArgumentException if a file with the same name\n     *   has been added already\n     */\n    public void addFile(String file) {\n        if (merged)\n            throw new IllegalStateException(\n                \"Can't add extensions after merge has been called\");\n\n        if (file == null)\n            throw new NullPointerException(\n                \"file cannot be null\");\n\n        if (! ids.add(file))\n            throw new IllegalArgumentException(\n                \"File \" + file + \" already added\");\n\n        FileEntry entry = new FileEntry();\n        entry.file = file;\n        entries.add(entry);\n    }\n\n","sourceOld":"    /** Add a source stream. <code>file</code> is the string by which the \n     *  sub-stream will be known in the compound stream.\n     * \n     *  @throws IllegalStateException if this writer is closed\n     *  @throws NullPointerException if <code>file</code> is null\n     *  @throws IllegalArgumentException if a file with the same name\n     *   has been added already\n     */\n    public void addFile(String file) {\n        if (merged)\n            throw new IllegalStateException(\n                \"Can't add extensions after merge has been called\");\n\n        if (file == null)\n            throw new NullPointerException(\n                \"file cannot be null\");\n\n        if (! ids.add(file))\n            throw new IllegalArgumentException(\n                \"File \" + file + \" already added\");\n\n        FileEntry entry = new FileEntry();\n        entry.file = file;\n        entries.add(entry);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}