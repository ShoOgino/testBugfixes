{"path":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#Solr11035BandAid(SolrClient,String,String,long,String,String).mjava","commits":[{"id":"9d1b2d0c6ded13ab96ad6447c1a48eb58f8a377c","date":1557431147,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#Solr11035BandAid(SolrClient,String,String,long,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#Solr11035BandAid(SolrClient,String,String,long,String).mjava","sourceNew":"  /**\n   * See SOLR-11035. There are various \"impossible\" failures, I can update some documents successfully then not find\n   * them.\n   * <p>\n   * At least one I've seen (Erick Erickson) cannot be cured by waiting on the client side.\n   * <p>\n   * This is a horrible hack, but until we fix the underlying cause using it will reduce the noise from tests. Once the\n   * root cause of SOLR-11035 is found, this should be removed.\n   * <p>\n   * I don't mind the extra commits (why do two?) as this should be pretty rare.\n   *\n   * This test fails 10% - 15% of the time without using this method, especially if you @Ignore all the other\n   * tests in that suite.\n   *\n   * ant test  -Dtestcase=DocValuesNotIndexedTest -Dtests.method=testGroupingDVOnly\n   * -Dtests.seed=54688F608E614440 -Dtests.slow=true -Dtests.locale=nl-BE\n   * -Dtests.timezone=America/North_Dakota/Beulah -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n   *\n   * This only really works for adding documents. The test at the top of the method will succeed for an update of\n   * an existing doc and nothing will be done. If that becomes necessary we should probably create a new method\n   * that takes a docID, field and value.\n   *\n   * @param client - the client that we'll use to send the request\n   * @param collection - the target collection we'll add and remove the doc from\n   * @param idField - the uniqueKey for this collection. This MUST be a string\n   * @param expectedDocCount - numFound for the query\n   * @param query - The Solr query to check for expectedDocCount.\n   * @param tag - additional information to display on a failure. Often class.method is useful.\n   */\n\n  public static void Solr11035BandAid(SolrClient client, String collection, String idField,\n                                      long expectedDocCount, String query,\n                                      String tag) throws IOException, SolrServerException {\n\n    Solr11035BandAid(client, collection, idField, expectedDocCount, query, tag, false);\n  }\n\n","sourceOld":"  /**\n   * See SOLR-11035. There are various \"impossible\" failures, I can update some documents successfully then not find\n   * them.\n   * <p>\n   * At least one I've seen (Erick Erickson) cannot be cured by waiting on the client side.\n   * <p>\n   * This is a horrible hack, but until we fix the underlying cause using it will reduce the noise from tests. Once the\n   * root cause of SOLR-11035 is found, this should be removed.\n   * <p>\n   * I don't mind the extra commits (why do two?) as this should be pretty rare.\n   *\n   * This test fails 10% - 15% of the time without using this method, especially if you @Ignore all the other\n   * tests in that suite.\n   *\n   * ant test  -Dtestcase=DocValuesNotIndexedTest -Dtests.method=testGroupingDVOnly\n   * -Dtests.seed=54688F608E614440 -Dtests.slow=true -Dtests.locale=nl-BE\n   * -Dtests.timezone=America/North_Dakota/Beulah -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n   *\n   * This only really works for adding documents. The test at the top of the method will succeed for an update of\n   * an existing doc and nothing will be done. If that becomes necessary we should probably create a new method\n   * that takes a docID, field and value.\n   *\n   * @param client - the client that we'll use to send the request\n   * @param collection - the target collection we'll add and remove the doc from\n   * @param idField - the uniqueKey for this collection. This MUST be a string\n   * @param expectedDocCount - numFound for the query\n   * @param query - The Solr query to check for expectedDocCount.\n   */\n\n  public static void Solr11035BandAid(SolrClient client, String collection, String idField,\n                                      long expectedDocCount, String query) throws IOException, SolrServerException {\n    final SolrQuery solrQuery = new SolrQuery(query);\n    QueryResponse rsp = client.query(collection, solrQuery);\n    long found = rsp.getResults().getNumFound();\n\n    if (rsp.getResults().getNumFound() == expectedDocCount) {\n      return;\n    }\n\n    // OK, our counts differ. Insert a document _guaranteed_ to be unique, then delete it so whatever is counting\n    // anything has the correct counts.\n    log.warn(\"Solr11035BandAid attempting repair, found is {}, expected is {}\", found, expectedDocCount);\n\n    String bogusID = java.util.UUID.randomUUID().toString();\n    SolrInputDocument bogus = new SolrInputDocument();\n    bogus.addField(idField, bogusID);\n\n    // Add the bogus doc\n    new UpdateRequest().add(bogus).commit(client, collection);\n\n    // Then remove it, we should be OK now since new searchers have been opened.\n    new UpdateRequest().deleteById(bogusID).commit(client, collection);\n    // Let's check again to see if we succeeded\n    rsp = client.query(collection, solrQuery);\n    found = rsp.getResults().getNumFound();\n\n    if (found != expectedDocCount) {\n      // It's good to see the total response. NOTE: some larger responses are over 10240,\n      // so change the pattern in log4j2.xml if you need to see the whole thing.\n      log.error(\"Dumping response\" + rsp.toString());\n      assertEquals(\"Solr11035BandAid failed, counts differ after updates:\", found, expectedDocCount);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3821108e77348b1cdb6baf5422727f926ba7af61","date":1582300636,"type":4,"author":"Erick Erickson","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#Solr11035BandAid(SolrClient,String,String,long,String,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * See SOLR-11035. There are various \"impossible\" failures, I can update some documents successfully then not find\n   * them.\n   * <p>\n   * At least one I've seen (Erick Erickson) cannot be cured by waiting on the client side.\n   * <p>\n   * This is a horrible hack, but until we fix the underlying cause using it will reduce the noise from tests. Once the\n   * root cause of SOLR-11035 is found, this should be removed.\n   * <p>\n   * I don't mind the extra commits (why do two?) as this should be pretty rare.\n   *\n   * This test fails 10% - 15% of the time without using this method, especially if you @Ignore all the other\n   * tests in that suite.\n   *\n   * ant test  -Dtestcase=DocValuesNotIndexedTest -Dtests.method=testGroupingDVOnly\n   * -Dtests.seed=54688F608E614440 -Dtests.slow=true -Dtests.locale=nl-BE\n   * -Dtests.timezone=America/North_Dakota/Beulah -Dtests.asserts=true -Dtests.file.encoding=ISO-8859-1\n   *\n   * This only really works for adding documents. The test at the top of the method will succeed for an update of\n   * an existing doc and nothing will be done. If that becomes necessary we should probably create a new method\n   * that takes a docID, field and value.\n   *\n   * @param client - the client that we'll use to send the request\n   * @param collection - the target collection we'll add and remove the doc from\n   * @param idField - the uniqueKey for this collection. This MUST be a string\n   * @param expectedDocCount - numFound for the query\n   * @param query - The Solr query to check for expectedDocCount.\n   * @param tag - additional information to display on a failure. Often class.method is useful.\n   */\n\n  public static void Solr11035BandAid(SolrClient client, String collection, String idField,\n                                      long expectedDocCount, String query,\n                                      String tag) throws IOException, SolrServerException {\n\n    Solr11035BandAid(client, collection, idField, expectedDocCount, query, tag, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3821108e77348b1cdb6baf5422727f926ba7af61":["9d1b2d0c6ded13ab96ad6447c1a48eb58f8a377c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d1b2d0c6ded13ab96ad6447c1a48eb58f8a377c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3821108e77348b1cdb6baf5422727f926ba7af61"]},"commit2Childs":{"3821108e77348b1cdb6baf5422727f926ba7af61":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9d1b2d0c6ded13ab96ad6447c1a48eb58f8a377c"],"9d1b2d0c6ded13ab96ad6447c1a48eb58f8a377c":["3821108e77348b1cdb6baf5422727f926ba7af61"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}