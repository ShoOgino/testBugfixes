{"path":"modules/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SrndQueryTest#testHashEquals().mjava","commits":[{"id":"cb278067c961537864615b4862771ebc54dae426","date":1315400669,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SrndQueryTest#testHashEquals().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testHashEquals() throws Exception {\n    //grab some sample queries from Test02Boolean and Test03Distance and\n    //check there hashes and equals\n    checkEqualParsings(\"word1 w word2\", \" word1  w  word2 \");\n    checkEqualParsings(\"2N(w1,w2,w3)\", \" 2N(w1, w2 , w3)\");\n    checkEqualParsings(\"abc?\", \" abc? \");\n    checkEqualParsings(\"w*rd?\", \" w*rd?\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SrndQueryTest#testHashEquals().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SrndQueryTest#testHashEquals().mjava","sourceNew":"  @Test\n  public void testHashEquals() throws Exception {\n    //grab some sample queries from Test02Boolean and Test03Distance and\n    //check there hashes and equals\n    checkEqualParsings(\"word1 w word2\", \" word1  w  word2 \");\n    checkEqualParsings(\"2N(w1,w2,w3)\", \" 2N(w1, w2 , w3)\");\n    checkEqualParsings(\"abc?\", \" abc? \");\n    checkEqualParsings(\"w*rd?\", \" w*rd?\");\n  }\n\n","sourceOld":"  @Test\n  public void testHashEquals() throws Exception {\n    //grab some sample queries from Test02Boolean and Test03Distance and\n    //check there hashes and equals\n    checkEqualParsings(\"word1 w word2\", \" word1  w  word2 \");\n    checkEqualParsings(\"2N(w1,w2,w3)\", \" 2N(w1, w2 , w3)\");\n    checkEqualParsings(\"abc?\", \" abc? \");\n    checkEqualParsings(\"w*rd?\", \" w*rd?\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cb278067c961537864615b4862771ebc54dae426"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cb278067c961537864615b4862771ebc54dae426":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cb278067c961537864615b4862771ebc54dae426"],"cb278067c961537864615b4862771ebc54dae426":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}