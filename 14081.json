{"path":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getOtherUserFolders().mjava","commits":[{"id":"36113efe922ae370819b20fba837a1a37d3dd2d8","date":1404234826,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getOtherUserFolders().mjava","pathOld":"/dev/null","sourceNew":"    private void getOtherUserFolders() {\n      try {\n        Folder[] ufldrs = mailbox.getUserNamespaces(null);\n        if (ufldrs != null) {\n          LOG.info(\"Found \" + ufldrs.length + \" user namespace folders\");\n          for (Folder ufldr : ufldrs)\n            folders.add(ufldr);\n        }\n      } catch (MessagingException me) {\n        LOG.warn(\"Messaging exception retrieving user namespaces: \"\n            + me.getMessage());\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0bac5e4f5082317c9a942b1deeeb22d6700ecff7","date":1404338458,"type":4,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getOtherUserFolders().mjava","sourceNew":null,"sourceOld":"    private void getOtherUserFolders() {\n      try {\n        Folder[] ufldrs = mailbox.getUserNamespaces(null);\n        if (ufldrs != null) {\n          LOG.info(\"Found \" + ufldrs.length + \" user namespace folders\");\n          for (Folder ufldr : ufldrs)\n            folders.add(ufldr);\n        }\n      } catch (MessagingException me) {\n        LOG.warn(\"Messaging exception retrieving user namespaces: \"\n            + me.getMessage());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0cd303657ee7726e12c45f9fd39b0285acf10c07","date":1405460668,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getOtherUserFolders().mjava","pathOld":"/dev/null","sourceNew":"    private void getOtherUserFolders() {\n      try {\n        Folder[] ufldrs = mailbox.getUserNamespaces(null);\n        if (ufldrs != null) {\n          LOG.info(\"Found \" + ufldrs.length + \" user namespace folders\");\n          for (Folder ufldr : ufldrs)\n            folders.add(ufldr);\n        }\n      } catch (MessagingException me) {\n        LOG.warn(\"Messaging exception retrieving user namespaces: \"\n            + me.getMessage());\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getOtherUserFolders().mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getOtherUserFolders().mjava","sourceNew":"    private void getOtherUserFolders() {\n      try {\n        Folder[] ufldrs = mailbox.getUserNamespaces(null);\n        if (ufldrs != null) {\n          log.info(\"Found \" + ufldrs.length + \" user namespace folders\");\n          for (Folder ufldr : ufldrs)\n            folders.add(ufldr);\n        }\n      } catch (MessagingException me) {\n        log.warn(\"Messaging exception retrieving user namespaces: \"\n            + me.getMessage());\n      }\n    }\n\n","sourceOld":"    private void getOtherUserFolders() {\n      try {\n        Folder[] ufldrs = mailbox.getUserNamespaces(null);\n        if (ufldrs != null) {\n          LOG.info(\"Found \" + ufldrs.length + \" user namespace folders\");\n          for (Folder ufldr : ufldrs)\n            folders.add(ufldr);\n        }\n      } catch (MessagingException me) {\n        LOG.warn(\"Messaging exception retrieving user namespaces: \"\n            + me.getMessage());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getOtherUserFolders().mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getOtherUserFolders().mjava","sourceNew":"    private void getOtherUserFolders() {\n      try {\n        Folder[] ufldrs = mailbox.getUserNamespaces(null);\n        if (ufldrs != null) {\n          log.info(\"Found {} user namespace folders\", ufldrs.length);\n          for (Folder ufldr : ufldrs)\n            folders.add(ufldr);\n        }\n      } catch (MessagingException me) {\n        log.warn(\"Messaging exception retrieving user namespaces: {}\"\n            , me.getMessage());\n      }\n    }\n\n","sourceOld":"    private void getOtherUserFolders() {\n      try {\n        Folder[] ufldrs = mailbox.getUserNamespaces(null);\n        if (ufldrs != null) {\n          log.info(\"Found \" + ufldrs.length + \" user namespace folders\");\n          for (Folder ufldr : ufldrs)\n            folders.add(ufldr);\n        }\n      } catch (MessagingException me) {\n        log.warn(\"Messaging exception retrieving user namespaces: \"\n            + me.getMessage());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57c238f5fb83803b49b37b3a1a12224a64d47542","date":1593655679,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getOtherUserFolders().mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getOtherUserFolders().mjava","sourceNew":"    private void getOtherUserFolders() {\n      try {\n        Folder[] ufldrs = mailbox.getUserNamespaces(null);\n        if (ufldrs != null) {\n          log.info(\"Found {} user namespace folders\", ufldrs.length);\n          for (Folder ufldr : ufldrs)\n            folders.add(ufldr);\n        }\n      } catch (MessagingException me) {\n        log.warn(\"Messaging exception retrieving user namespaces: \", me);\n      }\n    }\n\n","sourceOld":"    private void getOtherUserFolders() {\n      try {\n        Folder[] ufldrs = mailbox.getUserNamespaces(null);\n        if (ufldrs != null) {\n          log.info(\"Found {} user namespace folders\", ufldrs.length);\n          for (Folder ufldr : ufldrs)\n            folders.add(ufldr);\n        }\n      } catch (MessagingException me) {\n        log.warn(\"Messaging exception retrieving user namespaces: {}\"\n            , me.getMessage());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getOtherUserFolders().mjava","sourceNew":null,"sourceOld":"    private void getOtherUserFolders() {\n      try {\n        Folder[] ufldrs = mailbox.getUserNamespaces(null);\n        if (ufldrs != null) {\n          log.info(\"Found {} user namespace folders\", ufldrs.length);\n          for (Folder ufldr : ufldrs)\n            folders.add(ufldr);\n        }\n      } catch (MessagingException me) {\n        log.warn(\"Messaging exception retrieving user namespaces: \", me);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["57c238f5fb83803b49b37b3a1a12224a64d47542"],"36113efe922ae370819b20fba837a1a37d3dd2d8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0bac5e4f5082317c9a942b1deeeb22d6700ecff7":["36113efe922ae370819b20fba837a1a37d3dd2d8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57c238f5fb83803b49b37b3a1a12224a64d47542":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"0cd303657ee7726e12c45f9fd39b0285acf10c07":["0bac5e4f5082317c9a942b1deeeb22d6700ecff7"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["0cd303657ee7726e12c45f9fd39b0285acf10c07"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"36113efe922ae370819b20fba837a1a37d3dd2d8":["0bac5e4f5082317c9a942b1deeeb22d6700ecff7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36113efe922ae370819b20fba837a1a37d3dd2d8"],"0bac5e4f5082317c9a942b1deeeb22d6700ecff7":["0cd303657ee7726e12c45f9fd39b0285acf10c07"],"57c238f5fb83803b49b37b3a1a12224a64d47542":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"0cd303657ee7726e12c45f9fd39b0285acf10c07":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["57c238f5fb83803b49b37b3a1a12224a64d47542"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}