{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","commits":[{"id":"33ba398fa7984fdcb45fd76b87504d5adf7ca5e3","date":1373907993,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","pathOld":"/dev/null","sourceNew":"  public void testDoubleClose() throws Exception {\n    TermFreqPayload keys[] = new TermFreqPayload[] {\n      new TermFreqPayload(\"a penny saved is a penny earned\", 10, new BytesRef(\"foobaz\")),\n    };\n\n    File tempDir = _TestUtil.getTempDir(\"AnalyzingInfixSuggesterTest\");\n\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(TEST_VERSION_CURRENT, tempDir, a, a, 3);\n    suggester.build(new TermFreqPayloadArrayIterator(keys));\n    suggester.close();\n    suggester.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4637747f71df783fc2014ef1f1e0418466e3bed6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b3aad8246db872dc16fbe6109f893457496b0240","date":1373920172,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","sourceNew":"  public void testDoubleClose() throws Exception {\n    TermFreqPayload keys[] = new TermFreqPayload[] {\n      new TermFreqPayload(\"a penny saved is a penny earned\", 10, new BytesRef(\"foobaz\")),\n    };\n\n    File tempDir = _TestUtil.getTempDir(\"AnalyzingInfixSuggesterTest\");\n\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(TEST_VERSION_CURRENT, tempDir, a, a, 3) {\n        @Override\n        protected Directory getDirectory(File path) {\n          return newDirectory();\n        }\n      };\n    suggester.build(new TermFreqPayloadArrayIterator(keys));\n    suggester.close();\n    suggester.close();\n  }\n\n","sourceOld":"  public void testDoubleClose() throws Exception {\n    TermFreqPayload keys[] = new TermFreqPayload[] {\n      new TermFreqPayload(\"a penny saved is a penny earned\", 10, new BytesRef(\"foobaz\")),\n    };\n\n    File tempDir = _TestUtil.getTempDir(\"AnalyzingInfixSuggesterTest\");\n\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(TEST_VERSION_CURRENT, tempDir, a, a, 3);\n    suggester.build(new TermFreqPayloadArrayIterator(keys));\n    suggester.close();\n    suggester.close();\n  }\n\n","bugFix":null,"bugIntro":["4637747f71df783fc2014ef1f1e0418466e3bed6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","pathOld":"/dev/null","sourceNew":"  public void testDoubleClose() throws Exception {\n    TermFreqPayload keys[] = new TermFreqPayload[] {\n      new TermFreqPayload(\"a penny saved is a penny earned\", 10, new BytesRef(\"foobaz\")),\n    };\n\n    File tempDir = _TestUtil.getTempDir(\"AnalyzingInfixSuggesterTest\");\n\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(TEST_VERSION_CURRENT, tempDir, a, a, 3) {\n        @Override\n        protected Directory getDirectory(File path) {\n          return newDirectory();\n        }\n      };\n    suggester.build(new TermFreqPayloadArrayIterator(keys));\n    suggester.close();\n    suggester.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41aee74b5f91a096e3fd950f4a336bc763f0e7a7","date":1381772070,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","sourceNew":"  public void testDoubleClose() throws Exception {\n    Input keys[] = new Input[] {\n      new Input(\"a penny saved is a penny earned\", 10, new BytesRef(\"foobaz\")),\n    };\n\n    File tempDir = _TestUtil.getTempDir(\"AnalyzingInfixSuggesterTest\");\n\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(TEST_VERSION_CURRENT, tempDir, a, a, 3) {\n        @Override\n        protected Directory getDirectory(File path) {\n          return newDirectory();\n        }\n      };\n    suggester.build(new InputArrayIterator(keys));\n    suggester.close();\n    suggester.close();\n  }\n\n","sourceOld":"  public void testDoubleClose() throws Exception {\n    TermFreqPayload keys[] = new TermFreqPayload[] {\n      new TermFreqPayload(\"a penny saved is a penny earned\", 10, new BytesRef(\"foobaz\")),\n    };\n\n    File tempDir = _TestUtil.getTempDir(\"AnalyzingInfixSuggesterTest\");\n\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(TEST_VERSION_CURRENT, tempDir, a, a, 3) {\n        @Override\n        protected Directory getDirectory(File path) {\n          return newDirectory();\n        }\n      };\n    suggester.build(new TermFreqPayloadArrayIterator(keys));\n    suggester.close();\n    suggester.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","sourceNew":"  public void testDoubleClose() throws Exception {\n    Input keys[] = new Input[] {\n      new Input(\"a penny saved is a penny earned\", 10, new BytesRef(\"foobaz\")),\n    };\n\n    File tempDir = TestUtil.getTempDir(\"AnalyzingInfixSuggesterTest\");\n\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(TEST_VERSION_CURRENT, tempDir, a, a, 3) {\n        @Override\n        protected Directory getDirectory(File path) {\n          return newDirectory();\n        }\n      };\n    suggester.build(new InputArrayIterator(keys));\n    suggester.close();\n    suggester.close();\n  }\n\n","sourceOld":"  public void testDoubleClose() throws Exception {\n    Input keys[] = new Input[] {\n      new Input(\"a penny saved is a penny earned\", 10, new BytesRef(\"foobaz\")),\n    };\n\n    File tempDir = _TestUtil.getTempDir(\"AnalyzingInfixSuggesterTest\");\n\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(TEST_VERSION_CURRENT, tempDir, a, a, 3) {\n        @Override\n        protected Directory getDirectory(File path) {\n          return newDirectory();\n        }\n      };\n    suggester.build(new InputArrayIterator(keys));\n    suggester.close();\n    suggester.close();\n  }\n\n","bugFix":null,"bugIntro":["4637747f71df783fc2014ef1f1e0418466e3bed6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f1e7da8a91a92330e8f04b171b83e655a4a25c31","date":1394125906,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","sourceNew":"  public void testDoubleClose() throws Exception {\n    Input keys[] = new Input[] {\n      new Input(\"a penny saved is a penny earned\", 10, new BytesRef(\"foobaz\")),\n    };\n\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(TEST_VERSION_CURRENT, newDirectory(), a, a, 3);\n    suggester.build(new InputArrayIterator(keys));\n    suggester.close();\n    suggester.close();\n  }\n\n","sourceOld":"  public void testDoubleClose() throws Exception {\n    Input keys[] = new Input[] {\n      new Input(\"a penny saved is a penny earned\", 10, new BytesRef(\"foobaz\")),\n    };\n\n    File tempDir = TestUtil.getTempDir(\"AnalyzingInfixSuggesterTest\");\n\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(TEST_VERSION_CURRENT, tempDir, a, a, 3) {\n        @Override\n        protected Directory getDirectory(File path) {\n          return newDirectory();\n        }\n      };\n    suggester.build(new InputArrayIterator(keys));\n    suggester.close();\n    suggester.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4637747f71df783fc2014ef1f1e0418466e3bed6","date":1394196311,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","sourceNew":"  public void testDoubleClose() throws Exception {\n    Input keys[] = new Input[] {\n      new Input(\"a penny saved is a penny earned\", 10, new BytesRef(\"foobaz\")),\n    };\n\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(TEST_VERSION_CURRENT, newDirectory(), a, a, 3);\n    suggester.build(new InputArrayIterator(keys));\n    suggester.close();\n    suggester.close();\n  }\n\n","sourceOld":"  public void testDoubleClose() throws Exception {\n    Input keys[] = new Input[] {\n      new Input(\"a penny saved is a penny earned\", 10, new BytesRef(\"foobaz\")),\n    };\n\n    File tempDir = TestUtil.getTempDir(\"AnalyzingInfixSuggesterTest\");\n\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(TEST_VERSION_CURRENT, tempDir, a, a, 3) {\n        @Override\n        protected Directory getDirectory(File path) {\n          return newDirectory();\n        }\n      };\n    suggester.build(new InputArrayIterator(keys));\n    suggester.close();\n    suggester.close();\n  }\n\n","bugFix":["33ba398fa7984fdcb45fd76b87504d5adf7ca5e3","b3aad8246db872dc16fbe6109f893457496b0240","6613659748fe4411a7dcf85266e55db1f95f7315"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96ea64d994d340044e0d57aeb6a5871539d10ca5","date":1394225445,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","sourceNew":"  public void testDoubleClose() throws Exception {\n    Input keys[] = new Input[] {\n      new Input(\"a penny saved is a penny earned\", 10, new BytesRef(\"foobaz\")),\n    };\n\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(TEST_VERSION_CURRENT, newDirectory(), a, a, 3);\n    suggester.build(new InputArrayIterator(keys));\n    suggester.close();\n    suggester.close();\n  }\n\n","sourceOld":"  public void testDoubleClose() throws Exception {\n    Input keys[] = new Input[] {\n      new Input(\"a penny saved is a penny earned\", 10, new BytesRef(\"foobaz\")),\n    };\n\n    File tempDir = TestUtil.getTempDir(\"AnalyzingInfixSuggesterTest\");\n\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(TEST_VERSION_CURRENT, tempDir, a, a, 3) {\n        @Override\n        protected Directory getDirectory(File path) {\n          return newDirectory();\n        }\n      };\n    suggester.build(new InputArrayIterator(keys));\n    suggester.close();\n    suggester.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6549d5ea6b7b25525309b981de3ec92b4dff99d1","date":1408666035,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","sourceNew":"  public void testDoubleClose() throws Exception {\n    Input keys[] = new Input[] {\n      new Input(\"a penny saved is a penny earned\", 10, new BytesRef(\"foobaz\")),\n    };\n\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(TEST_VERSION_CURRENT, newDirectory(), a, a, 3, false);\n    suggester.build(new InputArrayIterator(keys));\n    suggester.close();\n    suggester.close();\n  }\n\n","sourceOld":"  public void testDoubleClose() throws Exception {\n    Input keys[] = new Input[] {\n      new Input(\"a penny saved is a penny earned\", 10, new BytesRef(\"foobaz\")),\n    };\n\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(TEST_VERSION_CURRENT, newDirectory(), a, a, 3);\n    suggester.build(new InputArrayIterator(keys));\n    suggester.close();\n    suggester.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19e497fe4da591a79332da97681b8017d9c61165","date":1409030374,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","sourceNew":"  public void testDoubleClose() throws Exception {\n    Input keys[] = new Input[] {\n      new Input(\"a penny saved is a penny earned\", 10, new BytesRef(\"foobaz\")),\n    };\n\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(newDirectory(), a, a, 3, false);\n    suggester.build(new InputArrayIterator(keys));\n    suggester.close();\n    suggester.close();\n  }\n\n","sourceOld":"  public void testDoubleClose() throws Exception {\n    Input keys[] = new Input[] {\n      new Input(\"a penny saved is a penny earned\", 10, new BytesRef(\"foobaz\")),\n    };\n\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(TEST_VERSION_CURRENT, newDirectory(), a, a, 3, false);\n    suggester.build(new InputArrayIterator(keys));\n    suggester.close();\n    suggester.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","sourceNew":"  public void testDoubleClose() throws Exception {\n    Input keys[] = new Input[] {\n      new Input(\"a penny saved is a penny earned\", 10, new BytesRef(\"foobaz\")),\n    };\n\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(newDirectory(), a, a, 3, false);\n    suggester.build(new InputArrayIterator(keys));\n    suggester.close();\n    suggester.close();\n    a.close();\n  }\n\n","sourceOld":"  public void testDoubleClose() throws Exception {\n    Input keys[] = new Input[] {\n      new Input(\"a penny saved is a penny earned\", 10, new BytesRef(\"foobaz\")),\n    };\n\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(newDirectory(), a, a, 3, false);\n    suggester.build(new InputArrayIterator(keys));\n    suggester.close();\n    suggester.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggesterTest#testDoubleClose().mjava","sourceNew":"  public void testDoubleClose() throws Exception {\n    Input keys[] = new Input[] {\n      new Input(\"a penny saved is a penny earned\", 10, new BytesRef(\"foobaz\")),\n    };\n\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(newDirectory(), a, a, 3, false);\n    suggester.build(new InputArrayIterator(keys));\n    suggester.close();\n    suggester.close();\n    a.close();\n  }\n\n","sourceOld":"  public void testDoubleClose() throws Exception {\n    Input keys[] = new Input[] {\n      new Input(\"a penny saved is a penny earned\", 10, new BytesRef(\"foobaz\")),\n    };\n\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.WHITESPACE, false);\n    AnalyzingInfixSuggester suggester = new AnalyzingInfixSuggester(newDirectory(), a, a, 3, false);\n    suggester.build(new InputArrayIterator(keys));\n    suggester.close();\n    suggester.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"96ea64d994d340044e0d57aeb6a5871539d10ca5":["6613659748fe4411a7dcf85266e55db1f95f7315","4637747f71df783fc2014ef1f1e0418466e3bed6"],"41aee74b5f91a096e3fd950f4a336bc763f0e7a7":["b3aad8246db872dc16fbe6109f893457496b0240"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b3aad8246db872dc16fbe6109f893457496b0240"],"6613659748fe4411a7dcf85266e55db1f95f7315":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7"],"b3aad8246db872dc16fbe6109f893457496b0240":["33ba398fa7984fdcb45fd76b87504d5adf7ca5e3"],"6549d5ea6b7b25525309b981de3ec92b4dff99d1":["4637747f71df783fc2014ef1f1e0418466e3bed6"],"f1e7da8a91a92330e8f04b171b83e655a4a25c31":["6613659748fe4411a7dcf85266e55db1f95f7315"],"19e497fe4da591a79332da97681b8017d9c61165":["6549d5ea6b7b25525309b981de3ec92b4dff99d1"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["19e497fe4da591a79332da97681b8017d9c61165","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a56958d7f71a28824f20031ffbb2e13502a0274e":["19e497fe4da591a79332da97681b8017d9c61165"],"4637747f71df783fc2014ef1f1e0418466e3bed6":["6613659748fe4411a7dcf85266e55db1f95f7315","f1e7da8a91a92330e8f04b171b83e655a4a25c31"],"33ba398fa7984fdcb45fd76b87504d5adf7ca5e3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56958d7f71a28824f20031ffbb2e13502a0274e"]},"commit2Childs":{"96ea64d994d340044e0d57aeb6a5871539d10ca5":[],"41aee74b5f91a096e3fd950f4a336bc763f0e7a7":["6613659748fe4411a7dcf85266e55db1f95f7315"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"6613659748fe4411a7dcf85266e55db1f95f7315":["96ea64d994d340044e0d57aeb6a5871539d10ca5","f1e7da8a91a92330e8f04b171b83e655a4a25c31","4637747f71df783fc2014ef1f1e0418466e3bed6"],"b3aad8246db872dc16fbe6109f893457496b0240":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"6549d5ea6b7b25525309b981de3ec92b4dff99d1":["19e497fe4da591a79332da97681b8017d9c61165"],"f1e7da8a91a92330e8f04b171b83e655a4a25c31":["4637747f71df783fc2014ef1f1e0418466e3bed6"],"19e497fe4da591a79332da97681b8017d9c61165":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","33ba398fa7984fdcb45fd76b87504d5adf7ca5e3"],"4637747f71df783fc2014ef1f1e0418466e3bed6":["96ea64d994d340044e0d57aeb6a5871539d10ca5","6549d5ea6b7b25525309b981de3ec92b4dff99d1"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"33ba398fa7984fdcb45fd76b87504d5adf7ca5e3":["b3aad8246db872dc16fbe6109f893457496b0240"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["96ea64d994d340044e0d57aeb6a5871539d10ca5","37a0f60745e53927c4c876cfe5b5a58170f0646c","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}