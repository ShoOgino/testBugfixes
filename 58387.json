{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/StandardQueryParser#getLowercaseExpandedTerms().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/StandardQueryParser#getLowercaseExpandedTerms().mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/StandardQueryParser#getLowercaseExpandedTerms().mjava","sourceNew":"  /**\n   * @see #setLowercaseExpandedTerms(boolean)\n   */\n  public boolean getLowercaseExpandedTerms() {\n    Boolean lowercaseExpandedTerms = getQueryConfigHandler().get(ConfigurationKeys.LOWERCASE_EXPANDED_TERMS);\n    \n    if (lowercaseExpandedTerms == null) {\n      return true;\n      \n    } else {\n      return lowercaseExpandedTerms;\n    }\n    \n  }\n\n","sourceOld":"  /**\n   * @see #setLowercaseExpandedTerms(boolean)\n   */\n  public boolean getLowercaseExpandedTerms() {\n    Boolean lowercaseExpandedTerms = getQueryConfigHandler().get(ConfigurationKeys.LOWERCASE_EXPANDED_TERMS);\n    \n    if (lowercaseExpandedTerms == null) {\n      return true;\n      \n    } else {\n      return lowercaseExpandedTerms;\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/StandardQueryParser#getLowercaseExpandedTerms().mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/StandardQueryParser#getLowercaseExpandedTerms().mjava","sourceNew":"  /**\n   * @see #setLowercaseExpandedTerms(boolean)\n   */\n  @Override\n  public boolean getLowercaseExpandedTerms() {\n    Boolean lowercaseExpandedTerms = getQueryConfigHandler().get(ConfigurationKeys.LOWERCASE_EXPANDED_TERMS);\n    \n    if (lowercaseExpandedTerms == null) {\n      return true;\n      \n    } else {\n      return lowercaseExpandedTerms;\n    }\n    \n  }\n\n","sourceOld":"  /**\n   * @see #setLowercaseExpandedTerms(boolean)\n   */\n  public boolean getLowercaseExpandedTerms() {\n    Boolean lowercaseExpandedTerms = getQueryConfigHandler().get(ConfigurationKeys.LOWERCASE_EXPANDED_TERMS);\n    \n    if (lowercaseExpandedTerms == null) {\n      return true;\n      \n    } else {\n      return lowercaseExpandedTerms;\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/StandardQueryParser#getLowercaseExpandedTerms().mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/StandardQueryParser#getLowercaseExpandedTerms().mjava","sourceNew":"  /**\n   * @see #setLowercaseExpandedTerms(boolean)\n   */\n  @Override\n  public boolean getLowercaseExpandedTerms() {\n    Boolean lowercaseExpandedTerms = getQueryConfigHandler().get(ConfigurationKeys.LOWERCASE_EXPANDED_TERMS);\n    \n    if (lowercaseExpandedTerms == null) {\n      return true;\n      \n    } else {\n      return lowercaseExpandedTerms;\n    }\n    \n  }\n\n","sourceOld":"  /**\n   * @see #setLowercaseExpandedTerms(boolean)\n   */\n  public boolean getLowercaseExpandedTerms() {\n    Boolean lowercaseExpandedTerms = getQueryConfigHandler().get(ConfigurationKeys.LOWERCASE_EXPANDED_TERMS);\n    \n    if (lowercaseExpandedTerms == null) {\n      return true;\n      \n    } else {\n      return lowercaseExpandedTerms;\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea4107f60b9f95623c16025c9c247412ff809092","date":1468333987,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/StandardQueryParser#getLowercaseExpandedTerms().mjava","sourceNew":null,"sourceOld":"  /**\n   * @see #setLowercaseExpandedTerms(boolean)\n   */\n  @Override\n  public boolean getLowercaseExpandedTerms() {\n    Boolean lowercaseExpandedTerms = getQueryConfigHandler().get(ConfigurationKeys.LOWERCASE_EXPANDED_TERMS);\n    \n    if (lowercaseExpandedTerms == null) {\n      return true;\n      \n    } else {\n      return lowercaseExpandedTerms;\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/StandardQueryParser#getLowercaseExpandedTerms().mjava","sourceNew":null,"sourceOld":"  /**\n   * @see #setLowercaseExpandedTerms(boolean)\n   */\n  @Override\n  public boolean getLowercaseExpandedTerms() {\n    Boolean lowercaseExpandedTerms = getQueryConfigHandler().get(ConfigurationKeys.LOWERCASE_EXPANDED_TERMS);\n    \n    if (lowercaseExpandedTerms == null) {\n      return true;\n      \n    } else {\n      return lowercaseExpandedTerms;\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7530de27b87b961b51f01bd1299b7004d46e8823"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ea4107f60b9f95623c16025c9c247412ff809092":["7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7530de27b87b961b51f01bd1299b7004d46e8823","ea4107f60b9f95623c16025c9c247412ff809092"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ea4107f60b9f95623c16025c9c247412ff809092"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ea4107f60b9f95623c16025c9c247412ff809092":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","ea4107f60b9f95623c16025c9c247412ff809092","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}