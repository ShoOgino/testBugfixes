{"path":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testFieldType().mjava","commits":[{"id":"66e339aeeefbb0f94800c9777e747a22e43c64cc","date":1323800559,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testFieldType().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFieldType() throws Exception {\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"1\", \"text\", \"XXXX XXXX\",           \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"2\", \"text\", \"YYYY\",      \"str_s\", \"b\" ));\n      assertU(adoc(\"id\", \"3\", \"text\", \"ZZZZ\", \"str_s\", \"c\" ));\n\n      assertU(adoc(\"id\", \"4\", \"text\", \"XXXX XXXX\",                 \"str_s\", \"x\" ));\n      assertU(adoc(\"id\", \"5\", \"text\", \"YYYY YYYY\",         \"str_s\", \"y\" ));\n      assertU(adoc(\"id\", \"6\", \"text\", \"XXXX XXXX\", \"str_s\", \"z\" ));\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"8\", \"text\", \"AAAA\", \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"9\", \"text\", \"AAAA AAAA\", \"str_s\", \"a\" ));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n              ,\"//*[@numFound='3']\"\n              ,\"//result/doc[1]/float[@name='id'][.='7.0']\"\n              ,\"//result/doc[2]/float[@name='id'][.='8.0']\"\n              ,\"//result/doc[3]/float[@name='id'][.='9.0']\",\n              \"//result/doc[1]/bool[@name='[elevated]'][.='true']\",\n              \"//result/doc[2]/bool[@name='[elevated]'][.='false']\",\n              \"//result/doc[3]/bool[@name='[elevated]'][.='false']\"\n              );\n    } finally{\n      delete();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d0561cea94adff1867218e77bb763c7583be279","date":1324334341,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testFieldType().mjava","sourceNew":"  @Test\n  public void testFieldType() throws Exception {\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"1\", \"text\", \"XXXX XXXX\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"2\", \"text\", \"YYYY\", \"str_s\", \"b\"));\n      assertU(adoc(\"id\", \"3\", \"text\", \"ZZZZ\", \"str_s\", \"c\"));\n\n      assertU(adoc(\"id\", \"4\", \"text\", \"XXXX XXXX\", \"str_s\", \"x\"));\n      assertU(adoc(\"id\", \"5\", \"text\", \"YYYY YYYY\", \"str_s\", \"y\"));\n      assertU(adoc(\"id\", \"6\", \"text\", \"XXXX XXXX\", \"str_s\", \"z\"));\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"8\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"9\", \"text\", \"AAAA AAAA\", \"str_s\", \"a\"));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='3']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[2]/float[@name='id'][.='8.0']\"\n          , \"//result/doc[3]/float[@name='id'][.='9.0']\",\n          \"//result/doc[1]/bool[@name='[elevated]'][.='true']\",\n          \"//result/doc[2]/bool[@name='[elevated]'][.='false']\",\n          \"//result/doc[3]/bool[@name='[elevated]'][.='false']\"\n      );\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testFieldType() throws Exception {\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"1\", \"text\", \"XXXX XXXX\",           \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"2\", \"text\", \"YYYY\",      \"str_s\", \"b\" ));\n      assertU(adoc(\"id\", \"3\", \"text\", \"ZZZZ\", \"str_s\", \"c\" ));\n\n      assertU(adoc(\"id\", \"4\", \"text\", \"XXXX XXXX\",                 \"str_s\", \"x\" ));\n      assertU(adoc(\"id\", \"5\", \"text\", \"YYYY YYYY\",         \"str_s\", \"y\" ));\n      assertU(adoc(\"id\", \"6\", \"text\", \"XXXX XXXX\", \"str_s\", \"z\" ));\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"8\", \"text\", \"AAAA\", \"str_s\", \"a\" ));\n      assertU(adoc(\"id\", \"9\", \"text\", \"AAAA AAAA\", \"str_s\", \"a\" ));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n              ,\"//*[@numFound='3']\"\n              ,\"//result/doc[1]/float[@name='id'][.='7.0']\"\n              ,\"//result/doc[2]/float[@name='id'][.='8.0']\"\n              ,\"//result/doc[3]/float[@name='id'][.='9.0']\",\n              \"//result/doc[1]/bool[@name='[elevated]'][.='true']\",\n              \"//result/doc[2]/bool[@name='[elevated]'][.='false']\",\n              \"//result/doc[3]/bool[@name='[elevated]'][.='false']\"\n              );\n    } finally{\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615370d2b876c3435773b5174df2e2242ad7981a","date":1495117651,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testFieldType().mjava","sourceNew":"  @Test\n  public void testFieldType() throws Exception {\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"1\", \"text\", \"XXXX XXXX\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"2\", \"text\", \"YYYY\", \"str_s\", \"b\"));\n      assertU(adoc(\"id\", \"3\", \"text\", \"ZZZZ\", \"str_s\", \"c\"));\n\n      assertU(adoc(\"id\", \"4\", \"text\", \"XXXX XXXX\", \"str_s\", \"x\"));\n      assertU(adoc(\"id\", \"5\", \"text\", \"YYYY YYYY\", \"str_s\", \"y\"));\n      assertU(adoc(\"id\", \"6\", \"text\", \"XXXX XXXX\", \"str_s\", \"z\"));\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"8\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"9\", \"text\", \"AAAA AAAA\", \"str_s\", \"a\"));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='3']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[2]/float[@name='id'][.='9.0']\"\n          , \"//result/doc[3]/float[@name='id'][.='8.0']\",\n          \"//result/doc[1]/bool[@name='[elevated]'][.='true']\",\n          \"//result/doc[2]/bool[@name='[elevated]'][.='false']\",\n          \"//result/doc[3]/bool[@name='[elevated]'][.='false']\"\n      );\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testFieldType() throws Exception {\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"1\", \"text\", \"XXXX XXXX\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"2\", \"text\", \"YYYY\", \"str_s\", \"b\"));\n      assertU(adoc(\"id\", \"3\", \"text\", \"ZZZZ\", \"str_s\", \"c\"));\n\n      assertU(adoc(\"id\", \"4\", \"text\", \"XXXX XXXX\", \"str_s\", \"x\"));\n      assertU(adoc(\"id\", \"5\", \"text\", \"YYYY YYYY\", \"str_s\", \"y\"));\n      assertU(adoc(\"id\", \"6\", \"text\", \"XXXX XXXX\", \"str_s\", \"z\"));\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"8\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"9\", \"text\", \"AAAA AAAA\", \"str_s\", \"a\"));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='3']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[2]/float[@name='id'][.='8.0']\"\n          , \"//result/doc[3]/float[@name='id'][.='9.0']\",\n          \"//result/doc[1]/bool[@name='[elevated]'][.='true']\",\n          \"//result/doc[2]/bool[@name='[elevated]'][.='false']\",\n          \"//result/doc[3]/bool[@name='[elevated]'][.='false']\"\n      );\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testFieldType().mjava","sourceNew":"  @Test\n  public void testFieldType() throws Exception {\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"1\", \"text\", \"XXXX XXXX\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"2\", \"text\", \"YYYY\", \"str_s\", \"b\"));\n      assertU(adoc(\"id\", \"3\", \"text\", \"ZZZZ\", \"str_s\", \"c\"));\n\n      assertU(adoc(\"id\", \"4\", \"text\", \"XXXX XXXX\", \"str_s\", \"x\"));\n      assertU(adoc(\"id\", \"5\", \"text\", \"YYYY YYYY\", \"str_s\", \"y\"));\n      assertU(adoc(\"id\", \"6\", \"text\", \"XXXX XXXX\", \"str_s\", \"z\"));\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"8\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"9\", \"text\", \"AAAA AAAA\", \"str_s\", \"a\"));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='3']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[2]/float[@name='id'][.='9.0']\"\n          , \"//result/doc[3]/float[@name='id'][.='8.0']\",\n          \"//result/doc[1]/bool[@name='[elevated]'][.='true']\",\n          \"//result/doc[2]/bool[@name='[elevated]'][.='false']\",\n          \"//result/doc[3]/bool[@name='[elevated]'][.='false']\"\n      );\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testFieldType() throws Exception {\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"1\", \"text\", \"XXXX XXXX\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"2\", \"text\", \"YYYY\", \"str_s\", \"b\"));\n      assertU(adoc(\"id\", \"3\", \"text\", \"ZZZZ\", \"str_s\", \"c\"));\n\n      assertU(adoc(\"id\", \"4\", \"text\", \"XXXX XXXX\", \"str_s\", \"x\"));\n      assertU(adoc(\"id\", \"5\", \"text\", \"YYYY YYYY\", \"str_s\", \"y\"));\n      assertU(adoc(\"id\", \"6\", \"text\", \"XXXX XXXX\", \"str_s\", \"z\"));\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"8\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"9\", \"text\", \"AAAA AAAA\", \"str_s\", \"a\"));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='3']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[2]/float[@name='id'][.='8.0']\"\n          , \"//result/doc[3]/float[@name='id'][.='9.0']\",\n          \"//result/doc[1]/bool[@name='[elevated]'][.='true']\",\n          \"//result/doc[2]/bool[@name='[elevated]'][.='false']\",\n          \"//result/doc[3]/bool[@name='[elevated]'][.='false']\"\n      );\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71f63026529f3c1f03cfdd664910873ab2369ae","date":1497543264,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testFieldType().mjava","sourceNew":"  @Test\n  public void testFieldType() throws Exception {\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"1\", \"text\", \"XXXX XXXX\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"2\", \"text\", \"YYYY\", \"str_s\", \"b\"));\n      assertU(adoc(\"id\", \"3\", \"text\", \"ZZZZ\", \"str_s\", \"c\"));\n\n      assertU(adoc(\"id\", \"4\", \"text\", \"XXXX XXXX\", \"str_s\", \"x\"));\n      assertU(adoc(\"id\", \"5\", \"text\", \"YYYY YYYY\", \"str_s\", \"y\"));\n      assertU(adoc(\"id\", \"6\", \"text\", \"XXXX XXXX\", \"str_s\", \"z\"));\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"8\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"9\", \"text\", \"AAAA AAAA\", \"str_s\", \"a\"));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='3']\"\n          , \"//result/doc[1]/str[@name='id'][.='7']\"\n          , \"//result/doc[2]/str[@name='id'][.='9']\"\n          , \"//result/doc[3]/str[@name='id'][.='8']\",\n          \"//result/doc[1]/bool[@name='[elevated]'][.='true']\",\n          \"//result/doc[2]/bool[@name='[elevated]'][.='false']\",\n          \"//result/doc[3]/bool[@name='[elevated]'][.='false']\"\n      );\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testFieldType() throws Exception {\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"1\", \"text\", \"XXXX XXXX\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"2\", \"text\", \"YYYY\", \"str_s\", \"b\"));\n      assertU(adoc(\"id\", \"3\", \"text\", \"ZZZZ\", \"str_s\", \"c\"));\n\n      assertU(adoc(\"id\", \"4\", \"text\", \"XXXX XXXX\", \"str_s\", \"x\"));\n      assertU(adoc(\"id\", \"5\", \"text\", \"YYYY YYYY\", \"str_s\", \"y\"));\n      assertU(adoc(\"id\", \"6\", \"text\", \"XXXX XXXX\", \"str_s\", \"z\"));\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"8\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"9\", \"text\", \"AAAA AAAA\", \"str_s\", \"a\"));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='3']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[2]/float[@name='id'][.='9.0']\"\n          , \"//result/doc[3]/float[@name='id'][.='8.0']\",\n          \"//result/doc[1]/bool[@name='[elevated]'][.='true']\",\n          \"//result/doc[2]/bool[@name='[elevated]'][.='false']\",\n          \"//result/doc[3]/bool[@name='[elevated]'][.='false']\"\n      );\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testFieldType().mjava","sourceNew":"  @Test\n  public void testFieldType() throws Exception {\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"1\", \"text\", \"XXXX XXXX\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"2\", \"text\", \"YYYY\", \"str_s\", \"b\"));\n      assertU(adoc(\"id\", \"3\", \"text\", \"ZZZZ\", \"str_s\", \"c\"));\n\n      assertU(adoc(\"id\", \"4\", \"text\", \"XXXX XXXX\", \"str_s\", \"x\"));\n      assertU(adoc(\"id\", \"5\", \"text\", \"YYYY YYYY\", \"str_s\", \"y\"));\n      assertU(adoc(\"id\", \"6\", \"text\", \"XXXX XXXX\", \"str_s\", \"z\"));\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"8\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"9\", \"text\", \"AAAA AAAA\", \"str_s\", \"a\"));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='3']\"\n          , \"//result/doc[1]/str[@name='id'][.='7']\"\n          , \"//result/doc[2]/str[@name='id'][.='9']\"\n          , \"//result/doc[3]/str[@name='id'][.='8']\",\n          \"//result/doc[1]/bool[@name='[elevated]'][.='true']\",\n          \"//result/doc[2]/bool[@name='[elevated]'][.='false']\",\n          \"//result/doc[3]/bool[@name='[elevated]'][.='false']\"\n      );\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testFieldType() throws Exception {\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"1\", \"text\", \"XXXX XXXX\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"2\", \"text\", \"YYYY\", \"str_s\", \"b\"));\n      assertU(adoc(\"id\", \"3\", \"text\", \"ZZZZ\", \"str_s\", \"c\"));\n\n      assertU(adoc(\"id\", \"4\", \"text\", \"XXXX XXXX\", \"str_s\", \"x\"));\n      assertU(adoc(\"id\", \"5\", \"text\", \"YYYY YYYY\", \"str_s\", \"y\"));\n      assertU(adoc(\"id\", \"6\", \"text\", \"XXXX XXXX\", \"str_s\", \"z\"));\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"8\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"9\", \"text\", \"AAAA AAAA\", \"str_s\", \"a\"));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='3']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[2]/float[@name='id'][.='9.0']\"\n          , \"//result/doc[3]/float[@name='id'][.='8.0']\",\n          \"//result/doc[1]/bool[@name='[elevated]'][.='true']\",\n          \"//result/doc[2]/bool[@name='[elevated]'][.='false']\",\n          \"//result/doc[3]/bool[@name='[elevated]'][.='false']\"\n      );\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testFieldType().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testFieldType().mjava","sourceNew":"  @Test\n  public void testFieldType() throws Exception {\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"1\", \"text\", \"XXXX XXXX\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"2\", \"text\", \"YYYY\", \"str_s\", \"b\"));\n      assertU(adoc(\"id\", \"3\", \"text\", \"ZZZZ\", \"str_s\", \"c\"));\n\n      assertU(adoc(\"id\", \"4\", \"text\", \"XXXX XXXX\", \"str_s\", \"x\"));\n      assertU(adoc(\"id\", \"5\", \"text\", \"YYYY YYYY\", \"str_s\", \"y\"));\n      assertU(adoc(\"id\", \"6\", \"text\", \"XXXX XXXX\", \"str_s\", \"z\"));\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"8\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"9\", \"text\", \"AAAA AAAA\", \"str_s\", \"a\"));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='3']\"\n          , \"//result/doc[1]/str[@name='id'][.='7']\"\n          , \"//result/doc[2]/str[@name='id'][.='9']\"\n          , \"//result/doc[3]/str[@name='id'][.='8']\",\n          \"//result/doc[1]/bool[@name='[elevated]'][.='true']\",\n          \"//result/doc[2]/bool[@name='[elevated]'][.='false']\",\n          \"//result/doc[3]/bool[@name='[elevated]'][.='false']\"\n      );\n    } finally {\n      delete();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testFieldType() throws Exception {\n    try {\n      init(\"schema11.xml\");\n      clearIndex();\n      assertU(commit());\n      assertU(adoc(\"id\", \"1\", \"text\", \"XXXX XXXX\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"2\", \"text\", \"YYYY\", \"str_s\", \"b\"));\n      assertU(adoc(\"id\", \"3\", \"text\", \"ZZZZ\", \"str_s\", \"c\"));\n\n      assertU(adoc(\"id\", \"4\", \"text\", \"XXXX XXXX\", \"str_s\", \"x\"));\n      assertU(adoc(\"id\", \"5\", \"text\", \"YYYY YYYY\", \"str_s\", \"y\"));\n      assertU(adoc(\"id\", \"6\", \"text\", \"XXXX XXXX\", \"str_s\", \"z\"));\n      assertU(adoc(\"id\", \"7\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"8\", \"text\", \"AAAA\", \"str_s\", \"a\"));\n      assertU(adoc(\"id\", \"9\", \"text\", \"AAAA AAAA\", \"str_s\", \"a\"));\n      assertU(commit());\n\n      assertQ(\"\", req(CommonParams.Q, \"AAAA\", CommonParams.QT, \"/elevate\",\n          CommonParams.FL, \"id, score, [elevated]\")\n          , \"//*[@numFound='3']\"\n          , \"//result/doc[1]/float[@name='id'][.='7.0']\"\n          , \"//result/doc[2]/float[@name='id'][.='9.0']\"\n          , \"//result/doc[3]/float[@name='id'][.='8.0']\",\n          \"//result/doc[1]/bool[@name='[elevated]'][.='true']\",\n          \"//result/doc[2]/bool[@name='[elevated]'][.='false']\",\n          \"//result/doc[3]/bool[@name='[elevated]'][.='false']\"\n      );\n    } finally {\n      delete();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["1d0561cea94adff1867218e77bb763c7583be279","615370d2b876c3435773b5174df2e2242ad7981a"],"615370d2b876c3435773b5174df2e2242ad7981a":["1d0561cea94adff1867218e77bb763c7583be279"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a71f63026529f3c1f03cfdd664910873ab2369ae":["615370d2b876c3435773b5174df2e2242ad7981a"],"66e339aeeefbb0f94800c9777e747a22e43c64cc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1d0561cea94adff1867218e77bb763c7583be279":["66e339aeeefbb0f94800c9777e747a22e43c64cc"],"28288370235ed02234a64753cdbf0c6ec096304a":["615370d2b876c3435773b5174df2e2242ad7981a","a71f63026529f3c1f03cfdd664910873ab2369ae"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["e9017cf144952056066919f1ebc7897ff9bd71b1","a71f63026529f3c1f03cfdd664910873ab2369ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"615370d2b876c3435773b5174df2e2242ad7981a":["e9017cf144952056066919f1ebc7897ff9bd71b1","a71f63026529f3c1f03cfdd664910873ab2369ae","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["66e339aeeefbb0f94800c9777e747a22e43c64cc"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"66e339aeeefbb0f94800c9777e747a22e43c64cc":["1d0561cea94adff1867218e77bb763c7583be279"],"1d0561cea94adff1867218e77bb763c7583be279":["e9017cf144952056066919f1ebc7897ff9bd71b1","615370d2b876c3435773b5174df2e2242ad7981a"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}