{"path":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/UsingSolrJRefGuideExamplesTest#otherSolrApisExample().mjava","commits":[{"id":"a01fff746a2b2ca68b2c1d03f4ede309970631bd","date":1509049505,"type":0,"author":"Cassandra Targett","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/UsingSolrJRefGuideExamplesTest#otherSolrApisExample().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void otherSolrApisExample() throws Exception {\n    // tag::solrj-other-apis[]\n    final SolrClient client = getSolrClient();\n\n    final SolrRequest request = new CollectionAdminRequest.ClusterStatus();\n\n    final NamedList<Object> response = client.request(request);\n    final NamedList<Object> cluster = (NamedList<Object>) response.get(\"cluster\");\n    final List<String> liveNodes = (List<String>) cluster.get(\"live_nodes\");\n\n    assertEquals(NUM_LIVE_NODES, liveNodes.size());\n    // end::solrj-other-apis[]\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45ce9d6e2476f4de0ab905ae2c8d3178cc468bc8","date":1513039141,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/UsingSolrJRefGuideExamplesTest#otherSolrApisExample().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/UsingSolrJRefGuideExamplesTest#otherSolrApisExample().mjava","sourceNew":"  @Test\n  public void otherSolrApisExample() throws Exception {\n    expectLine(\"Found \"+NUM_LIVE_NODES+\" live nodes\");\n    // tag::solrj-other-apis[]\n    final SolrClient client = getSolrClient();\n\n    final SolrRequest request = new CollectionAdminRequest.ClusterStatus();\n\n    final NamedList<Object> response = client.request(request);\n    final NamedList<Object> cluster = (NamedList<Object>) response.get(\"cluster\");\n    final List<String> liveNodes = (List<String>) cluster.get(\"live_nodes\");\n\n    print(\"Found \" + liveNodes.size() + \" live nodes\");\n    // end::solrj-other-apis[]\n  }\n\n","sourceOld":"  @Test\n  public void otherSolrApisExample() throws Exception {\n    // tag::solrj-other-apis[]\n    final SolrClient client = getSolrClient();\n\n    final SolrRequest request = new CollectionAdminRequest.ClusterStatus();\n\n    final NamedList<Object> response = client.request(request);\n    final NamedList<Object> cluster = (NamedList<Object>) response.get(\"cluster\");\n    final List<String> liveNodes = (List<String>) cluster.get(\"live_nodes\");\n\n    assertEquals(NUM_LIVE_NODES, liveNodes.size());\n    // end::solrj-other-apis[]\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"927e6deec13723e5fd6fb8f1e0457e8597dae15e","date":1513167013,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/UsingSolrJRefGuideExamplesTest#otherSolrApisExample().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/UsingSolrJRefGuideExamplesTest#otherSolrApisExample().mjava","sourceNew":"  @Test\n  public void otherSolrApisExample() throws Exception {\n    expectLine(\"Found \"+NUM_LIVE_NODES+\" live nodes\");\n    // tag::solrj-other-apis[]\n    final SolrClient client = getSolrClient();\n\n    final SolrRequest request = new CollectionAdminRequest.ClusterStatus();\n\n    final NamedList<Object> response = client.request(request);\n    final NamedList<Object> cluster = (NamedList<Object>) response.get(\"cluster\");\n    final List<String> liveNodes = (List<String>) cluster.get(\"live_nodes\");\n\n    print(\"Found \" + liveNodes.size() + \" live nodes\");\n    // end::solrj-other-apis[]\n  }\n\n","sourceOld":"  @Test\n  public void otherSolrApisExample() throws Exception {\n    // tag::solrj-other-apis[]\n    final SolrClient client = getSolrClient();\n\n    final SolrRequest request = new CollectionAdminRequest.ClusterStatus();\n\n    final NamedList<Object> response = client.request(request);\n    final NamedList<Object> cluster = (NamedList<Object>) response.get(\"cluster\");\n    final List<String> liveNodes = (List<String>) cluster.get(\"live_nodes\");\n\n    assertEquals(NUM_LIVE_NODES, liveNodes.size());\n    // end::solrj-other-apis[]\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/UsingSolrJRefGuideExamplesTest#otherSolrApisExample().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/ref_guide_examples/UsingSolrJRefGuideExamplesTest#otherSolrApisExample().mjava","sourceNew":"  @Test\n  public void otherSolrApisExample() throws Exception {\n    expectLine(\"Found \"+NUM_LIVE_NODES+\" live nodes\");\n    // tag::solrj-other-apis[]\n    final SolrClient client = getSolrClient();\n\n    @SuppressWarnings({\"rawtypes\"})\n    final SolrRequest request = new CollectionAdminRequest.ClusterStatus();\n\n    final NamedList<Object> response = client.request(request);\n    @SuppressWarnings({\"unchecked\"})\n    final NamedList<Object> cluster = (NamedList<Object>) response.get(\"cluster\");\n    @SuppressWarnings({\"unchecked\"})\n    final List<String> liveNodes = (List<String>) cluster.get(\"live_nodes\");\n\n    print(\"Found \" + liveNodes.size() + \" live nodes\");\n    // end::solrj-other-apis[]\n  }\n\n","sourceOld":"  @Test\n  public void otherSolrApisExample() throws Exception {\n    expectLine(\"Found \"+NUM_LIVE_NODES+\" live nodes\");\n    // tag::solrj-other-apis[]\n    final SolrClient client = getSolrClient();\n\n    final SolrRequest request = new CollectionAdminRequest.ClusterStatus();\n\n    final NamedList<Object> response = client.request(request);\n    final NamedList<Object> cluster = (NamedList<Object>) response.get(\"cluster\");\n    final List<String> liveNodes = (List<String>) cluster.get(\"live_nodes\");\n\n    print(\"Found \" + liveNodes.size() + \" live nodes\");\n    // end::solrj-other-apis[]\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["927e6deec13723e5fd6fb8f1e0457e8597dae15e"],"a01fff746a2b2ca68b2c1d03f4ede309970631bd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"45ce9d6e2476f4de0ab905ae2c8d3178cc468bc8":["a01fff746a2b2ca68b2c1d03f4ede309970631bd"],"927e6deec13723e5fd6fb8f1e0457e8597dae15e":["a01fff746a2b2ca68b2c1d03f4ede309970631bd","45ce9d6e2476f4de0ab905ae2c8d3178cc468bc8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba1b632c041956c93c41aa1143d16a567014891"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a01fff746a2b2ca68b2c1d03f4ede309970631bd":["45ce9d6e2476f4de0ab905ae2c8d3178cc468bc8","927e6deec13723e5fd6fb8f1e0457e8597dae15e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a01fff746a2b2ca68b2c1d03f4ede309970631bd"],"45ce9d6e2476f4de0ab905ae2c8d3178cc468bc8":["927e6deec13723e5fd6fb8f1e0457e8597dae15e"],"927e6deec13723e5fd6fb8f1e0457e8597dae15e":["9ba1b632c041956c93c41aa1143d16a567014891"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}