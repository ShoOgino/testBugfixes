{"path":"src/java/org/apache/solr/request/StandardRequestHandler#doQuery(String,SolrIndexSearcher,IndexSchema,int,int).mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/StandardRequestHandler#doQuery(String,SolrIndexSearcher,IndexSchema,int,int).mjava","pathOld":"/dev/null","sourceNew":"  private DocList doQuery(String sreq, SolrIndexSearcher searcher, IndexSchema schema, int start, int limit) throws IOException {\n    List<String> commands = StrUtils.splitSmart(sreq,';');\n\n    String qs = commands.size() >= 1 ? commands.get(0) : \"\";\n    Query query = QueryParsing.parseQuery(qs, schema);\n\n    // If the first non-query, non-filter command is a simple sort on an indexed field, then\n    // we can use the Lucene sort ability.\n    Sort sort = null;\n    if (commands.size() >= 2) {\n      QueryParsing.SortSpec sortSpec = QueryParsing.parseSort(commands.get(1), schema);\n      if (sortSpec != null) {\n        sort = sortSpec.getSort();\n        if (sortSpec.getCount() >= 0) {\n          limit = sortSpec.getCount();\n        }\n      }\n    }\n\n    DocList results = searcher.getDocList(query,(DocSet)null, sort, start, limit);\n    return results;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0452863ee588101738d341e6e97eb87eb010052a","date":1152814944,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/solr/request/StandardRequestHandler#doQuery(String,SolrIndexSearcher,IndexSchema,int,int).mjava","sourceNew":null,"sourceOld":"  private DocList doQuery(String sreq, SolrIndexSearcher searcher, IndexSchema schema, int start, int limit) throws IOException {\n    List<String> commands = StrUtils.splitSmart(sreq,';');\n\n    String qs = commands.size() >= 1 ? commands.get(0) : \"\";\n    Query query = QueryParsing.parseQuery(qs, schema);\n\n    // If the first non-query, non-filter command is a simple sort on an indexed field, then\n    // we can use the Lucene sort ability.\n    Sort sort = null;\n    if (commands.size() >= 2) {\n      QueryParsing.SortSpec sortSpec = QueryParsing.parseSort(commands.get(1), schema);\n      if (sortSpec != null) {\n        sort = sortSpec.getSort();\n        if (sortSpec.getCount() >= 0) {\n          limit = sortSpec.getCount();\n        }\n      }\n    }\n\n    DocList results = searcher.getDocList(query,(DocSet)null, sort, start, limit);\n    return results;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0452863ee588101738d341e6e97eb87eb010052a":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0452863ee588101738d341e6e97eb87eb010052a":[],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["0452863ee588101738d341e6e97eb87eb010052a"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0452863ee588101738d341e6e97eb87eb010052a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}