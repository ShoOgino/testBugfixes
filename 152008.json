{"path":"lucene/core/src/java/org/apache/lucene/search/MultiTermQueryConstantScoreWrapper#equals(Object).mjava","commits":[{"id":"2713584a660051cd646423be682771e3bbd99985","date":1425046322,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiTermQueryConstantScoreWrapper#equals(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiTermQueryWrapperFilter#equals(Object).mjava","sourceNew":"  @Override\n  @SuppressWarnings({\"rawtypes\"})\n  public final boolean equals(final Object o) {\n    if (o==this) return true;\n    if (o==null) return false;\n    if (this.getClass().equals(o.getClass())) {\n      final MultiTermQueryConstantScoreWrapper that = (MultiTermQueryConstantScoreWrapper) o;\n      return this.query.equals(that.query) && this.getBoost() == that.getBoost();\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  public final boolean equals(final Object o) {\n    if (o==this) return true;\n    if (o==null) return false;\n    if (this.getClass().equals(o.getClass())) {\n      return this.query.equals( ((MultiTermQueryWrapperFilter)o).query );\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiTermQueryConstantScoreWrapper#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  @SuppressWarnings({\"rawtypes\"})\n  public final boolean equals(final Object o) {\n    if (o==this) return true;\n    if (o==null) return false;\n    if (this.getClass().equals(o.getClass())) {\n      final MultiTermQueryConstantScoreWrapper that = (MultiTermQueryConstantScoreWrapper) o;\n      return this.query.equals(that.query) && this.getBoost() == that.getBoost();\n    }\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"721230395a78975958098de53098f4520729619d","date":1432106709,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiTermQueryConstantScoreWrapper#equals(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiTermQueryConstantScoreWrapper#equals(Object).mjava","sourceNew":"  @Override\n  public final boolean equals(final Object o) {\n    if (super.equals(o) == false) {\n      return false;\n    }\n    final MultiTermQueryConstantScoreWrapper<?> that = (MultiTermQueryConstantScoreWrapper<?>) o;\n    return this.query.equals(that.query) && this.getBoost() == that.getBoost();\n  }\n\n","sourceOld":"  @Override\n  @SuppressWarnings({\"rawtypes\"})\n  public final boolean equals(final Object o) {\n    if (o==this) return true;\n    if (o==null) return false;\n    if (this.getClass().equals(o.getClass())) {\n      final MultiTermQueryConstantScoreWrapper that = (MultiTermQueryConstantScoreWrapper) o;\n      return this.query.equals(that.query) && this.getBoost() == that.getBoost();\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiTermQueryConstantScoreWrapper#equals(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiTermQueryConstantScoreWrapper#equals(Object).mjava","sourceNew":"  @Override\n  public final boolean equals(final Object o) {\n    if (super.equals(o) == false) {\n      return false;\n    }\n    final MultiTermQueryConstantScoreWrapper<?> that = (MultiTermQueryConstantScoreWrapper<?>) o;\n    return this.query.equals(that.query);\n  }\n\n","sourceOld":"  @Override\n  public final boolean equals(final Object o) {\n    if (super.equals(o) == false) {\n      return false;\n    }\n    final MultiTermQueryConstantScoreWrapper<?> that = (MultiTermQueryConstantScoreWrapper<?>) o;\n    return this.query.equals(that.query) && this.getBoost() == that.getBoost();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiTermQueryConstantScoreWrapper#equals(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiTermQueryConstantScoreWrapper#equals(Object).mjava","sourceNew":"  @Override\n  public final boolean equals(final Object other) {\n    return sameClassAs(other) &&\n           query.equals(((MultiTermQueryConstantScoreWrapper<?>) other).query);\n  }\n\n","sourceOld":"  @Override\n  public final boolean equals(final Object o) {\n    if (super.equals(o) == false) {\n      return false;\n    }\n    final MultiTermQueryConstantScoreWrapper<?> that = (MultiTermQueryConstantScoreWrapper<?>) o;\n    return this.query.equals(that.query);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiTermQueryConstantScoreWrapper#equals(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiTermQueryConstantScoreWrapper#equals(Object).mjava","sourceNew":"  @Override\n  public final boolean equals(final Object other) {\n    return sameClassAs(other) &&\n           query.equals(((MultiTermQueryConstantScoreWrapper<?>) other).query);\n  }\n\n","sourceOld":"  @Override\n  public final boolean equals(final Object o) {\n    if (super.equals(o) == false) {\n      return false;\n    }\n    final MultiTermQueryConstantScoreWrapper<?> that = (MultiTermQueryConstantScoreWrapper<?>) o;\n    return this.query.equals(that.query);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2713584a660051cd646423be682771e3bbd99985"],"2713584a660051cd646423be682771e3bbd99985":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["721230395a78975958098de53098f4520729619d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["2dfdf766e55e943d942055d7de53c7ad6bc45283","0e7bc21595222ae4f75509300fbb7726691f387f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e7bc21595222ae4f75509300fbb7726691f387f"],"721230395a78975958098de53098f4520729619d":["2713584a660051cd646423be682771e3bbd99985"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"2713584a660051cd646423be682771e3bbd99985":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","721230395a78975958098de53098f4520729619d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","2713584a660051cd646423be682771e3bbd99985"],"0e7bc21595222ae4f75509300fbb7726691f387f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"721230395a78975958098de53098f4520729619d":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}