{"path":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#xsltRequest(String).mjava","commits":[{"id":"917e62f3497c83634a13edd833e8e21dd6cc6496","date":1490728467,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#xsltRequest(String).mjava","pathOld":"/dev/null","sourceNew":"  private void xsltRequest(String collection) throws SolrServerException, IOException {\n    String baseUrl = solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString();\n    try (HttpSolrClient client = new HttpSolrClient(baseUrl + \"/\" + collection)) {\n      String xml = \n          \"<random>\" +\n              \" <document>\" +\n              \"  <node name=\\\"id\\\" value=\\\"12345\\\"/>\" +\n              \"  <node name=\\\"name\\\" value=\\\"kitten\\\"/>\" +\n              \"  <node name=\\\"text\\\" enhance=\\\"3\\\" value=\\\"some other day\\\"/>\" +\n              \"  <node name=\\\"title\\\" enhance=\\\"4\\\" value=\\\"A story\\\"/>\" +\n              \"  <node name=\\\"timestamp\\\" enhance=\\\"5\\\" value=\\\"2011-07-01T10:31:57.140Z\\\"/>\" +\n              \" </document>\" +\n              \"</random>\";\n\n      SolrQuery query = new SolrQuery();\n      query.setQuery( \"*:*\" );//for anything\n      query.add(\"qt\",\"/update\");\n      query.add(CommonParams.TR, \"xsl-update-handler-test.xsl\");\n      query.add(\"stream.body\", xml);\n      query.add(\"commit\", \"true\");\n      try {\n        client.query(query);\n        fail(\"This should've returned a 401.\");\n      } catch (SolrException ex) {\n        assertEquals(ErrorCode.UNAUTHORIZED.code, ex.code());\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3732e34f27916e98704736cc6924a34fffca249a","date":1490873946,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#xsltRequest(String).mjava","pathOld":"/dev/null","sourceNew":"  private void xsltRequest(String collection) throws SolrServerException, IOException {\n    String baseUrl = solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString();\n    try (HttpSolrClient client = new HttpSolrClient(baseUrl + \"/\" + collection)) {\n      String xml = \n          \"<random>\" +\n              \" <document>\" +\n              \"  <node name=\\\"id\\\" value=\\\"12345\\\"/>\" +\n              \"  <node name=\\\"name\\\" value=\\\"kitten\\\"/>\" +\n              \"  <node name=\\\"text\\\" enhance=\\\"3\\\" value=\\\"some other day\\\"/>\" +\n              \"  <node name=\\\"title\\\" enhance=\\\"4\\\" value=\\\"A story\\\"/>\" +\n              \"  <node name=\\\"timestamp\\\" enhance=\\\"5\\\" value=\\\"2011-07-01T10:31:57.140Z\\\"/>\" +\n              \" </document>\" +\n              \"</random>\";\n\n      SolrQuery query = new SolrQuery();\n      query.setQuery( \"*:*\" );//for anything\n      query.add(\"qt\",\"/update\");\n      query.add(CommonParams.TR, \"xsl-update-handler-test.xsl\");\n      query.add(\"stream.body\", xml);\n      query.add(\"commit\", \"true\");\n      try {\n        client.query(query);\n        fail(\"This should've returned a 401.\");\n      } catch (SolrException ex) {\n        assertEquals(ErrorCode.UNAUTHORIZED.code, ex.code());\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63a1978c6710c767fa084741e3d6424840003a62","date":1495850671,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#xsltRequest(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#xsltRequest(String).mjava","sourceNew":"  private void xsltRequest(String collection) throws SolrServerException, IOException {\n    String baseUrl = solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString();\n    try (HttpSolrClient client = getHttpSolrClient(baseUrl + \"/\" + collection)) {\n      String xml = \n          \"<random>\" +\n              \" <document>\" +\n              \"  <node name=\\\"id\\\" value=\\\"12345\\\"/>\" +\n              \"  <node name=\\\"name\\\" value=\\\"kitten\\\"/>\" +\n              \"  <node name=\\\"text\\\" enhance=\\\"3\\\" value=\\\"some other day\\\"/>\" +\n              \"  <node name=\\\"title\\\" enhance=\\\"4\\\" value=\\\"A story\\\"/>\" +\n              \"  <node name=\\\"timestamp\\\" enhance=\\\"5\\\" value=\\\"2011-07-01T10:31:57.140Z\\\"/>\" +\n              \" </document>\" +\n              \"</random>\";\n\n      SolrQuery query = new SolrQuery();\n      query.setQuery( \"*:*\" );//for anything\n      query.add(\"qt\",\"/update\");\n      query.add(CommonParams.TR, \"xsl-update-handler-test.xsl\");\n      query.add(\"stream.body\", xml);\n      query.add(\"commit\", \"true\");\n      try {\n        client.query(query);\n        fail(\"This should've returned a 401.\");\n      } catch (SolrException ex) {\n        assertEquals(ErrorCode.UNAUTHORIZED.code, ex.code());\n      }\n    }\n  }\n\n","sourceOld":"  private void xsltRequest(String collection) throws SolrServerException, IOException {\n    String baseUrl = solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString();\n    try (HttpSolrClient client = new HttpSolrClient(baseUrl + \"/\" + collection)) {\n      String xml = \n          \"<random>\" +\n              \" <document>\" +\n              \"  <node name=\\\"id\\\" value=\\\"12345\\\"/>\" +\n              \"  <node name=\\\"name\\\" value=\\\"kitten\\\"/>\" +\n              \"  <node name=\\\"text\\\" enhance=\\\"3\\\" value=\\\"some other day\\\"/>\" +\n              \"  <node name=\\\"title\\\" enhance=\\\"4\\\" value=\\\"A story\\\"/>\" +\n              \"  <node name=\\\"timestamp\\\" enhance=\\\"5\\\" value=\\\"2011-07-01T10:31:57.140Z\\\"/>\" +\n              \" </document>\" +\n              \"</random>\";\n\n      SolrQuery query = new SolrQuery();\n      query.setQuery( \"*:*\" );//for anything\n      query.add(\"qt\",\"/update\");\n      query.add(CommonParams.TR, \"xsl-update-handler-test.xsl\");\n      query.add(\"stream.body\", xml);\n      query.add(\"commit\", \"true\");\n      try {\n        client.query(query);\n        fail(\"This should've returned a 401.\");\n      } catch (SolrException ex) {\n        assertEquals(ErrorCode.UNAUTHORIZED.code, ex.code());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#xsltRequest(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#xsltRequest(String).mjava","sourceNew":"  private void xsltRequest(String collection) throws SolrServerException, IOException {\n    String baseUrl = solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString();\n    try (HttpSolrClient client = getHttpSolrClient(baseUrl + \"/\" + collection)) {\n      String xml = \n          \"<random>\" +\n              \" <document>\" +\n              \"  <node name=\\\"id\\\" value=\\\"12345\\\"/>\" +\n              \"  <node name=\\\"name\\\" value=\\\"kitten\\\"/>\" +\n              \"  <node name=\\\"text\\\" enhance=\\\"3\\\" value=\\\"some other day\\\"/>\" +\n              \"  <node name=\\\"title\\\" enhance=\\\"4\\\" value=\\\"A story\\\"/>\" +\n              \"  <node name=\\\"timestamp\\\" enhance=\\\"5\\\" value=\\\"2011-07-01T10:31:57.140Z\\\"/>\" +\n              \" </document>\" +\n              \"</random>\";\n\n      SolrQuery query = new SolrQuery();\n      query.setQuery( \"*:*\" );//for anything\n      query.add(\"qt\",\"/update\");\n      query.add(CommonParams.TR, \"xsl-update-handler-test.xsl\");\n      query.add(\"stream.body\", xml);\n      query.add(\"commit\", \"true\");\n      try {\n        client.query(query);\n        fail(\"This should've returned a 401.\");\n      } catch (SolrException ex) {\n        assertEquals(ErrorCode.UNAUTHORIZED.code, ex.code());\n      }\n    }\n  }\n\n","sourceOld":"  private void xsltRequest(String collection) throws SolrServerException, IOException {\n    String baseUrl = solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString();\n    try (HttpSolrClient client = new HttpSolrClient(baseUrl + \"/\" + collection)) {\n      String xml = \n          \"<random>\" +\n              \" <document>\" +\n              \"  <node name=\\\"id\\\" value=\\\"12345\\\"/>\" +\n              \"  <node name=\\\"name\\\" value=\\\"kitten\\\"/>\" +\n              \"  <node name=\\\"text\\\" enhance=\\\"3\\\" value=\\\"some other day\\\"/>\" +\n              \"  <node name=\\\"title\\\" enhance=\\\"4\\\" value=\\\"A story\\\"/>\" +\n              \"  <node name=\\\"timestamp\\\" enhance=\\\"5\\\" value=\\\"2011-07-01T10:31:57.140Z\\\"/>\" +\n              \" </document>\" +\n              \"</random>\";\n\n      SolrQuery query = new SolrQuery();\n      query.setQuery( \"*:*\" );//for anything\n      query.add(\"qt\",\"/update\");\n      query.add(CommonParams.TR, \"xsl-update-handler-test.xsl\");\n      query.add(\"stream.body\", xml);\n      query.add(\"commit\", \"true\");\n      try {\n        client.query(query);\n        fail(\"This should've returned a 401.\");\n      } catch (SolrException ex) {\n        assertEquals(ErrorCode.UNAUTHORIZED.code, ex.code());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#xsltRequest(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#xsltRequest(String).mjava","sourceNew":"  private void xsltRequest(String collection) throws SolrServerException, IOException {\n    String baseUrl = solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString();\n    try (HttpSolrClient client = getHttpSolrClient(baseUrl + \"/\" + collection)) {\n      String xml = \n          \"<random>\" +\n              \" <document>\" +\n              \"  <node name=\\\"id\\\" value=\\\"12345\\\"/>\" +\n              \"  <node name=\\\"name\\\" value=\\\"kitten\\\"/>\" +\n              \"  <node name=\\\"text\\\" enhance=\\\"3\\\" value=\\\"some other day\\\"/>\" +\n              \"  <node name=\\\"title\\\" enhance=\\\"4\\\" value=\\\"A story\\\"/>\" +\n              \"  <node name=\\\"timestamp\\\" enhance=\\\"5\\\" value=\\\"2011-07-01T10:31:57.140Z\\\"/>\" +\n              \" </document>\" +\n              \"</random>\";\n\n      SolrQuery query = new SolrQuery();\n      query.setQuery( \"*:*\" );//for anything\n      query.add(\"qt\",\"/update\");\n      query.add(CommonParams.TR, \"xsl-update-handler-test.xsl\");\n      query.add(\"stream.body\", xml);\n      query.add(\"commit\", \"true\");\n      try {\n        client.query(query);\n        fail(\"This should've returned a 401.\");\n      } catch (SolrException ex) {\n        assertEquals(ErrorCode.UNAUTHORIZED.code, ex.code());\n      }\n    }\n  }\n\n","sourceOld":"  private void xsltRequest(String collection) throws SolrServerException, IOException {\n    String baseUrl = solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString();\n    try (HttpSolrClient client = new HttpSolrClient(baseUrl + \"/\" + collection)) {\n      String xml = \n          \"<random>\" +\n              \" <document>\" +\n              \"  <node name=\\\"id\\\" value=\\\"12345\\\"/>\" +\n              \"  <node name=\\\"name\\\" value=\\\"kitten\\\"/>\" +\n              \"  <node name=\\\"text\\\" enhance=\\\"3\\\" value=\\\"some other day\\\"/>\" +\n              \"  <node name=\\\"title\\\" enhance=\\\"4\\\" value=\\\"A story\\\"/>\" +\n              \"  <node name=\\\"timestamp\\\" enhance=\\\"5\\\" value=\\\"2011-07-01T10:31:57.140Z\\\"/>\" +\n              \" </document>\" +\n              \"</random>\";\n\n      SolrQuery query = new SolrQuery();\n      query.setQuery( \"*:*\" );//for anything\n      query.add(\"qt\",\"/update\");\n      query.add(CommonParams.TR, \"xsl-update-handler-test.xsl\");\n      query.add(\"stream.body\", xml);\n      query.add(\"commit\", \"true\");\n      try {\n        client.query(query);\n        fail(\"This should've returned a 401.\");\n      } catch (SolrException ex) {\n        assertEquals(ErrorCode.UNAUTHORIZED.code, ex.code());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2238da841c6da38e6ed909d35da8f4c0ea3147b","date":1499346175,"type":4,"author":"Jan Høydahl","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#xsltRequest(String).mjava","sourceNew":null,"sourceOld":"  private void xsltRequest(String collection) throws SolrServerException, IOException {\n    String baseUrl = solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString();\n    try (HttpSolrClient client = getHttpSolrClient(baseUrl + \"/\" + collection)) {\n      String xml = \n          \"<random>\" +\n              \" <document>\" +\n              \"  <node name=\\\"id\\\" value=\\\"12345\\\"/>\" +\n              \"  <node name=\\\"name\\\" value=\\\"kitten\\\"/>\" +\n              \"  <node name=\\\"text\\\" enhance=\\\"3\\\" value=\\\"some other day\\\"/>\" +\n              \"  <node name=\\\"title\\\" enhance=\\\"4\\\" value=\\\"A story\\\"/>\" +\n              \"  <node name=\\\"timestamp\\\" enhance=\\\"5\\\" value=\\\"2011-07-01T10:31:57.140Z\\\"/>\" +\n              \" </document>\" +\n              \"</random>\";\n\n      SolrQuery query = new SolrQuery();\n      query.setQuery( \"*:*\" );//for anything\n      query.add(\"qt\",\"/update\");\n      query.add(CommonParams.TR, \"xsl-update-handler-test.xsl\");\n      query.add(\"stream.body\", xml);\n      query.add(\"commit\", \"true\");\n      try {\n        client.query(query);\n        fail(\"This should've returned a 401.\");\n      } catch (SolrException ex) {\n        assertEquals(ErrorCode.UNAUTHORIZED.code, ex.code());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e73d8d559120669b47658108d818b637df5456ea","date":1499401413,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#xsltRequest(String).mjava","sourceNew":null,"sourceOld":"  private void xsltRequest(String collection) throws SolrServerException, IOException {\n    String baseUrl = solrCluster.getJettySolrRunners().get(0).getBaseUrl().toString();\n    try (HttpSolrClient client = getHttpSolrClient(baseUrl + \"/\" + collection)) {\n      String xml = \n          \"<random>\" +\n              \" <document>\" +\n              \"  <node name=\\\"id\\\" value=\\\"12345\\\"/>\" +\n              \"  <node name=\\\"name\\\" value=\\\"kitten\\\"/>\" +\n              \"  <node name=\\\"text\\\" enhance=\\\"3\\\" value=\\\"some other day\\\"/>\" +\n              \"  <node name=\\\"title\\\" enhance=\\\"4\\\" value=\\\"A story\\\"/>\" +\n              \"  <node name=\\\"timestamp\\\" enhance=\\\"5\\\" value=\\\"2011-07-01T10:31:57.140Z\\\"/>\" +\n              \" </document>\" +\n              \"</random>\";\n\n      SolrQuery query = new SolrQuery();\n      query.setQuery( \"*:*\" );//for anything\n      query.add(\"qt\",\"/update\");\n      query.add(CommonParams.TR, \"xsl-update-handler-test.xsl\");\n      query.add(\"stream.body\", xml);\n      query.add(\"commit\", \"true\");\n      try {\n        client.query(query);\n        fail(\"This should've returned a 401.\");\n      } catch (SolrException ex) {\n        assertEquals(ErrorCode.UNAUTHORIZED.code, ex.code());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"917e62f3497c83634a13edd833e8e21dd6cc6496":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["3732e34f27916e98704736cc6924a34fffca249a","63a1978c6710c767fa084741e3d6424840003a62"],"e2238da841c6da38e6ed909d35da8f4c0ea3147b":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"63a1978c6710c767fa084741e3d6424840003a62":["917e62f3497c83634a13edd833e8e21dd6cc6496"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e73d8d559120669b47658108d818b637df5456ea":["e9017cf144952056066919f1ebc7897ff9bd71b1","e2238da841c6da38e6ed909d35da8f4c0ea3147b"],"3732e34f27916e98704736cc6924a34fffca249a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["917e62f3497c83634a13edd833e8e21dd6cc6496","63a1978c6710c767fa084741e3d6424840003a62"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e2238da841c6da38e6ed909d35da8f4c0ea3147b"]},"commit2Childs":{"917e62f3497c83634a13edd833e8e21dd6cc6496":["63a1978c6710c767fa084741e3d6424840003a62","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["e73d8d559120669b47658108d818b637df5456ea"],"e2238da841c6da38e6ed909d35da8f4c0ea3147b":["e73d8d559120669b47658108d818b637df5456ea","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"63a1978c6710c767fa084741e3d6424840003a62":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["917e62f3497c83634a13edd833e8e21dd6cc6496","3732e34f27916e98704736cc6924a34fffca249a"],"e73d8d559120669b47658108d818b637df5456ea":[],"3732e34f27916e98704736cc6924a34fffca249a":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["e2238da841c6da38e6ed909d35da8f4c0ea3147b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e73d8d559120669b47658108d818b637df5456ea","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}