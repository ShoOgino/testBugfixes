{"path":"solr/core/src/test/org/apache/solr/handler/export/TestExportWriter#testExportRequiredParams().mjava","commits":[{"id":"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80","date":1532111887,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/export/TestExportWriter#testExportRequiredParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestExportWriter#testExportRequiredParams().mjava","sourceNew":"  @Test\n  public void testExportRequiredParams() throws Exception {\n\n    //Test whether missing required parameters returns expected errors.\n\n    //String s =  h.query(req(\"q\", \"id:1\", \"qt\", \"/export\", \"fl\", \"floatdv,intdv,stringdv,longdv,doubledv\", \"sort\", \"intdv asc\"));\n    String s;\n    s = h.query(req(\"qt\", \"/export\"));\n    assertTrue(\"Should have had a sort error\", s.contains(\"No sort criteria\"));\n    s = h.query(req(\"sort\", \"intdv asc\", \"qt\", \"/export\"));\n    assertTrue(\"Should have had fl error\", s.contains(\"export field list (fl) must be specified\"));\n    s = h.query(req(\"sort\", \"intdv asc\", \"qt\", \"/export\", \"fl\", \"stringdv\"));\n    // Interesting you don't even need to specify a \"q\" parameter.\n    \n  }\n\n","sourceOld":"  @Test\n  public void testExportRequiredParams() throws Exception {\n\n    //Test whether missing required parameters returns expected errors.\n\n    //String s =  h.query(req(\"q\", \"id:1\", \"qt\", \"/export\", \"fl\", \"floatdv,intdv,stringdv,longdv,doubledv\", \"sort\", \"intdv asc\"));\n    String s;\n    s = h.query(req(\"qt\", \"/export\"));\n    assertTrue(\"Should have had a sort error\", s.contains(\"No sort criteria\"));\n    s = h.query(req(\"sort\", \"intdv asc\", \"qt\", \"/export\"));\n    assertTrue(\"Should have had fl error\", s.contains(\"export field list (fl) must be specified\"));\n    s = h.query(req(\"sort\", \"intdv asc\", \"qt\", \"/export\", \"fl\", \"stringdv\"));\n    // Interesting you don't even need to specify a \"q\" parameter.\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19ac23af87640262bab6204be31cd5c245e8b133","date":1532462944,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/export/TestExportWriter#testExportRequiredParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/export/TestExportWriter#testExportRequiredParams().mjava","sourceNew":"  private void testExportRequiredParams() throws Exception {\n\n    //Test whether missing required parameters returns expected errors.\n\n    //String s =  h.query(req(\"q\", \"id:1\", \"qt\", \"/export\", \"fl\", \"floatdv,intdv,stringdv,longdv,doubledv\", \"sort\", \"intdv asc\"));\n    String s;\n    s = h.query(req(\"qt\", \"/export\"));\n    assertTrue(\"Should have had a sort error\", s.contains(\"No sort criteria\"));\n    s = h.query(req(\"sort\", \"intdv asc\", \"qt\", \"/export\"));\n    assertTrue(\"Should have had fl error\", s.contains(\"export field list (fl) must be specified\"));\n    s = h.query(req(\"sort\", \"intdv asc\", \"qt\", \"/export\", \"fl\", \"stringdv\"));\n    // Interesting you don't even need to specify a \"q\" parameter.\n    \n  }\n\n","sourceOld":"  @Test\n  public void testExportRequiredParams() throws Exception {\n\n    //Test whether missing required parameters returns expected errors.\n\n    //String s =  h.query(req(\"q\", \"id:1\", \"qt\", \"/export\", \"fl\", \"floatdv,intdv,stringdv,longdv,doubledv\", \"sort\", \"intdv asc\"));\n    String s;\n    s = h.query(req(\"qt\", \"/export\"));\n    assertTrue(\"Should have had a sort error\", s.contains(\"No sort criteria\"));\n    s = h.query(req(\"sort\", \"intdv asc\", \"qt\", \"/export\"));\n    assertTrue(\"Should have had fl error\", s.contains(\"export field list (fl) must be specified\"));\n    s = h.query(req(\"sort\", \"intdv asc\", \"qt\", \"/export\", \"fl\", \"stringdv\"));\n    // Interesting you don't even need to specify a \"q\" parameter.\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19ac23af87640262bab6204be31cd5c245e8b133":["16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19ac23af87640262bab6204be31cd5c245e8b133"]},"commit2Childs":{"16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80":["19ac23af87640262bab6204be31cd5c245e8b133"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["16502203cfbb2b9695ec18dbb9d2d2c70dd1ff80"],"19ac23af87640262bab6204be31cd5c245e8b133":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}