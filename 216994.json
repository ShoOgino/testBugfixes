{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoBBoxRect().mjava","commits":[{"id":"f9f97ca977ad649f14b4f60a888adef2edd7a64e","date":1432702490,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoBBoxRect().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTest#testGeoBBoxRect().mjava","sourceNew":"  @Test\n  public void testGeoBBoxRect() {\n    new RectIntersectionTestHelper<Geo3dShape>(ctx) {\n\n      @Override\n      protected boolean isRandomShapeRectangular() {\n        return true;\n      }\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        // (ignoring nearP)\n        Point ulhcPoint = randomPoint();\n        Point lrhcPoint = randomPoint();\n        if (ulhcPoint.getY() < lrhcPoint.getY()) {\n          //swap\n          Point temp = ulhcPoint;\n          ulhcPoint = lrhcPoint;\n          lrhcPoint = temp;\n        }\n        final GeoShape shape = GeoBBoxFactory.makeGeoBBox(planetModel, ulhcPoint.getY() * DEGREES_TO_RADIANS,\n            lrhcPoint.getY() * DEGREES_TO_RADIANS,\n            ulhcPoint.getX() * DEGREES_TO_RADIANS,\n            lrhcPoint.getX() * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        return shape.getBoundingBox().getCenter();\n      }\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @Test\n  public void testGeoBBoxRect() {\n    new RectIntersectionTestHelper<Geo3dShape>(ctx) {\n\n      @Override\n      protected boolean isRandomShapeRectangular() {\n        return true;\n      }\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        // (ignoring nearP)\n        Point ulhcPoint = randomPoint();\n        Point lrhcPoint = randomPoint();\n        if (ulhcPoint.getY() < lrhcPoint.getY()) {\n          //swap\n          Point temp = ulhcPoint;\n          ulhcPoint = lrhcPoint;\n          lrhcPoint = temp;\n        }\n        final GeoShape shape = GeoBBoxFactory.makeGeoBBox(ulhcPoint.getY() * DEGREES_TO_RADIANS,\n            lrhcPoint.getY() * DEGREES_TO_RADIANS,\n            ulhcPoint.getX() * DEGREES_TO_RADIANS,\n            lrhcPoint.getX() * DEGREES_TO_RADIANS);\n        return new Geo3dShape(shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        return shape.getBoundingBox().getCenter();\n      }\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fec06d6753751ae302c7d35866763e6cb414112d","date":1433250698,"type":1,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoBBoxRect().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTest#testGeoBBoxRect().mjava","sourceNew":"  @Test\n  public void testGeoBBoxRect() {\n    new RectIntersectionTestHelper<Geo3dShape>(ctx) {\n\n      @Override\n      protected boolean isRandomShapeRectangular() {\n        return true;\n      }\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        // (ignoring nearP)\n        Point ulhcPoint = randomPoint();\n        Point lrhcPoint = randomPoint();\n        if (ulhcPoint.getY() < lrhcPoint.getY()) {\n          //swap\n          Point temp = ulhcPoint;\n          ulhcPoint = lrhcPoint;\n          lrhcPoint = temp;\n        }\n        final GeoShape shape = GeoBBoxFactory.makeGeoBBox(planetModel, ulhcPoint.getY() * DEGREES_TO_RADIANS,\n            lrhcPoint.getY() * DEGREES_TO_RADIANS,\n            ulhcPoint.getX() * DEGREES_TO_RADIANS,\n            lrhcPoint.getX() * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        return shape.getBoundingBox().getCenter();\n      }\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @Test\n  public void testGeoBBoxRect() {\n    new RectIntersectionTestHelper<Geo3dShape>(ctx) {\n\n      @Override\n      protected boolean isRandomShapeRectangular() {\n        return true;\n      }\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        // (ignoring nearP)\n        Point ulhcPoint = randomPoint();\n        Point lrhcPoint = randomPoint();\n        if (ulhcPoint.getY() < lrhcPoint.getY()) {\n          //swap\n          Point temp = ulhcPoint;\n          ulhcPoint = lrhcPoint;\n          lrhcPoint = temp;\n        }\n        final GeoShape shape = GeoBBoxFactory.makeGeoBBox(ulhcPoint.getY() * DEGREES_TO_RADIANS,\n            lrhcPoint.getY() * DEGREES_TO_RADIANS,\n            ulhcPoint.getX() * DEGREES_TO_RADIANS,\n            lrhcPoint.getX() * DEGREES_TO_RADIANS);\n        return new Geo3dShape(shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        return shape.getBoundingBox().getCenter();\n      }\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f272fa1627d87a9082502801ea6cb7fa2d71150","date":1434169192,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoBBoxRect().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoBBoxRect().mjava","sourceNew":"  @Test\n  public void testGeoBBoxRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected boolean isRandomShapeRectangular() {\n        return true;\n      }\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        // (ignoring nearP)\n        Point ulhcPoint = randomPoint();\n        Point lrhcPoint = randomPoint();\n        if (ulhcPoint.getY() < lrhcPoint.getY()) {\n          //swap\n          Point temp = ulhcPoint;\n          ulhcPoint = lrhcPoint;\n          lrhcPoint = temp;\n        }\n        final GeoShape shape = GeoBBoxFactory.makeGeoBBox(planetModel, ulhcPoint.getY() * DEGREES_TO_RADIANS,\n            lrhcPoint.getY() * DEGREES_TO_RADIANS,\n            ulhcPoint.getX() * DEGREES_TO_RADIANS,\n            lrhcPoint.getX() * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        return shape.getBoundingBox().getCenter();\n      }\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @Test\n  public void testGeoBBoxRect() {\n    new RectIntersectionTestHelper<Geo3dShape>(ctx) {\n\n      @Override\n      protected boolean isRandomShapeRectangular() {\n        return true;\n      }\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        // (ignoring nearP)\n        Point ulhcPoint = randomPoint();\n        Point lrhcPoint = randomPoint();\n        if (ulhcPoint.getY() < lrhcPoint.getY()) {\n          //swap\n          Point temp = ulhcPoint;\n          ulhcPoint = lrhcPoint;\n          lrhcPoint = temp;\n        }\n        final GeoShape shape = GeoBBoxFactory.makeGeoBBox(planetModel, ulhcPoint.getY() * DEGREES_TO_RADIANS,\n            lrhcPoint.getY() * DEGREES_TO_RADIANS,\n            ulhcPoint.getX() * DEGREES_TO_RADIANS,\n            lrhcPoint.getX() * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        return shape.getBoundingBox().getCenter();\n      }\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e90aaa97ec49973177b5d3513542aa87c24e849c","date":1446111033,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoBBoxRect().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoBBoxRect().mjava","sourceNew":"  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-6867\")\n  @Test\n  public void testGeoBBoxRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected boolean isRandomShapeRectangular() {\n        return true;\n      }\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        // (ignoring nearP)\n        Point ulhcPoint = randomPoint();\n        Point lrhcPoint = randomPoint();\n        if (ulhcPoint.getY() < lrhcPoint.getY()) {\n          //swap\n          Point temp = ulhcPoint;\n          ulhcPoint = lrhcPoint;\n          lrhcPoint = temp;\n        }\n        final GeoShape shape = GeoBBoxFactory.makeGeoBBox(planetModel, ulhcPoint.getY() * DEGREES_TO_RADIANS,\n            lrhcPoint.getY() * DEGREES_TO_RADIANS,\n            ulhcPoint.getX() * DEGREES_TO_RADIANS,\n            lrhcPoint.getX() * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        return shape.getBoundingBox().getCenter();\n      }\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @Test\n  public void testGeoBBoxRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected boolean isRandomShapeRectangular() {\n        return true;\n      }\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        // (ignoring nearP)\n        Point ulhcPoint = randomPoint();\n        Point lrhcPoint = randomPoint();\n        if (ulhcPoint.getY() < lrhcPoint.getY()) {\n          //swap\n          Point temp = ulhcPoint;\n          ulhcPoint = lrhcPoint;\n          lrhcPoint = temp;\n        }\n        final GeoShape shape = GeoBBoxFactory.makeGeoBBox(planetModel, ulhcPoint.getY() * DEGREES_TO_RADIANS,\n            lrhcPoint.getY() * DEGREES_TO_RADIANS,\n            ulhcPoint.getX() * DEGREES_TO_RADIANS,\n            lrhcPoint.getX() * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        return shape.getBoundingBox().getCenter();\n      }\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoBBoxRect().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoBBoxRect().mjava","sourceNew":"  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-6867\")\n  @Test\n  public void testGeoBBoxRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected boolean isRandomShapeRectangular() {\n        return true;\n      }\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        // (ignoring nearP)\n        Point ulhcPoint = randomPoint();\n        Point lrhcPoint = randomPoint();\n        if (ulhcPoint.getY() < lrhcPoint.getY()) {\n          //swap\n          Point temp = ulhcPoint;\n          ulhcPoint = lrhcPoint;\n          lrhcPoint = temp;\n        }\n        final GeoShape shape = GeoBBoxFactory.makeGeoBBox(planetModel, ulhcPoint.getY() * DEGREES_TO_RADIANS,\n            lrhcPoint.getY() * DEGREES_TO_RADIANS,\n            ulhcPoint.getX() * DEGREES_TO_RADIANS,\n            lrhcPoint.getX() * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        return shape.getBoundingBox().getCenter();\n      }\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-6867\")\n  @Test\n  public void testGeoBBoxRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected boolean isRandomShapeRectangular() {\n        return true;\n      }\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        // (ignoring nearP)\n        Point ulhcPoint = randomPoint();\n        Point lrhcPoint = randomPoint();\n        if (ulhcPoint.getY() < lrhcPoint.getY()) {\n          //swap\n          Point temp = ulhcPoint;\n          ulhcPoint = lrhcPoint;\n          lrhcPoint = temp;\n        }\n        final GeoShape shape = GeoBBoxFactory.makeGeoBBox(planetModel, ulhcPoint.getY() * DEGREES_TO_RADIANS,\n            lrhcPoint.getY() * DEGREES_TO_RADIANS,\n            ulhcPoint.getX() * DEGREES_TO_RADIANS,\n            lrhcPoint.getX() * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        return shape.getBoundingBox().getCenter();\n      }\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoBBoxRect().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoBBoxRect().mjava","sourceNew":"  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-6867\")\n  @Test\n  public void testGeoBBoxRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected boolean isRandomShapeRectangular() {\n        return true;\n      }\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        // (ignoring nearP)\n        Point ulhcPoint = randomPoint();\n        Point lrhcPoint = randomPoint();\n        if (ulhcPoint.getY() < lrhcPoint.getY()) {\n          //swap\n          Point temp = ulhcPoint;\n          ulhcPoint = lrhcPoint;\n          lrhcPoint = temp;\n        }\n        final GeoShape shape = GeoBBoxFactory.makeGeoBBox(planetModel, ulhcPoint.getY() * DEGREES_TO_RADIANS,\n            lrhcPoint.getY() * DEGREES_TO_RADIANS,\n            ulhcPoint.getX() * DEGREES_TO_RADIANS,\n            lrhcPoint.getX() * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        return shape.getBoundingBox().getCenter();\n      }\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-6867\")\n  @Test\n  public void testGeoBBoxRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected boolean isRandomShapeRectangular() {\n        return true;\n      }\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        // (ignoring nearP)\n        Point ulhcPoint = randomPoint();\n        Point lrhcPoint = randomPoint();\n        if (ulhcPoint.getY() < lrhcPoint.getY()) {\n          //swap\n          Point temp = ulhcPoint;\n          ulhcPoint = lrhcPoint;\n          lrhcPoint = temp;\n        }\n        final GeoShape shape = GeoBBoxFactory.makeGeoBBox(planetModel, ulhcPoint.getY() * DEGREES_TO_RADIANS,\n            lrhcPoint.getY() * DEGREES_TO_RADIANS,\n            ulhcPoint.getX() * DEGREES_TO_RADIANS,\n            lrhcPoint.getX() * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        return shape.getBoundingBox().getCenter();\n      }\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["e90aaa97ec49973177b5d3513542aa87c24e849c","112d77ac8d3e10a362516ad834c9a11d35c94234"],"3f272fa1627d87a9082502801ea6cb7fa2d71150":["fec06d6753751ae302c7d35866763e6cb414112d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fec06d6753751ae302c7d35866763e6cb414112d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["e90aaa97ec49973177b5d3513542aa87c24e849c"],"e90aaa97ec49973177b5d3513542aa87c24e849c":["3f272fa1627d87a9082502801ea6cb7fa2d71150"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3f272fa1627d87a9082502801ea6cb7fa2d71150":["e90aaa97ec49973177b5d3513542aa87c24e849c"],"fec06d6753751ae302c7d35866763e6cb414112d":["3f272fa1627d87a9082502801ea6cb7fa2d71150"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fec06d6753751ae302c7d35866763e6cb414112d","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"e90aaa97ec49973177b5d3513542aa87c24e849c":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["fec06d6753751ae302c7d35866763e6cb414112d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}