{"path":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,int...).mjava","commits":[{"id":"a71f63026529f3c1f03cfdd664910873ab2369ae","date":1497543264,"type":1,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,int...).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,float...).mjava","sourceNew":"  void createIndex(String field, int... values) {\n    // lrf.args.put(\"version\",\"2.0\");\n    for (int val : values) {\n      String s = Integer.toString(val);\n\n      if (field!=null) assertU(adoc(\"id\", s, field, s));\n      else assertU(adoc(\"id\", s));\n\n      if (random().nextInt(100) < 20) {\n        if (field!=null) assertU(adoc(\"id\", s, field, s));\n        else assertU(adoc(\"id\", s));\n      }\n\n      if (random().nextInt(100) < 20) {\n        assertU(commit());\n\n      }\n\n\n      // System.out.println(\"added doc for \" + val);\n    }\n    // assertU(optimize()); // squeeze out any possible deleted docs\n    assertU(commit());\n  }\n\n","sourceOld":"  void createIndex(String field, float... values) {\n    // lrf.args.put(\"version\",\"2.0\");\n    for (float val : values) {\n      String s = Float.toString(val);\n\n      if (field!=null) assertU(adoc(\"id\", s, field, s));\n      else assertU(adoc(\"id\", s));\n\n      if (random().nextInt(100) < 20) {\n        if (field!=null) assertU(adoc(\"id\", s, field, s));\n        else assertU(adoc(\"id\", s));\n      }\n\n      if (random().nextInt(100) < 20) {\n        assertU(commit());\n\n      }\n\n\n      // System.out.println(\"added doc for \" + val);\n    }\n    // assertU(optimize()); // squeeze out any possible deleted docs\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":1,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,int...).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,float...).mjava","sourceNew":"  void createIndex(String field, int... values) {\n    // lrf.args.put(\"version\",\"2.0\");\n    for (int val : values) {\n      String s = Integer.toString(val);\n\n      if (field!=null) assertU(adoc(\"id\", s, field, s));\n      else assertU(adoc(\"id\", s));\n\n      if (random().nextInt(100) < 20) {\n        if (field!=null) assertU(adoc(\"id\", s, field, s));\n        else assertU(adoc(\"id\", s));\n      }\n\n      if (random().nextInt(100) < 20) {\n        assertU(commit());\n\n      }\n\n\n      // System.out.println(\"added doc for \" + val);\n    }\n    // assertU(optimize()); // squeeze out any possible deleted docs\n    assertU(commit());\n  }\n\n","sourceOld":"  void createIndex(String field, float... values) {\n    // lrf.args.put(\"version\",\"2.0\");\n    for (float val : values) {\n      String s = Float.toString(val);\n\n      if (field!=null) assertU(adoc(\"id\", s, field, s));\n      else assertU(adoc(\"id\", s));\n\n      if (random().nextInt(100) < 20) {\n        if (field!=null) assertU(adoc(\"id\", s, field, s));\n        else assertU(adoc(\"id\", s));\n      }\n\n      if (random().nextInt(100) < 20) {\n        assertU(commit());\n\n      }\n\n\n      // System.out.println(\"added doc for \" + val);\n    }\n    // assertU(optimize()); // squeeze out any possible deleted docs\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#createIndex(String,int...).mjava","pathOld":"/dev/null","sourceNew":"  void createIndex(String field, int... values) {\n    // lrf.args.put(\"version\",\"2.0\");\n    for (int val : values) {\n      String s = Integer.toString(val);\n\n      if (field!=null) assertU(adoc(\"id\", s, field, s));\n      else assertU(adoc(\"id\", s));\n\n      if (random().nextInt(100) < 20) {\n        if (field!=null) assertU(adoc(\"id\", s, field, s));\n        else assertU(adoc(\"id\", s));\n      }\n\n      if (random().nextInt(100) < 20) {\n        assertU(commit());\n\n      }\n\n\n      // System.out.println(\"added doc for \" + val);\n    }\n    // assertU(optimize()); // squeeze out any possible deleted docs\n    assertU(commit());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a71f63026529f3c1f03cfdd664910873ab2369ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a71f63026529f3c1f03cfdd664910873ab2369ae"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a71f63026529f3c1f03cfdd664910873ab2369ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a71f63026529f3c1f03cfdd664910873ab2369ae","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}