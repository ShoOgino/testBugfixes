{"path":"contrib/queries/src/test/org/apache/lucene/search/similar/TestMoreLikeThis#getOriginalValues().mjava","commits":[{"id":"5ec885674566fc1fa7869f52f030c3a4f8d80ab6","date":1247590576,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queries/src/test/org/apache/lucene/search/similar/TestMoreLikeThis#getOriginalValues().mjava","pathOld":"/dev/null","sourceNew":"    private Map getOriginalValues() throws IOException {\n\tMap originalValues = new HashMap();\n\tMoreLikeThis mlt = new MoreLikeThis(reader);\n\tmlt.setMinDocFreq(1);\n\tmlt.setMinTermFreq(1);\n\tmlt.setMinWordLen(1);\n\tmlt.setFieldNames(new String[] { \"text\" });\n\tmlt.setBoost(true);\n\tBooleanQuery query = (BooleanQuery) mlt.like(new StringReader(\n\t\t\"lucene release\"));\n\tList clauses = query.clauses();\n\n\tfor (int i = 0; i < clauses.size(); i++) {\n\t    BooleanClause clause = (BooleanClause) clauses.get(i);\n\t    TermQuery tq = (TermQuery) clause.getQuery();\n\t    originalValues.put(tq.getTerm().text(), new Float(tq.getBoost()));\n\t}\n\treturn originalValues;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bcde5e3f23911110baa101ed062b544162825b5","date":1254521804,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queries/src/test/org/apache/lucene/search/similar/TestMoreLikeThis#getOriginalValues().mjava","pathOld":"contrib/queries/src/test/org/apache/lucene/search/similar/TestMoreLikeThis#getOriginalValues().mjava","sourceNew":"    private Map getOriginalValues() throws IOException {\n\tMap originalValues = new HashMap();\n\tMoreLikeThis mlt = new MoreLikeThis(reader);\n\tmlt.setMinDocFreq(1);\n\tmlt.setMinTermFreq(1);\n\tmlt.setMinWordLen(1);\n\tmlt.setFieldNames(new String[] { \"text\" });\n\tmlt.setBoost(true);\n\tBooleanQuery query = (BooleanQuery) mlt.like(new StringReader(\n\t\t\"lucene release\"));\n\tList clauses = query.clauses();\n\n\tfor (int i = 0; i < clauses.size(); i++) {\n\t    BooleanClause clause = (BooleanClause) clauses.get(i);\n\t    TermQuery tq = (TermQuery) clause.getQuery();\n\t    originalValues.put(tq.getTerm().text(), Float.valueOf(tq.getBoost()));\n\t}\n\treturn originalValues;\n    }\n\n","sourceOld":"    private Map getOriginalValues() throws IOException {\n\tMap originalValues = new HashMap();\n\tMoreLikeThis mlt = new MoreLikeThis(reader);\n\tmlt.setMinDocFreq(1);\n\tmlt.setMinTermFreq(1);\n\tmlt.setMinWordLen(1);\n\tmlt.setFieldNames(new String[] { \"text\" });\n\tmlt.setBoost(true);\n\tBooleanQuery query = (BooleanQuery) mlt.like(new StringReader(\n\t\t\"lucene release\"));\n\tList clauses = query.clauses();\n\n\tfor (int i = 0; i < clauses.size(); i++) {\n\t    BooleanClause clause = (BooleanClause) clauses.get(i);\n\t    TermQuery tq = (TermQuery) clause.getQuery();\n\t    originalValues.put(tq.getTerm().text(), new Float(tq.getBoost()));\n\t}\n\treturn originalValues;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7848880b3c06f09f0f3ac50d0854b16efb0b815e","date":1260006234,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queries/src/test/org/apache/lucene/search/similar/TestMoreLikeThis#getOriginalValues().mjava","pathOld":"contrib/queries/src/test/org/apache/lucene/search/similar/TestMoreLikeThis#getOriginalValues().mjava","sourceNew":"    private Map<String,Float> getOriginalValues() throws IOException {\n\tMap<String,Float> originalValues = new HashMap<String,Float>();\n\tMoreLikeThis mlt = new MoreLikeThis(reader);\n\tmlt.setMinDocFreq(1);\n\tmlt.setMinTermFreq(1);\n\tmlt.setMinWordLen(1);\n\tmlt.setFieldNames(new String[] { \"text\" });\n\tmlt.setBoost(true);\n\tBooleanQuery query = (BooleanQuery) mlt.like(new StringReader(\n\t\t\"lucene release\"));\n\tList<BooleanClause> clauses = query.clauses();\n\n\tfor (int i = 0; i < clauses.size(); i++) {\n\t    BooleanClause clause = clauses.get(i);\n\t    TermQuery tq = (TermQuery) clause.getQuery();\n\t    originalValues.put(tq.getTerm().text(), Float.valueOf(tq.getBoost()));\n\t}\n\treturn originalValues;\n    }\n\n","sourceOld":"    private Map getOriginalValues() throws IOException {\n\tMap originalValues = new HashMap();\n\tMoreLikeThis mlt = new MoreLikeThis(reader);\n\tmlt.setMinDocFreq(1);\n\tmlt.setMinTermFreq(1);\n\tmlt.setMinWordLen(1);\n\tmlt.setFieldNames(new String[] { \"text\" });\n\tmlt.setBoost(true);\n\tBooleanQuery query = (BooleanQuery) mlt.like(new StringReader(\n\t\t\"lucene release\"));\n\tList clauses = query.clauses();\n\n\tfor (int i = 0; i < clauses.size(); i++) {\n\t    BooleanClause clause = (BooleanClause) clauses.get(i);\n\t    TermQuery tq = (TermQuery) clause.getQuery();\n\t    originalValues.put(tq.getTerm().text(), Float.valueOf(tq.getBoost()));\n\t}\n\treturn originalValues;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/similar/TestMoreLikeThis#getOriginalValues().mjava","pathOld":"contrib/queries/src/test/org/apache/lucene/search/similar/TestMoreLikeThis#getOriginalValues().mjava","sourceNew":"    private Map<String,Float> getOriginalValues() throws IOException {\n\tMap<String,Float> originalValues = new HashMap<String,Float>();\n\tMoreLikeThis mlt = new MoreLikeThis(reader);\n\tmlt.setMinDocFreq(1);\n\tmlt.setMinTermFreq(1);\n\tmlt.setMinWordLen(1);\n\tmlt.setFieldNames(new String[] { \"text\" });\n\tmlt.setBoost(true);\n\tBooleanQuery query = (BooleanQuery) mlt.like(new StringReader(\n\t\t\"lucene release\"));\n\tList<BooleanClause> clauses = query.clauses();\n\n\tfor (int i = 0; i < clauses.size(); i++) {\n\t    BooleanClause clause = clauses.get(i);\n\t    TermQuery tq = (TermQuery) clause.getQuery();\n\t    originalValues.put(tq.getTerm().text(), Float.valueOf(tq.getBoost()));\n\t}\n\treturn originalValues;\n    }\n\n","sourceOld":"    private Map<String,Float> getOriginalValues() throws IOException {\n\tMap<String,Float> originalValues = new HashMap<String,Float>();\n\tMoreLikeThis mlt = new MoreLikeThis(reader);\n\tmlt.setMinDocFreq(1);\n\tmlt.setMinTermFreq(1);\n\tmlt.setMinWordLen(1);\n\tmlt.setFieldNames(new String[] { \"text\" });\n\tmlt.setBoost(true);\n\tBooleanQuery query = (BooleanQuery) mlt.like(new StringReader(\n\t\t\"lucene release\"));\n\tList<BooleanClause> clauses = query.clauses();\n\n\tfor (int i = 0; i < clauses.size(); i++) {\n\t    BooleanClause clause = clauses.get(i);\n\t    TermQuery tq = (TermQuery) clause.getQuery();\n\t    originalValues.put(tq.getTerm().text(), Float.valueOf(tq.getBoost()));\n\t}\n\treturn originalValues;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6bcde5e3f23911110baa101ed062b544162825b5":["5ec885674566fc1fa7869f52f030c3a4f8d80ab6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5ec885674566fc1fa7869f52f030c3a4f8d80ab6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7848880b3c06f09f0f3ac50d0854b16efb0b815e":["6bcde5e3f23911110baa101ed062b544162825b5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7848880b3c06f09f0f3ac50d0854b16efb0b815e"]},"commit2Childs":{"6bcde5e3f23911110baa101ed062b544162825b5":["7848880b3c06f09f0f3ac50d0854b16efb0b815e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5ec885674566fc1fa7869f52f030c3a4f8d80ab6"],"5ec885674566fc1fa7869f52f030c3a4f8d80ab6":["6bcde5e3f23911110baa101ed062b544162825b5"],"7848880b3c06f09f0f3ac50d0854b16efb0b815e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}