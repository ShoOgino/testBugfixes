{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#notifyListener(EventListener,Exception).mjava","commits":[{"id":"29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5","date":1406290788,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#notifyListener(EventListener,Exception).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#notifyListener(EventListener).mjava","sourceNew":"  private void notifyListener(EventListener listener, Exception lastException) {\n    String currentProcess;\n    if (dataImporter.getStatus() == DataImporter.Status.RUNNING_DELTA_DUMP) {\n      currentProcess = Context.DELTA_DUMP;\n    } else {\n      currentProcess = Context.FULL_DUMP;\n    }\n    ContextImpl ctx = new ContextImpl(null, getVariableResolver(), null, currentProcess, session, null, this);\n    ctx.lastException = lastException;\n    listener.onEvent(ctx);\n  }\n\n","sourceOld":"  private void notifyListener(EventListener listener) {\n    String currentProcess;\n    if (dataImporter.getStatus() == DataImporter.Status.RUNNING_DELTA_DUMP) {\n      currentProcess = Context.DELTA_DUMP;\n    } else {\n      currentProcess = Context.FULL_DUMP;\n    }\n    listener.onEvent(new ContextImpl(null, getVariableResolver(), null, currentProcess, session, null, this));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"550321a861a3880e4be61b456ab104e34c2e5ae8","date":1418056877,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#notifyListener(EventListener,Exception).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#notifyListener(EventListener,Exception).mjava","sourceNew":"  private void notifyListener(EventListener listener, Exception lastException) {\n    String currentProcess;\n    if (dataImporter.getStatus() == DataImporter.Status.RUNNING_DELTA_DUMP) {\n      currentProcess = Context.DELTA_DUMP;\n    } else {\n      currentProcess = Context.FULL_DUMP;\n    }\n    ContextImpl ctx = new ContextImpl(null, getVariableResolver(), null, currentProcess, session, null, this);\n    ctx.setLastException(lastException);\n    listener.onEvent(ctx);\n  }\n\n","sourceOld":"  private void notifyListener(EventListener listener, Exception lastException) {\n    String currentProcess;\n    if (dataImporter.getStatus() == DataImporter.Status.RUNNING_DELTA_DUMP) {\n      currentProcess = Context.DELTA_DUMP;\n    } else {\n      currentProcess = Context.FULL_DUMP;\n    }\n    ContextImpl ctx = new ContextImpl(null, getVariableResolver(), null, currentProcess, session, null, this);\n    ctx.lastException = lastException;\n    listener.onEvent(ctx);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#notifyListener(EventListener,Exception).mjava","sourceNew":null,"sourceOld":"  private void notifyListener(EventListener listener, Exception lastException) {\n    String currentProcess;\n    if (dataImporter.getStatus() == DataImporter.Status.RUNNING_DELTA_DUMP) {\n      currentProcess = Context.DELTA_DUMP;\n    } else {\n      currentProcess = Context.FULL_DUMP;\n    }\n    ContextImpl ctx = new ContextImpl(null, getVariableResolver(), null, currentProcess, session, null, this);\n    ctx.setLastException(lastException);\n    listener.onEvent(ctx);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["550321a861a3880e4be61b456ab104e34c2e5ae8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"550321a861a3880e4be61b456ab104e34c2e5ae8":["29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5"],"29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5"],"550321a861a3880e4be61b456ab104e34c2e5ae8":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5":["550321a861a3880e4be61b456ab104e34c2e5ae8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}