{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockPackedValuesRange(IndexOutput,int[],int,int,IntFunction[BytesRef]).mjava","commits":[{"id":"3ca40baa99f9578eb8408ee5b9177f7ffe6f65d6","date":1468339076,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockPackedValuesRange(IndexOutput,int[],int,int,IntFunction[BytesRef]).mjava","pathOld":"/dev/null","sourceNew":"  private void writeLeafBlockPackedValuesRange(IndexOutput out, int[] commonPrefixLengths, int start, int end, IntFunction<BytesRef> packedValues) throws IOException {\n    for (int i = start; i < end; ++i) {\n      BytesRef ref = packedValues.apply(i);\n      assert ref.length == packedBytesLength;\n\n      for(int dim=0;dim<numDims;dim++) {\n        int prefix = commonPrefixLengths[dim];\n        out.writeBytes(ref.bytes, ref.offset + dim*bytesPerDim + prefix, bytesPerDim-prefix);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockPackedValuesRange(IndexOutput,int[],int,int,IntFunction[BytesRef]).mjava","pathOld":"/dev/null","sourceNew":"  private void writeLeafBlockPackedValuesRange(IndexOutput out, int[] commonPrefixLengths, int start, int end, IntFunction<BytesRef> packedValues) throws IOException {\n    for (int i = start; i < end; ++i) {\n      BytesRef ref = packedValues.apply(i);\n      assert ref.length == packedBytesLength;\n\n      for(int dim=0;dim<numDims;dim++) {\n        int prefix = commonPrefixLengths[dim];\n        out.writeBytes(ref.bytes, ref.offset + dim*bytesPerDim + prefix, bytesPerDim-prefix);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9","date":1481155163,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockPackedValuesRange(DataOutput,int[],int,int,IntFunction[BytesRef]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockPackedValuesRange(IndexOutput,int[],int,int,IntFunction[BytesRef]).mjava","sourceNew":"  private void writeLeafBlockPackedValuesRange(DataOutput out, int[] commonPrefixLengths, int start, int end, IntFunction<BytesRef> packedValues) throws IOException {\n    for (int i = start; i < end; ++i) {\n      BytesRef ref = packedValues.apply(i);\n      assert ref.length == packedBytesLength;\n\n      for(int dim=0;dim<numDims;dim++) {\n        int prefix = commonPrefixLengths[dim];\n        out.writeBytes(ref.bytes, ref.offset + dim*bytesPerDim + prefix, bytesPerDim-prefix);\n      }\n    }\n  }\n\n","sourceOld":"  private void writeLeafBlockPackedValuesRange(IndexOutput out, int[] commonPrefixLengths, int start, int end, IntFunction<BytesRef> packedValues) throws IOException {\n    for (int i = start; i < end; ++i) {\n      BytesRef ref = packedValues.apply(i);\n      assert ref.length == packedBytesLength;\n\n      for(int dim=0;dim<numDims;dim++) {\n        int prefix = commonPrefixLengths[dim];\n        out.writeBytes(ref.bytes, ref.offset + dim*bytesPerDim + prefix, bytesPerDim-prefix);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextBKDWriter#writeLeafBlockPackedValuesRange(IndexOutput,int[],int,int,IntFunction[BytesRef]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockPackedValuesRange(IndexOutput,int[],int,int,IntFunction[BytesRef]).mjava","sourceNew":"  private void writeLeafBlockPackedValuesRange(IndexOutput out, int[] commonPrefixLengths, int start, int end, IntFunction<BytesRef> packedValues) throws IOException {\n    for (int i = start; i < end; ++i) {\n      BytesRef ref = packedValues.apply(i);\n      assert ref.length == packedBytesLength;\n\n      for(int dim=0;dim<numDims;dim++) {\n        int prefix = commonPrefixLengths[dim];\n        out.writeBytes(ref.bytes, ref.offset + dim*bytesPerDim + prefix, bytesPerDim-prefix);\n      }\n    }\n  }\n\n","sourceOld":"  private void writeLeafBlockPackedValuesRange(IndexOutput out, int[] commonPrefixLengths, int start, int end, IntFunction<BytesRef> packedValues) throws IOException {\n    for (int i = start; i < end; ++i) {\n      BytesRef ref = packedValues.apply(i);\n      assert ref.length == packedBytesLength;\n\n      for(int dim=0;dim<numDims;dim++) {\n        int prefix = commonPrefixLengths[dim];\n        out.writeBytes(ref.bytes, ref.offset + dim*bytesPerDim + prefix, bytesPerDim-prefix);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3ca40baa99f9578eb8408ee5b9177f7ffe6f65d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9856095f7afb5a607bf5e65077615ed91273508c":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3ca40baa99f9578eb8408ee5b9177f7ffe6f65d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9"],"c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9":["3ca40baa99f9578eb8408ee5b9177f7ffe6f65d6"]},"commit2Childs":{"3ca40baa99f9578eb8408ee5b9177f7ffe6f65d6":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3ca40baa99f9578eb8408ee5b9177f7ffe6f65d6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"9856095f7afb5a607bf5e65077615ed91273508c":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["9856095f7afb5a607bf5e65077615ed91273508c"],"c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}