{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsIndex.DiskDocFieldsIndexReader#DiskDocFieldsIndexReader(IndexInput,SegmentInfo).mjava","commits":[{"id":"7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa","date":1349450075,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsIndex.DiskDocFieldsIndexReader#DiskDocFieldsIndexReader(IndexInput,SegmentInfo).mjava","pathOld":"/dev/null","sourceNew":"    DiskDocFieldsIndexReader(IndexInput fieldsIndexIn, SegmentInfo si) throws CorruptIndexException {\n      this(fieldsIndexIn, fieldsIndexIn.getFilePointer());\n      final long indexSize = fieldsIndexIn.length() - fieldsIndexIn.getFilePointer();\n      final int numDocs = (int) (indexSize >> 3);\n      // Verify two sources of \"maxDoc\" agree:\n      if (numDocs != si.getDocCount()) {\n        throw new CorruptIndexException(\"doc counts differ for segment \" + si + \": fieldsReader shows \" + numDocs + \" but segmentInfo shows \" + si.getDocCount());\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a96cceee825e15cd8e042b683d404086e2a58d1","date":1351872237,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsIndex.DiskDocFieldsIndexReader#DiskDocFieldsIndexReader(IndexInput,SegmentInfo).mjava","sourceNew":null,"sourceOld":"    DiskDocFieldsIndexReader(IndexInput fieldsIndexIn, SegmentInfo si) throws CorruptIndexException {\n      this(fieldsIndexIn, fieldsIndexIn.getFilePointer());\n      final long indexSize = fieldsIndexIn.length() - fieldsIndexIn.getFilePointer();\n      final int numDocs = (int) (indexSize >> 3);\n      // Verify two sources of \"maxDoc\" agree:\n      if (numDocs != si.getDocCount()) {\n        throw new CorruptIndexException(\"doc counts differ for segment \" + si + \": fieldsReader shows \" + numDocs + \" but segmentInfo shows \" + si.getDocCount());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a96cceee825e15cd8e042b683d404086e2a58d1":["7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa"],"7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0a96cceee825e15cd8e042b683d404086e2a58d1"]},"commit2Childs":{"0a96cceee825e15cd8e042b683d404086e2a58d1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa":["0a96cceee825e15cd8e042b683d404086e2a58d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}