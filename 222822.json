{"path":"solr/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","commits":[{"id":"43adc163640856c8b07e4cf1b2046c9af56d3ae7","date":1286989273,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"/dev/null","sourceNew":"  @Test\r\n  public void testUploadToCloud() throws Exception {\r\n    String zkDir = dataDir.getAbsolutePath() + File.separator\r\n        + \"zookeeper/server1/data\";\r\n\r\n    ZkTestServer server = new ZkTestServer(zkDir);\r\n    ZkController zkController = null;\r\n    try {\r\n      server.run();\r\n\r\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\r\n\r\n      zkController = new ZkController(server.getZkAddress(),\r\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\r\n\r\n      zkController.uploadToZK(new File(\"solr/conf\"),\r\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\r\n\r\n      if (DEBUG) {\r\n        zkController.printLayoutToStdOut();\r\n      }\r\n\r\n    } finally {\r\n      if (zkController != null) {\r\n        zkController.close();\r\n      }\r\n      server.shutdown();\r\n    }\r\n\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"/dev/null","sourceNew":"  @Test\r\n  public void testUploadToCloud() throws Exception {\r\n    String zkDir = dataDir.getAbsolutePath() + File.separator\r\n        + \"zookeeper/server1/data\";\r\n\r\n    ZkTestServer server = new ZkTestServer(zkDir);\r\n    ZkController zkController = null;\r\n    try {\r\n      server.run();\r\n\r\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\r\n\r\n      zkController = new ZkController(server.getZkAddress(),\r\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\r\n\r\n      zkController.uploadToZK(new File(\"solr/conf\"),\r\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\r\n\r\n      if (DEBUG) {\r\n        zkController.printLayoutToStdOut();\r\n      }\r\n\r\n    } finally {\r\n      if (zkController != null) {\r\n        zkController.close();\r\n      }\r\n      server.shutdown();\r\n    }\r\n\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"/dev/null","sourceNew":"  @Test\r\n  public void testUploadToCloud() throws Exception {\r\n    String zkDir = dataDir.getAbsolutePath() + File.separator\r\n        + \"zookeeper/server1/data\";\r\n\r\n    ZkTestServer server = new ZkTestServer(zkDir);\r\n    ZkController zkController = null;\r\n    try {\r\n      server.run();\r\n\r\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\r\n\r\n      zkController = new ZkController(server.getZkAddress(),\r\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\r\n\r\n      zkController.uploadToZK(new File(\"solr/conf\"),\r\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\r\n\r\n      if (DEBUG) {\r\n        zkController.printLayoutToStdOut();\r\n      }\r\n\r\n    } finally {\r\n      if (zkController != null) {\r\n        zkController.close();\r\n      }\r\n      server.shutdown();\r\n    }\r\n\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6da674254994fc11839b3f6ad511ef8871a94f7","date":1293591321,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\r\n  public void testUploadToCloud() throws Exception {\r\n    String zkDir = dataDir.getAbsolutePath() + File.separator\r\n        + \"zookeeper/server1/data\";\r\n\r\n    ZkTestServer server = new ZkTestServer(zkDir);\r\n    ZkController zkController = null;\r\n    try {\r\n      server.run();\r\n\r\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\r\n\r\n      zkController = new ZkController(server.getZkAddress(),\r\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\r\n\r\n      zkController.uploadToZK(getFile(\"solr/conf\"),\r\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\r\n\r\n      if (DEBUG) {\r\n        zkController.printLayoutToStdOut();\r\n      }\r\n\r\n    } finally {\r\n      if (zkController != null) {\r\n        zkController.close();\r\n      }\r\n      server.shutdown();\r\n    }\r\n\r\n  }\r\n\n","sourceOld":"  @Test\r\n  public void testUploadToCloud() throws Exception {\r\n    String zkDir = dataDir.getAbsolutePath() + File.separator\r\n        + \"zookeeper/server1/data\";\r\n\r\n    ZkTestServer server = new ZkTestServer(zkDir);\r\n    ZkController zkController = null;\r\n    try {\r\n      server.run();\r\n\r\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\r\n\r\n      zkController = new ZkController(server.getZkAddress(),\r\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\r\n\r\n      zkController.uploadToZK(new File(\"solr/conf\"),\r\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\r\n\r\n      if (DEBUG) {\r\n        zkController.printLayoutToStdOut();\r\n      }\r\n\r\n    } finally {\r\n      if (zkController != null) {\r\n        zkController.close();\r\n      }\r\n      server.shutdown();\r\n    }\r\n\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","date":1294014627,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\r\n  public void testUploadToCloud() throws Exception {\r\n    String zkDir = dataDir.getAbsolutePath() + File.separator\r\n        + \"zookeeper/server1/data\";\r\n\r\n    ZkTestServer server = new ZkTestServer(zkDir);\r\n    ZkController zkController = null;\r\n    try {\r\n      server.run();\r\n\r\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\r\n\r\n      zkController = new ZkController(server.getZkAddress(),\r\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\r\n\r\n      zkController.uploadToZK(getFile(\"solr/conf\"),\r\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\r\n\r\n      if (DEBUG) {\r\n        zkController.printLayoutToStdOut();\r\n      }\r\n\r\n    } finally {\r\n      if (zkController != null) {\r\n        zkController.close();\r\n      }\r\n      server.shutdown();\r\n    }\r\n\r\n  }\r\n\n","sourceOld":"  @Test\r\n  public void testUploadToCloud() throws Exception {\r\n    String zkDir = dataDir.getAbsolutePath() + File.separator\r\n        + \"zookeeper/server1/data\";\r\n\r\n    ZkTestServer server = new ZkTestServer(zkDir);\r\n    ZkController zkController = null;\r\n    try {\r\n      server.run();\r\n\r\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\r\n\r\n      zkController = new ZkController(server.getZkAddress(),\r\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\r\n\r\n      zkController.uploadToZK(new File(\"solr/conf\"),\r\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\r\n\r\n      if (DEBUG) {\r\n        zkController.printLayoutToStdOut();\r\n      }\r\n\r\n    } finally {\r\n      if (zkController != null) {\r\n        zkController.close();\r\n      }\r\n      server.shutdown();\r\n    }\r\n\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\r\n  public void testUploadToCloud() throws Exception {\r\n    String zkDir = dataDir.getAbsolutePath() + File.separator\r\n        + \"zookeeper/server1/data\";\r\n\r\n    ZkTestServer server = new ZkTestServer(zkDir);\r\n    ZkController zkController = null;\r\n    try {\r\n      server.run();\r\n\r\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\r\n\r\n      zkController = new ZkController(server.getZkAddress(),\r\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\r\n\r\n      zkController.uploadToZK(getFile(\"solr/conf\"),\r\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\r\n\r\n      if (DEBUG) {\r\n        zkController.printLayoutToStdOut();\r\n      }\r\n\r\n    } finally {\r\n      if (zkController != null) {\r\n        zkController.close();\r\n      }\r\n      server.shutdown();\r\n    }\r\n\r\n  }\r\n\n","sourceOld":"  @Test\r\n  public void testUploadToCloud() throws Exception {\r\n    String zkDir = dataDir.getAbsolutePath() + File.separator\r\n        + \"zookeeper/server1/data\";\r\n\r\n    ZkTestServer server = new ZkTestServer(zkDir);\r\n    ZkController zkController = null;\r\n    try {\r\n      server.run();\r\n\r\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\r\n\r\n      zkController = new ZkController(server.getZkAddress(),\r\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\r\n\r\n      zkController.uploadToZK(new File(\"solr/conf\"),\r\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\r\n\r\n      if (DEBUG) {\r\n        zkController.printLayoutToStdOut();\r\n      }\r\n\r\n    } finally {\r\n      if (zkController != null) {\r\n        zkController.close();\r\n      }\r\n      server.shutdown();\r\n    }\r\n\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bed62fe6383040eaff2ec720cdc55bb1462c61da","date":1296408595,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(server.getZkAddress(),\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\r\n  public void testUploadToCloud() throws Exception {\r\n    String zkDir = dataDir.getAbsolutePath() + File.separator\r\n        + \"zookeeper/server1/data\";\r\n\r\n    ZkTestServer server = new ZkTestServer(zkDir);\r\n    ZkController zkController = null;\r\n    try {\r\n      server.run();\r\n\r\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\r\n\r\n      zkController = new ZkController(server.getZkAddress(),\r\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\r\n\r\n      zkController.uploadToZK(getFile(\"solr/conf\"),\r\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\r\n\r\n      if (DEBUG) {\r\n        zkController.printLayoutToStdOut();\r\n      }\r\n\r\n    } finally {\r\n      if (zkController != null) {\r\n        zkController.close();\r\n      }\r\n      server.shutdown();\r\n    }\r\n\r\n  }\r\n\n","bugFix":null,"bugIntro":["1e9ce820cd3ed9efb959c181daaafd22f0c70143","1e9ce820cd3ed9efb959c181daaafd22f0c70143","1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(server.getZkAddress(),\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\r\n  public void testUploadToCloud() throws Exception {\r\n    String zkDir = dataDir.getAbsolutePath() + File.separator\r\n        + \"zookeeper/server1/data\";\r\n\r\n    ZkTestServer server = new ZkTestServer(zkDir);\r\n    ZkController zkController = null;\r\n    try {\r\n      server.run();\r\n\r\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\r\n\r\n      zkController = new ZkController(server.getZkAddress(),\r\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\r\n\r\n      zkController.uploadToZK(getFile(\"solr/conf\"),\r\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\r\n\r\n      if (DEBUG) {\r\n        zkController.printLayoutToStdOut();\r\n      }\r\n\r\n    } finally {\r\n      if (zkController != null) {\r\n        zkController.close();\r\n      }\r\n      server.shutdown();\r\n    }\r\n\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(server.getZkAddress(),\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\r\n  public void testUploadToCloud() throws Exception {\r\n    String zkDir = dataDir.getAbsolutePath() + File.separator\r\n        + \"zookeeper/server1/data\";\r\n\r\n    ZkTestServer server = new ZkTestServer(zkDir);\r\n    ZkController zkController = null;\r\n    try {\r\n      server.run();\r\n\r\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\r\n\r\n      zkController = new ZkController(server.getZkAddress(),\r\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\r\n\r\n      zkController.uploadToZK(getFile(\"solr/conf\"),\r\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\r\n\r\n      if (DEBUG) {\r\n        zkController.printLayoutToStdOut();\r\n      }\r\n\r\n    } finally {\r\n      if (zkController != null) {\r\n        zkController.close();\r\n      }\r\n      server.shutdown();\r\n    }\r\n\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(server.getZkAddress(),\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(server.getZkAddress(),\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(server.getZkAddress(),\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(server.getZkAddress(),\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","pathOld":"solr/src/test/org/apache/solr/cloud/ZkControllerTest#testUploadToCloud().mjava","sourceNew":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(server.getZkAddress(),\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testUploadToCloud() throws Exception {\n    String zkDir = dataDir.getAbsolutePath() + File.separator\n        + \"zookeeper/server1/data\";\n\n    ZkTestServer server = new ZkTestServer(zkDir);\n    ZkController zkController = null;\n    try {\n      server.run();\n\n      AbstractZkTestCase.makeSolrZkNode(server.getZkHost());\n\n      zkController = new ZkController(server.getZkAddress(),\n          TIMEOUT, 1000, \"localhost\", \"8983\", \"/solr\");\n\n      zkController.uploadToZK(getFile(\"solr/conf\"),\n          ZkController.CONFIGS_ZKNODE + \"/config1\");\n\n      if (DEBUG) {\n        zkController.printLayoutToStdOut();\n      }\n\n    } finally {\n      if (zkController != null) {\n        zkController.close();\n      }\n      server.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b6da674254994fc11839b3f6ad511ef8871a94f7":["43adc163640856c8b07e4cf1b2046c9af56d3ae7"],"43adc163640856c8b07e4cf1b2046c9af56d3ae7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"70ad682703b8585f5d0a637efec044d57ec05efb":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","b6da674254994fc11839b3f6ad511ef8871a94f7"],"c26f00b574427b55127e869b935845554afde1fa":["bed62fe6383040eaff2ec720cdc55bb1462c61da","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","43adc163640856c8b07e4cf1b2046c9af56d3ae7"],"bed62fe6383040eaff2ec720cdc55bb1462c61da":["b6da674254994fc11839b3f6ad511ef8871a94f7"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b6da674254994fc11839b3f6ad511ef8871a94f7"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["bed62fe6383040eaff2ec720cdc55bb1462c61da"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["70ad682703b8585f5d0a637efec044d57ec05efb","bed62fe6383040eaff2ec720cdc55bb1462c61da"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["bed62fe6383040eaff2ec720cdc55bb1462c61da"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","43adc163640856c8b07e4cf1b2046c9af56d3ae7"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","bed62fe6383040eaff2ec720cdc55bb1462c61da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"b6da674254994fc11839b3f6ad511ef8871a94f7":["70ad682703b8585f5d0a637efec044d57ec05efb","bed62fe6383040eaff2ec720cdc55bb1462c61da","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c"],"43adc163640856c8b07e4cf1b2046c9af56d3ae7":["b6da674254994fc11839b3f6ad511ef8871a94f7","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"70ad682703b8585f5d0a637efec044d57ec05efb":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c"],"bed62fe6383040eaff2ec720cdc55bb1462c61da":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["43adc163640856c8b07e4cf1b2046c9af56d3ae7","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["70ad682703b8585f5d0a637efec044d57ec05efb"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}