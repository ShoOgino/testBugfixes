{"path":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter#write(Fields,NormsProducer).mjava","commits":[{"id":"622a708571e534680618b3c5e0c28ac539a47776","date":1517406892,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter#write(Fields,NormsProducer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter#write(Fields).mjava","sourceNew":"  @Override\n  public void write(Fields fields, NormsProducer norms) throws IOException {\n    //if (DEBUG) System.out.println(\"\\nBTTW.write seg=\" + segment);\n\n    String lastField = null;\n    for(String field : fields) {\n      assert lastField == null || lastField.compareTo(field) < 0;\n      lastField = field;\n\n      //if (DEBUG) System.out.println(\"\\nBTTW.write seg=\" + segment + \" field=\" + field);\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n\n      TermsEnum termsEnum = terms.iterator();\n      TermsWriter termsWriter = new TermsWriter(fieldInfos.fieldInfo(field));\n      while (true) {\n        BytesRef term = termsEnum.next();\n        //if (DEBUG) System.out.println(\"BTTW: next term \" + term);\n\n        if (term == null) {\n          break;\n        }\n\n        //if (DEBUG) System.out.println(\"write field=\" + fieldInfo.name + \" term=\" + brToString(term));\n        termsWriter.write(term, termsEnum, norms);\n      }\n\n      termsWriter.finish();\n\n      //if (DEBUG) System.out.println(\"\\nBTTW.write done seg=\" + segment + \" field=\" + field);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void write(Fields fields) throws IOException {\n    //if (DEBUG) System.out.println(\"\\nBTTW.write seg=\" + segment);\n\n    String lastField = null;\n    for(String field : fields) {\n      assert lastField == null || lastField.compareTo(field) < 0;\n      lastField = field;\n\n      //if (DEBUG) System.out.println(\"\\nBTTW.write seg=\" + segment + \" field=\" + field);\n      Terms terms = fields.terms(field);\n      if (terms == null) {\n        continue;\n      }\n\n      TermsEnum termsEnum = terms.iterator();\n      TermsWriter termsWriter = new TermsWriter(fieldInfos.fieldInfo(field));\n      while (true) {\n        BytesRef term = termsEnum.next();\n        //if (DEBUG) System.out.println(\"BTTW: next term \" + term);\n\n        if (term == null) {\n          break;\n        }\n\n        //if (DEBUG) System.out.println(\"write field=\" + fieldInfo.name + \" term=\" + brToString(term));\n        termsWriter.write(term, termsEnum);\n      }\n\n      termsWriter.finish();\n\n      //if (DEBUG) System.out.println(\"\\nBTTW.write done seg=\" + segment + \" field=\" + field);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"622a708571e534680618b3c5e0c28ac539a47776":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["622a708571e534680618b3c5e0c28ac539a47776"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["622a708571e534680618b3c5e0c28ac539a47776"],"622a708571e534680618b3c5e0c28ac539a47776":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}