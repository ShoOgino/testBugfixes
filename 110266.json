{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#nextRow().mjava","commits":[{"id":"0138fd02ea669da851e919059a3f4f2c41f9652d","date":1260538157,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#nextRow().mjava","pathOld":"/dev/null","sourceNew":"  public Map<String, Object> nextRow() {\r\n    if(done) return null;\r\n    Map<String, Object> row = new HashMap<String, Object>();\r\n    DataSource<InputStream> dataSource = context.getDataSource();\r\n    InputStream is = dataSource.getData(context.getResolvedEntityAttribute(URL));\r\n    ContentHandler contentHandler = null;\r\n    Metadata metadata = new Metadata();\r\n    StringWriter sw = new StringWriter();\r\n    try {\r\n      if (\"html\".equals(format)) {\r\n        contentHandler = getHtmlHandler(sw);\r\n      } else if (\"xml\".equals(format)) {\r\n        contentHandler = getXmlContentHandler(sw);\r\n      } else if (\"text\".equals(format)) {\r\n        contentHandler = getTextContentHandler(sw);\r\n      } else if(\"none\".equals(format)){\r\n        contentHandler = new DefaultHandler();        \r\n      }\r\n    } catch (TransformerConfigurationException e) {\r\n      wrapAndThrow(SEVERE, e, \"Unable to create content handler\");\r\n    }\r\n    Parser tikaParser = null;\r\n    if(parser.equals(AUTO_PARSER)){\r\n      AutoDetectParser parser = new AutoDetectParser();\r\n      parser.setConfig(tikaConfig);\r\n      tikaParser = parser;\r\n    } else {\r\n      tikaParser = (Parser) context.getSolrCore().getResourceLoader().newInstance(parser);\r\n    }\r\n    try {\r\n      tikaParser.parse(is, contentHandler, metadata , new ParseContext());\r\n    } catch (Exception e) {\r\n      if(ABORT.equals(onError)){\r\n        wrapAndThrow(SEVERE, e, \"Unable to read content\");\r\n      } else {\r\n        LOG.warn(\"Unable to parse document \"+ context.getResolvedEntityAttribute(URL) ,e);\r\n        return null;\r\n      }\r\n    }\r\n    IOUtils.closeQuietly(is);\r\n    for (Map<String, String> field : context.getAllEntityFields()) {\r\n      if (!\"true\".equals(field.get(\"meta\"))) continue;\r\n      String col = field.get(COLUMN);\r\n      String s = metadata.get(col);\r\n      if (s != null) row.put(col, s);\r\n    }\r\n    if(!\"none\".equals(format) ) row.put(\"text\", sw.toString());\r\n    done = true;\r\n    return row;\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b7b8ee0df825b37bc7fb44a2bfd91aa08357492","date":1260863347,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#nextRow().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/TikaEntityProcessor#nextRow().mjava","sourceNew":"  public Map<String, Object> nextRow() {\r\n    if(done) return null;\r\n    Map<String, Object> row = new HashMap<String, Object>();\r\n    DataSource<InputStream> dataSource = context.getDataSource();\r\n    InputStream is = dataSource.getData(context.getResolvedEntityAttribute(URL));\r\n    ContentHandler contentHandler = null;\r\n    Metadata metadata = new Metadata();\r\n    StringWriter sw = new StringWriter();\r\n    try {\r\n      if (\"html\".equals(format)) {\r\n        contentHandler = getHtmlHandler(sw);\r\n      } else if (\"xml\".equals(format)) {\r\n        contentHandler = getXmlContentHandler(sw);\r\n      } else if (\"text\".equals(format)) {\r\n        contentHandler = getTextContentHandler(sw);\r\n      } else if(\"none\".equals(format)){\r\n        contentHandler = new DefaultHandler();        \r\n      }\r\n    } catch (TransformerConfigurationException e) {\r\n      wrapAndThrow(SEVERE, e, \"Unable to create content handler\");\r\n    }\r\n    Parser tikaParser = null;\r\n    if(parser.equals(AUTO_PARSER)){\r\n      AutoDetectParser parser = new AutoDetectParser();\r\n      parser.setConfig(tikaConfig);\r\n      tikaParser = parser;\r\n    } else {\r\n      tikaParser = (Parser) context.getSolrCore().getResourceLoader().newInstance(parser);\r\n    }\r\n    try {\r\n      tikaParser.parse(is, contentHandler, metadata , new ParseContext());\r\n    } catch (Exception e) {\r\n      if(ABORT.equals(onError)){\r\n        wrapAndThrow(SEVERE, e, \"Unable to read content\");\r\n      } else {\r\n        LOG.warn(\"Unable to parse document \"+ context.getResolvedEntityAttribute(URL) ,e);\r\n        return null;\r\n      }\r\n    }\r\n    IOUtils.closeQuietly(is);\r\n    for (Map<String, String> field : context.getAllEntityFields()) {\r\n      if (!\"true\".equals(field.get(\"meta\"))) continue;\r\n      String col = field.get(COLUMN);\r\n      String s = metadata.get(col);\r\n      if (s != null) row.put(col, s);\r\n    }\r\n    if(!\"none\".equals(format) ) row.put(\"text\", sw.toString());\r\n    done = true;\r\n    return row;\r\n  }\r\n\n","sourceOld":"  public Map<String, Object> nextRow() {\r\n    if(done) return null;\r\n    Map<String, Object> row = new HashMap<String, Object>();\r\n    DataSource<InputStream> dataSource = context.getDataSource();\r\n    InputStream is = dataSource.getData(context.getResolvedEntityAttribute(URL));\r\n    ContentHandler contentHandler = null;\r\n    Metadata metadata = new Metadata();\r\n    StringWriter sw = new StringWriter();\r\n    try {\r\n      if (\"html\".equals(format)) {\r\n        contentHandler = getHtmlHandler(sw);\r\n      } else if (\"xml\".equals(format)) {\r\n        contentHandler = getXmlContentHandler(sw);\r\n      } else if (\"text\".equals(format)) {\r\n        contentHandler = getTextContentHandler(sw);\r\n      } else if(\"none\".equals(format)){\r\n        contentHandler = new DefaultHandler();        \r\n      }\r\n    } catch (TransformerConfigurationException e) {\r\n      wrapAndThrow(SEVERE, e, \"Unable to create content handler\");\r\n    }\r\n    Parser tikaParser = null;\r\n    if(parser.equals(AUTO_PARSER)){\r\n      AutoDetectParser parser = new AutoDetectParser();\r\n      parser.setConfig(tikaConfig);\r\n      tikaParser = parser;\r\n    } else {\r\n      tikaParser = (Parser) context.getSolrCore().getResourceLoader().newInstance(parser);\r\n    }\r\n    try {\r\n      tikaParser.parse(is, contentHandler, metadata , new ParseContext());\r\n    } catch (Exception e) {\r\n      if(ABORT.equals(onError)){\r\n        wrapAndThrow(SEVERE, e, \"Unable to read content\");\r\n      } else {\r\n        LOG.warn(\"Unable to parse document \"+ context.getResolvedEntityAttribute(URL) ,e);\r\n        return null;\r\n      }\r\n    }\r\n    IOUtils.closeQuietly(is);\r\n    for (Map<String, String> field : context.getAllEntityFields()) {\r\n      if (!\"true\".equals(field.get(\"meta\"))) continue;\r\n      String col = field.get(COLUMN);\r\n      String s = metadata.get(col);\r\n      if (s != null) row.put(col, s);\r\n    }\r\n    if(!\"none\".equals(format) ) row.put(\"text\", sw.toString());\r\n    done = true;\r\n    return row;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"6b7b8ee0df825b37bc7fb44a2bfd91aa08357492":["0138fd02ea669da851e919059a3f4f2c41f9652d"],"0138fd02ea669da851e919059a3f4f2c41f9652d":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0138fd02ea669da851e919059a3f4f2c41f9652d"],"6b7b8ee0df825b37bc7fb44a2bfd91aa08357492":[],"0138fd02ea669da851e919059a3f4f2c41f9652d":["6b7b8ee0df825b37bc7fb44a2bfd91aa08357492"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6b7b8ee0df825b37bc7fb44a2bfd91aa08357492","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}