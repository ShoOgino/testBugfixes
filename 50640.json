{"path":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRebuildOnCommit().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRebuildOnCommit().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRebuildOnCommit().mjava","sourceNew":"    @SuppressWarnings(\"unchecked\")\n    @Test\n  public void testRebuildOnCommit() throws Exception {\n    SolrQueryRequest req = req(\"q\", \"lowerfilt:lucenejavt\", \"qt\", \"spellCheckCompRH\", \"spellcheck\", \"true\");\n    String response = h.query(req);\n    assertFalse(\"No suggestions should be returned\", response.contains(\"lucenejava\"));\n    \n    assertU(adoc(\"id\", \"11231\", \"lowerfilt\", \"lucenejava\"));\n    assertU(\"commit\", commit());\n    \n    assertQ(req, \"//arr[@name='suggestion'][.='lucenejava']\");\n  }\n\n","sourceOld":"    @SuppressWarnings(\"unchecked\")\n    @Test\n  public void testRebuildOnCommit() throws Exception {\n    SolrQueryRequest req = req(\"q\", \"lowerfilt:lucenejavt\", \"qt\", \"spellCheckCompRH\", \"spellcheck\", \"true\");\n    String response = h.query(req);\n    assertFalse(\"No suggestions should be returned\", response.contains(\"lucenejava\"));\n    \n    assertU(adoc(\"id\", \"11231\", \"lowerfilt\", \"lucenejava\"));\n    assertU(\"commit\", commit());\n    \n    assertQ(req, \"//arr[@name='suggestion'][.='lucenejava']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRebuildOnCommit().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRebuildOnCommit().mjava","sourceNew":"    @SuppressWarnings(\"unchecked\")\n    @Test\n  public void testRebuildOnCommit() throws Exception {\n    SolrQueryRequest req = req(\"q\", \"lowerfilt:lucenejavt\", \"qt\", \"spellCheckCompRH\", \"spellcheck\", \"true\");\n    String response = h.query(req);\n    assertFalse(\"No suggestions should be returned\", response.contains(\"lucenejava\"));\n    \n    assertU(adoc(\"id\", \"11231\", \"lowerfilt\", \"lucenejava\"));\n    assertU(\"commit\", commit());\n    \n    assertQ(req, \"//arr[@name='suggestion'][.='lucenejava']\");\n  }\n\n","sourceOld":"    @SuppressWarnings(\"unchecked\")\n    @Test\n  public void testRebuildOnCommit() throws Exception {\n    SolrQueryRequest req = req(\"q\", \"lowerfilt:lucenejavt\", \"qt\", \"spellCheckCompRH\", \"spellcheck\", \"true\");\n    String response = h.query(req);\n    assertFalse(\"No suggestions should be returned\", response.contains(\"lucenejava\"));\n    \n    assertU(adoc(\"id\", \"11231\", \"lowerfilt\", \"lucenejava\"));\n    assertU(\"commit\", commit());\n    \n    assertQ(req, \"//arr[@name='suggestion'][.='lucenejava']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRebuildOnCommit().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRebuildOnCommit().mjava","sourceNew":"    @SuppressWarnings(\"unchecked\")\n    @Test\n  public void testRebuildOnCommit() throws Exception {\n    SolrQueryRequest req = req(\"q\", \"lowerfilt:lucenejavt\", \"qt\", \"spellCheckCompRH\", \"spellcheck\", \"true\");\n    String response = h.query(req);\n    assertFalse(\"No suggestions should be returned\", response.contains(\"lucenejava\"));\n    \n    assertU(adoc(\"id\", \"11231\", \"lowerfilt\", \"lucenejava\"));\n    assertU(\"commit\", commit());\n    \n    assertQ(req, \"//arr[@name='suggestion'][.='lucenejava']\");\n  }\n\n","sourceOld":"    @SuppressWarnings(\"unchecked\")\n    @Test\n  public void testRebuildOnCommit() throws Exception {\n    SolrQueryRequest req = req(\"q\", \"lowerfilt:lucenejavt\", \"qt\", \"spellCheckCompRH\", \"spellcheck\", \"true\");\n    String response = h.query(req);\n    assertFalse(\"No suggestions should be returned\", response.contains(\"lucenejava\"));\n    \n    assertU(adoc(\"id\", \"11231\", \"lowerfilt\", \"lucenejava\"));\n    assertU(\"commit\", commit());\n    \n    assertQ(req, \"//arr[@name='suggestion'][.='lucenejava']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ff704ef91e9ae30ca59babb23ece85720701b60","date":1498684964,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRebuildOnCommit().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRebuildOnCommit().mjava","sourceNew":"    @SuppressWarnings(\"unchecked\")\n    @Test\n  public void testRebuildOnCommit() throws Exception {\n    SolrQueryRequest req = req(\"q\", \"lowerfilt:lucenejavt\", \"qt\", \"/spellCheckCompRH\", \"spellcheck\", \"true\");\n    String response = h.query(req);\n    assertFalse(\"No suggestions should be returned\", response.contains(\"lucenejava\"));\n    \n    assertU(adoc(\"id\", \"11231\", \"lowerfilt\", \"lucenejava\"));\n    assertU(\"commit\", commit());\n    \n    assertQ(req, \"//arr[@name='suggestion'][.='lucenejava']\");\n  }\n\n","sourceOld":"    @SuppressWarnings(\"unchecked\")\n    @Test\n  public void testRebuildOnCommit() throws Exception {\n    SolrQueryRequest req = req(\"q\", \"lowerfilt:lucenejavt\", \"qt\", \"spellCheckCompRH\", \"spellcheck\", \"true\");\n    String response = h.query(req);\n    assertFalse(\"No suggestions should be returned\", response.contains(\"lucenejava\"));\n    \n    assertU(adoc(\"id\", \"11231\", \"lowerfilt\", \"lucenejava\"));\n    assertU(\"commit\", commit());\n    \n    assertQ(req, \"//arr[@name='suggestion'][.='lucenejava']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRebuildOnCommit().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRebuildOnCommit().mjava","sourceNew":"    @SuppressWarnings(\"unchecked\")\n    @Test\n  public void testRebuildOnCommit() throws Exception {\n    SolrQueryRequest req = req(\"q\", \"lowerfilt:lucenejavt\", \"qt\", \"/spellCheckCompRH\", \"spellcheck\", \"true\");\n    String response = h.query(req);\n    assertFalse(\"No suggestions should be returned\", response.contains(\"lucenejava\"));\n    \n    assertU(adoc(\"id\", \"11231\", \"lowerfilt\", \"lucenejava\"));\n    assertU(\"commit\", commit());\n    \n    assertQ(req, \"//arr[@name='suggestion'][.='lucenejava']\");\n  }\n\n","sourceOld":"    @SuppressWarnings(\"unchecked\")\n    @Test\n  public void testRebuildOnCommit() throws Exception {\n    SolrQueryRequest req = req(\"q\", \"lowerfilt:lucenejavt\", \"qt\", \"spellCheckCompRH\", \"spellcheck\", \"true\");\n    String response = h.query(req);\n    assertFalse(\"No suggestions should be returned\", response.contains(\"lucenejava\"));\n    \n    assertU(adoc(\"id\", \"11231\", \"lowerfilt\", \"lucenejava\"));\n    assertU(\"commit\", commit());\n    \n    assertQ(req, \"//arr[@name='suggestion'][.='lucenejava']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRebuildOnCommit().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testRebuildOnCommit().mjava","sourceNew":"    @SuppressWarnings(\"unchecked\")\n    @Test\n  public void testRebuildOnCommit() throws Exception {\n    SolrQueryRequest req = req(\"q\", \"lowerfilt:lucenejavt\", \"qt\", \"/spellCheckCompRH\", \"spellcheck\", \"true\");\n    String response = h.query(req);\n    assertFalse(\"No suggestions should be returned\", response.contains(\"lucenejava\"));\n    \n    assertU(adoc(\"id\", \"11231\", \"lowerfilt\", \"lucenejava\"));\n    assertU(\"commit\", commit());\n    \n    assertQ(req, \"//arr[@name='suggestion'][.='lucenejava']\");\n  }\n\n","sourceOld":"    @SuppressWarnings(\"unchecked\")\n    @Test\n  public void testRebuildOnCommit() throws Exception {\n    SolrQueryRequest req = req(\"q\", \"lowerfilt:lucenejavt\", \"qt\", \"spellCheckCompRH\", \"spellcheck\", \"true\");\n    String response = h.query(req);\n    assertFalse(\"No suggestions should be returned\", response.contains(\"lucenejava\"));\n    \n    assertU(adoc(\"id\", \"11231\", \"lowerfilt\", \"lucenejava\"));\n    assertU(\"commit\", commit());\n    \n    assertQ(req, \"//arr[@name='suggestion'][.='lucenejava']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30c8e5574b55d57947e989443dfde611646530ee":["c26f00b574427b55127e869b935845554afde1fa","28288370235ed02234a64753cdbf0c6ec096304a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["c26f00b574427b55127e869b935845554afde1fa","5ff704ef91e9ae30ca59babb23ece85720701b60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["30c8e5574b55d57947e989443dfde611646530ee","28288370235ed02234a64753cdbf0c6ec096304a","5ff704ef91e9ae30ca59babb23ece85720701b60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"30c8e5574b55d57947e989443dfde611646530ee":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"28288370235ed02234a64753cdbf0c6ec096304a":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}