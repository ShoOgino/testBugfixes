{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getNumericField(String,NumericType).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getNumericField(String,NumericType).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getNumericField(String,NumericType).mjava","sourceNew":"    Field getNumericField(String name, NumericType type) {\n      Field f;\n      if (reuseFields) {\n        f = numericFields.get(name);\n      } else {\n        f = null;\n      }\n      \n      if (f == null) {\n        switch(type) {\n        case INT:\n          f = new IntField(name, 0);\n          break;\n        case LONG:\n          f = new LongField(name, 0L);\n          break;\n        case FLOAT:\n          f = new FloatField(name, 0.0F);\n          break;\n        case DOUBLE:\n          f = new DoubleField(name, 0.0);\n          break;\n        default:\n          assert false;\n        }\n        if (reuseFields) {\n          numericFields.put(name, f);\n        }\n      }\n      return f;\n    }\n\n","sourceOld":"    Field getNumericField(String name, NumericType type) {\n      Field f;\n      if (reuseFields) {\n        f = numericFields.get(name);\n      } else {\n        f = null;\n      }\n      \n      if (f == null) {\n        switch(type) {\n        case INT:\n          f = new IntField(name, 0);\n          break;\n        case LONG:\n          f = new LongField(name, 0L);\n          break;\n        case FLOAT:\n          f = new FloatField(name, 0.0F);\n          break;\n        case DOUBLE:\n          f = new DoubleField(name, 0.0);\n          break;\n        default:\n          assert false;\n        }\n        if (reuseFields) {\n          numericFields.put(name, f);\n        }\n      }\n      return f;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getNumericField(String,NumericType).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getNumericField(String,NumericType).mjava","sourceNew":"    Field getNumericField(String name, NumericType type) {\n      Field f;\n      if (reuseFields) {\n        f = numericFields.get(name);\n      } else {\n        f = null;\n      }\n      \n      if (f == null) {\n        switch(type) {\n        case INT:\n          f = new IntField(name, 0, Field.Store.NO);\n          break;\n        case LONG:\n          f = new LongField(name, 0L, Field.Store.NO);\n          break;\n        case FLOAT:\n          f = new FloatField(name, 0.0F, Field.Store.NO);\n          break;\n        case DOUBLE:\n          f = new DoubleField(name, 0.0, Field.Store.NO);\n          break;\n        default:\n          assert false;\n        }\n        if (reuseFields) {\n          numericFields.put(name, f);\n        }\n      }\n      return f;\n    }\n\n","sourceOld":"    Field getNumericField(String name, NumericType type) {\n      Field f;\n      if (reuseFields) {\n        f = numericFields.get(name);\n      } else {\n        f = null;\n      }\n      \n      if (f == null) {\n        switch(type) {\n        case INT:\n          f = new IntField(name, 0);\n          break;\n        case LONG:\n          f = new LongField(name, 0L);\n          break;\n        case FLOAT:\n          f = new FloatField(name, 0.0F);\n          break;\n        case DOUBLE:\n          f = new DoubleField(name, 0.0);\n          break;\n        default:\n          assert false;\n        }\n        if (reuseFields) {\n          numericFields.put(name, f);\n        }\n      }\n      return f;\n    }\n\n","bugFix":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a92d88a85748af0cb6a68706f8ac3ba6bd686fa6","date":1346421325,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getNumericField(String,NumericType).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getNumericField(String,NumericType).mjava","sourceNew":"    Field getNumericField(String name, NumericType type) {\n      Field f;\n      if (reuseFields) {\n        f = numericFields.get(name);\n      } else {\n        f = null;\n      }\n      \n      if (f == null) {\n        switch(type) {\n        case INT:\n          f = new IntField(name, 0, Field.Store.NO);\n          break;\n        case LONG:\n          f = new LongField(name, 0L, Field.Store.NO);\n          break;\n        case FLOAT:\n          f = new FloatField(name, 0.0F, Field.Store.NO);\n          break;\n        case DOUBLE:\n          f = new DoubleField(name, 0.0, Field.Store.NO);\n          break;\n        default:\n          throw new AssertionError(\"Cannot get here\");\n        }\n        if (reuseFields) {\n          numericFields.put(name, f);\n        }\n      }\n      return f;\n    }\n\n","sourceOld":"    Field getNumericField(String name, NumericType type) {\n      Field f;\n      if (reuseFields) {\n        f = numericFields.get(name);\n      } else {\n        f = null;\n      }\n      \n      if (f == null) {\n        switch(type) {\n        case INT:\n          f = new IntField(name, 0, Field.Store.NO);\n          break;\n        case LONG:\n          f = new LongField(name, 0L, Field.Store.NO);\n          break;\n        case FLOAT:\n          f = new FloatField(name, 0.0F, Field.Store.NO);\n          break;\n        case DOUBLE:\n          f = new DoubleField(name, 0.0, Field.Store.NO);\n          break;\n        default:\n          assert false;\n        }\n        if (reuseFields) {\n          numericFields.put(name, f);\n        }\n      }\n      return f;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d1f90e969803cc84174589b5e4a39b7935fecd","date":1346584861,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getNumericField(String,NumericType).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getNumericField(String,NumericType).mjava","sourceNew":"    Field getNumericField(String name, NumericType type) {\n      Field f;\n      if (reuseFields) {\n        f = numericFields.get(name);\n      } else {\n        f = null;\n      }\n      \n      if (f == null) {\n        switch(type) {\n        case INT:\n          f = new IntField(name, 0, Field.Store.NO);\n          break;\n        case LONG:\n          f = new LongField(name, 0L, Field.Store.NO);\n          break;\n        case FLOAT:\n          f = new FloatField(name, 0.0F, Field.Store.NO);\n          break;\n        case DOUBLE:\n          f = new DoubleField(name, 0.0, Field.Store.NO);\n          break;\n        default:\n          throw new AssertionError(\"Cannot get here\");\n        }\n        if (reuseFields) {\n          numericFields.put(name, f);\n        }\n      }\n      return f;\n    }\n\n","sourceOld":"    Field getNumericField(String name, NumericType type) {\n      Field f;\n      if (reuseFields) {\n        f = numericFields.get(name);\n      } else {\n        f = null;\n      }\n      \n      if (f == null) {\n        switch(type) {\n        case INT:\n          f = new IntField(name, 0, Field.Store.NO);\n          break;\n        case LONG:\n          f = new LongField(name, 0L, Field.Store.NO);\n          break;\n        case FLOAT:\n          f = new FloatField(name, 0.0F, Field.Store.NO);\n          break;\n        case DOUBLE:\n          f = new DoubleField(name, 0.0, Field.Store.NO);\n          break;\n        default:\n          assert false;\n        }\n        if (reuseFields) {\n          numericFields.put(name, f);\n        }\n      }\n      return f;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getNumericField(String,LegacyNumericType).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DocMaker.DocState#getNumericField(String,NumericType).mjava","sourceNew":"    Field getNumericField(String name, LegacyNumericType type) {\n      Field f;\n      if (reuseFields) {\n        f = numericFields.get(name);\n      } else {\n        f = null;\n      }\n      \n      if (f == null) {\n        switch(type) {\n        case INT:\n          f = new LegacyIntField(name, 0, Field.Store.NO);\n          break;\n        case LONG:\n          f = new LegacyLongField(name, 0L, Field.Store.NO);\n          break;\n        case FLOAT:\n          f = new LegacyFloatField(name, 0.0F, Field.Store.NO);\n          break;\n        case DOUBLE:\n          f = new LegacyDoubleField(name, 0.0, Field.Store.NO);\n          break;\n        default:\n          throw new AssertionError(\"Cannot get here\");\n        }\n        if (reuseFields) {\n          numericFields.put(name, f);\n        }\n      }\n      return f;\n    }\n\n","sourceOld":"    Field getNumericField(String name, NumericType type) {\n      Field f;\n      if (reuseFields) {\n        f = numericFields.get(name);\n      } else {\n        f = null;\n      }\n      \n      if (f == null) {\n        switch(type) {\n        case INT:\n          f = new IntField(name, 0, Field.Store.NO);\n          break;\n        case LONG:\n          f = new LongField(name, 0L, Field.Store.NO);\n          break;\n        case FLOAT:\n          f = new FloatField(name, 0.0F, Field.Store.NO);\n          break;\n        case DOUBLE:\n          f = new DoubleField(name, 0.0, Field.Store.NO);\n          break;\n        default:\n          throw new AssertionError(\"Cannot get here\");\n        }\n        if (reuseFields) {\n          numericFields.put(name, f);\n        }\n      }\n      return f;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d0d1f90e969803cc84174589b5e4a39b7935fecd":["04f07771a2a7dd3a395700665ed839c3dae2def2","a92d88a85748af0cb6a68706f8ac3ba6bd686fa6"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"770342641f7b505eaa8dccdc666158bff2419109":["a92d88a85748af0cb6a68706f8ac3ba6bd686fa6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["770342641f7b505eaa8dccdc666158bff2419109"],"a92d88a85748af0cb6a68706f8ac3ba6bd686fa6":["04f07771a2a7dd3a395700665ed839c3dae2def2"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["d0d1f90e969803cc84174589b5e4a39b7935fecd","a92d88a85748af0cb6a68706f8ac3ba6bd686fa6"],"d0d1f90e969803cc84174589b5e4a39b7935fecd":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"770342641f7b505eaa8dccdc666158bff2419109":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a92d88a85748af0cb6a68706f8ac3ba6bd686fa6":["d0d1f90e969803cc84174589b5e4a39b7935fecd","770342641f7b505eaa8dccdc666158bff2419109"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d0d1f90e969803cc84174589b5e4a39b7935fecd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}