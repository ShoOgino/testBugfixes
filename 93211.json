{"path":"lucene/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","commits":[{"id":"44fcbde6fb2ac44ee3b45e013e54a42911e689ff","date":1292065621,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator();\n    SeekStatus ss = ctermsEnum.seek(new BytesRef(term.text()), false);\n    if (ss.equals(SeekStatus.FOUND)) {\n      DocsEnum docsEnum = ctermsEnum.docs(bits, null);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator();\n    SeekStatus ss = ctermsEnum.seek(new BytesRef(term.text()), false);\n    if (ss.equals(SeekStatus.FOUND)) {\n      DocsEnum docsEnum = ctermsEnum.docs(bits, null);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator();\n    SeekStatus ss = ctermsEnum.seek(new BytesRef(term.text()), false);\n    if (ss.equals(SeekStatus.FOUND)) {\n      DocsEnum docsEnum = ctermsEnum.docs(bits, null);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd9cc9d77712aba3662f24632df7539ab75e3667","date":1309095238,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator();\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = ctermsEnum.docs(bits, null);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator();\n    SeekStatus ss = ctermsEnum.seek(new BytesRef(term.text()), false);\n    if (ss.equals(SeekStatus.FOUND)) {\n      DocsEnum docsEnum = ctermsEnum.docs(bits, null);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator();\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = ctermsEnum.docs(bits, null);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator();\n    SeekStatus ss = ctermsEnum.seek(new BytesRef(term.text()), false);\n    if (ss.equals(SeekStatus.FOUND)) {\n      DocsEnum docsEnum = ctermsEnum.docs(bits, null);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator();\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = ctermsEnum.docs(bits, null);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator();\n    SeekStatus ss = ctermsEnum.seek(new BytesRef(term.text()), false);\n    if (ss.equals(SeekStatus.FOUND)) {\n      DocsEnum docsEnum = ctermsEnum.docs(bits, null);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = ctermsEnum.docs(bits, null);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator();\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = ctermsEnum.docs(bits, null);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"872cff1d3a554e0cd64014cd97f88d3002b0f491","date":1323024658,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random, ctermsEnum, bits, null, false);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = ctermsEnum.docs(bits, null);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b65b350ca9588f9fc76ce7d6804160d06c45ff42","date":1323026297,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random, ctermsEnum, bits, null, false);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = ctermsEnum.docs(bits, null);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random, ctermsEnum, bits, null, false);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random, ctermsEnum, bits, null, false);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":["3cc749c053615f5871f3b95715fe292f34e70a53","872cff1d3a554e0cd64014cd97f88d3002b0f491"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["872cff1d3a554e0cd64014cd97f88d3002b0f491"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["fd9cc9d77712aba3662f24632df7539ab75e3667"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["3cc749c053615f5871f3b95715fe292f34e70a53"],"2553b00f699380c64959ccb27991289aae87be2e":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff","fd9cc9d77712aba3662f24632df7539ab75e3667"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"fd9cc9d77712aba3662f24632df7539ab75e3667":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff","fd9cc9d77712aba3662f24632df7539ab75e3667"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","2553b00f699380c64959ccb27991289aae87be2e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fd9cc9d77712aba3662f24632df7539ab75e3667","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"3cc749c053615f5871f3b95715fe292f34e70a53":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","872cff1d3a554e0cd64014cd97f88d3002b0f491"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":[],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2553b00f699380c64959ccb27991289aae87be2e":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"fd9cc9d77712aba3662f24632df7539ab75e3667":["3cc749c053615f5871f3b95715fe292f34e70a53","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","ab5cb6a74aefb78aa0569857970b9151dfe2e787","2553b00f699380c64959ccb27991289aae87be2e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}