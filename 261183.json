{"path":"src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","commits":[{"id":"f66f1826f07774581d2ec661444fc987bdd1a85d","date":1144730206,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Initializes things your test might need\n   *\n   * <ul>\n   * <li>Creates a dataDir in the \"java.io.tmpdir\"</li>\n   * <li>initializes the TestHarness h using this data directory, and getSchemaPath()</li>\n   * <li>initializes the LocalRequestFactory lrf using sensible defaults.</li>\n   * </ul>\n   *\n   */\n  public void setUp() throws Exception {\n\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n                       + System.getProperty(\"file.separator\")\n                       + getClass().getName() + \"-\" + getName() + \"-\"\n                       + System.currentTimeMillis());\n    dataDir.mkdirs();\n    h = new TestHarness(dataDir.getAbsolutePath(), getSchemaPath());\n    lrf = h.getRequestFactory\n      (\"standard\",0,20,\"version\",\"2.0\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ddfc890383ad49b761c95033cf08766953f805c","date":1145426420,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","pathOld":"src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","sourceNew":"  /**\n   * Initializes things your test might need\n   *\n   * <ul>\n   * <li>Creates a dataDir in the \"java.io.tmpdir\"</li>\n   * <li>initializes the TestHarness h using this data directory, and getSchemaPath()</li>\n   * <li>initializes the LocalRequestFactory lrf using sensible defaults.</li>\n   * </ul>\n   *\n   */\n  public void setUp() throws Exception {\n\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n                       + System.getProperty(\"file.separator\")\n                       + getClass().getName() + \"-\" + getName() + \"-\"\n                       + System.currentTimeMillis());\n    dataDir.mkdirs();\n    h = new TestHarness(dataDir.getAbsolutePath(),\n                        getSolrConfigFile(),\n                        getSchemaFile());\n    lrf = h.getRequestFactory\n      (\"standard\",0,20,\"version\",\"2.0\");\n\n  }\n\n","sourceOld":"  /**\n   * Initializes things your test might need\n   *\n   * <ul>\n   * <li>Creates a dataDir in the \"java.io.tmpdir\"</li>\n   * <li>initializes the TestHarness h using this data directory, and getSchemaPath()</li>\n   * <li>initializes the LocalRequestFactory lrf using sensible defaults.</li>\n   * </ul>\n   *\n   */\n  public void setUp() throws Exception {\n\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n                       + System.getProperty(\"file.separator\")\n                       + getClass().getName() + \"-\" + getName() + \"-\"\n                       + System.currentTimeMillis());\n    dataDir.mkdirs();\n    h = new TestHarness(dataDir.getAbsolutePath(), getSchemaPath());\n    lrf = h.getRequestFactory\n      (\"standard\",0,20,\"version\",\"2.0\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7aef5adbca53f7820aa6289dda74f595ed816ac7","date":1166101420,"type":3,"author":"Bertrand Delacretaz","isMerge":false,"pathNew":"src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","pathOld":"src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","sourceNew":"  /**\n   * Initializes things your test might need\n   *\n   * <ul>\n   * <li>Creates a dataDir in the \"java.io.tmpdir\"</li>\n   * <li>initializes the TestHarness h using this data directory, and getSchemaPath()</li>\n   * <li>initializes the LocalRequestFactory lrf using sensible defaults.</li>\n   * </ul>\n   *\n   */\n  public void setUp() throws Exception {\n\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n                       + System.getProperty(\"file.separator\")\n                       + getClass().getName() + \"-\" + getName() + \"-\"\n                       + System.currentTimeMillis());\n    dataDir.mkdirs();\n    h = new TestHarness(dataDir.getAbsolutePath(),\n                        getSolrConfigFile(),\n                        getSchemaFile());\n    lrf = h.getRequestFactory\n      (\"standard\",0,20,\"version\",\"2.2\");\n\n  }\n\n","sourceOld":"  /**\n   * Initializes things your test might need\n   *\n   * <ul>\n   * <li>Creates a dataDir in the \"java.io.tmpdir\"</li>\n   * <li>initializes the TestHarness h using this data directory, and getSchemaPath()</li>\n   * <li>initializes the LocalRequestFactory lrf using sensible defaults.</li>\n   * </ul>\n   *\n   */\n  public void setUp() throws Exception {\n\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n                       + System.getProperty(\"file.separator\")\n                       + getClass().getName() + \"-\" + getName() + \"-\"\n                       + System.currentTimeMillis());\n    dataDir.mkdirs();\n    h = new TestHarness(dataDir.getAbsolutePath(),\n                        getSolrConfigFile(),\n                        getSchemaFile());\n    lrf = h.getRequestFactory\n      (\"standard\",0,20,\"version\",\"2.0\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d6338c87060be5f66757a94945975f3bbd377a9","date":1189278234,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","pathOld":"src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","sourceNew":"  /**\n   * Initializes things your test might need\n   *\n   * <ul>\n   * <li>Creates a dataDir in the \"java.io.tmpdir\"</li>\n   * <li>initializes the TestHarness h using this data directory, and getSchemaPath()</li>\n   * <li>initializes the LocalRequestFactory lrf using sensible defaults.</li>\n   * </ul>\n   *\n   */\n  public void setUp() throws Exception {\n        String coreName = getCoreName();\n        if (coreName != null) {\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n                       + System.getProperty(\"file.separator\")\n                       + System.currentTimeMillis());\n        } else {\n            dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n            + System.getProperty(\"file.separator\")\n            + getClass().getName() + \"-\" + System.currentTimeMillis());\n            \n        }\n    dataDir.mkdirs();\n        \n        solrConfig = h.createConfig(getSolrConfigFile());\n        h = new TestHarness(coreName,\n                dataDir.getAbsolutePath(),\n                        solrConfig,\n                        getSchemaFile());\n    lrf = h.getRequestFactory\n      (\"standard\",0,20,\"version\",\"2.2\");\n\n  }\n\n","sourceOld":"  /**\n   * Initializes things your test might need\n   *\n   * <ul>\n   * <li>Creates a dataDir in the \"java.io.tmpdir\"</li>\n   * <li>initializes the TestHarness h using this data directory, and getSchemaPath()</li>\n   * <li>initializes the LocalRequestFactory lrf using sensible defaults.</li>\n   * </ul>\n   *\n   */\n  public void setUp() throws Exception {\n\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n                       + System.getProperty(\"file.separator\")\n                       + getClass().getName() + \"-\" + getName() + \"-\"\n                       + System.currentTimeMillis());\n    dataDir.mkdirs();\n    h = new TestHarness(dataDir.getAbsolutePath(),\n                        getSolrConfigFile(),\n                        getSchemaFile());\n    lrf = h.getRequestFactory\n      (\"standard\",0,20,\"version\",\"2.2\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fe3c163c8df3fb3e4248c30f8ae8034cc786589","date":1189317596,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","pathOld":"src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","sourceNew":"  /**\n   * Initializes things your test might need\n   *\n   * <ul>\n   * <li>Creates a dataDir in the \"java.io.tmpdir\"</li>\n   * <li>initializes the TestHarness h using this data directory, and getSchemaPath()</li>\n   * <li>initializes the LocalRequestFactory lrf using sensible defaults.</li>\n   * </ul>\n   *\n   */\n  public void setUp() throws Exception {\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n        + System.getProperty(\"file.separator\")\n        + getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n        \n    solrConfig = h.createConfig(getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n                    solrConfig,\n                    getSchemaFile());\n    lrf = h.getRequestFactory\n      (\"standard\",0,20,\"version\",\"2.2\");\n  }\n\n","sourceOld":"  /**\n   * Initializes things your test might need\n   *\n   * <ul>\n   * <li>Creates a dataDir in the \"java.io.tmpdir\"</li>\n   * <li>initializes the TestHarness h using this data directory, and getSchemaPath()</li>\n   * <li>initializes the LocalRequestFactory lrf using sensible defaults.</li>\n   * </ul>\n   *\n   */\n  public void setUp() throws Exception {\n        String coreName = getCoreName();\n        if (coreName != null) {\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n                       + System.getProperty(\"file.separator\")\n                       + System.currentTimeMillis());\n        } else {\n            dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n            + System.getProperty(\"file.separator\")\n            + getClass().getName() + \"-\" + System.currentTimeMillis());\n            \n        }\n    dataDir.mkdirs();\n        \n        solrConfig = h.createConfig(getSolrConfigFile());\n        h = new TestHarness(coreName,\n                dataDir.getAbsolutePath(),\n                        solrConfig,\n                        getSchemaFile());\n    lrf = h.getRequestFactory\n      (\"standard\",0,20,\"version\",\"2.2\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1c3f7295b03d6d2c7dd778a8ac660fd86be4f81","date":1254087543,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","pathOld":"src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    log.info(\"####SETUP_START \" + getName());\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n            + System.getProperty(\"file.separator\")\n            + getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n\n    String configFile = getSolrConfigFile();\n    if (configFile != null) {\n\n      solrConfig = h.createConfig(getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n              solrConfig,\n              getSchemaFile());\n      lrf = h.getRequestFactory\n              (\"standard\",0,20,\"version\",\"2.2\");\n    }\n    log.info(\"####SETUP_END \" + getName());\n  }\n\n","sourceOld":"  /**\n   * Initializes things your test might need\n   *\n   * <ul>\n   * <li>Creates a dataDir in the \"java.io.tmpdir\"</li>\n   * <li>initializes the TestHarness h using this data directory, and getSchemaPath()</li>\n   * <li>initializes the LocalRequestFactory lrf using sensible defaults.</li>\n   * </ul>\n   *\n   */\n  public void setUp() throws Exception {\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n        + System.getProperty(\"file.separator\")\n        + getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n        \n    solrConfig = h.createConfig(getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n                    solrConfig,\n                    getSchemaFile());\n    lrf = h.getRequestFactory\n      (\"standard\",0,20,\"version\",\"2.2\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","pathOld":"src/java/org/apache/solr/util/AbstractSolrTestCase#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    log.info(\"####SETUP_START \" + getName());\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n            + System.getProperty(\"file.separator\")\n            + getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n\n    String configFile = getSolrConfigFile();\n    if (configFile != null) {\n\n      solrConfig = h.createConfig(getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n              solrConfig,\n              getSchemaFile());\n      lrf = h.getRequestFactory\n              (\"standard\",0,20,\"version\",\"2.2\");\n    }\n    log.info(\"####SETUP_END \" + getName());\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    log.info(\"####SETUP_START \" + getName());\n    dataDir = new File(System.getProperty(\"java.io.tmpdir\")\n            + System.getProperty(\"file.separator\")\n            + getClass().getName() + \"-\" + System.currentTimeMillis());\n    dataDir.mkdirs();\n\n    String configFile = getSolrConfigFile();\n    if (configFile != null) {\n\n      solrConfig = h.createConfig(getSolrConfigFile());\n      h = new TestHarness( dataDir.getAbsolutePath(),\n              solrConfig,\n              getSchemaFile());\n      lrf = h.getRequestFactory\n              (\"standard\",0,20,\"version\",\"2.2\");\n    }\n    log.info(\"####SETUP_END \" + getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6d6338c87060be5f66757a94945975f3bbd377a9":["7aef5adbca53f7820aa6289dda74f595ed816ac7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8fe3c163c8df3fb3e4248c30f8ae8034cc786589":["6d6338c87060be5f66757a94945975f3bbd377a9"],"8ddfc890383ad49b761c95033cf08766953f805c":["f66f1826f07774581d2ec661444fc987bdd1a85d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["f1c3f7295b03d6d2c7dd778a8ac660fd86be4f81"],"f66f1826f07774581d2ec661444fc987bdd1a85d":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"f1c3f7295b03d6d2c7dd778a8ac660fd86be4f81":["8fe3c163c8df3fb3e4248c30f8ae8034cc786589"],"7aef5adbca53f7820aa6289dda74f595ed816ac7":["8ddfc890383ad49b761c95033cf08766953f805c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6d6338c87060be5f66757a94945975f3bbd377a9":["8fe3c163c8df3fb3e4248c30f8ae8034cc786589"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8fe3c163c8df3fb3e4248c30f8ae8034cc786589":["f1c3f7295b03d6d2c7dd778a8ac660fd86be4f81"],"8ddfc890383ad49b761c95033cf08766953f805c":["7aef5adbca53f7820aa6289dda74f595ed816ac7"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["f66f1826f07774581d2ec661444fc987bdd1a85d"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"f66f1826f07774581d2ec661444fc987bdd1a85d":["8ddfc890383ad49b761c95033cf08766953f805c"],"7aef5adbca53f7820aa6289dda74f595ed816ac7":["6d6338c87060be5f66757a94945975f3bbd377a9"],"f1c3f7295b03d6d2c7dd778a8ac660fd86be4f81":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}