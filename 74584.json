{"path":"lucene/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsEnum(IndexReader,BytesRef,boolean,Bits).mjava","commits":[{"id":"9d7606b7ab7992bc238d10c3bddfe82a639d212a","date":1295971955,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsEnum(IndexReader,BytesRef,boolean,Bits).mjava","pathOld":"/dev/null","sourceNew":"  public DocsEnum getDocsEnum(IndexReader reader, BytesRef bytes,\n      boolean freqs, Bits skipDocs) throws IOException {\n    int randInt = random.nextInt(10);\n    if (randInt == 0) { // once in a while throw in a positions enum\n      return getDocsAndPositions(reader, bytes, skipDocs);\n    } else {\n      return reader.termDocsEnum(skipDocs, fieldName, bytes);\n    } \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsEnum(IndexReader,BytesRef,boolean,Bits).mjava","pathOld":"/dev/null","sourceNew":"  public DocsEnum getDocsEnum(IndexReader reader, BytesRef bytes,\n      boolean freqs, Bits skipDocs) throws IOException {\n    int randInt = random.nextInt(10);\n    if (randInt == 0) { // once in a while throw in a positions enum\n      return getDocsAndPositions(reader, bytes, skipDocs);\n    } else {\n      return reader.termDocsEnum(skipDocs, fieldName, bytes);\n    } \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsEnum(IndexReader,BytesRef,boolean,Bits).mjava","pathOld":"/dev/null","sourceNew":"  public DocsEnum getDocsEnum(IndexReader reader, BytesRef bytes,\n      boolean freqs, Bits skipDocs) throws IOException {\n    int randInt = random.nextInt(10);\n    if (randInt == 0) { // once in a while throw in a positions enum\n      return getDocsAndPositions(reader, bytes, skipDocs);\n    } else {\n      return reader.termDocsEnum(skipDocs, fieldName, bytes);\n    } \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","date":1309960478,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsEnum(IndexReader,BytesRef,boolean,Bits).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsEnum(IndexReader,BytesRef,boolean,Bits).mjava","sourceNew":"  public DocsEnum getDocsEnum(IndexReader reader, BytesRef bytes,\n      boolean freqs, Bits liveDocs) throws IOException {\n    int randInt = random.nextInt(10);\n    if (randInt == 0) { // once in a while throw in a positions enum\n      return getDocsAndPositions(reader, bytes, liveDocs);\n    } else {\n      return reader.termDocsEnum(liveDocs, fieldName, bytes);\n    } \n  }\n\n","sourceOld":"  public DocsEnum getDocsEnum(IndexReader reader, BytesRef bytes,\n      boolean freqs, Bits skipDocs) throws IOException {\n    int randInt = random.nextInt(10);\n    if (randInt == 0) { // once in a while throw in a positions enum\n      return getDocsAndPositions(reader, bytes, skipDocs);\n    } else {\n      return reader.termDocsEnum(skipDocs, fieldName, bytes);\n    } \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsEnum(IndexReader,BytesRef,boolean,Bits).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsEnum(IndexReader,BytesRef,boolean,Bits).mjava","sourceNew":"  public DocsEnum getDocsEnum(IndexReader reader, BytesRef bytes,\n      boolean freqs, Bits liveDocs) throws IOException {\n    int randInt = random.nextInt(10);\n    if (randInt == 0) { // once in a while throw in a positions enum\n      return getDocsAndPositions(reader, bytes, liveDocs);\n    } else {\n      return reader.termDocsEnum(liveDocs, fieldName, bytes);\n    } \n  }\n\n","sourceOld":"  public DocsEnum getDocsEnum(IndexReader reader, BytesRef bytes,\n      boolean freqs, Bits skipDocs) throws IOException {\n    int randInt = random.nextInt(10);\n    if (randInt == 0) { // once in a while throw in a positions enum\n      return getDocsAndPositions(reader, bytes, skipDocs);\n    } else {\n      return reader.termDocsEnum(skipDocs, fieldName, bytes);\n    } \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsEnum(IndexReader,BytesRef,boolean,Bits).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsEnum(IndexReader,BytesRef,boolean,Bits).mjava","sourceNew":"  public DocsEnum getDocsEnum(IndexReader reader, BytesRef bytes,\n      boolean freqs, Bits liveDocs) throws IOException {\n    int randInt = random.nextInt(10);\n    if (randInt == 0) { // once in a while throw in a positions enum\n      return getDocsAndPositions(reader, bytes, liveDocs);\n    } else {\n      return reader.termDocsEnum(liveDocs, fieldName, bytes);\n    } \n  }\n\n","sourceOld":"  public DocsEnum getDocsEnum(IndexReader reader, BytesRef bytes,\n      boolean freqs, Bits skipDocs) throws IOException {\n    int randInt = random.nextInt(10);\n    if (randInt == 0) { // once in a while throw in a positions enum\n      return getDocsAndPositions(reader, bytes, skipDocs);\n    } else {\n      return reader.termDocsEnum(skipDocs, fieldName, bytes);\n    } \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"872cff1d3a554e0cd64014cd97f88d3002b0f491","date":1323024658,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsEnum(IndexReader,BytesRef,boolean,Bits).mjava","sourceNew":null,"sourceOld":"  public DocsEnum getDocsEnum(IndexReader reader, BytesRef bytes,\n      boolean freqs, Bits liveDocs) throws IOException {\n    int randInt = random.nextInt(10);\n    if (randInt == 0) { // once in a while throw in a positions enum\n      return getDocsAndPositions(reader, bytes, liveDocs);\n    } else {\n      return reader.termDocsEnum(liveDocs, fieldName, bytes);\n    } \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b65b350ca9588f9fc76ce7d6804160d06c45ff42","date":1323026297,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestDocsAndPositions#getDocsEnum(IndexReader,BytesRef,boolean,Bits).mjava","sourceNew":null,"sourceOld":"  public DocsEnum getDocsEnum(IndexReader reader, BytesRef bytes,\n      boolean freqs, Bits liveDocs) throws IOException {\n    int randInt = random.nextInt(10);\n    if (randInt == 0) { // once in a while throw in a positions enum\n      return getDocsAndPositions(reader, bytes, liveDocs);\n    } else {\n      return reader.termDocsEnum(liveDocs, fieldName, bytes);\n    } \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b65b350ca9588f9fc76ce7d6804160d06c45ff42":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","872cff1d3a554e0cd64014cd97f88d3002b0f491"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9d7606b7ab7992bc238d10c3bddfe82a639d212a"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["9d7606b7ab7992bc238d10c3bddfe82a639d212a"],"9d7606b7ab7992bc238d10c3bddfe82a639d212a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["9d7606b7ab7992bc238d10c3bddfe82a639d212a","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["9d7606b7ab7992bc238d10c3bddfe82a639d212a","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9d7606b7ab7992bc238d10c3bddfe82a639d212a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["872cff1d3a554e0cd64014cd97f88d3002b0f491"]},"commit2Childs":{"b65b350ca9588f9fc76ce7d6804160d06c45ff42":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","872cff1d3a554e0cd64014cd97f88d3002b0f491","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","9d7606b7ab7992bc238d10c3bddfe82a639d212a","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"9d7606b7ab7992bc238d10c3bddfe82a639d212a":["29ef99d61cda9641b6250bf9567329a6e65f901d","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","29ef99d61cda9641b6250bf9567329a6e65f901d","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}