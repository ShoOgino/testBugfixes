{"path":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState#getCollection(String).mjava","commits":[{"id":"c5a558d54519c651068ddb202f03befefb1514a7","date":1354382006,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState#getCollection(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Get the named DocCollection object, or thow an exception if it doesn't exist.\n   */\n  public DocCollection getCollection(String collection) {\n    DocCollection coll = collectionStates.get(collection);\n    if (coll == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Could not find collection:\" + collection);\n    }\n    return coll;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7754464847b06ced605515bd48219280ede29e9","date":1354586462,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState#getCollection(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState#getCollection(String).mjava","sourceNew":"  /**\n   * Get the named DocCollection object, or throw an exception if it doesn't exist.\n   */\n  public DocCollection getCollection(String collection) {\n    DocCollection coll = collectionStates.get(collection);\n    if (coll == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Could not find collection:\" + collection);\n    }\n    return coll;\n  }\n\n","sourceOld":"  /**\n   * Get the named DocCollection object, or thow an exception if it doesn't exist.\n   */\n  public DocCollection getCollection(String collection) {\n    DocCollection coll = collectionStates.get(collection);\n    if (coll == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Could not find collection:\" + collection);\n    }\n    return coll;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState#getCollection(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Get the named DocCollection object, or throw an exception if it doesn't exist.\n   */\n  public DocCollection getCollection(String collection) {\n    DocCollection coll = collectionStates.get(collection);\n    if (coll == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Could not find collection:\" + collection);\n    }\n    return coll;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0622fbd990643ae4cacb693db6a0c82cf8916ae2","date":1397637446,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState#getCollection(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterState#getCollection(String).mjava","sourceNew":"  /**\n   * Get the named DocCollection object, or throw an exception if it doesn't exist.\n   */\n  public DocCollection getCollection(String collection) {\n    DocCollection coll = getCollectionOrNull(collection);\n    if (coll == null) throw new SolrException(ErrorCode.BAD_REQUEST, \"Could not find collection : \" + collection);\n    return coll;\n  }\n\n","sourceOld":"  /**\n   * Get the named DocCollection object, or throw an exception if it doesn't exist.\n   */\n  public DocCollection getCollection(String collection) {\n    DocCollection coll = collectionStates.get(collection);\n    if (coll == null) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Could not find collection:\" + collection);\n    }\n    return coll;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e7754464847b06ced605515bd48219280ede29e9":["c5a558d54519c651068ddb202f03befefb1514a7"],"c5a558d54519c651068ddb202f03befefb1514a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e7754464847b06ced605515bd48219280ede29e9"],"0622fbd990643ae4cacb693db6a0c82cf8916ae2":["e7754464847b06ced605515bd48219280ede29e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0622fbd990643ae4cacb693db6a0c82cf8916ae2"]},"commit2Childs":{"e7754464847b06ced605515bd48219280ede29e9":["407687e67faf6e1f02a211ca078d8e3eed631027","0622fbd990643ae4cacb693db6a0c82cf8916ae2"],"c5a558d54519c651068ddb202f03befefb1514a7":["e7754464847b06ced605515bd48219280ede29e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c5a558d54519c651068ddb202f03befefb1514a7","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"0622fbd990643ae4cacb693db6a0c82cf8916ae2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}