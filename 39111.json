{"path":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testCustomHandlers().mjava","commits":[{"id":"f763a1acdb27217b4799d1ca51c816739835a3e0","date":1387388124,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testCustomHandlers().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCustomHandlers() throws Exception {\n\n    ConfigSolr config = ConfigSolr.fromString(CUSTOM_HANDLERS_SOLR_XML);\n    SolrResourceLoader loader = new SolrResourceLoader(\"solr/collection1\");\n\n    CoreContainer cc = new CoreContainer(loader, config);\n    try {\n      cc.load();\n      assertThat(cc.getCollectionsHandler(), is(instanceOf(CustomCollectionsHandler.class)));\n      assertThat(cc.getInfoHandler(), is(instanceOf(CustomInfoHandler.class)));\n      assertThat(cc.getMultiCoreHandler(), is(instanceOf(CustomCoreAdminHandler.class)));\n    }\n    finally {\n      cc.shutdown();\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["77993852b2d2185c378b115f8842c0adaeb8f709","429eefa8bf427c2fbc5d85905fea54b2f76081f5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testCustomHandlers().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCustomHandlers() throws Exception {\n\n    ConfigSolr config = ConfigSolr.fromString(CUSTOM_HANDLERS_SOLR_XML);\n    SolrResourceLoader loader = new SolrResourceLoader(\"solr/collection1\");\n\n    CoreContainer cc = new CoreContainer(loader, config);\n    try {\n      cc.load();\n      assertThat(cc.getCollectionsHandler(), is(instanceOf(CustomCollectionsHandler.class)));\n      assertThat(cc.getInfoHandler(), is(instanceOf(CustomInfoHandler.class)));\n      assertThat(cc.getMultiCoreHandler(), is(instanceOf(CustomCoreAdminHandler.class)));\n    }\n    finally {\n      cc.shutdown();\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77993852b2d2185c378b115f8842c0adaeb8f709","date":1392036304,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testCustomHandlers().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testCustomHandlers().mjava","sourceNew":"  @Test\n  public void testCustomHandlers() throws Exception {\n\n    SolrResourceLoader loader = new SolrResourceLoader(\"solr/collection1\");\n    ConfigSolr config = ConfigSolr.fromString(loader, CUSTOM_HANDLERS_SOLR_XML);\n\n    CoreContainer cc = new CoreContainer(loader, config);\n    try {\n      cc.load();\n      assertThat(cc.getCollectionsHandler(), is(instanceOf(CustomCollectionsHandler.class)));\n      assertThat(cc.getInfoHandler(), is(instanceOf(CustomInfoHandler.class)));\n      assertThat(cc.getMultiCoreHandler(), is(instanceOf(CustomCoreAdminHandler.class)));\n    }\n    finally {\n      cc.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testCustomHandlers() throws Exception {\n\n    ConfigSolr config = ConfigSolr.fromString(CUSTOM_HANDLERS_SOLR_XML);\n    SolrResourceLoader loader = new SolrResourceLoader(\"solr/collection1\");\n\n    CoreContainer cc = new CoreContainer(loader, config);\n    try {\n      cc.load();\n      assertThat(cc.getCollectionsHandler(), is(instanceOf(CustomCollectionsHandler.class)));\n      assertThat(cc.getInfoHandler(), is(instanceOf(CustomInfoHandler.class)));\n      assertThat(cc.getMultiCoreHandler(), is(instanceOf(CustomCoreAdminHandler.class)));\n    }\n    finally {\n      cc.shutdown();\n    }\n\n  }\n\n","bugFix":["f763a1acdb27217b4799d1ca51c816739835a3e0"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"429eefa8bf427c2fbc5d85905fea54b2f76081f5","date":1409938294,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testCustomHandlers().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testCustomHandlers().mjava","sourceNew":"  @Test\n  public void testCustomHandlers() throws Exception {\n\n    solrHomeDirectory = createTempDir(\"_customHandlers\");\n    SolrResourceLoader loader = new SolrResourceLoader(solrHomeDirectory.getAbsolutePath());\n\n    ConfigSolr config = ConfigSolr.fromString(loader, CUSTOM_HANDLERS_SOLR_XML);\n\n    CoreContainer cc = new CoreContainer(loader, config);\n    try {\n      cc.load();\n      assertThat(cc.getCollectionsHandler(), is(instanceOf(CustomCollectionsHandler.class)));\n      assertThat(cc.getInfoHandler(), is(instanceOf(CustomInfoHandler.class)));\n      assertThat(cc.getMultiCoreHandler(), is(instanceOf(CustomCoreAdminHandler.class)));\n    }\n    finally {\n      cc.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testCustomHandlers() throws Exception {\n\n    SolrResourceLoader loader = new SolrResourceLoader(\"solr/collection1\");\n    ConfigSolr config = ConfigSolr.fromString(loader, CUSTOM_HANDLERS_SOLR_XML);\n\n    CoreContainer cc = new CoreContainer(loader, config);\n    try {\n      cc.load();\n      assertThat(cc.getCollectionsHandler(), is(instanceOf(CustomCollectionsHandler.class)));\n      assertThat(cc.getInfoHandler(), is(instanceOf(CustomInfoHandler.class)));\n      assertThat(cc.getMultiCoreHandler(), is(instanceOf(CustomCoreAdminHandler.class)));\n    }\n    finally {\n      cc.shutdown();\n    }\n\n  }\n\n","bugFix":["f763a1acdb27217b4799d1ca51c816739835a3e0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testCustomHandlers().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testCustomHandlers().mjava","sourceNew":"  @Test\n  public void testCustomHandlers() throws Exception {\n\n    solrHomeDirectory = createTempDir(\"_customHandlers\").toFile();\n    SolrResourceLoader loader = new SolrResourceLoader(solrHomeDirectory.getAbsolutePath());\n\n    ConfigSolr config = ConfigSolr.fromString(loader, CUSTOM_HANDLERS_SOLR_XML);\n\n    CoreContainer cc = new CoreContainer(loader, config);\n    try {\n      cc.load();\n      assertThat(cc.getCollectionsHandler(), is(instanceOf(CustomCollectionsHandler.class)));\n      assertThat(cc.getInfoHandler(), is(instanceOf(CustomInfoHandler.class)));\n      assertThat(cc.getMultiCoreHandler(), is(instanceOf(CustomCoreAdminHandler.class)));\n    }\n    finally {\n      cc.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testCustomHandlers() throws Exception {\n\n    solrHomeDirectory = createTempDir(\"_customHandlers\");\n    SolrResourceLoader loader = new SolrResourceLoader(solrHomeDirectory.getAbsolutePath());\n\n    ConfigSolr config = ConfigSolr.fromString(loader, CUSTOM_HANDLERS_SOLR_XML);\n\n    CoreContainer cc = new CoreContainer(loader, config);\n    try {\n      cc.load();\n      assertThat(cc.getCollectionsHandler(), is(instanceOf(CustomCollectionsHandler.class)));\n      assertThat(cc.getInfoHandler(), is(instanceOf(CustomInfoHandler.class)));\n      assertThat(cc.getMultiCoreHandler(), is(instanceOf(CustomCoreAdminHandler.class)));\n    }\n    finally {\n      cc.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testCustomHandlers().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testCustomHandlers().mjava","sourceNew":"  @Test\n  public void testCustomHandlers() throws Exception {\n\n    CoreContainer cc = init(CUSTOM_HANDLERS_SOLR_XML);\n    try {\n      cc.load();\n      assertThat(cc.getCollectionsHandler(), is(instanceOf(CustomCollectionsHandler.class)));\n      assertThat(cc.getInfoHandler(), is(instanceOf(CustomInfoHandler.class)));\n      assertThat(cc.getMultiCoreHandler(), is(instanceOf(CustomCoreAdminHandler.class)));\n    }\n    finally {\n      cc.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testCustomHandlers() throws Exception {\n\n    solrHomeDirectory = createTempDir(\"_customHandlers\").toFile();\n    SolrResourceLoader loader = new SolrResourceLoader(solrHomeDirectory.getAbsolutePath());\n\n    ConfigSolr config = ConfigSolr.fromString(loader, CUSTOM_HANDLERS_SOLR_XML);\n\n    CoreContainer cc = new CoreContainer(loader, config);\n    try {\n      cc.load();\n      assertThat(cc.getCollectionsHandler(), is(instanceOf(CustomCollectionsHandler.class)));\n      assertThat(cc.getInfoHandler(), is(instanceOf(CustomInfoHandler.class)));\n      assertThat(cc.getMultiCoreHandler(), is(instanceOf(CustomCoreAdminHandler.class)));\n    }\n    finally {\n      cc.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"859081acf00749f5dd462772c571d611d4a4d2db","date":1459527719,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testCustomHandlers().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testCustomHandlers().mjava","sourceNew":"  @Test\n  public void testCustomHandlers() throws Exception {\n\n    CoreContainer cc = init(CUSTOM_HANDLERS_SOLR_XML);\n    try {\n      assertThat(cc.getCollectionsHandler(), is(instanceOf(CustomCollectionsHandler.class)));\n      assertThat(cc.getInfoHandler(), is(instanceOf(CustomInfoHandler.class)));\n      assertThat(cc.getMultiCoreHandler(), is(instanceOf(CustomCoreAdminHandler.class)));\n    }\n    finally {\n      cc.shutdown();\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testCustomHandlers() throws Exception {\n\n    CoreContainer cc = init(CUSTOM_HANDLERS_SOLR_XML);\n    try {\n      cc.load();\n      assertThat(cc.getCollectionsHandler(), is(instanceOf(CustomCollectionsHandler.class)));\n      assertThat(cc.getInfoHandler(), is(instanceOf(CustomInfoHandler.class)));\n      assertThat(cc.getMultiCoreHandler(), is(instanceOf(CustomCoreAdminHandler.class)));\n    }\n    finally {\n      cc.shutdown();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"859081acf00749f5dd462772c571d611d4a4d2db":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"f763a1acdb27217b4799d1ca51c816739835a3e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["f4abec28b874149a7223e32cc7a01704c27790de"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f763a1acdb27217b4799d1ca51c816739835a3e0"],"77993852b2d2185c378b115f8842c0adaeb8f709":["f763a1acdb27217b4799d1ca51c816739835a3e0"],"f4abec28b874149a7223e32cc7a01704c27790de":["429eefa8bf427c2fbc5d85905fea54b2f76081f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["859081acf00749f5dd462772c571d611d4a4d2db"],"429eefa8bf427c2fbc5d85905fea54b2f76081f5":["77993852b2d2185c378b115f8842c0adaeb8f709"]},"commit2Childs":{"859081acf00749f5dd462772c571d611d4a4d2db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f763a1acdb27217b4799d1ca51c816739835a3e0":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","77993852b2d2185c378b115f8842c0adaeb8f709"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f763a1acdb27217b4799d1ca51c816739835a3e0","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["859081acf00749f5dd462772c571d611d4a4d2db"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"77993852b2d2185c378b115f8842c0adaeb8f709":["429eefa8bf427c2fbc5d85905fea54b2f76081f5"],"f4abec28b874149a7223e32cc7a01704c27790de":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"429eefa8bf427c2fbc5d85905fea54b2f76081f5":["f4abec28b874149a7223e32cc7a01704c27790de"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}