{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts2#addFacets(Document,FacetsConfig,boolean).mjava","commits":[{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts2#addFacets(Document,FacetsConfig,boolean).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetCounts2#addFacets(Document,FacetsConfig,boolean).mjava","sourceNew":"  private static void addFacets(Document doc, FacetsConfig config, boolean updateTermExpectedCounts) \n      throws IOException {\n    List<FacetField> docCategories = randomCategories(random());\n    for (FacetField ff : docCategories) {\n      doc.add(ff);\n      String cp = ff.dim + \"/\" + ff.path[0];\n      allExpectedCounts.put(cp, allExpectedCounts.get(cp) + 1);\n      if (updateTermExpectedCounts) {\n        termExpectedCounts.put(cp, termExpectedCounts.get(cp) + 1);\n      }\n    }\n    // add 1 to each NO_PARENTS dimension\n    allExpectedCounts.put(CP_B, allExpectedCounts.get(CP_B) + 1);\n    allExpectedCounts.put(CP_C, allExpectedCounts.get(CP_C) + 1);\n    allExpectedCounts.put(CP_D, allExpectedCounts.get(CP_D) + 1);\n    if (updateTermExpectedCounts) {\n      termExpectedCounts.put(CP_B, termExpectedCounts.get(CP_B) + 1);\n      termExpectedCounts.put(CP_C, termExpectedCounts.get(CP_C) + 1);\n      termExpectedCounts.put(CP_D, termExpectedCounts.get(CP_D) + 1);\n    }\n  }\n\n","sourceOld":"  private static void addFacets(Document doc, FacetsConfig config, boolean updateTermExpectedCounts) \n      throws IOException {\n    List<FacetField> docCategories = randomCategories(random());\n    for (FacetField ff : docCategories) {\n      doc.add(ff);\n      String cp = ff.dim + \"/\" + ff.path[0];\n      allExpectedCounts.put(cp, allExpectedCounts.get(cp) + 1);\n      if (updateTermExpectedCounts) {\n        termExpectedCounts.put(cp, termExpectedCounts.get(cp) + 1);\n      }\n    }\n    // add 1 to each NO_PARENTS dimension\n    allExpectedCounts.put(CP_B, allExpectedCounts.get(CP_B) + 1);\n    allExpectedCounts.put(CP_C, allExpectedCounts.get(CP_C) + 1);\n    allExpectedCounts.put(CP_D, allExpectedCounts.get(CP_D) + 1);\n    if (updateTermExpectedCounts) {\n      termExpectedCounts.put(CP_B, termExpectedCounts.get(CP_B) + 1);\n      termExpectedCounts.put(CP_C, termExpectedCounts.get(CP_C) + 1);\n      termExpectedCounts.put(CP_D, termExpectedCounts.get(CP_D) + 1);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetCounts2#addFacets(Document,FacetsConfig,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private static void addFacets(Document doc, FacetsConfig config, boolean updateTermExpectedCounts) \n      throws IOException {\n    List<FacetField> docCategories = randomCategories(random());\n    for (FacetField ff : docCategories) {\n      doc.add(ff);\n      String cp = ff.dim + \"/\" + ff.path[0];\n      allExpectedCounts.put(cp, allExpectedCounts.get(cp) + 1);\n      if (updateTermExpectedCounts) {\n        termExpectedCounts.put(cp, termExpectedCounts.get(cp) + 1);\n      }\n    }\n    // add 1 to each NO_PARENTS dimension\n    allExpectedCounts.put(CP_B, allExpectedCounts.get(CP_B) + 1);\n    allExpectedCounts.put(CP_C, allExpectedCounts.get(CP_C) + 1);\n    allExpectedCounts.put(CP_D, allExpectedCounts.get(CP_D) + 1);\n    if (updateTermExpectedCounts) {\n      termExpectedCounts.put(CP_B, termExpectedCounts.get(CP_B) + 1);\n      termExpectedCounts.put(CP_C, termExpectedCounts.get(CP_C) + 1);\n      termExpectedCounts.put(CP_D, termExpectedCounts.get(CP_D) + 1);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4edc984f0f4ac77c37e48ace2932f780f888453c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4edc984f0f4ac77c37e48ace2932f780f888453c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4edc984f0f4ac77c37e48ace2932f780f888453c","3cc728b07df73b197e6d940d27f9b08b63918f13"],"4edc984f0f4ac77c37e48ace2932f780f888453c":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}