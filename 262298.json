{"path":"lucene/core/src/java/org/apache/lucene/index/MultiReader#doClose().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiReader#doClose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/MultiReader#doClose().mjava","sourceNew":"  @Override\n  protected synchronized void doClose() throws IOException {\n    IOException ioe = null;\n    for (int i = 0; i < subReaders.length; i++) {\n      try {\n        if (closeSubReaders) {\n          subReaders[i].close();\n        } else {\n          subReaders[i].decRef();\n        }\n      } catch (IOException e) {\n        if (ioe == null) ioe = e;\n      }\n    }\n    // throw the first exception\n    if (ioe != null) throw ioe;\n  }\n\n","sourceOld":"  @Override\n  protected synchronized void doClose() throws IOException {\n    IOException ioe = null;\n    for (int i = 0; i < subReaders.length; i++) {\n      try {\n        if (closeSubReaders) {\n          subReaders[i].close();\n        } else {\n          subReaders[i].decRef();\n        }\n      } catch (IOException e) {\n        if (ioe == null) ioe = e;\n      }\n    }\n    // throw the first exception\n    if (ioe != null) throw ioe;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c","date":1340090669,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MultiReader#doClose().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MultiReader#doClose().mjava","sourceNew":"  @Override\n  protected synchronized void doClose() throws IOException {\n    IOException ioe = null;\n    for (final IndexReader r : getSequentialSubReaders()) {\n      try {\n        if (closeSubReaders) {\n          r.close();\n        } else {\n          r.decRef();\n        }\n      } catch (IOException e) {\n        if (ioe == null) ioe = e;\n      }\n    }\n    // throw the first exception\n    if (ioe != null) throw ioe;\n  }\n\n","sourceOld":"  @Override\n  protected synchronized void doClose() throws IOException {\n    IOException ioe = null;\n    for (int i = 0; i < subReaders.length; i++) {\n      try {\n        if (closeSubReaders) {\n          subReaders[i].close();\n        } else {\n          subReaders[i].decRef();\n        }\n      } catch (IOException e) {\n        if (ioe == null) ioe = e;\n      }\n    }\n    // throw the first exception\n    if (ioe != null) throw ioe;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"]},"commit2Childs":{"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}