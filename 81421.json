{"path":"lucene/core/src/test/org/apache/lucene/search/TestTopDocsMerge#testMergeTotalHitsRelation().mjava","commits":[{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTopDocsMerge#testMergeTotalHitsRelation().mjava","pathOld":"/dev/null","sourceNew":"  public void testMergeTotalHitsRelation() {\n    TopDocs topDocs1 = new TopDocs(new TotalHits(2, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n    TopDocs topDocs2 = new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n    TopDocs topDocs3 = new TopDocs(new TotalHits(1, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n    TopDocs topDocs4 = new TopDocs(new TotalHits(3, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n\n    TopDocs merged1 = TopDocs.merge(1, new TopDocs[] {topDocs1, topDocs2});\n    assertEquals(3, merged1.totalHits.value);\n    assertEquals(TotalHits.Relation.EQUAL_TO, merged1.totalHits.relation);\n\n    TopDocs merged2 = TopDocs.merge(1, new TopDocs[] {topDocs1, topDocs3});\n    assertEquals(3, merged2.totalHits.value);\n    assertEquals(TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO, merged2.totalHits.relation);\n\n    TopDocs merged3 = TopDocs.merge(1, new TopDocs[] {topDocs3, topDocs4});\n    assertEquals(4, merged3.totalHits.value);\n    assertEquals(TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO, merged3.totalHits.relation);\n\n    TopDocs merged4 = TopDocs.merge(1, new TopDocs[] {topDocs4, topDocs2});\n    assertEquals(4, merged4.totalHits.value);\n    assertEquals(TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO, merged4.totalHits.relation);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8cfef9a283b113d2e08b7bf1bbf0cee52b894f4","date":1548850288,"type":3,"author":"Luca Cavanna","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTopDocsMerge#testMergeTotalHitsRelation().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTopDocsMerge#testMergeTotalHitsRelation().mjava","sourceNew":"  public void testMergeTotalHitsRelation() {\n    TopDocs topDocs1 = new TopDocs(new TotalHits(2, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n    TopDocs topDocs2 = new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n    TopDocs topDocs3 = new TopDocs(new TotalHits(1, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n    TopDocs topDocs4 = new TopDocs(new TotalHits(3, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n\n    TopDocs merged1 = TopDocs.merge(1, new TopDocs[] {topDocs1, topDocs2});\n    assertEquals(new TotalHits(3, TotalHits.Relation.EQUAL_TO), merged1.totalHits);\n\n    TopDocs merged2 = TopDocs.merge(1, new TopDocs[] {topDocs1, topDocs3});\n    assertEquals(new TotalHits(3, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged2.totalHits);\n\n    TopDocs merged3 = TopDocs.merge(1, new TopDocs[] {topDocs3, topDocs4});\n    assertEquals(new TotalHits(4, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged3.totalHits);\n\n    TopDocs merged4 = TopDocs.merge(1, new TopDocs[] {topDocs4, topDocs2});\n    assertEquals(new TotalHits(4, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged4.totalHits);\n  }\n\n","sourceOld":"  public void testMergeTotalHitsRelation() {\n    TopDocs topDocs1 = new TopDocs(new TotalHits(2, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n    TopDocs topDocs2 = new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n    TopDocs topDocs3 = new TopDocs(new TotalHits(1, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n    TopDocs topDocs4 = new TopDocs(new TotalHits(3, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n\n    TopDocs merged1 = TopDocs.merge(1, new TopDocs[] {topDocs1, topDocs2});\n    assertEquals(3, merged1.totalHits.value);\n    assertEquals(TotalHits.Relation.EQUAL_TO, merged1.totalHits.relation);\n\n    TopDocs merged2 = TopDocs.merge(1, new TopDocs[] {topDocs1, topDocs3});\n    assertEquals(3, merged2.totalHits.value);\n    assertEquals(TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO, merged2.totalHits.relation);\n\n    TopDocs merged3 = TopDocs.merge(1, new TopDocs[] {topDocs3, topDocs4});\n    assertEquals(4, merged3.totalHits.value);\n    assertEquals(TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO, merged3.totalHits.relation);\n\n    TopDocs merged4 = TopDocs.merge(1, new TopDocs[] {topDocs4, topDocs2});\n    assertEquals(4, merged4.totalHits.value);\n    assertEquals(TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO, merged4.totalHits.relation);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36510a8e3c1ec60d366b45f8f716e9dc47589661","date":1561989412,"type":3,"author":"Atri Sharma","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTopDocsMerge#testMergeTotalHitsRelation().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTopDocsMerge#testMergeTotalHitsRelation().mjava","sourceNew":"  public void testMergeTotalHitsRelation() {\n    TopDocs topDocs1 = new TopDocs(new TotalHits(2, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f, 0) });\n    TopDocs topDocs2 = new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f, 1) });\n    TopDocs topDocs3 = new TopDocs(new TotalHits(1, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f, 2) });\n    TopDocs topDocs4 = new TopDocs(new TotalHits(3, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f, 3) });\n\n    TopDocs merged1 = TopDocs.merge(1, new TopDocs[] {topDocs1, topDocs2});\n    assertEquals(new TotalHits(3, TotalHits.Relation.EQUAL_TO), merged1.totalHits);\n\n    TopDocs merged2 = TopDocs.merge(1, new TopDocs[] {topDocs1, topDocs3});\n    assertEquals(new TotalHits(3, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged2.totalHits);\n\n    TopDocs merged3 = TopDocs.merge(1, new TopDocs[] {topDocs3, topDocs4});\n    assertEquals(new TotalHits(4, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged3.totalHits);\n\n    TopDocs merged4 = TopDocs.merge(1, new TopDocs[] {topDocs4, topDocs2});\n    assertEquals(new TotalHits(4, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged4.totalHits);\n  }\n\n","sourceOld":"  public void testMergeTotalHitsRelation() {\n    TopDocs topDocs1 = new TopDocs(new TotalHits(2, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n    TopDocs topDocs2 = new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n    TopDocs topDocs3 = new TopDocs(new TotalHits(1, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n    TopDocs topDocs4 = new TopDocs(new TotalHits(3, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n\n    TopDocs merged1 = TopDocs.merge(1, new TopDocs[] {topDocs1, topDocs2});\n    assertEquals(new TotalHits(3, TotalHits.Relation.EQUAL_TO), merged1.totalHits);\n\n    TopDocs merged2 = TopDocs.merge(1, new TopDocs[] {topDocs1, topDocs3});\n    assertEquals(new TotalHits(3, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged2.totalHits);\n\n    TopDocs merged3 = TopDocs.merge(1, new TopDocs[] {topDocs3, topDocs4});\n    assertEquals(new TotalHits(4, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged3.totalHits);\n\n    TopDocs merged4 = TopDocs.merge(1, new TopDocs[] {topDocs4, topDocs2});\n    assertEquals(new TotalHits(4, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged4.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4f6b0fb6f08ac48f438f03002a283a63cb9992","date":1561992803,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTopDocsMerge#testMergeTotalHitsRelation().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTopDocsMerge#testMergeTotalHitsRelation().mjava","sourceNew":"  public void testMergeTotalHitsRelation() {\n    TopDocs topDocs1 = new TopDocs(new TotalHits(2, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n    TopDocs topDocs2 = new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n    TopDocs topDocs3 = new TopDocs(new TotalHits(1, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n    TopDocs topDocs4 = new TopDocs(new TotalHits(3, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n\n    TopDocs merged1 = TopDocs.merge(1, new TopDocs[] {topDocs1, topDocs2});\n    assertEquals(new TotalHits(3, TotalHits.Relation.EQUAL_TO), merged1.totalHits);\n\n    TopDocs merged2 = TopDocs.merge(1, new TopDocs[] {topDocs1, topDocs3});\n    assertEquals(new TotalHits(3, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged2.totalHits);\n\n    TopDocs merged3 = TopDocs.merge(1, new TopDocs[] {topDocs3, topDocs4});\n    assertEquals(new TotalHits(4, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged3.totalHits);\n\n    TopDocs merged4 = TopDocs.merge(1, new TopDocs[] {topDocs4, topDocs2});\n    assertEquals(new TotalHits(4, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged4.totalHits);\n  }\n\n","sourceOld":"  public void testMergeTotalHitsRelation() {\n    TopDocs topDocs1 = new TopDocs(new TotalHits(2, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f, 0) });\n    TopDocs topDocs2 = new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f, 1) });\n    TopDocs topDocs3 = new TopDocs(new TotalHits(1, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f, 2) });\n    TopDocs topDocs4 = new TopDocs(new TotalHits(3, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f, 3) });\n\n    TopDocs merged1 = TopDocs.merge(1, new TopDocs[] {topDocs1, topDocs2});\n    assertEquals(new TotalHits(3, TotalHits.Relation.EQUAL_TO), merged1.totalHits);\n\n    TopDocs merged2 = TopDocs.merge(1, new TopDocs[] {topDocs1, topDocs3});\n    assertEquals(new TotalHits(3, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged2.totalHits);\n\n    TopDocs merged3 = TopDocs.merge(1, new TopDocs[] {topDocs3, topDocs4});\n    assertEquals(new TotalHits(4, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged3.totalHits);\n\n    TopDocs merged4 = TopDocs.merge(1, new TopDocs[] {topDocs4, topDocs2});\n    assertEquals(new TotalHits(4, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged4.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fccd4a691aac1aff06ab8110d8693514a34160c3","date":1562092518,"type":3,"author":"Atri Sharma","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTopDocsMerge#testMergeTotalHitsRelation().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTopDocsMerge#testMergeTotalHitsRelation().mjava","sourceNew":"  public void testMergeTotalHitsRelation() {\n    TopDocs topDocs1 = new TopDocs(new TotalHits(2, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f, 0) });\n    TopDocs topDocs2 = new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f, 1) });\n    TopDocs topDocs3 = new TopDocs(new TotalHits(1, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f, 2) });\n    TopDocs topDocs4 = new TopDocs(new TotalHits(3, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f, 3) });\n\n    TopDocs merged1 = TopDocs.merge(1, new TopDocs[] {topDocs1, topDocs2});\n    assertEquals(new TotalHits(3, TotalHits.Relation.EQUAL_TO), merged1.totalHits);\n\n    TopDocs merged2 = TopDocs.merge(1, new TopDocs[] {topDocs1, topDocs3});\n    assertEquals(new TotalHits(3, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged2.totalHits);\n\n    TopDocs merged3 = TopDocs.merge(1, new TopDocs[] {topDocs3, topDocs4});\n    assertEquals(new TotalHits(4, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged3.totalHits);\n\n    TopDocs merged4 = TopDocs.merge(1, new TopDocs[] {topDocs4, topDocs2});\n    assertEquals(new TotalHits(4, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged4.totalHits);\n  }\n\n","sourceOld":"  public void testMergeTotalHitsRelation() {\n    TopDocs topDocs1 = new TopDocs(new TotalHits(2, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n    TopDocs topDocs2 = new TopDocs(new TotalHits(1, TotalHits.Relation.EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n    TopDocs topDocs3 = new TopDocs(new TotalHits(1, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n    TopDocs topDocs4 = new TopDocs(new TotalHits(3, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), new ScoreDoc[] { new ScoreDoc(42, 2f) });\n\n    TopDocs merged1 = TopDocs.merge(1, new TopDocs[] {topDocs1, topDocs2});\n    assertEquals(new TotalHits(3, TotalHits.Relation.EQUAL_TO), merged1.totalHits);\n\n    TopDocs merged2 = TopDocs.merge(1, new TopDocs[] {topDocs1, topDocs3});\n    assertEquals(new TotalHits(3, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged2.totalHits);\n\n    TopDocs merged3 = TopDocs.merge(1, new TopDocs[] {topDocs3, topDocs4});\n    assertEquals(new TotalHits(4, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged3.totalHits);\n\n    TopDocs merged4 = TopDocs.merge(1, new TopDocs[] {topDocs4, topDocs2});\n    assertEquals(new TotalHits(4, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO), merged4.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"36510a8e3c1ec60d366b45f8f716e9dc47589661":["c8cfef9a283b113d2e08b7bf1bbf0cee52b894f4"],"c8cfef9a283b113d2e08b7bf1bbf0cee52b894f4":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"fccd4a691aac1aff06ab8110d8693514a34160c3":["5f4f6b0fb6f08ac48f438f03002a283a63cb9992"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"83788ad129a5154d5c6562c4e8ce3db48793aada":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fccd4a691aac1aff06ab8110d8693514a34160c3"],"5f4f6b0fb6f08ac48f438f03002a283a63cb9992":["36510a8e3c1ec60d366b45f8f716e9dc47589661"]},"commit2Childs":{"36510a8e3c1ec60d366b45f8f716e9dc47589661":["5f4f6b0fb6f08ac48f438f03002a283a63cb9992"],"c8cfef9a283b113d2e08b7bf1bbf0cee52b894f4":["36510a8e3c1ec60d366b45f8f716e9dc47589661"],"fccd4a691aac1aff06ab8110d8693514a34160c3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["c8cfef9a283b113d2e08b7bf1bbf0cee52b894f4"],"5f4f6b0fb6f08ac48f438f03002a283a63cb9992":["fccd4a691aac1aff06ab8110d8693514a34160c3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}