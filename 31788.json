{"path":"solr/core/src/test/org/apache/solr/cloud/LeaderInitiatedRecoveryOnCommitTest#sendCommitWithRetry(Replica).mjava","commits":[{"id":"05d1c262da1d1f850b159395fc65d7925919dc22","date":1428418196,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderInitiatedRecoveryOnCommitTest#sendCommitWithRetry(Replica).mjava","pathOld":"/dev/null","sourceNew":"  protected void sendCommitWithRetry(Replica replica) throws Exception {\n    String replicaCoreUrl = replica.getCoreUrl();\n    log.info(\"Sending commit request to: \"+replicaCoreUrl);\n    long startMs = System.currentTimeMillis();\n    try (HttpSolrClient client = new HttpSolrClient(replicaCoreUrl)) {\n      try {\n        client.commit();\n\n        long tookMs = System.currentTimeMillis() - startMs;\n        log.info(\"Sent commit request to \"+replicaCoreUrl+\" OK, took: \"+tookMs);\n      } catch (Exception exc) {\n        Throwable rootCause = SolrException.getRootCause(exc);\n        if (rootCause instanceof NoHttpResponseException) {\n          log.warn(\"No HTTP response from sending commit request to \"+replicaCoreUrl+\n              \"; will re-try after waiting 3 seconds\");\n          Thread.sleep(3000);\n          client.commit();\n          log.info(\"Second attempt at sending commit to \"+replicaCoreUrl+\" succeeded.\");\n        } else {\n          throw exc;\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bcf9886c8ff537aafde14de48ebf744f5673f08b","date":1439041198,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderInitiatedRecoveryOnCommitTest#sendCommitWithRetry(Replica).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderInitiatedRecoveryOnCommitTest#sendCommitWithRetry(Replica).mjava","sourceNew":"  protected void sendCommitWithRetry(Replica replica) throws Exception {\n    String replicaCoreUrl = replica.getCoreUrl();\n    log.info(\"Sending commit request to: \"+replicaCoreUrl);\n    final RTimer timer = new RTimer();\n    try (HttpSolrClient client = new HttpSolrClient(replicaCoreUrl)) {\n      try {\n        client.commit();\n\n        log.info(\"Sent commit request to {} OK, took {}ms\", replicaCoreUrl, timer.getTime());\n      } catch (Exception exc) {\n        Throwable rootCause = SolrException.getRootCause(exc);\n        if (rootCause instanceof NoHttpResponseException) {\n          log.warn(\"No HTTP response from sending commit request to \"+replicaCoreUrl+\n              \"; will re-try after waiting 3 seconds\");\n          Thread.sleep(3000);\n          client.commit();\n          log.info(\"Second attempt at sending commit to \"+replicaCoreUrl+\" succeeded.\");\n        } else {\n          throw exc;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  protected void sendCommitWithRetry(Replica replica) throws Exception {\n    String replicaCoreUrl = replica.getCoreUrl();\n    log.info(\"Sending commit request to: \"+replicaCoreUrl);\n    long startMs = System.currentTimeMillis();\n    try (HttpSolrClient client = new HttpSolrClient(replicaCoreUrl)) {\n      try {\n        client.commit();\n\n        long tookMs = System.currentTimeMillis() - startMs;\n        log.info(\"Sent commit request to \"+replicaCoreUrl+\" OK, took: \"+tookMs);\n      } catch (Exception exc) {\n        Throwable rootCause = SolrException.getRootCause(exc);\n        if (rootCause instanceof NoHttpResponseException) {\n          log.warn(\"No HTTP response from sending commit request to \"+replicaCoreUrl+\n              \"; will re-try after waiting 3 seconds\");\n          Thread.sleep(3000);\n          client.commit();\n          log.info(\"Second attempt at sending commit to \"+replicaCoreUrl+\" succeeded.\");\n        } else {\n          throw exc;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderInitiatedRecoveryOnCommitTest#sendCommitWithRetry(Replica).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderInitiatedRecoveryOnCommitTest#sendCommitWithRetry(Replica).mjava","sourceNew":"  protected void sendCommitWithRetry(Replica replica) throws Exception {\n    String replicaCoreUrl = replica.getCoreUrl();\n    log.info(\"Sending commit request to: \"+replicaCoreUrl);\n    final RTimer timer = new RTimer();\n    try (HttpSolrClient client = getHttpSolrClient(replicaCoreUrl)) {\n      try {\n        client.commit();\n\n        log.info(\"Sent commit request to {} OK, took {}ms\", replicaCoreUrl, timer.getTime());\n      } catch (Exception exc) {\n        Throwable rootCause = SolrException.getRootCause(exc);\n        if (rootCause instanceof NoHttpResponseException) {\n          log.warn(\"No HTTP response from sending commit request to \"+replicaCoreUrl+\n              \"; will re-try after waiting 3 seconds\");\n          Thread.sleep(3000);\n          client.commit();\n          log.info(\"Second attempt at sending commit to \"+replicaCoreUrl+\" succeeded.\");\n        } else {\n          throw exc;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  protected void sendCommitWithRetry(Replica replica) throws Exception {\n    String replicaCoreUrl = replica.getCoreUrl();\n    log.info(\"Sending commit request to: \"+replicaCoreUrl);\n    final RTimer timer = new RTimer();\n    try (HttpSolrClient client = new HttpSolrClient(replicaCoreUrl)) {\n      try {\n        client.commit();\n\n        log.info(\"Sent commit request to {} OK, took {}ms\", replicaCoreUrl, timer.getTime());\n      } catch (Exception exc) {\n        Throwable rootCause = SolrException.getRootCause(exc);\n        if (rootCause instanceof NoHttpResponseException) {\n          log.warn(\"No HTTP response from sending commit request to \"+replicaCoreUrl+\n              \"; will re-try after waiting 3 seconds\");\n          Thread.sleep(3000);\n          client.commit();\n          log.info(\"Second attempt at sending commit to \"+replicaCoreUrl+\" succeeded.\");\n        } else {\n          throw exc;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderInitiatedRecoveryOnCommitTest#sendCommitWithRetry(Replica).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderInitiatedRecoveryOnCommitTest#sendCommitWithRetry(Replica).mjava","sourceNew":"  protected void sendCommitWithRetry(Replica replica) throws Exception {\n    String replicaCoreUrl = replica.getCoreUrl();\n    log.info(\"Sending commit request to: \"+replicaCoreUrl);\n    final RTimer timer = new RTimer();\n    try (HttpSolrClient client = getHttpSolrClient(replicaCoreUrl)) {\n      try {\n        client.commit();\n\n        log.info(\"Sent commit request to {} OK, took {}ms\", replicaCoreUrl, timer.getTime());\n      } catch (Exception exc) {\n        Throwable rootCause = SolrException.getRootCause(exc);\n        if (rootCause instanceof NoHttpResponseException) {\n          log.warn(\"No HTTP response from sending commit request to \"+replicaCoreUrl+\n              \"; will re-try after waiting 3 seconds\");\n          Thread.sleep(3000);\n          client.commit();\n          log.info(\"Second attempt at sending commit to \"+replicaCoreUrl+\" succeeded.\");\n        } else {\n          throw exc;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  protected void sendCommitWithRetry(Replica replica) throws Exception {\n    String replicaCoreUrl = replica.getCoreUrl();\n    log.info(\"Sending commit request to: \"+replicaCoreUrl);\n    final RTimer timer = new RTimer();\n    try (HttpSolrClient client = new HttpSolrClient(replicaCoreUrl)) {\n      try {\n        client.commit();\n\n        log.info(\"Sent commit request to {} OK, took {}ms\", replicaCoreUrl, timer.getTime());\n      } catch (Exception exc) {\n        Throwable rootCause = SolrException.getRootCause(exc);\n        if (rootCause instanceof NoHttpResponseException) {\n          log.warn(\"No HTTP response from sending commit request to \"+replicaCoreUrl+\n              \"; will re-try after waiting 3 seconds\");\n          Thread.sleep(3000);\n          client.commit();\n          log.info(\"Second attempt at sending commit to \"+replicaCoreUrl+\" succeeded.\");\n        } else {\n          throw exc;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84f20f331d8001864545c7021812d8c6509c7593","date":1517216128,"type":5,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/HttpPartitionOnCommitTest#sendCommitWithRetry(Replica).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderInitiatedRecoveryOnCommitTest#sendCommitWithRetry(Replica).mjava","sourceNew":"  protected void sendCommitWithRetry(Replica replica) throws Exception {\n    String replicaCoreUrl = replica.getCoreUrl();\n    log.info(\"Sending commit request to: \"+replicaCoreUrl);\n    final RTimer timer = new RTimer();\n    try (HttpSolrClient client = getHttpSolrClient(replicaCoreUrl)) {\n      try {\n        client.commit();\n\n        log.info(\"Sent commit request to {} OK, took {}ms\", replicaCoreUrl, timer.getTime());\n      } catch (Exception exc) {\n        Throwable rootCause = SolrException.getRootCause(exc);\n        if (rootCause instanceof NoHttpResponseException) {\n          log.warn(\"No HTTP response from sending commit request to \"+replicaCoreUrl+\n              \"; will re-try after waiting 3 seconds\");\n          Thread.sleep(3000);\n          client.commit();\n          log.info(\"Second attempt at sending commit to \"+replicaCoreUrl+\" succeeded.\");\n        } else {\n          throw exc;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  protected void sendCommitWithRetry(Replica replica) throws Exception {\n    String replicaCoreUrl = replica.getCoreUrl();\n    log.info(\"Sending commit request to: \"+replicaCoreUrl);\n    final RTimer timer = new RTimer();\n    try (HttpSolrClient client = getHttpSolrClient(replicaCoreUrl)) {\n      try {\n        client.commit();\n\n        log.info(\"Sent commit request to {} OK, took {}ms\", replicaCoreUrl, timer.getTime());\n      } catch (Exception exc) {\n        Throwable rootCause = SolrException.getRootCause(exc);\n        if (rootCause instanceof NoHttpResponseException) {\n          log.warn(\"No HTTP response from sending commit request to \"+replicaCoreUrl+\n              \"; will re-try after waiting 3 seconds\");\n          Thread.sleep(3000);\n          client.commit();\n          log.info(\"Second attempt at sending commit to \"+replicaCoreUrl+\" succeeded.\");\n        } else {\n          throw exc;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"05d1c262da1d1f850b159395fc65d7925919dc22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["bcf9886c8ff537aafde14de48ebf744f5673f08b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["bcf9886c8ff537aafde14de48ebf744f5673f08b","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"84f20f331d8001864545c7021812d8c6509c7593":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["05d1c262da1d1f850b159395fc65d7925919dc22"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["84f20f331d8001864545c7021812d8c6509c7593"]},"commit2Childs":{"05d1c262da1d1f850b159395fc65d7925919dc22":["bcf9886c8ff537aafde14de48ebf744f5673f08b"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d1c262da1d1f850b159395fc65d7925919dc22"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["84f20f331d8001864545c7021812d8c6509c7593"],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"84f20f331d8001864545c7021812d8c6509c7593":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}