{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/CompiledAutomaton#visit(QueryVisitor,Query,String).mjava","commits":[{"id":"d35c63123a7e255b58f8cf3948eb9a6128100a32","date":1574872099,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/CompiledAutomaton#visit(QueryVisitor,Query,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Report back to a QueryVisitor how this automaton matches terms\n   */\n  public void visit(QueryVisitor visitor, Query parent, String field) {\n    if (visitor.acceptField(field)) {\n      switch (type) {\n        case NORMAL:\n          visitor.consumeTermsMatching(parent, field, runAutomaton);\n          break;\n        case NONE:\n          break;\n        case ALL:\n          visitor.consumeTermsMatching(parent, field, new ByteRunAutomaton(Automata.makeAnyString()));\n          break;\n        case SINGLE:\n          visitor.consumeTerms(parent, new Term(field, term));\n          break;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe1bc3639daa2b0731b0eac4b50e518f492d3a23","date":1588151945,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/CompiledAutomaton#visit(QueryVisitor,Query,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/CompiledAutomaton#visit(QueryVisitor,Query,String).mjava","sourceNew":"  /**\n   * Report back to a QueryVisitor how this automaton matches terms\n   */\n  public void visit(QueryVisitor visitor, Query parent, String field) {\n    if (visitor.acceptField(field)) {\n      switch (type) {\n        case NORMAL:\n          visitor.consumeTermsMatching(parent, field, () -> runAutomaton);\n          break;\n        case NONE:\n          break;\n        case ALL:\n          visitor.consumeTermsMatching(parent, field, () -> new ByteRunAutomaton(Automata.makeAnyString()));\n          break;\n        case SINGLE:\n          visitor.consumeTerms(parent, new Term(field, term));\n          break;\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Report back to a QueryVisitor how this automaton matches terms\n   */\n  public void visit(QueryVisitor visitor, Query parent, String field) {\n    if (visitor.acceptField(field)) {\n      switch (type) {\n        case NORMAL:\n          visitor.consumeTermsMatching(parent, field, runAutomaton);\n          break;\n        case NONE:\n          break;\n        case ALL:\n          visitor.consumeTermsMatching(parent, field, new ByteRunAutomaton(Automata.makeAnyString()));\n          break;\n        case SINGLE:\n          visitor.consumeTerms(parent, new Term(field, term));\n          break;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fe1bc3639daa2b0731b0eac4b50e518f492d3a23":["d35c63123a7e255b58f8cf3948eb9a6128100a32"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d35c63123a7e255b58f8cf3948eb9a6128100a32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fe1bc3639daa2b0731b0eac4b50e518f492d3a23"]},"commit2Childs":{"fe1bc3639daa2b0731b0eac4b50e518f492d3a23":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d35c63123a7e255b58f8cf3948eb9a6128100a32"],"d35c63123a7e255b58f8cf3948eb9a6128100a32":["fe1bc3639daa2b0731b0eac4b50e518f492d3a23"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}