{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestCaseInsensitive#assertStemsTo(String,String...).mjava","commits":[{"id":"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e","date":1393532367,"type":2,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestCaseInsensitive#assertStemsTo(String,String...).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell2/TestStemmer#assertStemsTo(String,String...).mjava","sourceNew":"  private void assertStemsTo(String s, String... expected) {\n    Arrays.sort(expected);\n    \n    List<CharsRef> stems = stemmer.stem(s);\n    String actual[] = new String[stems.size()];\n    for (int i = 0; i < actual.length; i++) {\n      actual[i] = stems.get(i).toString();\n    }\n    Arrays.sort(actual);\n    \n    assertArrayEquals(expected, actual);\n  }\n\n","sourceOld":"  private void assertStemsTo(String s, String... expected) {\n    Arrays.sort(expected);\n    \n    List<CharsRef> stems = stemmer.stem(s);\n    String actual[] = new String[stems.size()];\n    for (int i = 0; i < actual.length; i++) {\n      actual[i] = stems.get(i).toString();\n    }\n    Arrays.sort(actual);\n    \n    assertArrayEquals(expected, actual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba791bce8103c79e38f957e9c5a53a75871bd918","date":1393539206,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestCaseInsensitive#assertStemsTo(String,String...).mjava","pathOld":"/dev/null","sourceNew":"  private void assertStemsTo(String s, String... expected) {\n    Arrays.sort(expected);\n    \n    List<CharsRef> stems = stemmer.stem(s);\n    String actual[] = new String[stems.size()];\n    for (int i = 0; i < actual.length; i++) {\n      actual[i] = stems.get(i).toString();\n    }\n    Arrays.sort(actual);\n    \n    assertArrayEquals(expected, actual);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6859380af04f895d004c9329693653f67412aa5","date":1393571599,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/StemmerTestBase#assertStemsTo(String,String...).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/TestCaseInsensitive#assertStemsTo(String,String...).mjava","sourceNew":"  static void assertStemsTo(String s, String... expected) {\n    assertNotNull(stemmer);\n    Arrays.sort(expected);\n    \n    List<CharsRef> stems = stemmer.stem(s);\n    String actual[] = new String[stems.size()];\n    for (int i = 0; i < actual.length; i++) {\n      actual[i] = stems.get(i).toString();\n    }\n    Arrays.sort(actual);\n    \n    assertArrayEquals(expected, actual);\n  }\n\n","sourceOld":"  private void assertStemsTo(String s, String... expected) {\n    Arrays.sort(expected);\n    \n    List<CharsRef> stems = stemmer.stem(s);\n    String actual[] = new String[stems.size()];\n    for (int i = 0; i < actual.length; i++) {\n      actual[i] = stems.get(i).toString();\n    }\n    Arrays.sort(actual);\n    \n    assertArrayEquals(expected, actual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ba791bce8103c79e38f957e9c5a53a75871bd918":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dc3f094cafa4a87b4066e1d6710fa4e6afe6260e"],"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b6859380af04f895d004c9329693653f67412aa5":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b6859380af04f895d004c9329693653f67412aa5"]},"commit2Childs":{"ba791bce8103c79e38f957e9c5a53a75871bd918":["b6859380af04f895d004c9329693653f67412aa5"],"dc3f094cafa4a87b4066e1d6710fa4e6afe6260e":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba791bce8103c79e38f957e9c5a53a75871bd918","dc3f094cafa4a87b4066e1d6710fa4e6afe6260e"],"b6859380af04f895d004c9329693653f67412aa5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}