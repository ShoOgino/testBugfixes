{"path":"lucene/src/java/org/apache/lucene/index/SegmentInfos#readCurrentUserData(Directory).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfos#readCurrentUserData(Directory).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfos#readCurrentUserData(Directory).mjava","sourceNew":"  /**\n   * Returns userData from latest segments file\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static Map<String,String> readCurrentUserData(Directory directory)\n    throws CorruptIndexException, IOException {\n    SegmentInfos sis = new SegmentInfos();\n    sis.read(directory);\n    return sis.getUserData();\n  }\n\n","sourceOld":"  /**\n   * Returns userData from latest segments file\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static Map<String,String> readCurrentUserData(Directory directory)\n    throws CorruptIndexException, IOException {\n    SegmentInfos sis = new SegmentInfos();\n    sis.read(directory);\n    return sis.getUserData();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfos#readCurrentUserData(Directory).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns userData from latest segments file\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static Map<String,String> readCurrentUserData(Directory directory)\n    throws CorruptIndexException, IOException {\n    SegmentInfos sis = new SegmentInfos();\n    sis.read(directory);\n    return sis.getUserData();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfos#readCurrentUserData(Directory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfos#readCurrentUserData(Directory,CodecProvider).mjava","sourceNew":"  /**\n   * Returns userData from latest segments file\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static Map<String,String> readCurrentUserData(Directory directory)\n    throws CorruptIndexException, IOException {\n    SegmentInfos sis = new SegmentInfos();\n    sis.read(directory);\n    return sis.getUserData();\n  }\n\n","sourceOld":"  /**\n   * Returns userData from latest segments file\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static Map<String,String> readCurrentUserData(Directory directory, CodecProvider codecs)\n    throws CorruptIndexException, IOException {\n    SegmentInfos sis = new SegmentInfos(codecs);\n    sis.read(directory, codecs);\n    return sis.getUserData();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#readCurrentUserData(Directory).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfos#readCurrentUserData(Directory).mjava","sourceNew":"  /**\n   * Returns userData from latest segments file\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static Map<String,String> readCurrentUserData(Directory directory)\n    throws CorruptIndexException, IOException {\n    SegmentInfos sis = new SegmentInfos();\n    sis.read(directory);\n    return sis.getUserData();\n  }\n\n","sourceOld":"  /**\n   * Returns userData from latest segments file\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static Map<String,String> readCurrentUserData(Directory directory)\n    throws CorruptIndexException, IOException {\n    SegmentInfos sis = new SegmentInfos();\n    sis.read(directory);\n    return sis.getUserData();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7b91922b55d15444d554721b352861d028eb8278"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["7b91922b55d15444d554721b352861d028eb8278"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}