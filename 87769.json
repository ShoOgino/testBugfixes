{"path":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermValComparator#getComparableBytes(int,BytesRef).mjava","commits":[{"id":"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","date":1401983689,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermValComparator#getComparableBytes(int,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Given a document and a term, return the term itself if it exists or\n     * {@link #MISSING_BYTESREF} otherwise.\n     */\n    private BytesRef getComparableBytes(int doc, BytesRef term) {\n      if (term.length == 0 && docsWithField.get(doc) == false) {\n        return MISSING_BYTESREF;\n      }\n      return term;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"400558e34d57baf6a8e8c42d60fc1a87b5acb596","date":1405940665,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermValComparator#getComparableBytes(int,BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermValComparator#getComparableBytes(int,BytesRef).mjava","sourceNew":"    /**\n     * Given a document and a term, return the term itself if it exists or\n     * <tt>null</tt> otherwise.\n     */\n    private BytesRef getComparableBytes(int doc, BytesRef term) {\n      if (term.length == 0 && isNull(doc, term)) {\n        return null;\n      }\n      return term;\n    }\n\n","sourceOld":"    /**\n     * Given a document and a term, return the term itself if it exists or\n     * {@link #MISSING_BYTESREF} otherwise.\n     */\n    private BytesRef getComparableBytes(int doc, BytesRef term) {\n      if (term.length == 0 && docsWithField.get(doc) == false) {\n        return MISSING_BYTESREF;\n      }\n      return term;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermValComparator#getComparableBytes(int,BytesRef).mjava","sourceNew":null,"sourceOld":"    /**\n     * Given a document and a term, return the term itself if it exists or\n     * <tt>null</tt> otherwise.\n     */\n    private BytesRef getComparableBytes(int doc, BytesRef term) {\n      if (term.length == 0 && isNull(doc, term)) {\n        return null;\n      }\n      return term;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermValComparator#getComparableBytes(int,BytesRef).mjava","sourceNew":null,"sourceOld":"    /**\n     * Given a document and a term, return the term itself if it exists or\n     * <tt>null</tt> otherwise.\n     */\n    private BytesRef getComparableBytes(int doc, BytesRef term) {\n      if (term.length == 0 && isNull(doc, term)) {\n        return null;\n      }\n      return term;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermValComparator#getComparableBytes(int,BytesRef).mjava","sourceNew":null,"sourceOld":"    /**\n     * Given a document and a term, return the term itself if it exists or\n     * <tt>null</tt> otherwise.\n     */\n    private BytesRef getComparableBytes(int doc, BytesRef term) {\n      if (term.length == 0 && isNull(doc, term)) {\n        return null;\n      }\n      return term;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["400558e34d57baf6a8e8c42d60fc1a87b5acb596","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["400558e34d57baf6a8e8c42d60fc1a87b5acb596"],"400558e34d57baf6a8e8c42d60fc1a87b5acb596":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["400558e34d57baf6a8e8c42d60fc1a87b5acb596","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["400558e34d57baf6a8e8c42d60fc1a87b5acb596"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"400558e34d57baf6a8e8c42d60fc1a87b5acb596":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}