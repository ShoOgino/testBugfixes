{"path":"backwards/src/test/org/apache/lucene/index/TestIndexReader#testFilesOpenClose().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/index/TestIndexReader#testFilesOpenClose().mjava","pathOld":"/dev/null","sourceNew":"  public void testFilesOpenClose() throws IOException\n    {\n        // Create initial data set\n        File dirFile = new File(System.getProperty(\"tempDir\"), \"testIndex\");\n        Directory dir = getDirectory();\n        IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, \"test\");\n        writer.close();\n        dir.close();\n\n        // Try to erase the data - this ensures that the writer closed all files\n        _TestUtil.rmDir(dirFile);\n        dir = getDirectory();\n\n        // Now create the data set again, just as before\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, \"test\");\n        writer.close();\n        dir.close();\n\n        // Now open existing directory and test that reader closes all files\n        dir = getDirectory();\n        IndexReader reader1 = IndexReader.open(dir, false);\n        reader1.close();\n        dir.close();\n\n        // The following will fail if reader did not close\n        // all files\n        _TestUtil.rmDir(dirFile);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexReader#testFilesOpenClose().mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestIndexReader#testFilesOpenClose().mjava","sourceNew":"  public void testFilesOpenClose() throws IOException\n    {\n        // Create initial data set\n        File dirFile = new File(System.getProperty(\"tempDir\"), \"testIndex\");\n        Directory dir = getDirectory();\n        IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, \"test\");\n        writer.close();\n        dir.close();\n\n        // Try to erase the data - this ensures that the writer closed all files\n        _TestUtil.rmDir(dirFile);\n        dir = getDirectory();\n\n        // Now create the data set again, just as before\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, \"test\");\n        writer.close();\n        dir.close();\n\n        // Now open existing directory and test that reader closes all files\n        dir = getDirectory();\n        IndexReader reader1 = IndexReader.open(dir, false);\n        reader1.close();\n        dir.close();\n\n        // The following will fail if reader did not close\n        // all files\n        _TestUtil.rmDir(dirFile);\n    }\n\n","sourceOld":"  public void testFilesOpenClose() throws IOException\n    {\n        // Create initial data set\n        File dirFile = new File(System.getProperty(\"tempDir\"), \"testIndex\");\n        Directory dir = getDirectory();\n        IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, \"test\");\n        writer.close();\n        dir.close();\n\n        // Try to erase the data - this ensures that the writer closed all files\n        _TestUtil.rmDir(dirFile);\n        dir = getDirectory();\n\n        // Now create the data set again, just as before\n        writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n        addDoc(writer, \"test\");\n        writer.close();\n        dir.close();\n\n        // Now open existing directory and test that reader closes all files\n        dir = getDirectory();\n        IndexReader reader1 = IndexReader.open(dir, false);\n        reader1.close();\n        dir.close();\n\n        // The following will fail if reader did not close\n        // all files\n        _TestUtil.rmDir(dirFile);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}