{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestDecimalDigitFilter#getRandomDecimalDigit(Random).mjava","commits":[{"id":"aae05b52a79e8b9df9f7ea8b383820f98d2fed7e","date":1476779931,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestDecimalDigitFilter#getRandomDecimalDigit(Random).mjava","pathOld":"/dev/null","sourceNew":"  /** returns a psuedo-random codepoint which is a Decimal Digit */\n  public static int getRandomDecimalDigit(Random r) {\n    final int aprox = TestUtil.nextInt(r, 0, DECIMAL_DIGIT_CODEPOINTS.length()-1);\n    \n    if (DECIMAL_DIGIT_CODEPOINTS.get(aprox)) { // lucky guess\n      assert Character.isDigit(aprox);\n      return aprox;\n    }\n    \n    // seek up and down for closest set bit\n    final int lower = DECIMAL_DIGIT_CODEPOINTS.prevSetBit(aprox);\n    final int higher = DECIMAL_DIGIT_CODEPOINTS.nextSetBit(aprox);\n    \n    // sanity check edge cases\n    if (lower < 0) {\n      assert higher != DocIdSetIterator.NO_MORE_DOCS;\n      assert Character.isDigit(higher);\n      return higher;\n    }\n    if (higher == DocIdSetIterator.NO_MORE_DOCS) {\n      assert 0 <= lower;\n      assert Character.isDigit(lower);\n      return lower;\n    }\n    \n    // which is closer?\n    final int cmp = Integer.compare(aprox - lower, higher - aprox);\n    \n    if (0 == cmp) {\n      // dead even, flip a coin\n      final int result = random().nextBoolean() ? lower : higher;\n      assert Character.isDigit(result);\n      return result;\n    }\n    \n    final int result = (cmp < 0) ? lower : higher;\n    assert Character.isDigit(result);\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestDecimalDigitFilter#getRandomDecimalDigit(Random).mjava","pathOld":"/dev/null","sourceNew":"  /** returns a psuedo-random codepoint which is a Decimal Digit */\n  public static int getRandomDecimalDigit(Random r) {\n    final int aprox = TestUtil.nextInt(r, 0, DECIMAL_DIGIT_CODEPOINTS.length()-1);\n    \n    if (DECIMAL_DIGIT_CODEPOINTS.get(aprox)) { // lucky guess\n      assert Character.isDigit(aprox);\n      return aprox;\n    }\n    \n    // seek up and down for closest set bit\n    final int lower = DECIMAL_DIGIT_CODEPOINTS.prevSetBit(aprox);\n    final int higher = DECIMAL_DIGIT_CODEPOINTS.nextSetBit(aprox);\n    \n    // sanity check edge cases\n    if (lower < 0) {\n      assert higher != DocIdSetIterator.NO_MORE_DOCS;\n      assert Character.isDigit(higher);\n      return higher;\n    }\n    if (higher == DocIdSetIterator.NO_MORE_DOCS) {\n      assert 0 <= lower;\n      assert Character.isDigit(lower);\n      return lower;\n    }\n    \n    // which is closer?\n    final int cmp = Integer.compare(aprox - lower, higher - aprox);\n    \n    if (0 == cmp) {\n      // dead even, flip a coin\n      final int result = random().nextBoolean() ? lower : higher;\n      assert Character.isDigit(result);\n      return result;\n    }\n    \n    final int result = (cmp < 0) ? lower : higher;\n    assert Character.isDigit(result);\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"aae05b52a79e8b9df9f7ea8b383820f98d2fed7e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","aae05b52a79e8b9df9f7ea8b383820f98d2fed7e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aae05b52a79e8b9df9f7ea8b383820f98d2fed7e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aae05b52a79e8b9df9f7ea8b383820f98d2fed7e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"aae05b52a79e8b9df9f7ea8b383820f98d2fed7e":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}