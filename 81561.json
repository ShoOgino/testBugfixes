{"path":"lucene/src/java/org/apache/lucene/analysis/Analyzer#assertFinal().mjava","commits":[{"id":"9924ae8182f54b91a3776337f6aff2358372ce1c","date":1270982258,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/Analyzer#assertFinal().mjava","pathOld":"/dev/null","sourceNew":"  private boolean assertFinal() {\n    try {\n      final Class<?> clazz = getClass();\n      assert clazz.isAnonymousClass() ||\n        (clazz.getModifiers() & (Modifier.FINAL | Modifier.PRIVATE)) != 0 ||\n        (\n          Modifier.isFinal(clazz.getMethod(\"tokenStream\", String.class, Reader.class).getModifiers()) &&\n          Modifier.isFinal(clazz.getMethod(\"reusableTokenStream\", String.class, Reader.class).getModifiers())\n        ) :\n        \"Analyzer implementation classes or at least their tokenStream() and reusableTokenStream() implementations must be final\";\n      return true;\n    } catch (NoSuchMethodException nsme) {\n      return false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5381e642cb753532f8f0d276a8bc118cd90646d9","date":1316336347,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/Analyzer#assertFinal().mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/Analyzer#assertFinal().mjava","sourceNew":"  private boolean assertFinal() {\n    try {\n      final Class<?> clazz = getClass();\n      if (!clazz.desiredAssertionStatus())\n        return true;\n      assert clazz.isAnonymousClass() ||\n        (clazz.getModifiers() & (Modifier.FINAL | Modifier.PRIVATE)) != 0 ||\n        (\n          Modifier.isFinal(clazz.getMethod(\"tokenStream\", String.class, Reader.class).getModifiers()) &&\n          Modifier.isFinal(clazz.getMethod(\"reusableTokenStream\", String.class, Reader.class).getModifiers())\n        ) :\n        \"Analyzer implementation classes or at least their tokenStream() and reusableTokenStream() implementations must be final\";\n      return true;\n    } catch (NoSuchMethodException nsme) {\n      return false;\n    }\n  }\n\n","sourceOld":"  private boolean assertFinal() {\n    try {\n      final Class<?> clazz = getClass();\n      assert clazz.isAnonymousClass() ||\n        (clazz.getModifiers() & (Modifier.FINAL | Modifier.PRIVATE)) != 0 ||\n        (\n          Modifier.isFinal(clazz.getMethod(\"tokenStream\", String.class, Reader.class).getModifiers()) &&\n          Modifier.isFinal(clazz.getMethod(\"reusableTokenStream\", String.class, Reader.class).getModifiers())\n        ) :\n        \"Analyzer implementation classes or at least their tokenStream() and reusableTokenStream() implementations must be final\";\n      return true;\n    } catch (NoSuchMethodException nsme) {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f49143da0a5d278a72f741432047fcfa6da996e","date":1316927425,"type":4,"author":"Christopher John Male","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/analysis/Analyzer#assertFinal().mjava","sourceNew":null,"sourceOld":"  private boolean assertFinal() {\n    try {\n      final Class<?> clazz = getClass();\n      if (!clazz.desiredAssertionStatus())\n        return true;\n      assert clazz.isAnonymousClass() ||\n        (clazz.getModifiers() & (Modifier.FINAL | Modifier.PRIVATE)) != 0 ||\n        (\n          Modifier.isFinal(clazz.getMethod(\"tokenStream\", String.class, Reader.class).getModifiers()) &&\n          Modifier.isFinal(clazz.getMethod(\"reusableTokenStream\", String.class, Reader.class).getModifiers())\n        ) :\n        \"Analyzer implementation classes or at least their tokenStream() and reusableTokenStream() implementations must be final\";\n      return true;\n    } catch (NoSuchMethodException nsme) {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9924ae8182f54b91a3776337f6aff2358372ce1c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2f49143da0a5d278a72f741432047fcfa6da996e":["5381e642cb753532f8f0d276a8bc118cd90646d9"],"5381e642cb753532f8f0d276a8bc118cd90646d9":["9924ae8182f54b91a3776337f6aff2358372ce1c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2f49143da0a5d278a72f741432047fcfa6da996e"]},"commit2Childs":{"9924ae8182f54b91a3776337f6aff2358372ce1c":["5381e642cb753532f8f0d276a8bc118cd90646d9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9924ae8182f54b91a3776337f6aff2358372ce1c"],"2f49143da0a5d278a72f741432047fcfa6da996e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5381e642cb753532f8f0d276a8bc118cd90646d9":["2f49143da0a5d278a72f741432047fcfa6da996e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}