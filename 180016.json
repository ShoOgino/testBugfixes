{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#readAttr2().mjava","commits":[{"id":"9b31138e7b06f84b96de212b2102103cb629ee68","date":1272962032,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#readAttr2().mjava","pathOld":"solr/src/java/org/apache/solr/analysis/HTMLStripCharFilter#readAttr2().mjava","sourceNew":"  /***\n  [10]    AttValue     ::=    '\"' ([^<&\"] | Reference)* '\"'\n        |  \"'\" ([^<&'] | Reference)* \"'\"\n\n  need to also handle unquoted attributes, and attributes w/o values:\n  <td id=msviGlobalToolbar height=\"22\" nowrap align=left>\n\n  ***/\n\n    // This reads attributes and attempts to handle any\n    // embedded server side includes that would otherwise\n    // mess up the quote handling.\n    //  <a href=\"a/<!--#echo \"path\"-->\">\n    private int readAttr2() throws IOException {\n    if ((numRead - lastMark < safeReadAheadLimit)) {\n      int ch = next();\n      if (!isFirstIdChar(ch)) return MISMATCH;\n      ch = next();\n      while(isIdChar(ch) && ((numRead - lastMark) < safeReadAheadLimit)){\n        ch=next();\n      }\n      if (isSpace(ch)) ch = nextSkipWS();\n\n      // attributes may not have a value at all!\n      // if (ch != '=') return MISMATCH;\n      if (ch != '=') {\n        push(ch);\n        return MATCH;\n      }\n\n      int quoteChar = nextSkipWS();\n\n      if (quoteChar=='\"' || quoteChar=='\\'') {\n        while ((numRead - lastMark) < safeReadAheadLimit) {\n          ch = next();\n          if (ch<0) return MISMATCH;\n          else if (ch=='<') {\n            eatSSI();\n          }\n          else if (ch==quoteChar) {\n            return MATCH;\n          //} else if (ch=='<') {\n          //  return MISMATCH;\n          }\n\n        }\n      } else {\n        // unquoted attribute\n        while ((numRead - lastMark) < safeReadAheadLimit) {\n          ch = next();\n          if (ch<0) return MISMATCH;\n          else if (isSpace(ch)) {\n            push(ch);\n            return MATCH;\n          } else if (ch=='>') {\n            push(ch);\n            return MATCH;\n          } else if (ch=='<') {\n            eatSSI();\n          }\n\n        }\n      }\n    }\n    return MISMATCH;\n  }\n\n","sourceOld":"  /***\n  [10]    AttValue     ::=    '\"' ([^<&\"] | Reference)* '\"'\n        |  \"'\" ([^<&'] | Reference)* \"'\"\n\n  need to also handle unquoted attributes, and attributes w/o values:\n  <td id=msviGlobalToolbar height=\"22\" nowrap align=left>\n\n  ***/\n\n    // This reads attributes and attempts to handle any\n    // embedded server side includes that would otherwise\n    // mess up the quote handling.\n    //  <a href=\"a/<!--#echo \"path\"-->\">\n    private int readAttr2() throws IOException {\n    if ((numRead - lastMark < safeReadAheadLimit)) {\n      int ch = next();\n      if (!isFirstIdChar(ch)) return MISMATCH;\n      ch = next();\n      while(isIdChar(ch) && ((numRead - lastMark) < safeReadAheadLimit)){\n        ch=next();\n      }\n      if (isSpace(ch)) ch = nextSkipWS();\n\n      // attributes may not have a value at all!\n      // if (ch != '=') return MISMATCH;\n      if (ch != '=') {\n        push(ch);\n        return MATCH;\n      }\n\n      int quoteChar = nextSkipWS();\n\n      if (quoteChar=='\"' || quoteChar=='\\'') {\n        while ((numRead - lastMark) < safeReadAheadLimit) {\n          ch = next();\n          if (ch<0) return MISMATCH;\n          else if (ch=='<') {\n            eatSSI();\n          }\n          else if (ch==quoteChar) {\n            return MATCH;\n          //} else if (ch=='<') {\n          //  return MISMATCH;\n          }\n\n        }\n      } else {\n        // unquoted attribute\n        while ((numRead - lastMark) < safeReadAheadLimit) {\n          ch = next();\n          if (ch<0) return MISMATCH;\n          else if (isSpace(ch)) {\n            push(ch);\n            return MATCH;\n          } else if (ch=='>') {\n            push(ch);\n            return MATCH;\n          } else if (ch=='<') {\n            eatSSI();\n          }\n\n        }\n      }\n    }\n    return MISMATCH;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#readAttr2().mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter#readAttr2().mjava","sourceNew":"  /***\n  [10]    AttValue     ::=    '\"' ([^<&\"] | Reference)* '\"'\n        |  \"'\" ([^<&'] | Reference)* \"'\"\n\n  need to also handle unquoted attributes, and attributes w/o values:\n  <td id=msviGlobalToolbar height=\"22\" nowrap align=left>\n\n  ***/\n\n    // This reads attributes and attempts to handle any\n    // embedded server side includes that would otherwise\n    // mess up the quote handling.\n    //  <a href=\"a/<!--#echo \"path\"-->\">\n    private int readAttr2() throws IOException {\n    if ((numRead - lastMark < safeReadAheadLimit)) {\n      int ch = next();\n      if (!isFirstIdChar(ch)) return MISMATCH;\n      ch = next();\n      while(isIdChar(ch) && ((numRead - lastMark) < safeReadAheadLimit)){\n        ch=next();\n      }\n      if (isSpace(ch)) ch = nextSkipWS();\n\n      // attributes may not have a value at all!\n      // if (ch != '=') return MISMATCH;\n      if (ch != '=') {\n        push(ch);\n        return MATCH;\n      }\n\n      int quoteChar = nextSkipWS();\n\n      if (quoteChar=='\"' || quoteChar=='\\'') {\n        while ((numRead - lastMark) < safeReadAheadLimit) {\n          ch = next();\n          if (ch<0) return MISMATCH;\n          else if (ch=='<') {\n            eatSSI();\n          }\n          else if (ch==quoteChar) {\n            return MATCH;\n          //} else if (ch=='<') {\n          //  return MISMATCH;\n          }\n\n        }\n      } else {\n        // unquoted attribute\n        while ((numRead - lastMark) < safeReadAheadLimit) {\n          ch = next();\n          if (ch<0) return MISMATCH;\n          else if (isSpace(ch)) {\n            push(ch);\n            return MATCH;\n          } else if (ch=='>') {\n            push(ch);\n            return MATCH;\n          } else if (ch=='<') {\n            eatSSI();\n          }\n\n        }\n      }\n    }\n    return MISMATCH;\n  }\n\n","sourceOld":"  /***\n  [10]    AttValue     ::=    '\"' ([^<&\"] | Reference)* '\"'\n        |  \"'\" ([^<&'] | Reference)* \"'\"\n\n  need to also handle unquoted attributes, and attributes w/o values:\n  <td id=msviGlobalToolbar height=\"22\" nowrap align=left>\n\n  ***/\n\n    // This reads attributes and attempts to handle any\n    // embedded server side includes that would otherwise\n    // mess up the quote handling.\n    //  <a href=\"a/<!--#echo \"path\"-->\">\n    private int readAttr2() throws IOException {\n    if ((numRead - lastMark < safeReadAheadLimit)) {\n      int ch = next();\n      if (!isFirstIdChar(ch)) return MISMATCH;\n      ch = next();\n      while(isIdChar(ch) && ((numRead - lastMark) < safeReadAheadLimit)){\n        ch=next();\n      }\n      if (isSpace(ch)) ch = nextSkipWS();\n\n      // attributes may not have a value at all!\n      // if (ch != '=') return MISMATCH;\n      if (ch != '=') {\n        push(ch);\n        return MATCH;\n      }\n\n      int quoteChar = nextSkipWS();\n\n      if (quoteChar=='\"' || quoteChar=='\\'') {\n        while ((numRead - lastMark) < safeReadAheadLimit) {\n          ch = next();\n          if (ch<0) return MISMATCH;\n          else if (ch=='<') {\n            eatSSI();\n          }\n          else if (ch==quoteChar) {\n            return MATCH;\n          //} else if (ch=='<') {\n          //  return MISMATCH;\n          }\n\n        }\n      } else {\n        // unquoted attribute\n        while ((numRead - lastMark) < safeReadAheadLimit) {\n          ch = next();\n          if (ch<0) return MISMATCH;\n          else if (isSpace(ch)) {\n            push(ch);\n            return MATCH;\n          } else if (ch=='>') {\n            push(ch);\n            return MATCH;\n          } else if (ch=='<') {\n            eatSSI();\n          }\n\n        }\n      }\n    }\n    return MISMATCH;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9b31138e7b06f84b96de212b2102103cb629ee68":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9b31138e7b06f84b96de212b2102103cb629ee68"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"]},"commit2Childs":{"9b31138e7b06f84b96de212b2102103cb629ee68":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9b31138e7b06f84b96de212b2102103cb629ee68"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}