{"path":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","commits":[{"id":"bd8bc29700397ec1886e73bae0a67ff536bad223","date":1362159450,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(\"repeater\", null);\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      repeaterClient = createNewSolrServer(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeater.tearDown();\n        repeaterJetty = null;\n      }\n    }\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","e48bb0af7b982aecd8dbafdbeded231282bfdee2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4c7856260bc28f285ae7bfefa99b28db4dca6daf","date":1395253500,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","sourceNew":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(\"repeater\", null);\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.shutdown();\n      }\n      repeaterClient = createNewSolrServer(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeater.tearDown();\n        repeaterJetty = null;\n      }\n    }\n    \n  }\n\n","sourceOld":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(\"repeater\", null);\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      repeaterClient = createNewSolrServer(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeater.tearDown();\n        repeaterJetty = null;\n      }\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19","date":1400739326,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","sourceNew":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\"), \"repeater\", null);\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.shutdown();\n      }\n      repeaterClient = createNewSolrServer(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeater.tearDown();\n        repeaterJetty = null;\n      }\n    }\n    \n  }\n\n","sourceOld":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(\"repeater\", null);\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.shutdown();\n      }\n      repeaterClient = createNewSolrServer(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeater.tearDown();\n        repeaterJetty = null;\n      }\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","sourceNew":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\"), \"repeater\", null);\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.shutdown();\n      }\n      repeaterClient = createNewSolrServer(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeater.tearDown();\n        repeaterJetty = null;\n      }\n    }\n    \n  }\n\n","sourceOld":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(\"repeater\", null);\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.shutdown();\n      }\n      repeaterClient = createNewSolrServer(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeater.tearDown();\n        repeaterJetty = null;\n      }\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","sourceNew":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", null);\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.shutdown();\n      }\n      repeaterClient = createNewSolrServer(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeater.tearDown();\n        repeaterJetty = null;\n      }\n    }\n    \n  }\n\n","sourceOld":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\"), \"repeater\", null);\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.shutdown();\n      }\n      repeaterClient = createNewSolrServer(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeater.tearDown();\n        repeaterJetty = null;\n      }\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":["1aa1c8dde7a7c89bbabb450609b7e49ceba5ebf9"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","sourceNew":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", null);\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.shutdown();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeater.tearDown();\n        repeaterJetty = null;\n      }\n    }\n    \n  }\n\n","sourceOld":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrServer(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", null);\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.shutdown();\n      }\n      repeaterClient = createNewSolrServer(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeater.tearDown();\n        repeaterJetty = null;\n      }\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6784d0cc613dc1ee97030eaaa5e0754edc22d164","date":1420824784,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","sourceNew":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", null);\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.shutdown();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeater.tearDown();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.shutdown();\n      }\n    }\n    \n  }\n\n","sourceOld":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", null);\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.shutdown();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeater.tearDown();\n        repeaterJetty = null;\n      }\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cc3b13b430571c2e169f98fe38e1e7666f88522d","date":1422446157,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","sourceNew":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", null);\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeater.tearDown();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n    }\n    \n  }\n\n","sourceOld":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.shutdown();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", null);\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.shutdown();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeater.tearDown();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.shutdown();\n      }\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e48bb0af7b982aecd8dbafdbeded231282bfdee2","date":1423717438,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","sourceNew":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", null);\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n    }\n    \n  }\n\n","sourceOld":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", null);\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeater.tearDown();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n    }\n    \n  }\n\n","bugFix":["bd8bc29700397ec1886e73bae0a67ff536bad223"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1aa1c8dde7a7c89bbabb450609b7e49ceba5ebf9","date":1523040621,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","sourceNew":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", masterJetty.getLocalPort());\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n    }\n    \n  }\n\n","sourceOld":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", null);\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n    }\n    \n  }\n\n","bugFix":["f4abec28b874149a7223e32cc7a01704c27790de"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"aa62115b9e45c213699273acb13af242762232e4","date":1523184285,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","sourceNew":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", masterJetty.getLocalPort());\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n    }\n    \n  }\n\n","sourceOld":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", null);\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","sourceNew":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createAndStartJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", masterJetty.getLocalPort());\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createAndStartJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n    }\n    \n  }\n\n","sourceOld":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", masterJetty.getLocalPort());\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n    }\n    \n  }\n\n","bugFix":["bd8bc29700397ec1886e73bae0a67ff536bad223"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e","date":1596664368,"type":3,"author":"Marcus","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestRepeater().mjava","sourceNew":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    follower.setTestPort(leaderJetty.getLocalPort());\n    follower.copyConfigFile(CONF_DIR + \"solrconfig-follower1.xml\", \"solrconfig.xml\");\n    followerJetty.stop();\n    followerJetty = createAndStartJetty(follower);\n    followerClient.close();\n    followerClient = createNewSolrClient(followerJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", leaderJetty.getLocalPort());\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createAndStartJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n\n      leaderClient.commit();\n      \n      pullFromTo(leaderJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, followerJetty);\n      \n      rQuery(3, \"*:*\", followerClient);\n      \n      assertVersions(leaderClient, repeaterClient);\n      assertVersions(repeaterClient, followerClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(leaderJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, followerJetty);\n      \n      rQuery(3, \"*:*\", followerClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(leaderClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      leaderClient.commit();\n      \n      pullFromTo(leaderJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, followerJetty);\n      \n      rQuery(6, \"*:*\", followerClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n    }\n    \n  }\n\n","sourceOld":"  @Test\n  public void doTestRepeater() throws Exception {\n    // no polling\n    slave.setTestPort(masterJetty.getLocalPort());\n    slave.copyConfigFile(CONF_DIR + \"solrconfig-slave1.xml\", \"solrconfig.xml\");\n    slaveJetty.stop();\n    slaveJetty = createAndStartJetty(slave);\n    slaveClient.close();\n    slaveClient = createNewSolrClient(slaveJetty.getLocalPort());\n\n    try {\n      repeater = new SolrInstance(createTempDir(\"solr-instance\").toFile(), \"repeater\", masterJetty.getLocalPort());\n      repeater.setUp();\n      repeater.copyConfigFile(CONF_DIR + \"solrconfig-repeater.xml\",\n          \"solrconfig.xml\");\n      repeaterJetty = createAndStartJetty(repeater);\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n      repeaterClient = createNewSolrClient(repeaterJetty.getLocalPort());\n      \n      for (int i = 0; i < 3; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      assertVersions(masterClient, repeaterClient);\n      assertVersions(repeaterClient, slaveClient);\n      \n      for (int i = 0; i < 4; i++)\n        index(repeaterClient, \"id\", i, \"name\", \"name = \" + i);\n      repeaterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(3, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(3, \"*:*\", slaveClient);\n      \n      for (int i = 3; i < 6; i++)\n        index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n      \n      masterClient.commit();\n      \n      pullFromTo(masterJetty, repeaterJetty);\n      \n      rQuery(6, \"*:*\", repeaterClient);\n      \n      pullFromTo(repeaterJetty, slaveJetty);\n      \n      rQuery(6, \"*:*\", slaveClient);\n\n    } finally {\n      if (repeater != null) {\n        repeaterJetty.stop();\n        repeaterJetty = null;\n      }\n      if (repeaterClient != null) {\n        repeaterClient.close();\n      }\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"aa62115b9e45c213699273acb13af242762232e4":["e48bb0af7b982aecd8dbafdbeded231282bfdee2","1aa1c8dde7a7c89bbabb450609b7e49ceba5ebf9"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["aa62115b9e45c213699273acb13af242762232e4"],"bafca15d8e408346a67f4282ad1143b88023893b":["f4abec28b874149a7223e32cc7a01704c27790de"],"b7605579001505896d48b07160075a5c8b8e128e":["4c7856260bc28f285ae7bfefa99b28db4dca6daf","4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"f4abec28b874149a7223e32cc7a01704c27790de":["4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"bd8bc29700397ec1886e73bae0a67ff536bad223":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1aa1c8dde7a7c89bbabb450609b7e49ceba5ebf9":["e48bb0af7b982aecd8dbafdbeded231282bfdee2"],"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19":["4c7856260bc28f285ae7bfefa99b28db4dca6daf"],"4c7856260bc28f285ae7bfefa99b28db4dca6daf":["bd8bc29700397ec1886e73bae0a67ff536bad223"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e48bb0af7b982aecd8dbafdbeded231282bfdee2":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["65a5d87a40f9143cd55be76eb1dde1b32a8dae5e"]},"commit2Childs":{"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aa62115b9e45c213699273acb13af242762232e4":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["65a5d87a40f9143cd55be76eb1dde1b32a8dae5e"],"bafca15d8e408346a67f4282ad1143b88023893b":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"b7605579001505896d48b07160075a5c8b8e128e":[],"1aa1c8dde7a7c89bbabb450609b7e49ceba5ebf9":["aa62115b9e45c213699273acb13af242762232e4"],"f4abec28b874149a7223e32cc7a01704c27790de":["bafca15d8e408346a67f4282ad1143b88023893b"],"bd8bc29700397ec1886e73bae0a67ff536bad223":["4c7856260bc28f285ae7bfefa99b28db4dca6daf"],"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19":["b7605579001505896d48b07160075a5c8b8e128e","f4abec28b874149a7223e32cc7a01704c27790de"],"4c7856260bc28f285ae7bfefa99b28db4dca6daf":["b7605579001505896d48b07160075a5c8b8e128e","4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bd8bc29700397ec1886e73bae0a67ff536bad223"],"e48bb0af7b982aecd8dbafdbeded231282bfdee2":["aa62115b9e45c213699273acb13af242762232e4","1aa1c8dde7a7c89bbabb450609b7e49ceba5ebf9"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["e48bb0af7b982aecd8dbafdbeded231282bfdee2"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}