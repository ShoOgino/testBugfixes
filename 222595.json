{"path":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testHugeN().mjava","commits":[{"id":"450d0bc37c59f2de7743066469a444243907fd75","date":1366384804,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testHugeN().mjava","pathOld":"/dev/null","sourceNew":"  // should not throw exception\n  public void testHugeN() throws Exception {\n    ExecutorService service = new ThreadPoolExecutor(4, 4, 0L, TimeUnit.MILLISECONDS,\n                                   new LinkedBlockingQueue<Runnable>(),\n                                   new NamedThreadFactory(\"TestIndexSearcher\"));\n    \n    IndexSearcher searchers[] = new IndexSearcher[] {\n        new IndexSearcher(reader),\n        new IndexSearcher(reader, service)\n    };\n    Query queries[] = new Query[] {\n        new MatchAllDocsQuery(),\n        new TermQuery(new Term(\"field\", \"1\"))\n    };\n    Sort sorts[] = new Sort[] {\n        null,\n        new Sort(new SortField(\"field2\", SortField.Type.STRING))\n    };\n    Filter filters[] = new Filter[] {\n        null,\n        new QueryWrapperFilter(new TermQuery(new Term(\"field2\", \"true\")))\n    };\n    ScoreDoc afters[] = new ScoreDoc[] {\n        null,\n        new FieldDoc(0, 0f, new Object[] { new BytesRef(\"boo!\") })\n    };\n    \n    for (IndexSearcher searcher : searchers) {\n      for (ScoreDoc after : afters) {\n        for (Query query : queries) {\n          for (Sort sort : sorts) {\n            for (Filter filter : filters) {\n              searcher.search(query, Integer.MAX_VALUE);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE);\n              searcher.search(query, filter, Integer.MAX_VALUE);\n              searcher.searchAfter(after, query, filter, Integer.MAX_VALUE);\n              if (sort != null) {\n                searcher.search(query, Integer.MAX_VALUE, sort);\n                searcher.search(query, filter, Integer.MAX_VALUE, sort);\n                searcher.search(query, filter, Integer.MAX_VALUE, sort, true, true);\n                searcher.search(query, filter, Integer.MAX_VALUE, sort, true, false);\n                searcher.search(query, filter, Integer.MAX_VALUE, sort, false, true);\n                searcher.search(query, filter, Integer.MAX_VALUE, sort, false, false);\n                searcher.searchAfter(after, query, filter, Integer.MAX_VALUE, sort);\n                searcher.searchAfter(after, query, filter, Integer.MAX_VALUE, sort, true, true);\n                searcher.searchAfter(after, query, filter, Integer.MAX_VALUE, sort, true, false);\n                searcher.searchAfter(after, query, filter, Integer.MAX_VALUE, sort, false, true);\n                searcher.searchAfter(after, query, filter, Integer.MAX_VALUE, sort, false, false);\n              }\n            }\n          }\n        }\n      }\n    }\n    \n    _TestUtil.shutdownExecutorService(service);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testHugeN().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testHugeN().mjava","sourceNew":"  // should not throw exception\n  public void testHugeN() throws Exception {\n    ExecutorService service = new ThreadPoolExecutor(4, 4, 0L, TimeUnit.MILLISECONDS,\n                                   new LinkedBlockingQueue<Runnable>(),\n                                   new NamedThreadFactory(\"TestIndexSearcher\"));\n    \n    IndexSearcher searchers[] = new IndexSearcher[] {\n        new IndexSearcher(reader),\n        new IndexSearcher(reader, service)\n    };\n    Query queries[] = new Query[] {\n        new MatchAllDocsQuery(),\n        new TermQuery(new Term(\"field\", \"1\"))\n    };\n    Sort sorts[] = new Sort[] {\n        null,\n        new Sort(new SortField(\"field2\", SortField.Type.STRING))\n    };\n    Filter filters[] = new Filter[] {\n        null,\n        new QueryWrapperFilter(new TermQuery(new Term(\"field2\", \"true\")))\n    };\n    ScoreDoc afters[] = new ScoreDoc[] {\n        null,\n        new FieldDoc(0, 0f, new Object[] { new BytesRef(\"boo!\") })\n    };\n    \n    for (IndexSearcher searcher : searchers) {\n      for (ScoreDoc after : afters) {\n        for (Query query : queries) {\n          for (Sort sort : sorts) {\n            for (Filter filter : filters) {\n              searcher.search(query, Integer.MAX_VALUE);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE);\n              searcher.search(query, filter, Integer.MAX_VALUE);\n              searcher.searchAfter(after, query, filter, Integer.MAX_VALUE);\n              if (sort != null) {\n                searcher.search(query, Integer.MAX_VALUE, sort);\n                searcher.search(query, filter, Integer.MAX_VALUE, sort);\n                searcher.search(query, filter, Integer.MAX_VALUE, sort, true, true);\n                searcher.search(query, filter, Integer.MAX_VALUE, sort, true, false);\n                searcher.search(query, filter, Integer.MAX_VALUE, sort, false, true);\n                searcher.search(query, filter, Integer.MAX_VALUE, sort, false, false);\n                searcher.searchAfter(after, query, filter, Integer.MAX_VALUE, sort);\n                searcher.searchAfter(after, query, filter, Integer.MAX_VALUE, sort, true, true);\n                searcher.searchAfter(after, query, filter, Integer.MAX_VALUE, sort, true, false);\n                searcher.searchAfter(after, query, filter, Integer.MAX_VALUE, sort, false, true);\n                searcher.searchAfter(after, query, filter, Integer.MAX_VALUE, sort, false, false);\n              }\n            }\n          }\n        }\n      }\n    }\n    \n    TestUtil.shutdownExecutorService(service);\n  }\n\n","sourceOld":"  // should not throw exception\n  public void testHugeN() throws Exception {\n    ExecutorService service = new ThreadPoolExecutor(4, 4, 0L, TimeUnit.MILLISECONDS,\n                                   new LinkedBlockingQueue<Runnable>(),\n                                   new NamedThreadFactory(\"TestIndexSearcher\"));\n    \n    IndexSearcher searchers[] = new IndexSearcher[] {\n        new IndexSearcher(reader),\n        new IndexSearcher(reader, service)\n    };\n    Query queries[] = new Query[] {\n        new MatchAllDocsQuery(),\n        new TermQuery(new Term(\"field\", \"1\"))\n    };\n    Sort sorts[] = new Sort[] {\n        null,\n        new Sort(new SortField(\"field2\", SortField.Type.STRING))\n    };\n    Filter filters[] = new Filter[] {\n        null,\n        new QueryWrapperFilter(new TermQuery(new Term(\"field2\", \"true\")))\n    };\n    ScoreDoc afters[] = new ScoreDoc[] {\n        null,\n        new FieldDoc(0, 0f, new Object[] { new BytesRef(\"boo!\") })\n    };\n    \n    for (IndexSearcher searcher : searchers) {\n      for (ScoreDoc after : afters) {\n        for (Query query : queries) {\n          for (Sort sort : sorts) {\n            for (Filter filter : filters) {\n              searcher.search(query, Integer.MAX_VALUE);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE);\n              searcher.search(query, filter, Integer.MAX_VALUE);\n              searcher.searchAfter(after, query, filter, Integer.MAX_VALUE);\n              if (sort != null) {\n                searcher.search(query, Integer.MAX_VALUE, sort);\n                searcher.search(query, filter, Integer.MAX_VALUE, sort);\n                searcher.search(query, filter, Integer.MAX_VALUE, sort, true, true);\n                searcher.search(query, filter, Integer.MAX_VALUE, sort, true, false);\n                searcher.search(query, filter, Integer.MAX_VALUE, sort, false, true);\n                searcher.search(query, filter, Integer.MAX_VALUE, sort, false, false);\n                searcher.searchAfter(after, query, filter, Integer.MAX_VALUE, sort);\n                searcher.searchAfter(after, query, filter, Integer.MAX_VALUE, sort, true, true);\n                searcher.searchAfter(after, query, filter, Integer.MAX_VALUE, sort, true, false);\n                searcher.searchAfter(after, query, filter, Integer.MAX_VALUE, sort, false, true);\n                searcher.searchAfter(after, query, filter, Integer.MAX_VALUE, sort, false, false);\n              }\n            }\n          }\n        }\n      }\n    }\n    \n    _TestUtil.shutdownExecutorService(service);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testHugeN().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testHugeN().mjava","sourceNew":"  // should not throw exception\n  public void testHugeN() throws Exception {\n    ExecutorService service = new ThreadPoolExecutor(4, 4, 0L, TimeUnit.MILLISECONDS,\n                                   new LinkedBlockingQueue<Runnable>(),\n                                   new NamedThreadFactory(\"TestIndexSearcher\"));\n    \n    IndexSearcher searchers[] = new IndexSearcher[] {\n        new IndexSearcher(reader),\n        new IndexSearcher(reader, service)\n    };\n    Query queries[] = new Query[] {\n        new MatchAllDocsQuery(),\n        new TermQuery(new Term(\"field\", \"1\"))\n    };\n    Sort sorts[] = new Sort[] {\n        null,\n        new Sort(new SortField(\"field2\", SortField.Type.STRING))\n    };\n    ScoreDoc afters[] = new ScoreDoc[] {\n        null,\n        new FieldDoc(0, 0f, new Object[] { new BytesRef(\"boo!\") })\n    };\n    \n    for (IndexSearcher searcher : searchers) {\n      for (ScoreDoc after : afters) {\n        for (Query query : queries) {\n          for (Sort sort : sorts) {\n            searcher.search(query, Integer.MAX_VALUE);\n            searcher.searchAfter(after, query, Integer.MAX_VALUE);\n            if (sort != null) {\n              searcher.search(query, Integer.MAX_VALUE, sort);\n              searcher.search(query, Integer.MAX_VALUE, sort, true, true);\n              searcher.search(query, Integer.MAX_VALUE, sort, true, false);\n              searcher.search(query, Integer.MAX_VALUE, sort, false, true);\n              searcher.search(query, Integer.MAX_VALUE, sort, false, false);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, true, true);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, true, false);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, false, true);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, false, false);\n            }\n          }\n        }\n      }\n    }\n    \n    TestUtil.shutdownExecutorService(service);\n  }\n\n","sourceOld":"  // should not throw exception\n  public void testHugeN() throws Exception {\n    ExecutorService service = new ThreadPoolExecutor(4, 4, 0L, TimeUnit.MILLISECONDS,\n                                   new LinkedBlockingQueue<Runnable>(),\n                                   new NamedThreadFactory(\"TestIndexSearcher\"));\n    \n    IndexSearcher searchers[] = new IndexSearcher[] {\n        new IndexSearcher(reader),\n        new IndexSearcher(reader, service)\n    };\n    Query queries[] = new Query[] {\n        new MatchAllDocsQuery(),\n        new TermQuery(new Term(\"field\", \"1\"))\n    };\n    Sort sorts[] = new Sort[] {\n        null,\n        new Sort(new SortField(\"field2\", SortField.Type.STRING))\n    };\n    Filter filters[] = new Filter[] {\n        null,\n        new QueryWrapperFilter(new TermQuery(new Term(\"field2\", \"true\")))\n    };\n    ScoreDoc afters[] = new ScoreDoc[] {\n        null,\n        new FieldDoc(0, 0f, new Object[] { new BytesRef(\"boo!\") })\n    };\n    \n    for (IndexSearcher searcher : searchers) {\n      for (ScoreDoc after : afters) {\n        for (Query query : queries) {\n          for (Sort sort : sorts) {\n            for (Filter filter : filters) {\n              searcher.search(query, Integer.MAX_VALUE);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE);\n              searcher.search(query, filter, Integer.MAX_VALUE);\n              searcher.searchAfter(after, query, filter, Integer.MAX_VALUE);\n              if (sort != null) {\n                searcher.search(query, Integer.MAX_VALUE, sort);\n                searcher.search(query, filter, Integer.MAX_VALUE, sort);\n                searcher.search(query, filter, Integer.MAX_VALUE, sort, true, true);\n                searcher.search(query, filter, Integer.MAX_VALUE, sort, true, false);\n                searcher.search(query, filter, Integer.MAX_VALUE, sort, false, true);\n                searcher.search(query, filter, Integer.MAX_VALUE, sort, false, false);\n                searcher.searchAfter(after, query, filter, Integer.MAX_VALUE, sort);\n                searcher.searchAfter(after, query, filter, Integer.MAX_VALUE, sort, true, true);\n                searcher.searchAfter(after, query, filter, Integer.MAX_VALUE, sort, true, false);\n                searcher.searchAfter(after, query, filter, Integer.MAX_VALUE, sort, false, true);\n                searcher.searchAfter(after, query, filter, Integer.MAX_VALUE, sort, false, false);\n              }\n            }\n          }\n        }\n      }\n    }\n    \n    TestUtil.shutdownExecutorService(service);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0a65e308c1642d1ffb120ffae140f08362e92a7","date":1441197397,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testHugeN().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testHugeN().mjava","sourceNew":"  // should not throw exception\n  public void testHugeN() throws Exception {\n    ExecutorService service = new ThreadPoolExecutor(4, 4, 0L, TimeUnit.MILLISECONDS,\n                                   new LinkedBlockingQueue<Runnable>(),\n                                   new NamedThreadFactory(\"TestIndexSearcher\"));\n\n    IndexSearcher searchers[] = new IndexSearcher[] {\n        new IndexSearcher(reader),\n        new IndexSearcher(reader, service)\n    };\n    Query queries[] = new Query[] {\n        new MatchAllDocsQuery(),\n        new TermQuery(new Term(\"field\", \"1\"))\n    };\n    Sort sorts[] = new Sort[] {\n        null,\n        new Sort(new SortField(\"field2\", SortField.Type.STRING))\n    };\n    ScoreDoc afters[] = new ScoreDoc[] {\n        null,\n        new FieldDoc(0, 0f, new Object[] { new BytesRef(\"boo!\") })\n    };\n\n    for (IndexSearcher searcher : searchers) {\n      for (ScoreDoc after : afters) {\n        for (Query query : queries) {\n          for (Sort sort : sorts) {\n            searcher.search(query, Integer.MAX_VALUE);\n            searcher.searchAfter(after, query, Integer.MAX_VALUE);\n            if (sort != null) {\n              searcher.search(query, Integer.MAX_VALUE, sort);\n              searcher.search(query, Integer.MAX_VALUE, sort, true, true);\n              searcher.search(query, Integer.MAX_VALUE, sort, true, false);\n              searcher.search(query, Integer.MAX_VALUE, sort, false, true);\n              searcher.search(query, Integer.MAX_VALUE, sort, false, false);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, true, true);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, true, false);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, false, true);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, false, false);\n            }\n          }\n        }\n      }\n    }\n\n    TestUtil.shutdownExecutorService(service);\n  }\n\n","sourceOld":"  // should not throw exception\n  public void testHugeN() throws Exception {\n    ExecutorService service = new ThreadPoolExecutor(4, 4, 0L, TimeUnit.MILLISECONDS,\n                                   new LinkedBlockingQueue<Runnable>(),\n                                   new NamedThreadFactory(\"TestIndexSearcher\"));\n    \n    IndexSearcher searchers[] = new IndexSearcher[] {\n        new IndexSearcher(reader),\n        new IndexSearcher(reader, service)\n    };\n    Query queries[] = new Query[] {\n        new MatchAllDocsQuery(),\n        new TermQuery(new Term(\"field\", \"1\"))\n    };\n    Sort sorts[] = new Sort[] {\n        null,\n        new Sort(new SortField(\"field2\", SortField.Type.STRING))\n    };\n    ScoreDoc afters[] = new ScoreDoc[] {\n        null,\n        new FieldDoc(0, 0f, new Object[] { new BytesRef(\"boo!\") })\n    };\n    \n    for (IndexSearcher searcher : searchers) {\n      for (ScoreDoc after : afters) {\n        for (Query query : queries) {\n          for (Sort sort : sorts) {\n            searcher.search(query, Integer.MAX_VALUE);\n            searcher.searchAfter(after, query, Integer.MAX_VALUE);\n            if (sort != null) {\n              searcher.search(query, Integer.MAX_VALUE, sort);\n              searcher.search(query, Integer.MAX_VALUE, sort, true, true);\n              searcher.search(query, Integer.MAX_VALUE, sort, true, false);\n              searcher.search(query, Integer.MAX_VALUE, sort, false, true);\n              searcher.search(query, Integer.MAX_VALUE, sort, false, false);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, true, true);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, true, false);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, false, true);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, false, false);\n            }\n          }\n        }\n      }\n    }\n    \n    TestUtil.shutdownExecutorService(service);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81fff83bdb893c1471efd78f6a9a3ce4f98120b9","date":1531895937,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testHugeN().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testHugeN().mjava","sourceNew":"  // should not throw exception\n  public void testHugeN() throws Exception {\n    ExecutorService service = new ThreadPoolExecutor(4, 4, 0L, TimeUnit.MILLISECONDS,\n                                   new LinkedBlockingQueue<Runnable>(),\n                                   new NamedThreadFactory(\"TestIndexSearcher\"));\n\n    IndexSearcher searchers[] = new IndexSearcher[] {\n        new IndexSearcher(reader),\n        new IndexSearcher(reader, service)\n    };\n    Query queries[] = new Query[] {\n        new MatchAllDocsQuery(),\n        new TermQuery(new Term(\"field\", \"1\"))\n    };\n    Sort sorts[] = new Sort[] {\n        null,\n        new Sort(new SortField(\"field2\", SortField.Type.STRING))\n    };\n    ScoreDoc afters[] = new ScoreDoc[] {\n        null,\n        new FieldDoc(0, 0f, new Object[] { new BytesRef(\"boo!\") })\n    };\n\n    for (IndexSearcher searcher : searchers) {\n      for (ScoreDoc after : afters) {\n        for (Query query : queries) {\n          for (Sort sort : sorts) {\n            searcher.search(query, Integer.MAX_VALUE);\n            searcher.searchAfter(after, query, Integer.MAX_VALUE);\n            if (sort != null) {\n              searcher.search(query, Integer.MAX_VALUE, sort);\n              searcher.search(query, Integer.MAX_VALUE, sort, true);\n              searcher.search(query, Integer.MAX_VALUE, sort, false);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, true);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, false);\n            }\n          }\n        }\n      }\n    }\n\n    TestUtil.shutdownExecutorService(service);\n  }\n\n","sourceOld":"  // should not throw exception\n  public void testHugeN() throws Exception {\n    ExecutorService service = new ThreadPoolExecutor(4, 4, 0L, TimeUnit.MILLISECONDS,\n                                   new LinkedBlockingQueue<Runnable>(),\n                                   new NamedThreadFactory(\"TestIndexSearcher\"));\n\n    IndexSearcher searchers[] = new IndexSearcher[] {\n        new IndexSearcher(reader),\n        new IndexSearcher(reader, service)\n    };\n    Query queries[] = new Query[] {\n        new MatchAllDocsQuery(),\n        new TermQuery(new Term(\"field\", \"1\"))\n    };\n    Sort sorts[] = new Sort[] {\n        null,\n        new Sort(new SortField(\"field2\", SortField.Type.STRING))\n    };\n    ScoreDoc afters[] = new ScoreDoc[] {\n        null,\n        new FieldDoc(0, 0f, new Object[] { new BytesRef(\"boo!\") })\n    };\n\n    for (IndexSearcher searcher : searchers) {\n      for (ScoreDoc after : afters) {\n        for (Query query : queries) {\n          for (Sort sort : sorts) {\n            searcher.search(query, Integer.MAX_VALUE);\n            searcher.searchAfter(after, query, Integer.MAX_VALUE);\n            if (sort != null) {\n              searcher.search(query, Integer.MAX_VALUE, sort);\n              searcher.search(query, Integer.MAX_VALUE, sort, true, true);\n              searcher.search(query, Integer.MAX_VALUE, sort, true, false);\n              searcher.search(query, Integer.MAX_VALUE, sort, false, true);\n              searcher.search(query, Integer.MAX_VALUE, sort, false, false);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, true, true);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, true, false);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, false, true);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, false, false);\n            }\n          }\n        }\n      }\n    }\n\n    TestUtil.shutdownExecutorService(service);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testHugeN().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestIndexSearcher#testHugeN().mjava","sourceNew":"  // should not throw exception\n  public void testHugeN() throws Exception {\n    ExecutorService service = new ThreadPoolExecutor(4, 4, 0L, TimeUnit.MILLISECONDS,\n                                   new LinkedBlockingQueue<Runnable>(),\n                                   new NamedThreadFactory(\"TestIndexSearcher\"));\n\n    IndexSearcher searchers[] = new IndexSearcher[] {\n        new IndexSearcher(reader),\n        new IndexSearcher(reader, service)\n    };\n    Query queries[] = new Query[] {\n        new MatchAllDocsQuery(),\n        new TermQuery(new Term(\"field\", \"1\"))\n    };\n    Sort sorts[] = new Sort[] {\n        null,\n        new Sort(new SortField(\"field2\", SortField.Type.STRING))\n    };\n    ScoreDoc afters[] = new ScoreDoc[] {\n        null,\n        new FieldDoc(0, 0f, new Object[] { new BytesRef(\"boo!\") })\n    };\n\n    for (IndexSearcher searcher : searchers) {\n      for (ScoreDoc after : afters) {\n        for (Query query : queries) {\n          for (Sort sort : sorts) {\n            searcher.search(query, Integer.MAX_VALUE);\n            searcher.searchAfter(after, query, Integer.MAX_VALUE);\n            if (sort != null) {\n              searcher.search(query, Integer.MAX_VALUE, sort);\n              searcher.search(query, Integer.MAX_VALUE, sort, true);\n              searcher.search(query, Integer.MAX_VALUE, sort, false);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, true);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, false);\n            }\n          }\n        }\n      }\n    }\n\n    TestUtil.shutdownExecutorService(service);\n  }\n\n","sourceOld":"  // should not throw exception\n  public void testHugeN() throws Exception {\n    ExecutorService service = new ThreadPoolExecutor(4, 4, 0L, TimeUnit.MILLISECONDS,\n                                   new LinkedBlockingQueue<Runnable>(),\n                                   new NamedThreadFactory(\"TestIndexSearcher\"));\n\n    IndexSearcher searchers[] = new IndexSearcher[] {\n        new IndexSearcher(reader),\n        new IndexSearcher(reader, service)\n    };\n    Query queries[] = new Query[] {\n        new MatchAllDocsQuery(),\n        new TermQuery(new Term(\"field\", \"1\"))\n    };\n    Sort sorts[] = new Sort[] {\n        null,\n        new Sort(new SortField(\"field2\", SortField.Type.STRING))\n    };\n    ScoreDoc afters[] = new ScoreDoc[] {\n        null,\n        new FieldDoc(0, 0f, new Object[] { new BytesRef(\"boo!\") })\n    };\n\n    for (IndexSearcher searcher : searchers) {\n      for (ScoreDoc after : afters) {\n        for (Query query : queries) {\n          for (Sort sort : sorts) {\n            searcher.search(query, Integer.MAX_VALUE);\n            searcher.searchAfter(after, query, Integer.MAX_VALUE);\n            if (sort != null) {\n              searcher.search(query, Integer.MAX_VALUE, sort);\n              searcher.search(query, Integer.MAX_VALUE, sort, true, true);\n              searcher.search(query, Integer.MAX_VALUE, sort, true, false);\n              searcher.search(query, Integer.MAX_VALUE, sort, false, true);\n              searcher.search(query, Integer.MAX_VALUE, sort, false, false);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, true, true);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, true, false);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, false, true);\n              searcher.searchAfter(after, query, Integer.MAX_VALUE, sort, false, false);\n            }\n          }\n        }\n      }\n    }\n\n    TestUtil.shutdownExecutorService(service);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f0a65e308c1642d1ffb120ffae140f08362e92a7":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["f0a65e308c1642d1ffb120ffae140f08362e92a7","81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"6613659748fe4411a7dcf85266e55db1f95f7315":["450d0bc37c59f2de7743066469a444243907fd75"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["6613659748fe4411a7dcf85266e55db1f95f7315"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"81fff83bdb893c1471efd78f6a9a3ce4f98120b9":["f0a65e308c1642d1ffb120ffae140f08362e92a7"],"450d0bc37c59f2de7743066469a444243907fd75":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["81fff83bdb893c1471efd78f6a9a3ce4f98120b9"]},"commit2Childs":{"f0a65e308c1642d1ffb120ffae140f08362e92a7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"6613659748fe4411a7dcf85266e55db1f95f7315":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["f0a65e308c1642d1ffb120ffae140f08362e92a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["450d0bc37c59f2de7743066469a444243907fd75"],"81fff83bdb893c1471efd78f6a9a3ce4f98120b9":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"450d0bc37c59f2de7743066469a444243907fd75":["6613659748fe4411a7dcf85266e55db1f95f7315"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}