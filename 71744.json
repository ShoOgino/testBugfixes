{"path":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testDumbCompoundWordsSELongestMatch().mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testDumbCompoundWordsSELongestMatch().mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testDumbCompoundWordsSELongestMatch().mjava","sourceNew":"  public void testDumbCompoundWordsSELongestMatch() throws Exception {\n    String[] dict = { \"Bil\", \"Dörr\", \"Motor\", \"Tak\", \"Borr\", \"Slag\", \"Hammar\",\n        \"Pelar\", \"Glas\", \"Ögon\", \"Fodral\", \"Bas\", \"Fiols\", \"Makare\", \"Gesäll\",\n        \"Sko\", \"Vind\", \"Rute\", \"Torkare\", \"Blad\", \"Fiolsfodral\" };\n\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(\n        new WhitespaceTokenizer(new StringReader(\"Basfiolsfodralmakaregesäll\")),\n        dict, CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, true);\n\n    assertFiltersTo(tf, new String[] { \"Basfiolsfodralmakaregesäll\", \"Bas\",\n        \"fiolsfodral\", \"fodral\", \"makare\", \"gesäll\" }, new int[] { 0, 0, 3, 8,\n        14, 20 }, new int[] { 26, 3, 14, 14, 20, 26 }, new int[] { 1, 0, 0, 0,\n        0, 0 });\n  }\n\n","sourceOld":"  public void testDumbCompoundWordsSELongestMatch() throws Exception {\n    String[] dict = { \"Bil\", \"Dörr\", \"Motor\", \"Tak\", \"Borr\", \"Slag\", \"Hammar\",\n        \"Pelar\", \"Glas\", \"Ögon\", \"Fodral\", \"Bas\", \"Fiols\", \"Makare\", \"Gesäll\",\n        \"Sko\", \"Vind\", \"Rute\", \"Torkare\", \"Blad\", \"Fiolsfodral\" };\n\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(\n        new WhitespaceTokenizer(new StringReader(\"Basfiolsfodralmakaregesäll\")),\n        dict, CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, true);\n\n    assertFiltersTo(tf, new String[] { \"Basfiolsfodralmakaregesäll\", \"Bas\",\n        \"fiolsfodral\", \"fodral\", \"makare\", \"gesäll\" }, new int[] { 0, 0, 3, 8,\n        14, 20 }, new int[] { 26, 3, 14, 14, 20, 26 }, new int[] { 1, 0, 0, 0,\n        0, 0 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc","date":1251117853,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testDumbCompoundWordsSELongestMatch().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testDumbCompoundWordsSELongestMatch().mjava","sourceNew":"  public void testDumbCompoundWordsSELongestMatch() throws Exception {\n    String[] dict = { \"Bil\", \"Dörr\", \"Motor\", \"Tak\", \"Borr\", \"Slag\", \"Hammar\",\n        \"Pelar\", \"Glas\", \"Ögon\", \"Fodral\", \"Bas\", \"Fiols\", \"Makare\", \"Gesäll\",\n        \"Sko\", \"Vind\", \"Rute\", \"Torkare\", \"Blad\", \"Fiolsfodral\" };\n\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(\n        new WhitespaceTokenizer(new StringReader(\"Basfiolsfodralmakaregesäll\")),\n        dict, CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, true);\n\n    assertTokenStreamContents(tf, new String[] { \"Basfiolsfodralmakaregesäll\", \"Bas\",\n        \"fiolsfodral\", \"fodral\", \"makare\", \"gesäll\" }, new int[] { 0, 0, 3, 8,\n        14, 20 }, new int[] { 26, 3, 14, 14, 20, 26 }, new int[] { 1, 0, 0, 0,\n        0, 0 });\n  }\n\n","sourceOld":"  public void testDumbCompoundWordsSELongestMatch() throws Exception {\n    String[] dict = { \"Bil\", \"Dörr\", \"Motor\", \"Tak\", \"Borr\", \"Slag\", \"Hammar\",\n        \"Pelar\", \"Glas\", \"Ögon\", \"Fodral\", \"Bas\", \"Fiols\", \"Makare\", \"Gesäll\",\n        \"Sko\", \"Vind\", \"Rute\", \"Torkare\", \"Blad\", \"Fiolsfodral\" };\n\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(\n        new WhitespaceTokenizer(new StringReader(\"Basfiolsfodralmakaregesäll\")),\n        dict, CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, true);\n\n    assertFiltersTo(tf, new String[] { \"Basfiolsfodralmakaregesäll\", \"Bas\",\n        \"fiolsfodral\", \"fodral\", \"makare\", \"gesäll\" }, new int[] { 0, 0, 3, 8,\n        14, 20 }, new int[] { 26, 3, 14, 14, 20, 26 }, new int[] { 1, 0, 0, 0,\n        0, 0 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"85722042902595d9b0fbf38b7b57b139bdc12e4b","date":1264953677,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testDumbCompoundWordsSELongestMatch().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testDumbCompoundWordsSELongestMatch().mjava","sourceNew":"  public void testDumbCompoundWordsSELongestMatch() throws Exception {\n    String[] dict = { \"Bil\", \"Dörr\", \"Motor\", \"Tak\", \"Borr\", \"Slag\", \"Hammar\",\n        \"Pelar\", \"Glas\", \"Ögon\", \"Fodral\", \"Bas\", \"Fiols\", \"Makare\", \"Gesäll\",\n        \"Sko\", \"Vind\", \"Rute\", \"Torkare\", \"Blad\", \"Fiolsfodral\" };\n\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(Version.LUCENE_CURRENT, \n        new WhitespaceTokenizer(Version.LUCENE_CURRENT, new StringReader(\"Basfiolsfodralmakaregesäll\")),\n        dict, CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, true);\n\n    assertTokenStreamContents(tf, new String[] { \"Basfiolsfodralmakaregesäll\", \"Bas\",\n        \"fiolsfodral\", \"fodral\", \"makare\", \"gesäll\" }, new int[] { 0, 0, 3, 8,\n        14, 20 }, new int[] { 26, 3, 14, 14, 20, 26 }, new int[] { 1, 0, 0, 0,\n        0, 0 });\n  }\n\n","sourceOld":"  public void testDumbCompoundWordsSELongestMatch() throws Exception {\n    String[] dict = { \"Bil\", \"Dörr\", \"Motor\", \"Tak\", \"Borr\", \"Slag\", \"Hammar\",\n        \"Pelar\", \"Glas\", \"Ögon\", \"Fodral\", \"Bas\", \"Fiols\", \"Makare\", \"Gesäll\",\n        \"Sko\", \"Vind\", \"Rute\", \"Torkare\", \"Blad\", \"Fiolsfodral\" };\n\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(\n        new WhitespaceTokenizer(new StringReader(\"Basfiolsfodralmakaregesäll\")),\n        dict, CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, true);\n\n    assertTokenStreamContents(tf, new String[] { \"Basfiolsfodralmakaregesäll\", \"Bas\",\n        \"fiolsfodral\", \"fodral\", \"makare\", \"gesäll\" }, new int[] { 0, 0, 3, 8,\n        14, 20 }, new int[] { 26, 3, 14, 14, 20, 26 }, new int[] { 1, 0, 0, 0,\n        0, 0 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testDumbCompoundWordsSELongestMatch().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testDumbCompoundWordsSELongestMatch().mjava","sourceNew":"  public void testDumbCompoundWordsSELongestMatch() throws Exception {\n    String[] dict = { \"Bil\", \"Dörr\", \"Motor\", \"Tak\", \"Borr\", \"Slag\", \"Hammar\",\n        \"Pelar\", \"Glas\", \"Ögon\", \"Fodral\", \"Bas\", \"Fiols\", \"Makare\", \"Gesäll\",\n        \"Sko\", \"Vind\", \"Rute\", \"Torkare\", \"Blad\", \"Fiolsfodral\" };\n\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(TEST_VERSION_CURRENT, \n        new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\"Basfiolsfodralmakaregesäll\")),\n        dict, CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, true);\n\n    assertTokenStreamContents(tf, new String[] { \"Basfiolsfodralmakaregesäll\", \"Bas\",\n        \"fiolsfodral\", \"fodral\", \"makare\", \"gesäll\" }, new int[] { 0, 0, 3, 8,\n        14, 20 }, new int[] { 26, 3, 14, 14, 20, 26 }, new int[] { 1, 0, 0, 0,\n        0, 0 });\n  }\n\n","sourceOld":"  public void testDumbCompoundWordsSELongestMatch() throws Exception {\n    String[] dict = { \"Bil\", \"Dörr\", \"Motor\", \"Tak\", \"Borr\", \"Slag\", \"Hammar\",\n        \"Pelar\", \"Glas\", \"Ögon\", \"Fodral\", \"Bas\", \"Fiols\", \"Makare\", \"Gesäll\",\n        \"Sko\", \"Vind\", \"Rute\", \"Torkare\", \"Blad\", \"Fiolsfodral\" };\n\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(Version.LUCENE_CURRENT, \n        new WhitespaceTokenizer(Version.LUCENE_CURRENT, new StringReader(\"Basfiolsfodralmakaregesäll\")),\n        dict, CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, true);\n\n    assertTokenStreamContents(tf, new String[] { \"Basfiolsfodralmakaregesäll\", \"Bas\",\n        \"fiolsfodral\", \"fodral\", \"makare\", \"gesäll\" }, new int[] { 0, 0, 3, 8,\n        14, 20 }, new int[] { 26, 3, 14, 14, 20, 26 }, new int[] { 1, 0, 0, 0,\n        0, 0 });\n  }\n\n","bugFix":null,"bugIntro":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testDumbCompoundWordsSELongestMatch().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/compound/TestCompoundWordTokenFilter#testDumbCompoundWordsSELongestMatch().mjava","sourceNew":"  public void testDumbCompoundWordsSELongestMatch() throws Exception {\n    String[] dict = { \"Bil\", \"Dörr\", \"Motor\", \"Tak\", \"Borr\", \"Slag\", \"Hammar\",\n        \"Pelar\", \"Glas\", \"Ögon\", \"Fodral\", \"Bas\", \"Fiols\", \"Makare\", \"Gesäll\",\n        \"Sko\", \"Vind\", \"Rute\", \"Torkare\", \"Blad\", \"Fiolsfodral\" };\n\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(TEST_VERSION_CURRENT, \n        new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\"Basfiolsfodralmakaregesäll\")),\n        dict, CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, true);\n\n    assertTokenStreamContents(tf, new String[] { \"Basfiolsfodralmakaregesäll\", \"Bas\",\n        \"fiolsfodral\", \"fodral\", \"makare\", \"gesäll\" }, new int[] { 0, 0, 3, 8,\n        14, 20 }, new int[] { 26, 3, 14, 14, 20, 26 }, new int[] { 1, 0, 0, 0,\n        0, 0 });\n  }\n\n","sourceOld":"  public void testDumbCompoundWordsSELongestMatch() throws Exception {\n    String[] dict = { \"Bil\", \"Dörr\", \"Motor\", \"Tak\", \"Borr\", \"Slag\", \"Hammar\",\n        \"Pelar\", \"Glas\", \"Ögon\", \"Fodral\", \"Bas\", \"Fiols\", \"Makare\", \"Gesäll\",\n        \"Sko\", \"Vind\", \"Rute\", \"Torkare\", \"Blad\", \"Fiolsfodral\" };\n\n    DictionaryCompoundWordTokenFilter tf = new DictionaryCompoundWordTokenFilter(TEST_VERSION_CURRENT, \n        new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(\"Basfiolsfodralmakaregesäll\")),\n        dict, CompoundWordTokenFilterBase.DEFAULT_MIN_WORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MIN_SUBWORD_SIZE,\n        CompoundWordTokenFilterBase.DEFAULT_MAX_SUBWORD_SIZE, true);\n\n    assertTokenStreamContents(tf, new String[] { \"Basfiolsfodralmakaregesäll\", \"Bas\",\n        \"fiolsfodral\", \"fodral\", \"makare\", \"gesäll\" }, new int[] { 0, 0, 3, 8,\n        14, 20 }, new int[] { 26, 3, 14, 14, 20, 26 }, new int[] { 1, 0, 0, 0,\n        0, 0 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["85722042902595d9b0fbf38b7b57b139bdc12e4b"],"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"85722042902595d9b0fbf38b7b57b139bdc12e4b":["9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9fa6d7a7e7208b52f1b0c4c87005d34ab0dd37dc":["85722042902595d9b0fbf38b7b57b139bdc12e4b"],"85722042902595d9b0fbf38b7b57b139bdc12e4b":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}