{"path":"solr/core/src/test/org/apache/solr/cloud/DeleteReplicaTest#tryToRemoveOnlyIfDown(String,CloudSolrServer,Replica,String,String).mjava","commits":[{"id":"fdbe605f0d40f92b9fa92baa735e60b6e445c182","date":1410914995,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/DeleteReplicaTest#tryToRemoveOnlyIfDown(String,CloudSolrServer,Replica,String,String).mjava","pathOld":"/dev/null","sourceNew":"  protected void tryToRemoveOnlyIfDown(String collectionName, CloudSolrServer client, Replica replica, String shard, String dataDir) throws IOException, SolrServerException {\n    Map m = makeMap(\"collection\", collectionName,\n        \"action\", DELETEREPLICA,\n        \"shard\", shard,\n        \"replica\", replica.getName(),\n        ZkStateReader.ONLY_IF_DOWN, \"true\");\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    NamedList<Object> resp = client.request(request);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bee859c465cfb4488ccfa4f0186f2a55aebca78c","date":1411023837,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/DeleteReplicaTest#tryToRemoveOnlyIfDown(String,CloudSolrServer,Replica,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/DeleteReplicaTest#tryToRemoveOnlyIfDown(String,CloudSolrServer,Replica,String,String).mjava","sourceNew":"  protected void tryToRemoveOnlyIfDown(String collectionName, CloudSolrServer client, Replica replica, String shard, String dataDir) throws IOException, SolrServerException {\n    Map m = makeMap(\"collection\", collectionName,\n        \"action\", DELETEREPLICA.toLower(),\n        \"shard\", shard,\n        \"replica\", replica.getName(),\n        ZkStateReader.ONLY_IF_DOWN, \"true\");\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    NamedList<Object> resp = client.request(request);\n  }\n\n","sourceOld":"  protected void tryToRemoveOnlyIfDown(String collectionName, CloudSolrServer client, Replica replica, String shard, String dataDir) throws IOException, SolrServerException {\n    Map m = makeMap(\"collection\", collectionName,\n        \"action\", DELETEREPLICA,\n        \"shard\", shard,\n        \"replica\", replica.getName(),\n        ZkStateReader.ONLY_IF_DOWN, \"true\");\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    NamedList<Object> resp = client.request(request);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd657606b6786db7b4cf5f88ce642f11168d5437","date":1411160355,"type":5,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/DeleteReplicaTest#tryToRemoveOnlyIfDown(String,CloudSolrServer,Replica,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/DeleteReplicaTest#tryToRemoveOnlyIfDown(String,CloudSolrServer,Replica,String,String).mjava","sourceNew":"  protected void tryToRemoveOnlyIfDown(String collectionName, CloudSolrServer client, Replica replica, String shard) throws IOException, SolrServerException {\n    Map m = makeMap(\"collection\", collectionName,\n        \"action\", DELETEREPLICA.toLower(),\n        \"shard\", shard,\n        \"replica\", replica.getName(),\n        ZkStateReader.ONLY_IF_DOWN, \"true\");\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    client.request(request);\n  }\n\n","sourceOld":"  protected void tryToRemoveOnlyIfDown(String collectionName, CloudSolrServer client, Replica replica, String shard, String dataDir) throws IOException, SolrServerException {\n    Map m = makeMap(\"collection\", collectionName,\n        \"action\", DELETEREPLICA.toLower(),\n        \"shard\", shard,\n        \"replica\", replica.getName(),\n        ZkStateReader.ONLY_IF_DOWN, \"true\");\n    SolrParams params = new MapSolrParams(m);\n    SolrRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    NamedList<Object> resp = client.request(request);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fdbe605f0d40f92b9fa92baa735e60b6e445c182":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bee859c465cfb4488ccfa4f0186f2a55aebca78c":["fdbe605f0d40f92b9fa92baa735e60b6e445c182"],"dd657606b6786db7b4cf5f88ce642f11168d5437":["bee859c465cfb4488ccfa4f0186f2a55aebca78c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd657606b6786db7b4cf5f88ce642f11168d5437"]},"commit2Childs":{"fdbe605f0d40f92b9fa92baa735e60b6e445c182":["bee859c465cfb4488ccfa4f0186f2a55aebca78c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fdbe605f0d40f92b9fa92baa735e60b6e445c182"],"bee859c465cfb4488ccfa4f0186f2a55aebca78c":["dd657606b6786db7b4cf5f88ce642f11168d5437"],"dd657606b6786db7b4cf5f88ce642f11168d5437":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}