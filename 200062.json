{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAny_decendent_of_a_child1().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAny_decendent_of_a_child1().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAny_decendent_of_a_child1().mjava","sourceNew":"  @Test\n  public void testAny_decendent_of_a_child1() {\n    XPathRecordReader rr = new XPathRecordReader(\"/anycd\");\n    rr.addField(\"descdend\", \"/anycd//boo\",         true);\n\n    // same test string as above but checking to see if *all* //boo's are collected\n    String xml=\"<anycd>\\n\"\n             + \"  this <boo>top level</boo> is ignored because it is external to the forEach\\n\"\n             + \"  <status>as is <boo>this element</boo></status>\\n\"\n             + \"  <contenido id=\\\"10097\\\" idioma=\\\"cat\\\">\\n\"\n             + \"    This one is <boo>not ignored as its</boo> inside a forEach\\n\"\n             + \"    <antetitulo><i> big <boo>antler</boo></i></antetitulo>\\n\"\n             + \"    <titulo>  My <i>flattened <boo>title</boo></i> </titulo>\\n\"\n             + \"    <resumen> My summary <i>skip this!</i>  </resumen>\\n\"\n             + \"    <texto>   <boo>Within the body of</boo>My text</texto>\\n\"\n             + \"    <p>Access <boo>inner <i>sub clauses</i> as well</boo></p>\\n\"\n             + \"    </contenido>\\n\"\n             + \"</anycd>\";\n\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(1, l.size());\n    Map<String, Object> m = l.get(0);\n    assertEquals(\"top level\"         ,(String) ((List) m.get(\"descdend\")).get(0) );\n    assertEquals(\"this element\"      ,(String) ((List) m.get(\"descdend\")).get(1) );\n    assertEquals(\"not ignored as its\",(String) ((List) m.get(\"descdend\")).get(2) );\n    assertEquals(\"antler\"            ,(String) ((List) m.get(\"descdend\")).get(3) );\n    assertEquals(\"title\"             ,(String) ((List) m.get(\"descdend\")).get(4) );\n    assertEquals(\"Within the body of\",(String) ((List) m.get(\"descdend\")).get(5) );\n    assertEquals(\"inner  as well\"    ,(String) ((List) m.get(\"descdend\")).get(6) );\n  }\n\n","sourceOld":"  @Test\n  public void testAny_decendent_of_a_child1() {\n    XPathRecordReader rr = new XPathRecordReader(\"/anycd\");\n    rr.addField(\"descdend\", \"/anycd//boo\",         true);\n\n    // same test string as above but checking to see if *all* //boo's are collected\n    String xml=\"<anycd>\\n\"\n             + \"  this <boo>top level</boo> is ignored because it is external to the forEach\\n\"\n             + \"  <status>as is <boo>this element</boo></status>\\n\"\n             + \"  <contenido id=\\\"10097\\\" idioma=\\\"cat\\\">\\n\"\n             + \"    This one is <boo>not ignored as its</boo> inside a forEach\\n\"\n             + \"    <antetitulo><i> big <boo>antler</boo></i></antetitulo>\\n\"\n             + \"    <titulo>  My <i>flattened <boo>title</boo></i> </titulo>\\n\"\n             + \"    <resumen> My summary <i>skip this!</i>  </resumen>\\n\"\n             + \"    <texto>   <boo>Within the body of</boo>My text</texto>\\n\"\n             + \"    <p>Access <boo>inner <i>sub clauses</i> as well</boo></p>\\n\"\n             + \"    </contenido>\\n\"\n             + \"</anycd>\";\n\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(1, l.size());\n    Map<String, Object> m = l.get(0);\n    assertEquals(\"top level\"         ,(String) ((List) m.get(\"descdend\")).get(0) );\n    assertEquals(\"this element\"      ,(String) ((List) m.get(\"descdend\")).get(1) );\n    assertEquals(\"not ignored as its\",(String) ((List) m.get(\"descdend\")).get(2) );\n    assertEquals(\"antler\"            ,(String) ((List) m.get(\"descdend\")).get(3) );\n    assertEquals(\"title\"             ,(String) ((List) m.get(\"descdend\")).get(4) );\n    assertEquals(\"Within the body of\",(String) ((List) m.get(\"descdend\")).get(5) );\n    assertEquals(\"inner  as well\"    ,(String) ((List) m.get(\"descdend\")).get(6) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAny_decendent_of_a_child1().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAny_decendent_of_a_child1().mjava","sourceNew":"  @Test\n  public void testAny_decendent_of_a_child1() {\n    XPathRecordReader rr = new XPathRecordReader(\"/anycd\");\n    rr.addField(\"descdend\", \"/anycd//boo\",         true);\n\n    // same test string as above but checking to see if *all* //boo's are collected\n    String xml=\"<anycd>\\n\"\n             + \"  this <boo>top level</boo> is ignored because it is external to the forEach\\n\"\n             + \"  <status>as is <boo>this element</boo></status>\\n\"\n             + \"  <contenido id=\\\"10097\\\" idioma=\\\"cat\\\">\\n\"\n             + \"    This one is <boo>not ignored as its</boo> inside a forEach\\n\"\n             + \"    <antetitulo><i> big <boo>antler</boo></i></antetitulo>\\n\"\n             + \"    <titulo>  My <i>flattened <boo>title</boo></i> </titulo>\\n\"\n             + \"    <resumen> My summary <i>skip this!</i>  </resumen>\\n\"\n             + \"    <texto>   <boo>Within the body of</boo>My text</texto>\\n\"\n             + \"    <p>Access <boo>inner <i>sub clauses</i> as well</boo></p>\\n\"\n             + \"    </contenido>\\n\"\n             + \"</anycd>\";\n\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(1, l.size());\n    Map<String, Object> m = l.get(0);\n    assertEquals(\"top level\"         ,(String) ((List) m.get(\"descdend\")).get(0) );\n    assertEquals(\"this element\"      ,(String) ((List) m.get(\"descdend\")).get(1) );\n    assertEquals(\"not ignored as its\",(String) ((List) m.get(\"descdend\")).get(2) );\n    assertEquals(\"antler\"            ,(String) ((List) m.get(\"descdend\")).get(3) );\n    assertEquals(\"title\"             ,(String) ((List) m.get(\"descdend\")).get(4) );\n    assertEquals(\"Within the body of\",(String) ((List) m.get(\"descdend\")).get(5) );\n    assertEquals(\"inner  as well\"    ,(String) ((List) m.get(\"descdend\")).get(6) );\n  }\n\n","sourceOld":"  @Test\n  public void testAny_decendent_of_a_child1() {\n    XPathRecordReader rr = new XPathRecordReader(\"/anycd\");\n    rr.addField(\"descdend\", \"/anycd//boo\",         true);\n\n    // same test string as above but checking to see if *all* //boo's are collected\n    String xml=\"<anycd>\\n\"\n             + \"  this <boo>top level</boo> is ignored because it is external to the forEach\\n\"\n             + \"  <status>as is <boo>this element</boo></status>\\n\"\n             + \"  <contenido id=\\\"10097\\\" idioma=\\\"cat\\\">\\n\"\n             + \"    This one is <boo>not ignored as its</boo> inside a forEach\\n\"\n             + \"    <antetitulo><i> big <boo>antler</boo></i></antetitulo>\\n\"\n             + \"    <titulo>  My <i>flattened <boo>title</boo></i> </titulo>\\n\"\n             + \"    <resumen> My summary <i>skip this!</i>  </resumen>\\n\"\n             + \"    <texto>   <boo>Within the body of</boo>My text</texto>\\n\"\n             + \"    <p>Access <boo>inner <i>sub clauses</i> as well</boo></p>\\n\"\n             + \"    </contenido>\\n\"\n             + \"</anycd>\";\n\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(1, l.size());\n    Map<String, Object> m = l.get(0);\n    assertEquals(\"top level\"         ,(String) ((List) m.get(\"descdend\")).get(0) );\n    assertEquals(\"this element\"      ,(String) ((List) m.get(\"descdend\")).get(1) );\n    assertEquals(\"not ignored as its\",(String) ((List) m.get(\"descdend\")).get(2) );\n    assertEquals(\"antler\"            ,(String) ((List) m.get(\"descdend\")).get(3) );\n    assertEquals(\"title\"             ,(String) ((List) m.get(\"descdend\")).get(4) );\n    assertEquals(\"Within the body of\",(String) ((List) m.get(\"descdend\")).get(5) );\n    assertEquals(\"inner  as well\"    ,(String) ((List) m.get(\"descdend\")).get(6) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAny_decendent_of_a_child1().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAny_decendent_of_a_child1().mjava","sourceNew":"  @Test\n  public void testAny_decendent_of_a_child1() {\n    XPathRecordReader rr = new XPathRecordReader(\"/anycd\");\n    rr.addField(\"descdend\", \"/anycd//boo\",         true);\n\n    // same test string as above but checking to see if *all* //boo's are collected\n    String xml=\"<anycd>\\n\"\n             + \"  this <boo>top level</boo> is ignored because it is external to the forEach\\n\"\n             + \"  <status>as is <boo>this element</boo></status>\\n\"\n             + \"  <contenido id=\\\"10097\\\" idioma=\\\"cat\\\">\\n\"\n             + \"    This one is <boo>not ignored as it's</boo> inside a forEach\\n\"\n             + \"    <antetitulo><i> big <boo>antler</boo></i></antetitulo>\\n\"\n             + \"    <titulo>  My <i>flattened <boo>title</boo></i> </titulo>\\n\"\n             + \"    <resumen> My summary <i>skip this!</i>  </resumen>\\n\"\n             + \"    <texto>   <boo>Within the body of</boo>My text</texto>\\n\"\n             + \"    <p>Access <boo>inner <i>sub clauses</i> as well</boo></p>\\n\"\n             + \"    </contenido>\\n\"\n             + \"</anycd>\";\n\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(1, l.size());\n    Map<String, Object> m = l.get(0);\n    assertEquals(\"top level\"          ,(String) ((List) m.get(\"descdend\")).get(0) );\n    assertEquals(\"this element\"       ,(String) ((List) m.get(\"descdend\")).get(1) );\n    assertEquals(\"not ignored as it's\",(String) ((List) m.get(\"descdend\")).get(2) );\n    assertEquals(\"antler\"             ,(String) ((List) m.get(\"descdend\")).get(3) );\n    assertEquals(\"title\"              ,(String) ((List) m.get(\"descdend\")).get(4) );\n    assertEquals(\"Within the body of\" ,(String) ((List) m.get(\"descdend\")).get(5) );\n    assertEquals(\"inner  as well\"     ,(String) ((List) m.get(\"descdend\")).get(6) );\n  }\n\n","sourceOld":"  @Test\n  public void testAny_decendent_of_a_child1() {\n    XPathRecordReader rr = new XPathRecordReader(\"/anycd\");\n    rr.addField(\"descdend\", \"/anycd//boo\",         true);\n\n    // same test string as above but checking to see if *all* //boo's are collected\n    String xml=\"<anycd>\\n\"\n             + \"  this <boo>top level</boo> is ignored because it is external to the forEach\\n\"\n             + \"  <status>as is <boo>this element</boo></status>\\n\"\n             + \"  <contenido id=\\\"10097\\\" idioma=\\\"cat\\\">\\n\"\n             + \"    This one is <boo>not ignored as its</boo> inside a forEach\\n\"\n             + \"    <antetitulo><i> big <boo>antler</boo></i></antetitulo>\\n\"\n             + \"    <titulo>  My <i>flattened <boo>title</boo></i> </titulo>\\n\"\n             + \"    <resumen> My summary <i>skip this!</i>  </resumen>\\n\"\n             + \"    <texto>   <boo>Within the body of</boo>My text</texto>\\n\"\n             + \"    <p>Access <boo>inner <i>sub clauses</i> as well</boo></p>\\n\"\n             + \"    </contenido>\\n\"\n             + \"</anycd>\";\n\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(1, l.size());\n    Map<String, Object> m = l.get(0);\n    assertEquals(\"top level\"         ,(String) ((List) m.get(\"descdend\")).get(0) );\n    assertEquals(\"this element\"      ,(String) ((List) m.get(\"descdend\")).get(1) );\n    assertEquals(\"not ignored as its\",(String) ((List) m.get(\"descdend\")).get(2) );\n    assertEquals(\"antler\"            ,(String) ((List) m.get(\"descdend\")).get(3) );\n    assertEquals(\"title\"             ,(String) ((List) m.get(\"descdend\")).get(4) );\n    assertEquals(\"Within the body of\",(String) ((List) m.get(\"descdend\")).get(5) );\n    assertEquals(\"inner  as well\"    ,(String) ((List) m.get(\"descdend\")).get(6) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestXPathRecordReader#testAny_decendent_of_a_child1().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testAny_decendent_of_a_child1() {\n    XPathRecordReader rr = new XPathRecordReader(\"/anycd\");\n    rr.addField(\"descdend\", \"/anycd//boo\",         true);\n\n    // same test string as above but checking to see if *all* //boo's are collected\n    String xml=\"<anycd>\\n\"\n             + \"  this <boo>top level</boo> is ignored because it is external to the forEach\\n\"\n             + \"  <status>as is <boo>this element</boo></status>\\n\"\n             + \"  <contenido id=\\\"10097\\\" idioma=\\\"cat\\\">\\n\"\n             + \"    This one is <boo>not ignored as it's</boo> inside a forEach\\n\"\n             + \"    <antetitulo><i> big <boo>antler</boo></i></antetitulo>\\n\"\n             + \"    <titulo>  My <i>flattened <boo>title</boo></i> </titulo>\\n\"\n             + \"    <resumen> My summary <i>skip this!</i>  </resumen>\\n\"\n             + \"    <texto>   <boo>Within the body of</boo>My text</texto>\\n\"\n             + \"    <p>Access <boo>inner <i>sub clauses</i> as well</boo></p>\\n\"\n             + \"    </contenido>\\n\"\n             + \"</anycd>\";\n\n    List<Map<String, Object>> l = rr.getAllRecords(new StringReader(xml));\n    assertEquals(1, l.size());\n    Map<String, Object> m = l.get(0);\n    assertEquals(\"top level\"          ,(String) ((List) m.get(\"descdend\")).get(0) );\n    assertEquals(\"this element\"       ,(String) ((List) m.get(\"descdend\")).get(1) );\n    assertEquals(\"not ignored as it's\",(String) ((List) m.get(\"descdend\")).get(2) );\n    assertEquals(\"antler\"             ,(String) ((List) m.get(\"descdend\")).get(3) );\n    assertEquals(\"title\"              ,(String) ((List) m.get(\"descdend\")).get(4) );\n    assertEquals(\"Within the body of\" ,(String) ((List) m.get(\"descdend\")).get(5) );\n    assertEquals(\"inner  as well\"     ,(String) ((List) m.get(\"descdend\")).get(6) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}