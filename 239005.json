{"path":"lucene/src/java/org/apache/lucene/document/Field#setValue(byte[]).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":2,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/document/Field#setValue(byte[]).mjava","pathOld":"backwards/src/java/org/apache/lucene/document/Field#setValue(byte[]).mjava","sourceNew":"  /** Expert: change the value of this field.  See <a href=\"#setValue(java.lang.String)\">setValue(String)</a>. */\n  public void setValue(byte[] value) {\n    if (!isBinary) {\n      throw new IllegalArgumentException(\"cannot set a byte[] value on a non-binary field\");\n    }\n    fieldsData = value;\n    binaryLength = value.length;\n    binaryOffset = 0;\n  }\n\n","sourceOld":"  /** Expert: change the value of this field.  See <a href=\"#setValue(java.lang.String)\">setValue(String)</a>. */\n  public void setValue(byte[] value) {\n    if (!isBinary) {\n      throw new IllegalArgumentException(\"cannot set a byte[] value on a non-binary field\");\n    }\n    fieldsData = value;\n    binaryLength = value.length;\n    binaryOffset = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/document/Field#setValue(byte[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/Field#setValue(byte[]).mjava","sourceNew":"  /**\n   * Expert: change the value of this field. See <a\n   * href=\"#setValue(java.lang.String)\">setValue(String)</a>.\n   */\n  public void setValue(byte[] value) {\n    if (!isBinary()) {\n      throw new IllegalArgumentException(\n          \"cannot set a byte[] value on a non-binary field\");\n    }\n    fieldsData = new BytesRef(value);\n  }\n\n","sourceOld":"  /** Expert: change the value of this field.  See <a href=\"#setValue(java.lang.String)\">setValue(String)</a>. */\n  public void setValue(byte[] value) {\n    if (!isBinary) {\n      throw new IllegalArgumentException(\"cannot set a byte[] value on a non-binary field\");\n    }\n    fieldsData = value;\n    binaryLength = value.length;\n    binaryOffset = 0;\n  }\n\n","bugFix":null,"bugIntro":["fa0f44f887719e97183771e977cfc4bfb485b766"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fa0f44f887719e97183771e977cfc4bfb485b766","date":1326668713,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/document/Field#setValue(byte[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/Field#setValue(byte[]).mjava","sourceNew":"  /**\n   * Expert: change the value of this field. See <a\n   * href=\"#setValue(java.lang.String)\">setValue(String)</a>.\n   */\n  public void setValue(byte[] value) {\n    setValue(new BytesRef(value));\n  }\n\n","sourceOld":"  /**\n   * Expert: change the value of this field. See <a\n   * href=\"#setValue(java.lang.String)\">setValue(String)</a>.\n   */\n  public void setValue(byte[] value) {\n    if (!isBinary()) {\n      throw new IllegalArgumentException(\n          \"cannot set a byte[] value on a non-binary field\");\n    }\n    fieldsData = new BytesRef(value);\n  }\n\n","bugFix":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/Field#setValue(byte[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/Field#setValue(byte[]).mjava","sourceNew":"  /**\n   * Expert: change the value of this field. See <a\n   * href=\"#setValue(java.lang.String)\">setValue(String)</a>.\n   */\n  public void setValue(byte[] value) {\n    setValue(new BytesRef(value));\n  }\n\n","sourceOld":"  /**\n   * Expert: change the value of this field. See <a\n   * href=\"#setValue(java.lang.String)\">setValue(String)</a>.\n   */\n  public void setValue(byte[] value) {\n    setValue(new BytesRef(value));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fa0f44f887719e97183771e977cfc4bfb485b766"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa0f44f887719e97183771e977cfc4bfb485b766":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"fa0f44f887719e97183771e977cfc4bfb485b766":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["fa0f44f887719e97183771e977cfc4bfb485b766"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}