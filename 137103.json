{"path":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    assertU(optimize());\n    // make sure this component is initialized correctly for each test\n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, \"elevate.xml\" );\n    args.add( QueryElevationComponent.FIELD_TYPE, \"string\" );\n    comp.init( args );\n    comp.inform( h.getCore() );\n    comp.forceElevation = false; \n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    assertU(optimize());\n    // make sure this component is initialized correctly for each test\n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, \"elevate.xml\" );\n    args.add( QueryElevationComponent.FIELD_TYPE, \"string\" );\n    comp.init( args );\n    comp.inform( h.getCore() );\n    comp.forceElevation = false; \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    assertU(optimize());\n    // make sure this component is initialized correctly for each test\n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, \"elevate.xml\" );\n    args.add( QueryElevationComponent.FIELD_TYPE, \"string\" );\n    comp.init( args );\n    comp.inform( h.getCore() );\n    comp.forceElevation = false; \n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    assertU(optimize());\n    // make sure this component is initialized correctly for each test\n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, \"elevate.xml\" );\n    args.add( QueryElevationComponent.FIELD_TYPE, \"string\" );\n    comp.init( args );\n    comp.inform( h.getCore() );\n    comp.forceElevation = false; \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    assertU(optimize());\n    // make sure this component is initialized correctly for each test\n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, \"elevate.xml\" );\n    args.add( QueryElevationComponent.FIELD_TYPE, \"string\" );\n    comp.init( args );\n    comp.inform( h.getCore() );\n    comp.forceElevation = false; \n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    assertU(optimize());\n    // make sure this component is initialized correctly for each test\n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, \"elevate.xml\" );\n    args.add( QueryElevationComponent.FIELD_TYPE, \"string\" );\n    comp.init( args );\n    comp.inform( h.getCore() );\n    comp.forceElevation = false; \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66e339aeeefbb0f94800c9777e747a22e43c64cc","date":1323800559,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n    clearIndex();\n    assertU(commit());\n    assertU(optimize());\n    // make sure this component is initialized correctly for each test\n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, \"elevate.xml\" );\n    args.add( QueryElevationComponent.FIELD_TYPE, \"string\" );\n    comp.init( args );\n    comp.inform( h.getCore() );\n    comp.forceElevation = false; \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d0561cea94adff1867218e77bb763c7583be279","date":1324334341,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#setUp().mjava","sourceNew":"  @Before\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n  }\n\n","sourceOld":"  @Before\n  @Override\n  public void setUp() throws Exception{\n    super.setUp();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"66e339aeeefbb0f94800c9777e747a22e43c64cc":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1d0561cea94adff1867218e77bb763c7583be279":["66e339aeeefbb0f94800c9777e747a22e43c64cc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d0561cea94adff1867218e77bb763c7583be279"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["66e339aeeefbb0f94800c9777e747a22e43c64cc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"66e339aeeefbb0f94800c9777e747a22e43c64cc":["1d0561cea94adff1867218e77bb763c7583be279"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"1d0561cea94adff1867218e77bb763c7583be279":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}