{"path":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","commits":[{"id":"e0b950aef8cdf4606d480e28ea17bd870b93c81e","date":1060680143,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","pathOld":"/dev/null","sourceNew":"  final Vector files() throws IOException {\n    Vector files = new Vector(16);\n    files.addElement(segment + \".fnm\");\n    files.addElement(segment + \".fdx\");\n    files.addElement(segment + \".fdt\");\n    files.addElement(segment + \".tii\");\n    files.addElement(segment + \".tis\");\n    files.addElement(segment + \".frq\");\n    files.addElement(segment + \".prx\");\n\n    if (directory.fileExists(segment + \".del\"))\n      files.addElement(segment + \".del\");\n\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed)\n\tfiles.addElement(segment + \".f\" + i);\n    }\n    return files;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1","date":1064527311,"type":3,"author":"Dmitry Serebrennikov","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","sourceNew":"  final Vector files() throws IOException {\n    Vector files = new Vector(16);\n    final String ext[] = new String[] {\n        \"cfs\", \"fnm\", \"fdx\", \"fdt\", \"tii\", \"tis\", \"frq\", \"prx\", \"del\"\n    };\n    \n    for (int i=0; i<ext.length; i++) {\n        String name = segment + \".\" + ext[i];\n        if (directory.fileExists(name)) \n            files.addElement(name);\n    }\n    \n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed)\n        files.addElement(segment + \".f\" + i);\n    }\n    return files;\n  }\n\n","sourceOld":"  final Vector files() throws IOException {\n    Vector files = new Vector(16);\n    files.addElement(segment + \".fnm\");\n    files.addElement(segment + \".fdx\");\n    files.addElement(segment + \".fdt\");\n    files.addElement(segment + \".tii\");\n    files.addElement(segment + \".tis\");\n    files.addElement(segment + \".frq\");\n    files.addElement(segment + \".prx\");\n\n    if (directory.fileExists(segment + \".del\"))\n      files.addElement(segment + \".del\");\n\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed)\n\tfiles.addElement(segment + \".f\" + i);\n    }\n    return files;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"434ea59dc096623cd1affa6bcf7471b98611cfbd","date":1066055154,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","sourceNew":"  final Vector files() throws IOException {\n    Vector files = new Vector(16);\n    final String ext[] = new String[] {\n      \"cfs\", \"fnm\", \"fdx\", \"fdt\", \"tii\", \"tis\", \"frq\", \"prx\", \"del\"\n    };\n\n    for (int i=0; i<ext.length; i++) {\n      String name = segment + \".\" + ext[i];\n      if (directory.fileExists(name))\n        files.addElement(name);\n    }\n\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed)\n        files.addElement(segment + \".f\" + i);\n    }\n    return files;\n  }\n\n","sourceOld":"  final Vector files() throws IOException {\n    Vector files = new Vector(16);\n    final String ext[] = new String[] {\n        \"cfs\", \"fnm\", \"fdx\", \"fdt\", \"tii\", \"tis\", \"frq\", \"prx\", \"del\"\n    };\n    \n    for (int i=0; i<ext.length; i++) {\n        String name = segment + \".\" + ext[i];\n        if (directory.fileExists(name)) \n            files.addElement(name);\n    }\n    \n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed)\n        files.addElement(segment + \".f\" + i);\n    }\n    return files;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7fb6d70db034a5456ae560175dd1b821eea9ff4","date":1066759157,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","sourceNew":"  final Vector files() throws IOException {\n    Vector files = new Vector(16);\n    final String ext[] = new String[] {\n      \"cfs\", \"fnm\", \"fdx\", \"fdt\", \"tii\", \"tis\", \"frq\", \"prx\", \"del\"\n    };\n\n    for (int i=0; i<ext.length; i++) {\n      String name = segment + \".\" + ext[i];\n      if (directory().fileExists(name))\n        files.addElement(name);\n    }\n\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed)\n        files.addElement(segment + \".f\" + i);\n    }\n    return files;\n  }\n\n","sourceOld":"  final Vector files() throws IOException {\n    Vector files = new Vector(16);\n    final String ext[] = new String[] {\n      \"cfs\", \"fnm\", \"fdx\", \"fdt\", \"tii\", \"tis\", \"frq\", \"prx\", \"del\"\n    };\n\n    for (int i=0; i<ext.length; i++) {\n      String name = segment + \".\" + ext[i];\n      if (directory.fileExists(name))\n        files.addElement(name);\n    }\n\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed)\n        files.addElement(segment + \".f\" + i);\n    }\n    return files;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770281b8a8459cafcdd2354b6a06078fea2d83c9","date":1077308096,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","sourceNew":"  final Vector files() throws IOException {\n    Vector files = new Vector(16);\n    final String ext[] = new String[]{\n      \"cfs\", \"fnm\", \"fdx\", \"fdt\", \"tii\", \"tis\", \"frq\", \"prx\", \"del\",\n      \"tvx\", \"tvd\", \"tvf\", \"tvp\" };\n\n    for (int i = 0; i < ext.length; i++) {\n      String name = segment + \".\" + ext[i];\n      if (directory().fileExists(name))\n        files.addElement(name);\n    }\n\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed)\n        files.addElement(segment + \".f\" + i);\n    }\n    return files;\n  }\n\n","sourceOld":"  final Vector files() throws IOException {\n    Vector files = new Vector(16);\n    final String ext[] = new String[] {\n      \"cfs\", \"fnm\", \"fdx\", \"fdt\", \"tii\", \"tis\", \"frq\", \"prx\", \"del\"\n    };\n\n    for (int i=0; i<ext.length; i++) {\n      String name = segment + \".\" + ext[i];\n      if (directory().fileExists(name))\n        files.addElement(name);\n    }\n\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed)\n        files.addElement(segment + \".f\" + i);\n    }\n    return files;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6263f219dcdfc6e861ecffaecf5e1e195f1aaaa7","date":1092245915,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","sourceNew":"  final Vector files() throws IOException {\n    Vector files = new Vector(16);\n    final String ext[] = new String[]{\n      \"cfs\", \"fnm\", \"fdx\", \"fdt\", \"tii\", \"tis\", \"frq\", \"prx\", \"del\",\n      \"tvx\", \"tvd\", \"tvf\", \"tvp\" };\n\n    for (int i = 0; i < ext.length; i++) {\n      String name = segment + \".\" + ext[i];\n      if (directory().fileExists(name))\n        files.addElement(name);\n    }\n\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed){\n        String name;\n        if(cfsReader == null)\n            name = segment + \".f\" + i;\n        else\n            name = segment + \".s\" + i;\n        if (directory().fileExists(name))\n            files.addElement(name);\n      }\n    }\n    return files;\n  }\n\n","sourceOld":"  final Vector files() throws IOException {\n    Vector files = new Vector(16);\n    final String ext[] = new String[]{\n      \"cfs\", \"fnm\", \"fdx\", \"fdt\", \"tii\", \"tis\", \"frq\", \"prx\", \"del\",\n      \"tvx\", \"tvd\", \"tvf\", \"tvp\" };\n\n    for (int i = 0; i < ext.length; i++) {\n      String name = segment + \".\" + ext[i];\n      if (directory().fileExists(name))\n        files.addElement(name);\n    }\n\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed)\n        files.addElement(segment + \".f\" + i);\n    }\n    return files;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e5d88b55f1b57feab6da94a5c635a224539bd2a","date":1095877947,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","sourceNew":"  Vector files() throws IOException {\n    Vector files = new Vector(16);\n    final String ext[] = new String[]{\n      \"cfs\", \"fnm\", \"fdx\", \"fdt\", \"tii\", \"tis\", \"frq\", \"prx\", \"del\",\n      \"tvx\", \"tvd\", \"tvf\", \"tvp\" };\n\n    for (int i = 0; i < ext.length; i++) {\n      String name = segment + \".\" + ext[i];\n      if (directory().fileExists(name))\n        files.addElement(name);\n    }\n\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed){\n        String name;\n        if(cfsReader == null)\n            name = segment + \".f\" + i;\n        else\n            name = segment + \".s\" + i;\n        if (directory().fileExists(name))\n            files.addElement(name);\n      }\n    }\n    return files;\n  }\n\n","sourceOld":"  final Vector files() throws IOException {\n    Vector files = new Vector(16);\n    final String ext[] = new String[]{\n      \"cfs\", \"fnm\", \"fdx\", \"fdt\", \"tii\", \"tis\", \"frq\", \"prx\", \"del\",\n      \"tvx\", \"tvd\", \"tvf\", \"tvp\" };\n\n    for (int i = 0; i < ext.length; i++) {\n      String name = segment + \".\" + ext[i];\n      if (directory().fileExists(name))\n        files.addElement(name);\n    }\n\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed){\n        String name;\n        if(cfsReader == null)\n            name = segment + \".f\" + i;\n        else\n            name = segment + \".s\" + i;\n        if (directory().fileExists(name))\n            files.addElement(name);\n      }\n    }\n    return files;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b97d08b145487ab6b236cb2336a2be10f519e8b9","date":1115331649,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","sourceNew":"  Vector files() throws IOException {\n    Vector files = new Vector(16);\n\n    for (int i = 0; i < FILENAME_EXTENSIONS.length; i++) {\n      String name = segment + \".\" + FILENAME_EXTENSIONS[i];\n      if (directory().fileExists(name))\n        files.addElement(name);\n    }\n\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed){\n        String name;\n        if(cfsReader == null)\n            name = segment + \".f\" + i;\n        else\n            name = segment + \".s\" + i;\n        if (directory().fileExists(name))\n            files.addElement(name);\n      }\n    }\n    return files;\n  }\n\n","sourceOld":"  Vector files() throws IOException {\n    Vector files = new Vector(16);\n    final String ext[] = new String[]{\n      \"cfs\", \"fnm\", \"fdx\", \"fdt\", \"tii\", \"tis\", \"frq\", \"prx\", \"del\",\n      \"tvx\", \"tvd\", \"tvf\", \"tvp\" };\n\n    for (int i = 0; i < ext.length; i++) {\n      String name = segment + \".\" + ext[i];\n      if (directory().fileExists(name))\n        files.addElement(name);\n    }\n\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed){\n        String name;\n        if(cfsReader == null)\n            name = segment + \".f\" + i;\n        else\n            name = segment + \".s\" + i;\n        if (directory().fileExists(name))\n            files.addElement(name);\n      }\n    }\n    return files;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24157515079eea65faeec4e1dbb01fea58444c8e","date":1118343636,"type":3,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","sourceNew":"  Vector files() throws IOException {\n    Vector files = new Vector(16);\n\n    for (int i = 0; i < IndexFileNames.INDEX_EXTENSIONS.length; i++) {\n      String name = segment + \".\" + IndexFileNames.INDEX_EXTENSIONS[i];\n      if (directory().fileExists(name))\n        files.addElement(name);\n    }\n\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed){\n        String name;\n        if(cfsReader == null)\n            name = segment + \".f\" + i;\n        else\n            name = segment + \".s\" + i;\n        if (directory().fileExists(name))\n            files.addElement(name);\n      }\n    }\n    return files;\n  }\n\n","sourceOld":"  Vector files() throws IOException {\n    Vector files = new Vector(16);\n\n    for (int i = 0; i < FILENAME_EXTENSIONS.length; i++) {\n      String name = segment + \".\" + FILENAME_EXTENSIONS[i];\n      if (directory().fileExists(name))\n        files.addElement(name);\n    }\n\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed){\n        String name;\n        if(cfsReader == null)\n            name = segment + \".f\" + i;\n        else\n            name = segment + \".s\" + i;\n        if (directory().fileExists(name))\n            files.addElement(name);\n      }\n    }\n    return files;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"950f3c7592cb559e2534e5089c78833250e156a3","date":1130557968,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","sourceNew":"  Vector files() throws IOException {\n    Vector files = new Vector(16);\n\n    for (int i = 0; i < IndexFileNames.INDEX_EXTENSIONS.length; i++) {\n      String name = segment + \".\" + IndexFileNames.INDEX_EXTENSIONS[i];\n      if (directory().fileExists(name))\n        files.addElement(name);\n    }\n\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed  && !fi.omitNorms){\n        String name;\n        if(cfsReader == null)\n            name = segment + \".f\" + i;\n        else\n            name = segment + \".s\" + i;\n        if (directory().fileExists(name))\n            files.addElement(name);\n      }\n    }\n    return files;\n  }\n\n","sourceOld":"  Vector files() throws IOException {\n    Vector files = new Vector(16);\n\n    for (int i = 0; i < IndexFileNames.INDEX_EXTENSIONS.length; i++) {\n      String name = segment + \".\" + IndexFileNames.INDEX_EXTENSIONS[i];\n      if (directory().fileExists(name))\n        files.addElement(name);\n    }\n\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed){\n        String name;\n        if(cfsReader == null)\n            name = segment + \".f\" + i;\n        else\n            name = segment + \".s\" + i;\n        if (directory().fileExists(name))\n            files.addElement(name);\n      }\n    }\n    return files;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"284c1d3c8b19931bf6f312fae7470487f5d9e580","date":1163805527,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","sourceNew":"  Vector files() throws IOException {\n    Vector files = new Vector(16);\n\n    if (si.getUseCompoundFile()) {\n      String name = segment + \".cfs\";\n      if (directory().fileExists(name)) {\n        files.addElement(name);\n      }\n    } else {\n      for (int i = 0; i < IndexFileNames.INDEX_EXTENSIONS.length; i++) {\n        String name = segment + \".\" + IndexFileNames.INDEX_EXTENSIONS[i];\n        if (directory().fileExists(name))\n          files.addElement(name);\n      }\n    }\n\n    if (si.hasDeletions()) {\n      files.addElement(si.getDelFileName());\n    }\n\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      String name = si.getNormFileName(i);\n      if (name != null && directory().fileExists(name))\n            files.addElement(name);\n    }\n    return files;\n  }\n\n","sourceOld":"  Vector files() throws IOException {\n    Vector files = new Vector(16);\n\n    for (int i = 0; i < IndexFileNames.INDEX_EXTENSIONS.length; i++) {\n      String name = segment + \".\" + IndexFileNames.INDEX_EXTENSIONS[i];\n      if (directory().fileExists(name))\n        files.addElement(name);\n    }\n\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      FieldInfo fi = fieldInfos.fieldInfo(i);\n      if (fi.isIndexed  && !fi.omitNorms){\n        String name;\n        if(cfsReader == null)\n            name = segment + \".f\" + i;\n        else\n            name = segment + \".s\" + i;\n        if (directory().fileExists(name))\n            files.addElement(name);\n      }\n    }\n    return files;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8969a184df55d25d61e85be785987fbf830d4028","date":1168143561,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","sourceNew":"  Vector files() throws IOException {\n    Vector files = new Vector(16);\n\n    if (si.getUseCompoundFile()) {\n      String name = segment + \".cfs\";\n      if (directory().fileExists(name)) {\n        files.addElement(name);\n      }\n    } else {\n      for (int i = 0; i < IndexFileNames.INDEX_EXTENSIONS.length; i++) {\n        String name = segment + \".\" + IndexFileNames.INDEX_EXTENSIONS[i];\n        if (directory().fileExists(name))\n          files.addElement(name);\n      }\n    }\n\n    if (si.hasDeletions()) {\n      files.addElement(si.getDelFileName());\n    }\n\n    boolean addedNrm = false;\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      String name = si.getNormFileName(i);\n      if (name != null && directory().fileExists(name)) {\n        if (name.endsWith(\".\" + IndexFileNames.NORMS_EXTENSION)) {\n          if (addedNrm) continue; // add .nrm just once\n          addedNrm = true;\n        }\n            files.addElement(name);\n      }\n    }\n    return files;\n  }\n\n","sourceOld":"  Vector files() throws IOException {\n    Vector files = new Vector(16);\n\n    if (si.getUseCompoundFile()) {\n      String name = segment + \".cfs\";\n      if (directory().fileExists(name)) {\n        files.addElement(name);\n      }\n    } else {\n      for (int i = 0; i < IndexFileNames.INDEX_EXTENSIONS.length; i++) {\n        String name = segment + \".\" + IndexFileNames.INDEX_EXTENSIONS[i];\n        if (directory().fileExists(name))\n          files.addElement(name);\n      }\n    }\n\n    if (si.hasDeletions()) {\n      files.addElement(si.getDelFileName());\n    }\n\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      String name = si.getNormFileName(i);\n      if (name != null && directory().fileExists(name))\n            files.addElement(name);\n    }\n    return files;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a5cfde941b2f8208d739344fef3821381885618","date":1168979092,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","sourceNew":"  Vector files() throws IOException {\n    Vector files = new Vector(16);\n\n    if (si.getUseCompoundFile()) {\n      String name = segment + \".cfs\";\n      if (directory().fileExists(name)) {\n        files.addElement(name);\n      }\n    } else {\n      for (int i = 0; i < IndexFileNames.INDEX_EXTENSIONS.length; i++) {\n        String name = segment + \".\" + IndexFileNames.INDEX_EXTENSIONS[i];\n        if (directory().fileExists(name))\n          files.addElement(name);\n      }\n    }\n\n    if (si.hasDeletions()) {\n      files.addElement(si.getDelFileName());\n    }\n\n    boolean addedNrm = false;\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      String name = si.getNormFileName(i);\n      if (name != null && directory().fileExists(name)) {\n        if (name.endsWith(\".\" + IndexFileNames.NORMS_EXTENSION)) {\n          if (addedNrm) continue; // add .nrm just once\n          addedNrm = true;\n        }\n        files.addElement(name);\n      }\n    }\n    return files;\n  }\n\n","sourceOld":"  Vector files() throws IOException {\n    Vector files = new Vector(16);\n\n    if (si.getUseCompoundFile()) {\n      String name = segment + \".cfs\";\n      if (directory().fileExists(name)) {\n        files.addElement(name);\n      }\n    } else {\n      for (int i = 0; i < IndexFileNames.INDEX_EXTENSIONS.length; i++) {\n        String name = segment + \".\" + IndexFileNames.INDEX_EXTENSIONS[i];\n        if (directory().fileExists(name))\n          files.addElement(name);\n      }\n    }\n\n    if (si.hasDeletions()) {\n      files.addElement(si.getDelFileName());\n    }\n\n    boolean addedNrm = false;\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      String name = si.getNormFileName(i);\n      if (name != null && directory().fileExists(name)) {\n        if (name.endsWith(\".\" + IndexFileNames.NORMS_EXTENSION)) {\n          if (addedNrm) continue; // add .nrm just once\n          addedNrm = true;\n        }\n            files.addElement(name);\n      }\n    }\n    return files;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b6187898fc4413ccd18229711786550a280383c","date":1173776782,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","sourceNew":"  Vector files() throws IOException {\n    return new Vector(si.files());\n  }\n\n","sourceOld":"  Vector files() throws IOException {\n    Vector files = new Vector(16);\n\n    if (si.getUseCompoundFile()) {\n      String name = segment + \".cfs\";\n      if (directory().fileExists(name)) {\n        files.addElement(name);\n      }\n    } else {\n      for (int i = 0; i < IndexFileNames.INDEX_EXTENSIONS.length; i++) {\n        String name = segment + \".\" + IndexFileNames.INDEX_EXTENSIONS[i];\n        if (directory().fileExists(name))\n          files.addElement(name);\n      }\n    }\n\n    if (si.hasDeletions()) {\n      files.addElement(si.getDelFileName());\n    }\n\n    boolean addedNrm = false;\n    for (int i = 0; i < fieldInfos.size(); i++) {\n      String name = si.getNormFileName(i);\n      if (name != null && directory().fileExists(name)) {\n        if (name.endsWith(\".\" + IndexFileNames.NORMS_EXTENSION)) {\n          if (addedNrm) continue; // add .nrm just once\n          addedNrm = true;\n        }\n        files.addElement(name);\n      }\n    }\n    return files;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7b6cdc70e097da94da79a655ed8f94477ff69f5","date":1220815360,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","sourceNew":"  List files() throws IOException {\n    return new ArrayList(si.files());\n  }\n\n","sourceOld":"  Vector files() throws IOException {\n    return new Vector(si.files());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa27b750ee9a51ec4bed93ef328aef9ca1e2153d","date":1255859449,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","sourceNew":"  List<String> files() throws IOException {\n    return new ArrayList<String>(si.files());\n  }\n\n","sourceOld":"  List files() throws IOException {\n    return new ArrayList(si.files());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentReader#files().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentReader#files().mjava","sourceNew":"  List<String> files() throws IOException {\n    return new ArrayList<String>(si.files());\n  }\n\n","sourceOld":"  List<String> files() throws IOException {\n    return new ArrayList<String>(si.files());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24157515079eea65faeec4e1dbb01fea58444c8e":["b97d08b145487ab6b236cb2336a2be10f519e8b9"],"950f3c7592cb559e2534e5089c78833250e156a3":["24157515079eea65faeec4e1dbb01fea58444c8e"],"e7fb6d70db034a5456ae560175dd1b821eea9ff4":["434ea59dc096623cd1affa6bcf7471b98611cfbd"],"434ea59dc096623cd1affa6bcf7471b98611cfbd":["8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1"],"6263f219dcdfc6e861ecffaecf5e1e195f1aaaa7":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"c7b6cdc70e097da94da79a655ed8f94477ff69f5":["8b6187898fc4413ccd18229711786550a280383c"],"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1":["e0b950aef8cdf4606d480e28ea17bd870b93c81e"],"770281b8a8459cafcdd2354b6a06078fea2d83c9":["e7fb6d70db034a5456ae560175dd1b821eea9ff4"],"e0b950aef8cdf4606d480e28ea17bd870b93c81e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fa27b750ee9a51ec4bed93ef328aef9ca1e2153d":["c7b6cdc70e097da94da79a655ed8f94477ff69f5"],"8a5cfde941b2f8208d739344fef3821381885618":["8969a184df55d25d61e85be785987fbf830d4028"],"284c1d3c8b19931bf6f312fae7470487f5d9e580":["950f3c7592cb559e2534e5089c78833250e156a3"],"6e5d88b55f1b57feab6da94a5c635a224539bd2a":["6263f219dcdfc6e861ecffaecf5e1e195f1aaaa7"],"b97d08b145487ab6b236cb2336a2be10f519e8b9":["6e5d88b55f1b57feab6da94a5c635a224539bd2a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8b6187898fc4413ccd18229711786550a280383c":["8a5cfde941b2f8208d739344fef3821381885618"],"8969a184df55d25d61e85be785987fbf830d4028":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["fa27b750ee9a51ec4bed93ef328aef9ca1e2153d"]},"commit2Childs":{"24157515079eea65faeec4e1dbb01fea58444c8e":["950f3c7592cb559e2534e5089c78833250e156a3"],"950f3c7592cb559e2534e5089c78833250e156a3":["284c1d3c8b19931bf6f312fae7470487f5d9e580"],"e7fb6d70db034a5456ae560175dd1b821eea9ff4":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"434ea59dc096623cd1affa6bcf7471b98611cfbd":["e7fb6d70db034a5456ae560175dd1b821eea9ff4"],"6263f219dcdfc6e861ecffaecf5e1e195f1aaaa7":["6e5d88b55f1b57feab6da94a5c635a224539bd2a"],"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1":["434ea59dc096623cd1affa6bcf7471b98611cfbd"],"c7b6cdc70e097da94da79a655ed8f94477ff69f5":["fa27b750ee9a51ec4bed93ef328aef9ca1e2153d"],"770281b8a8459cafcdd2354b6a06078fea2d83c9":["6263f219dcdfc6e861ecffaecf5e1e195f1aaaa7"],"e0b950aef8cdf4606d480e28ea17bd870b93c81e":["8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1"],"fa27b750ee9a51ec4bed93ef328aef9ca1e2153d":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"8a5cfde941b2f8208d739344fef3821381885618":["8b6187898fc4413ccd18229711786550a280383c"],"284c1d3c8b19931bf6f312fae7470487f5d9e580":["8969a184df55d25d61e85be785987fbf830d4028"],"6e5d88b55f1b57feab6da94a5c635a224539bd2a":["b97d08b145487ab6b236cb2336a2be10f519e8b9"],"b97d08b145487ab6b236cb2336a2be10f519e8b9":["24157515079eea65faeec4e1dbb01fea58444c8e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e0b950aef8cdf4606d480e28ea17bd870b93c81e"],"8b6187898fc4413ccd18229711786550a280383c":["c7b6cdc70e097da94da79a655ed8f94477ff69f5"],"8969a184df55d25d61e85be785987fbf830d4028":["8a5cfde941b2f8208d739344fef3821381885618"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}