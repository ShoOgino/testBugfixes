{"path":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/DefaultPassageFormatter#append(StringBuilder,String,int,int).mjava","commits":[{"id":"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2","date":1475611903,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/DefaultPassageFormatter#append(StringBuilder,String,int,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Appends original text to the response.\n     * @param dest resulting text, possibly transformed or encoded\n     * @param content original text content\n     * @param start index of the first character in content\n     * @param end index of the character following the last character in content\n     */\n    protected void append(StringBuilder dest, String content, int start, int end) {\n        if (escape) {\n            // note: these are the rules from owasp.org\n            for (int i = start; i < end; i++) {\n                char ch = content.charAt(i);\n                switch(ch) {\n                    case '&':\n                        dest.append(\"&amp;\");\n                        break;\n                    case '<':\n                        dest.append(\"&lt;\");\n                        break;\n                    case '>':\n                        dest.append(\"&gt;\");\n                        break;\n                    case '\"':\n                        dest.append(\"&quot;\");\n                        break;\n                    case '\\'':\n                        dest.append(\"&#x27;\");\n                        break;\n                    case '/':\n                        dest.append(\"&#x2F;\");\n                        break;\n                    default:\n                        if (ch >= 0x30 && ch <= 0x39 || ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A) {\n                            dest.append(ch);\n                        } else if (ch < 0xff) {\n                            dest.append(\"&#\");\n                            dest.append((int)ch);\n                            dest.append(\";\");\n                        } else {\n                            dest.append(ch);\n                        }\n                }\n            }\n        } else {\n            dest.append(content, start, end);\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/DefaultPassageFormatter#append(StringBuilder,String,int,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Appends original text to the response.\n     * @param dest resulting text, possibly transformed or encoded\n     * @param content original text content\n     * @param start index of the first character in content\n     * @param end index of the character following the last character in content\n     */\n    protected void append(StringBuilder dest, String content, int start, int end) {\n        if (escape) {\n            // note: these are the rules from owasp.org\n            for (int i = start; i < end; i++) {\n                char ch = content.charAt(i);\n                switch(ch) {\n                    case '&':\n                        dest.append(\"&amp;\");\n                        break;\n                    case '<':\n                        dest.append(\"&lt;\");\n                        break;\n                    case '>':\n                        dest.append(\"&gt;\");\n                        break;\n                    case '\"':\n                        dest.append(\"&quot;\");\n                        break;\n                    case '\\'':\n                        dest.append(\"&#x27;\");\n                        break;\n                    case '/':\n                        dest.append(\"&#x2F;\");\n                        break;\n                    default:\n                        if (ch >= 0x30 && ch <= 0x39 || ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A) {\n                            dest.append(ch);\n                        } else if (ch < 0xff) {\n                            dest.append(\"&#\");\n                            dest.append((int)ch);\n                            dest.append(\";\");\n                        } else {\n                            dest.append(ch);\n                        }\n                }\n            }\n        } else {\n            dest.append(content, start, end);\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b0859e6cfbc8e4ed86039d82fbebe98cb5f72a8","date":1479399820,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/DefaultPassageFormatter#append(StringBuilder,String,int,int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/DefaultPassageFormatter#append(StringBuilder,String,int,int).mjava","sourceNew":"  /**\n   * Appends original text to the response.\n   *\n   * @param dest    resulting text, possibly transformed or encoded\n   * @param content original text content\n   * @param start   index of the first character in content\n   * @param end     index of the character following the last character in content\n   */\n  protected void append(StringBuilder dest, String content, int start, int end) {\n    if (escape) {\n      // note: these are the rules from owasp.org\n      for (int i = start; i < end; i++) {\n        char ch = content.charAt(i);\n        switch (ch) {\n          case '&':\n            dest.append(\"&amp;\");\n            break;\n          case '<':\n            dest.append(\"&lt;\");\n            break;\n          case '>':\n            dest.append(\"&gt;\");\n            break;\n          case '\"':\n            dest.append(\"&quot;\");\n            break;\n          case '\\'':\n            dest.append(\"&#x27;\");\n            break;\n          case '/':\n            dest.append(\"&#x2F;\");\n            break;\n          default:\n            if (ch >= 0x30 && ch <= 0x39 || ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A) {\n              dest.append(ch);\n            } else if (ch < 0xff) {\n              dest.append(\"&#\");\n              dest.append((int) ch);\n              dest.append(\";\");\n            } else {\n              dest.append(ch);\n            }\n        }\n      }\n    } else {\n      dest.append(content, start, end);\n    }\n  }\n\n","sourceOld":"    /**\n     * Appends original text to the response.\n     * @param dest resulting text, possibly transformed or encoded\n     * @param content original text content\n     * @param start index of the first character in content\n     * @param end index of the character following the last character in content\n     */\n    protected void append(StringBuilder dest, String content, int start, int end) {\n        if (escape) {\n            // note: these are the rules from owasp.org\n            for (int i = start; i < end; i++) {\n                char ch = content.charAt(i);\n                switch(ch) {\n                    case '&':\n                        dest.append(\"&amp;\");\n                        break;\n                    case '<':\n                        dest.append(\"&lt;\");\n                        break;\n                    case '>':\n                        dest.append(\"&gt;\");\n                        break;\n                    case '\"':\n                        dest.append(\"&quot;\");\n                        break;\n                    case '\\'':\n                        dest.append(\"&#x27;\");\n                        break;\n                    case '/':\n                        dest.append(\"&#x2F;\");\n                        break;\n                    default:\n                        if (ch >= 0x30 && ch <= 0x39 || ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A) {\n                            dest.append(ch);\n                        } else if (ch < 0xff) {\n                            dest.append(\"&#\");\n                            dest.append((int)ch);\n                            dest.append(\";\");\n                        } else {\n                            dest.append(ch);\n                        }\n                }\n            }\n        } else {\n            dest.append(content, start, end);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e859e664a65796dadf8aaf65db6f66f3a885368","date":1479487334,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/DefaultPassageFormatter#append(StringBuilder,String,int,int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/DefaultPassageFormatter#append(StringBuilder,String,int,int).mjava","sourceNew":"  /**\n   * Appends original text to the response.\n   *\n   * @param dest    resulting text, possibly transformed or encoded\n   * @param content original text content\n   * @param start   index of the first character in content\n   * @param end     index of the character following the last character in content\n   */\n  protected void append(StringBuilder dest, String content, int start, int end) {\n    if (escape) {\n      // note: these are the rules from owasp.org\n      for (int i = start; i < end; i++) {\n        char ch = content.charAt(i);\n        switch (ch) {\n          case '&':\n            dest.append(\"&amp;\");\n            break;\n          case '<':\n            dest.append(\"&lt;\");\n            break;\n          case '>':\n            dest.append(\"&gt;\");\n            break;\n          case '\"':\n            dest.append(\"&quot;\");\n            break;\n          case '\\'':\n            dest.append(\"&#x27;\");\n            break;\n          case '/':\n            dest.append(\"&#x2F;\");\n            break;\n          default:\n            if (ch >= 0x30 && ch <= 0x39 || ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A) {\n              dest.append(ch);\n            } else if (ch < 0xff) {\n              dest.append(\"&#\");\n              dest.append((int) ch);\n              dest.append(\";\");\n            } else {\n              dest.append(ch);\n            }\n        }\n      }\n    } else {\n      dest.append(content, start, end);\n    }\n  }\n\n","sourceOld":"    /**\n     * Appends original text to the response.\n     * @param dest resulting text, possibly transformed or encoded\n     * @param content original text content\n     * @param start index of the first character in content\n     * @param end index of the character following the last character in content\n     */\n    protected void append(StringBuilder dest, String content, int start, int end) {\n        if (escape) {\n            // note: these are the rules from owasp.org\n            for (int i = start; i < end; i++) {\n                char ch = content.charAt(i);\n                switch(ch) {\n                    case '&':\n                        dest.append(\"&amp;\");\n                        break;\n                    case '<':\n                        dest.append(\"&lt;\");\n                        break;\n                    case '>':\n                        dest.append(\"&gt;\");\n                        break;\n                    case '\"':\n                        dest.append(\"&quot;\");\n                        break;\n                    case '\\'':\n                        dest.append(\"&#x27;\");\n                        break;\n                    case '/':\n                        dest.append(\"&#x2F;\");\n                        break;\n                    default:\n                        if (ch >= 0x30 && ch <= 0x39 || ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A) {\n                            dest.append(ch);\n                        } else if (ch < 0xff) {\n                            dest.append(\"&#\");\n                            dest.append((int)ch);\n                            dest.append(\";\");\n                        } else {\n                            dest.append(ch);\n                        }\n                }\n            }\n        } else {\n            dest.append(content, start, end);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3ba86d243e38281200fd85e0d48b3fe5c0b260b","date":1577139648,"type":3,"author":"Nándor Mátravölgyi","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/DefaultPassageFormatter#append(StringBuilder,String,int,int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/DefaultPassageFormatter#append(StringBuilder,String,int,int).mjava","sourceNew":"  /**\n   * Appends original text to the response.\n   *\n   * @param dest    resulting text, possibly transformed or encoded\n   * @param content original text content\n   * @param start   index of the first character in content\n   * @param end     index of the character following the last character in content\n   */\n  protected void append(StringBuilder dest, String content, int start, int end) {\n    if (escape) {\n      // note: these are the rules from owasp.org\n      for (int i = start; i < end; i++) {\n        char ch = content.charAt(i);\n        switch (ch) {\n          case '&':\n            dest.append(\"&amp;\");\n            break;\n          case '<':\n            dest.append(\"&lt;\");\n            break;\n          case '>':\n            dest.append(\"&gt;\");\n            break;\n          case '\"':\n            dest.append(\"&quot;\");\n            break;\n          case '\\'':\n            dest.append(\"&#x27;\");\n            break;\n          case '/':\n            dest.append(\"&#x2F;\");\n            break;\n          default:\n            dest.append(ch);\n        }\n      }\n    } else {\n      dest.append(content, start, end);\n    }\n  }\n\n","sourceOld":"  /**\n   * Appends original text to the response.\n   *\n   * @param dest    resulting text, possibly transformed or encoded\n   * @param content original text content\n   * @param start   index of the first character in content\n   * @param end     index of the character following the last character in content\n   */\n  protected void append(StringBuilder dest, String content, int start, int end) {\n    if (escape) {\n      // note: these are the rules from owasp.org\n      for (int i = start; i < end; i++) {\n        char ch = content.charAt(i);\n        switch (ch) {\n          case '&':\n            dest.append(\"&amp;\");\n            break;\n          case '<':\n            dest.append(\"&lt;\");\n            break;\n          case '>':\n            dest.append(\"&gt;\");\n            break;\n          case '\"':\n            dest.append(\"&quot;\");\n            break;\n          case '\\'':\n            dest.append(\"&#x27;\");\n            break;\n          case '/':\n            dest.append(\"&#x2F;\");\n            break;\n          default:\n            if (ch >= 0x30 && ch <= 0x39 || ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A) {\n              dest.append(ch);\n            } else if (ch < 0xff) {\n              dest.append(\"&#\");\n              dest.append((int) ch);\n              dest.append(\";\");\n            } else {\n              dest.append(ch);\n            }\n        }\n      }\n    } else {\n      dest.append(content, start, end);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","date":1577276097,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/DefaultPassageFormatter#append(StringBuilder,String,int,int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/DefaultPassageFormatter#append(StringBuilder,String,int,int).mjava","sourceNew":"  /**\n   * Appends original text to the response.\n   *\n   * @param dest    resulting text, possibly transformed or encoded\n   * @param content original text content\n   * @param start   index of the first character in content\n   * @param end     index of the character following the last character in content\n   */\n  protected void append(StringBuilder dest, String content, int start, int end) {\n    if (escape) {\n      // note: these are the rules from owasp.org\n      for (int i = start; i < end; i++) {\n        char ch = content.charAt(i);\n        switch (ch) {\n          case '&':\n            dest.append(\"&amp;\");\n            break;\n          case '<':\n            dest.append(\"&lt;\");\n            break;\n          case '>':\n            dest.append(\"&gt;\");\n            break;\n          case '\"':\n            dest.append(\"&quot;\");\n            break;\n          case '\\'':\n            dest.append(\"&#x27;\");\n            break;\n          case '/':\n            dest.append(\"&#x2F;\");\n            break;\n          default:\n            dest.append(ch);\n        }\n      }\n    } else {\n      dest.append(content, start, end);\n    }\n  }\n\n","sourceOld":"  /**\n   * Appends original text to the response.\n   *\n   * @param dest    resulting text, possibly transformed or encoded\n   * @param content original text content\n   * @param start   index of the first character in content\n   * @param end     index of the character following the last character in content\n   */\n  protected void append(StringBuilder dest, String content, int start, int end) {\n    if (escape) {\n      // note: these are the rules from owasp.org\n      for (int i = start; i < end; i++) {\n        char ch = content.charAt(i);\n        switch (ch) {\n          case '&':\n            dest.append(\"&amp;\");\n            break;\n          case '<':\n            dest.append(\"&lt;\");\n            break;\n          case '>':\n            dest.append(\"&gt;\");\n            break;\n          case '\"':\n            dest.append(\"&quot;\");\n            break;\n          case '\\'':\n            dest.append(\"&#x27;\");\n            break;\n          case '/':\n            dest.append(\"&#x2F;\");\n            break;\n          default:\n            if (ch >= 0x30 && ch <= 0x39 || ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A) {\n              dest.append(ch);\n            } else if (ch < 0xff) {\n              dest.append(\"&#\");\n              dest.append((int) ch);\n              dest.append(\";\");\n            } else {\n              dest.append(ch);\n            }\n        }\n      }\n    } else {\n      dest.append(content, start, end);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a3ba86d243e38281200fd85e0d48b3fe5c0b260b":["2b0859e6cfbc8e4ed86039d82fbebe98cb5f72a8"],"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a":["2b0859e6cfbc8e4ed86039d82fbebe98cb5f72a8","a3ba86d243e38281200fd85e0d48b3fe5c0b260b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2b0859e6cfbc8e4ed86039d82fbebe98cb5f72a8":["1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2"],"2e859e664a65796dadf8aaf65db6f66f3a885368":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","2b0859e6cfbc8e4ed86039d82fbebe98cb5f72a8"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a3ba86d243e38281200fd85e0d48b3fe5c0b260b"]},"commit2Childs":{"a3ba86d243e38281200fd85e0d48b3fe5c0b260b":["96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2":["2b0859e6cfbc8e4ed86039d82fbebe98cb5f72a8","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"2b0859e6cfbc8e4ed86039d82fbebe98cb5f72a8":["a3ba86d243e38281200fd85e0d48b3fe5c0b260b","96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","2e859e664a65796dadf8aaf65db6f66f3a885368"],"2e859e664a65796dadf8aaf65db6f66f3a885368":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["2e859e664a65796dadf8aaf65db6f66f3a885368"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","2e859e664a65796dadf8aaf65db6f66f3a885368","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}