{"path":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/el/GreekAnalyzerTest#testAnalyzer().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/el/GreekAnalyzerTest#testAnalyzer().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/el/GreekAnalyzerTest#testAnalyzer().mjava","sourceNew":"\t/**\n\t * Test the analysis of various greek strings.\n\t *\n\t * @throws Exception in case an error occurs\n\t */\n\tpublic void testAnalyzer() throws Exception {\n\t\tAnalyzer a = new GreekAnalyzer(TEST_VERSION_CURRENT);\n\t\t// Verify the correct analysis of capitals and small accented letters\n\t\tassertAnalyzesTo(a, \"\\u039c\\u03af\\u03b1 \\u03b5\\u03be\\u03b1\\u03b9\\u03c1\\u03b5\\u03c4\\u03b9\\u03ba\\u03ac \\u03ba\\u03b1\\u03bb\\u03ae \\u03ba\\u03b1\\u03b9 \\u03c0\\u03bb\\u03bf\\u03cd\\u03c3\\u03b9\\u03b1 \\u03c3\\u03b5\\u03b9\\u03c1\\u03ac \\u03c7\\u03b1\\u03c1\\u03b1\\u03ba\\u03c4\\u03ae\\u03c1\\u03c9\\u03bd \\u03c4\\u03b7\\u03c2 \\u0395\\u03bb\\u03bb\\u03b7\\u03bd\\u03b9\\u03ba\\u03ae\\u03c2 \\u03b3\\u03bb\\u03ce\\u03c3\\u03c3\\u03b1\\u03c2\",\n\t\t\t\tnew String[] { \"\\u03bc\\u03b9\\u03b1\", \"\\u03b5\\u03be\\u03b1\\u03b9\\u03c1\\u03b5\\u03c4\\u03b9\\u03ba\\u03b1\", \"\\u03ba\\u03b1\\u03bb\\u03b7\", \"\\u03c0\\u03bb\\u03bf\\u03c5\\u03c3\\u03b9\\u03b1\", \"\\u03c3\\u03b5\\u03b9\\u03c1\\u03b1\", \"\\u03c7\\u03b1\\u03c1\\u03b1\\u03ba\\u03c4\\u03b7\\u03c1\\u03c9\\u03bd\",\n\t\t\t\t\"\\u03b5\\u03bb\\u03bb\\u03b7\\u03bd\\u03b9\\u03ba\\u03b7\\u03c3\", \"\\u03b3\\u03bb\\u03c9\\u03c3\\u03c3\\u03b1\\u03c3\" });\n\t\t// Verify the correct analysis of small letters with diaeresis and the elimination\n\t\t// of punctuation marks\n\t\tassertAnalyzesTo(a, \"\\u03a0\\u03c1\\u03bf\\u03ca\\u03cc\\u03bd\\u03c4\\u03b1 (\\u03ba\\u03b1\\u03b9)     [\\u03c0\\u03bf\\u03bb\\u03bb\\u03b1\\u03c0\\u03bb\\u03ad\\u03c2]\t-\t\\u0391\\u039d\\u0391\\u0393\\u039a\\u0395\\u03a3\",\n\t\t\t\tnew String[] { \"\\u03c0\\u03c1\\u03bf\\u03b9\\u03bf\\u03bd\\u03c4\\u03b1\", \"\\u03c0\\u03bf\\u03bb\\u03bb\\u03b1\\u03c0\\u03bb\\u03b5\\u03c3\", \"\\u03b1\\u03bd\\u03b1\\u03b3\\u03ba\\u03b5\\u03c3\" });\n\t\t// Verify the correct analysis of capital accented letters and capitalletters with diaeresis,\n\t\t// as well as the elimination of stop words\n\t\tassertAnalyzesTo(a, \"\\u03a0\\u03a1\\u039f\\u03ab\\u03a0\\u039f\\u0398\\u0395\\u03a3\\u0395\\u0399\\u03a3  \\u0386\\u03c8\\u03bf\\u03b3\\u03bf\\u03c2, \\u03bf \\u03bc\\u03b5\\u03c3\\u03c4\\u03cc\\u03c2 \\u03ba\\u03b1\\u03b9 \\u03bf\\u03b9 \\u03ac\\u03bb\\u03bb\\u03bf\\u03b9\",\n\t\t\t\tnew String[] { \"\\u03c0\\u03c1\\u03bf\\u03c5\\u03c0\\u03bf\\u03b8\\u03b5\\u03c3\\u03b5\\u03b9\\u03c3\", \"\\u03b1\\u03c8\\u03bf\\u03b3\\u03bf\\u03c3\", \"\\u03bc\\u03b5\\u03c3\\u03c4\\u03bf\\u03c3\", \"\\u03b1\\u03bb\\u03bb\\u03bf\\u03b9\" });\n\t}\n\n","sourceOld":"\t/**\n\t * Test the analysis of various greek strings.\n\t *\n\t * @throws Exception in case an error occurs\n\t */\n\tpublic void testAnalyzer() throws Exception {\n\t\tAnalyzer a = new GreekAnalyzer(TEST_VERSION_CURRENT);\n\t\t// Verify the correct analysis of capitals and small accented letters\n\t\tassertAnalyzesTo(a, \"\\u039c\\u03af\\u03b1 \\u03b5\\u03be\\u03b1\\u03b9\\u03c1\\u03b5\\u03c4\\u03b9\\u03ba\\u03ac \\u03ba\\u03b1\\u03bb\\u03ae \\u03ba\\u03b1\\u03b9 \\u03c0\\u03bb\\u03bf\\u03cd\\u03c3\\u03b9\\u03b1 \\u03c3\\u03b5\\u03b9\\u03c1\\u03ac \\u03c7\\u03b1\\u03c1\\u03b1\\u03ba\\u03c4\\u03ae\\u03c1\\u03c9\\u03bd \\u03c4\\u03b7\\u03c2 \\u0395\\u03bb\\u03bb\\u03b7\\u03bd\\u03b9\\u03ba\\u03ae\\u03c2 \\u03b3\\u03bb\\u03ce\\u03c3\\u03c3\\u03b1\\u03c2\",\n\t\t\t\tnew String[] { \"\\u03bc\\u03b9\\u03b1\", \"\\u03b5\\u03be\\u03b1\\u03b9\\u03c1\\u03b5\\u03c4\\u03b9\\u03ba\\u03b1\", \"\\u03ba\\u03b1\\u03bb\\u03b7\", \"\\u03c0\\u03bb\\u03bf\\u03c5\\u03c3\\u03b9\\u03b1\", \"\\u03c3\\u03b5\\u03b9\\u03c1\\u03b1\", \"\\u03c7\\u03b1\\u03c1\\u03b1\\u03ba\\u03c4\\u03b7\\u03c1\\u03c9\\u03bd\",\n\t\t\t\t\"\\u03b5\\u03bb\\u03bb\\u03b7\\u03bd\\u03b9\\u03ba\\u03b7\\u03c3\", \"\\u03b3\\u03bb\\u03c9\\u03c3\\u03c3\\u03b1\\u03c3\" });\n\t\t// Verify the correct analysis of small letters with diaeresis and the elimination\n\t\t// of punctuation marks\n\t\tassertAnalyzesTo(a, \"\\u03a0\\u03c1\\u03bf\\u03ca\\u03cc\\u03bd\\u03c4\\u03b1 (\\u03ba\\u03b1\\u03b9)     [\\u03c0\\u03bf\\u03bb\\u03bb\\u03b1\\u03c0\\u03bb\\u03ad\\u03c2]\t-\t\\u0391\\u039d\\u0391\\u0393\\u039a\\u0395\\u03a3\",\n\t\t\t\tnew String[] { \"\\u03c0\\u03c1\\u03bf\\u03b9\\u03bf\\u03bd\\u03c4\\u03b1\", \"\\u03c0\\u03bf\\u03bb\\u03bb\\u03b1\\u03c0\\u03bb\\u03b5\\u03c3\", \"\\u03b1\\u03bd\\u03b1\\u03b3\\u03ba\\u03b5\\u03c3\" });\n\t\t// Verify the correct analysis of capital accented letters and capitalletters with diaeresis,\n\t\t// as well as the elimination of stop words\n\t\tassertAnalyzesTo(a, \"\\u03a0\\u03a1\\u039f\\u03ab\\u03a0\\u039f\\u0398\\u0395\\u03a3\\u0395\\u0399\\u03a3  \\u0386\\u03c8\\u03bf\\u03b3\\u03bf\\u03c2, \\u03bf \\u03bc\\u03b5\\u03c3\\u03c4\\u03cc\\u03c2 \\u03ba\\u03b1\\u03b9 \\u03bf\\u03b9 \\u03ac\\u03bb\\u03bb\\u03bf\\u03b9\",\n\t\t\t\tnew String[] { \"\\u03c0\\u03c1\\u03bf\\u03c5\\u03c0\\u03bf\\u03b8\\u03b5\\u03c3\\u03b5\\u03b9\\u03c3\", \"\\u03b1\\u03c8\\u03bf\\u03b3\\u03bf\\u03c3\", \"\\u03bc\\u03b5\\u03c3\\u03c4\\u03bf\\u03c3\", \"\\u03b1\\u03bb\\u03bb\\u03bf\\u03b9\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/el/GreekAnalyzerTest#testAnalyzer().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/el/GreekAnalyzerTest#testAnalyzer().mjava","sourceNew":"\t/**\n\t * Test the analysis of various greek strings.\n\t *\n\t * @throws Exception in case an error occurs\n\t */\n\tpublic void testAnalyzer() throws Exception {\n\t\tAnalyzer a = new GreekAnalyzer(TEST_VERSION_CURRENT);\n\t\t// Verify the correct analysis of capitals and small accented letters\n\t\tassertAnalyzesTo(a, \"\\u039c\\u03af\\u03b1 \\u03b5\\u03be\\u03b1\\u03b9\\u03c1\\u03b5\\u03c4\\u03b9\\u03ba\\u03ac \\u03ba\\u03b1\\u03bb\\u03ae \\u03ba\\u03b1\\u03b9 \\u03c0\\u03bb\\u03bf\\u03cd\\u03c3\\u03b9\\u03b1 \\u03c3\\u03b5\\u03b9\\u03c1\\u03ac \\u03c7\\u03b1\\u03c1\\u03b1\\u03ba\\u03c4\\u03ae\\u03c1\\u03c9\\u03bd \\u03c4\\u03b7\\u03c2 \\u0395\\u03bb\\u03bb\\u03b7\\u03bd\\u03b9\\u03ba\\u03ae\\u03c2 \\u03b3\\u03bb\\u03ce\\u03c3\\u03c3\\u03b1\\u03c2\",\n\t\t\t\tnew String[] { \"\\u03bc\\u03b9\\u03b1\", \"\\u03b5\\u03be\\u03b1\\u03b9\\u03c1\\u03b5\\u03c4\\u03b9\\u03ba\\u03b1\", \"\\u03ba\\u03b1\\u03bb\\u03b7\", \"\\u03c0\\u03bb\\u03bf\\u03c5\\u03c3\\u03b9\\u03b1\", \"\\u03c3\\u03b5\\u03b9\\u03c1\\u03b1\", \"\\u03c7\\u03b1\\u03c1\\u03b1\\u03ba\\u03c4\\u03b7\\u03c1\\u03c9\\u03bd\",\n\t\t\t\t\"\\u03b5\\u03bb\\u03bb\\u03b7\\u03bd\\u03b9\\u03ba\\u03b7\\u03c3\", \"\\u03b3\\u03bb\\u03c9\\u03c3\\u03c3\\u03b1\\u03c3\" });\n\t\t// Verify the correct analysis of small letters with diaeresis and the elimination\n\t\t// of punctuation marks\n\t\tassertAnalyzesTo(a, \"\\u03a0\\u03c1\\u03bf\\u03ca\\u03cc\\u03bd\\u03c4\\u03b1 (\\u03ba\\u03b1\\u03b9)     [\\u03c0\\u03bf\\u03bb\\u03bb\\u03b1\\u03c0\\u03bb\\u03ad\\u03c2]\t-\t\\u0391\\u039d\\u0391\\u0393\\u039a\\u0395\\u03a3\",\n\t\t\t\tnew String[] { \"\\u03c0\\u03c1\\u03bf\\u03b9\\u03bf\\u03bd\\u03c4\\u03b1\", \"\\u03c0\\u03bf\\u03bb\\u03bb\\u03b1\\u03c0\\u03bb\\u03b5\\u03c3\", \"\\u03b1\\u03bd\\u03b1\\u03b3\\u03ba\\u03b5\\u03c3\" });\n\t\t// Verify the correct analysis of capital accented letters and capitalletters with diaeresis,\n\t\t// as well as the elimination of stop words\n\t\tassertAnalyzesTo(a, \"\\u03a0\\u03a1\\u039f\\u03ab\\u03a0\\u039f\\u0398\\u0395\\u03a3\\u0395\\u0399\\u03a3  \\u0386\\u03c8\\u03bf\\u03b3\\u03bf\\u03c2, \\u03bf \\u03bc\\u03b5\\u03c3\\u03c4\\u03cc\\u03c2 \\u03ba\\u03b1\\u03b9 \\u03bf\\u03b9 \\u03ac\\u03bb\\u03bb\\u03bf\\u03b9\",\n\t\t\t\tnew String[] { \"\\u03c0\\u03c1\\u03bf\\u03c5\\u03c0\\u03bf\\u03b8\\u03b5\\u03c3\\u03b5\\u03b9\\u03c3\", \"\\u03b1\\u03c8\\u03bf\\u03b3\\u03bf\\u03c3\", \"\\u03bc\\u03b5\\u03c3\\u03c4\\u03bf\\u03c3\", \"\\u03b1\\u03bb\\u03bb\\u03bf\\u03b9\" });\n\t}\n\n","sourceOld":"\t/**\n\t * Test the analysis of various greek strings.\n\t *\n\t * @throws Exception in case an error occurs\n\t */\n\tpublic void testAnalyzer() throws Exception {\n\t\tAnalyzer a = new GreekAnalyzer(TEST_VERSION_CURRENT);\n\t\t// Verify the correct analysis of capitals and small accented letters\n\t\tassertAnalyzesTo(a, \"\\u039c\\u03af\\u03b1 \\u03b5\\u03be\\u03b1\\u03b9\\u03c1\\u03b5\\u03c4\\u03b9\\u03ba\\u03ac \\u03ba\\u03b1\\u03bb\\u03ae \\u03ba\\u03b1\\u03b9 \\u03c0\\u03bb\\u03bf\\u03cd\\u03c3\\u03b9\\u03b1 \\u03c3\\u03b5\\u03b9\\u03c1\\u03ac \\u03c7\\u03b1\\u03c1\\u03b1\\u03ba\\u03c4\\u03ae\\u03c1\\u03c9\\u03bd \\u03c4\\u03b7\\u03c2 \\u0395\\u03bb\\u03bb\\u03b7\\u03bd\\u03b9\\u03ba\\u03ae\\u03c2 \\u03b3\\u03bb\\u03ce\\u03c3\\u03c3\\u03b1\\u03c2\",\n\t\t\t\tnew String[] { \"\\u03bc\\u03b9\\u03b1\", \"\\u03b5\\u03be\\u03b1\\u03b9\\u03c1\\u03b5\\u03c4\\u03b9\\u03ba\\u03b1\", \"\\u03ba\\u03b1\\u03bb\\u03b7\", \"\\u03c0\\u03bb\\u03bf\\u03c5\\u03c3\\u03b9\\u03b1\", \"\\u03c3\\u03b5\\u03b9\\u03c1\\u03b1\", \"\\u03c7\\u03b1\\u03c1\\u03b1\\u03ba\\u03c4\\u03b7\\u03c1\\u03c9\\u03bd\",\n\t\t\t\t\"\\u03b5\\u03bb\\u03bb\\u03b7\\u03bd\\u03b9\\u03ba\\u03b7\\u03c3\", \"\\u03b3\\u03bb\\u03c9\\u03c3\\u03c3\\u03b1\\u03c3\" });\n\t\t// Verify the correct analysis of small letters with diaeresis and the elimination\n\t\t// of punctuation marks\n\t\tassertAnalyzesTo(a, \"\\u03a0\\u03c1\\u03bf\\u03ca\\u03cc\\u03bd\\u03c4\\u03b1 (\\u03ba\\u03b1\\u03b9)     [\\u03c0\\u03bf\\u03bb\\u03bb\\u03b1\\u03c0\\u03bb\\u03ad\\u03c2]\t-\t\\u0391\\u039d\\u0391\\u0393\\u039a\\u0395\\u03a3\",\n\t\t\t\tnew String[] { \"\\u03c0\\u03c1\\u03bf\\u03b9\\u03bf\\u03bd\\u03c4\\u03b1\", \"\\u03c0\\u03bf\\u03bb\\u03bb\\u03b1\\u03c0\\u03bb\\u03b5\\u03c3\", \"\\u03b1\\u03bd\\u03b1\\u03b3\\u03ba\\u03b5\\u03c3\" });\n\t\t// Verify the correct analysis of capital accented letters and capitalletters with diaeresis,\n\t\t// as well as the elimination of stop words\n\t\tassertAnalyzesTo(a, \"\\u03a0\\u03a1\\u039f\\u03ab\\u03a0\\u039f\\u0398\\u0395\\u03a3\\u0395\\u0399\\u03a3  \\u0386\\u03c8\\u03bf\\u03b3\\u03bf\\u03c2, \\u03bf \\u03bc\\u03b5\\u03c3\\u03c4\\u03cc\\u03c2 \\u03ba\\u03b1\\u03b9 \\u03bf\\u03b9 \\u03ac\\u03bb\\u03bb\\u03bf\\u03b9\",\n\t\t\t\tnew String[] { \"\\u03c0\\u03c1\\u03bf\\u03c5\\u03c0\\u03bf\\u03b8\\u03b5\\u03c3\\u03b5\\u03b9\\u03c3\", \"\\u03b1\\u03c8\\u03bf\\u03b3\\u03bf\\u03c3\", \"\\u03bc\\u03b5\\u03c3\\u03c4\\u03bf\\u03c3\", \"\\u03b1\\u03bb\\u03bb\\u03bf\\u03b9\" });\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}