{"path":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotLargeTest#doTestPivotRanges().mjava","commits":[{"id":"22d0a81a05eba47d5e18976f17d88306b218cc22","date":1436341569,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotLargeTest#doTestPivotRanges().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * spot checks some pivot values and the ranges hanging on them\n   */\n  private void doTestPivotRanges() throws Exception {\n\n    // note: 'p0' is only a top level range, not included in per-pivot ranges\n    for (SolrParams p : new SolrParams[]{\n        // results should be identical for all of these\n        params(\"facet.range\", \"{!key=p0 facet.range.gap=500}pay_i\",\n            \"facet.range\", \"{!key=p1 tag=t1 facet.range.gap=100}pay_i\",\n            \"facet.range\", \"{!key=p2 tag=t1 facet.range.gap=200}pay_i\",\n            \"facet.range.start\", \"0\",\n            \"facet.range.end\", \"1000\"),\n        params(\"facet.range\", \"{!key=p0 facet.range.gap=500}pay_i\",\n            \"facet.range\", \"{!key=p1 tag=t1 facet.range.gap=100}pay_i\",\n            \"facet.range\", \"{!key=p2 tag=t1 facet.range.gap=200}pay_i\",\n            \"f.pay_i.facet.range.start\", \"0\",\n            \"facet.range.end\", \"1000\"),\n        params(\"facet.range\", \"{!key=p0 facet.range.gap=500 facet.range.start=0}pay_i\",\n            \"facet.range\", \"{!key=p1 tag=t1 facet.range.gap=100 facet.range.start=0}pay_i\",\n            \"facet.range\", \"{!key=p2 tag=t1 facet.range.gap=200 facet.range.start=0}pay_i\",\n            \"facet.range.end\", \"1000\")}) {\n\n      QueryResponse rsp\n          = query(SolrParams.wrapDefaults(p, params(\"q\", \"*:*\",\n          \"rows\", \"0\",\n          \"facet\", \"true\",\n          \"facet.pivot\", \"{!range=t1}place_s,company_t\")));\n\n      List<PivotField> pivots = rsp.getFacetPivot().get(\"place_s,company_t\");\n      PivotField pf = null; // changes as we spot check\n      List<RangeFacet.Count> rfc = null; // changes as we spot check\n\n      // 1st sanity check top level ranges\n      assertEquals(3, rsp.getFacetRanges().size());\n      assertRange(\"p0\", 0, 500, 1000, 2, rsp.getFacetRanges().get(0));\n      assertRange(\"p1\", 0, 100, 1000, 10, rsp.getFacetRanges().get(1));\n      assertRange(\"p2\", 0, 200, 1000, 5, rsp.getFacetRanges().get(2));\n\n      // check pivots...\n\n      // first top level pivot value\n      pf = pivots.get(0);\n      assertPivot(\"place_s\", \"cardiff\", 257, pf);\n      assertRange(\"p1\", 0, 100, 1000, 10, pf.getFacetRanges().get(0));\n      assertRange(\"p2\", 0, 200, 1000, 5, pf.getFacetRanges().get(1));\n\n      rfc = pf.getFacetRanges().get(0).getCounts();\n      assertEquals(\"200\", rfc.get(2).getValue());\n      assertEquals(14, rfc.get(2).getCount());\n      assertEquals(\"300\", rfc.get(3).getValue());\n      assertEquals(15, rfc.get(3).getCount());\n\n      rfc = pf.getFacetRanges().get(1).getCounts();\n      assertEquals(\"200\", rfc.get(1).getValue());\n      assertEquals(29, rfc.get(1).getCount());\n\n      // drill down one level of the pivot\n      pf = pf.getPivot().get(0);\n      assertPivot(\"company_t\", \"bbc\", 101, pf);\n      assertRange(\"p1\", 0, 100, 1000, 10, pf.getFacetRanges().get(0));\n      assertRange(\"p2\", 0, 200, 1000, 5, pf.getFacetRanges().get(1));\n\n      rfc = pf.getFacetRanges().get(0).getCounts();\n      for (RangeFacet.Count c : rfc) {\n        assertEquals(0, c.getCount()); // no docs in our ranges for this pivot drill down\n      }\n\n      // pop back up and spot check a different top level pivot value\n      pf = pivots.get(53);\n      assertPivot(\"place_s\", \"placeholder0\", 1, pf);\n      assertRange(\"p1\", 0, 100, 1000, 10, pf.getFacetRanges().get(0));\n      assertRange(\"p2\", 0, 200, 1000, 5, pf.getFacetRanges().get(1));\n\n      rfc = pf.getFacetRanges().get(0).getCounts();\n      assertEquals(\"0\", rfc.get(0).getValue());\n      assertEquals(1, rfc.get(0).getCount());\n      assertEquals(\"100\", rfc.get(1).getValue());\n      assertEquals(0, rfc.get(1).getCount());\n\n      // drill down one level of the pivot\n      pf = pf.getPivot().get(0);\n      assertPivot(\"company_t\", \"compholder0\", 1, pf);\n      assertRange(\"p1\", 0, 100, 1000, 10, pf.getFacetRanges().get(0));\n      assertRange(\"p2\", 0, 200, 1000, 5, pf.getFacetRanges().get(1));\n\n      rfc = pf.getFacetRanges().get(0).getCounts();\n      assertEquals(\"0\", rfc.get(0).getValue());\n      assertEquals(1, rfc.get(0).getCount());\n      assertEquals(\"100\", rfc.get(1).getValue());\n      assertEquals(0, rfc.get(1).getCount());\n\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3f6c7717a0f1decd1668144537943efcc70cd95","date":1459359762,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotLargeTest#doTestPivotRanges().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotLargeTest#doTestPivotRanges().mjava","sourceNew":"  /**\n   * spot checks some pivot values and the ranges hanging on them\n   */\n  private void doTestPivotRanges() throws Exception {\n\n    // note: 'p0' is only a top level range, not included in per-pivot ranges\n    for (SolrParams p : new SolrParams[]{\n        // results should be identical for all of these\n        params(\"facet.range\", \"{!key=p0 facet.range.gap=500}pay_i\",\n            \"facet.range\", \"{!key=p1 tag=t1 facet.range.gap=100}pay_i\",\n            \"facet.range\", \"{!key=p2 tag=t1 facet.range.gap=200}pay_i\",\n            \"facet.range.start\", \"0\",\n            \"facet.range.end\", \"1000\"),\n        params(\"facet.range\", \"{!key=p0 facet.range.gap=500}pay_i\",\n            \"facet.range\", \"{!key=p1 tag=t1 facet.range.gap=100}pay_i\",\n            \"facet.range\", \"{!key=p2 tag=t1 facet.range.gap=200}pay_i\",\n            \"f.pay_i.facet.range.start\", \"0\",\n            \"facet.range.end\", \"1000\"),\n        params(\"facet.range\", \"{!key=p0 facet.range.gap=500 facet.range.start=0}pay_i\",\n            \"facet.range\", \"{!key=p1 tag=t1 facet.range.gap=100 facet.range.start=0}pay_i\",\n            \"facet.range\", \"{!key=p2 tag=t1 facet.range.gap=200 facet.range.start=0}pay_i\",\n            \"facet.range.end\", \"1000\")}) {\n\n      QueryResponse rsp\n          = query(SolrParams.wrapDefaults(p, params(\"q\", \"*:*\",\n          \"rows\", \"0\",\n          \"facet\", \"true\",\n          \"facet.pivot\", \"{!range=t1}place_s,company_t\")));\n\n      List<PivotField> pivots = rsp.getFacetPivot().get(\"place_s,company_t\");\n      PivotField pf = null; // changes as we spot check\n      List<RangeFacet.Count> rfc = null; // changes as we spot check\n\n      // 1st sanity check top level ranges\n      assertEquals(3, rsp.getFacetRanges().size());\n      assertRange(\"p0\", 0, 500, 1000, 2, rsp.getFacetRanges().get(0));\n      assertRange(\"p1\", 0, 100, 1000, 10, rsp.getFacetRanges().get(1));\n      assertRange(\"p2\", 0, 200, 1000, 5, rsp.getFacetRanges().get(2));\n\n      // check pivots...\n\n      // first top level pivot value\n      pf = pivots.get(0);\n      assertPivot(\"place_s\", \"cardiff\", 257, pf);\n      assertRange(\"p1\", 0, 100, 1000, 10, pf.getFacetRanges().get(0));\n      assertRange(\"p2\", 0, 200, 1000, 5, pf.getFacetRanges().get(1));\n\n      rfc = pf.getFacetRanges().get(0).getCounts();\n      assertEquals(\"200\", rfc.get(2).getValue());\n      assertEquals(14, rfc.get(2).getCount());\n      assertEquals(\"300\", rfc.get(3).getValue());\n      assertEquals(15, rfc.get(3).getCount());\n\n      rfc = pf.getFacetRanges().get(1).getCounts();\n      assertEquals(\"200\", rfc.get(1).getValue());\n      assertEquals(29, rfc.get(1).getCount());\n\n      // drill down one level of the pivot\n      pf = pf.getPivot().get(0);\n      assertPivot(\"company_t\", \"bbc\", 101, pf);\n      assertRange(\"p1\", 0, 100, 1000, 10, pf.getFacetRanges().get(0));\n      assertRange(\"p2\", 0, 200, 1000, 5, pf.getFacetRanges().get(1));\n\n      rfc = pf.getFacetRanges().get(0).getCounts();\n      for (RangeFacet.Count c : rfc) {\n\n        assertEquals(0, c.getCount()); // no docs in our ranges for this pivot drill down\n      }\n\n      // pop back up and spot check a different top level pivot value\n      pf = pivots.get(53);\n      assertPivot(\"place_s\", \"placeholder0\", 1, pf);\n      assertRange(\"p1\", 0, 100, 1000, 10, pf.getFacetRanges().get(0));\n      assertRange(\"p2\", 0, 200, 1000, 5, pf.getFacetRanges().get(1));\n\n      rfc = pf.getFacetRanges().get(0).getCounts();\n      assertEquals(\"0\", rfc.get(0).getValue());\n      assertEquals(1, rfc.get(0).getCount());\n      assertEquals(\"100\", rfc.get(1).getValue());\n      assertEquals(0, rfc.get(1).getCount());\n\n      // drill down one level of the pivot\n      pf = pf.getPivot().get(0);\n      assertPivot(\"company_t\", \"compholder0\", 1, pf);\n      assertRange(\"p1\", 0, 100, 1000, 10, pf.getFacetRanges().get(0));\n      assertRange(\"p2\", 0, 200, 1000, 5, pf.getFacetRanges().get(1));\n\n      rfc = pf.getFacetRanges().get(0).getCounts();\n      assertEquals(\"0\", rfc.get(0).getValue());\n      assertEquals(1, rfc.get(0).getCount());\n      assertEquals(\"100\", rfc.get(1).getValue());\n      assertEquals(0, rfc.get(1).getCount());\n\n    }\n  }\n\n","sourceOld":"  /**\n   * spot checks some pivot values and the ranges hanging on them\n   */\n  private void doTestPivotRanges() throws Exception {\n\n    // note: 'p0' is only a top level range, not included in per-pivot ranges\n    for (SolrParams p : new SolrParams[]{\n        // results should be identical for all of these\n        params(\"facet.range\", \"{!key=p0 facet.range.gap=500}pay_i\",\n            \"facet.range\", \"{!key=p1 tag=t1 facet.range.gap=100}pay_i\",\n            \"facet.range\", \"{!key=p2 tag=t1 facet.range.gap=200}pay_i\",\n            \"facet.range.start\", \"0\",\n            \"facet.range.end\", \"1000\"),\n        params(\"facet.range\", \"{!key=p0 facet.range.gap=500}pay_i\",\n            \"facet.range\", \"{!key=p1 tag=t1 facet.range.gap=100}pay_i\",\n            \"facet.range\", \"{!key=p2 tag=t1 facet.range.gap=200}pay_i\",\n            \"f.pay_i.facet.range.start\", \"0\",\n            \"facet.range.end\", \"1000\"),\n        params(\"facet.range\", \"{!key=p0 facet.range.gap=500 facet.range.start=0}pay_i\",\n            \"facet.range\", \"{!key=p1 tag=t1 facet.range.gap=100 facet.range.start=0}pay_i\",\n            \"facet.range\", \"{!key=p2 tag=t1 facet.range.gap=200 facet.range.start=0}pay_i\",\n            \"facet.range.end\", \"1000\")}) {\n\n      QueryResponse rsp\n          = query(SolrParams.wrapDefaults(p, params(\"q\", \"*:*\",\n          \"rows\", \"0\",\n          \"facet\", \"true\",\n          \"facet.pivot\", \"{!range=t1}place_s,company_t\")));\n\n      List<PivotField> pivots = rsp.getFacetPivot().get(\"place_s,company_t\");\n      PivotField pf = null; // changes as we spot check\n      List<RangeFacet.Count> rfc = null; // changes as we spot check\n\n      // 1st sanity check top level ranges\n      assertEquals(3, rsp.getFacetRanges().size());\n      assertRange(\"p0\", 0, 500, 1000, 2, rsp.getFacetRanges().get(0));\n      assertRange(\"p1\", 0, 100, 1000, 10, rsp.getFacetRanges().get(1));\n      assertRange(\"p2\", 0, 200, 1000, 5, rsp.getFacetRanges().get(2));\n\n      // check pivots...\n\n      // first top level pivot value\n      pf = pivots.get(0);\n      assertPivot(\"place_s\", \"cardiff\", 257, pf);\n      assertRange(\"p1\", 0, 100, 1000, 10, pf.getFacetRanges().get(0));\n      assertRange(\"p2\", 0, 200, 1000, 5, pf.getFacetRanges().get(1));\n\n      rfc = pf.getFacetRanges().get(0).getCounts();\n      assertEquals(\"200\", rfc.get(2).getValue());\n      assertEquals(14, rfc.get(2).getCount());\n      assertEquals(\"300\", rfc.get(3).getValue());\n      assertEquals(15, rfc.get(3).getCount());\n\n      rfc = pf.getFacetRanges().get(1).getCounts();\n      assertEquals(\"200\", rfc.get(1).getValue());\n      assertEquals(29, rfc.get(1).getCount());\n\n      // drill down one level of the pivot\n      pf = pf.getPivot().get(0);\n      assertPivot(\"company_t\", \"bbc\", 101, pf);\n      assertRange(\"p1\", 0, 100, 1000, 10, pf.getFacetRanges().get(0));\n      assertRange(\"p2\", 0, 200, 1000, 5, pf.getFacetRanges().get(1));\n\n      rfc = pf.getFacetRanges().get(0).getCounts();\n      for (RangeFacet.Count c : rfc) {\n        assertEquals(0, c.getCount()); // no docs in our ranges for this pivot drill down\n      }\n\n      // pop back up and spot check a different top level pivot value\n      pf = pivots.get(53);\n      assertPivot(\"place_s\", \"placeholder0\", 1, pf);\n      assertRange(\"p1\", 0, 100, 1000, 10, pf.getFacetRanges().get(0));\n      assertRange(\"p2\", 0, 200, 1000, 5, pf.getFacetRanges().get(1));\n\n      rfc = pf.getFacetRanges().get(0).getCounts();\n      assertEquals(\"0\", rfc.get(0).getValue());\n      assertEquals(1, rfc.get(0).getCount());\n      assertEquals(\"100\", rfc.get(1).getValue());\n      assertEquals(0, rfc.get(1).getCount());\n\n      // drill down one level of the pivot\n      pf = pf.getPivot().get(0);\n      assertPivot(\"company_t\", \"compholder0\", 1, pf);\n      assertRange(\"p1\", 0, 100, 1000, 10, pf.getFacetRanges().get(0));\n      assertRange(\"p2\", 0, 200, 1000, 5, pf.getFacetRanges().get(1));\n\n      rfc = pf.getFacetRanges().get(0).getCounts();\n      assertEquals(\"0\", rfc.get(0).getValue());\n      assertEquals(1, rfc.get(0).getCount());\n      assertEquals(\"100\", rfc.get(1).getValue());\n      assertEquals(0, rfc.get(1).getCount());\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotLargeTest#doTestPivotRanges().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotLargeTest#doTestPivotRanges().mjava","sourceNew":"  /**\n   * spot checks some pivot values and the ranges hanging on them\n   */\n  @SuppressWarnings({\"unchecked\"})\n  private void doTestPivotRanges() throws Exception {\n\n    // note: 'p0' is only a top level range, not included in per-pivot ranges\n    for (SolrParams p : new SolrParams[]{\n        // results should be identical for all of these\n        params(\"facet.range\", \"{!key=p0 facet.range.gap=500}pay_i\",\n            \"facet.range\", \"{!key=p1 tag=t1 facet.range.gap=100}pay_i\",\n            \"facet.range\", \"{!key=p2 tag=t1 facet.range.gap=200}pay_i\",\n            \"facet.range.start\", \"0\",\n            \"facet.range.end\", \"1000\"),\n        params(\"facet.range\", \"{!key=p0 facet.range.gap=500}pay_i\",\n            \"facet.range\", \"{!key=p1 tag=t1 facet.range.gap=100}pay_i\",\n            \"facet.range\", \"{!key=p2 tag=t1 facet.range.gap=200}pay_i\",\n            \"f.pay_i.facet.range.start\", \"0\",\n            \"facet.range.end\", \"1000\"),\n        params(\"facet.range\", \"{!key=p0 facet.range.gap=500 facet.range.start=0}pay_i\",\n            \"facet.range\", \"{!key=p1 tag=t1 facet.range.gap=100 facet.range.start=0}pay_i\",\n            \"facet.range\", \"{!key=p2 tag=t1 facet.range.gap=200 facet.range.start=0}pay_i\",\n            \"facet.range.end\", \"1000\")}) {\n\n      QueryResponse rsp\n          = query(SolrParams.wrapDefaults(p, params(\"q\", \"*:*\",\n          \"rows\", \"0\",\n          \"facet\", \"true\",\n          \"facet.pivot\", \"{!range=t1}place_s,company_t\")));\n\n      List<PivotField> pivots = rsp.getFacetPivot().get(\"place_s,company_t\");\n      PivotField pf = null; // changes as we spot check\n      List<RangeFacet.Count> rfc = null; // changes as we spot check\n\n      // 1st sanity check top level ranges\n      assertEquals(3, rsp.getFacetRanges().size());\n      assertRange(\"p0\", 0, 500, 1000, 2, rsp.getFacetRanges().get(0));\n      assertRange(\"p1\", 0, 100, 1000, 10, rsp.getFacetRanges().get(1));\n      assertRange(\"p2\", 0, 200, 1000, 5, rsp.getFacetRanges().get(2));\n\n      // check pivots...\n\n      // first top level pivot value\n      pf = pivots.get(0);\n      assertPivot(\"place_s\", \"cardiff\", 257, pf);\n      assertRange(\"p1\", 0, 100, 1000, 10, pf.getFacetRanges().get(0));\n      assertRange(\"p2\", 0, 200, 1000, 5, pf.getFacetRanges().get(1));\n\n      rfc = pf.getFacetRanges().get(0).getCounts();\n      assertEquals(\"200\", rfc.get(2).getValue());\n      assertEquals(14, rfc.get(2).getCount());\n      assertEquals(\"300\", rfc.get(3).getValue());\n      assertEquals(15, rfc.get(3).getCount());\n\n      rfc = pf.getFacetRanges().get(1).getCounts();\n      assertEquals(\"200\", rfc.get(1).getValue());\n      assertEquals(29, rfc.get(1).getCount());\n\n      // drill down one level of the pivot\n      pf = pf.getPivot().get(0);\n      assertPivot(\"company_t\", \"bbc\", 101, pf);\n      assertRange(\"p1\", 0, 100, 1000, 10, pf.getFacetRanges().get(0));\n      assertRange(\"p2\", 0, 200, 1000, 5, pf.getFacetRanges().get(1));\n\n      rfc = pf.getFacetRanges().get(0).getCounts();\n      for (RangeFacet.Count c : rfc) {\n\n        assertEquals(0, c.getCount()); // no docs in our ranges for this pivot drill down\n      }\n\n      // pop back up and spot check a different top level pivot value\n      pf = pivots.get(53);\n      assertPivot(\"place_s\", \"placeholder0\", 1, pf);\n      assertRange(\"p1\", 0, 100, 1000, 10, pf.getFacetRanges().get(0));\n      assertRange(\"p2\", 0, 200, 1000, 5, pf.getFacetRanges().get(1));\n\n      rfc = pf.getFacetRanges().get(0).getCounts();\n      assertEquals(\"0\", rfc.get(0).getValue());\n      assertEquals(1, rfc.get(0).getCount());\n      assertEquals(\"100\", rfc.get(1).getValue());\n      assertEquals(0, rfc.get(1).getCount());\n\n      // drill down one level of the pivot\n      pf = pf.getPivot().get(0);\n      assertPivot(\"company_t\", \"compholder0\", 1, pf);\n      assertRange(\"p1\", 0, 100, 1000, 10, pf.getFacetRanges().get(0));\n      assertRange(\"p2\", 0, 200, 1000, 5, pf.getFacetRanges().get(1));\n\n      rfc = pf.getFacetRanges().get(0).getCounts();\n      assertEquals(\"0\", rfc.get(0).getValue());\n      assertEquals(1, rfc.get(0).getCount());\n      assertEquals(\"100\", rfc.get(1).getValue());\n      assertEquals(0, rfc.get(1).getCount());\n\n    }\n  }\n\n","sourceOld":"  /**\n   * spot checks some pivot values and the ranges hanging on them\n   */\n  private void doTestPivotRanges() throws Exception {\n\n    // note: 'p0' is only a top level range, not included in per-pivot ranges\n    for (SolrParams p : new SolrParams[]{\n        // results should be identical for all of these\n        params(\"facet.range\", \"{!key=p0 facet.range.gap=500}pay_i\",\n            \"facet.range\", \"{!key=p1 tag=t1 facet.range.gap=100}pay_i\",\n            \"facet.range\", \"{!key=p2 tag=t1 facet.range.gap=200}pay_i\",\n            \"facet.range.start\", \"0\",\n            \"facet.range.end\", \"1000\"),\n        params(\"facet.range\", \"{!key=p0 facet.range.gap=500}pay_i\",\n            \"facet.range\", \"{!key=p1 tag=t1 facet.range.gap=100}pay_i\",\n            \"facet.range\", \"{!key=p2 tag=t1 facet.range.gap=200}pay_i\",\n            \"f.pay_i.facet.range.start\", \"0\",\n            \"facet.range.end\", \"1000\"),\n        params(\"facet.range\", \"{!key=p0 facet.range.gap=500 facet.range.start=0}pay_i\",\n            \"facet.range\", \"{!key=p1 tag=t1 facet.range.gap=100 facet.range.start=0}pay_i\",\n            \"facet.range\", \"{!key=p2 tag=t1 facet.range.gap=200 facet.range.start=0}pay_i\",\n            \"facet.range.end\", \"1000\")}) {\n\n      QueryResponse rsp\n          = query(SolrParams.wrapDefaults(p, params(\"q\", \"*:*\",\n          \"rows\", \"0\",\n          \"facet\", \"true\",\n          \"facet.pivot\", \"{!range=t1}place_s,company_t\")));\n\n      List<PivotField> pivots = rsp.getFacetPivot().get(\"place_s,company_t\");\n      PivotField pf = null; // changes as we spot check\n      List<RangeFacet.Count> rfc = null; // changes as we spot check\n\n      // 1st sanity check top level ranges\n      assertEquals(3, rsp.getFacetRanges().size());\n      assertRange(\"p0\", 0, 500, 1000, 2, rsp.getFacetRanges().get(0));\n      assertRange(\"p1\", 0, 100, 1000, 10, rsp.getFacetRanges().get(1));\n      assertRange(\"p2\", 0, 200, 1000, 5, rsp.getFacetRanges().get(2));\n\n      // check pivots...\n\n      // first top level pivot value\n      pf = pivots.get(0);\n      assertPivot(\"place_s\", \"cardiff\", 257, pf);\n      assertRange(\"p1\", 0, 100, 1000, 10, pf.getFacetRanges().get(0));\n      assertRange(\"p2\", 0, 200, 1000, 5, pf.getFacetRanges().get(1));\n\n      rfc = pf.getFacetRanges().get(0).getCounts();\n      assertEquals(\"200\", rfc.get(2).getValue());\n      assertEquals(14, rfc.get(2).getCount());\n      assertEquals(\"300\", rfc.get(3).getValue());\n      assertEquals(15, rfc.get(3).getCount());\n\n      rfc = pf.getFacetRanges().get(1).getCounts();\n      assertEquals(\"200\", rfc.get(1).getValue());\n      assertEquals(29, rfc.get(1).getCount());\n\n      // drill down one level of the pivot\n      pf = pf.getPivot().get(0);\n      assertPivot(\"company_t\", \"bbc\", 101, pf);\n      assertRange(\"p1\", 0, 100, 1000, 10, pf.getFacetRanges().get(0));\n      assertRange(\"p2\", 0, 200, 1000, 5, pf.getFacetRanges().get(1));\n\n      rfc = pf.getFacetRanges().get(0).getCounts();\n      for (RangeFacet.Count c : rfc) {\n\n        assertEquals(0, c.getCount()); // no docs in our ranges for this pivot drill down\n      }\n\n      // pop back up and spot check a different top level pivot value\n      pf = pivots.get(53);\n      assertPivot(\"place_s\", \"placeholder0\", 1, pf);\n      assertRange(\"p1\", 0, 100, 1000, 10, pf.getFacetRanges().get(0));\n      assertRange(\"p2\", 0, 200, 1000, 5, pf.getFacetRanges().get(1));\n\n      rfc = pf.getFacetRanges().get(0).getCounts();\n      assertEquals(\"0\", rfc.get(0).getValue());\n      assertEquals(1, rfc.get(0).getCount());\n      assertEquals(\"100\", rfc.get(1).getValue());\n      assertEquals(0, rfc.get(1).getCount());\n\n      // drill down one level of the pivot\n      pf = pf.getPivot().get(0);\n      assertPivot(\"company_t\", \"compholder0\", 1, pf);\n      assertRange(\"p1\", 0, 100, 1000, 10, pf.getFacetRanges().get(0));\n      assertRange(\"p2\", 0, 200, 1000, 5, pf.getFacetRanges().get(1));\n\n      rfc = pf.getFacetRanges().get(0).getCounts();\n      assertEquals(\"0\", rfc.get(0).getValue());\n      assertEquals(1, rfc.get(0).getCount());\n      assertEquals(\"100\", rfc.get(1).getValue());\n      assertEquals(0, rfc.get(1).getCount());\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3f6c7717a0f1decd1668144537943efcc70cd95":["22d0a81a05eba47d5e18976f17d88306b218cc22"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22d0a81a05eba47d5e18976f17d88306b218cc22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["d3f6c7717a0f1decd1668144537943efcc70cd95"]},"commit2Childs":{"d3f6c7717a0f1decd1668144537943efcc70cd95":["e98520789adb1d5ad05afb4956eca0944a929688"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["22d0a81a05eba47d5e18976f17d88306b218cc22"],"22d0a81a05eba47d5e18976f17d88306b218cc22":["d3f6c7717a0f1decd1668144537943efcc70cd95"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}