{"path":"src/test/org/apache/lucene/index/TestTerm#testEquals().mjava","commits":[{"id":"38dfab784059c7bde15a02375f5adf58bf1f8f51","date":1174058465,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestTerm#testEquals().mjava","pathOld":"/dev/null","sourceNew":"  public void testEquals() {\n    final Term base = new Term(\"same\", \"same\");\n    final Term same = new Term(\"same\", \"same\");\n    final Term differentField = new Term(\"different\", \"same\");\n    final Term differentText = new Term(\"same\", \"different\");\n    final String differentType = \"AString\";\n    assertEquals(base, base);\n    assertEquals(base, same);\n    assertFalse(base.equals(differentField));\n    assertFalse(base.equals(differentText));\n    assertFalse(base.equals(differentType));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestTerm#testEquals().mjava","pathOld":"src/test/org/apache/lucene/index/TestTerm#testEquals().mjava","sourceNew":"  public void testEquals() {\n    final Term base = new Term(\"same\", \"same\");\n    final Term same = new Term(\"same\", \"same\");\n    final Term differentField = new Term(\"different\", \"same\");\n    final Term differentText = new Term(\"same\", \"different\");\n    final String differentType = \"AString\";\n    assertEquals(base, base);\n    assertEquals(base, same);\n    assertFalse(base.equals(differentField));\n    assertFalse(base.equals(differentText));\n    assertFalse(base.equals(differentType));\n  }\n\n","sourceOld":"  public void testEquals() {\n    final Term base = new Term(\"same\", \"same\");\n    final Term same = new Term(\"same\", \"same\");\n    final Term differentField = new Term(\"different\", \"same\");\n    final Term differentText = new Term(\"same\", \"different\");\n    final String differentType = \"AString\";\n    assertEquals(base, base);\n    assertEquals(base, same);\n    assertFalse(base.equals(differentField));\n    assertFalse(base.equals(differentText));\n    assertFalse(base.equals(differentType));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38dfab784059c7bde15a02375f5adf58bf1f8f51":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["38dfab784059c7bde15a02375f5adf58bf1f8f51"]},"commit2Childs":{"38dfab784059c7bde15a02375f5adf58bf1f8f51":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38dfab784059c7bde15a02375f5adf58bf1f8f51"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}