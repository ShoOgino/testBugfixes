{"path":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testFullClusterCrash().mjava","commits":[{"id":"38cf1409ac117286eb0df7d6ef31d9cfdad8cfec","date":1454767455,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testFullClusterCrash().mjava","pathOld":"/dev/null","sourceNew":"  public void testFullClusterCrash() throws Exception {\n\n    Path path1 = createTempDir(\"1\");\n    NodeProcess primary = startNode(-1, 0, path1, -1, true);\n\n    Path path2 = createTempDir(\"2\");\n    NodeProcess replica1 = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    Path path3 = createTempDir(\"3\");\n    NodeProcess replica2 = startNode(primary.tcpPort, 2, path3, -1, true);\n\n    sendReplicasToPrimary(primary, replica1, replica2);\n\n    // Index 50 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    long primaryVersion1 = 0;\n    for (int iter=0;iter<5;iter++) {\n      try (Connection c = new Connection(primary.tcpPort)) {\n        c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n        for(int i=0;i<10;i++) {\n          Document doc = docs.nextDoc();\n          primary.addOrUpdateDocument(c, doc, false);\n        }\n      }\n\n      // Refresh primary, which also pushes to replicas:\n      primaryVersion1 = primary.flush(0);\n      assertTrue(primaryVersion1 > 0);\n    }\n\n    // Wait for replicas to sync up:\n    waitForVersionAndHits(replica1, primaryVersion1, 50);\n    waitForVersionAndHits(replica2, primaryVersion1, 50);\n\n    primary.commit();\n    replica1.commit();\n    replica2.commit();\n\n    // Index 10 more docs, but don't sync to replicas:\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Full cluster crash\n    primary.crash();\n    replica1.crash();\n    replica2.crash();\n\n    // Full cluster restart\n    primary = startNode(-1, 0, path1, -1, true);\n    replica1 = startNode(primary.tcpPort, 1, path2, -1, true);\n    replica2 = startNode(primary.tcpPort, 2, path3, -1, true);\n\n    // Only 50 because we didn't commit primary before the crash:\n    \n    // It's -1 because it's unpredictable how IW changes segments version on init:\n    assertVersionAndHits(primary, -1, 50);\n    assertVersionAndHits(replica1, primaryVersion1, 50);\n    assertVersionAndHits(replica2, primaryVersion1, 50);\n\n    primary.close();\n    replica1.close();\n    replica2.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testFullClusterCrash().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testFullClusterCrash().mjava","sourceNew":"  public void testFullClusterCrash() throws Exception {\n\n    Path path1 = createTempDir(\"1\");\n    NodeProcess primary = startNode(-1, 0, path1, -1, true);\n\n    Path path2 = createTempDir(\"2\");\n    NodeProcess replica1 = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    Path path3 = createTempDir(\"3\");\n    NodeProcess replica2 = startNode(primary.tcpPort, 2, path3, -1, true);\n\n    sendReplicasToPrimary(primary, replica1, replica2);\n\n    // Index 50 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    long primaryVersion1 = 0;\n    for (int iter=0;iter<5;iter++) {\n      try (Connection c = new Connection(primary.tcpPort)) {\n        c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n        for(int i=0;i<10;i++) {\n          Document doc = docs.nextDoc();\n          primary.addOrUpdateDocument(c, doc, false);\n        }\n      }\n\n      // Refresh primary, which also pushes to replicas:\n      primaryVersion1 = primary.flush(0);\n      assertTrue(primaryVersion1 > 0);\n    }\n\n    // Wait for replicas to sync up:\n    waitForVersionAndHits(replica1, primaryVersion1, 50);\n    waitForVersionAndHits(replica2, primaryVersion1, 50);\n\n    primary.commit();\n    replica1.commit();\n    replica2.commit();\n\n    // Index 10 more docs, but don't sync to replicas:\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Full cluster crash\n    primary.crash();\n    replica1.crash();\n    replica2.crash();\n\n    // Full cluster restart\n    primary = startNode(-1, 0, path1, -1, true);\n    replica1 = startNode(primary.tcpPort, 1, path2, -1, true);\n    replica2 = startNode(primary.tcpPort, 2, path3, -1, true);\n\n    // Only 50 because we didn't commit primary before the crash:\n    \n    // It's -1 because it's unpredictable how IW changes segments version on init:\n    assertVersionAndHits(primary, -1, 50);\n    assertVersionAndHits(replica1, primary.initInfosVersion, 50);\n    assertVersionAndHits(replica2, primary.initInfosVersion, 50);\n\n    primary.close();\n    replica1.close();\n    replica2.close();\n  }\n\n","sourceOld":"  public void testFullClusterCrash() throws Exception {\n\n    Path path1 = createTempDir(\"1\");\n    NodeProcess primary = startNode(-1, 0, path1, -1, true);\n\n    Path path2 = createTempDir(\"2\");\n    NodeProcess replica1 = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    Path path3 = createTempDir(\"3\");\n    NodeProcess replica2 = startNode(primary.tcpPort, 2, path3, -1, true);\n\n    sendReplicasToPrimary(primary, replica1, replica2);\n\n    // Index 50 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    long primaryVersion1 = 0;\n    for (int iter=0;iter<5;iter++) {\n      try (Connection c = new Connection(primary.tcpPort)) {\n        c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n        for(int i=0;i<10;i++) {\n          Document doc = docs.nextDoc();\n          primary.addOrUpdateDocument(c, doc, false);\n        }\n      }\n\n      // Refresh primary, which also pushes to replicas:\n      primaryVersion1 = primary.flush(0);\n      assertTrue(primaryVersion1 > 0);\n    }\n\n    // Wait for replicas to sync up:\n    waitForVersionAndHits(replica1, primaryVersion1, 50);\n    waitForVersionAndHits(replica2, primaryVersion1, 50);\n\n    primary.commit();\n    replica1.commit();\n    replica2.commit();\n\n    // Index 10 more docs, but don't sync to replicas:\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Full cluster crash\n    primary.crash();\n    replica1.crash();\n    replica2.crash();\n\n    // Full cluster restart\n    primary = startNode(-1, 0, path1, -1, true);\n    replica1 = startNode(primary.tcpPort, 1, path2, -1, true);\n    replica2 = startNode(primary.tcpPort, 2, path3, -1, true);\n\n    // Only 50 because we didn't commit primary before the crash:\n    \n    // It's -1 because it's unpredictable how IW changes segments version on init:\n    assertVersionAndHits(primary, -1, 50);\n    assertVersionAndHits(replica1, primaryVersion1, 50);\n    assertVersionAndHits(replica2, primaryVersion1, 50);\n\n    primary.close();\n    replica1.close();\n    replica2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1883fc56f404231ea9b9a6b841afe9d3ec00f8e","date":1455182738,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testFullClusterCrash().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testFullClusterCrash().mjava","sourceNew":"  @Nightly\n  public void testFullClusterCrash() throws Exception {\n\n    Path path1 = createTempDir(\"1\");\n    NodeProcess primary = startNode(-1, 0, path1, -1, true);\n\n    Path path2 = createTempDir(\"2\");\n    NodeProcess replica1 = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    Path path3 = createTempDir(\"3\");\n    NodeProcess replica2 = startNode(primary.tcpPort, 2, path3, -1, true);\n\n    sendReplicasToPrimary(primary, replica1, replica2);\n\n    // Index 50 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    long primaryVersion1 = 0;\n    for (int iter=0;iter<5;iter++) {\n      try (Connection c = new Connection(primary.tcpPort)) {\n        c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n        for(int i=0;i<10;i++) {\n          Document doc = docs.nextDoc();\n          primary.addOrUpdateDocument(c, doc, false);\n        }\n      }\n\n      // Refresh primary, which also pushes to replicas:\n      primaryVersion1 = primary.flush(0);\n      assertTrue(primaryVersion1 > 0);\n    }\n\n    // Wait for replicas to sync up:\n    waitForVersionAndHits(replica1, primaryVersion1, 50);\n    waitForVersionAndHits(replica2, primaryVersion1, 50);\n\n    primary.commit();\n    replica1.commit();\n    replica2.commit();\n\n    // Index 10 more docs, but don't sync to replicas:\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Full cluster crash\n    primary.crash();\n    replica1.crash();\n    replica2.crash();\n\n    // Full cluster restart\n    primary = startNode(-1, 0, path1, -1, true);\n    replica1 = startNode(primary.tcpPort, 1, path2, -1, true);\n    replica2 = startNode(primary.tcpPort, 2, path3, -1, true);\n\n    // Only 50 because we didn't commit primary before the crash:\n    \n    // It's -1 because it's unpredictable how IW changes segments version on init:\n    assertVersionAndHits(primary, -1, 50);\n    assertVersionAndHits(replica1, primary.initInfosVersion, 50);\n    assertVersionAndHits(replica2, primary.initInfosVersion, 50);\n\n    primary.close();\n    replica1.close();\n    replica2.close();\n  }\n\n","sourceOld":"  public void testFullClusterCrash() throws Exception {\n\n    Path path1 = createTempDir(\"1\");\n    NodeProcess primary = startNode(-1, 0, path1, -1, true);\n\n    Path path2 = createTempDir(\"2\");\n    NodeProcess replica1 = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    Path path3 = createTempDir(\"3\");\n    NodeProcess replica2 = startNode(primary.tcpPort, 2, path3, -1, true);\n\n    sendReplicasToPrimary(primary, replica1, replica2);\n\n    // Index 50 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    long primaryVersion1 = 0;\n    for (int iter=0;iter<5;iter++) {\n      try (Connection c = new Connection(primary.tcpPort)) {\n        c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n        for(int i=0;i<10;i++) {\n          Document doc = docs.nextDoc();\n          primary.addOrUpdateDocument(c, doc, false);\n        }\n      }\n\n      // Refresh primary, which also pushes to replicas:\n      primaryVersion1 = primary.flush(0);\n      assertTrue(primaryVersion1 > 0);\n    }\n\n    // Wait for replicas to sync up:\n    waitForVersionAndHits(replica1, primaryVersion1, 50);\n    waitForVersionAndHits(replica2, primaryVersion1, 50);\n\n    primary.commit();\n    replica1.commit();\n    replica2.commit();\n\n    // Index 10 more docs, but don't sync to replicas:\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Full cluster crash\n    primary.crash();\n    replica1.crash();\n    replica2.crash();\n\n    // Full cluster restart\n    primary = startNode(-1, 0, path1, -1, true);\n    replica1 = startNode(primary.tcpPort, 1, path2, -1, true);\n    replica2 = startNode(primary.tcpPort, 2, path3, -1, true);\n\n    // Only 50 because we didn't commit primary before the crash:\n    \n    // It's -1 because it's unpredictable how IW changes segments version on init:\n    assertVersionAndHits(primary, -1, 50);\n    assertVersionAndHits(replica1, primary.initInfosVersion, 50);\n    assertVersionAndHits(replica2, primary.initInfosVersion, 50);\n\n    primary.close();\n    replica1.close();\n    replica2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testFullClusterCrash().mjava","pathOld":"/dev/null","sourceNew":"  @Nightly\n  public void testFullClusterCrash() throws Exception {\n\n    Path path1 = createTempDir(\"1\");\n    NodeProcess primary = startNode(-1, 0, path1, -1, true);\n\n    Path path2 = createTempDir(\"2\");\n    NodeProcess replica1 = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    Path path3 = createTempDir(\"3\");\n    NodeProcess replica2 = startNode(primary.tcpPort, 2, path3, -1, true);\n\n    sendReplicasToPrimary(primary, replica1, replica2);\n\n    // Index 50 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    long primaryVersion1 = 0;\n    for (int iter=0;iter<5;iter++) {\n      try (Connection c = new Connection(primary.tcpPort)) {\n        c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n        for(int i=0;i<10;i++) {\n          Document doc = docs.nextDoc();\n          primary.addOrUpdateDocument(c, doc, false);\n        }\n      }\n\n      // Refresh primary, which also pushes to replicas:\n      primaryVersion1 = primary.flush(0);\n      assertTrue(primaryVersion1 > 0);\n    }\n\n    // Wait for replicas to sync up:\n    waitForVersionAndHits(replica1, primaryVersion1, 50);\n    waitForVersionAndHits(replica2, primaryVersion1, 50);\n\n    primary.commit();\n    replica1.commit();\n    replica2.commit();\n\n    // Index 10 more docs, but don't sync to replicas:\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Full cluster crash\n    primary.crash();\n    replica1.crash();\n    replica2.crash();\n\n    // Full cluster restart\n    primary = startNode(-1, 0, path1, -1, true);\n    replica1 = startNode(primary.tcpPort, 1, path2, -1, true);\n    replica2 = startNode(primary.tcpPort, 2, path3, -1, true);\n\n    // Only 50 because we didn't commit primary before the crash:\n    \n    // It's -1 because it's unpredictable how IW changes segments version on init:\n    assertVersionAndHits(primary, -1, 50);\n    assertVersionAndHits(replica1, primary.initInfosVersion, 50);\n    assertVersionAndHits(replica2, primary.initInfosVersion, 50);\n\n    primary.close();\n    replica1.close();\n    replica2.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dede24fb16615594e9570fb29829cbffa1315a1f","date":1589579471,"type":3,"author":"erick","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testFullClusterCrash().mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/nrt/TestNRTReplication#testFullClusterCrash().mjava","sourceNew":"  @Nightly\n  public void testFullClusterCrash() throws Exception {\n\n    Path path1 = createTempDir(\"1\");\n    NodeProcess primary = startNode(-1, 0, path1, -1, true);\n\n    Path path2 = createTempDir(\"2\");\n    NodeProcess replica1 = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    Path path3 = createTempDir(\"3\");\n    NodeProcess replica2 = startNode(primary.tcpPort, 2, path3, -1, true);\n\n    sendReplicasToPrimary(primary, replica1, replica2);\n\n    // Index 50 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    long primaryVersion1 = 0;\n    for (int iter=0;iter<5;iter++) {\n      try (Connection c = new Connection(primary.tcpPort)) {\n        c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n        for(int i=0;i<10;i++) {\n          Document doc = docs.nextDoc();\n          primary.addOrUpdateDocument(c, doc, false);\n        }\n      }\n\n      // Refresh primary, which also pushes to replicas:\n      primaryVersion1 = primary.flush(0);\n      assertTrue(primaryVersion1 > 0);\n    }\n\n    // Wait for replicas to sync up:\n    waitForVersionAndHits(replica1, primaryVersion1, 50);\n    waitForVersionAndHits(replica2, primaryVersion1, 50);\n\n    primary.commit();\n    replica1.commit();\n    replica2.commit();\n\n    // Index 10 more docs, but don't sync to replicas:\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Full cluster crash\n    primary.crash();\n    replica1.crash();\n    replica2.crash();\n\n    // Full cluster restart\n    primary = startNode(-1, 0, path1, -1, true);\n    replica1 = startNode(primary.tcpPort, 1, path2, -1, true);\n    replica2 = startNode(primary.tcpPort, 2, path3, -1, true);\n\n    // Only 50 because we didn't commit primary before the crash:\n    \n    // It's -1 because it's unpredictable how IW changes segments version on init:\n    assertVersionAndHits(primary, -1, 50);\n    assertVersionAndHits(replica1, primary.initInfosVersion, 50);\n    assertVersionAndHits(replica2, primary.initInfosVersion, 50);\n\n    docs.close();\n    primary.close();\n    replica1.close();\n    replica2.close();\n  }\n\n","sourceOld":"  @Nightly\n  public void testFullClusterCrash() throws Exception {\n\n    Path path1 = createTempDir(\"1\");\n    NodeProcess primary = startNode(-1, 0, path1, -1, true);\n\n    Path path2 = createTempDir(\"2\");\n    NodeProcess replica1 = startNode(primary.tcpPort, 1, path2, -1, true);\n\n    Path path3 = createTempDir(\"3\");\n    NodeProcess replica2 = startNode(primary.tcpPort, 2, path3, -1, true);\n\n    sendReplicasToPrimary(primary, replica1, replica2);\n\n    // Index 50 docs into primary:\n    LineFileDocs docs = new LineFileDocs(random());\n    long primaryVersion1 = 0;\n    for (int iter=0;iter<5;iter++) {\n      try (Connection c = new Connection(primary.tcpPort)) {\n        c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n        for(int i=0;i<10;i++) {\n          Document doc = docs.nextDoc();\n          primary.addOrUpdateDocument(c, doc, false);\n        }\n      }\n\n      // Refresh primary, which also pushes to replicas:\n      primaryVersion1 = primary.flush(0);\n      assertTrue(primaryVersion1 > 0);\n    }\n\n    // Wait for replicas to sync up:\n    waitForVersionAndHits(replica1, primaryVersion1, 50);\n    waitForVersionAndHits(replica2, primaryVersion1, 50);\n\n    primary.commit();\n    replica1.commit();\n    replica2.commit();\n\n    // Index 10 more docs, but don't sync to replicas:\n    try (Connection c = new Connection(primary.tcpPort)) {\n      c.out.writeByte(SimplePrimaryNode.CMD_INDEXING);\n      for(int i=0;i<10;i++) {\n        Document doc = docs.nextDoc();\n        primary.addOrUpdateDocument(c, doc, false);\n      }\n    }\n\n    // Full cluster crash\n    primary.crash();\n    replica1.crash();\n    replica2.crash();\n\n    // Full cluster restart\n    primary = startNode(-1, 0, path1, -1, true);\n    replica1 = startNode(primary.tcpPort, 1, path2, -1, true);\n    replica2 = startNode(primary.tcpPort, 2, path3, -1, true);\n\n    // Only 50 because we didn't commit primary before the crash:\n    \n    // It's -1 because it's unpredictable how IW changes segments version on init:\n    assertVersionAndHits(primary, -1, 50);\n    assertVersionAndHits(replica1, primary.initInfosVersion, 50);\n    assertVersionAndHits(replica2, primary.initInfosVersion, 50);\n\n    primary.close();\n    replica1.close();\n    replica2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b1883fc56f404231ea9b9a6b841afe9d3ec00f8e":["1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["38cf1409ac117286eb0df7d6ef31d9cfdad8cfec","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"68496c2200e559fb7802f7575427b7a482659afb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b1883fc56f404231ea9b9a6b841afe9d3ec00f8e"],"dede24fb16615594e9570fb29829cbffa1315a1f":["68496c2200e559fb7802f7575427b7a482659afb"],"38cf1409ac117286eb0df7d6ef31d9cfdad8cfec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dede24fb16615594e9570fb29829cbffa1315a1f"]},"commit2Childs":{"b1883fc56f404231ea9b9a6b841afe9d3ec00f8e":["68496c2200e559fb7802f7575427b7a482659afb"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["b1883fc56f404231ea9b9a6b841afe9d3ec00f8e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","68496c2200e559fb7802f7575427b7a482659afb","38cf1409ac117286eb0df7d6ef31d9cfdad8cfec"],"68496c2200e559fb7802f7575427b7a482659afb":["dede24fb16615594e9570fb29829cbffa1315a1f"],"38cf1409ac117286eb0df7d6ef31d9cfdad8cfec":["1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"dede24fb16615594e9570fb29829cbffa1315a1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}