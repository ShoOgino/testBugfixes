{"path":"contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#tstFilterCard(String,int,Filter).mjava","commits":[{"id":"a27a24aac4a53ec0af1f168a3b1ab4a06a042250","date":1211570705,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#tstFilterCard(String,int,Filter).mjava","pathOld":"/dev/null","sourceNew":"        private void tstFilterCard(String mes, int expected, Filter filt)\r\n        throws Throwable\r\n        {\r\n          DocIdSetIterator disi = filt.getDocIdSet(reader).iterator();\r\n          int actual = 0;\r\n          while (disi.next()) {\r\n            actual++;\r\n          }\r\n          assertEquals(mes, expected, actual);\r\n        }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff63a37d43d489d1c98a2f5eaed66fc6f27cdc0e","date":1211590092,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#tstFilterCard(String,int,Filter).mjava","pathOld":"contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#tstFilterCard(String,int,Filter).mjava","sourceNew":"        private void tstFilterCard(String mes, int expected, Filter filt)\n        throws Throwable\n        {\n          DocIdSetIterator disi = filt.getDocIdSet(reader).iterator();\n          int actual = 0;\n          while (disi.next()) {\n            actual++;\n          }\n          assertEquals(mes, expected, actual);\n        }\n\n","sourceOld":"        private void tstFilterCard(String mes, int expected, Filter filt)\r\n        throws Throwable\r\n        {\r\n          DocIdSetIterator disi = filt.getDocIdSet(reader).iterator();\r\n          int actual = 0;\r\n          while (disi.next()) {\r\n            actual++;\r\n          }\r\n          assertEquals(mes, expected, actual);\r\n        }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eb23f9df4043a71b90fe4afb13c4cf3eb48f0b","date":1255274883,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#tstFilterCard(String,int,Filter).mjava","pathOld":"contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#tstFilterCard(String,int,Filter).mjava","sourceNew":"        private void tstFilterCard(String mes, int expected, Filter filt)\n        throws Throwable\n        {\n          DocIdSetIterator disi = filt.getDocIdSet(reader).iterator();\n          int actual = 0;\n          while (disi.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n            actual++;\n          }\n          assertEquals(mes, expected, actual);\n        }\n\n","sourceOld":"        private void tstFilterCard(String mes, int expected, Filter filt)\n        throws Throwable\n        {\n          DocIdSetIterator disi = filt.getDocIdSet(reader).iterator();\n          int actual = 0;\n          while (disi.next()) {\n            actual++;\n          }\n          assertEquals(mes, expected, actual);\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#tstFilterCard(String,int,Filter).mjava","pathOld":"contrib/queries/src/test/org/apache/lucene/search/BooleanFilterTest#tstFilterCard(String,int,Filter).mjava","sourceNew":"        private void tstFilterCard(String mes, int expected, Filter filt)\n        throws Throwable\n        {\n          DocIdSetIterator disi = filt.getDocIdSet(reader).iterator();\n          int actual = 0;\n          while (disi.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n            actual++;\n          }\n          assertEquals(mes, expected, actual);\n        }\n\n","sourceOld":"        private void tstFilterCard(String mes, int expected, Filter filt)\n        throws Throwable\n        {\n          DocIdSetIterator disi = filt.getDocIdSet(reader).iterator();\n          int actual = 0;\n          while (disi.nextDoc() != DocIdSetIterator.NO_MORE_DOCS) {\n            actual++;\n          }\n          assertEquals(mes, expected, actual);\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eb23f9df4043a71b90fe4afb13c4cf3eb48f0b":["ff63a37d43d489d1c98a2f5eaed66fc6f27cdc0e"],"ff63a37d43d489d1c98a2f5eaed66fc6f27cdc0e":["a27a24aac4a53ec0af1f168a3b1ab4a06a042250"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a27a24aac4a53ec0af1f168a3b1ab4a06a042250":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eb23f9df4043a71b90fe4afb13c4cf3eb48f0b"]},"commit2Childs":{"90eb23f9df4043a71b90fe4afb13c4cf3eb48f0b":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ff63a37d43d489d1c98a2f5eaed66fc6f27cdc0e":["90eb23f9df4043a71b90fe4afb13c4cf3eb48f0b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a27a24aac4a53ec0af1f168a3b1ab4a06a042250"],"a27a24aac4a53ec0af1f168a3b1ab4a06a042250":["ff63a37d43d489d1c98a2f5eaed66fc6f27cdc0e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}