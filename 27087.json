{"path":"solr/core/src/java/org/apache/solr/cloud/SyncStrategy#requestSync(String,String,String,String,int).mjava","commits":[{"id":"a678060dc71c218831c2b3b18d0064573c6a968d","date":1455918109,"type":1,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/SyncStrategy#requestSync(String,String,String,String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/SyncStrategy#requestSync(String,String,String,String).mjava","sourceNew":"  private void requestSync(String baseUrl, String replica, String leaderUrl, String coreName, int nUpdates) {\n    ShardCoreRequest sreq = new ShardCoreRequest();\n    sreq.coreName = coreName;\n    sreq.baseUrl = baseUrl;\n    sreq.purpose = 1;\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = new ModifiableSolrParams();\n    sreq.params.set(\"qt\",\"/get\");\n    sreq.params.set(\"distrib\",false);\n    sreq.params.set(\"getVersions\",Integer.toString(nUpdates));\n    sreq.params.set(\"sync\",leaderUrl);\n    \n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","sourceOld":"  private void requestSync(String baseUrl, String replica, String leaderUrl, String coreName) {\n    ShardCoreRequest sreq = new ShardCoreRequest();\n    sreq.coreName = coreName;\n    sreq.baseUrl = baseUrl;\n    sreq.purpose = 1;\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = new ModifiableSolrParams();\n    sreq.params.set(\"qt\",\"/get\");\n    sreq.params.set(\"distrib\",false);\n    sreq.params.set(\"getVersions\",Integer.toString(100));\n    sreq.params.set(\"sync\",leaderUrl);\n    \n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"01624b85de12fb02335810bdf325124e59040772","date":1490254940,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/SyncStrategy#requestSync(String,String,String,String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/SyncStrategy#requestSync(String,String,String,String,int).mjava","sourceNew":"  private void requestSync(String baseUrl, String replica, String leaderUrl, String coreName, int nUpdates) {\n    ShardCoreRequest sreq = new ShardCoreRequest();\n    sreq.coreName = coreName;\n    sreq.baseUrl = baseUrl;\n    sreq.purpose = 1;\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = new ModifiableSolrParams();\n    sreq.params.set(\"qt\",\"/get\");\n    sreq.params.set(DISTRIB,false);\n    sreq.params.set(\"getVersions\",Integer.toString(nUpdates));\n    sreq.params.set(\"sync\",leaderUrl);\n    \n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","sourceOld":"  private void requestSync(String baseUrl, String replica, String leaderUrl, String coreName, int nUpdates) {\n    ShardCoreRequest sreq = new ShardCoreRequest();\n    sreq.coreName = coreName;\n    sreq.baseUrl = baseUrl;\n    sreq.purpose = 1;\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = new ModifiableSolrParams();\n    sreq.params.set(\"qt\",\"/get\");\n    sreq.params.set(\"distrib\",false);\n    sreq.params.set(\"getVersions\",Integer.toString(nUpdates));\n    sreq.params.set(\"sync\",leaderUrl);\n    \n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f4c5d3859373c3a74734e85efa122b17514e3e8","date":1490280013,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/SyncStrategy#requestSync(String,String,String,String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/SyncStrategy#requestSync(String,String,String,String,int).mjava","sourceNew":"  private void requestSync(String baseUrl, String replica, String leaderUrl, String coreName, int nUpdates) {\n    ShardCoreRequest sreq = new ShardCoreRequest();\n    sreq.coreName = coreName;\n    sreq.baseUrl = baseUrl;\n    sreq.purpose = 1;\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = new ModifiableSolrParams();\n    sreq.params.set(\"qt\",\"/get\");\n    sreq.params.set(DISTRIB,false);\n    sreq.params.set(\"getVersions\",Integer.toString(nUpdates));\n    sreq.params.set(\"sync\",leaderUrl);\n    \n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","sourceOld":"  private void requestSync(String baseUrl, String replica, String leaderUrl, String coreName, int nUpdates) {\n    ShardCoreRequest sreq = new ShardCoreRequest();\n    sreq.coreName = coreName;\n    sreq.baseUrl = baseUrl;\n    sreq.purpose = 1;\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = new ModifiableSolrParams();\n    sreq.params.set(\"qt\",\"/get\");\n    sreq.params.set(\"distrib\",false);\n    sreq.params.set(\"getVersions\",Integer.toString(nUpdates));\n    sreq.params.set(\"sync\",leaderUrl);\n    \n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7","date":1529486762,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/SyncStrategy#requestSync(String,String,String,String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/SyncStrategy#requestSync(String,String,String,String,int).mjava","sourceNew":"  private void requestSync(String baseUrl, String replica, String leaderUrl, String coreName, int nUpdates) {\n    //TODO should we use peerSyncWithLeader instead?\n    ShardCoreRequest sreq = new ShardCoreRequest();\n    sreq.coreName = coreName;\n    sreq.baseUrl = baseUrl;\n    sreq.purpose = 1;\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = new ModifiableSolrParams();\n    sreq.params.set(\"qt\",\"/get\");\n    sreq.params.set(DISTRIB,false);\n    sreq.params.set(\"getVersions\",Integer.toString(nUpdates));\n    sreq.params.set(\"sync\",leaderUrl);\n    \n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","sourceOld":"  private void requestSync(String baseUrl, String replica, String leaderUrl, String coreName, int nUpdates) {\n    ShardCoreRequest sreq = new ShardCoreRequest();\n    sreq.coreName = coreName;\n    sreq.baseUrl = baseUrl;\n    sreq.purpose = 1;\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = new ModifiableSolrParams();\n    sreq.params.set(\"qt\",\"/get\");\n    sreq.params.set(DISTRIB,false);\n    sreq.params.set(\"getVersions\",Integer.toString(nUpdates));\n    sreq.params.set(\"sync\",leaderUrl);\n    \n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/SyncStrategy#requestSync(String,String,String,String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/SyncStrategy#requestSync(String,String,String,String,int).mjava","sourceNew":"  private void requestSync(String baseUrl, String replica, String leaderUrl, String coreName, int nUpdates) {\n    //TODO should we use peerSyncWithLeader instead?\n    ShardCoreRequest sreq = new ShardCoreRequest();\n    sreq.coreName = coreName;\n    sreq.baseUrl = baseUrl;\n    sreq.purpose = 1;\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = new ModifiableSolrParams();\n    sreq.params.set(\"qt\",\"/get\");\n    sreq.params.set(DISTRIB,false);\n    sreq.params.set(\"getVersions\",Integer.toString(nUpdates));\n    sreq.params.set(\"sync\",leaderUrl);\n    \n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","sourceOld":"  private void requestSync(String baseUrl, String replica, String leaderUrl, String coreName, int nUpdates) {\n    ShardCoreRequest sreq = new ShardCoreRequest();\n    sreq.coreName = coreName;\n    sreq.baseUrl = baseUrl;\n    sreq.purpose = 1;\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = new ModifiableSolrParams();\n    sreq.params.set(\"qt\",\"/get\");\n    sreq.params.set(DISTRIB,false);\n    sreq.params.set(\"getVersions\",Integer.toString(nUpdates));\n    sreq.params.set(\"sync\",leaderUrl);\n    \n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/SyncStrategy#requestSync(String,String,String,String,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/SyncStrategy#requestSync(String,String,String,String,int).mjava","sourceNew":"  private void requestSync(String baseUrl, String replica, String leaderUrl, String coreName, int nUpdates) {\n    //TODO should we use peerSyncWithLeader instead?\n    ShardCoreRequest sreq = new ShardCoreRequest();\n    sreq.coreName = coreName;\n    sreq.baseUrl = baseUrl;\n    sreq.purpose = 1;\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = new ModifiableSolrParams();\n    sreq.params.set(\"qt\",\"/get\");\n    sreq.params.set(DISTRIB,false);\n    sreq.params.set(\"getVersions\",Integer.toString(nUpdates));\n    sreq.params.set(\"sync\",leaderUrl);\n    \n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","sourceOld":"  private void requestSync(String baseUrl, String replica, String leaderUrl, String coreName, int nUpdates) {\n    ShardCoreRequest sreq = new ShardCoreRequest();\n    sreq.coreName = coreName;\n    sreq.baseUrl = baseUrl;\n    sreq.purpose = 1;\n    sreq.shards = new String[]{replica};\n    sreq.actualShards = sreq.shards;\n    sreq.params = new ModifiableSolrParams();\n    sreq.params.set(\"qt\",\"/get\");\n    sreq.params.set(DISTRIB,false);\n    sreq.params.set(\"getVersions\",Integer.toString(nUpdates));\n    sreq.params.set(\"sync\",leaderUrl);\n    \n    shardHandler.submit(sreq, replica, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["01624b85de12fb02335810bdf325124e59040772","ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6f4c5d3859373c3a74734e85efa122b17514e3e8":["a678060dc71c218831c2b3b18d0064573c6a968d"],"01624b85de12fb02335810bdf325124e59040772":["a678060dc71c218831c2b3b18d0064573c6a968d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7"],"ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7":["01624b85de12fb02335810bdf325124e59040772"],"a678060dc71c218831c2b3b18d0064573c6a968d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["01624b85de12fb02335810bdf325124e59040772","ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a678060dc71c218831c2b3b18d0064573c6a968d"],"6f4c5d3859373c3a74734e85efa122b17514e3e8":[],"01624b85de12fb02335810bdf325124e59040772":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"ba0e7b86ac6002d5286b4589d87b3c80bbcabdc7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a678060dc71c218831c2b3b18d0064573c6a968d":["6f4c5d3859373c3a74734e85efa122b17514e3e8","01624b85de12fb02335810bdf325124e59040772"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","6f4c5d3859373c3a74734e85efa122b17514e3e8","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}