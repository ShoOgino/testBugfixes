{"path":"lucene/sandbox/src/test/org/apache/lucene/geo/TestPoint2D#testRandomTriangles().mjava","commits":[{"id":"6afbfd2ecc6d7825f89bbcf75e25046650f937a6","date":1579085873,"type":0,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/geo/TestPoint2D#testRandomTriangles().mjava","pathOld":"/dev/null","sourceNew":"  public void testRandomTriangles() {\n    Component2D point2D = Point2D.create(new double[] {GeoTestUtil.nextLatitude(), GeoTestUtil.nextLongitude()});\n\n    for (int i =0; i < 100; i++) {\n      double ax = GeoTestUtil.nextLongitude();\n      double ay = GeoTestUtil.nextLatitude();\n      double bx = GeoTestUtil.nextLongitude();\n      double by = GeoTestUtil.nextLatitude();\n      double cx = GeoTestUtil.nextLongitude();\n      double cy = GeoTestUtil.nextLatitude();\n\n      double tMinX = StrictMath.min(StrictMath.min(ax, bx), cx);\n      double tMaxX = StrictMath.max(StrictMath.max(ax, bx), cx);\n      double tMinY = StrictMath.min(StrictMath.min(ay, by), cy);\n      double tMaxY = StrictMath.max(StrictMath.max(ay, by), cy);\n\n      Relation r = point2D.relate(tMinX, tMaxX, tMinY, tMaxY);\n      if (r == Relation.CELL_OUTSIDE_QUERY) {\n        assertEquals(Relation.CELL_OUTSIDE_QUERY, point2D.relateTriangle(ax, ay, bx, by, cx, cy));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1fb9d9c81bf2e6709854f7e362e5e3a3a3e75f61","date":1579089602,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/geo/TestPoint2D#testRandomTriangles().mjava","pathOld":"/dev/null","sourceNew":"  public void testRandomTriangles() {\n    Component2D point2D = Point2D.create(new double[] {GeoTestUtil.nextLatitude(), GeoTestUtil.nextLongitude()});\n\n    for (int i =0; i < 100; i++) {\n      double ax = GeoTestUtil.nextLongitude();\n      double ay = GeoTestUtil.nextLatitude();\n      double bx = GeoTestUtil.nextLongitude();\n      double by = GeoTestUtil.nextLatitude();\n      double cx = GeoTestUtil.nextLongitude();\n      double cy = GeoTestUtil.nextLatitude();\n\n      double tMinX = StrictMath.min(StrictMath.min(ax, bx), cx);\n      double tMaxX = StrictMath.max(StrictMath.max(ax, bx), cx);\n      double tMinY = StrictMath.min(StrictMath.min(ay, by), cy);\n      double tMaxY = StrictMath.max(StrictMath.max(ay, by), cy);\n\n      Relation r = point2D.relate(tMinX, tMaxX, tMinY, tMaxY);\n      if (r == Relation.CELL_OUTSIDE_QUERY) {\n        assertEquals(Relation.CELL_OUTSIDE_QUERY, point2D.relateTriangle(ax, ay, bx, by, cx, cy));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPoint2D#testRandomTriangles().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/geo/TestPoint2D#testRandomTriangles().mjava","sourceNew":"  public void testRandomTriangles() {\n    Component2D point2D = Point2D.create(new double[] {GeoTestUtil.nextLatitude(), GeoTestUtil.nextLongitude()});\n\n    for (int i =0; i < 100; i++) {\n      double ax = GeoTestUtil.nextLongitude();\n      double ay = GeoTestUtil.nextLatitude();\n      double bx = GeoTestUtil.nextLongitude();\n      double by = GeoTestUtil.nextLatitude();\n      double cx = GeoTestUtil.nextLongitude();\n      double cy = GeoTestUtil.nextLatitude();\n\n      double tMinX = StrictMath.min(StrictMath.min(ax, bx), cx);\n      double tMaxX = StrictMath.max(StrictMath.max(ax, bx), cx);\n      double tMinY = StrictMath.min(StrictMath.min(ay, by), cy);\n      double tMaxY = StrictMath.max(StrictMath.max(ay, by), cy);\n\n      Relation r = point2D.relate(tMinX, tMaxX, tMinY, tMaxY);\n      if (r == Relation.CELL_OUTSIDE_QUERY) {\n        assertEquals(Relation.CELL_OUTSIDE_QUERY, point2D.relateTriangle(ax, ay, bx, by, cx, cy));\n      }\n    }\n  }\n\n","sourceOld":"  public void testRandomTriangles() {\n    Component2D point2D = Point2D.create(new double[] {GeoTestUtil.nextLatitude(), GeoTestUtil.nextLongitude()});\n\n    for (int i =0; i < 100; i++) {\n      double ax = GeoTestUtil.nextLongitude();\n      double ay = GeoTestUtil.nextLatitude();\n      double bx = GeoTestUtil.nextLongitude();\n      double by = GeoTestUtil.nextLatitude();\n      double cx = GeoTestUtil.nextLongitude();\n      double cy = GeoTestUtil.nextLatitude();\n\n      double tMinX = StrictMath.min(StrictMath.min(ax, bx), cx);\n      double tMaxX = StrictMath.max(StrictMath.max(ax, bx), cx);\n      double tMinY = StrictMath.min(StrictMath.min(ay, by), cy);\n      double tMaxY = StrictMath.max(StrictMath.max(ay, by), cy);\n\n      Relation r = point2D.relate(tMinX, tMaxX, tMinY, tMaxY);\n      if (r == Relation.CELL_OUTSIDE_QUERY) {\n        assertEquals(Relation.CELL_OUTSIDE_QUERY, point2D.relateTriangle(ax, ay, bx, by, cx, cy));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6afbfd2ecc6d7825f89bbcf75e25046650f937a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1fb9d9c81bf2e6709854f7e362e5e3a3a3e75f61":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6afbfd2ecc6d7825f89bbcf75e25046650f937a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["6afbfd2ecc6d7825f89bbcf75e25046650f937a6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c1e6d465800c73af60624bf9d4459a19f7940c"]},"commit2Childs":{"6afbfd2ecc6d7825f89bbcf75e25046650f937a6":["1fb9d9c81bf2e6709854f7e362e5e3a3a3e75f61","09c1e6d465800c73af60624bf9d4459a19f7940c"],"1fb9d9c81bf2e6709854f7e362e5e3a3a3e75f61":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6afbfd2ecc6d7825f89bbcf75e25046650f937a6","1fb9d9c81bf2e6709854f7e362e5e3a3a3e75f61"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1fb9d9c81bf2e6709854f7e362e5e3a3a3e75f61","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}