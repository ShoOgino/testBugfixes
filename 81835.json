{"path":"solr/contrib/langid/src/test/org/apache/solr/update/processor/LanguageIdentifierUpdateProcessorFactoryTestCase#assertLang(String,String...).mjava","commits":[{"id":"a799d5c6eb6dd4c46e099b34640cc369f6db9155","date":1318737330,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/langid/src/test/org/apache/solr/update/processor/LanguageIdentifierUpdateProcessorFactoryTestCase#assertLang(String,String...).mjava","pathOld":"solr/contrib/langid/src/test/org/apache/solr/update/processor/LanguageIdentifierUpdateProcessorFactoryTest#assertLang(String,String...).mjava","sourceNew":"  protected void assertLang(String langCode, String... fieldsAndValues) throws Exception {\n    if(liProcessor == null)\n      throw new Exception(\"Processor must be initialized before calling assertLang()\");\n    SolrInputDocument doc = sid(fieldsAndValues);\n    assertEquals(langCode, liProcessor.process(doc).getFieldValue(liProcessor.langField));\n  }\n\n","sourceOld":"  private void assertLang(String langCode, String... fieldsAndValues) throws Exception {\n    if(liProcessor == null)\n      throw new Exception(\"Processor must be initialized before calling assertLang()\");\n    SolrInputDocument doc = sid(fieldsAndValues);\n    assertEquals(langCode, liProcessor.process(doc).getFieldValue(liProcessor.langField));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4da5f9e2a1f2ac76feac0c0796bdce4881cb687","date":1546536444,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/contrib/langid/src/test/org/apache/solr/update/processor/LanguageIdentifierUpdateProcessorFactoryTestCase#assertLang(String,String...).mjava","pathOld":"solr/contrib/langid/src/test/org/apache/solr/update/processor/LanguageIdentifierUpdateProcessorFactoryTestCase#assertLang(String,String...).mjava","sourceNew":"  protected void assertLang(String langCode, String... fieldsAndValues) throws Exception {\n    if(liProcessor == null)\n      throw new Exception(\"Processor must be initialized before calling assertLang()\");\n    SolrInputDocument doc = sid(fieldsAndValues);\n    assertEquals(langCode, process(doc).getFieldValue(liProcessor.langField));\n  }\n\n","sourceOld":"  protected void assertLang(String langCode, String... fieldsAndValues) throws Exception {\n    if(liProcessor == null)\n      throw new Exception(\"Processor must be initialized before calling assertLang()\");\n    SolrInputDocument doc = sid(fieldsAndValues);\n    assertEquals(langCode, liProcessor.process(doc).getFieldValue(liProcessor.langField));\n  }\n\n","bugFix":["0f45f65b8ca4312a6880cc80396c35205dc21543"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a4da5f9e2a1f2ac76feac0c0796bdce4881cb687":["a799d5c6eb6dd4c46e099b34640cc369f6db9155"],"a799d5c6eb6dd4c46e099b34640cc369f6db9155":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a4da5f9e2a1f2ac76feac0c0796bdce4881cb687"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a799d5c6eb6dd4c46e099b34640cc369f6db9155"],"a4da5f9e2a1f2ac76feac0c0796bdce4881cb687":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a799d5c6eb6dd4c46e099b34640cc369f6db9155":["a4da5f9e2a1f2ac76feac0c0796bdce4881cb687"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}