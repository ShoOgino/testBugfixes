{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TextLogitStream#averageWeights(List[List[Double]]).mjava","commits":[{"id":"f6b1e64caa933f6fb3c0494afd6ca2597f55cc91","date":1470238980,"type":0,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TextLogitStream#averageWeights(List[List[Double]]).mjava","pathOld":"/dev/null","sourceNew":"  private List<Double> averageWeights(List<List<Double>> allWeights) {\n    double[] working = new double[allWeights.get(0).size()];\n    for(List<Double> shardWeights: allWeights) {\n      for(int i=0; i<working.length; i++) {\n        working[i] += shardWeights.get(i);\n      }\n    }\n\n    for(int i=0; i<working.length; i++) {\n      working[i] = working[i] / allWeights.size();\n    }\n\n    List<Double> ave = new ArrayList();\n    for(double d : working) {\n      ave.add(d);\n    }\n\n    return ave;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TextLogitStream#averageWeights(List[List[Double]]).mjava","pathOld":"/dev/null","sourceNew":"  private List<Double> averageWeights(List<List<Double>> allWeights) {\n    double[] working = new double[allWeights.get(0).size()];\n    for(List<Double> shardWeights: allWeights) {\n      for(int i=0; i<working.length; i++) {\n        working[i] += shardWeights.get(i);\n      }\n    }\n\n    for(int i=0; i<working.length; i++) {\n      working[i] = working[i] / allWeights.size();\n    }\n\n    List<Double> ave = new ArrayList();\n    for(double d : working) {\n      ave.add(d);\n    }\n\n    return ave;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TextLogitStream#averageWeights(List[List[Double]]).mjava","pathOld":"/dev/null","sourceNew":"  private List<Double> averageWeights(List<List<Double>> allWeights) {\n    double[] working = new double[allWeights.get(0).size()];\n    for(List<Double> shardWeights: allWeights) {\n      for(int i=0; i<working.length; i++) {\n        working[i] += shardWeights.get(i);\n      }\n    }\n\n    for(int i=0; i<working.length; i++) {\n      working[i] = working[i] / allWeights.size();\n    }\n\n    List<Double> ave = new ArrayList();\n    for(double d : working) {\n      ave.add(d);\n    }\n\n    return ave;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b7d28aa15134f77b3a8f4c2724bdc7cb402ab75","date":1591744896,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TextLogitStream#averageWeights(List[List[Double]]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TextLogitStream#averageWeights(List[List[Double]]).mjava","sourceNew":"  private List<Double> averageWeights(List<List<Double>> allWeights) {\n    double[] working = new double[allWeights.get(0).size()];\n    for(List<Double> shardWeights: allWeights) {\n      for(int i=0; i<working.length; i++) {\n        working[i] += shardWeights.get(i);\n      }\n    }\n\n    for(int i=0; i<working.length; i++) {\n      working[i] = working[i] / allWeights.size();\n    }\n\n    List<Double> ave = new ArrayList<>();\n    for(double d : working) {\n      ave.add(d);\n    }\n\n    return ave;\n  }\n\n","sourceOld":"  private List<Double> averageWeights(List<List<Double>> allWeights) {\n    double[] working = new double[allWeights.get(0).size()];\n    for(List<Double> shardWeights: allWeights) {\n      for(int i=0; i<working.length; i++) {\n        working[i] += shardWeights.get(i);\n      }\n    }\n\n    for(int i=0; i<working.length; i++) {\n      working[i] = working[i] / allWeights.size();\n    }\n\n    List<Double> ave = new ArrayList();\n    for(double d : working) {\n      ave.add(d);\n    }\n\n    return ave;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f6b1e64caa933f6fb3c0494afd6ca2597f55cc91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2b7d28aa15134f77b3a8f4c2724bdc7cb402ab75":["f6b1e64caa933f6fb3c0494afd6ca2597f55cc91"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f6b1e64caa933f6fb3c0494afd6ca2597f55cc91"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f6b1e64caa933f6fb3c0494afd6ca2597f55cc91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2b7d28aa15134f77b3a8f4c2724bdc7cb402ab75"]},"commit2Childs":{"f6b1e64caa933f6fb3c0494afd6ca2597f55cc91":["2b7d28aa15134f77b3a8f4c2724bdc7cb402ab75","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f6b1e64caa933f6fb3c0494afd6ca2597f55cc91","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"2b7d28aa15134f77b3a8f4c2724bdc7cb402ab75":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}