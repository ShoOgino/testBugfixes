{"path":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionFunctionValues#toString(int).mjava","commits":[{"id":"f18d4e1cdc7330101ca433af5e8564dfd894f2bf","date":1379041877,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionFunctionValues#toString(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String toString(int document) {\n    if (currentDocument != document) {\n      currentDocument = document;\n      currentValue = expression.evaluate(document, functionValues);\n    }\n    \n    return \"ExpressionFunctionValues(\" + document + \": \" + currentValue + \")\";\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c7b8ea8201d2646377f6895771dc7dc83ef57f4","date":1379216535,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionFunctionValues#toString(int).mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionFunctionValues#toString(int).mjava","sourceNew":"  @Override\n  public String toString(int document) {    \n    return \"ExpressionFunctionValues(\" + document + \": \" + objectVal(document) + \")\";\n  }\n\n","sourceOld":"  @Override\n  public String toString(int document) {\n    if (currentDocument != document) {\n      currentDocument = document;\n      currentValue = expression.evaluate(document, functionValues);\n    }\n    \n    return \"ExpressionFunctionValues(\" + document + \": \" + currentValue + \")\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f0e44787cffbb978aa2182761e3f9b184545a1e","date":1379265303,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionFunctionValues#toString(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String toString(int document) {    \n    return \"ExpressionFunctionValues(\" + document + \": \" + objectVal(document) + \")\";\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a397491f6601f7c45bc425f45e95c41c3a6d1ca3","date":1380651240,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/ExpressionFunctionValues#toString(int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public String toString(int document) {    \n    return \"ExpressionFunctionValues(\" + document + \": \" + objectVal(document) + \")\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f18d4e1cdc7330101ca433af5e8564dfd894f2bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6c7b8ea8201d2646377f6895771dc7dc83ef57f4":["f18d4e1cdc7330101ca433af5e8564dfd894f2bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a397491f6601f7c45bc425f45e95c41c3a6d1ca3":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a397491f6601f7c45bc425f45e95c41c3a6d1ca3"],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6c7b8ea8201d2646377f6895771dc7dc83ef57f4"]},"commit2Childs":{"f18d4e1cdc7330101ca433af5e8564dfd894f2bf":["6c7b8ea8201d2646377f6895771dc7dc83ef57f4"],"6c7b8ea8201d2646377f6895771dc7dc83ef57f4":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f18d4e1cdc7330101ca433af5e8564dfd894f2bf","5f0e44787cffbb978aa2182761e3f9b184545a1e"],"a397491f6601f7c45bc425f45e95c41c3a6d1ca3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["a397491f6601f7c45bc425f45e95c41c3a6d1ca3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}