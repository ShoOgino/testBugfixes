{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/tr/TurkishLowerCaseFilter#isBeforeDot(char[],int,int).mjava","commits":[{"id":"0f60864b34f24eaf880c803931c76afc7cca67b2","date":1260017165,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/tr/TurkishLowerCaseFilter#isBeforeDot(char[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * lookahead for a combining dot above.\n   * other NSMs may be in between.\n   */\n  private boolean isBeforeDot(char s[], int pos, int len) {\n    for (int i = pos; i < len;) {\n      final int ch = Character.codePointAt(s, i);\n      if (Character.getType(ch) != Character.NON_SPACING_MARK)\n        return false;\n      if (ch == COMBINING_DOT_ABOVE)\n        return true;\n      i += Character.charCount(ch);\n    }\n    \n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/tr/TurkishLowerCaseFilter#isBeforeDot(char[],int,int).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/tr/TurkishLowerCaseFilter#isBeforeDot(char[],int,int).mjava","sourceNew":"  /**\n   * lookahead for a combining dot above.\n   * other NSMs may be in between.\n   */\n  private boolean isBeforeDot(char s[], int pos, int len) {\n    for (int i = pos; i < len;) {\n      final int ch = Character.codePointAt(s, i);\n      if (Character.getType(ch) != Character.NON_SPACING_MARK)\n        return false;\n      if (ch == COMBINING_DOT_ABOVE)\n        return true;\n      i += Character.charCount(ch);\n    }\n    \n    return false;\n  }\n\n","sourceOld":"  /**\n   * lookahead for a combining dot above.\n   * other NSMs may be in between.\n   */\n  private boolean isBeforeDot(char s[], int pos, int len) {\n    for (int i = pos; i < len;) {\n      final int ch = Character.codePointAt(s, i);\n      if (Character.getType(ch) != Character.NON_SPACING_MARK)\n        return false;\n      if (ch == COMBINING_DOT_ABOVE)\n        return true;\n      i += Character.charCount(ch);\n    }\n    \n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f60864b34f24eaf880c803931c76afc7cca67b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f60864b34f24eaf880c803931c76afc7cca67b2"]},"commit2Childs":{"0f60864b34f24eaf880c803931c76afc7cca67b2":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f60864b34f24eaf880c803931c76afc7cca67b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}