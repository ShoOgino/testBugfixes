{"path":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#testCustomSpanQueryHighlighting().mjava","commits":[{"id":"cc650d323b3ed43d314ef27d4a586c37b4773f7e","date":1478639612,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#testCustomSpanQueryHighlighting().mjava","pathOld":"/dev/null","sourceNew":"  public void testCustomSpanQueryHighlighting() throws Exception {\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, indexAnalyzer);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"alpha bravo charlie delta echo foxtrot golf hotel india juliet\", fieldType));\n    doc.add(newTextField(\"id\", \"id\", Field.Store.YES));\n\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n\n    IndexSearcher searcher = newSearcher(ir);\n    UnifiedHighlighter highlighter = new UnifiedHighlighter(searcher, indexAnalyzer) {\n      @Override\n      protected List<Query> preMultiTermQueryRewrite(Query query) {\n        if (query instanceof MyWrapperSpanQuery) {\n          return Collections.singletonList(((MyWrapperSpanQuery) query).originalQuery);\n        }\n        return null;\n      }\n    };\n\n    int docId = searcher.search(new TermQuery(new Term(\"id\", \"id\")), 1).scoreDocs[0].doc;\n\n    WildcardQuery wildcardQuery = new WildcardQuery(new Term(\"body\", \"foxtr*\"));\n    SpanMultiTermQueryWrapper wildcardQueryWrapper = new SpanMultiTermQueryWrapper<>(wildcardQuery);\n\n    SpanQuery wrappedQuery = new MyWrapperSpanQuery(wildcardQueryWrapper);\n\n    BooleanQuery query = new BooleanQuery.Builder()\n        .add(wrappedQuery, BooleanClause.Occur.SHOULD)\n        .build();\n\n    int[] docIds = new int[]{docId};\n\n    String snippets[] = highlighter.highlightFields(new String[]{\"body\"}, query, docIds, new int[]{2}).get(\"body\");\n    assertEquals(1, snippets.length);\n    assertEquals(\"alpha bravo charlie delta echo <b>foxtrot</b> golf hotel india juliet\", snippets[0]);\n    ir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#testCustomSpanQueryHighlighting().mjava","pathOld":"/dev/null","sourceNew":"  public void testCustomSpanQueryHighlighting() throws Exception {\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, indexAnalyzer);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"alpha bravo charlie delta echo foxtrot golf hotel india juliet\", fieldType));\n    doc.add(newTextField(\"id\", \"id\", Field.Store.YES));\n\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n\n    IndexSearcher searcher = newSearcher(ir);\n    UnifiedHighlighter highlighter = new UnifiedHighlighter(searcher, indexAnalyzer) {\n      @Override\n      protected List<Query> preMultiTermQueryRewrite(Query query) {\n        if (query instanceof MyWrapperSpanQuery) {\n          return Collections.singletonList(((MyWrapperSpanQuery) query).originalQuery);\n        }\n        return null;\n      }\n    };\n\n    int docId = searcher.search(new TermQuery(new Term(\"id\", \"id\")), 1).scoreDocs[0].doc;\n\n    WildcardQuery wildcardQuery = new WildcardQuery(new Term(\"body\", \"foxtr*\"));\n    SpanMultiTermQueryWrapper wildcardQueryWrapper = new SpanMultiTermQueryWrapper<>(wildcardQuery);\n\n    SpanQuery wrappedQuery = new MyWrapperSpanQuery(wildcardQueryWrapper);\n\n    BooleanQuery query = new BooleanQuery.Builder()\n        .add(wrappedQuery, BooleanClause.Occur.SHOULD)\n        .build();\n\n    int[] docIds = new int[]{docId};\n\n    String snippets[] = highlighter.highlightFields(new String[]{\"body\"}, query, docIds, new int[]{2}).get(\"body\");\n    assertEquals(1, snippets.length);\n    assertEquals(\"alpha bravo charlie delta echo <b>foxtrot</b> golf hotel india juliet\", snippets[0]);\n    ir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7","date":1552575873,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#testCustomSpanQueryHighlighting().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#testCustomSpanQueryHighlighting().mjava","sourceNew":"  public void testCustomSpanQueryHighlighting() throws Exception {\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, indexAnalyzer);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"alpha bravo charlie delta echo foxtrot golf hotel india juliet\", fieldType));\n    doc.add(newTextField(\"id\", \"id\", Field.Store.YES));\n\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n\n    IndexSearcher searcher = newSearcher(ir);\n    UnifiedHighlighter highlighter = new UnifiedHighlighter(searcher, indexAnalyzer);\n\n    int docId = searcher.search(new TermQuery(new Term(\"id\", \"id\")), 1).scoreDocs[0].doc;\n\n    WildcardQuery wildcardQuery = new WildcardQuery(new Term(\"body\", \"foxtr*\"));\n    SpanMultiTermQueryWrapper wildcardQueryWrapper = new SpanMultiTermQueryWrapper<>(wildcardQuery);\n\n    SpanQuery wrappedQuery = new MyWrapperSpanQuery(wildcardQueryWrapper);\n\n    BooleanQuery query = new BooleanQuery.Builder()\n        .add(wrappedQuery, BooleanClause.Occur.SHOULD)\n        .build();\n\n    int[] docIds = new int[]{docId};\n\n    String snippets[] = highlighter.highlightFields(new String[]{\"body\"}, query, docIds, new int[]{2}).get(\"body\");\n    assertEquals(1, snippets.length);\n    assertEquals(\"alpha bravo charlie delta echo <b>foxtrot</b> golf hotel india juliet\", snippets[0]);\n    ir.close();\n  }\n\n","sourceOld":"  public void testCustomSpanQueryHighlighting() throws Exception {\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, indexAnalyzer);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"alpha bravo charlie delta echo foxtrot golf hotel india juliet\", fieldType));\n    doc.add(newTextField(\"id\", \"id\", Field.Store.YES));\n\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n\n    IndexSearcher searcher = newSearcher(ir);\n    UnifiedHighlighter highlighter = new UnifiedHighlighter(searcher, indexAnalyzer) {\n      @Override\n      protected List<Query> preMultiTermQueryRewrite(Query query) {\n        if (query instanceof MyWrapperSpanQuery) {\n          return Collections.singletonList(((MyWrapperSpanQuery) query).originalQuery);\n        }\n        return null;\n      }\n    };\n\n    int docId = searcher.search(new TermQuery(new Term(\"id\", \"id\")), 1).scoreDocs[0].doc;\n\n    WildcardQuery wildcardQuery = new WildcardQuery(new Term(\"body\", \"foxtr*\"));\n    SpanMultiTermQueryWrapper wildcardQueryWrapper = new SpanMultiTermQueryWrapper<>(wildcardQuery);\n\n    SpanQuery wrappedQuery = new MyWrapperSpanQuery(wildcardQueryWrapper);\n\n    BooleanQuery query = new BooleanQuery.Builder()\n        .add(wrappedQuery, BooleanClause.Occur.SHOULD)\n        .build();\n\n    int[] docIds = new int[]{docId};\n\n    String snippets[] = highlighter.highlightFields(new String[]{\"body\"}, query, docIds, new int[]{2}).get(\"body\");\n    assertEquals(1, snippets.length);\n    assertEquals(\"alpha bravo charlie delta echo <b>foxtrot</b> golf hotel india juliet\", snippets[0]);\n    ir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30fe0003e68f773002826a322b67378b5bf2e4d4","date":1580488855,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#testCustomSpanQueryHighlighting().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterMTQ#testCustomSpanQueryHighlighting().mjava","sourceNew":"  public void testCustomSpanQueryHighlighting() throws Exception {\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, indexAnalyzer);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"alpha bravo charlie delta echo foxtrot golf hotel india juliet\", fieldType));\n    doc.add(newTextField(\"id\", \"id\", Field.Store.YES));\n\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n\n    IndexSearcher searcher = newSearcher(ir);\n    UnifiedHighlighter highlighter = new UnifiedHighlighter(searcher, indexAnalyzer);\n\n    int docId = searcher.search(new TermQuery(new Term(\"id\", \"id\")), 1).scoreDocs[0].doc;\n\n    WildcardQuery wildcardQuery = new WildcardQuery(new Term(\"body\", \"foxtr*\"));\n    SpanMultiTermQueryWrapper<WildcardQuery> wildcardQueryWrapper = new SpanMultiTermQueryWrapper<>(wildcardQuery);\n\n    SpanQuery wrappedQuery = new MyWrapperSpanQuery(wildcardQueryWrapper);\n\n    BooleanQuery query = new BooleanQuery.Builder()\n        .add(wrappedQuery, BooleanClause.Occur.SHOULD)\n        .build();\n\n    int[] docIds = new int[]{docId};\n\n    String snippets[] = highlighter.highlightFields(new String[]{\"body\"}, query, docIds, new int[]{2}).get(\"body\");\n    assertEquals(1, snippets.length);\n    assertEquals(\"alpha bravo charlie delta echo <b>foxtrot</b> golf hotel india juliet\", snippets[0]);\n    ir.close();\n  }\n\n","sourceOld":"  public void testCustomSpanQueryHighlighting() throws Exception {\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, indexAnalyzer);\n    Document doc = new Document();\n    doc.add(new Field(\"body\", \"alpha bravo charlie delta echo foxtrot golf hotel india juliet\", fieldType));\n    doc.add(newTextField(\"id\", \"id\", Field.Store.YES));\n\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n\n    IndexSearcher searcher = newSearcher(ir);\n    UnifiedHighlighter highlighter = new UnifiedHighlighter(searcher, indexAnalyzer);\n\n    int docId = searcher.search(new TermQuery(new Term(\"id\", \"id\")), 1).scoreDocs[0].doc;\n\n    WildcardQuery wildcardQuery = new WildcardQuery(new Term(\"body\", \"foxtr*\"));\n    SpanMultiTermQueryWrapper wildcardQueryWrapper = new SpanMultiTermQueryWrapper<>(wildcardQuery);\n\n    SpanQuery wrappedQuery = new MyWrapperSpanQuery(wildcardQueryWrapper);\n\n    BooleanQuery query = new BooleanQuery.Builder()\n        .add(wrappedQuery, BooleanClause.Occur.SHOULD)\n        .build();\n\n    int[] docIds = new int[]{docId};\n\n    String snippets[] = highlighter.highlightFields(new String[]{\"body\"}, query, docIds, new int[]{2}).get(\"body\");\n    assertEquals(1, snippets.length);\n    assertEquals(\"alpha bravo charlie delta echo <b>foxtrot</b> golf hotel india juliet\", snippets[0]);\n    ir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"30fe0003e68f773002826a322b67378b5bf2e4d4":["5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7"],"cc650d323b3ed43d314ef27d4a586c37b4773f7e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cc650d323b3ed43d314ef27d4a586c37b4773f7e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["30fe0003e68f773002826a322b67378b5bf2e4d4"],"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7":["cc650d323b3ed43d314ef27d4a586c37b4773f7e"]},"commit2Childs":{"30fe0003e68f773002826a322b67378b5bf2e4d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cc650d323b3ed43d314ef27d4a586c37b4773f7e":["199dfa410f1fdbfd3294106b04096cce5ed34b21","5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cc650d323b3ed43d314ef27d4a586c37b4773f7e","199dfa410f1fdbfd3294106b04096cce5ed34b21"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7":["30fe0003e68f773002826a322b67378b5bf2e4d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}