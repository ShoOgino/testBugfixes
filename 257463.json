{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#process(SolrClient,String).mjava","commits":[{"id":"7ca08c071cb75a8796c36ae6a1c90d7473c2a6df","date":1425554964,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#process(SolrClient,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Send this request to a {@link SolrClient} and return the response\n   *\n   * @param client the SolrClient to communicate with\n   * @param collection the collection to execute the request against\n   *\n   * @return the response\n   *\n   * @throws SolrServerException if there is an error on the Solr server\n   * @throws IOException if there is a communication error\n   */\n  public final T process(SolrClient client, String collection) throws SolrServerException, IOException {\n    long startTime = TimeUnit.MILLISECONDS.convert(System.nanoTime(), TimeUnit.NANOSECONDS);\n    T res = createResponse(client);\n    res.setResponse(client.request(this, collection));\n    long endTime = TimeUnit.MILLISECONDS.convert(System.nanoTime(), TimeUnit.NANOSECONDS);\n    res.setElapsedTime(endTime - startTime);\n    return res;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#process(SolrClient,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Send this request to a {@link SolrClient} and return the response\n   *\n   * @param client the SolrClient to communicate with\n   * @param collection the collection to execute the request against\n   *\n   * @return the response\n   *\n   * @throws SolrServerException if there is an error on the Solr server\n   * @throws IOException if there is a communication error\n   */\n  public final T process(SolrClient client, String collection) throws SolrServerException, IOException {\n    long startTime = TimeUnit.MILLISECONDS.convert(System.nanoTime(), TimeUnit.NANOSECONDS);\n    T res = createResponse(client);\n    res.setResponse(client.request(this, collection));\n    long endTime = TimeUnit.MILLISECONDS.convert(System.nanoTime(), TimeUnit.NANOSECONDS);\n    res.setElapsedTime(endTime - startTime);\n    return res;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8cc68d34074b3c50f8f12de4ff9a9b0d6f96a60f","date":1515012452,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#process(SolrClient,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#process(SolrClient,String).mjava","sourceNew":"  /**\n   * Send this request to a {@link SolrClient} and return the response\n   *\n   * @param client the SolrClient to communicate with\n   * @param collection the collection to execute the request against\n   *\n   * @return the response\n   *\n   * @throws SolrServerException if there is an error on the Solr server\n   * @throws IOException if there is a communication error\n   */\n  public final T process(SolrClient client, String collection) throws SolrServerException, IOException {\n    long startNanos = System.nanoTime();\n    T res = createResponse(client);\n    res.setResponse(client.request(this, collection));\n    long endNanos = System.nanoTime();\n    res.setElapsedTime(TimeUnit.NANOSECONDS.toMillis(endNanos - startNanos));\n    return res;\n  }\n\n","sourceOld":"  /**\n   * Send this request to a {@link SolrClient} and return the response\n   *\n   * @param client the SolrClient to communicate with\n   * @param collection the collection to execute the request against\n   *\n   * @return the response\n   *\n   * @throws SolrServerException if there is an error on the Solr server\n   * @throws IOException if there is a communication error\n   */\n  public final T process(SolrClient client, String collection) throws SolrServerException, IOException {\n    long startTime = TimeUnit.MILLISECONDS.convert(System.nanoTime(), TimeUnit.NANOSECONDS);\n    T res = createResponse(client);\n    res.setResponse(client.request(this, collection));\n    long endTime = TimeUnit.MILLISECONDS.convert(System.nanoTime(), TimeUnit.NANOSECONDS);\n    res.setElapsedTime(endTime - startTime);\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#process(SolrClient,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#process(SolrClient,String).mjava","sourceNew":"  /**\n   * Send this request to a {@link SolrClient} and return the response\n   *\n   * @param client the SolrClient to communicate with\n   * @param collection the collection to execute the request against\n   *\n   * @return the response\n   *\n   * @throws SolrServerException if there is an error on the Solr server\n   * @throws IOException if there is a communication error\n   */\n  public final T process(SolrClient client, String collection) throws SolrServerException, IOException {\n    long startNanos = System.nanoTime();\n    T res = createResponse(client);\n    res.setResponse(client.request(this, collection));\n    long endNanos = System.nanoTime();\n    res.setElapsedTime(TimeUnit.NANOSECONDS.toMillis(endNanos - startNanos));\n    return res;\n  }\n\n","sourceOld":"  /**\n   * Send this request to a {@link SolrClient} and return the response\n   *\n   * @param client the SolrClient to communicate with\n   * @param collection the collection to execute the request against\n   *\n   * @return the response\n   *\n   * @throws SolrServerException if there is an error on the Solr server\n   * @throws IOException if there is a communication error\n   */\n  public final T process(SolrClient client, String collection) throws SolrServerException, IOException {\n    long startTime = TimeUnit.MILLISECONDS.convert(System.nanoTime(), TimeUnit.NANOSECONDS);\n    T res = createResponse(client);\n    res.setResponse(client.request(this, collection));\n    long endTime = TimeUnit.MILLISECONDS.convert(System.nanoTime(), TimeUnit.NANOSECONDS);\n    res.setElapsedTime(endTime - startTime);\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["7ca08c071cb75a8796c36ae6a1c90d7473c2a6df","8cc68d34074b3c50f8f12de4ff9a9b0d6f96a60f"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7ca08c071cb75a8796c36ae6a1c90d7473c2a6df"],"8cc68d34074b3c50f8f12de4ff9a9b0d6f96a60f":["7ca08c071cb75a8796c36ae6a1c90d7473c2a6df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"],"7ca08c071cb75a8796c36ae6a1c90d7473c2a6df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"8cc68d34074b3c50f8f12de4ff9a9b0d6f96a60f":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","7ca08c071cb75a8796c36ae6a1c90d7473c2a6df"],"7ca08c071cb75a8796c36ae6a1c90d7473c2a6df":["b94236357aaa22b76c10629851fe4e376e0cea82","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","8cc68d34074b3c50f8f12de4ff9a9b0d6f96a60f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}