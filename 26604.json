{"path":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Iterable[#-extends-Closeable]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Iterable[#-extends-Closeable]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/IOUtils#close(Iterable[#-extends-Closeable]).mjava","sourceNew":"  /**\n   * @see #close(Closeable...)\n   */\n  public static void close(Iterable<? extends Closeable> objects) throws IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (th != null) {\n      if (th instanceof IOException) throw (IOException) th;\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      throw new RuntimeException(th);\n    }\n  }\n\n","sourceOld":"  /**\n   * @see #close(Closeable...)\n   */\n  public static void close(Iterable<? extends Closeable> objects) throws IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (th != null) {\n      if (th instanceof IOException) throw (IOException) th;\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      throw new RuntimeException(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3b4a63b6b0155323dde6b827e0dc22a43580753","date":1346168671,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Iterable[#-extends-Closeable]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Iterable[#-extends-Closeable]).mjava","sourceNew":"  /**\n   * Closes all given <tt>Closeable</tt>s.\n   * @see #close(Closeable...)\n   */\n  public static void close(Iterable<? extends Closeable> objects) throws IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (th != null) {\n      if (th instanceof IOException) throw (IOException) th;\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      throw new RuntimeException(th);\n    }\n  }\n\n","sourceOld":"  /**\n   * @see #close(Closeable...)\n   */\n  public static void close(Iterable<? extends Closeable> objects) throws IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (th != null) {\n      if (th instanceof IOException) throw (IOException) th;\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      throw new RuntimeException(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Iterable[#-extends-Closeable]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Iterable[#-extends-Closeable]).mjava","sourceNew":"  /**\n   * Closes all given <tt>Closeable</tt>s.\n   * @see #close(Closeable...)\n   */\n  public static void close(Iterable<? extends Closeable> objects) throws IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (th != null) {\n      if (th instanceof IOException) throw (IOException) th;\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      throw new RuntimeException(th);\n    }\n  }\n\n","sourceOld":"  /**\n   * @see #close(Closeable...)\n   */\n  public static void close(Iterable<? extends Closeable> objects) throws IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (th != null) {\n      if (th instanceof IOException) throw (IOException) th;\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      throw new RuntimeException(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666","date":1381263930,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Iterable[#-extends-Closeable]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Iterable[#-extends-Closeable]).mjava","sourceNew":"  /**\n   * Closes all given <tt>Closeable</tt>s.\n   * @see #close(Closeable...)\n   */\n  public static void close(Iterable<? extends Closeable> objects) throws IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    reThrow(th);\n  }\n\n","sourceOld":"  /**\n   * Closes all given <tt>Closeable</tt>s.\n   * @see #close(Closeable...)\n   */\n  public static void close(Iterable<? extends Closeable> objects) throws IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (th != null) {\n      if (th instanceof IOException) throw (IOException) th;\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      throw new RuntimeException(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97fc96e6cc460e0ec1fb904a9c7ecd80680780c2","date":1493374641,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Iterable[#-extends-Closeable]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Iterable[#-extends-Closeable]).mjava","sourceNew":"  /**\n   * Closes all given <tt>Closeable</tt>s.\n   * @see #close(Closeable...)\n   */\n  public static void close(Iterable<? extends Closeable> objects) throws IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (th != null) {\n      throw rethrowAlways(th);\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes all given <tt>Closeable</tt>s.\n   * @see #close(Closeable...)\n   */\n  public static void close(Iterable<? extends Closeable> objects) throws IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    reThrow(th);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Iterable[#-extends-Closeable]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Iterable[#-extends-Closeable]).mjava","sourceNew":"  /**\n   * Closes all given <tt>Closeable</tt>s.\n   * @see #close(Closeable...)\n   */\n  public static void close(Iterable<? extends Closeable> objects) throws IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (th != null) {\n      throw rethrowAlways(th);\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes all given <tt>Closeable</tt>s.\n   * @see #close(Closeable...)\n   */\n  public static void close(Iterable<? extends Closeable> objects) throws IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    reThrow(th);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb04d6a79e860154f2a1c519790fc42f5a792915","date":1521621668,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Iterable[#-extends-Closeable]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Iterable[#-extends-Closeable]).mjava","sourceNew":"  /**\n   * Closes all given <tt>Closeable</tt>s.\n   * @see #close(Closeable...)\n   */\n  public static void close(Iterable<? extends Closeable> objects) throws IOException {\n    Throwable th = null;\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        th = useOrSuppress(th, t);\n      }\n    }\n\n    if (th != null) {\n      throw rethrowAlways(th);\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes all given <tt>Closeable</tt>s.\n   * @see #close(Closeable...)\n   */\n  public static void close(Iterable<? extends Closeable> objects) throws IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (th != null) {\n      throw rethrowAlways(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","date":1521731438,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Iterable[#-extends-Closeable]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Iterable[#-extends-Closeable]).mjava","sourceNew":"  /**\n   * Closes all given <tt>Closeable</tt>s.\n   * @see #close(Closeable...)\n   */\n  public static void close(Iterable<? extends Closeable> objects) throws IOException {\n    Throwable th = null;\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        th = useOrSuppress(th, t);\n      }\n    }\n\n    if (th != null) {\n      throw rethrowAlways(th);\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes all given <tt>Closeable</tt>s.\n   * @see #close(Closeable...)\n   */\n  public static void close(Iterable<? extends Closeable> objects) throws IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (th != null) {\n      throw rethrowAlways(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e3751ad4cc85eb979419cf5469dfba266eae56a","date":1581046252,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Iterable[#-extends-Closeable]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#close(Iterable[#-extends-Closeable]).mjava","sourceNew":"  /**\n   * Closes all given <code>Closeable</code>s.\n   * @see #close(Closeable...)\n   */\n  public static void close(Iterable<? extends Closeable> objects) throws IOException {\n    Throwable th = null;\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        th = useOrSuppress(th, t);\n      }\n    }\n\n    if (th != null) {\n      throw rethrowAlways(th);\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes all given <tt>Closeable</tt>s.\n   * @see #close(Closeable...)\n   */\n  public static void close(Iterable<? extends Closeable> objects) throws IOException {\n    Throwable th = null;\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        th = useOrSuppress(th, t);\n      }\n    }\n\n    if (th != null) {\n      throw rethrowAlways(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666":["a3b4a63b6b0155323dde6b827e0dc22a43580753"],"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["97fc96e6cc460e0ec1fb904a9c7ecd80680780c2","bb04d6a79e860154f2a1c519790fc42f5a792915"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666","97fc96e6cc460e0ec1fb904a9c7ecd80680780c2"],"9e3751ad4cc85eb979419cf5469dfba266eae56a":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"],"97fc96e6cc460e0ec1fb904a9c7ecd80680780c2":["8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666"],"a3b4a63b6b0155323dde6b827e0dc22a43580753":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb04d6a79e860154f2a1c519790fc42f5a792915":["97fc96e6cc460e0ec1fb904a9c7ecd80680780c2"],"05a14b2611ead08655a2b2bdc61632eb31316e57":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","a3b4a63b6b0155323dde6b827e0dc22a43580753"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9e3751ad4cc85eb979419cf5469dfba266eae56a"]},"commit2Childs":{"8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666":["e9017cf144952056066919f1ebc7897ff9bd71b1","97fc96e6cc460e0ec1fb904a9c7ecd80680780c2"],"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["9e3751ad4cc85eb979419cf5469dfba266eae56a"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"9e3751ad4cc85eb979419cf5469dfba266eae56a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"97fc96e6cc460e0ec1fb904a9c7ecd80680780c2":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","e9017cf144952056066919f1ebc7897ff9bd71b1","bb04d6a79e860154f2a1c519790fc42f5a792915"],"a3b4a63b6b0155323dde6b827e0dc22a43580753":["8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666","05a14b2611ead08655a2b2bdc61632eb31316e57"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a3b4a63b6b0155323dde6b827e0dc22a43580753","05a14b2611ead08655a2b2bdc61632eb31316e57"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"bb04d6a79e860154f2a1c519790fc42f5a792915":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}