{"path":"lucene/core/src/java/org/apache/lucene/search/ReqExclScorer#ReqExclScorer(Scorer,Scorer).mjava","commits":[{"id":"244d15187e7f59974b9c7cc38eb17236903bdc06","date":1424161968,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ReqExclScorer#ReqExclScorer(Scorer,Scorer).mjava","pathOld":"/dev/null","sourceNew":"  /** Construct a <code>ReqExclScorer</code>.\n   * @param reqScorer The scorer that must match, except where\n   * @param exclScorer indicates exclusion.\n   */\n  public ReqExclScorer(Scorer reqScorer, Scorer exclScorer) {\n    super(reqScorer);\n    this.reqScorer = reqScorer;\n    reqTwoPhaseIterator = reqScorer.asTwoPhaseIterator();\n    if (reqTwoPhaseIterator == null) {\n      reqApproximation = reqScorer;\n    } else {\n      reqApproximation = reqTwoPhaseIterator.approximation();\n    }\n    exclTwoPhaseIterator = exclScorer.asTwoPhaseIterator();\n    if (exclTwoPhaseIterator == null) {\n      exclApproximation = exclScorer;\n    } else {\n      exclApproximation = exclTwoPhaseIterator.approximation();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"35425d74dd6cebe2e074b05228429765e67d1b35","date":1425216299,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ReqExclScorer#ReqExclScorer(Scorer,Scorer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ReqExclScorer#ReqExclScorer(Scorer,Scorer).mjava","sourceNew":"  /** Construct a <code>ReqExclScorer</code>.\n   * @param reqScorer The scorer that must match, except where\n   * @param exclScorer indicates exclusion.\n   */\n  public ReqExclScorer(Scorer reqScorer, Scorer exclScorer) {\n    super(reqScorer.weight);\n    this.reqScorer = reqScorer;\n    reqTwoPhaseIterator = reqScorer.asTwoPhaseIterator();\n    if (reqTwoPhaseIterator == null) {\n      reqApproximation = reqScorer;\n    } else {\n      reqApproximation = reqTwoPhaseIterator.approximation();\n    }\n    exclTwoPhaseIterator = exclScorer.asTwoPhaseIterator();\n    if (exclTwoPhaseIterator == null) {\n      exclApproximation = exclScorer;\n    } else {\n      exclApproximation = exclTwoPhaseIterator.approximation();\n    }\n  }\n\n","sourceOld":"  /** Construct a <code>ReqExclScorer</code>.\n   * @param reqScorer The scorer that must match, except where\n   * @param exclScorer indicates exclusion.\n   */\n  public ReqExclScorer(Scorer reqScorer, Scorer exclScorer) {\n    super(reqScorer);\n    this.reqScorer = reqScorer;\n    reqTwoPhaseIterator = reqScorer.asTwoPhaseIterator();\n    if (reqTwoPhaseIterator == null) {\n      reqApproximation = reqScorer;\n    } else {\n      reqApproximation = reqTwoPhaseIterator.approximation();\n    }\n    exclTwoPhaseIterator = exclScorer.asTwoPhaseIterator();\n    if (exclTwoPhaseIterator == null) {\n      exclApproximation = exclScorer;\n    } else {\n      exclApproximation = exclTwoPhaseIterator.approximation();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ReqExclScorer#ReqExclScorer(Scorer,Scorer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ReqExclScorer#ReqExclScorer(Scorer,Scorer).mjava","sourceNew":"  /** Construct a <code>ReqExclScorer</code>.\n   * @param reqScorer The scorer that must match, except where\n   * @param exclScorer indicates exclusion.\n   */\n  public ReqExclScorer(Scorer reqScorer, Scorer exclScorer) {\n    super(reqScorer.weight);\n    this.reqScorer = reqScorer;\n    reqTwoPhaseIterator = reqScorer.asTwoPhaseIterator();\n    if (reqTwoPhaseIterator == null) {\n      reqApproximation = reqScorer;\n    } else {\n      reqApproximation = reqTwoPhaseIterator.approximation();\n    }\n    exclTwoPhaseIterator = exclScorer.asTwoPhaseIterator();\n    if (exclTwoPhaseIterator == null) {\n      exclApproximation = exclScorer;\n    } else {\n      exclApproximation = exclTwoPhaseIterator.approximation();\n    }\n  }\n\n","sourceOld":"  /** Construct a <code>ReqExclScorer</code>.\n   * @param reqScorer The scorer that must match, except where\n   * @param exclScorer indicates exclusion.\n   */\n  public ReqExclScorer(Scorer reqScorer, Scorer exclScorer) {\n    super(reqScorer);\n    this.reqScorer = reqScorer;\n    reqTwoPhaseIterator = reqScorer.asTwoPhaseIterator();\n    if (reqTwoPhaseIterator == null) {\n      reqApproximation = reqScorer;\n    } else {\n      reqApproximation = reqTwoPhaseIterator.approximation();\n    }\n    exclTwoPhaseIterator = exclScorer.asTwoPhaseIterator();\n    if (exclTwoPhaseIterator == null) {\n      exclApproximation = exclScorer;\n    } else {\n      exclApproximation = exclTwoPhaseIterator.approximation();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ReqExclScorer#ReqExclScorer(Scorer,Scorer).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ReqExclScorer#ReqExclScorer(Scorer,Scorer).mjava","sourceNew":"  /** Construct a <code>ReqExclScorer</code>.\n   * @param reqScorer The scorer that must match, except where\n   * @param exclScorer indicates exclusion.\n   */\n  public ReqExclScorer(Scorer reqScorer, Scorer exclScorer) {\n    super(reqScorer.weight);\n    this.reqScorer = reqScorer;\n    reqTwoPhaseIterator = reqScorer.twoPhaseIterator();\n    if (reqTwoPhaseIterator == null) {\n      reqApproximation = reqScorer.iterator();\n    } else {\n      reqApproximation = reqTwoPhaseIterator.approximation();\n    }\n    exclTwoPhaseIterator = exclScorer.twoPhaseIterator();\n    if (exclTwoPhaseIterator == null) {\n      exclApproximation = exclScorer.iterator();\n    } else {\n      exclApproximation = exclTwoPhaseIterator.approximation();\n    }\n  }\n\n","sourceOld":"  /** Construct a <code>ReqExclScorer</code>.\n   * @param reqScorer The scorer that must match, except where\n   * @param exclScorer indicates exclusion.\n   */\n  public ReqExclScorer(Scorer reqScorer, Scorer exclScorer) {\n    super(reqScorer.weight);\n    this.reqScorer = reqScorer;\n    reqTwoPhaseIterator = reqScorer.asTwoPhaseIterator();\n    if (reqTwoPhaseIterator == null) {\n      reqApproximation = reqScorer;\n    } else {\n      reqApproximation = reqTwoPhaseIterator.approximation();\n    }\n    exclTwoPhaseIterator = exclScorer.asTwoPhaseIterator();\n    if (exclTwoPhaseIterator == null) {\n      exclApproximation = exclScorer;\n    } else {\n      exclApproximation = exclTwoPhaseIterator.approximation();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"35425d74dd6cebe2e074b05228429765e67d1b35":["244d15187e7f59974b9c7cc38eb17236903bdc06"],"244d15187e7f59974b9c7cc38eb17236903bdc06":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["244d15187e7f59974b9c7cc38eb17236903bdc06","35425d74dd6cebe2e074b05228429765e67d1b35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dd748bb245633a8195281556bb0e68a6ea97d18":["35425d74dd6cebe2e074b05228429765e67d1b35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dd748bb245633a8195281556bb0e68a6ea97d18"]},"commit2Childs":{"35425d74dd6cebe2e074b05228429765e67d1b35":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","7dd748bb245633a8195281556bb0e68a6ea97d18"],"244d15187e7f59974b9c7cc38eb17236903bdc06":["35425d74dd6cebe2e074b05228429765e67d1b35","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["244d15187e7f59974b9c7cc38eb17236903bdc06"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}