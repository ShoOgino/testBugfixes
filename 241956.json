{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrClientCloudManager#httpRequest(String,SolrRequest.METHOD,Map[String,String],String,int,boolean).mjava","commits":[{"id":"85212dad4ed576c7f7e6c165ee19e597b7b4efc8","date":1507997740,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrClientCloudManager#httpRequest(String,SolrRequest.METHOD,Map[String,String],String,int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public byte[] httpRequest(String url, SolrRequest.METHOD method, Map<String, String> headers, String payload, int timeout, boolean followRedirects) throws IOException {\n    HttpClient client = solrClient.getHttpClient();\n    final HttpRequestBase req;\n    HttpEntity entity = null;\n    if (payload != null) {\n      entity = new StringEntity(payload, \"UTF-8\");\n    }\n    switch (method) {\n      case GET:\n        req = new HttpGet(url);\n        break;\n      case POST:\n        req = new HttpPost(url);\n        if (entity != null) {\n          ((HttpPost)req).setEntity(entity);\n        }\n        break;\n      case PUT:\n        req = new HttpPut(url);\n        if (entity != null) {\n          ((HttpPut)req).setEntity(entity);\n        }\n        break;\n      case DELETE:\n        req = new HttpDelete(url);\n        break;\n      default:\n        throw new IOException(\"Unsupported method \" + method);\n    }\n    if (headers != null) {\n      headers.forEach((k, v) -> req.addHeader(k, v));\n    }\n    RequestConfig.Builder requestConfigBuilder = HttpClientUtil.createDefaultRequestConfigBuilder();\n    if (timeout > 0) {\n      requestConfigBuilder.setSocketTimeout(timeout);\n      requestConfigBuilder.setConnectTimeout(timeout);\n    }\n    requestConfigBuilder.setRedirectsEnabled(followRedirects);\n    req.setConfig(requestConfigBuilder.build());\n    HttpClientContext httpClientRequestContext = HttpClientUtil.createNewHttpClientRequestContext();\n    HttpResponse rsp = client.execute(req, httpClientRequestContext);\n    int statusCode = rsp.getStatusLine().getStatusCode();\n    if (statusCode != 200) {\n      throw new IOException(\"Error sending request to \" + url + \", HTTP response: \" + rsp.toString());\n    }\n    HttpEntity responseEntity = rsp.getEntity();\n    if (responseEntity != null && responseEntity.getContent() != null) {\n      return EntityUtils.toByteArray(responseEntity);\n    } else {\n      return EMPTY;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85212dad4ed576c7f7e6c165ee19e597b7b4efc8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8"],"85212dad4ed576c7f7e6c165ee19e597b7b4efc8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}