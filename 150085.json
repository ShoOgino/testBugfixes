{"path":"lucene/backwards/src/java/org/apache/lucene/util/ScorerDocQueue#insert(Scorer).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/util/ScorerDocQueue#insert(Scorer).mjava","pathOld":"backwards/src/java/org/apache/lucene/util/ScorerDocQueue#insert(Scorer).mjava","sourceNew":"  /**\n   * Adds a Scorer to the ScorerDocQueue in log(size) time if either\n   * the ScorerDocQueue is not full, or not lessThan(scorer, top()).\n   * @param scorer\n   * @return true if scorer is added, false otherwise.\n   */\n  public boolean insert(Scorer scorer){\n    if (size < maxSize) {\n      put(scorer);\n      return true;\n    } else {\n      int docNr = scorer.docID();\n      if ((size > 0) && (! (docNr < topHSD.doc))) { // heap[1] is top()\n        heap[1] = new HeapedScorerDoc(scorer, docNr);\n        downHeap();\n        return true;\n      } else {\n        return false;\n      }\n    }\n   }\n\n","sourceOld":"  /**\n   * Adds a Scorer to the ScorerDocQueue in log(size) time if either\n   * the ScorerDocQueue is not full, or not lessThan(scorer, top()).\n   * @param scorer\n   * @return true if scorer is added, false otherwise.\n   */\n  public boolean insert(Scorer scorer){\n    if (size < maxSize) {\n      put(scorer);\n      return true;\n    } else {\n      int docNr = scorer.docID();\n      if ((size > 0) && (! (docNr < topHSD.doc))) { // heap[1] is top()\n        heap[1] = new HeapedScorerDoc(scorer, docNr);\n        downHeap();\n        return true;\n      } else {\n        return false;\n      }\n    }\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/util/ScorerDocQueue#insert(Scorer).mjava","sourceNew":null,"sourceOld":"  /**\n   * Adds a Scorer to the ScorerDocQueue in log(size) time if either\n   * the ScorerDocQueue is not full, or not lessThan(scorer, top()).\n   * @param scorer\n   * @return true if scorer is added, false otherwise.\n   */\n  public boolean insert(Scorer scorer){\n    if (size < maxSize) {\n      put(scorer);\n      return true;\n    } else {\n      int docNr = scorer.docID();\n      if ((size > 0) && (! (docNr < topHSD.doc))) { // heap[1] is top()\n        heap[1] = new HeapedScorerDoc(scorer, docNr);\n        downHeap();\n        return true;\n      } else {\n        return false;\n      }\n    }\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}