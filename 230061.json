{"path":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#upgradeToBitSet().mjava","commits":[{"id":"0e91a2d9ed80172872da0f517870da6756289554","date":1436431140,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#upgradeToBitSet().mjava","pathOld":"/dev/null","sourceNew":"  private void upgradeToBitSet() {\n    assert bitSet == null;\n    bitSet = new FixedBitSet(maxDoc);\n    for (int i = 0; i < bufferSize; ++i) {\n      bitSet.set(buffer[i]);\n    }\n    this.buffer = null;\n    this.bufferSize = 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d3eccadf4f2a01d2034c96afe1a5c617b2e85af","date":1461918927,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#upgradeToBitSet().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#upgradeToBitSet().mjava","sourceNew":"  private void upgradeToBitSet() {\n    assert bitSet == null;\n    bitSet = new FixedBitSet(maxDoc);\n    for (int i = 0; i < bufferSize; ++i) {\n      bitSet.set(buffer[i]);\n    }\n    this.buffer = null;\n    this.bufferSize = 0;\n    this.adder = new FixedBitSetAdder(bitSet);\n  }\n\n","sourceOld":"  private void upgradeToBitSet() {\n    assert bitSet == null;\n    bitSet = new FixedBitSet(maxDoc);\n    for (int i = 0; i < bufferSize; ++i) {\n      bitSet.set(buffer[i]);\n    }\n    this.buffer = null;\n    this.bufferSize = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8e8d5955830d712186a4beb716e797d505af7981","date":1461951189,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#upgradeToBitSet().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#upgradeToBitSet().mjava","sourceNew":"  private void upgradeToBitSet() {\n    assert bitSet == null;\n    bitSet = new FixedBitSet(maxDoc);\n    for (int i = 0; i < bufferSize; ++i) {\n      bitSet.set(buffer[i]);\n    }\n    this.buffer = null;\n    this.bufferSize = 0;\n    this.adder = new FixedBitSetAdder(bitSet);\n  }\n\n","sourceOld":"  private void upgradeToBitSet() {\n    assert bitSet == null;\n    bitSet = new FixedBitSet(maxDoc);\n    for (int i = 0; i < bufferSize; ++i) {\n      bitSet.set(buffer[i]);\n    }\n    this.buffer = null;\n    this.bufferSize = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9ee4c03e3ee986704eeeb45c571d001905a6430","date":1462194267,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#upgradeToBitSet().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#upgradeToBitSet().mjava","sourceNew":"  private void upgradeToBitSet() {\n    assert bitSet == null;\n    bitSet = new FixedBitSet(maxDoc);\n    for (int i = 0; i < bufferSize; ++i) {\n      bitSet.set(buffer[i]);\n    }\n    counter = this.bufferSize;\n    this.buffer = null;\n    this.bufferSize = 0;\n    this.adder = new FixedBitSetAdder(bitSet);\n  }\n\n","sourceOld":"  private void upgradeToBitSet() {\n    assert bitSet == null;\n    bitSet = new FixedBitSet(maxDoc);\n    for (int i = 0; i < bufferSize; ++i) {\n      bitSet.set(buffer[i]);\n    }\n    this.buffer = null;\n    this.bufferSize = 0;\n    this.adder = new FixedBitSetAdder(bitSet);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30540ec27130887a9372c159e8fe971200f37727","date":1462223109,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#upgradeToBitSet().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#upgradeToBitSet().mjava","sourceNew":"  private void upgradeToBitSet() {\n    assert bitSet == null;\n    bitSet = new FixedBitSet(maxDoc);\n    for (int i = 0; i < bufferSize; ++i) {\n      bitSet.set(buffer[i]);\n    }\n    counter = this.bufferSize;\n    this.buffer = null;\n    this.bufferSize = 0;\n    this.adder = new FixedBitSetAdder(bitSet);\n  }\n\n","sourceOld":"  private void upgradeToBitSet() {\n    assert bitSet == null;\n    bitSet = new FixedBitSet(maxDoc);\n    for (int i = 0; i < bufferSize; ++i) {\n      bitSet.set(buffer[i]);\n    }\n    this.buffer = null;\n    this.bufferSize = 0;\n    this.adder = new FixedBitSetAdder(bitSet);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55b50463286869f584cf849d1587a0fcd54d1dfa","date":1462378517,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#upgradeToBitSet().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#upgradeToBitSet().mjava","sourceNew":"  private void upgradeToBitSet() {\n    assert bitSet == null;\n    bitSet = new FixedBitSet(maxDoc);\n    for (int i = 0; i < bufferSize; ++i) {\n      bitSet.set(buffer[i]);\n    }\n    counter = this.bufferSize;\n    this.buffer = null;\n    this.bufferSize = 0;\n    this.adder = new FixedBitSetAdder(bitSet);\n  }\n\n","sourceOld":"  private void upgradeToBitSet() {\n    assert bitSet == null;\n    bitSet = new FixedBitSet(maxDoc);\n    for (int i = 0; i < bufferSize; ++i) {\n      bitSet.set(buffer[i]);\n    }\n    this.buffer = null;\n    this.bufferSize = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9cb92b52940b86bd2ad151ecc61b2f5e83af1a5e","date":1463988431,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#upgradeToBitSet().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#upgradeToBitSet().mjava","sourceNew":"  private void upgradeToBitSet() {\n    assert bitSet == null;\n    FixedBitSet bitSet = new FixedBitSet(maxDoc);\n    long counter = 0;\n    for (Buffer buffer : buffers) {\n      int[] array = buffer.array;\n      int length = buffer.length;\n      counter += length;\n      for (int i = 0; i < length; ++i) {\n        bitSet.set(array[i]);\n      }\n    }\n    this.bitSet = bitSet;\n    this.counter = counter;\n    this.buffers = null;\n    this.adder = new FixedBitSetAdder(bitSet);\n  }\n\n","sourceOld":"  private void upgradeToBitSet() {\n    assert bitSet == null;\n    bitSet = new FixedBitSet(maxDoc);\n    for (int i = 0; i < bufferSize; ++i) {\n      bitSet.set(buffer[i]);\n    }\n    counter = this.bufferSize;\n    this.buffer = null;\n    this.bufferSize = 0;\n    this.adder = new FixedBitSetAdder(bitSet);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e616cfbf284ecbd0f40b4b9e4196daa27e92abd5","date":1464066565,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#upgradeToBitSet().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#upgradeToBitSet().mjava","sourceNew":"  private void upgradeToBitSet() {\n    assert bitSet == null;\n    FixedBitSet bitSet = new FixedBitSet(maxDoc);\n    long counter = 0;\n    for (Buffer buffer : buffers) {\n      int[] array = buffer.array;\n      int length = buffer.length;\n      counter += length;\n      for (int i = 0; i < length; ++i) {\n        bitSet.set(array[i]);\n      }\n    }\n    this.bitSet = bitSet;\n    this.counter = counter;\n    this.buffers = null;\n    this.adder = new FixedBitSetAdder(bitSet);\n  }\n\n","sourceOld":"  private void upgradeToBitSet() {\n    assert bitSet == null;\n    bitSet = new FixedBitSet(maxDoc);\n    for (int i = 0; i < bufferSize; ++i) {\n      bitSet.set(buffer[i]);\n    }\n    counter = this.bufferSize;\n    this.buffer = null;\n    this.bufferSize = 0;\n    this.adder = new FixedBitSetAdder(bitSet);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#upgradeToBitSet().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/DocIdSetBuilder#upgradeToBitSet().mjava","sourceNew":"  private void upgradeToBitSet() {\n    assert bitSet == null;\n    FixedBitSet bitSet = new FixedBitSet(maxDoc);\n    long counter = 0;\n    for (Buffer buffer : buffers) {\n      int[] array = buffer.array;\n      int length = buffer.length;\n      counter += length;\n      for (int i = 0; i < length; ++i) {\n        bitSet.set(array[i]);\n      }\n    }\n    this.bitSet = bitSet;\n    this.counter = counter;\n    this.buffers = null;\n    this.adder = new FixedBitSetAdder(bitSet);\n  }\n\n","sourceOld":"  private void upgradeToBitSet() {\n    assert bitSet == null;\n    bitSet = new FixedBitSet(maxDoc);\n    for (int i = 0; i < bufferSize; ++i) {\n      bitSet.set(buffer[i]);\n    }\n    counter = this.bufferSize;\n    this.buffer = null;\n    this.bufferSize = 0;\n    this.adder = new FixedBitSetAdder(bitSet);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9cb92b52940b86bd2ad151ecc61b2f5e83af1a5e":["30540ec27130887a9372c159e8fe971200f37727"],"c9ee4c03e3ee986704eeeb45c571d001905a6430":["8e8d5955830d712186a4beb716e797d505af7981"],"3d3eccadf4f2a01d2034c96afe1a5c617b2e85af":["0e91a2d9ed80172872da0f517870da6756289554"],"8e8d5955830d712186a4beb716e797d505af7981":["0e91a2d9ed80172872da0f517870da6756289554","3d3eccadf4f2a01d2034c96afe1a5c617b2e85af"],"0e91a2d9ed80172872da0f517870da6756289554":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30540ec27130887a9372c159e8fe971200f37727":["8e8d5955830d712186a4beb716e797d505af7981","c9ee4c03e3ee986704eeeb45c571d001905a6430"],"e616cfbf284ecbd0f40b4b9e4196daa27e92abd5":["30540ec27130887a9372c159e8fe971200f37727","9cb92b52940b86bd2ad151ecc61b2f5e83af1a5e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["55b50463286869f584cf849d1587a0fcd54d1dfa","e616cfbf284ecbd0f40b4b9e4196daa27e92abd5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e616cfbf284ecbd0f40b4b9e4196daa27e92abd5"],"55b50463286869f584cf849d1587a0fcd54d1dfa":["0e91a2d9ed80172872da0f517870da6756289554","30540ec27130887a9372c159e8fe971200f37727"]},"commit2Childs":{"9cb92b52940b86bd2ad151ecc61b2f5e83af1a5e":["e616cfbf284ecbd0f40b4b9e4196daa27e92abd5"],"c9ee4c03e3ee986704eeeb45c571d001905a6430":["30540ec27130887a9372c159e8fe971200f37727"],"3d3eccadf4f2a01d2034c96afe1a5c617b2e85af":["8e8d5955830d712186a4beb716e797d505af7981"],"8e8d5955830d712186a4beb716e797d505af7981":["c9ee4c03e3ee986704eeeb45c571d001905a6430","30540ec27130887a9372c159e8fe971200f37727"],"0e91a2d9ed80172872da0f517870da6756289554":["3d3eccadf4f2a01d2034c96afe1a5c617b2e85af","8e8d5955830d712186a4beb716e797d505af7981","55b50463286869f584cf849d1587a0fcd54d1dfa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0e91a2d9ed80172872da0f517870da6756289554"],"30540ec27130887a9372c159e8fe971200f37727":["9cb92b52940b86bd2ad151ecc61b2f5e83af1a5e","e616cfbf284ecbd0f40b4b9e4196daa27e92abd5","55b50463286869f584cf849d1587a0fcd54d1dfa"],"e616cfbf284ecbd0f40b4b9e4196daa27e92abd5":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"55b50463286869f584cf849d1587a0fcd54d1dfa":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}