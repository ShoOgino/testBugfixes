{"path":"contrib/queryparser/src/test/org/apache/lucene/queryParser/original/TestQPHelper#testQueryStringEscaping().mjava","commits":[{"id":"b955a87bc7c5daeda1ed56821ec0bec2e8789e44","date":1249270724,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/original/TestQPHelper#testQueryStringEscaping().mjava","pathOld":"/dev/null","sourceNew":"  public void testQueryStringEscaping() throws Exception {\n    Analyzer a = new WhitespaceAnalyzer();\n\n    assertEscapedQueryEquals(\"a-b:c\", a, \"a\\\\-b\\\\:c\");\n    assertEscapedQueryEquals(\"a+b:c\", a, \"a\\\\+b\\\\:c\");\n    assertEscapedQueryEquals(\"a:b:c\", a, \"a\\\\:b\\\\:c\");\n    assertEscapedQueryEquals(\"a\\\\b:c\", a, \"a\\\\\\\\b\\\\:c\");\n\n    assertEscapedQueryEquals(\"a:b-c\", a, \"a\\\\:b\\\\-c\");\n    assertEscapedQueryEquals(\"a:b+c\", a, \"a\\\\:b\\\\+c\");\n    assertEscapedQueryEquals(\"a:b:c\", a, \"a\\\\:b\\\\:c\");\n    assertEscapedQueryEquals(\"a:b\\\\c\", a, \"a\\\\:b\\\\\\\\c\");\n\n    assertEscapedQueryEquals(\"a:b-c*\", a, \"a\\\\:b\\\\-c\\\\*\");\n    assertEscapedQueryEquals(\"a:b+c*\", a, \"a\\\\:b\\\\+c\\\\*\");\n    assertEscapedQueryEquals(\"a:b:c*\", a, \"a\\\\:b\\\\:c\\\\*\");\n\n    assertEscapedQueryEquals(\"a:b\\\\\\\\c*\", a, \"a\\\\:b\\\\\\\\\\\\\\\\c\\\\*\");\n\n    assertEscapedQueryEquals(\"a:b-?c\", a, \"a\\\\:b\\\\-\\\\?c\");\n    assertEscapedQueryEquals(\"a:b+?c\", a, \"a\\\\:b\\\\+\\\\?c\");\n    assertEscapedQueryEquals(\"a:b:?c\", a, \"a\\\\:b\\\\:\\\\?c\");\n\n    assertEscapedQueryEquals(\"a:b?c\", a, \"a\\\\:b\\\\?c\");\n\n    assertEscapedQueryEquals(\"a:b-c~\", a, \"a\\\\:b\\\\-c\\\\~\");\n    assertEscapedQueryEquals(\"a:b+c~\", a, \"a\\\\:b\\\\+c\\\\~\");\n    assertEscapedQueryEquals(\"a:b:c~\", a, \"a\\\\:b\\\\:c\\\\~\");\n    assertEscapedQueryEquals(\"a:b\\\\c~\", a, \"a\\\\:b\\\\\\\\c\\\\~\");\n\n    assertEscapedQueryEquals(\"[ a - TO a+ ]\", null, \"\\\\[ a \\\\- TO a\\\\+ \\\\]\");\n    assertEscapedQueryEquals(\"[ a : TO a~ ]\", null, \"\\\\[ a \\\\: TO a\\\\~ \\\\]\");\n    assertEscapedQueryEquals(\"[ a\\\\ TO a* ]\", null, \"\\\\[ a\\\\\\\\ TO a\\\\* \\\\]\");\n\n    // LUCENE-881\n    assertEscapedQueryEquals(\"|| abc ||\", a, \"\\\\|\\\\| abc \\\\|\\\\|\");\n    assertEscapedQueryEquals(\"&& abc &&\", a, \"\\\\&\\\\& abc \\\\&\\\\&\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8a848e758754282137f42bf85793c278e250390","date":1249640668,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testQueryStringEscaping().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/original/TestQPHelper#testQueryStringEscaping().mjava","sourceNew":"  public void testQueryStringEscaping() throws Exception {\n    Analyzer a = new WhitespaceAnalyzer();\n\n    assertEscapedQueryEquals(\"a-b:c\", a, \"a\\\\-b\\\\:c\");\n    assertEscapedQueryEquals(\"a+b:c\", a, \"a\\\\+b\\\\:c\");\n    assertEscapedQueryEquals(\"a:b:c\", a, \"a\\\\:b\\\\:c\");\n    assertEscapedQueryEquals(\"a\\\\b:c\", a, \"a\\\\\\\\b\\\\:c\");\n\n    assertEscapedQueryEquals(\"a:b-c\", a, \"a\\\\:b\\\\-c\");\n    assertEscapedQueryEquals(\"a:b+c\", a, \"a\\\\:b\\\\+c\");\n    assertEscapedQueryEquals(\"a:b:c\", a, \"a\\\\:b\\\\:c\");\n    assertEscapedQueryEquals(\"a:b\\\\c\", a, \"a\\\\:b\\\\\\\\c\");\n\n    assertEscapedQueryEquals(\"a:b-c*\", a, \"a\\\\:b\\\\-c\\\\*\");\n    assertEscapedQueryEquals(\"a:b+c*\", a, \"a\\\\:b\\\\+c\\\\*\");\n    assertEscapedQueryEquals(\"a:b:c*\", a, \"a\\\\:b\\\\:c\\\\*\");\n\n    assertEscapedQueryEquals(\"a:b\\\\\\\\c*\", a, \"a\\\\:b\\\\\\\\\\\\\\\\c\\\\*\");\n\n    assertEscapedQueryEquals(\"a:b-?c\", a, \"a\\\\:b\\\\-\\\\?c\");\n    assertEscapedQueryEquals(\"a:b+?c\", a, \"a\\\\:b\\\\+\\\\?c\");\n    assertEscapedQueryEquals(\"a:b:?c\", a, \"a\\\\:b\\\\:\\\\?c\");\n\n    assertEscapedQueryEquals(\"a:b?c\", a, \"a\\\\:b\\\\?c\");\n\n    assertEscapedQueryEquals(\"a:b-c~\", a, \"a\\\\:b\\\\-c\\\\~\");\n    assertEscapedQueryEquals(\"a:b+c~\", a, \"a\\\\:b\\\\+c\\\\~\");\n    assertEscapedQueryEquals(\"a:b:c~\", a, \"a\\\\:b\\\\:c\\\\~\");\n    assertEscapedQueryEquals(\"a:b\\\\c~\", a, \"a\\\\:b\\\\\\\\c\\\\~\");\n\n    assertEscapedQueryEquals(\"[ a - TO a+ ]\", null, \"\\\\[ a \\\\- TO a\\\\+ \\\\]\");\n    assertEscapedQueryEquals(\"[ a : TO a~ ]\", null, \"\\\\[ a \\\\: TO a\\\\~ \\\\]\");\n    assertEscapedQueryEquals(\"[ a\\\\ TO a* ]\", null, \"\\\\[ a\\\\\\\\ TO a\\\\* \\\\]\");\n\n    // LUCENE-881\n    assertEscapedQueryEquals(\"|| abc ||\", a, \"\\\\|\\\\| abc \\\\|\\\\|\");\n    assertEscapedQueryEquals(\"&& abc &&\", a, \"\\\\&\\\\& abc \\\\&\\\\&\");\n  }\n\n","sourceOld":"  public void testQueryStringEscaping() throws Exception {\n    Analyzer a = new WhitespaceAnalyzer();\n\n    assertEscapedQueryEquals(\"a-b:c\", a, \"a\\\\-b\\\\:c\");\n    assertEscapedQueryEquals(\"a+b:c\", a, \"a\\\\+b\\\\:c\");\n    assertEscapedQueryEquals(\"a:b:c\", a, \"a\\\\:b\\\\:c\");\n    assertEscapedQueryEquals(\"a\\\\b:c\", a, \"a\\\\\\\\b\\\\:c\");\n\n    assertEscapedQueryEquals(\"a:b-c\", a, \"a\\\\:b\\\\-c\");\n    assertEscapedQueryEquals(\"a:b+c\", a, \"a\\\\:b\\\\+c\");\n    assertEscapedQueryEquals(\"a:b:c\", a, \"a\\\\:b\\\\:c\");\n    assertEscapedQueryEquals(\"a:b\\\\c\", a, \"a\\\\:b\\\\\\\\c\");\n\n    assertEscapedQueryEquals(\"a:b-c*\", a, \"a\\\\:b\\\\-c\\\\*\");\n    assertEscapedQueryEquals(\"a:b+c*\", a, \"a\\\\:b\\\\+c\\\\*\");\n    assertEscapedQueryEquals(\"a:b:c*\", a, \"a\\\\:b\\\\:c\\\\*\");\n\n    assertEscapedQueryEquals(\"a:b\\\\\\\\c*\", a, \"a\\\\:b\\\\\\\\\\\\\\\\c\\\\*\");\n\n    assertEscapedQueryEquals(\"a:b-?c\", a, \"a\\\\:b\\\\-\\\\?c\");\n    assertEscapedQueryEquals(\"a:b+?c\", a, \"a\\\\:b\\\\+\\\\?c\");\n    assertEscapedQueryEquals(\"a:b:?c\", a, \"a\\\\:b\\\\:\\\\?c\");\n\n    assertEscapedQueryEquals(\"a:b?c\", a, \"a\\\\:b\\\\?c\");\n\n    assertEscapedQueryEquals(\"a:b-c~\", a, \"a\\\\:b\\\\-c\\\\~\");\n    assertEscapedQueryEquals(\"a:b+c~\", a, \"a\\\\:b\\\\+c\\\\~\");\n    assertEscapedQueryEquals(\"a:b:c~\", a, \"a\\\\:b\\\\:c\\\\~\");\n    assertEscapedQueryEquals(\"a:b\\\\c~\", a, \"a\\\\:b\\\\\\\\c\\\\~\");\n\n    assertEscapedQueryEquals(\"[ a - TO a+ ]\", null, \"\\\\[ a \\\\- TO a\\\\+ \\\\]\");\n    assertEscapedQueryEquals(\"[ a : TO a~ ]\", null, \"\\\\[ a \\\\: TO a\\\\~ \\\\]\");\n    assertEscapedQueryEquals(\"[ a\\\\ TO a* ]\", null, \"\\\\[ a\\\\\\\\ TO a\\\\* \\\\]\");\n\n    // LUCENE-881\n    assertEscapedQueryEquals(\"|| abc ||\", a, \"\\\\|\\\\| abc \\\\|\\\\|\");\n    assertEscapedQueryEquals(\"&& abc &&\", a, \"\\\\&\\\\& abc \\\\&\\\\&\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e8a848e758754282137f42bf85793c278e250390":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e8a848e758754282137f42bf85793c278e250390"]},"commit2Childs":{"e8a848e758754282137f42bf85793c278e250390":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["e8a848e758754282137f42bf85793c278e250390"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}