{"path":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterRanking#checkDocument(IndexSearcher,int,int).mjava","commits":[{"id":"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2","date":1475611903,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterRanking#checkDocument(IndexSearcher,int,int).mjava","pathOld":"/dev/null","sourceNew":"  private void checkDocument(IndexSearcher is, int doc, int maxTopN) throws IOException {\n    for (int ch = 'a'; ch <= 'z'; ch++) {\n      Term term = new Term(\"body\", \"\" + (char) ch);\n      // check a simple term query\n      checkQuery(is, new TermQuery(term), doc, maxTopN);\n      // check a boolean query\n      Term nextTerm = new Term(\"body\", \"\" + (char) (ch + 1));\n      BooleanQuery bq = new BooleanQuery.Builder()\n          .add(new TermQuery(term), BooleanClause.Occur.SHOULD)\n          .add(new TermQuery(nextTerm), BooleanClause.Occur.SHOULD)\n          .build();\n      checkQuery(is, bq, doc, maxTopN);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestUnifiedHighlighterRanking#checkDocument(IndexSearcher,int,int).mjava","pathOld":"/dev/null","sourceNew":"  private void checkDocument(IndexSearcher is, int doc, int maxTopN) throws IOException {\n    for (int ch = 'a'; ch <= 'z'; ch++) {\n      Term term = new Term(\"body\", \"\" + (char) ch);\n      // check a simple term query\n      checkQuery(is, new TermQuery(term), doc, maxTopN);\n      // check a boolean query\n      Term nextTerm = new Term(\"body\", \"\" + (char) (ch + 1));\n      BooleanQuery bq = new BooleanQuery.Builder()\n          .add(new TermQuery(term), BooleanClause.Occur.SHOULD)\n          .add(new TermQuery(nextTerm), BooleanClause.Occur.SHOULD)\n          .build();\n      checkQuery(is, bq, doc, maxTopN);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"1f5ce59aaf4a055cc9ec62c15a89c263a05ff4b2":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}