{"path":"lucene/src/java/org/apache/lucene/search/SpanFilter#bitSpans(AtomicReaderContext,Bits).mjava","commits":[{"id":"6620df8541b174097b1133a4fc370adb2e570524","date":1319544675,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/SpanFilter#bitSpans(AtomicReaderContext,Bits).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/SpanFilter#bitSpans(AtomicReaderContext).mjava","sourceNew":"  /** Returns a SpanFilterResult with true for documents which should be permitted in\n    search results, and false for those that should not and Spans for where the true docs match.\n   * @param context The {@link AtomicReaderContext} to load position and DocIdSet information from\n   * @return A {@link SpanFilterResult}\n   * @throws java.io.IOException if there was an issue accessing the necessary information\n   * */\n  public abstract SpanFilterResult bitSpans(AtomicReaderContext context, Bits acceptDocs) throws IOException;\n\n","sourceOld":"  /** Returns a SpanFilterResult with true for documents which should be permitted in\n    search results, and false for those that should not and Spans for where the true docs match.\n   * @param context The {@link AtomicReaderContext} to load position and DocIdSet information from\n   * @return A {@link SpanFilterResult}\n   * @throws java.io.IOException if there was an issue accessing the necessary information\n   * */\n  public abstract SpanFilterResult bitSpans(AtomicReaderContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a015474a0e3185be4c42ed156c0f1e88b90b1ace","date":1321290150,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/SpanFilter#bitSpans(AtomicReaderContext,Bits).mjava","sourceNew":null,"sourceOld":"  /** Returns a SpanFilterResult with true for documents which should be permitted in\n    search results, and false for those that should not and Spans for where the true docs match.\n   * @param context The {@link AtomicReaderContext} to load position and DocIdSet information from\n   * @return A {@link SpanFilterResult}\n   * @throws java.io.IOException if there was an issue accessing the necessary information\n   * */\n  public abstract SpanFilterResult bitSpans(AtomicReaderContext context, Bits acceptDocs) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6620df8541b174097b1133a4fc370adb2e570524":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a015474a0e3185be4c42ed156c0f1e88b90b1ace"],"a015474a0e3185be4c42ed156c0f1e88b90b1ace":["6620df8541b174097b1133a4fc370adb2e570524"]},"commit2Childs":{"6620df8541b174097b1133a4fc370adb2e570524":["a015474a0e3185be4c42ed156c0f1e88b90b1ace"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6620df8541b174097b1133a4fc370adb2e570524"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"a015474a0e3185be4c42ed156c0f1e88b90b1ace":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}