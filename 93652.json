{"path":"src/java/org/apache/solr/search/function/ReverseOrdFieldSource#getValues(IndexReader).mjava","commits":[{"id":"366fcca5de1fe02aa77c7aca163ce4c0dbf30112","date":1138917988,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/ReverseOrdFieldSource#getValues(IndexReader).mjava","pathOld":"src/lucene_extras/org/apache/lucene/search/function/ReverseOrdFieldSource#getValues(IndexReader).mjava","sourceNew":"  public DocValues getValues(IndexReader reader) throws IOException {\n    final FieldCache.StringIndex sindex = FieldCache.DEFAULT.getStringIndex(reader, field);\n\n    final int arr[] = sindex.order;\n    final int end = sindex.lookup.length;\n\n    return new DocValues() {\n      public float floatVal(int doc) {\n        return (float)(end - arr[doc]);\n      }\n\n      public int intVal(int doc) {\n        return (int)(end - arr[doc]);\n      }\n\n      public long longVal(int doc) {\n        return (long)(end - arr[doc]);\n      }\n\n      public double doubleVal(int doc) {\n        return (double)(end - arr[doc]);\n      }\n\n      public String strVal(int doc) {\n        // the string value of the ordinal, not the string itself\n        return Integer.toString((end - arr[doc]));\n      }\n\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n    };\n  }\n\n","sourceOld":"  public DocValues getValues(IndexReader reader) throws IOException {\n    final FieldCache.StringIndex sindex = FieldCache.DEFAULT.getStringIndex(reader, field);\n\n    final int arr[] = sindex.order;\n    final int end = sindex.lookup.length;\n\n    return new DocValues() {\n      public float floatVal(int doc) {\n        return (float)(end - arr[doc]);\n      }\n\n      public int intVal(int doc) {\n        return (int)(end - arr[doc]);\n      }\n\n      public long longVal(int doc) {\n        return (long)(end - arr[doc]);\n      }\n\n      public double doubleVal(int doc) {\n        return (double)(end - arr[doc]);\n      }\n\n      public String strVal(int doc) {\n        // the string value of the ordinal, not the string itself\n        return Integer.toString((end - arr[doc]));\n      }\n\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e00023dc6828d09dbfb05d4dfa4d488cc81ee42","date":1253196493,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/ReverseOrdFieldSource#getValues(Map,IndexReader).mjava","pathOld":"src/java/org/apache/solr/search/function/ReverseOrdFieldSource#getValues(IndexReader).mjava","sourceNew":"  public DocValues getValues(Map context, IndexReader reader) throws IOException {\n    final FieldCache.StringIndex sindex = FieldCache.DEFAULT.getStringIndex(reader, field);\n\n    final int arr[] = sindex.order;\n    final int end = sindex.lookup.length;\n\n    return new DocValues() {\n      public float floatVal(int doc) {\n        return (float)(end - arr[doc]);\n      }\n\n      public int intVal(int doc) {\n        return (int)(end - arr[doc]);\n      }\n\n      public long longVal(int doc) {\n        return (long)(end - arr[doc]);\n      }\n\n      public double doubleVal(int doc) {\n        return (double)(end - arr[doc]);\n      }\n\n      public String strVal(int doc) {\n        // the string value of the ordinal, not the string itself\n        return Integer.toString((end - arr[doc]));\n      }\n\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n    };\n  }\n\n","sourceOld":"  public DocValues getValues(IndexReader reader) throws IOException {\n    final FieldCache.StringIndex sindex = FieldCache.DEFAULT.getStringIndex(reader, field);\n\n    final int arr[] = sindex.order;\n    final int end = sindex.lookup.length;\n\n    return new DocValues() {\n      public float floatVal(int doc) {\n        return (float)(end - arr[doc]);\n      }\n\n      public int intVal(int doc) {\n        return (int)(end - arr[doc]);\n      }\n\n      public long longVal(int doc) {\n        return (long)(end - arr[doc]);\n      }\n\n      public double doubleVal(int doc) {\n        return (double)(end - arr[doc]);\n      }\n\n      public String strVal(int doc) {\n        // the string value of the ordinal, not the string itself\n        return Integer.toString((end - arr[doc]));\n      }\n\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7e00023dc6828d09dbfb05d4dfa4d488cc81ee42":["366fcca5de1fe02aa77c7aca163ce4c0dbf30112"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"366fcca5de1fe02aa77c7aca163ce4c0dbf30112":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7e00023dc6828d09dbfb05d4dfa4d488cc81ee42":[],"366fcca5de1fe02aa77c7aca163ce4c0dbf30112":["7e00023dc6828d09dbfb05d4dfa4d488cc81ee42"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["366fcca5de1fe02aa77c7aca163ce4c0dbf30112"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7e00023dc6828d09dbfb05d4dfa4d488cc81ee42","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}