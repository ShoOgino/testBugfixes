{"path":"sandbox/contributions/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore(Token).mjava","commits":[{"id":"db2e1c87dfa9ca908febe5b39f6dd3dee2fbe9e2","date":1081470871,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore(Token).mjava","pathOld":"/dev/null","sourceNew":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.search.highlight.FragmentScorer#scoreToken(org.apache.lucene.analysis.Token)\n\t */\n\tpublic float getTokenScore(Token token)\n\t{\n\t\tString termText=token.termText();\n\t\t\n\t\tWeightedTerm queryTerm=(WeightedTerm) termsToFind.get(termText);\n\t\tif(queryTerm==null)\n\t\t{\n\t\t\t//not a query term - return\n\t\t\treturn 0;\n\t\t}\n\t\t//found a query term - is it unique in this doc?\n\t\tif(!uniqueTermsInFragment.contains(termText))\n\t\t{\n\t\t\ttotalScore+=queryTerm.getWeight();\n\t\t\tuniqueTermsInFragment.add(termText);\n\t\t}\n\t\treturn queryTerm.getWeight();\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"208af5140b3fc022c05bdcc4dcd09d8cb847620f","date":1086231850,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore(Token).mjava","pathOld":"sandbox/contributions/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore(Token).mjava","sourceNew":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.search.highlight.FragmentScorer#scoreToken(org.apache.lucene.analysis.Token)\n\t */\n\tpublic float getTokenScore(Token token)\n\t{\n\t\tString termText=token.termText();\n\t\t\n\t\tWeightedTerm queryTerm=(WeightedTerm) termsToFind.get(termText);\n\t\tif(queryTerm==null)\n\t\t{\n\t\t\t//not a query term - return\n\t\t\treturn 0;\n\t\t}\n\t\t//found a query term - is it unique in this fragment?\n\t\tif(!uniqueTermsInFragment.contains(termText))\n\t\t{\n\t\t\ttotalScore+=queryTerm.getWeight();\n\t\t\tuniqueTermsInFragment.add(termText);\n\t\t}\n\t\treturn queryTerm.getWeight();\n\t}\n\n","sourceOld":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.search.highlight.FragmentScorer#scoreToken(org.apache.lucene.analysis.Token)\n\t */\n\tpublic float getTokenScore(Token token)\n\t{\n\t\tString termText=token.termText();\n\t\t\n\t\tWeightedTerm queryTerm=(WeightedTerm) termsToFind.get(termText);\n\t\tif(queryTerm==null)\n\t\t{\n\t\t\t//not a query term - return\n\t\t\treturn 0;\n\t\t}\n\t\t//found a query term - is it unique in this doc?\n\t\tif(!uniqueTermsInFragment.contains(termText))\n\t\t{\n\t\t\ttotalScore+=queryTerm.getWeight();\n\t\t\tuniqueTermsInFragment.add(termText);\n\t\t}\n\t\treturn queryTerm.getWeight();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d5a0b529d2a1f873f1f11db833a891b53909a7bc","date":1104492147,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"sandbox/contributions/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore(Token).mjava","pathOld":"sandbox/contributions/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore(Token).mjava","sourceNew":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.search.highlight.FragmentScorer#scoreToken(org.apache.lucene.analysis.Token)\n\t */\n\tpublic float getTokenScore(Token token)\n\t{\n\t\tString termText=token.termText();\n\t\t\n\t\tWeightedTerm queryTerm=(WeightedTerm) termsToFind.get(termText);\n\t\tif(queryTerm==null)\n\t\t{\n\t\t\t//not a query term - return\n\t\t\treturn 0;\n\t\t}\n\t\t//found a query term - is it unique in this doc?\n\t\tif(!uniqueTermsInFragment.contains(termText))\n\t\t{\n\t\t\ttotalScore+=queryTerm.getWeight();\n\t\t\tuniqueTermsInFragment.add(termText);\n\t\t}\n\t\treturn queryTerm.getWeight();\n\t}\n\n","sourceOld":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.search.highlight.FragmentScorer#scoreToken(org.apache.lucene.analysis.Token)\n\t */\n\tpublic float getTokenScore(Token token)\n\t{\n\t\tString termText=token.termText();\n\t\t\n\t\tWeightedTerm queryTerm=(WeightedTerm) termsToFind.get(termText);\n\t\tif(queryTerm==null)\n\t\t{\n\t\t\t//not a query term - return\n\t\t\treturn 0;\n\t\t}\n\t\t//found a query term - is it unique in this fragment?\n\t\tif(!uniqueTermsInFragment.contains(termText))\n\t\t{\n\t\t\ttotalScore+=queryTerm.getWeight();\n\t\t\tuniqueTermsInFragment.add(termText);\n\t\t}\n\t\treturn queryTerm.getWeight();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore(Token).mjava","pathOld":"sandbox/contributions/highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer#getTokenScore(Token).mjava","sourceNew":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.search.highlight.FragmentScorer#scoreToken(org.apache.lucene.analysis.Token)\n\t */\n\tpublic float getTokenScore(Token token)\n\t{\n\t\tString termText=token.termText();\n\t\t\n\t\tWeightedTerm queryTerm=(WeightedTerm) termsToFind.get(termText);\n\t\tif(queryTerm==null)\n\t\t{\n\t\t\t//not a query term - return\n\t\t\treturn 0;\n\t\t}\n\t\t//found a query term - is it unique in this doc?\n\t\tif(!uniqueTermsInFragment.contains(termText))\n\t\t{\n\t\t\ttotalScore+=queryTerm.getWeight();\n\t\t\tuniqueTermsInFragment.add(termText);\n\t\t}\n\t\treturn queryTerm.getWeight();\n\t}\n\n","sourceOld":"\t/* (non-Javadoc)\n\t * @see org.apache.lucene.search.highlight.FragmentScorer#scoreToken(org.apache.lucene.analysis.Token)\n\t */\n\tpublic float getTokenScore(Token token)\n\t{\n\t\tString termText=token.termText();\n\t\t\n\t\tWeightedTerm queryTerm=(WeightedTerm) termsToFind.get(termText);\n\t\tif(queryTerm==null)\n\t\t{\n\t\t\t//not a query term - return\n\t\t\treturn 0;\n\t\t}\n\t\t//found a query term - is it unique in this doc?\n\t\tif(!uniqueTermsInFragment.contains(termText))\n\t\t{\n\t\t\ttotalScore+=queryTerm.getWeight();\n\t\t\tuniqueTermsInFragment.add(termText);\n\t\t}\n\t\treturn queryTerm.getWeight();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["d5a0b529d2a1f873f1f11db833a891b53909a7bc"],"208af5140b3fc022c05bdcc4dcd09d8cb847620f":["db2e1c87dfa9ca908febe5b39f6dd3dee2fbe9e2"],"d5a0b529d2a1f873f1f11db833a891b53909a7bc":["208af5140b3fc022c05bdcc4dcd09d8cb847620f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"db2e1c87dfa9ca908febe5b39f6dd3dee2fbe9e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"208af5140b3fc022c05bdcc4dcd09d8cb847620f":["d5a0b529d2a1f873f1f11db833a891b53909a7bc"],"d5a0b529d2a1f873f1f11db833a891b53909a7bc":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["db2e1c87dfa9ca908febe5b39f6dd3dee2fbe9e2"],"db2e1c87dfa9ca908febe5b39f6dd3dee2fbe9e2":["208af5140b3fc022c05bdcc4dcd09d8cb847620f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}