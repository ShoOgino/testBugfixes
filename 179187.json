{"path":"solr/core/src/test/org/apache/solr/update/MockingHttp2SolrClient#request(SolrRequest,String).mjava","commits":[{"id":"1a77e5e21cbd575a8240b0e3926164f15295f4e8","date":1544979500,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/MockingHttp2SolrClient#request(SolrRequest,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public NamedList<Object> request(SolrRequest request, String collection)\n      throws SolrServerException, IOException {\n    if (request instanceof UpdateRequest) {\n      UpdateRequest ur = (UpdateRequest) request;\n      if (!ur.getDeleteQuery().isEmpty())\n        return super.request(request, collection);\n    }\n\n    if (exp != null) {\n      if (oneExpPerReq) {\n        if (reqGotException.contains(request))\n          return super.request(request, collection);\n        else\n          reqGotException.add(request);\n      }\n\n      Exception e = exception();\n      if (e instanceof IOException) {\n        if (LuceneTestCase.random().nextBoolean()) {\n          throw (IOException) e;\n        } else {\n          throw new SolrServerException(e);\n        }\n      } else if (e instanceof SolrServerException) {\n        throw (SolrServerException) e;\n      } else {\n        throw new SolrServerException(e);\n      }\n    }\n\n    return super.request(request, collection);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/MockingHttp2SolrClient#request(SolrRequest,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/MockingHttp2SolrClient#request(SolrRequest,String).mjava","sourceNew":"  @Override\n  public NamedList<Object> request(@SuppressWarnings({\"rawtypes\"})SolrRequest request,\n                                   String collection)\n      throws SolrServerException, IOException {\n    if (request instanceof UpdateRequest) {\n      UpdateRequest ur = (UpdateRequest) request;\n      if (!ur.getDeleteQuery().isEmpty())\n        return super.request(request, collection);\n    }\n\n    if (exp != null) {\n      if (oneExpPerReq) {\n        if (reqGotException.contains(request))\n          return super.request(request, collection);\n        else\n          reqGotException.add(request);\n      }\n\n      Exception e = exception();\n      if (e instanceof IOException) {\n        if (LuceneTestCase.random().nextBoolean()) {\n          throw (IOException) e;\n        } else {\n          throw new SolrServerException(e);\n        }\n      } else if (e instanceof SolrServerException) {\n        throw (SolrServerException) e;\n      } else {\n        throw new SolrServerException(e);\n      }\n    }\n\n    return super.request(request, collection);\n  }\n\n","sourceOld":"  @Override\n  public NamedList<Object> request(SolrRequest request, String collection)\n      throws SolrServerException, IOException {\n    if (request instanceof UpdateRequest) {\n      UpdateRequest ur = (UpdateRequest) request;\n      if (!ur.getDeleteQuery().isEmpty())\n        return super.request(request, collection);\n    }\n\n    if (exp != null) {\n      if (oneExpPerReq) {\n        if (reqGotException.contains(request))\n          return super.request(request, collection);\n        else\n          reqGotException.add(request);\n      }\n\n      Exception e = exception();\n      if (e instanceof IOException) {\n        if (LuceneTestCase.random().nextBoolean()) {\n          throw (IOException) e;\n        } else {\n          throw new SolrServerException(e);\n        }\n      } else if (e instanceof SolrServerException) {\n        throw (SolrServerException) e;\n      } else {\n        throw new SolrServerException(e);\n      }\n    }\n\n    return super.request(request, collection);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"]},"commit2Childs":{"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["e98520789adb1d5ad05afb4956eca0944a929688"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}