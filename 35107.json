{"path":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testShallowMap().mjava","commits":[{"id":"32c94eeb61edc7099a6ce0cb3cf3aa037a0b6d53","date":1474025935,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testShallowMap().mjava","pathOld":"/dev/null","sourceNew":"  public void testShallowMap() {\n    NamedList nl = new NamedList();\n    nl.add(\"key1\", \"Val1\");\n    Map m = nl.asShallowMap();\n    m.put(\"key1\", \"Val1_\");\n    assertEquals(\"Val1_\", nl.get(\"key1\"));\n    assertEquals(\"Val1_\", m.get(\"key1\"));\n    assertEquals(0, nl.indexOf(\"key1\", 0));\n    m.putAll(Utils.makeMap(\"key1\", \"Val1__\", \"key2\", \"Val2\"));\n    assertEquals(\"Val1__\", nl.get(\"key1\"));\n    assertEquals(\"Val1__\", m.get(\"key1\"));\n    assertEquals(0, nl.indexOf(\"key1\", 0));\n    assertEquals(\"Val2\", nl.get(\"key2\"));\n    assertEquals(\"Val2\", m.get(\"key2\"));\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testShallowMap().mjava","pathOld":"/dev/null","sourceNew":"  public void testShallowMap() {\n    NamedList nl = new NamedList();\n    nl.add(\"key1\", \"Val1\");\n    Map m = nl.asShallowMap();\n    m.put(\"key1\", \"Val1_\");\n    assertEquals(\"Val1_\", nl.get(\"key1\"));\n    assertEquals(\"Val1_\", m.get(\"key1\"));\n    assertEquals(0, nl.indexOf(\"key1\", 0));\n    m.putAll(Utils.makeMap(\"key1\", \"Val1__\", \"key2\", \"Val2\"));\n    assertEquals(\"Val1__\", nl.get(\"key1\"));\n    assertEquals(\"Val1__\", m.get(\"key1\"));\n    assertEquals(0, nl.indexOf(\"key1\", 0));\n    assertEquals(\"Val2\", nl.get(\"key2\"));\n    assertEquals(\"Val2\", m.get(\"key2\"));\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testShallowMap().mjava","pathOld":"/dev/null","sourceNew":"  public void testShallowMap() {\n    NamedList nl = new NamedList();\n    nl.add(\"key1\", \"Val1\");\n    Map m = nl.asShallowMap();\n    m.put(\"key1\", \"Val1_\");\n    assertEquals(\"Val1_\", nl.get(\"key1\"));\n    assertEquals(\"Val1_\", m.get(\"key1\"));\n    assertEquals(0, nl.indexOf(\"key1\", 0));\n    m.putAll(Utils.makeMap(\"key1\", \"Val1__\", \"key2\", \"Val2\"));\n    assertEquals(\"Val1__\", nl.get(\"key1\"));\n    assertEquals(\"Val1__\", m.get(\"key1\"));\n    assertEquals(0, nl.indexOf(\"key1\", 0));\n    assertEquals(\"Val2\", nl.get(\"key2\"));\n    assertEquals(\"Val2\", m.get(\"key2\"));\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cba13865da71de3b9b0937fcbc66d726089356d","date":1537507909,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testShallowMap().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testShallowMap().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testShallowMap() {\n    NamedList nl = new NamedList();\n    nl.add(\"key1\", \"Val1\");\n    Map m = nl.asShallowMap();\n    m.put(\"key1\", \"Val1_\");\n    assertEquals(\"Val1_\", nl.get(\"key1\"));\n    assertEquals(\"Val1_\", m.get(\"key1\"));\n    assertEquals(0, nl.indexOf(\"key1\", 0));\n    m.putAll(Utils.makeMap(\"key1\", \"Val1__\", \"key2\", \"Val2\"));\n    assertEquals(\"Val1__\", nl.get(\"key1\"));\n    assertEquals(\"Val1__\", m.get(\"key1\"));\n    assertEquals(0, nl.indexOf(\"key1\", 0));\n    assertEquals(\"Val2\", nl.get(\"key2\"));\n    assertEquals(\"Val2\", m.get(\"key2\"));\n\n  }\n\n","sourceOld":"  public void testShallowMap() {\n    NamedList nl = new NamedList();\n    nl.add(\"key1\", \"Val1\");\n    Map m = nl.asShallowMap();\n    m.put(\"key1\", \"Val1_\");\n    assertEquals(\"Val1_\", nl.get(\"key1\"));\n    assertEquals(\"Val1_\", m.get(\"key1\"));\n    assertEquals(0, nl.indexOf(\"key1\", 0));\n    m.putAll(Utils.makeMap(\"key1\", \"Val1__\", \"key2\", \"Val2\"));\n    assertEquals(\"Val1__\", nl.get(\"key1\"));\n    assertEquals(\"Val1__\", m.get(\"key1\"));\n    assertEquals(0, nl.indexOf(\"key1\", 0));\n    assertEquals(\"Val2\", nl.get(\"key2\"));\n    assertEquals(\"Val2\", m.get(\"key2\"));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d35c84fdef07284c122012ca4000d3b7285a66e","date":1545962630,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testShallowMap().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testShallowMap().mjava","sourceNew":"  @Test\n  // commented out on: 24-Dec-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testShallowMap() {\n    NamedList nl = new NamedList();\n    nl.add(\"key1\", \"Val1\");\n    Map m = nl.asShallowMap();\n    m.put(\"key1\", \"Val1_\");\n    assertEquals(\"Val1_\", nl.get(\"key1\"));\n    assertEquals(\"Val1_\", m.get(\"key1\"));\n    assertEquals(0, nl.indexOf(\"key1\", 0));\n    m.putAll(Utils.makeMap(\"key1\", \"Val1__\", \"key2\", \"Val2\"));\n    assertEquals(\"Val1__\", nl.get(\"key1\"));\n    assertEquals(\"Val1__\", m.get(\"key1\"));\n    assertEquals(0, nl.indexOf(\"key1\", 0));\n    assertEquals(\"Val2\", nl.get(\"key2\"));\n    assertEquals(\"Val2\", m.get(\"key2\"));\n\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testShallowMap() {\n    NamedList nl = new NamedList();\n    nl.add(\"key1\", \"Val1\");\n    Map m = nl.asShallowMap();\n    m.put(\"key1\", \"Val1_\");\n    assertEquals(\"Val1_\", nl.get(\"key1\"));\n    assertEquals(\"Val1_\", m.get(\"key1\"));\n    assertEquals(0, nl.indexOf(\"key1\", 0));\n    m.putAll(Utils.makeMap(\"key1\", \"Val1__\", \"key2\", \"Val2\"));\n    assertEquals(\"Val1__\", nl.get(\"key1\"));\n    assertEquals(\"Val1__\", m.get(\"key1\"));\n    assertEquals(0, nl.indexOf(\"key1\", 0));\n    assertEquals(\"Val2\", nl.get(\"key2\"));\n    assertEquals(\"Val2\", m.get(\"key2\"));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testShallowMap().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/NamedListTest#testShallowMap().mjava","sourceNew":"  @Test\n  // commented out on: 24-Dec-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  @SuppressWarnings({\"unchecked\"})\n  public void testShallowMap() {\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList nl = new NamedList();\n    nl.add(\"key1\", \"Val1\");\n    @SuppressWarnings({\"rawtypes\"})\n    Map m = nl.asShallowMap();\n    m.put(\"key1\", \"Val1_\");\n    assertEquals(\"Val1_\", nl.get(\"key1\"));\n    assertEquals(\"Val1_\", m.get(\"key1\"));\n    assertEquals(0, nl.indexOf(\"key1\", 0));\n    m.putAll(Utils.makeMap(\"key1\", \"Val1__\", \"key2\", \"Val2\"));\n    assertEquals(\"Val1__\", nl.get(\"key1\"));\n    assertEquals(\"Val1__\", m.get(\"key1\"));\n    assertEquals(0, nl.indexOf(\"key1\", 0));\n    assertEquals(\"Val2\", nl.get(\"key2\"));\n    assertEquals(\"Val2\", m.get(\"key2\"));\n\n  }\n\n","sourceOld":"  @Test\n  // commented out on: 24-Dec-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testShallowMap() {\n    NamedList nl = new NamedList();\n    nl.add(\"key1\", \"Val1\");\n    Map m = nl.asShallowMap();\n    m.put(\"key1\", \"Val1_\");\n    assertEquals(\"Val1_\", nl.get(\"key1\"));\n    assertEquals(\"Val1_\", m.get(\"key1\"));\n    assertEquals(0, nl.indexOf(\"key1\", 0));\n    m.putAll(Utils.makeMap(\"key1\", \"Val1__\", \"key2\", \"Val2\"));\n    assertEquals(\"Val1__\", nl.get(\"key1\"));\n    assertEquals(\"Val1__\", m.get(\"key1\"));\n    assertEquals(0, nl.indexOf(\"key1\", 0));\n    assertEquals(\"Val2\", nl.get(\"key2\"));\n    assertEquals(\"Val2\", m.get(\"key2\"));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["8d35c84fdef07284c122012ca4000d3b7285a66e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","32c94eeb61edc7099a6ce0cb3cf3aa037a0b6d53"],"32c94eeb61edc7099a6ce0cb3cf3aa037a0b6d53":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cba13865da71de3b9b0937fcbc66d726089356d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba1b632c041956c93c41aa1143d16a567014891"],"8d35c84fdef07284c122012ca4000d3b7285a66e":["4cba13865da71de3b9b0937fcbc66d726089356d"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","32c94eeb61edc7099a6ce0cb3cf3aa037a0b6d53","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cba13865da71de3b9b0937fcbc66d726089356d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"32c94eeb61edc7099a6ce0cb3cf3aa037a0b6d53":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4cba13865da71de3b9b0937fcbc66d726089356d":["8d35c84fdef07284c122012ca4000d3b7285a66e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"8d35c84fdef07284c122012ca4000d3b7285a66e":["9ba1b632c041956c93c41aa1143d16a567014891"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}