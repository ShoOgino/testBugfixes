{"path":"modules/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/LaoBreakIterator#next().mjava","commits":[{"id":"b441220ceb933f50f32318ab45acc05d5943f3aa","date":1274352360,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/LaoBreakIterator#next().mjava","pathOld":"lucene/contrib/icu/src/java/org/apache/lucene/analysis/icu/segmentation/LaoBreakIterator#next().mjava","sourceNew":"  @Override\n  public int next() {\n    int current = current();\n    int next = rules.next();\n    if (next == BreakIterator.DONE)\n      return next;\n    else\n      next += workingOffset;\n    \n    char c = working.current();\n    int following = rules.next(); // lookahead\n    if (following != BreakIterator.DONE) {\n      following += workingOffset;\n      if (rules.getRuleStatus() == 0 && laoSet.contains(c) && verifyPushBack(current, next)) {\n        workingOffset = next - 1;\n        working.setText(text.getText(), text.getStart() + workingOffset, text.getLength() - workingOffset);\n        return next - 1;\n      }\n    rules.previous(); // undo the lookahead\n    }\n    \n    return next;\n  }\n\n","sourceOld":"  @Override\n  public int next() {\n    int current = current();\n    int next = rules.next();\n    if (next == BreakIterator.DONE)\n      return next;\n    else\n      next += workingOffset;\n    \n    char c = working.current();\n    int following = rules.next(); // lookahead\n    if (following != BreakIterator.DONE) {\n      following += workingOffset;\n      if (rules.getRuleStatus() == 0 && laoSet.contains(c) && verifyPushBack(current, next)) {\n        workingOffset = next - 1;\n        working.setText(text.getText(), text.getStart() + workingOffset, text.getLength() - workingOffset);\n        return next - 1;\n      }\n    rules.previous(); // undo the lookahead\n    }\n    \n    return next;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/LaoBreakIterator#next().mjava","pathOld":"modules/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/LaoBreakIterator#next().mjava","sourceNew":"  @Override\n  public int next() {\n    int current = current();\n    int next = rules.next();\n    if (next == BreakIterator.DONE)\n      return next;\n    else\n      next += workingOffset;\n    \n    char c = working.current();\n    int following = rules.next(); // lookahead\n    if (following != BreakIterator.DONE) {\n      following += workingOffset;\n      if (rules.getRuleStatus() == 0 && laoSet.contains(c) && verifyPushBack(current, next)) {\n        workingOffset = next - 1;\n        working.setText(text.getText(), text.getStart() + workingOffset, text.getLength() - workingOffset);\n        return next - 1;\n      }\n    rules.previous(); // undo the lookahead\n    }\n    \n    return next;\n  }\n\n","sourceOld":"  @Override\n  public int next() {\n    int current = current();\n    int next = rules.next();\n    if (next == BreakIterator.DONE)\n      return next;\n    else\n      next += workingOffset;\n    \n    char c = working.current();\n    int following = rules.next(); // lookahead\n    if (following != BreakIterator.DONE) {\n      following += workingOffset;\n      if (rules.getRuleStatus() == 0 && laoSet.contains(c) && verifyPushBack(current, next)) {\n        workingOffset = next - 1;\n        working.setText(text.getText(), text.getStart() + workingOffset, text.getLength() - workingOffset);\n        return next - 1;\n      }\n    rules.previous(); // undo the lookahead\n    }\n    \n    return next;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["b441220ceb933f50f32318ab45acc05d5943f3aa"],"b441220ceb933f50f32318ab45acc05d5943f3aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b441220ceb933f50f32318ab45acc05d5943f3aa":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b441220ceb933f50f32318ab45acc05d5943f3aa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}