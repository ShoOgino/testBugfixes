{"path":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#loadDictionaryResource(String).mjava","commits":[{"id":"b8322efc01a53e6f06cd7d11b9823c491c0aaf84","date":1441227220,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#loadDictionaryResource(String).mjava","pathOld":"/dev/null","sourceNew":"  /** This method was added, because Morfologik uses context classloader and fails to load from our classloader (bug with absolute path). */\n  static Dictionary loadDictionaryResource(String resource) {\n    Objects.requireNonNull(resource, \"Morfologik language code may not be null\");\n    final String dictPath = \"/morfologik/dictionaries/\" + resource + \".dict\";\n    final String metaPath = Dictionary.getExpectedFeaturesName(dictPath);\n\n    try (final InputStream dictIn = Objects.requireNonNull(Dictionary.class.getResourceAsStream(dictPath), \"Unable to find Morfologik dictionary: \" + dictPath);\n        final InputStream metaIn = Objects.requireNonNull(Dictionary.class.getResourceAsStream(metaPath), \"Unable to find Morfologik metadata: \" + metaPath)) {\n      return Dictionary.readAndClose(dictIn, metaIn);\n    } catch (IOException ioe) {\n      throw new RuntimeException(\"IOException while loading Morfologik dictionary and metadata.\", ioe);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"764c03efd7b564bc3dcdfe6a13f26035c8971596","date":1444295847,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/morfologik/src/java/org/apache/lucene/analysis/morfologik/MorfologikFilter#loadDictionaryResource(String).mjava","sourceNew":null,"sourceOld":"  /** This method was added, because Morfologik uses context classloader and fails to load from our classloader (bug with absolute path). */\n  static Dictionary loadDictionaryResource(String resource) {\n    Objects.requireNonNull(resource, \"Morfologik language code may not be null\");\n    final String dictPath = \"/morfologik/dictionaries/\" + resource + \".dict\";\n    final String metaPath = Dictionary.getExpectedFeaturesName(dictPath);\n\n    try (final InputStream dictIn = Objects.requireNonNull(Dictionary.class.getResourceAsStream(dictPath), \"Unable to find Morfologik dictionary: \" + dictPath);\n        final InputStream metaIn = Objects.requireNonNull(Dictionary.class.getResourceAsStream(metaPath), \"Unable to find Morfologik metadata: \" + metaPath)) {\n      return Dictionary.readAndClose(dictIn, metaIn);\n    } catch (IOException ioe) {\n      throw new RuntimeException(\"IOException while loading Morfologik dictionary and metadata.\", ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"764c03efd7b564bc3dcdfe6a13f26035c8971596":["b8322efc01a53e6f06cd7d11b9823c491c0aaf84"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b8322efc01a53e6f06cd7d11b9823c491c0aaf84":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["764c03efd7b564bc3dcdfe6a13f26035c8971596"]},"commit2Childs":{"764c03efd7b564bc3dcdfe6a13f26035c8971596":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b8322efc01a53e6f06cd7d11b9823c491c0aaf84"],"b8322efc01a53e6f06cd7d11b9823c491c0aaf84":["764c03efd7b564bc3dcdfe6a13f26035c8971596"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}