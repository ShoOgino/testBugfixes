{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointFormat.AssertingPointReader#intersect(String,IntersectVisitor).mjava","commits":[{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointFormat.AssertingPointReader#intersect(String,IntersectVisitor).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingDimensionalFormat.AssertingDimensionalReader#intersect(String,IntersectVisitor).mjava","sourceNew":"    @Override\n    public void intersect(String fieldName, IntersectVisitor visitor) throws IOException {\n      // TODO: wrap the visitor and make sure things are being reasonable\n      in.intersect(fieldName, visitor);\n    }\n\n","sourceOld":"    @Override\n    public void intersect(String fieldName, IntersectVisitor visitor) throws IOException {\n      // TODO: wrap the visitor and make sure things are being reasonable\n      in.intersect(fieldName, visitor);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"adc9dc8ef0ce617b940a039fd12f79e8b098cc7f","date":1456936072,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointFormat.AssertingPointReader#intersect(String,IntersectVisitor).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointFormat.AssertingPointReader#intersect(String,IntersectVisitor).mjava","sourceNew":"    @Override\n    public void intersect(String fieldName, IntersectVisitor visitor) throws IOException {\n      in.intersect(fieldName,\n                   new AssertingIntersectVisitor(in.getNumDimensions(fieldName), in.getBytesPerDimension(fieldName), visitor));\n    }\n\n","sourceOld":"    @Override\n    public void intersect(String fieldName, IntersectVisitor visitor) throws IOException {\n      // TODO: wrap the visitor and make sure things are being reasonable\n      in.intersect(fieldName, visitor);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointFormat.AssertingPointReader#intersect(String,IntersectVisitor).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointFormat.AssertingPointReader#intersect(String,IntersectVisitor).mjava","sourceNew":"    @Override\n    public void intersect(String fieldName, IntersectVisitor visitor) throws IOException {\n      in.intersect(fieldName,\n                   new AssertingIntersectVisitor(in.getNumDimensions(fieldName), in.getBytesPerDimension(fieldName), visitor));\n    }\n\n","sourceOld":"    @Override\n    public void intersect(String fieldName, IntersectVisitor visitor) throws IOException {\n      // TODO: wrap the visitor and make sure things are being reasonable\n      in.intersect(fieldName, visitor);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4522ffca5a1f420c6a02198c9332d7c596a30ca5","date":1457270822,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointsFormat.AssertingPointsReader#intersect(String,IntersectVisitor).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointFormat.AssertingPointReader#intersect(String,IntersectVisitor).mjava","sourceNew":"    @Override\n    public void intersect(String fieldName, IntersectVisitor visitor) throws IOException {\n      in.intersect(fieldName,\n                   new AssertingIntersectVisitor(in.getNumDimensions(fieldName), in.getBytesPerDimension(fieldName), visitor));\n    }\n\n","sourceOld":"    @Override\n    public void intersect(String fieldName, IntersectVisitor visitor) throws IOException {\n      in.intersect(fieldName,\n                   new AssertingIntersectVisitor(in.getNumDimensions(fieldName), in.getBytesPerDimension(fieldName), visitor));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["cab7a79353f33d1a94cd307bf33aa5148601ebe6","adc9dc8ef0ce617b940a039fd12f79e8b098cc7f"],"adc9dc8ef0ce617b940a039fd12f79e8b098cc7f":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"]},"commit2Childs":{"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","adc9dc8ef0ce617b940a039fd12f79e8b098cc7f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"],"adc9dc8ef0ce617b940a039fd12f79e8b098cc7f":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}