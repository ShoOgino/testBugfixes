{"path":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#insertTailWithOverFlow(DisiWrapper[Scorer]).mjava","commits":[{"id":"7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7","date":1429852340,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#insertTailWithOverFlow(DisiWrapper[Scorer]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#insertTailWithOverFlow(ScorerWrapper).mjava","sourceNew":"  /** Insert an entry in 'tail' and evict the least-costly scorer if full. */\n  private DisiWrapper<Scorer> insertTailWithOverFlow(DisiWrapper<Scorer> s) {\n    if (tailSize < tail.length) {\n      addTail(s);\n      return null;\n    } else if (tail.length >= 1) {\n      final DisiWrapper<Scorer> top = tail[0];\n      if (top.cost < s.cost) {\n        tail[0] = s;\n        downHeapCost(tail, tailSize);\n        return top;\n      }\n    }\n    return s;\n  }\n\n","sourceOld":"  /** Insert an entry in 'tail' and evict the least-costly scorer if full. */\n  private ScorerWrapper insertTailWithOverFlow(ScorerWrapper s) {\n    if (tailSize < tail.length) {\n      addTail(s);\n      return null;\n    } else if (tail.length >= 1) {\n      final ScorerWrapper top = tail[0];\n      if (top.cost < s.cost) {\n        tail[0] = s;\n        downHeapCost(tail, tailSize);\n        return top;\n      }\n    }\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#insertTailWithOverFlow(DisiWrapper).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MinShouldMatchSumScorer#insertTailWithOverFlow(DisiWrapper[Scorer]).mjava","sourceNew":"  /** Insert an entry in 'tail' and evict the least-costly scorer if full. */\n  private DisiWrapper insertTailWithOverFlow(DisiWrapper s) {\n    if (tailSize < tail.length) {\n      addTail(s);\n      return null;\n    } else if (tail.length >= 1) {\n      final DisiWrapper top = tail[0];\n      if (top.cost < s.cost) {\n        tail[0] = s;\n        downHeapCost(tail, tailSize);\n        return top;\n      }\n    }\n    return s;\n  }\n\n","sourceOld":"  /** Insert an entry in 'tail' and evict the least-costly scorer if full. */\n  private DisiWrapper<Scorer> insertTailWithOverFlow(DisiWrapper<Scorer> s) {\n    if (tailSize < tail.length) {\n      addTail(s);\n      return null;\n    } else if (tail.length >= 1) {\n      final DisiWrapper<Scorer> top = tail[0];\n      if (top.cost < s.cost) {\n        tail[0] = s;\n        downHeapCost(tail, tailSize);\n        return top;\n      }\n    }\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dd748bb245633a8195281556bb0e68a6ea97d18":["7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dd748bb245633a8195281556bb0e68a6ea97d18"]},"commit2Childs":{"7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}