{"path":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#testSolrJ().mjava","commits":[{"id":"c20fa646779d398a61a14cc6f9e00447475c0325","date":1423618933,"type":0,"author":"Tomas Eduardo Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#testSolrJ().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSolrJ() throws Exception  {\n    assertU(adoc(\"id\", \"1\", \"test_i_dv\", \"0\"));\n    assertU(adoc(\"id\", \"2\", \"test_i_dv\", \"1\"));\n    assertU(adoc(\"id\", \"3\", \"test_i_dv\", \"2\"));\n    assertU(commit());\n    \n    // Don't close this client, it would shutdown the CoreContainer\n    @SuppressWarnings(\"resource\")\n    SolrClient client = new EmbeddedSolrServer(h.getCore());\n    \n    SolrQuery q = new SolrQuery();\n    q.setQuery(\"*:*\");\n    q.addIntervalFacets(\"test_i_dv\", new String[]{\"[0,1]\",\"[2,*]\"});\n    QueryResponse response = client.query(q);\n    assertEquals(1, response.getIntervalFacets().size());\n    assertEquals(\"test_i_dv\", response.getIntervalFacets().get(0).getField());\n    assertEquals(2, response.getIntervalFacets().get(0).getIntervals().size());\n    assertEquals(\"[0,1]\", response.getIntervalFacets().get(0).getIntervals().get(0).getKey());\n    assertEquals(\"[2,*]\", response.getIntervalFacets().get(0).getIntervals().get(1).getKey());\n    \n    q = new SolrQuery();\n    q.setQuery(\"*:*\");\n    q.setFacet(true);\n    q.add(\"facet.interval\", \"{!key=foo}test_i_dv\");\n    q.add(\"f.test_i_dv.facet.interval.set\", \"{!key=first}[0,1]\");\n    q.add(\"f.test_i_dv.facet.interval.set\", \"{!key=second}[2,*]\");\n    response = client.query(q);\n    assertEquals(1, response.getIntervalFacets().size());\n    assertEquals(\"foo\", response.getIntervalFacets().get(0).getField());\n    assertEquals(2, response.getIntervalFacets().get(0).getIntervals().size());\n    assertEquals(\"first\", response.getIntervalFacets().get(0).getIntervals().get(0).getKey());\n    assertEquals(\"second\", response.getIntervalFacets().get(0).getIntervals().get(1).getKey());\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2252a4efd304715a7a65ac0c9b167d312d09997a","date":1427361661,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#testSolrJ().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#testSolrJ().mjava","sourceNew":"  @Test\n  public void testSolrJ() throws Exception  {\n    assertU(adoc(\"id\", \"1\", \"test_i_dv\", \"0\"));\n    assertU(adoc(\"id\", \"2\", \"test_i_dv\", \"1\"));\n    assertU(adoc(\"id\", \"3\", \"test_i_dv\", \"2\"));\n    assertU(commit());\n    \n    // Don't close this client, it would shutdown the CoreContainer\n    @SuppressWarnings(\"resource\")\n    SolrClient client = new EmbeddedSolrServer(h.getCoreContainer(), h.coreName);\n    \n    SolrQuery q = new SolrQuery();\n    q.setQuery(\"*:*\");\n    q.addIntervalFacets(\"test_i_dv\", new String[]{\"[0,1]\",\"[2,*]\"});\n    QueryResponse response = client.query(q);\n    assertEquals(1, response.getIntervalFacets().size());\n    assertEquals(\"test_i_dv\", response.getIntervalFacets().get(0).getField());\n    assertEquals(2, response.getIntervalFacets().get(0).getIntervals().size());\n    assertEquals(\"[0,1]\", response.getIntervalFacets().get(0).getIntervals().get(0).getKey());\n    assertEquals(\"[2,*]\", response.getIntervalFacets().get(0).getIntervals().get(1).getKey());\n    \n    q = new SolrQuery();\n    q.setQuery(\"*:*\");\n    q.setFacet(true);\n    q.add(\"facet.interval\", \"{!key=foo}test_i_dv\");\n    q.add(\"f.test_i_dv.facet.interval.set\", \"{!key=first}[0,1]\");\n    q.add(\"f.test_i_dv.facet.interval.set\", \"{!key=second}[2,*]\");\n    response = client.query(q);\n    assertEquals(1, response.getIntervalFacets().size());\n    assertEquals(\"foo\", response.getIntervalFacets().get(0).getField());\n    assertEquals(2, response.getIntervalFacets().get(0).getIntervals().size());\n    assertEquals(\"first\", response.getIntervalFacets().get(0).getIntervals().get(0).getKey());\n    assertEquals(\"second\", response.getIntervalFacets().get(0).getIntervals().get(1).getKey());\n    \n  }\n\n","sourceOld":"  @Test\n  public void testSolrJ() throws Exception  {\n    assertU(adoc(\"id\", \"1\", \"test_i_dv\", \"0\"));\n    assertU(adoc(\"id\", \"2\", \"test_i_dv\", \"1\"));\n    assertU(adoc(\"id\", \"3\", \"test_i_dv\", \"2\"));\n    assertU(commit());\n    \n    // Don't close this client, it would shutdown the CoreContainer\n    @SuppressWarnings(\"resource\")\n    SolrClient client = new EmbeddedSolrServer(h.getCore());\n    \n    SolrQuery q = new SolrQuery();\n    q.setQuery(\"*:*\");\n    q.addIntervalFacets(\"test_i_dv\", new String[]{\"[0,1]\",\"[2,*]\"});\n    QueryResponse response = client.query(q);\n    assertEquals(1, response.getIntervalFacets().size());\n    assertEquals(\"test_i_dv\", response.getIntervalFacets().get(0).getField());\n    assertEquals(2, response.getIntervalFacets().get(0).getIntervals().size());\n    assertEquals(\"[0,1]\", response.getIntervalFacets().get(0).getIntervals().get(0).getKey());\n    assertEquals(\"[2,*]\", response.getIntervalFacets().get(0).getIntervals().get(1).getKey());\n    \n    q = new SolrQuery();\n    q.setQuery(\"*:*\");\n    q.setFacet(true);\n    q.add(\"facet.interval\", \"{!key=foo}test_i_dv\");\n    q.add(\"f.test_i_dv.facet.interval.set\", \"{!key=first}[0,1]\");\n    q.add(\"f.test_i_dv.facet.interval.set\", \"{!key=second}[2,*]\");\n    response = client.query(q);\n    assertEquals(1, response.getIntervalFacets().size());\n    assertEquals(\"foo\", response.getIntervalFacets().get(0).getField());\n    assertEquals(2, response.getIntervalFacets().get(0).getIntervals().size());\n    assertEquals(\"first\", response.getIntervalFacets().get(0).getIntervals().get(0).getKey());\n    assertEquals(\"second\", response.getIntervalFacets().get(0).getIntervals().get(1).getKey());\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#testSolrJ().mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#testSolrJ().mjava","sourceNew":"  @Test\n  public void testSolrJ() throws Exception  {\n    assertU(adoc(\"id\", \"1\", \"test_i_dv\", \"0\"));\n    assertU(adoc(\"id\", \"2\", \"test_i_dv\", \"1\"));\n    assertU(adoc(\"id\", \"3\", \"test_i_dv\", \"2\"));\n    assertU(commit());\n    \n    // Don't close this client, it would shutdown the CoreContainer\n    @SuppressWarnings(\"resource\")\n    SolrClient client = new EmbeddedSolrServer(h.getCoreContainer(), h.coreName);\n    \n    SolrQuery q = new SolrQuery();\n    q.setQuery(\"*:*\");\n    q.addIntervalFacets(\"test_i_dv\", new String[]{\"[0,1]\",\"[2,*]\"});\n    QueryResponse response = client.query(q);\n    assertEquals(1, response.getIntervalFacets().size());\n    assertEquals(\"test_i_dv\", response.getIntervalFacets().get(0).getField());\n    assertEquals(2, response.getIntervalFacets().get(0).getIntervals().size());\n    assertEquals(\"[0,1]\", response.getIntervalFacets().get(0).getIntervals().get(0).getKey());\n    assertEquals(\"[2,*]\", response.getIntervalFacets().get(0).getIntervals().get(1).getKey());\n    \n    q = new SolrQuery();\n    q.setQuery(\"*:*\");\n    q.setFacet(true);\n    q.add(\"facet.interval\", \"{!key=foo}test_i_dv\");\n    q.add(\"f.test_i_dv.facet.interval.set\", \"{!key=first}[0,1]\");\n    q.add(\"f.test_i_dv.facet.interval.set\", \"{!key=second}[2,*]\");\n    response = client.query(q);\n    assertEquals(1, response.getIntervalFacets().size());\n    assertEquals(\"foo\", response.getIntervalFacets().get(0).getField());\n    assertEquals(2, response.getIntervalFacets().get(0).getIntervals().size());\n    assertEquals(\"first\", response.getIntervalFacets().get(0).getIntervals().get(0).getKey());\n    assertEquals(\"second\", response.getIntervalFacets().get(0).getIntervals().get(1).getKey());\n    \n  }\n\n","sourceOld":"  @Test\n  public void testSolrJ() throws Exception  {\n    assertU(adoc(\"id\", \"1\", \"test_i_dv\", \"0\"));\n    assertU(adoc(\"id\", \"2\", \"test_i_dv\", \"1\"));\n    assertU(adoc(\"id\", \"3\", \"test_i_dv\", \"2\"));\n    assertU(commit());\n    \n    // Don't close this client, it would shutdown the CoreContainer\n    @SuppressWarnings(\"resource\")\n    SolrClient client = new EmbeddedSolrServer(h.getCore());\n    \n    SolrQuery q = new SolrQuery();\n    q.setQuery(\"*:*\");\n    q.addIntervalFacets(\"test_i_dv\", new String[]{\"[0,1]\",\"[2,*]\"});\n    QueryResponse response = client.query(q);\n    assertEquals(1, response.getIntervalFacets().size());\n    assertEquals(\"test_i_dv\", response.getIntervalFacets().get(0).getField());\n    assertEquals(2, response.getIntervalFacets().get(0).getIntervals().size());\n    assertEquals(\"[0,1]\", response.getIntervalFacets().get(0).getIntervals().get(0).getKey());\n    assertEquals(\"[2,*]\", response.getIntervalFacets().get(0).getIntervals().get(1).getKey());\n    \n    q = new SolrQuery();\n    q.setQuery(\"*:*\");\n    q.setFacet(true);\n    q.add(\"facet.interval\", \"{!key=foo}test_i_dv\");\n    q.add(\"f.test_i_dv.facet.interval.set\", \"{!key=first}[0,1]\");\n    q.add(\"f.test_i_dv.facet.interval.set\", \"{!key=second}[2,*]\");\n    response = client.query(q);\n    assertEquals(1, response.getIntervalFacets().size());\n    assertEquals(\"foo\", response.getIntervalFacets().get(0).getField());\n    assertEquals(2, response.getIntervalFacets().get(0).getIntervals().size());\n    assertEquals(\"first\", response.getIntervalFacets().get(0).getIntervals().get(0).getKey());\n    assertEquals(\"second\", response.getIntervalFacets().get(0).getIntervals().get(1).getKey());\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["c20fa646779d398a61a14cc6f9e00447475c0325","2252a4efd304715a7a65ac0c9b167d312d09997a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c20fa646779d398a61a14cc6f9e00447475c0325":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2252a4efd304715a7a65ac0c9b167d312d09997a":["c20fa646779d398a61a14cc6f9e00447475c0325"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2252a4efd304715a7a65ac0c9b167d312d09997a"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c20fa646779d398a61a14cc6f9e00447475c0325"],"c20fa646779d398a61a14cc6f9e00447475c0325":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","2252a4efd304715a7a65ac0c9b167d312d09997a"],"2252a4efd304715a7a65ac0c9b167d312d09997a":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}