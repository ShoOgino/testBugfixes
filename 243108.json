{"path":"solr/core/src/test/org/apache/solr/search/join/BJQParserTest#testScoresForParent().mjava","commits":[{"id":"0b5dc820d653826ca85d4355563ef001f156c644","date":1438618492,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/join/BJQParserTest#testScoresForParent().mjava","pathOld":"/dev/null","sourceNew":"  public void testScoresForParent() throws Exception{\n    final ArrayList<ScoreMode> noNone = new ArrayList<>(Arrays.asList(ScoreMode.values()));\n    noNone.remove(ScoreMode.None);\n    final String notNoneMode = (noNone.get(random().nextInt(noNone.size()))).name();\n    \n    String leastScore = getLeastScore(\"child_s:l\");\n    assertTrue(leastScore+\" > 0.0\", Float.parseFloat(leastScore)>0.0);\n    final String notNoneLower = usually() ? notNoneMode: notNoneMode.toLowerCase(Locale.ROOT);\n    \n    assertQ(req(\"q\", \"{!parent which=\\\"parent_s:[* TO *]\\\" score=\"+notNoneLower+\"}child_s:l\",\"fl\",\"score\"),\n        \"//*[@numFound='6']\",\"(//float[@name='score'])[\"+(random().nextInt(6)+1)+\"]>='\"+leastScore+\"'\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0b5dc820d653826ca85d4355563ef001f156c644":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0b5dc820d653826ca85d4355563ef001f156c644"]},"commit2Childs":{"0b5dc820d653826ca85d4355563ef001f156c644":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0b5dc820d653826ca85d4355563ef001f156c644"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}