{"path":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReaderImpl.SegmentDocsAndPositionsEnum#getPayload().mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReaderImpl.SegmentDocsAndPositionsEnum#getPayload().mjava","pathOld":"/dev/null","sourceNew":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    public BytesRef getPayload() throws IOException {\n      assert lazyProxPointer == -1;\n      assert posPendingCount < freq;\n      if (!payloadPending) {\n        throw new IOException(\"Either no payload exists at this term position or an attempt was made to load it more than once.\");\n      }\n      if (payloadLength > payload.bytes.length) {\n        payload.grow(payloadLength);\n      }\n      proxIn.readBytes(payload.bytes, 0, payloadLength);\n      payload.length = payloadLength;\n      payloadPending = false;\n\n      return payload;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99cf56f3a650b908f7017a72f9d23940418f8a52","date":1284891529,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader.SegmentDocsAndPositionsEnum#getPayload().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReaderImpl.SegmentDocsAndPositionsEnum#getPayload().mjava","sourceNew":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    public BytesRef getPayload() throws IOException {\n      assert lazyProxPointer == -1;\n      assert posPendingCount < freq;\n      if (!payloadPending) {\n        throw new IOException(\"Either no payload exists at this term position or an attempt was made to load it more than once.\");\n      }\n      if (payloadLength > payload.bytes.length) {\n        payload.grow(payloadLength);\n      }\n      proxIn.readBytes(payload.bytes, 0, payloadLength);\n      payload.length = payloadLength;\n      payloadPending = false;\n\n      return payload;\n    }\n\n","sourceOld":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    public BytesRef getPayload() throws IOException {\n      assert lazyProxPointer == -1;\n      assert posPendingCount < freq;\n      if (!payloadPending) {\n        throw new IOException(\"Either no payload exists at this term position or an attempt was made to load it more than once.\");\n      }\n      if (payloadLength > payload.bytes.length) {\n        payload.grow(payloadLength);\n      }\n      proxIn.readBytes(payload.bytes, 0, payloadLength);\n      payload.length = payloadLength;\n      payloadPending = false;\n\n      return payload;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader.SegmentDocsAndPositionsAndPayloadsEnum#getPayload().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReaderImpl.SegmentDocsAndPositionsEnum#getPayload().mjava","sourceNew":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    public BytesRef getPayload() throws IOException {\n      assert lazyProxPointer == -1;\n      assert posPendingCount < freq;\n      if (!payloadPending) {\n        throw new IOException(\"Either no payload exists at this term position or an attempt was made to load it more than once.\");\n      }\n      if (payloadLength > payload.bytes.length) {\n        payload.grow(payloadLength);\n      }\n      proxIn.readBytes(payload.bytes, 0, payloadLength);\n      payload.length = payloadLength;\n      payloadPending = false;\n\n      return payload;\n    }\n\n","sourceOld":"    /** Returns the payload at this position, or null if no\n     *  payload was indexed. */\n    public BytesRef getPayload() throws IOException {\n      assert lazyProxPointer == -1;\n      assert posPendingCount < freq;\n      if (!payloadPending) {\n        throw new IOException(\"Either no payload exists at this term position or an attempt was made to load it more than once.\");\n      }\n      if (payloadLength > payload.bytes.length) {\n        payload.grow(payloadLength);\n      }\n      proxIn.readBytes(payload.bytes, 0, payloadLength);\n      payload.length = payloadLength;\n      payloadPending = false;\n\n      return payload;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","99cf56f3a650b908f7017a72f9d23940418f8a52"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["99cf56f3a650b908f7017a72f9d23940418f8a52"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","99cf56f3a650b908f7017a72f9d23940418f8a52"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"99cf56f3a650b908f7017a72f9d23940418f8a52":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}