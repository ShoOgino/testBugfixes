{"path":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","sourceNew":"  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the formatters\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n    \n    initialized = true;\n\n  }\n\n","sourceOld":"  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the formatters\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n    \n    initialized = true;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","sourceNew":"  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the formatters\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n    \n    initialized = true;\n\n  }\n\n","sourceOld":"  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the formatters\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n    \n    initialized = true;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","sourceNew":"  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the formatters\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n    \n    initialized = true;\n\n  }\n\n","sourceOld":"  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the formatters\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n    \n    initialized = true;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93ebcbd0a745c480ddb4d98779055ca8ff71de79","date":1316007529,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","sourceNew":"  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n    boundaryScanners.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the formatters\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n\n    // Load the BoundaryScanners\n    SolrBoundaryScanner boundaryScanner = solrCore.initPlugins(info.getChildren(\"boundaryScanner\"),\n        boundaryScanners, SolrBoundaryScanner.class, null);\n    if(boundaryScanner == null) boundaryScanner = new SimpleBoundaryScanner();\n    boundaryScanners.put(\"\", boundaryScanner);\n    boundaryScanners.put(null, boundaryScanner);\n    \n    initialized = true;\n  }\n\n","sourceOld":"  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the formatters\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n    \n    initialized = true;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","sourceNew":"  @Override\n  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n    boundaryScanners.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the formatters\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n\n    // Load the BoundaryScanners\n    SolrBoundaryScanner boundaryScanner = solrCore.initPlugins(info.getChildren(\"boundaryScanner\"),\n        boundaryScanners, SolrBoundaryScanner.class, null);\n    if(boundaryScanner == null) boundaryScanner = new SimpleBoundaryScanner();\n    boundaryScanners.put(\"\", boundaryScanner);\n    boundaryScanners.put(null, boundaryScanner);\n    \n    initialized = true;\n  }\n\n","sourceOld":"  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n    boundaryScanners.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the formatters\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n\n    // Load the BoundaryScanners\n    SolrBoundaryScanner boundaryScanner = solrCore.initPlugins(info.getChildren(\"boundaryScanner\"),\n        boundaryScanners, SolrBoundaryScanner.class, null);\n    if(boundaryScanner == null) boundaryScanner = new SimpleBoundaryScanner();\n    boundaryScanners.put(\"\", boundaryScanner);\n    boundaryScanners.put(null, boundaryScanner);\n    \n    initialized = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","sourceNew":"  @Override\n  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n    boundaryScanners.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the formatters\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n\n    // Load the BoundaryScanners\n    SolrBoundaryScanner boundaryScanner = solrCore.initPlugins(info.getChildren(\"boundaryScanner\"),\n        boundaryScanners, SolrBoundaryScanner.class, null);\n    if(boundaryScanner == null) boundaryScanner = new SimpleBoundaryScanner();\n    boundaryScanners.put(\"\", boundaryScanner);\n    boundaryScanners.put(null, boundaryScanner);\n    \n    initialized = true;\n  }\n\n","sourceOld":"  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n    boundaryScanners.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the formatters\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n\n    // Load the BoundaryScanners\n    SolrBoundaryScanner boundaryScanner = solrCore.initPlugins(info.getChildren(\"boundaryScanner\"),\n        boundaryScanners, SolrBoundaryScanner.class, null);\n    if(boundaryScanner == null) boundaryScanner = new SimpleBoundaryScanner();\n    boundaryScanners.put(\"\", boundaryScanner);\n    boundaryScanners.put(null, boundaryScanner);\n    \n    initialized = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6c9f7eff6416b5754a560ca6fbef0514a58381d","date":1376141742,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","sourceNew":"  @Override\n  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n    boundaryScanners.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the encoders\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n\n    // Load the BoundaryScanners\n    SolrBoundaryScanner boundaryScanner = solrCore.initPlugins(info.getChildren(\"boundaryScanner\"),\n        boundaryScanners, SolrBoundaryScanner.class, null);\n    if(boundaryScanner == null) boundaryScanner = new SimpleBoundaryScanner();\n    boundaryScanners.put(\"\", boundaryScanner);\n    boundaryScanners.put(null, boundaryScanner);\n    \n    initialized = true;\n  }\n\n","sourceOld":"  @Override\n  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n    boundaryScanners.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the formatters\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n\n    // Load the BoundaryScanners\n    SolrBoundaryScanner boundaryScanner = solrCore.initPlugins(info.getChildren(\"boundaryScanner\"),\n        boundaryScanners, SolrBoundaryScanner.class, null);\n    if(boundaryScanner == null) boundaryScanner = new SimpleBoundaryScanner();\n    boundaryScanners.put(\"\", boundaryScanner);\n    boundaryScanners.put(null, boundaryScanner);\n    \n    initialized = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","sourceNew":"  @Override\n  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n    boundaryScanners.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the encoders\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n\n    // Load the BoundaryScanners\n    SolrBoundaryScanner boundaryScanner = solrCore.initPlugins(info.getChildren(\"boundaryScanner\"),\n        boundaryScanners, SolrBoundaryScanner.class, null);\n    if(boundaryScanner == null) boundaryScanner = new SimpleBoundaryScanner();\n    boundaryScanners.put(\"\", boundaryScanner);\n    boundaryScanners.put(null, boundaryScanner);\n    \n    initialized = true;\n  }\n\n","sourceOld":"  @Override\n  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n    boundaryScanners.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the formatters\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n\n    // Load the BoundaryScanners\n    SolrBoundaryScanner boundaryScanner = solrCore.initPlugins(info.getChildren(\"boundaryScanner\"),\n        boundaryScanners, SolrBoundaryScanner.class, null);\n    if(boundaryScanner == null) boundaryScanner = new SimpleBoundaryScanner();\n    boundaryScanners.put(\"\", boundaryScanner);\n    boundaryScanners.put(null, boundaryScanner);\n    \n    initialized = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fc9f4a33c8fefeb1260aea04273a36b0d32378e","date":1421852764,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","sourceNew":"  @Override\n  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n    boundaryScanners.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the encoders\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n\n    // Load the BoundaryScanners\n    SolrBoundaryScanner boundaryScanner = solrCore.initPlugins(info.getChildren(\"boundaryScanner\"),\n        boundaryScanners, SolrBoundaryScanner.class, null);\n    if(boundaryScanner == null) boundaryScanner = new SimpleBoundaryScanner();\n    boundaryScanners.put(\"\", boundaryScanner);\n    boundaryScanners.put(null, boundaryScanner);\n\n  }\n\n","sourceOld":"  @Override\n  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n    boundaryScanners.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the encoders\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n\n    // Load the BoundaryScanners\n    SolrBoundaryScanner boundaryScanner = solrCore.initPlugins(info.getChildren(\"boundaryScanner\"),\n        boundaryScanners, SolrBoundaryScanner.class, null);\n    if(boundaryScanner == null) boundaryScanner = new SimpleBoundaryScanner();\n    boundaryScanners.put(\"\", boundaryScanner);\n    boundaryScanners.put(null, boundaryScanner);\n    \n    initialized = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"943562acd5eb31fa2fb7384927091158a85ce9fe","date":1428934087,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","sourceNew":"  @Override\n  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n    boundaryScanners.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the encoders\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n\n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n\n    // Load the BoundaryScanners\n    SolrBoundaryScanner boundaryScanner = solrCore.initPlugins(info.getChildren(\"boundaryScanner\"),\n        boundaryScanners, SolrBoundaryScanner.class, null);\n    if(boundaryScanner == null) boundaryScanner = new SimpleBoundaryScanner();\n    boundaryScanners.put(\"\", boundaryScanner);\n    boundaryScanners.put(null, boundaryScanner);\n\n  }\n\n","sourceOld":"  @Override\n  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n    boundaryScanners.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the encoders\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n    \n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n\n    // Load the BoundaryScanners\n    SolrBoundaryScanner boundaryScanner = solrCore.initPlugins(info.getChildren(\"boundaryScanner\"),\n        boundaryScanners, SolrBoundaryScanner.class, null);\n    if(boundaryScanner == null) boundaryScanner = new SimpleBoundaryScanner();\n    boundaryScanners.put(\"\", boundaryScanner);\n    boundaryScanners.put(null, boundaryScanner);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","sourceNew":"  @Override\n  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n    boundaryScanners.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) {\n      frag = new GapFragmenter();\n      solrCore.initDefaultPlugin(frag, SolrFragmenter.class);\n    }\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) {\n      fmt = new HtmlFormatter();\n      solrCore.initDefaultPlugin(fmt, SolrFormatter.class);\n    }\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the encoders\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) {\n      enc = new DefaultEncoder();\n      solrCore.initDefaultPlugin(enc, SolrEncoder.class);\n    }\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) {\n      fragListBuilder = new SimpleFragListBuilder();\n      solrCore.initDefaultPlugin(fragListBuilder, SolrFragListBuilder.class);\n    }\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n\n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) {\n      fragsBuilder = new ScoreOrderFragmentsBuilder();\n      solrCore.initDefaultPlugin(fragsBuilder, SolrFragmentsBuilder.class);\n    }\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n\n    // Load the BoundaryScanners\n    SolrBoundaryScanner boundaryScanner = solrCore.initPlugins(info.getChildren(\"boundaryScanner\"),\n        boundaryScanners, SolrBoundaryScanner.class, null);\n    if(boundaryScanner == null) {\n      boundaryScanner = new SimpleBoundaryScanner();\n      solrCore.initDefaultPlugin(boundaryScanner, SolrBoundaryScanner.class);\n    }\n    boundaryScanners.put(\"\", boundaryScanner);\n    boundaryScanners.put(null, boundaryScanner);\n\n  }\n\n","sourceOld":"  @Override\n  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n    boundaryScanners.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the encoders\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n\n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n\n    // Load the BoundaryScanners\n    SolrBoundaryScanner boundaryScanner = solrCore.initPlugins(info.getChildren(\"boundaryScanner\"),\n        boundaryScanners, SolrBoundaryScanner.class, null);\n    if(boundaryScanner == null) boundaryScanner = new SimpleBoundaryScanner();\n    boundaryScanners.put(\"\", boundaryScanner);\n    boundaryScanners.put(null, boundaryScanner);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","sourceNew":"  @Override\n  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n    boundaryScanners.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) {\n      frag = new GapFragmenter();\n      solrCore.initDefaultPlugin(frag, SolrFragmenter.class);\n    }\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) {\n      fmt = new HtmlFormatter();\n      solrCore.initDefaultPlugin(fmt, SolrFormatter.class);\n    }\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the encoders\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) {\n      enc = new DefaultEncoder();\n      solrCore.initDefaultPlugin(enc, SolrEncoder.class);\n    }\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) {\n      fragListBuilder = new SimpleFragListBuilder();\n      solrCore.initDefaultPlugin(fragListBuilder, SolrFragListBuilder.class);\n    }\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n\n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) {\n      fragsBuilder = new ScoreOrderFragmentsBuilder();\n      solrCore.initDefaultPlugin(fragsBuilder, SolrFragmentsBuilder.class);\n    }\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n\n    // Load the BoundaryScanners\n    SolrBoundaryScanner boundaryScanner = solrCore.initPlugins(info.getChildren(\"boundaryScanner\"),\n        boundaryScanners, SolrBoundaryScanner.class, null);\n    if(boundaryScanner == null) {\n      boundaryScanner = new SimpleBoundaryScanner();\n      solrCore.initDefaultPlugin(boundaryScanner, SolrBoundaryScanner.class);\n    }\n    boundaryScanners.put(\"\", boundaryScanner);\n    boundaryScanners.put(null, boundaryScanner);\n\n  }\n\n","sourceOld":"  @Override\n  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n    boundaryScanners.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) frag = new GapFragmenter();\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) fmt = new HtmlFormatter();\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the encoders\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) enc = new DefaultEncoder();\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) fragListBuilder = new SimpleFragListBuilder();\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n\n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) fragsBuilder = new ScoreOrderFragmentsBuilder();\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n\n    // Load the BoundaryScanners\n    SolrBoundaryScanner boundaryScanner = solrCore.initPlugins(info.getChildren(\"boundaryScanner\"),\n        boundaryScanners, SolrBoundaryScanner.class, null);\n    if(boundaryScanner == null) boundaryScanner = new SimpleBoundaryScanner();\n    boundaryScanners.put(\"\", boundaryScanner);\n    boundaryScanners.put(null, boundaryScanner);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2585c33d5d66a1c837c312221eb55ddb3c4300","date":1592493170,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#init(PluginInfo).mjava","sourceNew":"  @Override\n  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n    boundaryScanners.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\"), fragmenters, SolrFragmenter.class, null);\n    if (frag == null) {\n      frag = new GapFragmenter();\n      solrCore.initDefaultPlugin(frag, SolrFragmenter.class);\n    }\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters, SolrFormatter.class, null);\n    if (fmt == null) {\n      fmt = new HtmlFormatter();\n      solrCore.initDefaultPlugin(fmt, SolrFormatter.class);\n    }\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the encoders\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders, SolrEncoder.class, null);\n    if (enc == null) {\n      enc = new DefaultEncoder();\n      solrCore.initDefaultPlugin(enc, SolrEncoder.class);\n    }\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n            fragListBuilders, SolrFragListBuilder.class, null);\n    if (fragListBuilder == null) {\n      fragListBuilder = new SimpleFragListBuilder();\n      solrCore.initDefaultPlugin(fragListBuilder, SolrFragListBuilder.class);\n    }\n    fragListBuilders.put(\"\", fragListBuilder);\n    fragListBuilders.put(null, fragListBuilder);\n\n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n            fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if (fragsBuilder == null) {\n      fragsBuilder = new ScoreOrderFragmentsBuilder();\n      solrCore.initDefaultPlugin(fragsBuilder, SolrFragmentsBuilder.class);\n    }\n    fragmentsBuilders.put(\"\", fragsBuilder);\n    fragmentsBuilders.put(null, fragsBuilder);\n\n    // Load the BoundaryScanners\n    SolrBoundaryScanner boundaryScanner = solrCore.initPlugins(info.getChildren(\"boundaryScanner\"),\n            boundaryScanners, SolrBoundaryScanner.class, null);\n    if (boundaryScanner == null) {\n      boundaryScanner = new SimpleBoundaryScanner();\n      solrCore.initDefaultPlugin(boundaryScanner, SolrBoundaryScanner.class);\n    }\n    boundaryScanners.put(\"\", boundaryScanner);\n    boundaryScanners.put(null, boundaryScanner);\n\n  }\n\n","sourceOld":"  @Override\n  public void init(PluginInfo info) {\n    formatters.clear();\n    encoders.clear();\n    fragmenters.clear();\n    fragListBuilders.clear();\n    fragmentsBuilders.clear();\n    boundaryScanners.clear();\n\n    // Load the fragmenters\n    SolrFragmenter frag = solrCore.initPlugins(info.getChildren(\"fragmenter\") , fragmenters,SolrFragmenter.class,null);\n    if (frag == null) {\n      frag = new GapFragmenter();\n      solrCore.initDefaultPlugin(frag, SolrFragmenter.class);\n    }\n    fragmenters.put(\"\", frag);\n    fragmenters.put(null, frag);\n\n    // Load the formatters\n    SolrFormatter fmt = solrCore.initPlugins(info.getChildren(\"formatter\"), formatters,SolrFormatter.class,null);\n    if (fmt == null) {\n      fmt = new HtmlFormatter();\n      solrCore.initDefaultPlugin(fmt, SolrFormatter.class);\n    }\n    formatters.put(\"\", fmt);\n    formatters.put(null, fmt);\n\n    // Load the encoders\n    SolrEncoder enc = solrCore.initPlugins(info.getChildren(\"encoder\"), encoders,SolrEncoder.class,null);\n    if (enc == null) {\n      enc = new DefaultEncoder();\n      solrCore.initDefaultPlugin(enc, SolrEncoder.class);\n    }\n    encoders.put(\"\", enc);\n    encoders.put(null, enc);\n\n    // Load the FragListBuilders\n    SolrFragListBuilder fragListBuilder = solrCore.initPlugins(info.getChildren(\"fragListBuilder\"),\n        fragListBuilders, SolrFragListBuilder.class, null );\n    if( fragListBuilder == null ) {\n      fragListBuilder = new SimpleFragListBuilder();\n      solrCore.initDefaultPlugin(fragListBuilder, SolrFragListBuilder.class);\n    }\n    fragListBuilders.put( \"\", fragListBuilder );\n    fragListBuilders.put( null, fragListBuilder );\n\n    // Load the FragmentsBuilders\n    SolrFragmentsBuilder fragsBuilder = solrCore.initPlugins(info.getChildren(\"fragmentsBuilder\"),\n        fragmentsBuilders, SolrFragmentsBuilder.class, null);\n    if( fragsBuilder == null ) {\n      fragsBuilder = new ScoreOrderFragmentsBuilder();\n      solrCore.initDefaultPlugin(fragsBuilder, SolrFragmentsBuilder.class);\n    }\n    fragmentsBuilders.put( \"\", fragsBuilder );\n    fragmentsBuilders.put( null, fragsBuilder );\n\n    // Load the BoundaryScanners\n    SolrBoundaryScanner boundaryScanner = solrCore.initPlugins(info.getChildren(\"boundaryScanner\"),\n        boundaryScanners, SolrBoundaryScanner.class, null);\n    if(boundaryScanner == null) {\n      boundaryScanner = new SimpleBoundaryScanner();\n      solrCore.initDefaultPlugin(boundaryScanner, SolrBoundaryScanner.class);\n    }\n    boundaryScanners.put(\"\", boundaryScanner);\n    boundaryScanners.put(null, boundaryScanner);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["943562acd5eb31fa2fb7384927091158a85ce9fe"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["93ebcbd0a745c480ddb4d98779055ca8ff71de79","7530de27b87b961b51f01bd1299b7004d46e8823"],"93ebcbd0a745c480ddb4d98779055ca8ff71de79":["c26f00b574427b55127e869b935845554afde1fa"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["7530de27b87b961b51f01bd1299b7004d46e8823","d6c9f7eff6416b5754a560ca6fbef0514a58381d"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"816521ebaad5add9cb96bb88c577394e2938c40b":["943562acd5eb31fa2fb7384927091158a85ce9fe"],"943562acd5eb31fa2fb7384927091158a85ce9fe":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e"],"2fc9f4a33c8fefeb1260aea04273a36b0d32378e":["d6c9f7eff6416b5754a560ca6fbef0514a58381d"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["816521ebaad5add9cb96bb88c577394e2938c40b"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d6c9f7eff6416b5754a560ca6fbef0514a58381d":["7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7530de27b87b961b51f01bd1299b7004d46e8823":["93ebcbd0a745c480ddb4d98779055ca8ff71de79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"93ebcbd0a745c480ddb4d98779055ca8ff71de79":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c26f00b574427b55127e869b935845554afde1fa":["93ebcbd0a745c480ddb4d98779055ca8ff71de79"],"816521ebaad5add9cb96bb88c577394e2938c40b":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"943562acd5eb31fa2fb7384927091158a85ce9fe":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b"],"2fc9f4a33c8fefeb1260aea04273a36b0d32378e":["943562acd5eb31fa2fb7384927091158a85ce9fe"],"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"d6c9f7eff6416b5754a560ca6fbef0514a58381d":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","2fc9f4a33c8fefeb1260aea04273a36b0d32378e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","d6c9f7eff6416b5754a560ca6fbef0514a58381d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","d3fcb70cf561547c7bb1506e0cf32ca7b1287064","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}