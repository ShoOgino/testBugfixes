{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask#traversalSize().mjava","commits":[{"id":"1ebcfbd9662f54e73fdfe1f4d675ea39531fb9b0","date":1174485154,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask#traversalSize().mjava","pathOld":"/dev/null","sourceNew":"  /**\r\n   * Specify the number of hits to traverse.  Tasks should override this if they want to restrict the number\n   * of hits that are traversed when {@link #withTraverse()} is true. Must be greater than 0.\n   *\n   * Read task calculates the traversal as: Math.min(hits.length(), traversalSize())\n   * @return Integer.MAX_VALUE\n   */\n  public int traversalSize()\n  {\n    return Integer.MAX_VALUE;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd4e80edfd616a2da1bb91fd01d54d8d0b9e10b1","date":1174621692,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask#traversalSize().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask#traversalSize().mjava","sourceNew":"  /**\r\n   * Specify the number of hits to traverse.  Tasks should override this if they want to restrict the number\r\n   * of hits that are traversed when {@link #withTraverse()} is true. Must be greater than 0.\r\n   *\r\n   * Read task calculates the traversal as: Math.min(hits.length(), traversalSize())\r\n   * @return Integer.MAX_VALUE\r\n   */\r\n  public int traversalSize()\r\n  {\r\n    return Integer.MAX_VALUE;\r\n  }\r\n\n","sourceOld":"  /**\r\n   * Specify the number of hits to traverse.  Tasks should override this if they want to restrict the number\n   * of hits that are traversed when {@link #withTraverse()} is true. Must be greater than 0.\n   *\n   * Read task calculates the traversal as: Math.min(hits.length(), traversalSize())\n   * @return Integer.MAX_VALUE\n   */\n  public int traversalSize()\n  {\n    return Integer.MAX_VALUE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3738fa43eaa87dc7b393fe98b04cde1019e20bac","date":1175557034,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask#traversalSize().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask#traversalSize().mjava","sourceNew":"  /**\n   * Specify the number of hits to traverse.  Tasks should override this if they want to restrict the number\n   * of hits that are traversed when {@link #withTraverse()} is true. Must be greater than 0.\n   *\n   * Read task calculates the traversal as: Math.min(hits.length(), traversalSize())\n   * @return Integer.MAX_VALUE\n   */\n  public int traversalSize()\n  {\n    return Integer.MAX_VALUE;\n  }\n\n","sourceOld":"  /**\r\n   * Specify the number of hits to traverse.  Tasks should override this if they want to restrict the number\r\n   * of hits that are traversed when {@link #withTraverse()} is true. Must be greater than 0.\r\n   *\r\n   * Read task calculates the traversal as: Math.min(hits.length(), traversalSize())\r\n   * @return Integer.MAX_VALUE\r\n   */\r\n  public int traversalSize()\r\n  {\r\n    return Integer.MAX_VALUE;\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cef13333102a2c287543f5141a0f24ccca005b2e","date":1201185584,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask#traversalSize().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask#traversalSize().mjava","sourceNew":"  /**\n   * Specify the number of hits to traverse.  Tasks should override this if they want to restrict the number\n   * of hits that are traversed when {@link #withTraverse()} is true. Must be greater than 0.\n   * <p/>\n   * Read task calculates the traversal as: Math.min(hits.length(), traversalSize())\n   *\n   * @return Integer.MAX_VALUE\n   */\n  public int traversalSize() {\n    return Integer.MAX_VALUE;\n  }\n\n","sourceOld":"  /**\n   * Specify the number of hits to traverse.  Tasks should override this if they want to restrict the number\n   * of hits that are traversed when {@link #withTraverse()} is true. Must be greater than 0.\n   *\n   * Read task calculates the traversal as: Math.min(hits.length(), traversalSize())\n   * @return Integer.MAX_VALUE\n   */\n  public int traversalSize()\n  {\n    return Integer.MAX_VALUE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask#traversalSize().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/ReadTask#traversalSize().mjava","sourceNew":"  /**\n   * Specify the number of hits to traverse.  Tasks should override this if they want to restrict the number\n   * of hits that are traversed when {@link #withTraverse()} is true. Must be greater than 0.\n   * <p/>\n   * Read task calculates the traversal as: Math.min(hits.length(), traversalSize())\n   *\n   * @return Integer.MAX_VALUE\n   */\n  public int traversalSize() {\n    return Integer.MAX_VALUE;\n  }\n\n","sourceOld":"  /**\n   * Specify the number of hits to traverse.  Tasks should override this if they want to restrict the number\n   * of hits that are traversed when {@link #withTraverse()} is true. Must be greater than 0.\n   * <p/>\n   * Read task calculates the traversal as: Math.min(hits.length(), traversalSize())\n   *\n   * @return Integer.MAX_VALUE\n   */\n  public int traversalSize() {\n    return Integer.MAX_VALUE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1ebcfbd9662f54e73fdfe1f4d675ea39531fb9b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cef13333102a2c287543f5141a0f24ccca005b2e":["3738fa43eaa87dc7b393fe98b04cde1019e20bac"],"bd4e80edfd616a2da1bb91fd01d54d8d0b9e10b1":["1ebcfbd9662f54e73fdfe1f4d675ea39531fb9b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3738fa43eaa87dc7b393fe98b04cde1019e20bac":["bd4e80edfd616a2da1bb91fd01d54d8d0b9e10b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cef13333102a2c287543f5141a0f24ccca005b2e"]},"commit2Childs":{"1ebcfbd9662f54e73fdfe1f4d675ea39531fb9b0":["bd4e80edfd616a2da1bb91fd01d54d8d0b9e10b1"],"cef13333102a2c287543f5141a0f24ccca005b2e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1ebcfbd9662f54e73fdfe1f4d675ea39531fb9b0"],"bd4e80edfd616a2da1bb91fd01d54d8d0b9e10b1":["3738fa43eaa87dc7b393fe98b04cde1019e20bac"],"3738fa43eaa87dc7b393fe98b04cde1019e20bac":["cef13333102a2c287543f5141a0f24ccca005b2e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}