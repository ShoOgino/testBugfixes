{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","sourceNew":"  //@Ignore(\"wrong finalOffset: https://issues.apache.org/jira/browse/LUCENE-3971\")\n  public void testRandomMaps() throws Exception {\n    for (int i = 0; i < 100; i++) {\n      final NormalizeCharMap map = randomMap();\n      Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n          return new TokenStreamComponents(tokenizer, tokenizer);\n        }\n\n        @Override\n        protected Reader initReader(Reader reader) {\n          return new MappingCharFilter(map, CharReader.get(reader));\n        }\n      };\n      int numRounds = RANDOM_MULTIPLIER * 100;\n      checkRandomData(random(), analyzer, numRounds);\n    }\n  }\n\n","sourceOld":"  //@Ignore(\"wrong finalOffset: https://issues.apache.org/jira/browse/LUCENE-3971\")\n  public void testRandomMaps() throws Exception {\n    for (int i = 0; i < 100; i++) {\n      final NormalizeCharMap map = randomMap();\n      Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n          return new TokenStreamComponents(tokenizer, tokenizer);\n        }\n\n        @Override\n        protected Reader initReader(Reader reader) {\n          return new MappingCharFilter(map, CharReader.get(reader));\n        }\n      };\n      int numRounds = RANDOM_MULTIPLIER * 100;\n      checkRandomData(random(), analyzer, numRounds);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d135d0e0e3d4b83c56b666e6cf8c585c17d2fff9","date":1334679794,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","sourceNew":"  //@Ignore(\"wrong finalOffset: https://issues.apache.org/jira/browse/LUCENE-3971\")\n  public void testRandomMaps() throws Exception {\n    int numIterations = atLeast(10);\n    for (int i = 0; i < numIterations; i++) {\n      final NormalizeCharMap map = randomMap();\n      Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n          return new TokenStreamComponents(tokenizer, tokenizer);\n        }\n\n        @Override\n        protected Reader initReader(Reader reader) {\n          return new MappingCharFilter(map, CharReader.get(reader));\n        }\n      };\n      int numRounds = 100;\n      checkRandomData(random(), analyzer, numRounds);\n    }\n  }\n\n","sourceOld":"  //@Ignore(\"wrong finalOffset: https://issues.apache.org/jira/browse/LUCENE-3971\")\n  public void testRandomMaps() throws Exception {\n    for (int i = 0; i < 100; i++) {\n      final NormalizeCharMap map = randomMap();\n      Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n          return new TokenStreamComponents(tokenizer, tokenizer);\n        }\n\n        @Override\n        protected Reader initReader(Reader reader) {\n          return new MappingCharFilter(map, CharReader.get(reader));\n        }\n      };\n      int numRounds = RANDOM_MULTIPLIER * 100;\n      checkRandomData(random(), analyzer, numRounds);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"56584ae6fa4912e4dd6e818a7da3799cf807234f","date":1339586560,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","sourceNew":"  //@Ignore(\"wrong finalOffset: https://issues.apache.org/jira/browse/LUCENE-3971\")\n  public void testRandomMaps() throws Exception {\n    int numIterations = atLeast(10);\n    for (int i = 0; i < numIterations; i++) {\n      final NormalizeCharMap map = randomMap();\n      Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n          return new TokenStreamComponents(tokenizer, tokenizer);\n        }\n\n        @Override\n        protected Reader initReader(String fieldName, Reader reader) {\n          return new MappingCharFilter(map, CharReader.get(reader));\n        }\n      };\n      int numRounds = 100;\n      checkRandomData(random(), analyzer, numRounds);\n    }\n  }\n\n","sourceOld":"  //@Ignore(\"wrong finalOffset: https://issues.apache.org/jira/browse/LUCENE-3971\")\n  public void testRandomMaps() throws Exception {\n    int numIterations = atLeast(10);\n    for (int i = 0; i < numIterations; i++) {\n      final NormalizeCharMap map = randomMap();\n      Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n          return new TokenStreamComponents(tokenizer, tokenizer);\n        }\n\n        @Override\n        protected Reader initReader(Reader reader) {\n          return new MappingCharFilter(map, CharReader.get(reader));\n        }\n      };\n      int numRounds = 100;\n      checkRandomData(random(), analyzer, numRounds);\n    }\n  }\n\n","bugFix":["6db8a0fd9d6e51895dc63675eeeb38256ea3b873"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16f1a3d2871e09ea6774ec5e5d5c21f853a7d5d6","date":1341575807,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","sourceNew":"  //@Ignore(\"wrong finalOffset: https://issues.apache.org/jira/browse/LUCENE-3971\")\n  public void testRandomMaps() throws Exception {\n    int numIterations = atLeast(3);\n    for (int i = 0; i < numIterations; i++) {\n      final NormalizeCharMap map = randomMap();\n      Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n          return new TokenStreamComponents(tokenizer, tokenizer);\n        }\n\n        @Override\n        protected Reader initReader(String fieldName, Reader reader) {\n          return new MappingCharFilter(map, CharReader.get(reader));\n        }\n      };\n      int numRounds = 100;\n      checkRandomData(random(), analyzer, numRounds);\n    }\n  }\n\n","sourceOld":"  //@Ignore(\"wrong finalOffset: https://issues.apache.org/jira/browse/LUCENE-3971\")\n  public void testRandomMaps() throws Exception {\n    int numIterations = atLeast(10);\n    for (int i = 0; i < numIterations; i++) {\n      final NormalizeCharMap map = randomMap();\n      Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n          return new TokenStreamComponents(tokenizer, tokenizer);\n        }\n\n        @Override\n        protected Reader initReader(String fieldName, Reader reader) {\n          return new MappingCharFilter(map, CharReader.get(reader));\n        }\n      };\n      int numRounds = 100;\n      checkRandomData(random(), analyzer, numRounds);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e7f30683f53928b2fce016e6430c9795caff22","date":1341839598,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","sourceNew":"  //@Ignore(\"wrong finalOffset: https://issues.apache.org/jira/browse/LUCENE-3971\")\n  public void testRandomMaps() throws Exception {\n    int numIterations = atLeast(3);\n    for (int i = 0; i < numIterations; i++) {\n      final NormalizeCharMap map = randomMap();\n      Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n          return new TokenStreamComponents(tokenizer, tokenizer);\n        }\n\n        @Override\n        protected Reader initReader(String fieldName, Reader reader) {\n          return new MappingCharFilter(map, CharReader.get(reader));\n        }\n      };\n      int numRounds = 100;\n      checkRandomData(random(), analyzer, numRounds);\n    }\n  }\n\n","sourceOld":"  //@Ignore(\"wrong finalOffset: https://issues.apache.org/jira/browse/LUCENE-3971\")\n  public void testRandomMaps() throws Exception {\n    int numIterations = atLeast(10);\n    for (int i = 0; i < numIterations; i++) {\n      final NormalizeCharMap map = randomMap();\n      Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n          return new TokenStreamComponents(tokenizer, tokenizer);\n        }\n\n        @Override\n        protected Reader initReader(String fieldName, Reader reader) {\n          return new MappingCharFilter(map, CharReader.get(reader));\n        }\n      };\n      int numRounds = 100;\n      checkRandomData(random(), analyzer, numRounds);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc706b1e03a539d44d99998108feb684bb44cbb2","date":1342522408,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","sourceNew":"  //@Ignore(\"wrong finalOffset: https://issues.apache.org/jira/browse/LUCENE-3971\")\n  public void testRandomMaps() throws Exception {\n    int numIterations = atLeast(3);\n    for (int i = 0; i < numIterations; i++) {\n      final NormalizeCharMap map = randomMap();\n      Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n          return new TokenStreamComponents(tokenizer, tokenizer);\n        }\n\n        @Override\n        protected Reader initReader(String fieldName, Reader reader) {\n          return new MappingCharFilter(map, reader);\n        }\n      };\n      int numRounds = 100;\n      checkRandomData(random(), analyzer, numRounds);\n    }\n  }\n\n","sourceOld":"  //@Ignore(\"wrong finalOffset: https://issues.apache.org/jira/browse/LUCENE-3971\")\n  public void testRandomMaps() throws Exception {\n    int numIterations = atLeast(3);\n    for (int i = 0; i < numIterations; i++) {\n      final NormalizeCharMap map = randomMap();\n      Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n          return new TokenStreamComponents(tokenizer, tokenizer);\n        }\n\n        @Override\n        protected Reader initReader(String fieldName, Reader reader) {\n          return new MappingCharFilter(map, CharReader.get(reader));\n        }\n      };\n      int numRounds = 100;\n      checkRandomData(random(), analyzer, numRounds);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","sourceNew":"  //@Ignore(\"wrong finalOffset: https://issues.apache.org/jira/browse/LUCENE-3971\")\n  public void testRandomMaps() throws Exception {\n    int numIterations = atLeast(3);\n    for (int i = 0; i < numIterations; i++) {\n      final NormalizeCharMap map = randomMap();\n      Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n          return new TokenStreamComponents(tokenizer, tokenizer);\n        }\n\n        @Override\n        protected Reader initReader(String fieldName, Reader reader) {\n          return new MappingCharFilter(map, reader);\n        }\n      };\n      int numRounds = 100;\n      checkRandomData(random(), analyzer, numRounds);\n    }\n  }\n\n","sourceOld":"  //@Ignore(\"wrong finalOffset: https://issues.apache.org/jira/browse/LUCENE-3971\")\n  public void testRandomMaps() throws Exception {\n    int numIterations = atLeast(10);\n    for (int i = 0; i < numIterations; i++) {\n      final NormalizeCharMap map = randomMap();\n      Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n          return new TokenStreamComponents(tokenizer, tokenizer);\n        }\n\n        @Override\n        protected Reader initReader(String fieldName, Reader reader) {\n          return new MappingCharFilter(map, CharReader.get(reader));\n        }\n      };\n      int numRounds = 100;\n      checkRandomData(random(), analyzer, numRounds);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","sourceNew":"  //@Ignore(\"wrong finalOffset: https://issues.apache.org/jira/browse/LUCENE-3971\")\n  public void testRandomMaps() throws Exception {\n    int numIterations = atLeast(3);\n    for (int i = 0; i < numIterations; i++) {\n      final NormalizeCharMap map = randomMap();\n      Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n          return new TokenStreamComponents(tokenizer, tokenizer);\n        }\n\n        @Override\n        protected Reader initReader(String fieldName, Reader reader) {\n          return new MappingCharFilter(map, reader);\n        }\n      };\n      int numRounds = 100;\n      checkRandomData(random(), analyzer, numRounds);\n    }\n  }\n\n","sourceOld":"  //@Ignore(\"wrong finalOffset: https://issues.apache.org/jira/browse/LUCENE-3971\")\n  public void testRandomMaps() throws Exception {\n    int numIterations = atLeast(3);\n    for (int i = 0; i < numIterations; i++) {\n      final NormalizeCharMap map = randomMap();\n      Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n          return new TokenStreamComponents(tokenizer, tokenizer);\n        }\n\n        @Override\n        protected Reader initReader(String fieldName, Reader reader) {\n          return new MappingCharFilter(map, CharReader.get(reader));\n        }\n      };\n      int numRounds = 100;\n      checkRandomData(random(), analyzer, numRounds);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","sourceNew":"  //@Ignore(\"wrong finalOffset: https://issues.apache.org/jira/browse/LUCENE-3971\")\n  public void testRandomMaps() throws Exception {\n    int numIterations = atLeast(3);\n    for (int i = 0; i < numIterations; i++) {\n      final NormalizeCharMap map = randomMap();\n      Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName) {\n          Tokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n          return new TokenStreamComponents(tokenizer, tokenizer);\n        }\n\n        @Override\n        protected Reader initReader(String fieldName, Reader reader) {\n          return new MappingCharFilter(map, reader);\n        }\n      };\n      int numRounds = 100;\n      checkRandomData(random(), analyzer, numRounds);\n    }\n  }\n\n","sourceOld":"  //@Ignore(\"wrong finalOffset: https://issues.apache.org/jira/browse/LUCENE-3971\")\n  public void testRandomMaps() throws Exception {\n    int numIterations = atLeast(3);\n    for (int i = 0; i < numIterations; i++) {\n      final NormalizeCharMap map = randomMap();\n      Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n          Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n          return new TokenStreamComponents(tokenizer, tokenizer);\n        }\n\n        @Override\n        protected Reader initReader(String fieldName, Reader reader) {\n          return new MappingCharFilter(map, reader);\n        }\n      };\n      int numRounds = 100;\n      checkRandomData(random(), analyzer, numRounds);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","sourceNew":"  //@Ignore(\"wrong finalOffset: https://issues.apache.org/jira/browse/LUCENE-3971\")\n  public void testRandomMaps() throws Exception {\n    int numIterations = atLeast(3);\n    for (int i = 0; i < numIterations; i++) {\n      final NormalizeCharMap map = randomMap();\n      Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName) {\n          Tokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n          return new TokenStreamComponents(tokenizer, tokenizer);\n        }\n\n        @Override\n        protected Reader initReader(String fieldName, Reader reader) {\n          return new MappingCharFilter(map, reader);\n        }\n      };\n      int numRounds = 100;\n      checkRandomData(random(), analyzer, numRounds);\n      analyzer.close();\n    }\n  }\n\n","sourceOld":"  //@Ignore(\"wrong finalOffset: https://issues.apache.org/jira/browse/LUCENE-3971\")\n  public void testRandomMaps() throws Exception {\n    int numIterations = atLeast(3);\n    for (int i = 0; i < numIterations; i++) {\n      final NormalizeCharMap map = randomMap();\n      Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName) {\n          Tokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n          return new TokenStreamComponents(tokenizer, tokenizer);\n        }\n\n        @Override\n        protected Reader initReader(String fieldName, Reader reader) {\n          return new MappingCharFilter(map, reader);\n        }\n      };\n      int numRounds = 100;\n      checkRandomData(random(), analyzer, numRounds);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/charfilter/TestMappingCharFilter#testRandomMaps().mjava","sourceNew":"  //@Ignore(\"wrong finalOffset: https://issues.apache.org/jira/browse/LUCENE-3971\")\n  public void testRandomMaps() throws Exception {\n    int numIterations = atLeast(3);\n    for (int i = 0; i < numIterations; i++) {\n      final NormalizeCharMap map = randomMap();\n      Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName) {\n          Tokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n          return new TokenStreamComponents(tokenizer, tokenizer);\n        }\n\n        @Override\n        protected Reader initReader(String fieldName, Reader reader) {\n          return new MappingCharFilter(map, reader);\n        }\n      };\n      int numRounds = 100;\n      checkRandomData(random(), analyzer, numRounds);\n      analyzer.close();\n    }\n  }\n\n","sourceOld":"  //@Ignore(\"wrong finalOffset: https://issues.apache.org/jira/browse/LUCENE-3971\")\n  public void testRandomMaps() throws Exception {\n    int numIterations = atLeast(3);\n    for (int i = 0; i < numIterations; i++) {\n      final NormalizeCharMap map = randomMap();\n      Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName) {\n          Tokenizer tokenizer = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n          return new TokenStreamComponents(tokenizer, tokenizer);\n        }\n\n        @Override\n        protected Reader initReader(String fieldName, Reader reader) {\n          return new MappingCharFilter(map, reader);\n        }\n      };\n      int numRounds = 100;\n      checkRandomData(random(), analyzer, numRounds);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04e7f30683f53928b2fce016e6430c9795caff22":["56584ae6fa4912e4dd6e818a7da3799cf807234f","16f1a3d2871e09ea6774ec5e5d5c21f853a7d5d6"],"16f1a3d2871e09ea6774ec5e5d5c21f853a7d5d6":["56584ae6fa4912e4dd6e818a7da3799cf807234f"],"fc706b1e03a539d44d99998108feb684bb44cbb2":["16f1a3d2871e09ea6774ec5e5d5c21f853a7d5d6"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["fc706b1e03a539d44d99998108feb684bb44cbb2"],"d135d0e0e3d4b83c56b666e6cf8c585c17d2fff9":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"56584ae6fa4912e4dd6e818a7da3799cf807234f":["d135d0e0e3d4b83c56b666e6cf8c585c17d2fff9"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","a56958d7f71a28824f20031ffbb2e13502a0274e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["04e7f30683f53928b2fce016e6430c9795caff22","fc706b1e03a539d44d99998108feb684bb44cbb2"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["56584ae6fa4912e4dd6e818a7da3799cf807234f","fc706b1e03a539d44d99998108feb684bb44cbb2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a56958d7f71a28824f20031ffbb2e13502a0274e":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56958d7f71a28824f20031ffbb2e13502a0274e"]},"commit2Childs":{"04e7f30683f53928b2fce016e6430c9795caff22":["aba371508186796cc6151d8223a5b4e16d02e26e"],"16f1a3d2871e09ea6774ec5e5d5c21f853a7d5d6":["04e7f30683f53928b2fce016e6430c9795caff22","fc706b1e03a539d44d99998108feb684bb44cbb2"],"fc706b1e03a539d44d99998108feb684bb44cbb2":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"d135d0e0e3d4b83c56b666e6cf8c585c17d2fff9":["56584ae6fa4912e4dd6e818a7da3799cf807234f"],"56584ae6fa4912e4dd6e818a7da3799cf807234f":["04e7f30683f53928b2fce016e6430c9795caff22","16f1a3d2871e09ea6774ec5e5d5c21f853a7d5d6","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d135d0e0e3d4b83c56b666e6cf8c585c17d2fff9"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}