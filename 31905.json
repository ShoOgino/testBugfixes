{"path":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#ClusterStateUpdater(ZkStateReader,String,Stats).mjava","commits":[{"id":"9f45f67a018421da088ea39274f23ad5d339b97d","date":1395559348,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#ClusterStateUpdater(ZkStateReader,String,Stats).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#ClusterStateUpdater(ZkStateReader,String).mjava","sourceNew":"    public ClusterStateUpdater(final ZkStateReader reader, final String myId, Stats zkStats) {\n      this.zkClient = reader.getZkClient();\n      this.zkStats = zkStats;\n      this.stateUpdateQueue = getInQueue(zkClient, zkStats);\n      this.workQueue = getInternalQueue(zkClient, zkStats);\n      this.failureMap = getFailureMap(zkClient);\n      this.runningMap = getRunningMap(zkClient);\n      this.completedMap = getCompletedMap(zkClient);\n      this.myId = myId;\n      this.reader = reader;\n      clusterProps = reader.getClusterProps();\n    }\n\n","sourceOld":"    public ClusterStateUpdater(final ZkStateReader reader, final String myId) {\n      this.zkClient = reader.getZkClient();\n      this.stateUpdateQueue = getInQueue(zkClient);\n      this.workQueue = getInternalQueue(zkClient);\n      this.failureMap = getFailureMap(zkClient);\n      this.runningMap = getRunningMap(zkClient);\n      this.completedMap = getCompletedMap(zkClient);\n      this.myId = myId;\n      this.reader = reader;\n      clusterProps = reader.getClusterProps();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0622fbd990643ae4cacb693db6a0c82cf8916ae2","date":1397637446,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#ClusterStateUpdater(ZkStateReader,String,Stats).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#ClusterStateUpdater(ZkStateReader,String,Stats).mjava","sourceNew":"    public ClusterStateUpdater(final ZkStateReader reader, final String myId, Stats zkStats) {\n      this.zkClient = reader.getZkClient();\n      this.zkStats = zkStats;\n      this.stateUpdateQueue = getInQueue(zkClient, zkStats);\n      this.workQueue = getInternalQueue(zkClient, zkStats);\n      this.failureMap = getFailureMap(zkClient);\n      this.runningMap = getRunningMap(zkClient);\n      this.completedMap = getCompletedMap(zkClient);\n      this.myId = myId;\n      this.reader = reader;\n      clusterProps = reader.getClusterProps();\n      reader.ephemeralCollectionData = Collections.unmodifiableMap(updateNodes);\n    }\n\n","sourceOld":"    public ClusterStateUpdater(final ZkStateReader reader, final String myId, Stats zkStats) {\n      this.zkClient = reader.getZkClient();\n      this.zkStats = zkStats;\n      this.stateUpdateQueue = getInQueue(zkClient, zkStats);\n      this.workQueue = getInternalQueue(zkClient, zkStats);\n      this.failureMap = getFailureMap(zkClient);\n      this.runningMap = getRunningMap(zkClient);\n      this.completedMap = getCompletedMap(zkClient);\n      this.myId = myId;\n      this.reader = reader;\n      clusterProps = reader.getClusterProps();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5a233896b7f16ac9b4ed601ef8207d98f1f0500","date":1398857046,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#ClusterStateUpdater(ZkStateReader,String,Stats).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#ClusterStateUpdater(ZkStateReader,String,Stats).mjava","sourceNew":"    public ClusterStateUpdater(final ZkStateReader reader, final String myId, Stats zkStats) {\n      this.zkClient = reader.getZkClient();\n      this.zkStats = zkStats;\n      this.stateUpdateQueue = getInQueue(zkClient, zkStats);\n      this.workQueue = getInternalQueue(zkClient, zkStats);\n      this.failureMap = getFailureMap(zkClient);\n      this.runningMap = getRunningMap(zkClient);\n      this.completedMap = getCompletedMap(zkClient);\n      this.myId = myId;\n      this.reader = reader;\n      clusterProps = reader.getClusterProps();\n    }\n\n","sourceOld":"    public ClusterStateUpdater(final ZkStateReader reader, final String myId, Stats zkStats) {\n      this.zkClient = reader.getZkClient();\n      this.zkStats = zkStats;\n      this.stateUpdateQueue = getInQueue(zkClient, zkStats);\n      this.workQueue = getInternalQueue(zkClient, zkStats);\n      this.failureMap = getFailureMap(zkClient);\n      this.runningMap = getRunningMap(zkClient);\n      this.completedMap = getCompletedMap(zkClient);\n      this.myId = myId;\n      this.reader = reader;\n      clusterProps = reader.getClusterProps();\n      reader.ephemeralCollectionData = Collections.unmodifiableMap(updateNodes);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6f693ed86f289b2e42b46684409b3997f2c264a","date":1404319832,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#ClusterStateUpdater(ZkStateReader,String,Stats).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#ClusterStateUpdater(ZkStateReader,String,Stats).mjava","sourceNew":"    public ClusterStateUpdater(final ZkStateReader reader, final String myId, Stats zkStats) {\n      this.zkClient = reader.getZkClient();\n      this.zkStats = zkStats;\n      this.stateUpdateQueue = getInQueue(zkClient, zkStats);\n      this.workQueue = getInternalQueue(zkClient, zkStats);\n      this.failureMap = getFailureMap(zkClient);\n      this.runningMap = getRunningMap(zkClient);\n      this.completedMap = getCompletedMap(zkClient);\n      this.myId = myId;\n      this.reader = reader;\n      clusterProps = reader.getClusterProps();\n      reader.setEphemeralCollectionData(Collections.unmodifiableMap(updateNodes));\n    }\n\n","sourceOld":"    public ClusterStateUpdater(final ZkStateReader reader, final String myId, Stats zkStats) {\n      this.zkClient = reader.getZkClient();\n      this.zkStats = zkStats;\n      this.stateUpdateQueue = getInQueue(zkClient, zkStats);\n      this.workQueue = getInternalQueue(zkClient, zkStats);\n      this.failureMap = getFailureMap(zkClient);\n      this.runningMap = getRunningMap(zkClient);\n      this.completedMap = getCompletedMap(zkClient);\n      this.myId = myId;\n      this.reader = reader;\n      clusterProps = reader.getClusterProps();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4c07fa58a256dccf8b95364855fd5e9ad4d1401","date":1404386015,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#ClusterStateUpdater(ZkStateReader,String,Stats).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#ClusterStateUpdater(ZkStateReader,String,Stats).mjava","sourceNew":"    public ClusterStateUpdater(final ZkStateReader reader, final String myId, Stats zkStats) {\n      this.zkClient = reader.getZkClient();\n      this.zkStats = zkStats;\n      this.stateUpdateQueue = getInQueue(zkClient, zkStats);\n      this.workQueue = getInternalQueue(zkClient, zkStats);\n      this.failureMap = getFailureMap(zkClient);\n      this.runningMap = getRunningMap(zkClient);\n      this.completedMap = getCompletedMap(zkClient);\n      this.myId = myId;\n      this.reader = reader;\n      clusterProps = reader.getClusterProps();\n    }\n\n","sourceOld":"    public ClusterStateUpdater(final ZkStateReader reader, final String myId, Stats zkStats) {\n      this.zkClient = reader.getZkClient();\n      this.zkStats = zkStats;\n      this.stateUpdateQueue = getInQueue(zkClient, zkStats);\n      this.workQueue = getInternalQueue(zkClient, zkStats);\n      this.failureMap = getFailureMap(zkClient);\n      this.runningMap = getRunningMap(zkClient);\n      this.completedMap = getCompletedMap(zkClient);\n      this.myId = myId;\n      this.reader = reader;\n      clusterProps = reader.getClusterProps();\n      reader.setEphemeralCollectionData(Collections.unmodifiableMap(updateNodes));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b6398c01b0e06ba3aa3a96d549077877414f9f8","date":1429701153,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#ClusterStateUpdater(ZkStateReader,String,Stats).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#ClusterStateUpdater(ZkStateReader,String,Stats).mjava","sourceNew":"    public ClusterStateUpdater(final ZkStateReader reader, final String myId, Stats zkStats) {\n      this.zkClient = reader.getZkClient();\n      this.zkStats = zkStats;\n      this.stateUpdateQueue = getInQueue(zkClient, zkStats);\n      this.workQueue = getInternalQueue(zkClient, zkStats);\n      this.failureMap = getFailureMap(zkClient);\n      this.runningMap = getRunningMap(zkClient);\n      this.completedMap = getCompletedMap(zkClient);\n      this.myId = myId;\n      this.reader = reader;\n    }\n\n","sourceOld":"    public ClusterStateUpdater(final ZkStateReader reader, final String myId, Stats zkStats) {\n      this.zkClient = reader.getZkClient();\n      this.zkStats = zkStats;\n      this.stateUpdateQueue = getInQueue(zkClient, zkStats);\n      this.workQueue = getInternalQueue(zkClient, zkStats);\n      this.failureMap = getFailureMap(zkClient);\n      this.runningMap = getRunningMap(zkClient);\n      this.completedMap = getCompletedMap(zkClient);\n      this.myId = myId;\n      this.reader = reader;\n      clusterProps = reader.getClusterProps();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19498030e0adab22f604f935cae3c03dcf0952a6","date":1456558851,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#ClusterStateUpdater(ZkStateReader,String,Stats).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#ClusterStateUpdater(ZkStateReader,String,Stats).mjava","sourceNew":"    public ClusterStateUpdater(final ZkStateReader reader, final String myId, Stats zkStats) {\n      this.zkClient = reader.getZkClient();\n      this.zkStats = zkStats;\n      this.stateUpdateQueue = getStateUpdateQueue(zkClient, zkStats);\n      this.workQueue = getInternalWorkQueue(zkClient, zkStats);\n      this.failureMap = getFailureMap(zkClient);\n      this.runningMap = getRunningMap(zkClient);\n      this.completedMap = getCompletedMap(zkClient);\n      this.myId = myId;\n      this.reader = reader;\n    }\n\n","sourceOld":"    public ClusterStateUpdater(final ZkStateReader reader, final String myId, Stats zkStats) {\n      this.zkClient = reader.getZkClient();\n      this.zkStats = zkStats;\n      this.stateUpdateQueue = getInQueue(zkClient, zkStats);\n      this.workQueue = getInternalQueue(zkClient, zkStats);\n      this.failureMap = getFailureMap(zkClient);\n      this.runningMap = getRunningMap(zkClient);\n      this.completedMap = getCompletedMap(zkClient);\n      this.myId = myId;\n      this.reader = reader;\n    }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#ClusterStateUpdater(ZkStateReader,String,Stats).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#ClusterStateUpdater(ZkStateReader,String,Stats).mjava","sourceNew":"    public ClusterStateUpdater(final ZkStateReader reader, final String myId, Stats zkStats) {\n      this.zkClient = reader.getZkClient();\n      this.zkStats = zkStats;\n      this.stateUpdateQueue = getStateUpdateQueue(zkClient, zkStats);\n      this.workQueue = getInternalWorkQueue(zkClient, zkStats);\n      this.failureMap = getFailureMap(zkClient);\n      this.runningMap = getRunningMap(zkClient);\n      this.completedMap = getCompletedMap(zkClient);\n      this.myId = myId;\n      this.reader = reader;\n    }\n\n","sourceOld":"    public ClusterStateUpdater(final ZkStateReader reader, final String myId, Stats zkStats) {\n      this.zkClient = reader.getZkClient();\n      this.zkStats = zkStats;\n      this.stateUpdateQueue = getInQueue(zkClient, zkStats);\n      this.workQueue = getInternalQueue(zkClient, zkStats);\n      this.failureMap = getFailureMap(zkClient);\n      this.runningMap = getRunningMap(zkClient);\n      this.completedMap = getCompletedMap(zkClient);\n      this.myId = myId;\n      this.reader = reader;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#ClusterStateUpdater(ZkStateReader,String,Stats).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/Overseer.ClusterStateUpdater#ClusterStateUpdater(ZkStateReader,String,Stats).mjava","sourceNew":"    public ClusterStateUpdater(final ZkStateReader reader, final String myId, Stats zkStats) {\n      this.zkClient = reader.getZkClient();\n      this.zkStats = zkStats;\n      this.stateUpdateQueue = getStateUpdateQueue(zkStats);\n      this.workQueue = getInternalWorkQueue(zkClient, zkStats);\n      this.failureMap = getFailureMap(zkClient);\n      this.runningMap = getRunningMap(zkClient);\n      this.completedMap = getCompletedMap(zkClient);\n      this.myId = myId;\n      this.reader = reader;\n    }\n\n","sourceOld":"    public ClusterStateUpdater(final ZkStateReader reader, final String myId, Stats zkStats) {\n      this.zkClient = reader.getZkClient();\n      this.zkStats = zkStats;\n      this.stateUpdateQueue = getStateUpdateQueue(zkClient, zkStats);\n      this.workQueue = getInternalWorkQueue(zkClient, zkStats);\n      this.failureMap = getFailureMap(zkClient);\n      this.runningMap = getRunningMap(zkClient);\n      this.completedMap = getCompletedMap(zkClient);\n      this.myId = myId;\n      this.reader = reader;\n    }\n\n","bugFix":["19498030e0adab22f604f935cae3c03dcf0952a6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["3b6398c01b0e06ba3aa3a96d549077877414f9f8","19498030e0adab22f604f935cae3c03dcf0952a6"],"19498030e0adab22f604f935cae3c03dcf0952a6":["3b6398c01b0e06ba3aa3a96d549077877414f9f8"],"a6f693ed86f289b2e42b46684409b3997f2c264a":["a5a233896b7f16ac9b4ed601ef8207d98f1f0500"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["af2638813028b254a88b418ebeafb541afb49653"],"f4c07fa58a256dccf8b95364855fd5e9ad4d1401":["a6f693ed86f289b2e42b46684409b3997f2c264a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a5a233896b7f16ac9b4ed601ef8207d98f1f0500":["0622fbd990643ae4cacb693db6a0c82cf8916ae2"],"9f45f67a018421da088ea39274f23ad5d339b97d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0622fbd990643ae4cacb693db6a0c82cf8916ae2":["9f45f67a018421da088ea39274f23ad5d339b97d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"3b6398c01b0e06ba3aa3a96d549077877414f9f8":["f4c07fa58a256dccf8b95364855fd5e9ad4d1401"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"19498030e0adab22f604f935cae3c03dcf0952a6":["af2638813028b254a88b418ebeafb541afb49653"],"a6f693ed86f289b2e42b46684409b3997f2c264a":["f4c07fa58a256dccf8b95364855fd5e9ad4d1401"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f4c07fa58a256dccf8b95364855fd5e9ad4d1401":["3b6398c01b0e06ba3aa3a96d549077877414f9f8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9f45f67a018421da088ea39274f23ad5d339b97d"],"a5a233896b7f16ac9b4ed601ef8207d98f1f0500":["a6f693ed86f289b2e42b46684409b3997f2c264a"],"9f45f67a018421da088ea39274f23ad5d339b97d":["0622fbd990643ae4cacb693db6a0c82cf8916ae2"],"0622fbd990643ae4cacb693db6a0c82cf8916ae2":["a5a233896b7f16ac9b4ed601ef8207d98f1f0500"],"3b6398c01b0e06ba3aa3a96d549077877414f9f8":["af2638813028b254a88b418ebeafb541afb49653","19498030e0adab22f604f935cae3c03dcf0952a6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}