{"path":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","commits":[{"id":"4901f8624f774c2b648e66567b63c59e901ac7c8","date":1329431044,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"/dev/null","sourceNew":"  public void rename(String name, String toName) {\n    SolrCore core = getCore(name);\n    if (core != null) {\n      register(toName, core, false);\n      name = checkDefault(name);    \n\n      synchronized(cores) {\n        cores.remove(name);\n      }\n\n      core.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"221ff19d62d5ff429ffecf8e7f3e01ff93754854","date":1329974551,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    SolrCore core = getCore(name);\n    try {\n      if (core != null) {\n        register(toName, core, false);\n        name = checkDefault(name);\n        \n        synchronized (cores) {\n          cores.remove(name);\n        }\n      }\n    } finally {\n      if (core != null) {\n        core.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    SolrCore core = getCore(name);\n    if (core != null) {\n      register(toName, core, false);\n      name = checkDefault(name);    \n\n      synchronized(cores) {\n        cores.remove(name);\n      }\n\n      core.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    SolrCore core = getCore(name);\n    try {\n      if (core != null) {\n        register(toName, core, false);\n        name = checkDefault(name);\n        \n        synchronized (cores) {\n          cores.remove(name);\n        }\n      }\n    } finally {\n      if (core != null) {\n        core.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    SolrCore core = getCore(name);\n    if (core != null) {\n      register(toName, core, false);\n      name = checkDefault(name);    \n\n      synchronized(cores) {\n        cores.remove(name);\n      }\n\n      core.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a837c064b67fa63a9394136e31218b908cdcf783","date":1362186072,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    SolrCore core = getCore(name);\n    try {\n      if (core != null) {\n        registerCore(false, toName, core, false);\n        name = checkDefault(name);\n        coreMaps.remove(name, false);\n      }\n    } finally {\n      if (core != null) {\n        core.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    SolrCore core = getCore(name);\n    try {\n      if (core != null) {\n        register(toName, core, false);\n        name = checkDefault(name);\n        \n        synchronized (cores) {\n          cores.remove(name);\n        }\n      }\n    } finally {\n      if (core != null) {\n        core.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9409650933cc688e77e565092a25e58adfc2e18d","date":1366663164,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    SolrCore core = getCore(name);\n    try {\n      if (core != null) {\n        registerCore(false, toName, core, false);\n        name = checkDefault(name);\n        solrCores.remove(name, false);\n      }\n    } finally {\n      if (core != null) {\n        core.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    SolrCore core = getCore(name);\n    try {\n      if (core != null) {\n        registerCore(false, toName, core, false);\n        name = checkDefault(name);\n        coreMaps.remove(name, false);\n      }\n    } finally {\n      if (core != null) {\n        core.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    SolrCore core = getCore(name);\n    try {\n      if (core != null) {\n        registerCore(false, toName, core, false);\n        name = checkDefault(name);\n        SolrCore old = solrCores.remove(name, false);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    } finally {\n      if (core != null) {\n        core.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    SolrCore core = getCore(name);\n    try {\n      if (core != null) {\n        registerCore(false, toName, core, false);\n        name = checkDefault(name);\n        solrCores.remove(name, false);\n      }\n    } finally {\n      if (core != null) {\n        core.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    SolrCore core = getCore(name);\n    try {\n      if (core != null) {\n        registerCore(false, toName, core, false);\n        name = checkDefault(name);\n        SolrCore old = solrCores.remove(name, false);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    } finally {\n      if (core != null) {\n        core.close();\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    SolrCore core = getCore(name);\n    try {\n      if (core != null) {\n        registerCore(false, toName, core, false);\n        name = checkDefault(name);\n        solrCores.remove(name, false);\n      }\n    } finally {\n      if (core != null) {\n        core.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e332392bbbdd01cb69ad6a89051f483cda38e15e","date":1395758779,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(false, toName, core, false);\n        name = checkDefault(name);\n        SolrCore old = solrCores.remove(name, false);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    SolrCore core = getCore(name);\n    try {\n      if (core != null) {\n        registerCore(false, toName, core, false);\n        name = checkDefault(name);\n        SolrCore old = solrCores.remove(name, false);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    } finally {\n      if (core != null) {\n        core.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85032ab568b3f50eabd577aaa994ba197db93758","date":1404157267,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        name = checkDefault(name);\n        SolrCore old = solrCores.remove(name, false);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(false, toName, core, false);\n        name = checkDefault(name);\n        SolrCore old = solrCores.remove(name, false);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4d419cdab641a032f3e0d0fa8167a5252be0ae3","date":1404159924,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        name = checkDefault(name);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        name = checkDefault(name);\n        SolrCore old = solrCores.remove(name, false);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        name = checkDefault(name);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb65cc25534f4e0d77ed573d35995eb0b836b818","date":1454441028,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["5469e1b49cf7f51c02519aff49b848ff8bbbc663"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"acd1f5a977dc3b97799ed300423294e2c457774f","date":1454537003,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5469e1b49cf7f51c02519aff49b848ff8bbbc663","date":1454885560,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    SolrIdentifierValidator.validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","bugFix":["fb65cc25534f4e0d77ed573d35995eb0b836b818"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cbd8af67010775ee4b53c58597a30bbe480707ee","date":1455837524,"type":3,"author":"anshum","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    if(!SolrIdentifierValidator.validateCoreName(toName)) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid core: \" + toName\n          + \". Core names must consist entirely of periods, underscores, and alphanumerics\");\n    }\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    SolrIdentifierValidator.validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06043fcf612d2cd93636c22cd062e0641406b417","date":1455841699,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    if(!SolrIdentifierValidator.validateCoreName(toName)) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid core: \" + toName\n          + \". Core names must consist entirely of periods, underscores, and alphanumerics\");\n    }\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    SolrIdentifierValidator.validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a839eb6696740aa302262e32e6f45b5e70b47bff","date":1457028247,"type":3,"author":"anshum","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    if (!SolrIdentifierValidator.validateCoreName(toName)) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, SolrIdentifierValidator.getIdentifierMessage(SolrIdentifierValidator.IdentifierType.CORE,\n          toName));\n    }\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    if(!SolrIdentifierValidator.validateCoreName(toName)) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid core: \" + toName\n          + \". Core names must consist entirely of periods, underscores, and alphanumerics\");\n    }\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    if (!SolrIdentifierValidator.validateCoreName(toName)) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, SolrIdentifierValidator.getIdentifierMessage(SolrIdentifierValidator.IdentifierType.CORE,\n          toName));\n    }\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    if(!SolrIdentifierValidator.validateCoreName(toName)) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid core: \" + toName\n          + \". Core names must consist entirely of periods, underscores, and alphanumerics\");\n    }\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"daed6b66edd950a7f2af9857df64b09acf3deacc","date":1457527865,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    SolrIdentifierValidator.validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    if (!SolrIdentifierValidator.validateCoreName(toName)) {\n      throw new SolrException(ErrorCode.BAD_REQUEST, SolrIdentifierValidator.getIdentifierMessage(SolrIdentifierValidator.IdentifierType.CORE,\n          toName));\n    }\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d528fd7ae22865015b756e0a03832e2051de2a9c","date":1476721105,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    SolrIdentifierValidator.validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true, false);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    SolrIdentifierValidator.validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    SolrIdentifierValidator.validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true, false);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    SolrIdentifierValidator.validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a30bfa174128ad6cb3bcf568080886729e347fe9","date":1485967817,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    SolrIdentifierValidator.validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        String oldRegistryName = core.getCoreMetricManager().getRegistryName();\n        String newRegistryName = SolrCoreMetricManager.createRegistryName(core.getCoreDescriptor().getCollectionName(), toName);\n        metricManager.swapRegistries(oldRegistryName, newRegistryName);\n        registerCore(toName, core, true, false);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    SolrIdentifierValidator.validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true, false);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    SolrIdentifierValidator.validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        String oldRegistryName = core.getCoreMetricManager().getRegistryName();\n        String newRegistryName = SolrCoreMetricManager.createRegistryName(core.getCoreDescriptor().getCollectionName(), toName);\n        metricManager.swapRegistries(oldRegistryName, newRegistryName);\n        registerCore(toName, core, true, false);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    SolrIdentifierValidator.validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        registerCore(toName, core, true, false);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"073f1aa70444ec64f3e216816af2a3b43fa38fe7","date":1488920481,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    SolrIdentifierValidator.validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        String oldRegistryName = core.getCoreMetricManager().getRegistryName();\n        String newRegistryName = SolrCoreMetricManager.createRegistryName(core, toName);\n        metricManager.swapRegistries(oldRegistryName, newRegistryName);\n        registerCore(toName, core, true, false);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    SolrIdentifierValidator.validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        String oldRegistryName = core.getCoreMetricManager().getRegistryName();\n        String newRegistryName = SolrCoreMetricManager.createRegistryName(core.getCoreDescriptor().getCollectionName(), toName);\n        metricManager.swapRegistries(oldRegistryName, newRegistryName);\n        registerCore(toName, core, true, false);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"729cb470f975115d4c60517b2cb7c42e37a7a2e1","date":1492041760,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    SolrIdentifierValidator.validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        String oldRegistryName = core.getCoreMetricManager().getRegistryName();\n        String newRegistryName = SolrCoreMetricManager.createRegistryName(core, toName);\n        metricManager.swapRegistries(oldRegistryName, newRegistryName);\n        // The old coreDescriptor is obsolete, so remove it. registerCore will put it back.\n        CoreDescriptor cd = core.getCoreDescriptor();\n        solrCores.removeCoreDescriptor(cd);\n        cd.setProperty(\"name\", toName);\n        solrCores.addCoreDescriptor(cd);\n        core.setName(toName);\n        registerCore(cd, core, true, false);\n        SolrCore old = solrCores.remove(name);\n\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    SolrIdentifierValidator.validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        String oldRegistryName = core.getCoreMetricManager().getRegistryName();\n        String newRegistryName = SolrCoreMetricManager.createRegistryName(core, toName);\n        metricManager.swapRegistries(oldRegistryName, newRegistryName);\n        registerCore(toName, core, true, false);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    SolrIdentifierValidator.validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        String oldRegistryName = core.getCoreMetricManager().getRegistryName();\n        String newRegistryName = SolrCoreMetricManager.createRegistryName(core, toName);\n        metricManager.swapRegistries(oldRegistryName, newRegistryName);\n        // The old coreDescriptor is obsolete, so remove it. registerCore will put it back.\n        CoreDescriptor cd = core.getCoreDescriptor();\n        solrCores.removeCoreDescriptor(cd);\n        cd.setProperty(\"name\", toName);\n        solrCores.addCoreDescriptor(cd);\n        core.setName(toName);\n        registerCore(cd, core, true, false);\n        SolrCore old = solrCores.remove(name);\n\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    SolrIdentifierValidator.validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        String oldRegistryName = core.getCoreMetricManager().getRegistryName();\n        String newRegistryName = SolrCoreMetricManager.createRegistryName(core, toName);\n        metricManager.swapRegistries(oldRegistryName, newRegistryName);\n        registerCore(toName, core, true, false);\n        SolrCore old = solrCores.remove(name);\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e80876f1ee57780ad756fa083e88c95d7c1d0c0b","date":1595653703,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#rename(String,String).mjava","sourceNew":"  public void rename(String name, String toName) {\n    apiAssumeStandalone();\n    SolrIdentifierValidator.validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        String oldRegistryName = core.getCoreMetricManager().getRegistryName();\n        String newRegistryName = SolrCoreMetricManager.createRegistryName(core, toName);\n        metricManager.swapRegistries(oldRegistryName, newRegistryName);\n        // The old coreDescriptor is obsolete, so remove it. registerCore will put it back.\n        CoreDescriptor cd = core.getCoreDescriptor();\n        solrCores.removeCoreDescriptor(cd);\n        cd.setProperty(\"name\", toName);\n        solrCores.addCoreDescriptor(cd);\n        core.setName(toName);\n        registerCore(cd, core, true, false);\n        SolrCore old = solrCores.remove(name);\n\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","sourceOld":"  public void rename(String name, String toName) {\n    SolrIdentifierValidator.validateCoreName(toName);\n    try (SolrCore core = getCore(name)) {\n      if (core != null) {\n        String oldRegistryName = core.getCoreMetricManager().getRegistryName();\n        String newRegistryName = SolrCoreMetricManager.createRegistryName(core, toName);\n        metricManager.swapRegistries(oldRegistryName, newRegistryName);\n        // The old coreDescriptor is obsolete, so remove it. registerCore will put it back.\n        CoreDescriptor cd = core.getCoreDescriptor();\n        solrCores.removeCoreDescriptor(cd);\n        cd.setProperty(\"name\", toName);\n        solrCores.addCoreDescriptor(cd);\n        core.setName(toName);\n        registerCore(cd, core, true, false);\n        SolrCore old = solrCores.remove(name);\n\n        coresLocator.rename(this, old.getCoreDescriptor(), core.getCoreDescriptor());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["073f1aa70444ec64f3e216816af2a3b43fa38fe7"],"221ff19d62d5ff429ffecf8e7f3e01ff93754854":["4901f8624f774c2b648e66567b63c59e901ac7c8"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["9409650933cc688e77e565092a25e58adfc2e18d","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["4901f8624f774c2b648e66567b63c59e901ac7c8","221ff19d62d5ff429ffecf8e7f3e01ff93754854"],"acd1f5a977dc3b97799ed300423294e2c457774f":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39","fb65cc25534f4e0d77ed573d35995eb0b836b818"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a30bfa174128ad6cb3bcf568080886729e347fe9"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["a4d419cdab641a032f3e0d0fa8167a5252be0ae3"],"daed6b66edd950a7f2af9857df64b09acf3deacc":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"a30bfa174128ad6cb3bcf568080886729e347fe9":["d528fd7ae22865015b756e0a03832e2051de2a9c"],"a839eb6696740aa302262e32e6f45b5e70b47bff":["06043fcf612d2cd93636c22cd062e0641406b417"],"9409650933cc688e77e565092a25e58adfc2e18d":["a837c064b67fa63a9394136e31218b908cdcf783"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"073f1aa70444ec64f3e216816af2a3b43fa38fe7":["a30bfa174128ad6cb3bcf568080886729e347fe9"],"a4d419cdab641a032f3e0d0fa8167a5252be0ae3":["85032ab568b3f50eabd577aaa994ba197db93758"],"e332392bbbdd01cb69ad6a89051f483cda38e15e":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["9409650933cc688e77e565092a25e58adfc2e18d"],"5469e1b49cf7f51c02519aff49b848ff8bbbc663":["fb65cc25534f4e0d77ed573d35995eb0b836b818"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39","fb65cc25534f4e0d77ed573d35995eb0b836b818"],"fb65cc25534f4e0d77ed573d35995eb0b836b818":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"d528fd7ae22865015b756e0a03832e2051de2a9c":["daed6b66edd950a7f2af9857df64b09acf3deacc"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["073f1aa70444ec64f3e216816af2a3b43fa38fe7"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["daed6b66edd950a7f2af9857df64b09acf3deacc","d528fd7ae22865015b756e0a03832e2051de2a9c"],"4901f8624f774c2b648e66567b63c59e901ac7c8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["06043fcf612d2cd93636c22cd062e0641406b417","a839eb6696740aa302262e32e6f45b5e70b47bff"],"a837c064b67fa63a9394136e31218b908cdcf783":["221ff19d62d5ff429ffecf8e7f3e01ff93754854"],"06043fcf612d2cd93636c22cd062e0641406b417":["5469e1b49cf7f51c02519aff49b848ff8bbbc663","cbd8af67010775ee4b53c58597a30bbe480707ee"],"e80876f1ee57780ad756fa083e88c95d7c1d0c0b":["729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"85032ab568b3f50eabd577aaa994ba197db93758":["e332392bbbdd01cb69ad6a89051f483cda38e15e"],"cbd8af67010775ee4b53c58597a30bbe480707ee":["5469e1b49cf7f51c02519aff49b848ff8bbbc663"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e80876f1ee57780ad756fa083e88c95d7c1d0c0b"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"221ff19d62d5ff429ffecf8e7f3e01ff93754854":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","a837c064b67fa63a9394136e31218b908cdcf783"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"acd1f5a977dc3b97799ed300423294e2c457774f":[],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["acd1f5a977dc3b97799ed300423294e2c457774f","1e6acbaae7af722f17204ceccf0f7db5753eccf3","fb65cc25534f4e0d77ed573d35995eb0b836b818"],"daed6b66edd950a7f2af9857df64b09acf3deacc":["d528fd7ae22865015b756e0a03832e2051de2a9c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a30bfa174128ad6cb3bcf568080886729e347fe9":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","073f1aa70444ec64f3e216816af2a3b43fa38fe7"],"a839eb6696740aa302262e32e6f45b5e70b47bff":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"9409650933cc688e77e565092a25e58adfc2e18d":["37a0f60745e53927c4c876cfe5b5a58170f0646c","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4901f8624f774c2b648e66567b63c59e901ac7c8"],"073f1aa70444ec64f3e216816af2a3b43fa38fe7":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"a4d419cdab641a032f3e0d0fa8167a5252be0ae3":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"e332392bbbdd01cb69ad6a89051f483cda38e15e":["85032ab568b3f50eabd577aaa994ba197db93758"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","e332392bbbdd01cb69ad6a89051f483cda38e15e"],"5469e1b49cf7f51c02519aff49b848ff8bbbc663":["06043fcf612d2cd93636c22cd062e0641406b417","cbd8af67010775ee4b53c58597a30bbe480707ee"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"fb65cc25534f4e0d77ed573d35995eb0b836b818":["acd1f5a977dc3b97799ed300423294e2c457774f","5469e1b49cf7f51c02519aff49b848ff8bbbc663","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"d528fd7ae22865015b756e0a03832e2051de2a9c":["a30bfa174128ad6cb3bcf568080886729e347fe9","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["e80876f1ee57780ad756fa083e88c95d7c1d0c0b"],"4901f8624f774c2b648e66567b63c59e901ac7c8":["221ff19d62d5ff429ffecf8e7f3e01ff93754854","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["daed6b66edd950a7f2af9857df64b09acf3deacc"],"a837c064b67fa63a9394136e31218b908cdcf783":["9409650933cc688e77e565092a25e58adfc2e18d"],"06043fcf612d2cd93636c22cd062e0641406b417":["a839eb6696740aa302262e32e6f45b5e70b47bff","cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"85032ab568b3f50eabd577aaa994ba197db93758":["a4d419cdab641a032f3e0d0fa8167a5252be0ae3"],"cbd8af67010775ee4b53c58597a30bbe480707ee":["06043fcf612d2cd93636c22cd062e0641406b417"],"e80876f1ee57780ad756fa083e88c95d7c1d0c0b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","37a0f60745e53927c4c876cfe5b5a58170f0646c","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","acd1f5a977dc3b97799ed300423294e2c457774f","7c3523a0ab04c3002eee3896c75ea5f10f388bcc","1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}