{"path":"lucene/misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity#hyperbolicTf(float).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity#hyperbolicTf(float).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity#hyperbolicTf(float).mjava","sourceNew":"  /**\n   * Uses a hyperbolic tangent function that allows for a hard max...\n   *\n   * <code>\n   * tf(x)=min+(max-min)/2*(((base**(x-xoffset)-base**-(x-xoffset))/(base**(x-xoffset)+base**-(x-xoffset)))+1)\n   * </code>\n   *\n   * <p>\n   * This code is provided as a convenience for subclasses that want\n   * to use a hyperbolic tf function.\n   * </p>\n   *\n   * @see #setHyperbolicTfFactors\n   * @see <a href=\"doc-files/ss.hyperbolicTf.svg\">An SVG visualization of this function</a> \n   */\n  public float hyperbolicTf(float freq) {\n    if (0.0f == freq) return 0.0f;\n\n    final float min = tf_hyper_min;\n    final float max = tf_hyper_max;\n    final double base = tf_hyper_base;\n    final float xoffset = tf_hyper_xoffset;\n    final double x = (double)(freq - xoffset);\n  \n    final float result = min +\n      (float)(\n              (max-min) / 2.0f\n              *\n              (\n               ( ( Math.pow(base,x) - Math.pow(base,-x) )\n                 / ( Math.pow(base,x) + Math.pow(base,-x) )\n                 )\n               + 1.0d\n               )\n              );\n\n    return Float.isNaN(result) ? max : result;\n    \n  }\n\n","sourceOld":"  /**\n   * Uses a hyperbolic tangent function that allows for a hard max...\n   *\n   * <code>\n   * tf(x)=min+(max-min)/2*(((base**(x-xoffset)-base**-(x-xoffset))/(base**(x-xoffset)+base**-(x-xoffset)))+1)\n   * </code>\n   *\n   * <p>\n   * This code is provided as a convenience for subclasses that want\n   * to use a hyperbolic tf function.\n   * </p>\n   *\n   * @see #setHyperbolicTfFactors\n   * @see <a href=\"doc-files/ss.hyperbolicTf.svg\">An SVG visualization of this function</a> \n   */\n  public float hyperbolicTf(float freq) {\n    if (0.0f == freq) return 0.0f;\n\n    final float min = tf_hyper_min;\n    final float max = tf_hyper_max;\n    final double base = tf_hyper_base;\n    final float xoffset = tf_hyper_xoffset;\n    final double x = (double)(freq - xoffset);\n  \n    final float result = min +\n      (float)(\n              (max-min) / 2.0f\n              *\n              (\n               ( ( Math.pow(base,x) - Math.pow(base,-x) )\n                 / ( Math.pow(base,x) + Math.pow(base,-x) )\n                 )\n               + 1.0d\n               )\n              );\n\n    return Float.isNaN(result) ? max : result;\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}