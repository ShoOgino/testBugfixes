{"path":"solr/core/src/java/org/apache/solr/handler/CdcrReplicatorState#getLastErrors().mjava","commits":[{"id":"86290366cefc1b9d4eced13b430858c4a4c0421d","date":1432321109,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CdcrReplicatorState#getLastErrors().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Gets the last errors ordered by timestamp (most recent first)\n   */\n  List<String[]> getLastErrors() {\n    List<String[]> lastErrors = new ArrayList<>();\n    synchronized (errorsQueue) {\n      Iterator<ErrorQueueEntry> it = errorsQueue.iterator();\n      while (it.hasNext()) {\n        ErrorQueueEntry entry = it.next();\n        lastErrors.add(new String[]{TrieDateField.formatExternal(new Date(entry.timestamp)), entry.type.toLower()});\n      }\n    }\n    return lastErrors;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c38a05f7a7b43c2dabbd25f12f9941c64bb2331","date":1437383270,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CdcrReplicatorState#getLastErrors().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/CdcrReplicatorState#getLastErrors().mjava","sourceNew":"  /**\n   * Gets the last errors ordered by timestamp (most recent first)\n   */\n  List<String[]> getLastErrors() {\n    List<String[]> lastErrors = new ArrayList<>();\n    synchronized (errorsQueue) {\n      Iterator<ErrorQueueEntry> it = errorsQueue.iterator();\n      while (it.hasNext()) {\n        ErrorQueueEntry entry = it.next();\n        lastErrors.add(new String[]{DateFormatUtil.formatExternal(new Date(entry.timestamp)), entry.type.toLower()});\n      }\n    }\n    return lastErrors;\n  }\n\n","sourceOld":"  /**\n   * Gets the last errors ordered by timestamp (most recent first)\n   */\n  List<String[]> getLastErrors() {\n    List<String[]> lastErrors = new ArrayList<>();\n    synchronized (errorsQueue) {\n      Iterator<ErrorQueueEntry> it = errorsQueue.iterator();\n      while (it.hasNext()) {\n        ErrorQueueEntry entry = it.next();\n        lastErrors.add(new String[]{TrieDateField.formatExternal(new Date(entry.timestamp)), entry.type.toLower()});\n      }\n    }\n    return lastErrors;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bcf9886c8ff537aafde14de48ebf744f5673f08b","date":1439041198,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CdcrReplicatorState#getLastErrors().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/CdcrReplicatorState#getLastErrors().mjava","sourceNew":"  /**\n   * Gets the last errors ordered by timestamp (most recent first)\n   */\n  List<String[]> getLastErrors() {\n    List<String[]> lastErrors = new ArrayList<>();\n    synchronized (errorsQueue) {\n      Iterator<ErrorQueueEntry> it = errorsQueue.iterator();\n      while (it.hasNext()) {\n        ErrorQueueEntry entry = it.next();\n        lastErrors.add(new String[]{DateFormatUtil.formatExternal(entry.timestamp), entry.type.toLower()});\n      }\n    }\n    return lastErrors;\n  }\n\n","sourceOld":"  /**\n   * Gets the last errors ordered by timestamp (most recent first)\n   */\n  List<String[]> getLastErrors() {\n    List<String[]> lastErrors = new ArrayList<>();\n    synchronized (errorsQueue) {\n      Iterator<ErrorQueueEntry> it = errorsQueue.iterator();\n      while (it.hasNext()) {\n        ErrorQueueEntry entry = it.next();\n        lastErrors.add(new String[]{DateFormatUtil.formatExternal(new Date(entry.timestamp)), entry.type.toLower()});\n      }\n    }\n    return lastErrors;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3f6c7717a0f1decd1668144537943efcc70cd95","date":1459359762,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CdcrReplicatorState#getLastErrors().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/CdcrReplicatorState#getLastErrors().mjava","sourceNew":"  /**\n   * Gets the last errors ordered by timestamp (most recent first)\n   */\n  List<String[]> getLastErrors() {\n    List<String[]> lastErrors = new ArrayList<>();\n    synchronized (errorsQueue) {\n      Iterator<ErrorQueueEntry> it = errorsQueue.iterator();\n      while (it.hasNext()) {\n        ErrorQueueEntry entry = it.next();\n        lastErrors.add(new String[]{entry.timestamp.toInstant().toString(), entry.type.toLower()});\n      }\n    }\n    return lastErrors;\n  }\n\n","sourceOld":"  /**\n   * Gets the last errors ordered by timestamp (most recent first)\n   */\n  List<String[]> getLastErrors() {\n    List<String[]> lastErrors = new ArrayList<>();\n    synchronized (errorsQueue) {\n      Iterator<ErrorQueueEntry> it = errorsQueue.iterator();\n      while (it.hasNext()) {\n        ErrorQueueEntry entry = it.next();\n        lastErrors.add(new String[]{DateFormatUtil.formatExternal(entry.timestamp), entry.type.toLower()});\n      }\n    }\n    return lastErrors;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1","date":1598647393,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/CdcrReplicatorState#getLastErrors().mjava","sourceNew":null,"sourceOld":"  /**\n   * Gets the last errors ordered by timestamp (most recent first)\n   */\n  List<String[]> getLastErrors() {\n    List<String[]> lastErrors = new ArrayList<>();\n    synchronized (errorsQueue) {\n      Iterator<ErrorQueueEntry> it = errorsQueue.iterator();\n      while (it.hasNext()) {\n        ErrorQueueEntry entry = it.next();\n        lastErrors.add(new String[]{entry.timestamp.toInstant().toString(), entry.type.toLower()});\n      }\n    }\n    return lastErrors;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"86290366cefc1b9d4eced13b430858c4a4c0421d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d3f6c7717a0f1decd1668144537943efcc70cd95":["bcf9886c8ff537aafde14de48ebf744f5673f08b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["0c38a05f7a7b43c2dabbd25f12f9941c64bb2331"],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["d3f6c7717a0f1decd1668144537943efcc70cd95"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"],"0c38a05f7a7b43c2dabbd25f12f9941c64bb2331":["86290366cefc1b9d4eced13b430858c4a4c0421d"]},"commit2Childs":{"86290366cefc1b9d4eced13b430858c4a4c0421d":["0c38a05f7a7b43c2dabbd25f12f9941c64bb2331"],"d3f6c7717a0f1decd1668144537943efcc70cd95":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["d3f6c7717a0f1decd1668144537943efcc70cd95"],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0c38a05f7a7b43c2dabbd25f12f9941c64bb2331":["bcf9886c8ff537aafde14de48ebf744f5673f08b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}