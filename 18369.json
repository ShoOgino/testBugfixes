{"path":"src/java/org/apache/lucene/store/InputStream#readBytes(byte[],int,int).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/InputStream#readBytes(byte[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  public final void readBytes(byte[] b, int offset, int len)\n       throws IOException {\n    if (len < BUFFER_SIZE) {\n      for (int i = 0; i < len; i++)\t\t  // read byte-by-byte\n\tb[i + offset] = (byte)readByte();\n    } else {\t\t\t\t\t  // read all-at-once\n      long start = getFilePointer();\n      seekInternal(start);\n      readInternal(b, offset, len);\n\n      bufferStart = start + len;\t\t  // adjust stream variables\n      bufferPosition = 0;\n      bufferLength = 0;\t\t\t\t  // trigger refill() on read\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"823c992e3b766654f2a25f9b125dc5e849b4775e","date":1028137634,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/InputStream#readBytes(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/InputStream#readBytes(byte[],int,int).mjava","sourceNew":"  /** Reads a specified number of bytes into an array at the specified offset.\n   * @param b the array to read bytes into\n   * @param offset the offset in the array to start storing bytes\n   * @param len the number of bytes to read\n   * @see OutputStream#writeBytes(byte[],int)\n   */\n  public final void readBytes(byte[] b, int offset, int len)\n       throws IOException {\n    if (len < BUFFER_SIZE) {\n      for (int i = 0; i < len; i++)\t\t  // read byte-by-byte\n\tb[i + offset] = (byte)readByte();\n    } else {\t\t\t\t\t  // read all-at-once\n      long start = getFilePointer();\n      seekInternal(start);\n      readInternal(b, offset, len);\n\n      bufferStart = start + len;\t\t  // adjust stream variables\n      bufferPosition = 0;\n      bufferLength = 0;\t\t\t\t  // trigger refill() on read\n    }\n  }\n\n","sourceOld":"  public final void readBytes(byte[] b, int offset, int len)\n       throws IOException {\n    if (len < BUFFER_SIZE) {\n      for (int i = 0; i < len; i++)\t\t  // read byte-by-byte\n\tb[i + offset] = (byte)readByte();\n    } else {\t\t\t\t\t  // read all-at-once\n      long start = getFilePointer();\n      seekInternal(start);\n      readInternal(b, offset, len);\n\n      bufferStart = start + len;\t\t  // adjust stream variables\n      bufferPosition = 0;\n      bufferLength = 0;\t\t\t\t  // trigger refill() on read\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e971ba25509e21a130fef61f0687be0446ca27a0","date":1095369217,"type":5,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/BufferedIndexInput#readBytes(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/InputStream#readBytes(byte[],int,int).mjava","sourceNew":"  public void readBytes(byte[] b, int offset, int len)\n       throws IOException {\n    if (len < BUFFER_SIZE) {\n      for (int i = 0; i < len; i++)\t\t  // read byte-by-byte\n\tb[i + offset] = (byte)readByte();\n    } else {\t\t\t\t\t  // read all-at-once\n      long start = getFilePointer();\n      seekInternal(start);\n      readInternal(b, offset, len);\n\n      bufferStart = start + len;\t\t  // adjust stream variables\n      bufferPosition = 0;\n      bufferLength = 0;\t\t\t\t  // trigger refill() on read\n    }\n  }\n\n","sourceOld":"  /** Reads a specified number of bytes into an array at the specified offset.\n   * @param b the array to read bytes into\n   * @param offset the offset in the array to start storing bytes\n   * @param len the number of bytes to read\n   * @see OutputStream#writeBytes(byte[],int)\n   */\n  public final void readBytes(byte[] b, int offset, int len)\n       throws IOException {\n    if (len < BUFFER_SIZE) {\n      for (int i = 0; i < len; i++)\t\t  // read byte-by-byte\n\tb[i + offset] = (byte)readByte();\n    } else {\t\t\t\t\t  // read all-at-once\n      long start = getFilePointer();\n      seekInternal(start);\n      readInternal(b, offset, len);\n\n      bufferStart = start + len;\t\t  // adjust stream variables\n      bufferPosition = 0;\n      bufferLength = 0;\t\t\t\t  // trigger refill() on read\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e971ba25509e21a130fef61f0687be0446ca27a0","date":1095369217,"type":6,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexInput#readBytes(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/InputStream#readBytes(byte[],int,int).mjava","sourceNew":"  /** Reads a specified number of bytes into an array at the specified offset.\n   * @param b the array to read bytes into\n   * @param offset the offset in the array to start storing bytes\n   * @param len the number of bytes to read\n   * @see OutputStream#writeBytes(byte[],int)\n   */\n  public abstract void readBytes(byte[] b, int offset, int len)\n    throws IOException;\n\n","sourceOld":"  /** Reads a specified number of bytes into an array at the specified offset.\n   * @param b the array to read bytes into\n   * @param offset the offset in the array to start storing bytes\n   * @param len the number of bytes to read\n   * @see OutputStream#writeBytes(byte[],int)\n   */\n  public final void readBytes(byte[] b, int offset, int len)\n       throws IOException {\n    if (len < BUFFER_SIZE) {\n      for (int i = 0; i < len; i++)\t\t  // read byte-by-byte\n\tb[i + offset] = (byte)readByte();\n    } else {\t\t\t\t\t  // read all-at-once\n      long start = getFilePointer();\n      seekInternal(start);\n      readInternal(b, offset, len);\n\n      bufferStart = start + len;\t\t  // adjust stream variables\n      bufferPosition = 0;\n      bufferLength = 0;\t\t\t\t  // trigger refill() on read\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"823c992e3b766654f2a25f9b125dc5e849b4775e":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"e971ba25509e21a130fef61f0687be0446ca27a0":["823c992e3b766654f2a25f9b125dc5e849b4775e"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e971ba25509e21a130fef61f0687be0446ca27a0"]},"commit2Childs":{"823c992e3b766654f2a25f9b125dc5e849b4775e":["e971ba25509e21a130fef61f0687be0446ca27a0"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["823c992e3b766654f2a25f9b125dc5e849b4775e"],"e971ba25509e21a130fef61f0687be0446ca27a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}