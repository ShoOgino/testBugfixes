{"path":"lucene/test-framework/src/java/org/apache/lucene/geo/BaseXYPointTestCase#doTestRandom(int).mjava","commits":[{"id":"0b0a0cc5a33a45ace11b2e1e09fa39ce852e1a04","date":1582280790,"type":0,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/geo/BaseXYPointTestCase#doTestRandom(int).mjava","pathOld":"/dev/null","sourceNew":"  private void doTestRandom(int count) throws Exception {\n\n    int numPoints = atLeast(count);\n\n    if (VERBOSE) {\n      System.out.println(\"TEST: numPoints=\" + numPoints);\n    }\n\n    float[] xs = new float[numPoints];\n    float[] ys = new float[numPoints];\n\n    boolean haveRealDoc = false;\n\n    for (int id=0;id<numPoints;id++) {\n      int x = random().nextInt(20);\n      if (x == 17) {\n        // Some docs don't have a point:\n        ys[id] = Float.NaN;\n        if (VERBOSE) {\n          System.out.println(\"  id=\" + id + \" is missing\");\n        }\n        continue;\n      }\n\n      if (id > 0 && x < 3 && haveRealDoc) {\n        int oldID;\n        while (true) {\n          oldID = random().nextInt(id);\n          if (Float.isNaN(ys[oldID]) == false) {\n            break;\n          }\n        }\n            \n        if (x == 0) {\n          // Identical x to old point\n          ys[id] = ys[oldID];\n          xs[id] = nextX();\n          if (VERBOSE) {\n            System.out.println(\"  id=\" + id + \" x=\" + xs[id] + \" y=\" + ys[id] + \" (same x as doc=\" + oldID + \")\");\n          }\n        } else if (x == 1) {\n          // Identical y to old point\n          ys[id] = nextY();\n          xs[id] = xs[oldID];\n          if (VERBOSE) {\n            System.out.println(\"  id=\" + id + \" x=\" + xs[id] + \" y=\" + ys[id] + \" (same y as doc=\" + oldID + \")\");\n          }\n        } else {\n          assert x == 2;\n          // Fully identical point:\n          xs[id] = xs[oldID];\n          ys[id] = ys[oldID];\n          if (VERBOSE) {\n            System.out.println(\"  id=\" + id + \" x=\" + xs[id] + \" y=\" + ys[id] + \" (same X/y as doc=\" + oldID + \")\");\n          }\n        }\n      } else {\n        xs[id] = nextX();\n        ys[id] = nextY();\n        haveRealDoc = true;\n        if (VERBOSE) {\n          System.out.println(\"  id=\" + id + \" x=\" + xs[id] + \" y=\" + ys[id]);\n        }\n      }\n    }\n\n    verify(xs, ys);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0b0a0cc5a33a45ace11b2e1e09fa39ce852e1a04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0b0a0cc5a33a45ace11b2e1e09fa39ce852e1a04"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0b0a0cc5a33a45ace11b2e1e09fa39ce852e1a04"],"0b0a0cc5a33a45ace11b2e1e09fa39ce852e1a04":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}