{"path":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","pathOld":"/dev/null","sourceNew":"  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    SolrIndexSearcher currentSearcher = core.getSearcher().get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","sourceNew":null,"sourceOld":"  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    SolrIndexSearcher currentSearcher = core.getSearcher().get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","pathOld":"src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","sourceNew":"  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    SolrIndexSearcher currentSearcher = core.getSearcher().get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n  }\n\n","sourceOld":"  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    SolrIndexSearcher currentSearcher = core.getSearcher().get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","pathOld":"/dev/null","sourceNew":"  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    SolrIndexSearcher currentSearcher = core.getSearcher().get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"afeb033b2bd36d8ce9d82142b197da4dde13068b","date":1269115863,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","sourceNew":"  @Test\n  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    SolrIndexSearcher currentSearcher = core.getSearcher().get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n  }\n\n","sourceOld":"  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    SolrIndexSearcher currentSearcher = core.getSearcher().get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d614dcbd5ce3d537fbeb5d54ef1a0edf462a680a","date":1287350019,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","sourceNew":"  @Test\n  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = core.getSearcher();\n    SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n    newSearcher.close();\n    currentSearcherRef.decref();\n  }\n\n","sourceOld":"  @Test\n  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    SolrIndexSearcher currentSearcher = core.getSearcher().get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n  }\n\n","bugFix":null,"bugIntro":["4750614f6dd69a084ba692ac13eac93df7e36b83","4750614f6dd69a084ba692ac13eac93df7e36b83","4750614f6dd69a084ba692ac13eac93df7e36b83"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","sourceNew":"  @Test\n  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = core.getSearcher();\n    SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n    newSearcher.close();\n    currentSearcherRef.decref();\n  }\n\n","sourceOld":"  @Test\n  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    SolrIndexSearcher currentSearcher = core.getSearcher().get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","sourceNew":"  @Test\n  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = core.getSearcher();\n    SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n    newSearcher.close();\n    currentSearcherRef.decref();\n  }\n\n","sourceOld":"  @Test\n  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    SolrIndexSearcher currentSearcher = core.getSearcher().get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c220849f876de24a79f756f65b3eb045db59f63f","date":1294902803,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","sourceNew":"  @Test\n  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = core.getSearcher();\n    SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getIndexReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n    newSearcher.close();\n    currentSearcherRef.decref();\n  }\n\n","sourceOld":"  @Test\n  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = core.getSearcher();\n    SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n    newSearcher.close();\n    currentSearcherRef.decref();\n  }\n\n","bugFix":null,"bugIntro":["e22ffe8cc51a892ae103df018822d7873e901c2a","e22ffe8cc51a892ae103df018822d7873e901c2a","e22ffe8cc51a892ae103df018822d7873e901c2a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","sourceNew":"  @Test\n  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = core.getSearcher();\n    SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getIndexReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n    newSearcher.close();\n    currentSearcherRef.decref();\n  }\n\n","sourceOld":"  @Test\n  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = core.getSearcher();\n    SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n    newSearcher.close();\n    currentSearcherRef.decref();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","sourceNew":"  @Test\n  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = core.getSearcher();\n    SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getIndexReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n    newSearcher.close();\n    currentSearcherRef.decref();\n  }\n\n","sourceOld":"  @Test\n  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = core.getSearcher();\n    SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n    newSearcher.close();\n    currentSearcherRef.decref();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","sourceNew":"  @Test\n  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = core.getSearcher();\n    SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getIndexReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n    newSearcher.close();\n    currentSearcherRef.decref();\n  }\n\n","sourceOld":"  @Test\n  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = core.getSearcher();\n    SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getIndexReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n    newSearcher.close();\n    currentSearcherRef.decref();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","sourceNew":"  @Test\n  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = core.getSearcher();\n    SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getIndexReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n    newSearcher.close();\n    currentSearcherRef.decref();\n  }\n\n","sourceOld":"  @Test\n  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = core.getSearcher();\n    SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getIndexReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n    newSearcher.close();\n    currentSearcherRef.decref();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","pathOld":"solr/src/test/org/apache/solr/core/TestQuerySenderListener#testSearcherEvents().mjava","sourceNew":"  @Test\n  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = core.getSearcher();\n    SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getIndexReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n    newSearcher.close();\n    currentSearcherRef.decref();\n  }\n\n","sourceOld":"  @Test\n  public void testSearcherEvents() throws Exception {\n    SolrCore core = h.getCore();\n    SolrEventListener newSearcherListener = core.newSearcherListeners.get(0);\n    assertTrue(\"Not an instance of QuerySenderListener\", newSearcherListener instanceof QuerySenderListener);\n    QuerySenderListener qsl = (QuerySenderListener) newSearcherListener;\n\n    RefCounted<SolrIndexSearcher> currentSearcherRef = core.getSearcher();\n    SolrIndexSearcher currentSearcher = currentSearcherRef.get();\n    qsl.newSearcher(currentSearcher, null);//test new Searcher\n    MockQuerySenderListenerReqHandler mock = (MockQuerySenderListenerReqHandler) core.getRequestHandler(\"mock\");\n    assertNotNull(\"Mock is null\", mock);\n    String evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.FIRST_SEARCHER, evt.equals(EventParams.FIRST_SEARCHER) == true);\n    Directory dir = currentSearcher.getIndexReader().directory();\n    SolrIndexSearcher newSearcher = new SolrIndexSearcher(core, core.getSchema(), \"testQuerySenderListener\", dir, true, false);\n\n    qsl.newSearcher(newSearcher, currentSearcher);\n    evt = mock.req.getParams().get(EventParams.EVENT);\n    assertNotNull(\"Event is null\", evt);\n    assertTrue(evt + \" is not equal to \" + EventParams.NEW_SEARCHER, evt.equals(EventParams.NEW_SEARCHER) == true);\n    newSearcher.close();\n    currentSearcherRef.decref();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"d614dcbd5ce3d537fbeb5d54ef1a0edf462a680a":["afeb033b2bd36d8ce9d82142b197da4dde13068b"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["c220849f876de24a79f756f65b3eb045db59f63f","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["afeb033b2bd36d8ce9d82142b197da4dde13068b","d614dcbd5ce3d537fbeb5d54ef1a0edf462a680a"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c220849f876de24a79f756f65b3eb045db59f63f":["d614dcbd5ce3d537fbeb5d54ef1a0edf462a680a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c220849f876de24a79f756f65b3eb045db59f63f"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","c220849f876de24a79f756f65b3eb045db59f63f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afeb033b2bd36d8ce9d82142b197da4dde13068b":["1da8d55113b689b06716246649de6f62430f15c0"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["c220849f876de24a79f756f65b3eb045db59f63f"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["afeb033b2bd36d8ce9d82142b197da4dde13068b","d614dcbd5ce3d537fbeb5d54ef1a0edf462a680a"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c220849f876de24a79f756f65b3eb045db59f63f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"d614dcbd5ce3d537fbeb5d54ef1a0edf462a680a":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c220849f876de24a79f756f65b3eb045db59f63f","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"1da8d55113b689b06716246649de6f62430f15c0":["afeb033b2bd36d8ce9d82142b197da4dde13068b"],"c220849f876de24a79f756f65b3eb045db59f63f":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"afeb033b2bd36d8ce9d82142b197da4dde13068b":["d614dcbd5ce3d537fbeb5d54ef1a0edf462a680a","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}