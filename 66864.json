{"path":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testNoFragments().mjava","commits":[{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testNoFragments().mjava","pathOld":"sandbox/contributions/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testNoFragments().mjava","sourceNew":"\tpublic void testNoFragments() throws Exception\n\t{\n\t\tdoSearching(\"AnInvalidQueryWhichShouldYieldNoResults\");\n\t\tHighlighter highlighter =\n\t\t\tnew Highlighter(this,new QueryScorer(query));\n\n\t\tint highlightFragmentSizeInBytes = 40;\n\t\tfor (int i = 0; i < texts.length; i++)\n\t\t{\n\t\t\tString text = texts[i];\n\t\t\tTokenStream tokenStream=analyzer.tokenStream(FIELD_NAME,new StringReader(text));\n\n\t\t\tString result = highlighter.getBestFragment(tokenStream,text);\n\t\t\tassertNull(\"The highlight result should be null for text with no query terms\", result);\n\t\t}\n\t}\n\n","sourceOld":"\tpublic void testNoFragments() throws Exception\n\t{\n\t\tdoSearching(\"AnInvalidQueryWhichShouldYieldNoResults\");\n\t\tHighlighter highlighter =\n\t\t\tnew Highlighter(this,new QueryScorer(query));\n\n\t\tint highlightFragmentSizeInBytes = 40;\n\t\tfor (int i = 0; i < texts.length; i++)\n\t\t{\n\t\t\tString text = texts[i];\n\t\t\tTokenStream tokenStream=analyzer.tokenStream(FIELD_NAME,new StringReader(text));\n\n\t\t\tString result = highlighter.getBestFragment(tokenStream,text);\n\t\t\tassertNull(\"The highlight result should be null for text with no query terms\", result);\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b4cf21055ce3298c85f04952b1aa208983470c4","date":1108840132,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testNoFragments().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testNoFragments().mjava","sourceNew":"\tpublic void testNoFragments() throws Exception\n\t{\n\t\tdoSearching(\"AnInvalidQueryWhichShouldYieldNoResults\");\n\t\tHighlighter highlighter =\n\t\t\tnew Highlighter(this,new QueryScorer(query));\n\n\t\tfor (int i = 0; i < texts.length; i++)\n\t\t{\n\t\t\tString text = texts[i];\n\t\t\tTokenStream tokenStream=analyzer.tokenStream(FIELD_NAME,new StringReader(text));\n\n\t\t\tString result = highlighter.getBestFragment(tokenStream,text);\n\t\t\tassertNull(\"The highlight result should be null for text with no query terms\", result);\n\t\t}\n\t}\n\n","sourceOld":"\tpublic void testNoFragments() throws Exception\n\t{\n\t\tdoSearching(\"AnInvalidQueryWhichShouldYieldNoResults\");\n\t\tHighlighter highlighter =\n\t\t\tnew Highlighter(this,new QueryScorer(query));\n\n\t\tint highlightFragmentSizeInBytes = 40;\n\t\tfor (int i = 0; i < texts.length; i++)\n\t\t{\n\t\t\tString text = texts[i];\n\t\t\tTokenStream tokenStream=analyzer.tokenStream(FIELD_NAME,new StringReader(text));\n\n\t\t\tString result = highlighter.getBestFragment(tokenStream,text);\n\t\t\tassertNull(\"The highlight result should be null for text with no query terms\", result);\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296b8b38a87feb478921f77834a2302dfe77641c","date":1209506838,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testNoFragments().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testNoFragments().mjava","sourceNew":"  public void testNoFragments() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      public void run() throws Exception {\n        doSearching(\"AnInvalidQueryWhichShouldYieldNoResults\");\n\n        for (int i = 0; i < texts.length; i++) {\n          String text = texts[i];\n          TokenStream tokenStream = analyzer.tokenStream(FIELD_NAME, new StringReader(text));\n          Highlighter highlighter = getHighlighter(query, FIELD_NAME, tokenStream,\n              HighlighterTest.this);\n          String result = highlighter.getBestFragment(tokenStream, text);\n          assertNull(\"The highlight result should be null for text with no query terms\", result);\n        }\n      }\n    };\n\n    helper.start();\n  }\n\n","sourceOld":"\tpublic void testNoFragments() throws Exception\n\t{\n\t\tdoSearching(\"AnInvalidQueryWhichShouldYieldNoResults\");\n\t\tHighlighter highlighter =\n\t\t\tnew Highlighter(this,new QueryScorer(query));\n\n\t\tfor (int i = 0; i < texts.length; i++)\n\t\t{\n\t\t\tString text = texts[i];\n\t\t\tTokenStream tokenStream=analyzer.tokenStream(FIELD_NAME,new StringReader(text));\n\n\t\t\tString result = highlighter.getBestFragment(tokenStream,text);\n\t\t\tassertNull(\"The highlight result should be null for text with no query terms\", result);\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testNoFragments().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testNoFragments().mjava","sourceNew":"  public void testNoFragments() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      @Override\n      public void run() throws Exception {\n        doSearching(\"AnInvalidQueryWhichShouldYieldNoResults\");\n\n        for (int i = 0; i < texts.length; i++) {\n          String text = texts[i];\n          TokenStream tokenStream = analyzer.tokenStream(FIELD_NAME, new StringReader(text));\n          Highlighter highlighter = getHighlighter(query, FIELD_NAME, tokenStream,\n              HighlighterTest.this);\n          String result = highlighter.getBestFragment(tokenStream, text);\n          assertNull(\"The highlight result should be null for text with no query terms\", result);\n        }\n      }\n    };\n\n    helper.start();\n  }\n\n","sourceOld":"  public void testNoFragments() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      public void run() throws Exception {\n        doSearching(\"AnInvalidQueryWhichShouldYieldNoResults\");\n\n        for (int i = 0; i < texts.length; i++) {\n          String text = texts[i];\n          TokenStream tokenStream = analyzer.tokenStream(FIELD_NAME, new StringReader(text));\n          Highlighter highlighter = getHighlighter(query, FIELD_NAME, tokenStream,\n              HighlighterTest.this);\n          String result = highlighter.getBestFragment(tokenStream, text);\n          assertNull(\"The highlight result should be null for text with no query terms\", result);\n        }\n      }\n    };\n\n    helper.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testNoFragments().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testNoFragments().mjava","sourceNew":"  public void testNoFragments() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      @Override\n      public void run() throws Exception {\n        doSearching(\"AnInvalidQueryWhichShouldYieldNoResults\");\n\n        for (int i = 0; i < texts.length; i++) {\n          String text = texts[i];\n          TokenStream tokenStream = analyzer.tokenStream(FIELD_NAME, new StringReader(text));\n          Highlighter highlighter = getHighlighter(query, FIELD_NAME, tokenStream,\n              HighlighterTest.this);\n          String result = highlighter.getBestFragment(tokenStream, text);\n          assertNull(\"The highlight result should be null for text with no query terms\", result);\n        }\n      }\n    };\n\n    helper.start();\n  }\n\n","sourceOld":"  public void testNoFragments() throws Exception {\n    TestHighlightRunner helper = new TestHighlightRunner() {\n\n      @Override\n      public void run() throws Exception {\n        doSearching(\"AnInvalidQueryWhichShouldYieldNoResults\");\n\n        for (int i = 0; i < texts.length; i++) {\n          String text = texts[i];\n          TokenStream tokenStream = analyzer.tokenStream(FIELD_NAME, new StringReader(text));\n          Highlighter highlighter = getHighlighter(query, FIELD_NAME, tokenStream,\n              HighlighterTest.this);\n          String result = highlighter.getBestFragment(tokenStream, text);\n          assertNull(\"The highlight result should be null for text with no query terms\", result);\n        }\n      }\n    };\n\n    helper.start();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b4cf21055ce3298c85f04952b1aa208983470c4":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["296b8b38a87feb478921f77834a2302dfe77641c"],"296b8b38a87feb478921f77834a2302dfe77641c":["4b4cf21055ce3298c85f04952b1aa208983470c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"]},"commit2Childs":{"4b4cf21055ce3298c85f04952b1aa208983470c4":["296b8b38a87feb478921f77834a2302dfe77641c"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["4b4cf21055ce3298c85f04952b1aa208983470c4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"296b8b38a87feb478921f77834a2302dfe77641c":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}