{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/sep/SepPostingsReader.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/sep/SepPostingsReader.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/sep/SepPostingsReader.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","sourceNew":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits liveDocs) throws IOException {\n      this.liveDocs = liveDocs;\n      this.indexOptions = fieldInfo.getIndexOptions();\n      omitTF = indexOptions == IndexOptions.DOCS_ONLY;\n      storePayloads = fieldInfo.hasPayloads();\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.copyFrom(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.copyFrom(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = -1;\n      accum = 0;\n      freq = 1;\n      skipped = false;\n\n      return this;\n    }\n\n","sourceOld":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits liveDocs) throws IOException {\n      this.liveDocs = liveDocs;\n      this.indexOptions = fieldInfo.getIndexOptions();\n      omitTF = indexOptions == IndexOptions.DOCS_ONLY;\n      storePayloads = fieldInfo.hasPayloads();\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.copyFrom(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.copyFrom(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = -1;\n      accum = 0;\n      freq = 1;\n      skipped = false;\n\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91d86ebcdb45ce6a1b2584e2603f76db47523d0a","date":1396466913,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/sep/SepPostingsReader.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","sourceNew":null,"sourceOld":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits liveDocs) throws IOException {\n      this.liveDocs = liveDocs;\n      this.indexOptions = fieldInfo.getIndexOptions();\n      omitTF = indexOptions == IndexOptions.DOCS_ONLY;\n      storePayloads = fieldInfo.hasPayloads();\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.copyFrom(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.copyFrom(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = -1;\n      accum = 0;\n      freq = 1;\n      skipped = false;\n\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":4,"author":"Dawid Weiss","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/sep/SepPostingsReader.SepDocsEnum#init(FieldInfo,SepTermState,Bits).mjava","sourceNew":null,"sourceOld":"    SepDocsEnum init(FieldInfo fieldInfo, SepTermState termState, Bits liveDocs) throws IOException {\n      this.liveDocs = liveDocs;\n      this.indexOptions = fieldInfo.getIndexOptions();\n      omitTF = indexOptions == IndexOptions.DOCS_ONLY;\n      storePayloads = fieldInfo.hasPayloads();\n\n      // TODO: can't we only do this if consumer\n      // skipped consuming the previous docs?\n      docIndex.copyFrom(termState.docIndex);\n      docIndex.seek(docReader);\n\n      if (!omitTF) {\n        freqIndex.copyFrom(termState.freqIndex);\n        freqIndex.seek(freqReader);\n      }\n\n      docFreq = termState.docFreq;\n      // NOTE: unused if docFreq < skipMinimum:\n      skipFP = termState.skipFP;\n      count = 0;\n      doc = -1;\n      accum = 0;\n      freq = 1;\n      skipped = false;\n\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","91d86ebcdb45ce6a1b2584e2603f76db47523d0a"],"91d86ebcdb45ce6a1b2584e2603f76db47523d0a":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["91d86ebcdb45ce6a1b2584e2603f76db47523d0a"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"91d86ebcdb45ce6a1b2584e2603f76db47523d0a":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["5eb2511ababf862ea11e10761c70ee560cd84510","91d86ebcdb45ce6a1b2584e2603f76db47523d0a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}