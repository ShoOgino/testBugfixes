{"path":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#FieldData(String,FieldInfos,TermData[],boolean,boolean).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#FieldData(String,FieldInfos,TermData[],boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"    public FieldData(final String name, final FieldInfos fieldInfos, final TermData[] terms, final boolean omitTF, final boolean storePayloads) {\n      this.omitTF = omitTF;\n      this.storePayloads = storePayloads;\n      fieldInfos.add(name, true);\n      fieldInfo = fieldInfos.fieldInfo(name);\n      fieldInfo.omitTermFreqAndPositions = omitTF;\n      fieldInfo.storePayloads = storePayloads;\n      this.terms = terms;\n      for(int i=0;i<terms.length;i++)\n        terms[i].field = this;\n\n      Arrays.sort(terms);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e92442af786151ee55bc283eb472f629e3c7b52b","date":1301070252,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#FieldData(String,FieldInfos,TermData[],boolean,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#FieldData(String,FieldInfos,TermData[],boolean,boolean).mjava","sourceNew":"    public FieldData(final String name, final FieldInfos fieldInfos, final TermData[] terms, final boolean omitTF, final boolean storePayloads) {\n      this.omitTF = omitTF;\n      this.storePayloads = storePayloads;\n      fieldInfos.addOrUpdate(name, true);\n      fieldInfo = fieldInfos.fieldInfo(name);\n      fieldInfo.omitTermFreqAndPositions = omitTF;\n      fieldInfo.storePayloads = storePayloads;\n      this.terms = terms;\n      for(int i=0;i<terms.length;i++)\n        terms[i].field = this;\n\n      Arrays.sort(terms);\n    }\n\n","sourceOld":"    public FieldData(final String name, final FieldInfos fieldInfos, final TermData[] terms, final boolean omitTF, final boolean storePayloads) {\n      this.omitTF = omitTF;\n      this.storePayloads = storePayloads;\n      fieldInfos.add(name, true);\n      fieldInfo = fieldInfos.fieldInfo(name);\n      fieldInfo.omitTermFreqAndPositions = omitTF;\n      fieldInfo.storePayloads = storePayloads;\n      this.terms = terms;\n      for(int i=0;i<terms.length;i++)\n        terms[i].field = this;\n\n      Arrays.sort(terms);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#FieldData(String,FieldInfos,TermData[],boolean,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#FieldData(String,FieldInfos,TermData[],boolean,boolean).mjava","sourceNew":"    public FieldData(final String name, final FieldInfos fieldInfos, final TermData[] terms, final boolean omitTF, final boolean storePayloads) {\n      this.omitTF = omitTF;\n      this.storePayloads = storePayloads;\n      fieldInfos.addOrUpdate(name, true);\n      fieldInfo = fieldInfos.fieldInfo(name);\n      fieldInfo.omitTermFreqAndPositions = omitTF;\n      fieldInfo.storePayloads = storePayloads;\n      this.terms = terms;\n      for(int i=0;i<terms.length;i++)\n        terms[i].field = this;\n\n      Arrays.sort(terms);\n    }\n\n","sourceOld":"    public FieldData(final String name, final FieldInfos fieldInfos, final TermData[] terms, final boolean omitTF, final boolean storePayloads) {\n      this.omitTF = omitTF;\n      this.storePayloads = storePayloads;\n      fieldInfos.add(name, true);\n      fieldInfo = fieldInfos.fieldInfo(name);\n      fieldInfo.omitTermFreqAndPositions = omitTF;\n      fieldInfo.storePayloads = storePayloads;\n      this.terms = terms;\n      for(int i=0;i<terms.length;i++)\n        terms[i].field = this;\n\n      Arrays.sort(terms);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#FieldData(String,FieldInfos,TermData[],boolean,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#FieldData(String,FieldInfos,TermData[],boolean,boolean).mjava","sourceNew":"    public FieldData(final String name, final FieldInfos fieldInfos, final TermData[] terms, final boolean omitTF, final boolean storePayloads) {\n      this.omitTF = omitTF;\n      this.storePayloads = storePayloads;\n      fieldInfos.addOrUpdate(name, true);\n      fieldInfo = fieldInfos.fieldInfo(name);\n      fieldInfo.omitTermFreqAndPositions = omitTF;\n      fieldInfo.storePayloads = storePayloads;\n      this.terms = terms;\n      for(int i=0;i<terms.length;i++)\n        terms[i].field = this;\n\n      Arrays.sort(terms);\n    }\n\n","sourceOld":"    public FieldData(final String name, final FieldInfos fieldInfos, final TermData[] terms, final boolean omitTF, final boolean storePayloads) {\n      this.omitTF = omitTF;\n      this.storePayloads = storePayloads;\n      fieldInfos.add(name, true);\n      fieldInfo = fieldInfos.fieldInfo(name);\n      fieldInfo.omitTermFreqAndPositions = omitTF;\n      fieldInfo.storePayloads = storePayloads;\n      this.terms = terms;\n      for(int i=0;i<terms.length;i++)\n        terms[i].field = this;\n\n      Arrays.sort(terms);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2afd23a6f1242190c3409d8d81d5c5912d607fc9","date":1310477482,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#FieldData(String,FieldInfos,TermData[],boolean,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#FieldData(String,FieldInfos,TermData[],boolean,boolean).mjava","sourceNew":"    public FieldData(final String name, final FieldInfos fieldInfos, final TermData[] terms, final boolean omitTF, final boolean storePayloads) {\n      this.omitTF = omitTF;\n      this.storePayloads = storePayloads;\n      fieldInfos.addOrUpdate(name, true);\n      fieldInfo = fieldInfos.fieldInfo(name);\n      // TODO: change this test to use all three\n      fieldInfo.indexOptions = omitTF ? IndexOptions.DOCS_ONLY : IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n      fieldInfo.storePayloads = storePayloads;\n      this.terms = terms;\n      for(int i=0;i<terms.length;i++)\n        terms[i].field = this;\n\n      Arrays.sort(terms);\n    }\n\n","sourceOld":"    public FieldData(final String name, final FieldInfos fieldInfos, final TermData[] terms, final boolean omitTF, final boolean storePayloads) {\n      this.omitTF = omitTF;\n      this.storePayloads = storePayloads;\n      fieldInfos.addOrUpdate(name, true);\n      fieldInfo = fieldInfos.fieldInfo(name);\n      fieldInfo.omitTermFreqAndPositions = omitTF;\n      fieldInfo.storePayloads = storePayloads;\n      this.terms = terms;\n      for(int i=0;i<terms.length;i++)\n        terms[i].field = this;\n\n      Arrays.sort(terms);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCodecs.FieldData#FieldData(String,FieldInfos,TermData[],boolean,boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCodecs.FieldData#FieldData(String,FieldInfos,TermData[],boolean,boolean).mjava","sourceNew":"    public FieldData(final String name, final FieldInfos fieldInfos, final TermData[] terms, final boolean omitTF, final boolean storePayloads) {\n      this.omitTF = omitTF;\n      this.storePayloads = storePayloads;\n      fieldInfos.addOrUpdate(name, true);\n      fieldInfo = fieldInfos.fieldInfo(name);\n      // TODO: change this test to use all three\n      fieldInfo.indexOptions = omitTF ? IndexOptions.DOCS_ONLY : IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n      fieldInfo.storePayloads = storePayloads;\n      this.terms = terms;\n      for(int i=0;i<terms.length;i++)\n        terms[i].field = this;\n\n      Arrays.sort(terms);\n    }\n\n","sourceOld":"    public FieldData(final String name, final FieldInfos fieldInfos, final TermData[] terms, final boolean omitTF, final boolean storePayloads) {\n      this.omitTF = omitTF;\n      this.storePayloads = storePayloads;\n      fieldInfos.addOrUpdate(name, true);\n      fieldInfo = fieldInfos.fieldInfo(name);\n      // TODO: change this test to use all three\n      fieldInfo.indexOptions = omitTF ? IndexOptions.DOCS_ONLY : IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n      fieldInfo.storePayloads = storePayloads;\n      this.terms = terms;\n      for(int i=0;i<terms.length;i++)\n        terms[i].field = this;\n\n      Arrays.sort(terms);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["e92442af786151ee55bc283eb472f629e3c7b52b"],"e92442af786151ee55bc283eb472f629e3c7b52b":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","e92442af786151ee55bc283eb472f629e3c7b52b"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","e92442af786151ee55bc283eb472f629e3c7b52b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"e92442af786151ee55bc283eb472f629e3c7b52b":["2afd23a6f1242190c3409d8d81d5c5912d607fc9","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["e92442af786151ee55bc283eb472f629e3c7b52b","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}