{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SrndQueryTest#checkEqualParsings(String,String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SrndQueryTest#checkEqualParsings(String,String).mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/surround/query/SrndQueryTest#checkEqualParsings(String,String).mjava","sourceNew":"  void checkEqualParsings(String s1, String s2) throws Exception {\n    String fieldName = \"foo\";\n    BasicQueryFactory qf = new BasicQueryFactory(16);\n    Query lq1, lq2;\n    lq1 = QueryParser.parse(s1).makeLuceneQueryField(fieldName, qf);\n    lq2 = QueryParser.parse(s2).makeLuceneQueryField(fieldName, qf);\n    QueryUtils.checkEqual(lq1, lq2);\n  }\n\n","sourceOld":"  void checkEqualParsings(String s1, String s2) throws Exception {\n    String fieldName = \"foo\";\n    BasicQueryFactory qf = new BasicQueryFactory(16);\n    Query lq1, lq2;\n    lq1 = QueryParser.parse(s1).makeLuceneQueryField(fieldName, qf);\n    lq2 = QueryParser.parse(s2).makeLuceneQueryField(fieldName, qf);\n    QueryUtils.checkEqual(lq1, lq2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}