{"path":"lucene/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","commits":[{"id":"c9ff635e6838a2facda02727dec5b77d9e64dc4c","date":1316672863,"type":0,"author":"Doron Cohen","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", customType, \"\");\n    Document doc = new Document();\n    doc.add(f);\n    f.setValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    is.close();\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2","a78a90fc9701e511308346ea29f4f5e548bb39fe","6fb5dc223475059e18daa29ecbc9ee827971f72c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd","date":1317197236,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","sourceNew":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    is.close();\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", customType, \"\");\n    Document doc = new Document();\n    doc.add(f);\n    f.setValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    is.close();\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0e7c2454a6a8237bfd0e953f5b940838408c9055","date":1323649300,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","sourceNew":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    is.close();\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","date":1323720782,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","sourceNew":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    is.close();\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSloppyPhraseQuery#testSlopWithHoles().mjava","sourceNew":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3215\n  public void testSlopWithHoles() throws Exception {  \n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    FieldType customType = new FieldType(TextField.TYPE_UNSTORED);\n    customType.setOmitNorms(true);\n    Field f = new Field(\"lyrics\", \"\", customType);\n    Document doc = new Document();\n    doc.add(f);\n    f.setValue(\"drug drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy druggy drug\");\n    iw.addDocument(doc);\n    f.setValue(\"drug druggy drug druggy drug\");\n    iw.addDocument(doc);\n    IndexReader ir = iw.getReader();\n    iw.close();\n    IndexSearcher is = newSearcher(ir);\n    \n    PhraseQuery pq = new PhraseQuery();\n    // \"drug the drug\"~1\n    pq.add(new Term(\"lyrics\", \"drug\"), 1);\n    pq.add(new Term(\"lyrics\", \"drug\"), 4);\n    pq.setSlop(0);\n    assertEquals(0, is.search(pq, 4).totalHits);\n    pq.setSlop(1);\n    assertEquals(3, is.search(pq, 4).totalHits);\n    pq.setSlop(2);\n    assertEquals(4, is.search(pq, 4).totalHits);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"0e7c2454a6a8237bfd0e953f5b940838408c9055":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"c9ff635e6838a2facda02727dec5b77d9e64dc4c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["0e7c2454a6a8237bfd0e953f5b940838408c9055"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd","0e7c2454a6a8237bfd0e953f5b940838408c9055"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["c9ff635e6838a2facda02727dec5b77d9e64dc4c"]},"commit2Childs":{"0e7c2454a6a8237bfd0e953f5b940838408c9055":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"c9ff635e6838a2facda02727dec5b77d9e64dc4c":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9ff635e6838a2facda02727dec5b77d9e64dc4c"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["0e7c2454a6a8237bfd0e953f5b940838408c9055","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}