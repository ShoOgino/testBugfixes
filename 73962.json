{"path":"lucene/core/src/test/org/apache/lucene/util/automaton/FiniteStringsIteratorTest#testWithCycle().mjava","commits":[{"id":"35fa550f45857d99d3d6d743420ee54b4d0c37f8","date":1436039255,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/FiniteStringsIteratorTest#testWithCycle().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/automaton/TestOperations#testWithCycle().mjava","sourceNew":"  public void testWithCycle() throws Exception {\n    try {\n      Automaton a = new RegExp(\"abc.*\", RegExp.NONE).toAutomaton();\n      FiniteStringsIterator iterator = new FiniteStringsIterator(a);\n      getFiniteStrings(iterator);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n  }\n\n","sourceOld":"  public void testWithCycle() throws Exception {\n    try {\n      Operations.getFiniteStrings(new RegExp(\"abc.*\", RegExp.NONE).toAutomaton(), -1);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/FiniteStringsIteratorTest#testWithCycle().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/automaton/FiniteStringsIteratorTest#testWithCycle().mjava","sourceNew":"  public void testWithCycle() throws Exception {\n    expectThrows(IllegalArgumentException.class, () -> {\n      Automaton a = new RegExp(\"abc.*\", RegExp.NONE).toAutomaton();\n      FiniteStringsIterator iterator = new FiniteStringsIterator(a);\n      getFiniteStrings(iterator);\n    });\n  }\n\n","sourceOld":"  public void testWithCycle() throws Exception {\n    try {\n      Automaton a = new RegExp(\"abc.*\", RegExp.NONE).toAutomaton();\n      FiniteStringsIterator iterator = new FiniteStringsIterator(a);\n      getFiniteStrings(iterator);\n      fail(\"did not hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n  }\n\n","bugFix":["35fa550f45857d99d3d6d743420ee54b4d0c37f8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"35fa550f45857d99d3d6d743420ee54b4d0c37f8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["35fa550f45857d99d3d6d743420ee54b4d0c37f8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"35fa550f45857d99d3d6d743420ee54b4d0c37f8":["05fe562aa248790944d43cdd478f512572835ba0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["35fa550f45857d99d3d6d743420ee54b4d0c37f8"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}