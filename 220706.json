{"path":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#SpellChecker(Directory).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#SpellChecker(Directory).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#SpellChecker(Directory).mjava","sourceNew":"  /**\n   * Use the given directory as a spell checker index with a\n   * {@link LevensteinDistance} as the default {@link StringDistance}. The\n   * directory is created if it doesn't exist yet.\n   * \n   * @param spellIndex\n   *          the spell index directory\n   * @throws IOException\n   *           if spellchecker can not open the directory\n   */\n  public SpellChecker(Directory spellIndex) throws IOException {\n    this(spellIndex, new LevensteinDistance());\n  }\n\n","sourceOld":"  /**\n   * Use the given directory as a spell checker index with a\n   * {@link LevensteinDistance} as the default {@link StringDistance}. The\n   * directory is created if it doesn't exist yet.\n   * \n   * @param spellIndex\n   *          the spell index directory\n   * @throws IOException\n   *           if spellchecker can not open the directory\n   */\n  public SpellChecker(Directory spellIndex) throws IOException {\n    this(spellIndex, new LevensteinDistance());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#SpellChecker(Directory).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#SpellChecker(Directory).mjava","sourceNew":"  /**\n   * Use the given directory as a spell checker index with a\n   * {@link LevensteinDistance} as the default {@link StringDistance}. The\n   * directory is created if it doesn't exist yet.\n   * \n   * @param spellIndex\n   *          the spell index directory\n   * @throws IOException\n   *           if spellchecker can not open the directory\n   */\n  public SpellChecker(Directory spellIndex) throws IOException {\n    this(spellIndex, new LevensteinDistance());\n  }\n\n","sourceOld":"  /**\n   * Use the given directory as a spell checker index with a\n   * {@link LevensteinDistance} as the default {@link StringDistance}. The\n   * directory is created if it doesn't exist yet.\n   * \n   * @param spellIndex\n   *          the spell index directory\n   * @throws IOException\n   *           if spellchecker can not open the directory\n   */\n  public SpellChecker(Directory spellIndex) throws IOException {\n    this(spellIndex, new LevensteinDistance());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#SpellChecker(Directory).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#SpellChecker(Directory).mjava","sourceNew":"  /**\n   * Use the given directory as a spell checker index with a\n   * {@link LevensteinDistance} as the default {@link StringDistance}. The\n   * directory is created if it doesn't exist yet.\n   * \n   * @param spellIndex\n   *          the spell index directory\n   * @throws IOException\n   *           if spellchecker can not open the directory\n   */\n  public SpellChecker(Directory spellIndex) throws IOException {\n    this(spellIndex, new LevensteinDistance());\n  }\n\n","sourceOld":"  /**\n   * Use the given directory as a spell checker index with a\n   * {@link LevensteinDistance} as the default {@link StringDistance}. The\n   * directory is created if it doesn't exist yet.\n   * \n   * @param spellIndex\n   *          the spell index directory\n   * @throws IOException\n   *           if spellchecker can not open the directory\n   */\n  public SpellChecker(Directory spellIndex) throws IOException {\n    this(spellIndex, new LevensteinDistance());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d042843368f0d289e28164525546259d89d6dbb6","date":1512577756,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#SpellChecker(Directory).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/spell/SpellChecker#SpellChecker(Directory).mjava","sourceNew":"  /**\n   * Use the given directory as a spell checker index with a\n   * {@link LevenshteinDistance} as the default {@link StringDistance}. The\n   * directory is created if it doesn't exist yet.\n   * \n   * @param spellIndex\n   *          the spell index directory\n   * @throws IOException\n   *           if spellchecker can not open the directory\n   */\n  public SpellChecker(Directory spellIndex) throws IOException {\n    this(spellIndex, new LevenshteinDistance());\n  }\n\n","sourceOld":"  /**\n   * Use the given directory as a spell checker index with a\n   * {@link LevensteinDistance} as the default {@link StringDistance}. The\n   * directory is created if it doesn't exist yet.\n   * \n   * @param spellIndex\n   *          the spell index directory\n   * @throws IOException\n   *           if spellchecker can not open the directory\n   */\n  public SpellChecker(Directory spellIndex) throws IOException {\n    this(spellIndex, new LevensteinDistance());\n  }\n\n","bugFix":["edfb471a48a4bd226eefc6d6fd96195d9ce1db73","44b487964bd0a36812baf4cf5916e5b3cf0c04af"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d042843368f0d289e28164525546259d89d6dbb6":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d042843368f0d289e28164525546259d89d6dbb6"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["d042843368f0d289e28164525546259d89d6dbb6"],"d042843368f0d289e28164525546259d89d6dbb6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}