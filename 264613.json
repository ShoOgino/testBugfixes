{"path":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter.OrdinalMap#getMap().mjava","commits":[{"id":"ea469eab8fd0f3032f4fcde1c644a721e8309d3b","date":1320301582,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter.OrdinalMap#getMap().mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/lucene/LuceneTaxonomyWriter.OrdinalMap#getMap().mjava","sourceNew":"    /**\n     * Return the map from the taxonomy's original (consecutive) ordinals\n     * to the new taxonomy's ordinals. If the map has to be read from disk\n     * and ordered appropriately, it is done when getMap() is called.\n     * getMap() should only be called once, and only when the map is actually\n     * needed. Calling it will also free all resources that the map might\n     * be holding (such as temporary disk space), other than the returned int[].\n     */\n    public int[] getMap() throws IOException;\n\n","sourceOld":"    /**\n     * Return the map from the taxonomy's original (consecutive) ordinals\n     * to the new taxonomy's ordinals. If the map has to be read from disk\n     * and ordered appropriately, it is done when getMap() is called.\n     * getMap() should only be called once, and only when the map is actually\n     * needed. Calling it will also free all resources that the map might\n     * be holding (such as temporary disk space), other than the returned int[].\n     */\n    public int[] getMap() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter.OrdinalMap#getMap().mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter.OrdinalMap#getMap().mjava","sourceNew":"    /**\n     * Return the map from the taxonomy's original (consecutive) ordinals\n     * to the new taxonomy's ordinals. If the map has to be read from disk\n     * and ordered appropriately, it is done when getMap() is called.\n     * getMap() should only be called once, and only when the map is actually\n     * needed. Calling it will also free all resources that the map might\n     * be holding (such as temporary disk space), other than the returned int[].\n     */\n    public int[] getMap() throws IOException;\n\n","sourceOld":"    /**\n     * Return the map from the taxonomy's original (consecutive) ordinals\n     * to the new taxonomy's ordinals. If the map has to be read from disk\n     * and ordered appropriately, it is done when getMap() is called.\n     * getMap() should only be called once, and only when the map is actually\n     * needed. Calling it will also free all resources that the map might\n     * be holding (such as temporary disk space), other than the returned int[].\n     */\n    public int[] getMap() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"],"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}