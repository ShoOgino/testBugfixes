{"path":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#edit(Map[String,Object],List[CommandOperation]).mjava","commits":[{"id":"ccfb40e1834cac1619556a0becf198bb7bad5d63","date":1438887805,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#edit(Map[String,Object],List[CommandOperation]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Map<String, Object> edit(Map<String, Object> latestConf, List<CommandOperation> commands) {\n    if (zkAuthentication instanceof ConfigEditablePlugin) {\n      ConfigEditablePlugin editablePlugin = (ConfigEditablePlugin) zkAuthentication;\n      return editablePlugin.edit(latestConf, commands);\n    }\n    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"This cannot be edited\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3635776bfb39e459843cfe0a78c7f3f88602f8ea","date":1450428038,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#edit(Map[String,Object],List[CommandOperation]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#edit(Map[String,Object],List[CommandOperation]).mjava","sourceNew":"  @Override\n  public Map<String, Object> edit(Map<String, Object> latestConf, List<CommandOperation> commands) {\n    for (CommandOperation command : commands) {\n      if (command.name.equals(\"set-property\")) {\n        for (Map.Entry<String, Object> e : command.getDataMap().entrySet()) {\n          if (PROPS.contains(e.getKey())) {\n            latestConf.put(e.getKey(), e.getValue());\n          } else {\n            command.addError(\"Unknown property \" + e.getKey());\n          }\n        }\n      }\n    }\n    if (!CommandOperation.captureErrors(commands).isEmpty()) return null;\n    if (zkAuthentication instanceof ConfigEditablePlugin) {\n      ConfigEditablePlugin editablePlugin = (ConfigEditablePlugin) zkAuthentication;\n      return editablePlugin.edit(latestConf, commands);\n    }\n    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"This cannot be edited\");\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Object> edit(Map<String, Object> latestConf, List<CommandOperation> commands) {\n    if (zkAuthentication instanceof ConfigEditablePlugin) {\n      ConfigEditablePlugin editablePlugin = (ConfigEditablePlugin) zkAuthentication;\n      return editablePlugin.edit(latestConf, commands);\n    }\n    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"This cannot be edited\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b6b27adfd0ae23a874c905f6003b09606641f5f","date":1472324778,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#edit(Map[String,Object],List[CommandOperation]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#edit(Map[String,Object],List[CommandOperation]).mjava","sourceNew":"  @Override\n  public Map<String, Object> edit(Map<String, Object> latestConf, List<CommandOperation> commands) {\n    for (CommandOperation command : commands) {\n      if (command.name.equals(\"set-property\")) {\n        for (Map.Entry<String, Object> e : command.getDataMap().entrySet()) {\n          if (PROPS.contains(e.getKey())) {\n            latestConf.put(e.getKey(), e.getValue());\n            return latestConf;\n          } else {\n            command.addError(\"Unknown property \" + e.getKey());\n          }\n        }\n      }\n    }\n    if (!CommandOperation.captureErrors(commands).isEmpty()) return null;\n    if (zkAuthentication instanceof ConfigEditablePlugin) {\n      ConfigEditablePlugin editablePlugin = (ConfigEditablePlugin) zkAuthentication;\n      return editablePlugin.edit(latestConf, commands);\n    }\n    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"This cannot be edited\");\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Object> edit(Map<String, Object> latestConf, List<CommandOperation> commands) {\n    for (CommandOperation command : commands) {\n      if (command.name.equals(\"set-property\")) {\n        for (Map.Entry<String, Object> e : command.getDataMap().entrySet()) {\n          if (PROPS.contains(e.getKey())) {\n            latestConf.put(e.getKey(), e.getValue());\n          } else {\n            command.addError(\"Unknown property \" + e.getKey());\n          }\n        }\n      }\n    }\n    if (!CommandOperation.captureErrors(commands).isEmpty()) return null;\n    if (zkAuthentication instanceof ConfigEditablePlugin) {\n      ConfigEditablePlugin editablePlugin = (ConfigEditablePlugin) zkAuthentication;\n      return editablePlugin.edit(latestConf, commands);\n    }\n    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"This cannot be edited\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#edit(Map[String,Object],List[CommandOperation]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#edit(Map[String,Object],List[CommandOperation]).mjava","sourceNew":"  @Override\n  public Map<String, Object> edit(Map<String, Object> latestConf, List<CommandOperation> commands) {\n    for (CommandOperation command : commands) {\n      if (command.name.equals(\"set-property\")) {\n        for (Map.Entry<String, Object> e : command.getDataMap().entrySet()) {\n          if (PROPS.contains(e.getKey())) {\n            latestConf.put(e.getKey(), e.getValue());\n            return latestConf;\n          } else {\n            command.addError(\"Unknown property \" + e.getKey());\n          }\n        }\n      }\n    }\n    if (!CommandOperation.captureErrors(commands).isEmpty()) return null;\n    if (zkAuthentication instanceof ConfigEditablePlugin) {\n      ConfigEditablePlugin editablePlugin = (ConfigEditablePlugin) zkAuthentication;\n      return editablePlugin.edit(latestConf, commands);\n    }\n    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"This cannot be edited\");\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Object> edit(Map<String, Object> latestConf, List<CommandOperation> commands) {\n    for (CommandOperation command : commands) {\n      if (command.name.equals(\"set-property\")) {\n        for (Map.Entry<String, Object> e : command.getDataMap().entrySet()) {\n          if (PROPS.contains(e.getKey())) {\n            latestConf.put(e.getKey(), e.getValue());\n          } else {\n            command.addError(\"Unknown property \" + e.getKey());\n          }\n        }\n      }\n    }\n    if (!CommandOperation.captureErrors(commands).isEmpty()) return null;\n    if (zkAuthentication instanceof ConfigEditablePlugin) {\n      ConfigEditablePlugin editablePlugin = (ConfigEditablePlugin) zkAuthentication;\n      return editablePlugin.edit(latestConf, commands);\n    }\n    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"This cannot be edited\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#edit(Map[String,Object],List[CommandOperation]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#edit(Map[String,Object],List[CommandOperation]).mjava","sourceNew":"  @Override\n  public Map<String, Object> edit(Map<String, Object> latestConf, List<CommandOperation> commands) {\n    for (CommandOperation command : commands) {\n      if (command.name.equals(\"set-property\")) {\n        for (Map.Entry<String, Object> e : command.getDataMap().entrySet()) {\n          if (PROPS.contains(e.getKey())) {\n            latestConf.put(e.getKey(), e.getValue());\n            return latestConf;\n          } else {\n            command.addError(\"Unknown property \" + e.getKey());\n          }\n        }\n      }\n    }\n    if (!CommandOperation.captureErrors(commands).isEmpty()) return null;\n    if (zkAuthentication instanceof ConfigEditablePlugin) {\n      ConfigEditablePlugin editablePlugin = (ConfigEditablePlugin) zkAuthentication;\n      return editablePlugin.edit(latestConf, commands);\n    }\n    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"This cannot be edited\");\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Object> edit(Map<String, Object> latestConf, List<CommandOperation> commands) {\n    for (CommandOperation command : commands) {\n      if (command.name.equals(\"set-property\")) {\n        for (Map.Entry<String, Object> e : command.getDataMap().entrySet()) {\n          if (PROPS.contains(e.getKey())) {\n            latestConf.put(e.getKey(), e.getValue());\n          } else {\n            command.addError(\"Unknown property \" + e.getKey());\n          }\n        }\n      }\n    }\n    if (!CommandOperation.captureErrors(commands).isEmpty()) return null;\n    if (zkAuthentication instanceof ConfigEditablePlugin) {\n      ConfigEditablePlugin editablePlugin = (ConfigEditablePlugin) zkAuthentication;\n      return editablePlugin.edit(latestConf, commands);\n    }\n    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"This cannot be edited\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"170ef9c82c0d27d4151feff316ba63fbedd91bbf","date":1477436680,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#edit(Map[String,Object],List[CommandOperation]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#edit(Map[String,Object],List[CommandOperation]).mjava","sourceNew":"  @Override\n  public Map<String, Object> edit(Map<String, Object> latestConf, List<CommandOperation> commands) {\n    for (CommandOperation command : commands) {\n      if (command.name.equals(\"set-property\")) {\n        for (Map.Entry<String, Object> e : command.getDataMap().entrySet()) {\n          if (PROPS.contains(e.getKey())) {\n            latestConf.put(e.getKey(), e.getValue());\n            return latestConf;\n          } else {\n            command.addError(\"Unknown property \" + e.getKey());\n          }\n        }\n      }\n    }\n    if (!CommandOperation.captureErrors(commands).isEmpty()) return null;\n    if (authenticationProvider instanceof ConfigEditablePlugin) {\n      ConfigEditablePlugin editablePlugin = (ConfigEditablePlugin) authenticationProvider;\n      return editablePlugin.edit(latestConf, commands);\n    }\n    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"This cannot be edited\");\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Object> edit(Map<String, Object> latestConf, List<CommandOperation> commands) {\n    for (CommandOperation command : commands) {\n      if (command.name.equals(\"set-property\")) {\n        for (Map.Entry<String, Object> e : command.getDataMap().entrySet()) {\n          if (PROPS.contains(e.getKey())) {\n            latestConf.put(e.getKey(), e.getValue());\n            return latestConf;\n          } else {\n            command.addError(\"Unknown property \" + e.getKey());\n          }\n        }\n      }\n    }\n    if (!CommandOperation.captureErrors(commands).isEmpty()) return null;\n    if (zkAuthentication instanceof ConfigEditablePlugin) {\n      ConfigEditablePlugin editablePlugin = (ConfigEditablePlugin) zkAuthentication;\n      return editablePlugin.edit(latestConf, commands);\n    }\n    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"This cannot be edited\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b363b110592b02d7f488aff0dbe40a53d3ce81df","date":1477469211,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#edit(Map[String,Object],List[CommandOperation]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#edit(Map[String,Object],List[CommandOperation]).mjava","sourceNew":"  @Override\n  public Map<String, Object> edit(Map<String, Object> latestConf, List<CommandOperation> commands) {\n    for (CommandOperation command : commands) {\n      if (command.name.equals(\"set-property\")) {\n        for (Map.Entry<String, Object> e : command.getDataMap().entrySet()) {\n          if (PROPS.contains(e.getKey())) {\n            latestConf.put(e.getKey(), e.getValue());\n            return latestConf;\n          } else {\n            command.addError(\"Unknown property \" + e.getKey());\n          }\n        }\n      }\n    }\n    if (!CommandOperation.captureErrors(commands).isEmpty()) return null;\n    if (authenticationProvider instanceof ConfigEditablePlugin) {\n      ConfigEditablePlugin editablePlugin = (ConfigEditablePlugin) authenticationProvider;\n      return editablePlugin.edit(latestConf, commands);\n    }\n    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"This cannot be edited\");\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Object> edit(Map<String, Object> latestConf, List<CommandOperation> commands) {\n    for (CommandOperation command : commands) {\n      if (command.name.equals(\"set-property\")) {\n        for (Map.Entry<String, Object> e : command.getDataMap().entrySet()) {\n          if (PROPS.contains(e.getKey())) {\n            latestConf.put(e.getKey(), e.getValue());\n            return latestConf;\n          } else {\n            command.addError(\"Unknown property \" + e.getKey());\n          }\n        }\n      }\n    }\n    if (!CommandOperation.captureErrors(commands).isEmpty()) return null;\n    if (zkAuthentication instanceof ConfigEditablePlugin) {\n      ConfigEditablePlugin editablePlugin = (ConfigEditablePlugin) zkAuthentication;\n      return editablePlugin.edit(latestConf, commands);\n    }\n    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"This cannot be edited\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#edit(Map[String,Object],List[CommandOperation]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#edit(Map[String,Object],List[CommandOperation]).mjava","sourceNew":"  @Override\n  public Map<String, Object> edit(Map<String, Object> latestConf, List<CommandOperation> commands) {\n    for (CommandOperation command : commands) {\n      if (command.name.equals(\"set-property\")) {\n        for (Map.Entry<String, Object> e : command.getDataMap().entrySet()) {\n          if (PROPS.contains(e.getKey())) {\n            latestConf.put(e.getKey(), e.getValue());\n            return latestConf;\n          } else {\n            command.addError(\"Unknown property \" + e.getKey());\n          }\n        }\n      }\n    }\n    if (!CommandOperation.captureErrors(commands).isEmpty()) return null;\n    if (authenticationProvider instanceof ConfigEditablePlugin) {\n      ConfigEditablePlugin editablePlugin = (ConfigEditablePlugin) authenticationProvider;\n      return editablePlugin.edit(latestConf, commands);\n    }\n    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"This cannot be edited\");\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Object> edit(Map<String, Object> latestConf, List<CommandOperation> commands) {\n    for (CommandOperation command : commands) {\n      if (command.name.equals(\"set-property\")) {\n        for (Map.Entry<String, Object> e : command.getDataMap().entrySet()) {\n          if (PROPS.contains(e.getKey())) {\n            latestConf.put(e.getKey(), e.getValue());\n            return latestConf;\n          } else {\n            command.addError(\"Unknown property \" + e.getKey());\n          }\n        }\n      }\n    }\n    if (!CommandOperation.captureErrors(commands).isEmpty()) return null;\n    if (zkAuthentication instanceof ConfigEditablePlugin) {\n      ConfigEditablePlugin editablePlugin = (ConfigEditablePlugin) zkAuthentication;\n      return editablePlugin.edit(latestConf, commands);\n    }\n    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"This cannot be edited\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4bb519c79b76e52145e37b6681a7012525ed5f4b","date":1544694716,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#edit(Map[String,Object],List[CommandOperation]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#edit(Map[String,Object],List[CommandOperation]).mjava","sourceNew":"  @Override\n  public Map<String, Object> edit(Map<String, Object> latestConf, List<CommandOperation> commands) {\n    for (CommandOperation command : commands) {\n      if (command.name.equals(\"set-property\")) {\n        for (Map.Entry<String, Object> e : command.getDataMap().entrySet()) {\n          if (PROPS.contains(e.getKey())) {\n            latestConf.put(e.getKey(), e.getValue());\n            return latestConf;\n          } else {\n            command.addError(\"Unknown property \" + e.getKey());\n          }\n        }\n      }\n    }\n    if (!CommandOperation.captureErrors(commands).isEmpty()) return null;\n    if (authenticationProvider instanceof ConfigEditablePlugin) {\n      ConfigEditablePlugin editablePlugin = (ConfigEditablePlugin) authenticationProvider;\n      return editablePlugin.edit(latestConf, commands);\n    }\n    throw new SolrException(ErrorCode.BAD_REQUEST, \"This cannot be edited\");\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Object> edit(Map<String, Object> latestConf, List<CommandOperation> commands) {\n    for (CommandOperation command : commands) {\n      if (command.name.equals(\"set-property\")) {\n        for (Map.Entry<String, Object> e : command.getDataMap().entrySet()) {\n          if (PROPS.contains(e.getKey())) {\n            latestConf.put(e.getKey(), e.getValue());\n            return latestConf;\n          } else {\n            command.addError(\"Unknown property \" + e.getKey());\n          }\n        }\n      }\n    }\n    if (!CommandOperation.captureErrors(commands).isEmpty()) return null;\n    if (authenticationProvider instanceof ConfigEditablePlugin) {\n      ConfigEditablePlugin editablePlugin = (ConfigEditablePlugin) authenticationProvider;\n      return editablePlugin.edit(latestConf, commands);\n    }\n    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"This cannot be edited\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4bb519c79b76e52145e37b6681a7012525ed5f4b":["b363b110592b02d7f488aff0dbe40a53d3ce81df"],"170ef9c82c0d27d4151feff316ba63fbedd91bbf":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"3635776bfb39e459843cfe0a78c7f3f88602f8ea":["ccfb40e1834cac1619556a0becf198bb7bad5d63"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["3635776bfb39e459843cfe0a78c7f3f88602f8ea","7b6b27adfd0ae23a874c905f6003b09606641f5f"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","b363b110592b02d7f488aff0dbe40a53d3ce81df"],"7b6b27adfd0ae23a874c905f6003b09606641f5f":["3635776bfb39e459843cfe0a78c7f3f88602f8ea"],"b363b110592b02d7f488aff0dbe40a53d3ce81df":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","170ef9c82c0d27d4151feff316ba63fbedd91bbf"],"ccfb40e1834cac1619556a0becf198bb7bad5d63":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["3635776bfb39e459843cfe0a78c7f3f88602f8ea","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4bb519c79b76e52145e37b6681a7012525ed5f4b"]},"commit2Childs":{"4bb519c79b76e52145e37b6681a7012525ed5f4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"170ef9c82c0d27d4151feff316ba63fbedd91bbf":["b363b110592b02d7f488aff0dbe40a53d3ce81df"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["170ef9c82c0d27d4151feff316ba63fbedd91bbf","b363b110592b02d7f488aff0dbe40a53d3ce81df","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"3635776bfb39e459843cfe0a78c7f3f88602f8ea":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","7b6b27adfd0ae23a874c905f6003b09606641f5f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ccfb40e1834cac1619556a0becf198bb7bad5d63"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"b363b110592b02d7f488aff0dbe40a53d3ce81df":["4bb519c79b76e52145e37b6681a7012525ed5f4b","80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"7b6b27adfd0ae23a874c905f6003b09606641f5f":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"ccfb40e1834cac1619556a0becf198bb7bad5d63":["3635776bfb39e459843cfe0a78c7f3f88602f8ea"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}