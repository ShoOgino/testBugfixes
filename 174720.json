{"path":"contrib/analyzers/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter#assertNext(TokenStream,String,int,float,int,int).mjava","commits":[{"id":"660fdd379b3fe276cd3a63d9c5852cef6dd5d54f","date":1215042831,"type":0,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/analyzers/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter#assertNext(TokenStream,String,int,float,int,int).mjava","pathOld":"/dev/null","sourceNew":"  private Token assertNext(TokenStream ts, String text, int positionIncrement, float boost, int startOffset, int endOffset) throws IOException {\n    Token token = ts.next(new Token());\n    assertNotNull(token);\n    assertEquals(text, new String(token.termBuffer(), 0, token.termLength()));\n    assertEquals(positionIncrement, token.getPositionIncrement());\n    assertEquals(boost, token.getPayload() == null ? 1f : PayloadHelper.decodeFloat(token.getPayload().getData()));\n    assertEquals(startOffset, token.startOffset());\n    assertEquals(endOffset, token.endOffset());\n    return token;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e2cb543b41c145f33390f460ee743d6693c9c6c","date":1219243087,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter#assertNext(TokenStream,String,int,float,int,int).mjava","sourceNew":null,"sourceOld":"  private Token assertNext(TokenStream ts, String text, int positionIncrement, float boost, int startOffset, int endOffset) throws IOException {\n    Token token = ts.next(new Token());\n    assertNotNull(token);\n    assertEquals(text, new String(token.termBuffer(), 0, token.termLength()));\n    assertEquals(positionIncrement, token.getPositionIncrement());\n    assertEquals(boost, token.getPayload() == null ? 1f : PayloadHelper.decodeFloat(token.getPayload().getData()));\n    assertEquals(startOffset, token.startOffset());\n    assertEquals(endOffset, token.endOffset());\n    return token;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["660fdd379b3fe276cd3a63d9c5852cef6dd5d54f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"660fdd379b3fe276cd3a63d9c5852cef6dd5d54f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7e2cb543b41c145f33390f460ee743d6693c9c6c"]},"commit2Childs":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["660fdd379b3fe276cd3a63d9c5852cef6dd5d54f"],"660fdd379b3fe276cd3a63d9c5852cef6dd5d54f":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}