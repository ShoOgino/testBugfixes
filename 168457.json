{"path":"solr/core/src/test/org/apache/solr/schema/TestCloudManagedSchema#assertFileNotInZooKeeper(String).mjava","commits":[{"id":"9cf81bc8c6e4078e236f0e38b3a2d0271854f207","date":1364832963,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestCloudManagedSchema#assertFileNotInZooKeeper(String).mjava","pathOld":"/dev/null","sourceNew":"  protected final void assertFileNotInZooKeeper(String fileName) throws Exception {\n    // Stolen from AbstractBadConfigTestBase\n    String errString = \"returned non ok status:404, message:Not Found\";\n    ignoreException(Pattern.quote(errString));\n    String rawContent = null;\n    try {\n      rawContent = getFileContentFromZooKeeper(fileName);\n    } catch (Exception e) {\n      // short circuit out if we found what we expected\n      if (-1 != e.getMessage().indexOf(errString)) return;\n      // otherwise, rethrow it, possibly completely unrelated\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                              \"Unexpected error, expected error matching: \" + errString, e);\n    } finally {\n      resetExceptionIgnores();\n    }\n    fail(\"File '\" + fileName + \"' was unexpectedly found in ZooKeeper.  Content starts with '\" \n        + rawContent.substring(0, 100) + \" [...]'\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7a899ae08a2414e44e9aec7db9783e3da08996d9"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7a899ae08a2414e44e9aec7db9783e3da08996d9","date":1380547227,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestCloudManagedSchema#assertFileNotInZooKeeper(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestCloudManagedSchema#assertFileNotInZooKeeper(String).mjava","sourceNew":"  protected final void assertFileNotInZooKeeper(String fileName) throws Exception {\n    // Stolen from AbstractBadConfigTestBase\n    String errString = \"Not Found\";\n    ignoreException(Pattern.quote(errString));\n    String rawContent = null;\n    try {\n      rawContent = getFileContentFromZooKeeper(fileName);\n    } catch (Exception e) {\n      // short circuit out if we found what we expected\n      if (-1 != e.getMessage().indexOf(errString)) return;\n      // otherwise, rethrow it, possibly completely unrelated\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                              \"Unexpected error, expected error matching: \" + errString, e);\n    } finally {\n      resetExceptionIgnores();\n    }\n    fail(\"File '\" + fileName + \"' was unexpectedly found in ZooKeeper.  Content starts with '\" \n        + rawContent.substring(0, 100) + \" [...]'\");\n  }\n\n","sourceOld":"  protected final void assertFileNotInZooKeeper(String fileName) throws Exception {\n    // Stolen from AbstractBadConfigTestBase\n    String errString = \"returned non ok status:404, message:Not Found\";\n    ignoreException(Pattern.quote(errString));\n    String rawContent = null;\n    try {\n      rawContent = getFileContentFromZooKeeper(fileName);\n    } catch (Exception e) {\n      // short circuit out if we found what we expected\n      if (-1 != e.getMessage().indexOf(errString)) return;\n      // otherwise, rethrow it, possibly completely unrelated\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                              \"Unexpected error, expected error matching: \" + errString, e);\n    } finally {\n      resetExceptionIgnores();\n    }\n    fail(\"File '\" + fileName + \"' was unexpectedly found in ZooKeeper.  Content starts with '\" \n        + rawContent.substring(0, 100) + \" [...]'\");\n  }\n\n","bugFix":["9cf81bc8c6e4078e236f0e38b3a2d0271854f207"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11bf766bfc5fc48f7099fd6d555b16d5ad4478f9","date":1384729182,"type":4,"author":"Erick Erickson","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/schema/TestCloudManagedSchema#assertFileNotInZooKeeper(String).mjava","sourceNew":null,"sourceOld":"  protected final void assertFileNotInZooKeeper(String fileName) throws Exception {\n    // Stolen from AbstractBadConfigTestBase\n    String errString = \"Not Found\";\n    ignoreException(Pattern.quote(errString));\n    String rawContent = null;\n    try {\n      rawContent = getFileContentFromZooKeeper(fileName);\n    } catch (Exception e) {\n      // short circuit out if we found what we expected\n      if (-1 != e.getMessage().indexOf(errString)) return;\n      // otherwise, rethrow it, possibly completely unrelated\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                              \"Unexpected error, expected error matching: \" + errString, e);\n    } finally {\n      resetExceptionIgnores();\n    }\n    fail(\"File '\" + fileName + \"' was unexpectedly found in ZooKeeper.  Content starts with '\" \n        + rawContent.substring(0, 100) + \" [...]'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/schema/TestCloudManagedSchema#assertFileNotInZooKeeper(String).mjava","sourceNew":null,"sourceOld":"  protected final void assertFileNotInZooKeeper(String fileName) throws Exception {\n    // Stolen from AbstractBadConfigTestBase\n    String errString = \"Not Found\";\n    ignoreException(Pattern.quote(errString));\n    String rawContent = null;\n    try {\n      rawContent = getFileContentFromZooKeeper(fileName);\n    } catch (Exception e) {\n      // short circuit out if we found what we expected\n      if (-1 != e.getMessage().indexOf(errString)) return;\n      // otherwise, rethrow it, possibly completely unrelated\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \n                              \"Unexpected error, expected error matching: \" + errString, e);\n    } finally {\n      resetExceptionIgnores();\n    }\n    fail(\"File '\" + fileName + \"' was unexpectedly found in ZooKeeper.  Content starts with '\" \n        + rawContent.substring(0, 100) + \" [...]'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"11bf766bfc5fc48f7099fd6d555b16d5ad4478f9":["7a899ae08a2414e44e9aec7db9783e3da08996d9"],"7a899ae08a2414e44e9aec7db9783e3da08996d9":["9cf81bc8c6e4078e236f0e38b3a2d0271854f207"],"9cf81bc8c6e4078e236f0e38b3a2d0271854f207":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["7a899ae08a2414e44e9aec7db9783e3da08996d9","11bf766bfc5fc48f7099fd6d555b16d5ad4478f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["11bf766bfc5fc48f7099fd6d555b16d5ad4478f9"]},"commit2Childs":{"11bf766bfc5fc48f7099fd6d555b16d5ad4478f9":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7a899ae08a2414e44e9aec7db9783e3da08996d9":["11bf766bfc5fc48f7099fd6d555b16d5ad4478f9","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"9cf81bc8c6e4078e236f0e38b3a2d0271854f207":["7a899ae08a2414e44e9aec7db9783e3da08996d9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9cf81bc8c6e4078e236f0e38b3a2d0271854f207"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}