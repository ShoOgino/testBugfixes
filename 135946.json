{"path":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#close().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#close().mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/store/MockIndexInputWrapper#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      // turn on the following to look for leaks closing inputs,\n      // after fixing TestTransactions\n      // dir.maybeThrowDeterministicException();\n    } finally {\n      closed = true;\n      delegate.close();\n      // Pending resolution on LUCENE-686 we may want to\n      // remove the conditional check so we also track that\n      // all clones get closed:\n      if (!isClone) {\n        dir.removeIndexInput(this, name);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      // turn on the following to look for leaks closing inputs,\n      // after fixing TestTransactions\n      // dir.maybeThrowDeterministicException();\n    } finally {\n      closed = true;\n      delegate.close();\n      // Pending resolution on LUCENE-686 we may want to\n      // remove the conditional check so we also track that\n      // all clones get closed:\n      if (!isClone) {\n        dir.removeIndexInput(this, name);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f35b6636d641ec7fe9d7e9dbb0a443d47bdf784a","date":1419273748,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (closed) {\n      delegate.close(); // don't mask double-close bugs\n      return;\n    }\n    closed = true;\n    \n    try {\n      // turn on the following to look for leaks closing inputs,\n      // after fixing TestTransactions\n      // dir.maybeThrowDeterministicException();\n    } finally {\n      delegate.close();\n      // Pending resolution on LUCENE-686 we may want to\n      // remove the conditional check so we also track that\n      // all clones get closed:\n      if (!isClone) {\n        dir.removeIndexInput(this, name);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      // turn on the following to look for leaks closing inputs,\n      // after fixing TestTransactions\n      // dir.maybeThrowDeterministicException();\n    } finally {\n      closed = true;\n      delegate.close();\n      // Pending resolution on LUCENE-686 we may want to\n      // remove the conditional check so we also track that\n      // all clones get closed:\n      if (!isClone) {\n        dir.removeIndexInput(this, name);\n      }\n    }\n  }\n\n","bugFix":["63cf2ccc69527b763ccb5ab87417cbb96556ff13"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c54115ac0b1e37ac80a357ba82f3f2f95c16753b","date":1419349516,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // TODO turn on the following to look for leaks closing inputs,\n    // after fixing TestTransactions\n    // dir.maybeThrowDeterministicException();\n    if (closed) {\n      delegate.close(); // don't mask double-close bugs\n      return;\n    }\n    closed = true;\n    \n    try (Closeable delegate = this.delegate) {\n      // Pending resolution on LUCENE-686 we may want to\n      // remove the conditional check so we also track that\n      // all clones get closed:\n      assert delegate != null;\n      if (!isClone) {\n        dir.removeIndexInput(this, name);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (closed) {\n      delegate.close(); // don't mask double-close bugs\n      return;\n    }\n    closed = true;\n    \n    try {\n      // turn on the following to look for leaks closing inputs,\n      // after fixing TestTransactions\n      // dir.maybeThrowDeterministicException();\n    } finally {\n      delegate.close();\n      // Pending resolution on LUCENE-686 we may want to\n      // remove the conditional check so we also track that\n      // all clones get closed:\n      if (!isClone) {\n        dir.removeIndexInput(this, name);\n      }\n    }\n  }\n\n","bugFix":["efb7a19703a037c29e30440260d393500febc1f4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19db42d0b541c39fee97429b55d2cf8755d31856","date":1428461231,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (closed) {\n      delegate.close(); // don't mask double-close bugs\n      return;\n    }\n    closed = true;\n    \n    try (Closeable delegate = this.delegate) {\n      // Pending resolution on LUCENE-686 we may want to\n      // remove the conditional check so we also track that\n      // all clones get closed:\n      assert delegate != null;\n      if (!isClone) {\n        dir.removeIndexInput(this, name);\n      }\n      dir.maybeThrowDeterministicException();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    // TODO turn on the following to look for leaks closing inputs,\n    // after fixing TestTransactions\n    // dir.maybeThrowDeterministicException();\n    if (closed) {\n      delegate.close(); // don't mask double-close bugs\n      return;\n    }\n    closed = true;\n    \n    try (Closeable delegate = this.delegate) {\n      // Pending resolution on LUCENE-686 we may want to\n      // remove the conditional check so we also track that\n      // all clones get closed:\n      assert delegate != null;\n      if (!isClone) {\n        dir.removeIndexInput(this, name);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5e561b4438c227a4d8960523d49ce735652ae66","date":1470733409,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (closed) {\n      delegate.close(); // don't mask double-close bugs\n      return;\n    }\n    closed = true;\n    \n    try (Closeable delegate = this.delegate) {\n      // Pending resolution on LUCENE-686 we may want to\n      // remove the conditional check so we also track that\n      // all clones get closed:\n      assert delegate != null;\n      if (parent == null) {\n        dir.removeIndexInput(this, name);\n      }\n      dir.maybeThrowDeterministicException();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (closed) {\n      delegate.close(); // don't mask double-close bugs\n      return;\n    }\n    closed = true;\n    \n    try (Closeable delegate = this.delegate) {\n      // Pending resolution on LUCENE-686 we may want to\n      // remove the conditional check so we also track that\n      // all clones get closed:\n      assert delegate != null;\n      if (!isClone) {\n        dir.removeIndexInput(this, name);\n      }\n      dir.maybeThrowDeterministicException();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8bca25eefa1f2205e2b0ef713701dc3a0fecd702","date":1470810578,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (closed) {\n      delegate.close(); // don't mask double-close bugs\n      return;\n    }\n    closed = true;\n    \n    try (Closeable delegate = this.delegate) {\n      // Pending resolution on LUCENE-686 we may want to\n      // remove the conditional check so we also track that\n      // all clones get closed:\n      assert delegate != null;\n      if (parent == null) {\n        dir.removeIndexInput(this, name);\n      }\n      dir.maybeThrowDeterministicException();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (closed) {\n      delegate.close(); // don't mask double-close bugs\n      return;\n    }\n    closed = true;\n    \n    try (Closeable delegate = this.delegate) {\n      // Pending resolution on LUCENE-686 we may want to\n      // remove the conditional check so we also track that\n      // all clones get closed:\n      assert delegate != null;\n      if (!isClone) {\n        dir.removeIndexInput(this, name);\n      }\n      dir.maybeThrowDeterministicException();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (closed) {\n      delegate.close(); // don't mask double-close bugs\n      return;\n    }\n    closed = true;\n    \n    try (Closeable delegate = this.delegate) {\n      // Pending resolution on LUCENE-686 we may want to\n      // remove the conditional check so we also track that\n      // all clones get closed:\n      assert delegate != null;\n      if (parent == null) {\n        dir.removeIndexInput(this, name);\n      }\n      dir.maybeThrowDeterministicException();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (closed) {\n      delegate.close(); // don't mask double-close bugs\n      return;\n    }\n    closed = true;\n    \n    try (Closeable delegate = this.delegate) {\n      // Pending resolution on LUCENE-686 we may want to\n      // remove the conditional check so we also track that\n      // all clones get closed:\n      assert delegate != null;\n      if (!isClone) {\n        dir.removeIndexInput(this, name);\n      }\n      dir.maybeThrowDeterministicException();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockIndexInputWrapper#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (closed) {\n      delegate.close(); // don't mask double-close bugs\n      return;\n    }\n    closed = true;\n    \n    try (Closeable delegate = this.delegate) {\n      // Pending resolution on LUCENE-686 we may want to\n      // remove the conditional check so we also track that\n      // all clones get closed:\n      assert delegate != null;\n      if (parent == null) {\n        dir.removeIndexInput(this, name);\n      }\n      dir.maybeThrowDeterministicException();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (closed) {\n      delegate.close(); // don't mask double-close bugs\n      return;\n    }\n    closed = true;\n    \n    try (Closeable delegate = this.delegate) {\n      // Pending resolution on LUCENE-686 we may want to\n      // remove the conditional check so we also track that\n      // all clones get closed:\n      assert delegate != null;\n      if (!isClone) {\n        dir.removeIndexInput(this, name);\n      }\n      dir.maybeThrowDeterministicException();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8bca25eefa1f2205e2b0ef713701dc3a0fecd702":["19db42d0b541c39fee97429b55d2cf8755d31856","a5e561b4438c227a4d8960523d49ce735652ae66"],"f35b6636d641ec7fe9d7e9dbb0a443d47bdf784a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19db42d0b541c39fee97429b55d2cf8755d31856":["c54115ac0b1e37ac80a357ba82f3f2f95c16753b"],"a5e561b4438c227a4d8960523d49ce735652ae66":["19db42d0b541c39fee97429b55d2cf8755d31856"],"c54115ac0b1e37ac80a357ba82f3f2f95c16753b":["f35b6636d641ec7fe9d7e9dbb0a443d47bdf784a"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["19db42d0b541c39fee97429b55d2cf8755d31856","8bca25eefa1f2205e2b0ef713701dc3a0fecd702"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["19db42d0b541c39fee97429b55d2cf8755d31856","8bca25eefa1f2205e2b0ef713701dc3a0fecd702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8bca25eefa1f2205e2b0ef713701dc3a0fecd702"]},"commit2Childs":{"8bca25eefa1f2205e2b0ef713701dc3a0fecd702":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f35b6636d641ec7fe9d7e9dbb0a443d47bdf784a":["c54115ac0b1e37ac80a357ba82f3f2f95c16753b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f35b6636d641ec7fe9d7e9dbb0a443d47bdf784a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"19db42d0b541c39fee97429b55d2cf8755d31856":["8bca25eefa1f2205e2b0ef713701dc3a0fecd702","a5e561b4438c227a4d8960523d49ce735652ae66","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"a5e561b4438c227a4d8960523d49ce735652ae66":["8bca25eefa1f2205e2b0ef713701dc3a0fecd702"],"c54115ac0b1e37ac80a357ba82f3f2f95c16753b":["19db42d0b541c39fee97429b55d2cf8755d31856"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}