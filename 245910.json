{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(InputSource,SolrCore,Map[String,Properties],Map[String,Object],String).mjava","commits":[{"id":"82c0f50a240cf02105b13b11e49095779864d37f","date":1311151772,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(InputSource,SolrCore,Map[String,Properties],Map[String,Object],String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(InputSource,SolrCore,Map[String,Properties],Map[String,Object]).mjava","sourceNew":"  DataImporter(InputSource dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session, String handlerName) {\n      this.handlerName = handlerName;\n    if (dataConfig == null)\n      throw new DataImportHandlerException(SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    this.propWriter = new SimplePropertiesWriter();\n    propWriter.init(this);\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(Locale.ENGLISH), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      verifyWithSchema(fields);\n      identifyPk(e);\n      if (e.allAttributes.containsKey(SqlEntityProcessor.DELTA_QUERY))\n        isDeltaImportSupported = true;\n    }\n  }\n\n","sourceOld":"  DataImporter(InputSource dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session) {\n    if (dataConfig == null)\n      throw new DataImportHandlerException(SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(Locale.ENGLISH), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      verifyWithSchema(fields);\n      identifyPk(e);\n      if (e.allAttributes.containsKey(SqlEntityProcessor.DELTA_QUERY))\n        isDeltaImportSupported = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b2a6913ca906832d1ef58d72498167acb00a7e4f","date":1330499260,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(InputSource,SolrCore,Map[String,Properties],Map[String,Object],String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(InputSource,SolrCore,Map[String,Properties],Map[String,Object],String).mjava","sourceNew":"  DataImporter(InputSource dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session, String handlerName) {\n      this.handlerName = handlerName;\n    if (dataConfig == null)\n      throw new DataImportHandlerException(SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    createPropertyWriter();\n    propWriter.init(this);\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(Locale.ENGLISH), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      verifyWithSchema(fields);\n      identifyPk(e);\n      if (e.allAttributes.containsKey(SqlEntityProcessor.DELTA_QUERY))\n        isDeltaImportSupported = true;\n    }\n  }\n\n","sourceOld":"  DataImporter(InputSource dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session, String handlerName) {\n      this.handlerName = handlerName;\n    if (dataConfig == null)\n      throw new DataImportHandlerException(SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    this.propWriter = new SimplePropertiesWriter();\n    propWriter.init(this);\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(Locale.ENGLISH), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      verifyWithSchema(fields);\n      identifyPk(e);\n      if (e.allAttributes.containsKey(SqlEntityProcessor.DELTA_QUERY))\n        isDeltaImportSupported = true;\n    }\n  }\n\n","bugFix":["82c0f50a240cf02105b13b11e49095779864d37f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(InputSource,SolrCore,Map[String,Properties],Map[String,Object],String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(InputSource,SolrCore,Map[String,Properties],Map[String,Object],String).mjava","sourceNew":"  DataImporter(InputSource dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session, String handlerName) {\n      this.handlerName = handlerName;\n    if (dataConfig == null)\n      throw new DataImportHandlerException(SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    createPropertyWriter();\n    propWriter.init(this);\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(Locale.ENGLISH), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      verifyWithSchema(fields);\n      identifyPk(e);\n      if (e.allAttributes.containsKey(SqlEntityProcessor.DELTA_QUERY))\n        isDeltaImportSupported = true;\n    }\n  }\n\n","sourceOld":"  DataImporter(InputSource dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session, String handlerName) {\n      this.handlerName = handlerName;\n    if (dataConfig == null)\n      throw new DataImportHandlerException(SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    this.propWriter = new SimplePropertiesWriter();\n    propWriter.init(this);\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(Locale.ENGLISH), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      verifyWithSchema(fields);\n      identifyPk(e);\n      if (e.allAttributes.containsKey(SqlEntityProcessor.DELTA_QUERY))\n        isDeltaImportSupported = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c","date":1335805170,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(InputSource,SolrCore,Map[String,Properties],Map[String,Object],String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(InputSource,SolrCore,Map[String,Properties],Map[String,Object],String).mjava","sourceNew":"  DataImporter(InputSource dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session, String handlerName) {\n    this.handlerName = handlerName;\n    if (dataConfig == null) {\n      throw new DataImportHandlerException(SEVERE, \"Configuration not found\");\n    }\n    this.core = core;\n    this.schema = core.getSchema();\n    loadSchemaFieldMap();\n    createPropertyWriter();\n    \n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n   \n    for (Entity e : config.getEntities()) {\n      if (e.getAllAttributes().containsKey(SqlEntityProcessor.DELTA_QUERY)) {\n        isDeltaImportSupported = true;\n        break;\n      }\n    }\n  }\n\n","sourceOld":"  DataImporter(InputSource dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session, String handlerName) {\n      this.handlerName = handlerName;\n    if (dataConfig == null)\n      throw new DataImportHandlerException(SEVERE,\n              \"Configuration not found\");\n    this.core = core;\n    this.schema = core.getSchema();\n    createPropertyWriter();\n    propWriter.init(this);\n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n\n    for (Map.Entry<String, SchemaField> entry : schema.getFields().entrySet()) {\n      config.lowerNameVsSchemaField.put(entry.getKey().toLowerCase(Locale.ENGLISH), entry.getValue());\n    }\n\n    for (DataConfig.Entity e : config.document.entities) {\n      Map<String, DataConfig.Field> fields = new HashMap<String, DataConfig.Field>();\n      initEntity(e, fields, false);\n      verifyWithSchema(fields);\n      identifyPk(e);\n      if (e.allAttributes.containsKey(SqlEntityProcessor.DELTA_QUERY))\n        isDeltaImportSupported = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5101aff20e65c9a285c274627ec956eb5409d253","date":1344005120,"type":4,"author":"James Dyer","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(InputSource,SolrCore,Map[String,Properties],Map[String,Object],String).mjava","sourceNew":null,"sourceOld":"  DataImporter(InputSource dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session, String handlerName) {\n    this.handlerName = handlerName;\n    if (dataConfig == null) {\n      throw new DataImportHandlerException(SEVERE, \"Configuration not found\");\n    }\n    this.core = core;\n    this.schema = core.getSchema();\n    loadSchemaFieldMap();\n    createPropertyWriter();\n    \n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n   \n    for (Entity e : config.getEntities()) {\n      if (e.getAllAttributes().containsKey(SqlEntityProcessor.DELTA_QUERY)) {\n        isDeltaImportSupported = true;\n        break;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(InputSource,SolrCore,Map[String,Properties],Map[String,Object],String).mjava","sourceNew":null,"sourceOld":"  DataImporter(InputSource dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session, String handlerName) {\n    this.handlerName = handlerName;\n    if (dataConfig == null) {\n      throw new DataImportHandlerException(SEVERE, \"Configuration not found\");\n    }\n    this.core = core;\n    this.schema = core.getSchema();\n    loadSchemaFieldMap();\n    createPropertyWriter();\n    \n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n   \n    for (Entity e : config.getEntities()) {\n      if (e.getAllAttributes().containsKey(SqlEntityProcessor.DELTA_QUERY)) {\n        isDeltaImportSupported = true;\n        break;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#DataImporter(InputSource,SolrCore,Map[String,Properties],Map[String,Object],String).mjava","sourceNew":null,"sourceOld":"  DataImporter(InputSource dataConfig, SolrCore core, Map<String, Properties> ds, Map<String, Object> session, String handlerName) {\n    this.handlerName = handlerName;\n    if (dataConfig == null) {\n      throw new DataImportHandlerException(SEVERE, \"Configuration not found\");\n    }\n    this.core = core;\n    this.schema = core.getSchema();\n    loadSchemaFieldMap();\n    createPropertyWriter();\n    \n    dataSourceProps = ds;\n    if (session == null)\n      session = new HashMap<String, Object>();\n    coreScopeSession = session;\n    loadDataConfig(dataConfig);\n   \n    for (Entity e : config.getEntities()) {\n      if (e.getAllAttributes().containsKey(SqlEntityProcessor.DELTA_QUERY)) {\n        isDeltaImportSupported = true;\n        break;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"82c0f50a240cf02105b13b11e49095779864d37f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c":["b2a6913ca906832d1ef58d72498167acb00a7e4f"],"b2a6913ca906832d1ef58d72498167acb00a7e4f":["82c0f50a240cf02105b13b11e49095779864d37f"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["82c0f50a240cf02105b13b11e49095779864d37f","b2a6913ca906832d1ef58d72498167acb00a7e4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c","5101aff20e65c9a285c274627ec956eb5409d253"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c","5101aff20e65c9a285c274627ec956eb5409d253"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5101aff20e65c9a285c274627ec956eb5409d253"],"5101aff20e65c9a285c274627ec956eb5409d253":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c"]},"commit2Childs":{"82c0f50a240cf02105b13b11e49095779864d37f":["b2a6913ca906832d1ef58d72498167acb00a7e4f","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","5101aff20e65c9a285c274627ec956eb5409d253"],"b2a6913ca906832d1ef58d72498167acb00a7e4f":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["82c0f50a240cf02105b13b11e49095779864d37f"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"5101aff20e65c9a285c274627ec956eb5409d253":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}