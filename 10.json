{"path":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir, \"data\");\n    File confDir = new File(homeDir, \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(null, null);\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.solr.home\", homeDir.getAbsolutePath());\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    jetty = new JettySolrRunner(context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new CommonsHttpSolrServer(url);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir, \"data\");\n    File confDir = new File(homeDir, \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(null, null);\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.solr.home\", homeDir.getAbsolutePath());\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    jetty = new JettySolrRunner(context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new CommonsHttpSolrServer(url);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir, \"data\");\n    File confDir = new File(homeDir, \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(null, null);\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.solr.home\", homeDir.getAbsolutePath());\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    jetty = new JettySolrRunner(context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new CommonsHttpSolrServer(url);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir, \"data\");\n    File confDir = new File(homeDir, \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(null, null);\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.solr.home\", homeDir.getAbsolutePath());\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    jetty = new JettySolrRunner(context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new CommonsHttpSolrServer(url);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","pathOld":"solr/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir, \"data\");\n    File confDir = new File(homeDir, \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(null, null);\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.solr.home\", homeDir.getAbsolutePath());\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    jetty = new JettySolrRunner(context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new CommonsHttpSolrServer(url);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir, \"data\");\n    File confDir = new File(homeDir, \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(null, null);\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.solr.home\", homeDir.getAbsolutePath());\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    jetty = new JettySolrRunner(context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new CommonsHttpSolrServer(url);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir, \"data\");\n    File confDir = new File(homeDir, \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(null, null);\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new CommonsHttpSolrServer(url);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir, \"data\");\n    File confDir = new File(homeDir, \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(null, null);\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.solr.home\", homeDir.getAbsolutePath());\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    jetty = new JettySolrRunner(context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new CommonsHttpSolrServer(url);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir, \"data\");\n    File confDir = new File(homeDir, \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(null, null);\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new CommonsHttpSolrServer(url);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir, \"data\");\n    File confDir = new File(homeDir, \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(null, null);\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.solr.home\", homeDir.getAbsolutePath());\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    jetty = new JettySolrRunner(context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new CommonsHttpSolrServer(url);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir, \"data\");\n    File confDir = new File(homeDir, \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(null, null);\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new CommonsHttpSolrServer(url);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir, \"data\");\n    File confDir = new File(homeDir, \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(null, null);\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.solr.home\", homeDir.getAbsolutePath());\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    jetty = new JettySolrRunner(context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new CommonsHttpSolrServer(url);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7321b77a7bc3edfebd637ef273e9dfaa9969eba6","date":1333023097,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir, \"data\");\n    File confDir = new File(homeDir, \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(null, null);\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new HttpSolrServer(url);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir, \"data\");\n    File confDir = new File(homeDir, \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(null, null);\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new CommonsHttpSolrServer(url);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21591922fb4db3e2a6ffb2cb342b3d61c053a973","date":1340761680,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir + \"/collection1\", \"data\");\n    File confDir = new File(homeDir + \"/collection1\", \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(\"solr/collection1\");\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/collection1/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/collection1/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new HttpSolrServer(url);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir, \"data\");\n    File confDir = new File(homeDir, \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(null, null);\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new HttpSolrServer(url);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir + \"/collection1\", \"data\");\n    File confDir = new File(homeDir + \"/collection1\", \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(\"solr/collection1\");\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/collection1/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/collection1/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new HttpSolrServer(url);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir, \"data\");\n    File confDir = new File(homeDir, \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(null, null);\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new HttpSolrServer(url);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"47c952a4f0f0e9b74763a0609a3726dbb217164a","date":1347968413,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir + \"/collection1\", \"data\");\n    File confDir = new File(homeDir + \"/collection1\", \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(\"solr/collection1\");\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/collection1/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/collection1/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://127.0.0.1:\" + jetty.getLocalPort() + context;\n    server = new HttpSolrServer(url);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir + \"/collection1\", \"data\");\n    File confDir = new File(homeDir + \"/collection1\", \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(\"solr/collection1\");\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/collection1/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/collection1/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://localhost:\" + jetty.getLocalPort() + context;\n    server = new HttpSolrServer(url);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0383cd09ec14aa4b39144430fd2bf7f866eb5ec","date":1363621241,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir + \"/collection1\", \"data\");\n    File confDir = new File(homeDir + \"/collection1\", \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(\"solr/collection1\");\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/collection1/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/collection1/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n    System.setProperty(\"tests.shardhandler.randomSeed\", Long.toString(random().nextLong()));\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://127.0.0.1:\" + jetty.getLocalPort() + context;\n    server = new HttpSolrServer(url);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir + \"/collection1\", \"data\");\n    File confDir = new File(homeDir + \"/collection1\", \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(\"solr/collection1\");\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/collection1/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/collection1/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://127.0.0.1:\" + jetty.getLocalPort() + context;\n    server = new HttpSolrServer(url);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d9b24c47365092dc7017ac5cd515c4e1aafb68f","date":1375754682,"type":4,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir + \"/collection1\", \"data\");\n    File confDir = new File(homeDir + \"/collection1\", \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(\"solr/collection1\");\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/collection1/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/collection1/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n    System.setProperty(\"tests.shardhandler.randomSeed\", Long.toString(random().nextLong()));\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://127.0.0.1:\" + jetty.getLocalPort() + context;\n    server = new HttpSolrServer(url);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/schema/TestBinaryField#setUp().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    File home = new File(TEMP_DIR,\n        \"solrtest-TestBinaryField-\" + System.currentTimeMillis());\n\n    File homeDir = new File(home, \"example\");\n    File dataDir = new File(homeDir + \"/collection1\", \"data\");\n    File confDir = new File(homeDir + \"/collection1\", \"conf\");\n\n    homeDir.mkdirs();\n    dataDir.mkdirs();\n    confDir.mkdirs();\n\n    SolrResourceLoader loader = new SolrResourceLoader(\"solr/collection1\");\n    File f = new File(confDir, \"solrconfig.xml\");\n    String fname = \"solr/collection1/conf/solrconfig-slave1.xml\";\n    FileOutputStream out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    f = new File(confDir, \"schema.xml\");\n    fname = \"solr/collection1/conf/schema-binaryfield.xml\";\n    out = new FileOutputStream(f);\n    IOUtils.copy(loader.openResource(fname), out);\n    out.close();\n    System.setProperty(\"solr.data.dir\", dataDir.getAbsolutePath());\n    System.setProperty(\"solr.test.sys.prop1\", \"propone\");\n    System.setProperty(\"solr.test.sys.prop2\", \"proptwo\");\n    System.setProperty(\"tests.shardhandler.randomSeed\", Long.toString(random().nextLong()));\n\n    jetty = new JettySolrRunner(homeDir.getAbsolutePath(), context, 0);\n    jetty.start();\n    port = jetty.getLocalPort();\n\n    String url = \"http://127.0.0.1:\" + jetty.getLocalPort() + context;\n    server = new HttpSolrServer(url);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["d0383cd09ec14aa4b39144430fd2bf7f866eb5ec","5d9b24c47365092dc7017ac5cd515c4e1aafb68f"],"21591922fb4db3e2a6ffb2cb342b3d61c053a973":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"5d9b24c47365092dc7017ac5cd515c4e1aafb68f":["d0383cd09ec14aa4b39144430fd2bf7f866eb5ec"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["c26f00b574427b55127e869b935845554afde1fa","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"d0383cd09ec14aa4b39144430fd2bf7f866eb5ec":["47c952a4f0f0e9b74763a0609a3726dbb217164a"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["c26f00b574427b55127e869b935845554afde1fa","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"47c952a4f0f0e9b74763a0609a3726dbb217164a":["21591922fb4db3e2a6ffb2cb342b3d61c053a973"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6","21591922fb4db3e2a6ffb2cb342b3d61c053a973"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5d9b24c47365092dc7017ac5cd515c4e1aafb68f"]},"commit2Childs":{"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"21591922fb4db3e2a6ffb2cb342b3d61c053a973":["47c952a4f0f0e9b74763a0609a3726dbb217164a","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"5d9b24c47365092dc7017ac5cd515c4e1aafb68f":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c26f00b574427b55127e869b935845554afde1fa":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["21591922fb4db3e2a6ffb2cb342b3d61c053a973","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"d0383cd09ec14aa4b39144430fd2bf7f866eb5ec":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","5d9b24c47365092dc7017ac5cd515c4e1aafb68f"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"47c952a4f0f0e9b74763a0609a3726dbb217164a":["d0383cd09ec14aa4b39144430fd2bf7f866eb5ec"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","fe33227f6805edab2036cbb80645cc4e2d1fa424","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}