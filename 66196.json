{"path":"src/java/org/apache/solr/handler/XmlUpdateRequestHandler#processDelete(UpdateRequestProcessor,XMLStreamReader).mjava","commits":[{"id":"4039ee26c484fda13f0428eeeb09969370ff9149","date":1183229536,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/XmlUpdateRequestHandler#processDelete(UpdateRequestProcessor,XMLStreamReader).mjava","pathOld":"src/java/org/apache/solr/handler/StaxUpdateRequestHandler#processDelete(UpdateRequestProcessor,XMLStreamReader).mjava","sourceNew":"  /**\n   * @since solr 1.3\n   */\n  void processDelete(UpdateRequestProcessor processor, XMLStreamReader parser) throws XMLStreamException, IOException \n  {\n    // Parse the command\n    DeleteUpdateCommand deleteCmd = new DeleteUpdateCommand();\n    deleteCmd.fromPending = true;\n    deleteCmd.fromCommitted = true;\n    for (int i = 0; i < parser.getAttributeCount(); i++) {\n      String attrName = parser.getAttributeLocalName(i);\n      String attrVal = parser.getAttributeValue(i);\n      if (\"fromPending\".equals(attrName)) {\n        deleteCmd.fromPending = StrUtils.parseBoolean(attrVal);\n      } else if (\"fromCommitted\".equals(attrName)) {\n        deleteCmd.fromCommitted = StrUtils.parseBoolean(attrVal);\n      } else {\n        log.warning(\"unexpected attribute delete/@\" + attrName);\n      }\n    }\n    \n    String val = null;\n    String mode = null;\n    while (true) {\n      int event = parser.next();\n      switch (event) {\n      case XMLStreamConstants.START_ELEMENT:\n        mode = parser.getLocalName();\n        if (!(\"id\".equals(mode) || \"query\".equals(mode))) {\n          log.warning(\"unexpected XML tag /delete/\" + mode);\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n              \"unexpected XML tag /delete/\" + mode);\n        }\n        break;\n        \n      case XMLStreamConstants.END_ELEMENT:\n        String currTag = parser.getLocalName();\n        if (\"id\".equals(currTag)) {\n          deleteCmd.id = val;\n        } else if (\"query\".equals(currTag)) {\n          deleteCmd.query = val;\n        } else {\n          log.warning(\"unexpected XML tag /delete/\" + currTag);\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n              \"unexpected XML tag /delete/\" + currTag);\n        }\n        processor.processDelete( deleteCmd );\n        return;\n        \n      case XMLStreamConstants.CHARACTERS:\n        val = parser.getText();\n        break;\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.3\n   */\n  void processDelete(UpdateRequestProcessor processor, XMLStreamReader parser) throws XMLStreamException, IOException \n  {\n    // Parse the command\n    DeleteUpdateCommand deleteCmd = new DeleteUpdateCommand();\n    deleteCmd.fromPending = true;\n    deleteCmd.fromCommitted = true;\n    for (int i = 0; i < parser.getAttributeCount(); i++) {\n      String attrName = parser.getAttributeLocalName(i);\n      String attrVal = parser.getAttributeValue(i);\n      if (\"fromPending\".equals(attrName)) {\n        deleteCmd.fromPending = StrUtils.parseBoolean(attrVal);\n      } else if (\"fromCommitted\".equals(attrName)) {\n        deleteCmd.fromCommitted = StrUtils.parseBoolean(attrVal);\n      } else {\n        log.warning(\"unexpected attribute delete/@\" + attrName);\n      }\n    }\n    \n    String val = null;\n    String mode = null;\n    while (true) {\n      int event = parser.next();\n      switch (event) {\n      case XMLStreamConstants.START_ELEMENT:\n        mode = parser.getLocalName();\n        if (!(\"id\".equals(mode) || \"query\".equals(mode))) {\n          log.warning(\"unexpected XML tag /delete/\" + mode);\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n              \"unexpected XML tag /delete/\" + mode);\n        }\n        break;\n        \n      case XMLStreamConstants.END_ELEMENT:\n        String currTag = parser.getLocalName();\n        if (\"id\".equals(currTag)) {\n          deleteCmd.id = val;\n        } else if (\"query\".equals(currTag)) {\n          deleteCmd.query = val;\n        } else {\n          log.warning(\"unexpected XML tag /delete/\" + currTag);\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n              \"unexpected XML tag /delete/\" + currTag);\n        }\n        processor.processDelete( deleteCmd );\n        return;\n        \n      case XMLStreamConstants.CHARACTERS:\n        val = parser.getText();\n        break;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b060cdfaa7a8efca66df2f689cb6abdaca1ca06b","date":1183344285,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/XmlUpdateRequestHandler#processDelete(UpdateRequestProcessor,XMLStreamReader).mjava","pathOld":"src/java/org/apache/solr/handler/XmlUpdateRequestHandler#processDelete(UpdateRequestProcessor,XMLStreamReader).mjava","sourceNew":"  /**\n   * @since solr 1.3\n   */\n  void processDelete(UpdateRequestProcessor processor, XMLStreamReader parser) throws XMLStreamException, IOException \n  {\n    // Parse the command\n    DeleteUpdateCommand deleteCmd = new DeleteUpdateCommand();\n    deleteCmd.fromPending = true;\n    deleteCmd.fromCommitted = true;\n    for (int i = 0; i < parser.getAttributeCount(); i++) {\n      String attrName = parser.getAttributeLocalName(i);\n      String attrVal = parser.getAttributeValue(i);\n      if (\"fromPending\".equals(attrName)) {\n        deleteCmd.fromPending = StrUtils.parseBoolean(attrVal);\n      } else if (\"fromCommitted\".equals(attrName)) {\n        deleteCmd.fromCommitted = StrUtils.parseBoolean(attrVal);\n      } else {\n        log.warning(\"unexpected attribute delete/@\" + attrName);\n      }\n    }\n\n    StringBuilder text = new StringBuilder();\n    while (true) {\n      int event = parser.next();\n      switch (event) {\n      case XMLStreamConstants.START_ELEMENT:\n        String mode = parser.getLocalName();\n        if (!(\"id\".equals(mode) || \"query\".equals(mode))) {\n          log.warning(\"unexpected XML tag /delete/\" + mode);\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n              \"unexpected XML tag /delete/\" + mode);\n        }\n        text.setLength( 0 );\n        break;\n        \n      case XMLStreamConstants.END_ELEMENT:\n        String currTag = parser.getLocalName();\n        if (\"id\".equals(currTag)) {\n          deleteCmd.id = text.toString();\n        } else if (\"query\".equals(currTag)) {\n          deleteCmd.query = text.toString();\n        } else if( \"delete\".equals( currTag ) ) {\n          return;\n        } else {\n          log.warning(\"unexpected XML tag /delete/\" + currTag);\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n              \"unexpected XML tag /delete/\" + currTag);\n        }\n        processor.processDelete( deleteCmd );\n        break;\n\n      // Add everything to the text\n      case XMLStreamConstants.SPACE:\n      case XMLStreamConstants.CDATA:\n      case XMLStreamConstants.CHARACTERS:\n        text.append( parser.getText() );\n        break;\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.3\n   */\n  void processDelete(UpdateRequestProcessor processor, XMLStreamReader parser) throws XMLStreamException, IOException \n  {\n    // Parse the command\n    DeleteUpdateCommand deleteCmd = new DeleteUpdateCommand();\n    deleteCmd.fromPending = true;\n    deleteCmd.fromCommitted = true;\n    for (int i = 0; i < parser.getAttributeCount(); i++) {\n      String attrName = parser.getAttributeLocalName(i);\n      String attrVal = parser.getAttributeValue(i);\n      if (\"fromPending\".equals(attrName)) {\n        deleteCmd.fromPending = StrUtils.parseBoolean(attrVal);\n      } else if (\"fromCommitted\".equals(attrName)) {\n        deleteCmd.fromCommitted = StrUtils.parseBoolean(attrVal);\n      } else {\n        log.warning(\"unexpected attribute delete/@\" + attrName);\n      }\n    }\n    \n    String val = null;\n    String mode = null;\n    while (true) {\n      int event = parser.next();\n      switch (event) {\n      case XMLStreamConstants.START_ELEMENT:\n        mode = parser.getLocalName();\n        if (!(\"id\".equals(mode) || \"query\".equals(mode))) {\n          log.warning(\"unexpected XML tag /delete/\" + mode);\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n              \"unexpected XML tag /delete/\" + mode);\n        }\n        break;\n        \n      case XMLStreamConstants.END_ELEMENT:\n        String currTag = parser.getLocalName();\n        if (\"id\".equals(currTag)) {\n          deleteCmd.id = val;\n        } else if (\"query\".equals(currTag)) {\n          deleteCmd.query = val;\n        } else {\n          log.warning(\"unexpected XML tag /delete/\" + currTag);\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n              \"unexpected XML tag /delete/\" + currTag);\n        }\n        processor.processDelete( deleteCmd );\n        return;\n        \n      case XMLStreamConstants.CHARACTERS:\n        val = parser.getText();\n        break;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00da8b51bdeae168a5b26ec506db372b219ca7a2","date":1221704186,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/XmlUpdateRequestHandler#processDelete(UpdateRequestProcessor,XMLStreamReader).mjava","pathOld":"src/java/org/apache/solr/handler/XmlUpdateRequestHandler#processDelete(UpdateRequestProcessor,XMLStreamReader).mjava","sourceNew":"  /**\n   * @since solr 1.3\n   */\n  void processDelete(UpdateRequestProcessor processor, XMLStreamReader parser) throws XMLStreamException, IOException \n  {\n    // Parse the command\n    DeleteUpdateCommand deleteCmd = new DeleteUpdateCommand();\n    deleteCmd.fromPending = true;\n    deleteCmd.fromCommitted = true;\n    for (int i = 0; i < parser.getAttributeCount(); i++) {\n      String attrName = parser.getAttributeLocalName(i);\n      String attrVal = parser.getAttributeValue(i);\n      if (\"fromPending\".equals(attrName)) {\n        deleteCmd.fromPending = StrUtils.parseBoolean(attrVal);\n      } else if (\"fromCommitted\".equals(attrName)) {\n        deleteCmd.fromCommitted = StrUtils.parseBoolean(attrVal);\n      } else {\n        log.warn(\"unexpected attribute delete/@\" + attrName);\n      }\n    }\n\n    StringBuilder text = new StringBuilder();\n    while (true) {\n      int event = parser.next();\n      switch (event) {\n      case XMLStreamConstants.START_ELEMENT:\n        String mode = parser.getLocalName();\n        if (!(\"id\".equals(mode) || \"query\".equals(mode))) {\n          log.warn(\"unexpected XML tag /delete/\" + mode);\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n              \"unexpected XML tag /delete/\" + mode);\n        }\n        text.setLength( 0 );\n        break;\n        \n      case XMLStreamConstants.END_ELEMENT:\n        String currTag = parser.getLocalName();\n        if (\"id\".equals(currTag)) {\n          deleteCmd.id = text.toString();\n        } else if (\"query\".equals(currTag)) {\n          deleteCmd.query = text.toString();\n        } else if( \"delete\".equals( currTag ) ) {\n          return;\n        } else {\n          log.warn(\"unexpected XML tag /delete/\" + currTag);\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n              \"unexpected XML tag /delete/\" + currTag);\n        }\n        processor.processDelete( deleteCmd );\n        break;\n\n      // Add everything to the text\n      case XMLStreamConstants.SPACE:\n      case XMLStreamConstants.CDATA:\n      case XMLStreamConstants.CHARACTERS:\n        text.append( parser.getText() );\n        break;\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.3\n   */\n  void processDelete(UpdateRequestProcessor processor, XMLStreamReader parser) throws XMLStreamException, IOException \n  {\n    // Parse the command\n    DeleteUpdateCommand deleteCmd = new DeleteUpdateCommand();\n    deleteCmd.fromPending = true;\n    deleteCmd.fromCommitted = true;\n    for (int i = 0; i < parser.getAttributeCount(); i++) {\n      String attrName = parser.getAttributeLocalName(i);\n      String attrVal = parser.getAttributeValue(i);\n      if (\"fromPending\".equals(attrName)) {\n        deleteCmd.fromPending = StrUtils.parseBoolean(attrVal);\n      } else if (\"fromCommitted\".equals(attrName)) {\n        deleteCmd.fromCommitted = StrUtils.parseBoolean(attrVal);\n      } else {\n        log.warning(\"unexpected attribute delete/@\" + attrName);\n      }\n    }\n\n    StringBuilder text = new StringBuilder();\n    while (true) {\n      int event = parser.next();\n      switch (event) {\n      case XMLStreamConstants.START_ELEMENT:\n        String mode = parser.getLocalName();\n        if (!(\"id\".equals(mode) || \"query\".equals(mode))) {\n          log.warning(\"unexpected XML tag /delete/\" + mode);\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n              \"unexpected XML tag /delete/\" + mode);\n        }\n        text.setLength( 0 );\n        break;\n        \n      case XMLStreamConstants.END_ELEMENT:\n        String currTag = parser.getLocalName();\n        if (\"id\".equals(currTag)) {\n          deleteCmd.id = text.toString();\n        } else if (\"query\".equals(currTag)) {\n          deleteCmd.query = text.toString();\n        } else if( \"delete\".equals( currTag ) ) {\n          return;\n        } else {\n          log.warning(\"unexpected XML tag /delete/\" + currTag);\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n              \"unexpected XML tag /delete/\" + currTag);\n        }\n        processor.processDelete( deleteCmd );\n        break;\n\n      // Add everything to the text\n      case XMLStreamConstants.SPACE:\n      case XMLStreamConstants.CDATA:\n      case XMLStreamConstants.CHARACTERS:\n        text.append( parser.getText() );\n        break;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e34a66231ee53fe909c5f7c0e71131fcb5246d89","date":1226598668,"type":5,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/XMLLoader#processDelete(UpdateRequestProcessor,XMLStreamReader).mjava","pathOld":"src/java/org/apache/solr/handler/XmlUpdateRequestHandler#processDelete(UpdateRequestProcessor,XMLStreamReader).mjava","sourceNew":"  /**\n   * @since solr 1.3\n   */\n  void processDelete(UpdateRequestProcessor processor, XMLStreamReader parser) throws XMLStreamException, IOException {\n    // Parse the command\n    DeleteUpdateCommand deleteCmd = new DeleteUpdateCommand();\n    deleteCmd.fromPending = true;\n    deleteCmd.fromCommitted = true;\n    for (int i = 0; i < parser.getAttributeCount(); i++) {\n      String attrName = parser.getAttributeLocalName(i);\n      String attrVal = parser.getAttributeValue(i);\n      if (\"fromPending\".equals(attrName)) {\n        deleteCmd.fromPending = StrUtils.parseBoolean(attrVal);\n      } else if (\"fromCommitted\".equals(attrName)) {\n        deleteCmd.fromCommitted = StrUtils.parseBoolean(attrVal);\n      } else {\n        XmlUpdateRequestHandler.log.warn(\"unexpected attribute delete/@\" + attrName);\n      }\n    }\n\n    StringBuilder text = new StringBuilder();\n    while (true) {\n      int event = parser.next();\n      switch (event) {\n        case XMLStreamConstants.START_ELEMENT:\n          String mode = parser.getLocalName();\n          if (!(\"id\".equals(mode) || \"query\".equals(mode))) {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + mode);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + mode);\n          }\n          text.setLength(0);\n          break;\n\n        case XMLStreamConstants.END_ELEMENT:\n          String currTag = parser.getLocalName();\n          if (\"id\".equals(currTag)) {\n            deleteCmd.id = text.toString();\n          } else if (\"query\".equals(currTag)) {\n            deleteCmd.query = text.toString();\n          } else if (\"delete\".equals(currTag)) {\n            return;\n          } else {\n            XmlUpdateRequestHandler.log.warn(\"unexpected XML tag /delete/\" + currTag);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                    \"unexpected XML tag /delete/\" + currTag);\n          }\n          processor.processDelete(deleteCmd);\n          break;\n\n          // Add everything to the text\n        case XMLStreamConstants.SPACE:\n        case XMLStreamConstants.CDATA:\n        case XMLStreamConstants.CHARACTERS:\n          text.append(parser.getText());\n          break;\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.3\n   */\n  void processDelete(UpdateRequestProcessor processor, XMLStreamReader parser) throws XMLStreamException, IOException \n  {\n    // Parse the command\n    DeleteUpdateCommand deleteCmd = new DeleteUpdateCommand();\n    deleteCmd.fromPending = true;\n    deleteCmd.fromCommitted = true;\n    for (int i = 0; i < parser.getAttributeCount(); i++) {\n      String attrName = parser.getAttributeLocalName(i);\n      String attrVal = parser.getAttributeValue(i);\n      if (\"fromPending\".equals(attrName)) {\n        deleteCmd.fromPending = StrUtils.parseBoolean(attrVal);\n      } else if (\"fromCommitted\".equals(attrName)) {\n        deleteCmd.fromCommitted = StrUtils.parseBoolean(attrVal);\n      } else {\n        log.warn(\"unexpected attribute delete/@\" + attrName);\n      }\n    }\n\n    StringBuilder text = new StringBuilder();\n    while (true) {\n      int event = parser.next();\n      switch (event) {\n      case XMLStreamConstants.START_ELEMENT:\n        String mode = parser.getLocalName();\n        if (!(\"id\".equals(mode) || \"query\".equals(mode))) {\n          log.warn(\"unexpected XML tag /delete/\" + mode);\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n              \"unexpected XML tag /delete/\" + mode);\n        }\n        text.setLength( 0 );\n        break;\n        \n      case XMLStreamConstants.END_ELEMENT:\n        String currTag = parser.getLocalName();\n        if (\"id\".equals(currTag)) {\n          deleteCmd.id = text.toString();\n        } else if (\"query\".equals(currTag)) {\n          deleteCmd.query = text.toString();\n        } else if( \"delete\".equals( currTag ) ) {\n          return;\n        } else {\n          log.warn(\"unexpected XML tag /delete/\" + currTag);\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \n              \"unexpected XML tag /delete/\" + currTag);\n        }\n        processor.processDelete( deleteCmd );\n        break;\n\n      // Add everything to the text\n      case XMLStreamConstants.SPACE:\n      case XMLStreamConstants.CDATA:\n      case XMLStreamConstants.CHARACTERS:\n        text.append( parser.getText() );\n        break;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4039ee26c484fda13f0428eeeb09969370ff9149":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"b060cdfaa7a8efca66df2f689cb6abdaca1ca06b":["4039ee26c484fda13f0428eeeb09969370ff9149"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"00da8b51bdeae168a5b26ec506db372b219ca7a2":["b060cdfaa7a8efca66df2f689cb6abdaca1ca06b"],"e34a66231ee53fe909c5f7c0e71131fcb5246d89":["00da8b51bdeae168a5b26ec506db372b219ca7a2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4039ee26c484fda13f0428eeeb09969370ff9149":["b060cdfaa7a8efca66df2f689cb6abdaca1ca06b"],"b060cdfaa7a8efca66df2f689cb6abdaca1ca06b":["00da8b51bdeae168a5b26ec506db372b219ca7a2"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4039ee26c484fda13f0428eeeb09969370ff9149"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"00da8b51bdeae168a5b26ec506db372b219ca7a2":["e34a66231ee53fe909c5f7c0e71131fcb5246d89"],"e34a66231ee53fe909c5f7c0e71131fcb5246d89":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e34a66231ee53fe909c5f7c0e71131fcb5246d89","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}