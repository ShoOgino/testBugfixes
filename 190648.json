{"path":"lucene/src/java/org/apache/lucene/search/FieldValueHitQueue#FieldValueHitQueue(SortField[],int).mjava","commits":[{"id":"1da2c39cf47fc10dc839d8c37890a2b009081e76","date":1299662336,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldValueHitQueue#FieldValueHitQueue(SortField[],int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldValueHitQueue#FieldValueHitQueue(SortField[]).mjava","sourceNew":"  // prevent instantiation and extension.\n  private FieldValueHitQueue(SortField[] fields, int size) {\n    super(size);\n    // When we get here, fields.length is guaranteed to be > 0, therefore no\n    // need to check it again.\n    \n    // All these are required by this class's API - need to return arrays.\n    // Therefore even in the case of a single comparator, create an array\n    // anyway.\n    this.fields = fields;\n    int numComparators = fields.length;\n    comparators = new FieldComparator[numComparators];\n    reverseMul = new int[numComparators];\n  }\n\n","sourceOld":"  // prevent instantiation and extension.\n  private FieldValueHitQueue(SortField[] fields) {\n    // When we get here, fields.length is guaranteed to be > 0, therefore no\n    // need to check it again.\n    \n    // All these are required by this class's API - need to return arrays.\n    // Therefore even in the case of a single comparator, create an array\n    // anyway.\n    this.fields = fields;\n    int numComparators = fields.length;\n    comparators = new FieldComparator[numComparators];\n    reverseMul = new int[numComparators];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldValueHitQueue#FieldValueHitQueue(SortField[],int).mjava","pathOld":"/dev/null","sourceNew":"  // prevent instantiation and extension.\n  private FieldValueHitQueue(SortField[] fields, int size) {\n    super(size);\n    // When we get here, fields.length is guaranteed to be > 0, therefore no\n    // need to check it again.\n    \n    // All these are required by this class's API - need to return arrays.\n    // Therefore even in the case of a single comparator, create an array\n    // anyway.\n    this.fields = fields;\n    int numComparators = fields.length;\n    comparators = new FieldComparator[numComparators];\n    reverseMul = new int[numComparators];\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldValueHitQueue#FieldValueHitQueue(SortField[],int).mjava","pathOld":"/dev/null","sourceNew":"  // prevent instantiation and extension.\n  private FieldValueHitQueue(SortField[] fields, int size) {\n    super(size);\n    // When we get here, fields.length is guaranteed to be > 0, therefore no\n    // need to check it again.\n    \n    // All these are required by this class's API - need to return arrays.\n    // Therefore even in the case of a single comparator, create an array\n    // anyway.\n    this.fields = fields;\n    int numComparators = fields.length;\n    comparators = new FieldComparator[numComparators];\n    reverseMul = new int[numComparators];\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldValueHitQueue#FieldValueHitQueue(SortField[],int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldValueHitQueue#FieldValueHitQueue(SortField[],int).mjava","sourceNew":"  // prevent instantiation and extension.\n  private FieldValueHitQueue(SortField[] fields, int size) {\n    super(size);\n    // When we get here, fields.length is guaranteed to be > 0, therefore no\n    // need to check it again.\n    \n    // All these are required by this class's API - need to return arrays.\n    // Therefore even in the case of a single comparator, create an array\n    // anyway.\n    this.fields = fields;\n    int numComparators = fields.length;\n    comparators = new FieldComparator[numComparators];\n    reverseMul = new int[numComparators];\n  }\n\n","sourceOld":"  // prevent instantiation and extension.\n  private FieldValueHitQueue(SortField[] fields, int size) {\n    super(size);\n    // When we get here, fields.length is guaranteed to be > 0, therefore no\n    // need to check it again.\n    \n    // All these are required by this class's API - need to return arrays.\n    // Therefore even in the case of a single comparator, create an array\n    // anyway.\n    this.fields = fields;\n    int numComparators = fields.length;\n    comparators = new FieldComparator[numComparators];\n    reverseMul = new int[numComparators];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da2c39cf47fc10dc839d8c37890a2b009081e76":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1da2c39cf47fc10dc839d8c37890a2b009081e76"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1da2c39cf47fc10dc839d8c37890a2b009081e76"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1da2c39cf47fc10dc839d8c37890a2b009081e76"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"1da2c39cf47fc10dc839d8c37890a2b009081e76":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1da2c39cf47fc10dc839d8c37890a2b009081e76","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}