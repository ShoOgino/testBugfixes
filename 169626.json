{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60PointReader#getBKDReader(String).mjava","commits":[{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60PointReader#getBKDReader(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60DimensionalReader#getBKDReader(String).mjava","sourceNew":"  private BKDReader getBKDReader(String fieldName) {\n    FieldInfo fieldInfo = readState.fieldInfos.fieldInfo(fieldName);\n    if (fieldInfo == null) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldName + \"\\\" is unrecognized\");\n    }\n    if (fieldInfo.getPointDimensionCount() == 0) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldName + \"\\\" did not index point values\");\n    }\n\n    return readers.get(fieldInfo.number);\n  }\n\n","sourceOld":"  private BKDReader getBKDReader(String fieldName) {\n    FieldInfo fieldInfo = readState.fieldInfos.fieldInfo(fieldName);\n    if (fieldInfo == null) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldName + \"\\\" is unrecognized\");\n    }\n    if (fieldInfo.getDimensionCount() == 0) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldName + \"\\\" did not index dimensional values\");\n    }\n\n    return readers.get(fieldInfo.number);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4522ffca5a1f420c6a02198c9332d7c596a30ca5","date":1457270822,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60PointsReader#getBKDReader(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene60/Lucene60PointReader#getBKDReader(String).mjava","sourceNew":"  private BKDReader getBKDReader(String fieldName) {\n    FieldInfo fieldInfo = readState.fieldInfos.fieldInfo(fieldName);\n    if (fieldInfo == null) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldName + \"\\\" is unrecognized\");\n    }\n    if (fieldInfo.getPointDimensionCount() == 0) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldName + \"\\\" did not index point values\");\n    }\n\n    return readers.get(fieldInfo.number);\n  }\n\n","sourceOld":"  private BKDReader getBKDReader(String fieldName) {\n    FieldInfo fieldInfo = readState.fieldInfos.fieldInfo(fieldName);\n    if (fieldInfo == null) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldName + \"\\\" is unrecognized\");\n    }\n    if (fieldInfo.getPointDimensionCount() == 0) {\n      throw new IllegalArgumentException(\"field=\\\"\" + fieldName + \"\\\" did not index point values\");\n    }\n\n    return readers.get(fieldInfo.number);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"]},"commit2Childs":{"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}