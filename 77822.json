{"path":"contrib/gdata-server/src/gom/src/test/org/apache/lucene/gdata/gom/core/GOMEntryImplTest#testProcessEndElement().mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/gom/src/test/org/apache/lucene/gdata/gom/core/GOMEntryImplTest#testProcessEndElement().mjava","pathOld":"contrib/gdata-server/src/gom/test/org/apache/lucene/gdata/gom/core/GOMEntryImplTest#testProcessEndElement().mjava","sourceNew":"\t/*\n\t * Test method for\n\t * 'org.apache.lucene.gdata.gom.core.GOMEntryImpl.processEndElement()'\n\t */\n\tpublic void testProcessEndElement() {\n\t\ttry {\n\t\t\tthis.impl.processEndElement();\n\t\t\tfail(\"missing elements\");\n\t\t} catch (GDataParseException e) {\n\t\t\t// \n\t\t}\n\n\t\t// atom:entry elements MUST contain exactly one atom:id element.\n\t\tthis.impl.setId(new GOMIdImpl());\n\t\t/*\n\t\t * atom:entry elements that contain no child atom:content element MUST\n\t\t * contain at least one atom:link element with a rel attribute value of\n\t\t * \"alternate\".\n\t\t */\n\t\tGOMLink link = new GOMLinkImpl();\n\t\tlink.setRel(\"alternate\");\n\t\tthis.impl.addLink(link);\n\t\t/*\n\t\t * atom:entry elements MUST contain exactly one atom:title element.\n\t\t */\n\t\tthis.impl.setTitle(new GOMTitleImpl());\n\t\t/*\n\t\t * atom:entry elements MUST contain exactly one atom:updated element.\n\t\t */\n\t\tthis.impl.setUpdated(new GOMUpdatedImpl());\n\n\t\t{\n\t\t\tthis.impl.setId(null);\n\t\t\ttry {\n\t\t\t\tthis.impl.processEndElement();\n\t\t\t\tfail(\"id is missing\");\n\t\t\t} catch (GDataParseException e) {\n\t\t\t\t// \n\t\t\t}\n\t\t\tthis.impl.setId(new GOMIdImpl());\n\t\t}\n\n\t\t{\n\t\t\tthis.impl.getLinks().clear();\n\t\t\ttry {\n\t\t\t\tthis.impl.processEndElement();\n\t\t\t\tfail(\"link alternate is missing\");\n\t\t\t} catch (GDataParseException e) {\n\t\t\t\t// \n\t\t\t}\n\t\t\tthis.impl.setContent(new GOMContentImpl());\n\t\t\tthis.impl.processEndElement();\n\t\t\tthis.impl.setContent(null);\n\t\t\tthis.impl.addLink(link);\n\t\t}\n\n\t\t{\n\t\t\tthis.impl.setTitle(null);\n\t\t\ttry {\n\t\t\t\tthis.impl.processEndElement();\n\t\t\t\tfail(\"title is missing\");\n\t\t\t} catch (GDataParseException e) {\n\t\t\t\t// \n\t\t\t}\n\t\t\tthis.impl.setTitle(new GOMTitleImpl());\n\t\t}\n\t\t{\n\t\t\tthis.impl.setUpdated(null);\n\t\t\ttry {\n\t\t\t\tthis.impl.processEndElement();\n\t\t\t\tfail(\"Updated is missing\");\n\t\t\t} catch (GDataParseException e) {\n\t\t\t\t// \n\t\t\t}\n\t\t\tthis.impl.setUpdated(new GOMUpdatedImpl());\n\t\t}\n\n\t\t/*\n\t\t * atom:entry elements MUST NOT contain more than one atom:link element\n\t\t * with a rel attribute value of \"alternate\" that has the same\n\t\t * combination of type and hreflang attribute values.\n\t\t */\n\t\tlink.setType(\"test\");\n\t\tlink.setHrefLang(\"http://www.apache.org\");\n\t\tthis.impl.addLink(link);\n\t\ttry {\n\t\t\tthis.impl.processEndElement();\n\t\t\tfail(\"doulbe alternate link with same type and hreflang\");\n\n\t\t} catch (GDataParseException e) {\n\t\t\t// \n\t\t}\n\t\tthis.impl.getLinks().remove(0);\n\t\t/*\n\t\t * # atom:entry elements MUST contain an atom:summary element in either\n\t\t * of the following cases:\n\t\t * \n\t\t * the atom:entry contains an atom:content that has a \"src\" attribute\n\t\t * (and is thus empty). the atom:entry contains content that is encoded\n\t\t * in Base64; i.e., the \"type\" attribute of atom:content is a MIME media\n\t\t * type [MIMEREG], but is not an XML media type [RFC3023], does not\n\t\t * begin with \"text/\", and does not end with \"/xml\" or \"+xml\".\n\t\t * \n\t\t * \n\t\t */\n\t\tGOMContent c = new GOMContentImpl();\n\t\tc.setSrc(\"\");\n\t\tthis.impl.setContent(c);\n\t\ttry {\n\t\t\tthis.impl.processEndElement();\n\t\t\tfail(\"no summary\");\n\t\t} catch (GDataParseException e) {\n\t\t\t// \n\t\t}\n\t\tc.setSrc(null);\n\t\tc.setAtomMediaType(AtomMediaType.BINARY);\n\t\ttry {\n\t\t\tthis.impl.processEndElement();\n\t\t\tfail(\"no summary\");\n\t\t} catch (GDataParseException e) {\n\t\t\t// \n\t\t}\n\n\t}\n\n","sourceOld":"\t/*\n\t * Test method for\n\t * 'org.apache.lucene.gdata.gom.core.GOMEntryImpl.processEndElement()'\n\t */\n\tpublic void testProcessEndElement() {\n\t\ttry {\n\t\t\tthis.impl.processEndElement();\n\t\t\tfail(\"missing elements\");\n\t\t} catch (GDataParseException e) {\n\t\t\t// \n\t\t}\n\n\t\t// atom:entry elements MUST contain exactly one atom:id element.\n\t\tthis.impl.setId(new GOMIdImpl());\n\t\t/*\n\t\t * atom:entry elements that contain no child atom:content element MUST\n\t\t * contain at least one atom:link element with a rel attribute value of\n\t\t * \"alternate\".\n\t\t */\n\t\tGOMLink link = new GOMLinkImpl();\n\t\tlink.setRel(\"alternate\");\n\t\tthis.impl.addLink(link);\n\t\t/*\n\t\t * atom:entry elements MUST contain exactly one atom:title element.\n\t\t */\n\t\tthis.impl.setTitle(new GOMTitleImpl());\n\t\t/*\n\t\t * atom:entry elements MUST contain exactly one atom:updated element.\n\t\t */\n\t\tthis.impl.setUpdated(new GOMUpdatedImpl());\n\n\t\t{\n\t\t\tthis.impl.setId(null);\n\t\t\ttry {\n\t\t\t\tthis.impl.processEndElement();\n\t\t\t\tfail(\"id is missing\");\n\t\t\t} catch (GDataParseException e) {\n\t\t\t\t// \n\t\t\t}\n\t\t\tthis.impl.setId(new GOMIdImpl());\n\t\t}\n\n\t\t{\n\t\t\tthis.impl.getLinks().clear();\n\t\t\ttry {\n\t\t\t\tthis.impl.processEndElement();\n\t\t\t\tfail(\"link alternate is missing\");\n\t\t\t} catch (GDataParseException e) {\n\t\t\t\t// \n\t\t\t}\n\t\t\tthis.impl.setContent(new GOMContentImpl());\n\t\t\tthis.impl.processEndElement();\n\t\t\tthis.impl.setContent(null);\n\t\t\tthis.impl.addLink(link);\n\t\t}\n\n\t\t{\n\t\t\tthis.impl.setTitle(null);\n\t\t\ttry {\n\t\t\t\tthis.impl.processEndElement();\n\t\t\t\tfail(\"title is missing\");\n\t\t\t} catch (GDataParseException e) {\n\t\t\t\t// \n\t\t\t}\n\t\t\tthis.impl.setTitle(new GOMTitleImpl());\n\t\t}\n\t\t{\n\t\t\tthis.impl.setUpdated(null);\n\t\t\ttry {\n\t\t\t\tthis.impl.processEndElement();\n\t\t\t\tfail(\"Updated is missing\");\n\t\t\t} catch (GDataParseException e) {\n\t\t\t\t// \n\t\t\t}\n\t\t\tthis.impl.setUpdated(new GOMUpdatedImpl());\n\t\t}\n\n\t\t/*\n\t\t * atom:entry elements MUST NOT contain more than one atom:link element\n\t\t * with a rel attribute value of \"alternate\" that has the same\n\t\t * combination of type and hreflang attribute values.\n\t\t */\n\t\tlink.setType(\"test\");\n\t\tlink.setHrefLang(\"http://www.apache.org\");\n\t\tthis.impl.addLink(link);\n\t\ttry {\n\t\t\tthis.impl.processEndElement();\n\t\t\tfail(\"doulbe alternate link with same type and hreflang\");\n\n\t\t} catch (GDataParseException e) {\n\t\t\t// \n\t\t}\n\t\tthis.impl.getLinks().remove(0);\n\t\t/*\n\t\t * # atom:entry elements MUST contain an atom:summary element in either\n\t\t * of the following cases:\n\t\t * \n\t\t * the atom:entry contains an atom:content that has a \"src\" attribute\n\t\t * (and is thus empty). the atom:entry contains content that is encoded\n\t\t * in Base64; i.e., the \"type\" attribute of atom:content is a MIME media\n\t\t * type [MIMEREG], but is not an XML media type [RFC3023], does not\n\t\t * begin with \"text/\", and does not end with \"/xml\" or \"+xml\".\n\t\t * \n\t\t * \n\t\t */\n\t\tGOMContent c = new GOMContentImpl();\n\t\tc.setSrc(\"\");\n\t\tthis.impl.setContent(c);\n\t\ttry {\n\t\t\tthis.impl.processEndElement();\n\t\t\tfail(\"no summary\");\n\t\t} catch (GDataParseException e) {\n\t\t\t// \n\t\t}\n\t\tc.setSrc(null);\n\t\tc.setAtomMediaType(AtomMediaType.BINARY);\n\t\ttry {\n\t\t\tthis.impl.processEndElement();\n\t\t\tfail(\"no summary\");\n\t\t} catch (GDataParseException e) {\n\t\t\t// \n\t\t}\n\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/gom/src/test/org/apache/lucene/gdata/gom/core/GOMEntryImplTest#testProcessEndElement().mjava","sourceNew":null,"sourceOld":"\t/*\n\t * Test method for\n\t * 'org.apache.lucene.gdata.gom.core.GOMEntryImpl.processEndElement()'\n\t */\n\tpublic void testProcessEndElement() {\n\t\ttry {\n\t\t\tthis.impl.processEndElement();\n\t\t\tfail(\"missing elements\");\n\t\t} catch (GDataParseException e) {\n\t\t\t// \n\t\t}\n\n\t\t// atom:entry elements MUST contain exactly one atom:id element.\n\t\tthis.impl.setId(new GOMIdImpl());\n\t\t/*\n\t\t * atom:entry elements that contain no child atom:content element MUST\n\t\t * contain at least one atom:link element with a rel attribute value of\n\t\t * \"alternate\".\n\t\t */\n\t\tGOMLink link = new GOMLinkImpl();\n\t\tlink.setRel(\"alternate\");\n\t\tthis.impl.addLink(link);\n\t\t/*\n\t\t * atom:entry elements MUST contain exactly one atom:title element.\n\t\t */\n\t\tthis.impl.setTitle(new GOMTitleImpl());\n\t\t/*\n\t\t * atom:entry elements MUST contain exactly one atom:updated element.\n\t\t */\n\t\tthis.impl.setUpdated(new GOMUpdatedImpl());\n\n\t\t{\n\t\t\tthis.impl.setId(null);\n\t\t\ttry {\n\t\t\t\tthis.impl.processEndElement();\n\t\t\t\tfail(\"id is missing\");\n\t\t\t} catch (GDataParseException e) {\n\t\t\t\t// \n\t\t\t}\n\t\t\tthis.impl.setId(new GOMIdImpl());\n\t\t}\n\n\t\t{\n\t\t\tthis.impl.getLinks().clear();\n\t\t\ttry {\n\t\t\t\tthis.impl.processEndElement();\n\t\t\t\tfail(\"link alternate is missing\");\n\t\t\t} catch (GDataParseException e) {\n\t\t\t\t// \n\t\t\t}\n\t\t\tthis.impl.setContent(new GOMContentImpl());\n\t\t\tthis.impl.processEndElement();\n\t\t\tthis.impl.setContent(null);\n\t\t\tthis.impl.addLink(link);\n\t\t}\n\n\t\t{\n\t\t\tthis.impl.setTitle(null);\n\t\t\ttry {\n\t\t\t\tthis.impl.processEndElement();\n\t\t\t\tfail(\"title is missing\");\n\t\t\t} catch (GDataParseException e) {\n\t\t\t\t// \n\t\t\t}\n\t\t\tthis.impl.setTitle(new GOMTitleImpl());\n\t\t}\n\t\t{\n\t\t\tthis.impl.setUpdated(null);\n\t\t\ttry {\n\t\t\t\tthis.impl.processEndElement();\n\t\t\t\tfail(\"Updated is missing\");\n\t\t\t} catch (GDataParseException e) {\n\t\t\t\t// \n\t\t\t}\n\t\t\tthis.impl.setUpdated(new GOMUpdatedImpl());\n\t\t}\n\n\t\t/*\n\t\t * atom:entry elements MUST NOT contain more than one atom:link element\n\t\t * with a rel attribute value of \"alternate\" that has the same\n\t\t * combination of type and hreflang attribute values.\n\t\t */\n\t\tlink.setType(\"test\");\n\t\tlink.setHrefLang(\"http://www.apache.org\");\n\t\tthis.impl.addLink(link);\n\t\ttry {\n\t\t\tthis.impl.processEndElement();\n\t\t\tfail(\"doulbe alternate link with same type and hreflang\");\n\n\t\t} catch (GDataParseException e) {\n\t\t\t// \n\t\t}\n\t\tthis.impl.getLinks().remove(0);\n\t\t/*\n\t\t * # atom:entry elements MUST contain an atom:summary element in either\n\t\t * of the following cases:\n\t\t * \n\t\t * the atom:entry contains an atom:content that has a \"src\" attribute\n\t\t * (and is thus empty). the atom:entry contains content that is encoded\n\t\t * in Base64; i.e., the \"type\" attribute of atom:content is a MIME media\n\t\t * type [MIMEREG], but is not an XML media type [RFC3023], does not\n\t\t * begin with \"text/\", and does not end with \"/xml\" or \"+xml\".\n\t\t * \n\t\t * \n\t\t */\n\t\tGOMContent c = new GOMContentImpl();\n\t\tc.setSrc(\"\");\n\t\tthis.impl.setContent(c);\n\t\ttry {\n\t\t\tthis.impl.processEndElement();\n\t\t\tfail(\"no summary\");\n\t\t} catch (GDataParseException e) {\n\t\t\t// \n\t\t}\n\t\tc.setSrc(null);\n\t\tc.setAtomMediaType(AtomMediaType.BINARY);\n\t\ttry {\n\t\t\tthis.impl.processEndElement();\n\t\t\tfail(\"no summary\");\n\t\t} catch (GDataParseException e) {\n\t\t\t// \n\t\t}\n\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}