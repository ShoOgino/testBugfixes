{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testNRTDeletedDocFiltering().mjava","commits":[{"id":"8c33f6677a2078739058f81eca1df69d12cd62b0","date":1432799589,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testNRTDeletedDocFiltering().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testNRTDeletedDocFiltering().mjava","sourceNew":"  @Test\n  public void testNRTDeletedDocFiltering() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    // using IndexWriter instead of RandomIndexWriter\n    IndexWriter iw = new IndexWriter(dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n\n    int num = Math.min(1000, atLeast(10));\n\n    Document document = new Document();\n    int numLive = 0;\n    List<Entry> expectedEntries = new ArrayList<>();\n    for (int i = 0; i < num; i++) {\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, num - i));\n      if (i % 2 == 0) {\n        document.add(newStringField(\"str_field\", \"delete\", Field.Store.YES));\n      } else {\n        numLive++;\n        expectedEntries.add(new Entry(\"abc_\" + i, num - i));\n        document.add(newStringField(\"str_field\", \"no_delete\", Field.Store.YES));\n      }\n      iw.addDocument(document);\n      document.clear();\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    iw.deleteDocuments(new Term(\"str_field\", \"delete\"));\n\n    DirectoryReader reader = DirectoryReader.open(iw, true);\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"));\n    TopSuggestDocs suggest = indexSearcher.suggest(query, numLive);\n    assertSuggestions(suggest, expectedEntries.toArray(new Entry[expectedEntries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testNRTDeletedDocFiltering() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    // using IndexWriter instead of RandomIndexWriter\n    IndexWriter iw = new IndexWriter(dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n\n    int num = Math.min(1000, atLeast(10));\n\n    Document document = new Document();\n    int numLive = 0;\n    List<Entry> expectedEntries = new ArrayList<>();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, num - i));\n      if (i % 2 == 0) {\n        document.add(newStringField(\"str_field\", \"delete\", Field.Store.YES));\n      } else {\n        numLive++;\n        expectedEntries.add(new Entry(\"abc_\" + i, num - i));\n        document.add(newStringField(\"str_field\", \"no_delete\", Field.Store.YES));\n      }\n      iw.addDocument(document);\n      document.clear();\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    iw.deleteDocuments(new Term(\"str_field\", \"delete\"));\n\n    DirectoryReader reader = DirectoryReader.open(iw, true);\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", numLive);\n    assertSuggestions(suggest, expectedEntries.toArray(new Entry[expectedEntries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e919be7c57e6b5ae11c5beaa2b528f092f7687c4","date":1432802319,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testNRTDeletedDocFiltering().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testNRTDeletedDocFiltering().mjava","sourceNew":"  @Test\n  public void testNRTDeletedDocFiltering() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    // using IndexWriter instead of RandomIndexWriter\n    IndexWriter iw = new IndexWriter(dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n\n    int num = Math.min(1000, atLeast(10));\n\n    int numLive = 0;\n    List<Entry> expectedEntries = new ArrayList<>();\n    for (int i = 0; i < num; i++) {\n      Document document = new Document();\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, num - i));\n      if (i % 2 == 0) {\n        document.add(newStringField(\"str_field\", \"delete\", Field.Store.YES));\n      } else {\n        numLive++;\n        expectedEntries.add(new Entry(\"abc_\" + i, num - i));\n        document.add(newStringField(\"str_field\", \"no_delete\", Field.Store.YES));\n      }\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    iw.deleteDocuments(new Term(\"str_field\", \"delete\"));\n\n    DirectoryReader reader = DirectoryReader.open(iw, true);\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"));\n    TopSuggestDocs suggest = indexSearcher.suggest(query, numLive);\n    assertSuggestions(suggest, expectedEntries.toArray(new Entry[expectedEntries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testNRTDeletedDocFiltering() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    // using IndexWriter instead of RandomIndexWriter\n    IndexWriter iw = new IndexWriter(dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n\n    int num = Math.min(1000, atLeast(10));\n\n    Document document = new Document();\n    int numLive = 0;\n    List<Entry> expectedEntries = new ArrayList<>();\n    for (int i = 0; i < num; i++) {\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, num - i));\n      if (i % 2 == 0) {\n        document.add(newStringField(\"str_field\", \"delete\", Field.Store.YES));\n      } else {\n        numLive++;\n        expectedEntries.add(new Entry(\"abc_\" + i, num - i));\n        document.add(newStringField(\"str_field\", \"no_delete\", Field.Store.YES));\n      }\n      iw.addDocument(document);\n      document.clear();\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    iw.deleteDocuments(new Term(\"str_field\", \"delete\"));\n\n    DirectoryReader reader = DirectoryReader.open(iw, true);\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"));\n    TopSuggestDocs suggest = indexSearcher.suggest(query, numLive);\n    assertSuggestions(suggest, expectedEntries.toArray(new Entry[expectedEntries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testNRTDeletedDocFiltering().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testNRTDeletedDocFiltering().mjava","sourceNew":"  @Test\n  public void testNRTDeletedDocFiltering() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    // using IndexWriter instead of RandomIndexWriter\n    IndexWriter iw = new IndexWriter(dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n\n    int num = Math.min(1000, atLeast(10));\n\n    int numLive = 0;\n    List<Entry> expectedEntries = new ArrayList<>();\n    for (int i = 0; i < num; i++) {\n      Document document = new Document();\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, num - i));\n      if (i % 2 == 0) {\n        document.add(newStringField(\"str_field\", \"delete\", Field.Store.YES));\n      } else {\n        numLive++;\n        expectedEntries.add(new Entry(\"abc_\" + i, num - i));\n        document.add(newStringField(\"str_field\", \"no_delete\", Field.Store.YES));\n      }\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    iw.deleteDocuments(new Term(\"str_field\", \"delete\"));\n\n    DirectoryReader reader = DirectoryReader.open(iw);\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"));\n    TopSuggestDocs suggest = indexSearcher.suggest(query, numLive);\n    assertSuggestions(suggest, expectedEntries.toArray(new Entry[expectedEntries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testNRTDeletedDocFiltering() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    // using IndexWriter instead of RandomIndexWriter\n    IndexWriter iw = new IndexWriter(dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n\n    int num = Math.min(1000, atLeast(10));\n\n    int numLive = 0;\n    List<Entry> expectedEntries = new ArrayList<>();\n    for (int i = 0; i < num; i++) {\n      Document document = new Document();\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, num - i));\n      if (i % 2 == 0) {\n        document.add(newStringField(\"str_field\", \"delete\", Field.Store.YES));\n      } else {\n        numLive++;\n        expectedEntries.add(new Entry(\"abc_\" + i, num - i));\n        document.add(newStringField(\"str_field\", \"no_delete\", Field.Store.YES));\n      }\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    iw.deleteDocuments(new Term(\"str_field\", \"delete\"));\n\n    DirectoryReader reader = DirectoryReader.open(iw, true);\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"));\n    TopSuggestDocs suggest = indexSearcher.suggest(query, numLive);\n    assertSuggestions(suggest, expectedEntries.toArray(new Entry[expectedEntries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"902a92b60648a8925bfd9bb53a78669cd2ea98fd","date":1487797466,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testNRTDeletedDocFiltering().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testNRTDeletedDocFiltering().mjava","sourceNew":"  @Test\n  public void testNRTDeletedDocFiltering() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    // using IndexWriter instead of RandomIndexWriter\n    IndexWriter iw = new IndexWriter(dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n\n    int num = Math.min(1000, atLeast(10));\n\n    int numLive = 0;\n    List<Entry> expectedEntries = new ArrayList<>();\n    for (int i = 0; i < num; i++) {\n      Document document = new Document();\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, num - i));\n      if (i % 2 == 0) {\n        document.add(newStringField(\"str_field\", \"delete\", Field.Store.YES));\n      } else {\n        numLive++;\n        expectedEntries.add(new Entry(\"abc_\" + i, num - i));\n        document.add(newStringField(\"str_field\", \"no_delete\", Field.Store.YES));\n      }\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    iw.deleteDocuments(new Term(\"str_field\", \"delete\"));\n\n    DirectoryReader reader = DirectoryReader.open(iw);\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"));\n    TopSuggestDocs suggest = indexSearcher.suggest(query, numLive, false);\n    assertSuggestions(suggest, expectedEntries.toArray(new Entry[expectedEntries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testNRTDeletedDocFiltering() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    // using IndexWriter instead of RandomIndexWriter\n    IndexWriter iw = new IndexWriter(dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n\n    int num = Math.min(1000, atLeast(10));\n\n    int numLive = 0;\n    List<Entry> expectedEntries = new ArrayList<>();\n    for (int i = 0; i < num; i++) {\n      Document document = new Document();\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, num - i));\n      if (i % 2 == 0) {\n        document.add(newStringField(\"str_field\", \"delete\", Field.Store.YES));\n      } else {\n        numLive++;\n        expectedEntries.add(new Entry(\"abc_\" + i, num - i));\n        document.add(newStringField(\"str_field\", \"no_delete\", Field.Store.YES));\n      }\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    iw.deleteDocuments(new Term(\"str_field\", \"delete\"));\n\n    DirectoryReader reader = DirectoryReader.open(iw);\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"));\n    TopSuggestDocs suggest = indexSearcher.suggest(query, numLive);\n    assertSuggestions(suggest, expectedEntries.toArray(new Entry[expectedEntries.size()]));\n\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2a1862266772deb28cdcb7d996b64d2177022687":["e919be7c57e6b5ae11c5beaa2b528f092f7687c4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e919be7c57e6b5ae11c5beaa2b528f092f7687c4":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"902a92b60648a8925bfd9bb53a78669cd2ea98fd":["2a1862266772deb28cdcb7d996b64d2177022687"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["902a92b60648a8925bfd9bb53a78669cd2ea98fd"]},"commit2Childs":{"2a1862266772deb28cdcb7d996b64d2177022687":["902a92b60648a8925bfd9bb53a78669cd2ea98fd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"e919be7c57e6b5ae11c5beaa2b528f092f7687c4":["2a1862266772deb28cdcb7d996b64d2177022687"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["e919be7c57e6b5ae11c5beaa2b528f092f7687c4"],"902a92b60648a8925bfd9bb53a78669cd2ea98fd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}