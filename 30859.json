{"path":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene50/TestBlockPostingsFormat#testImpactSerialization().mjava","commits":[{"id":"9a0cc86697753659ac5e7f55243ccdcbf44d8a36","date":1574100512,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene50/TestBlockPostingsFormat#testImpactSerialization().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene50/TestBlockPostingsFormat#testImpactSerialization().mjava","sourceNew":"  public void testImpactSerialization() throws IOException {\n    // omit norms and omit freqs\n    doTestImpactSerialization(Collections.singletonList(new Impact(1, 1L)));\n\n    // omit freqs\n    doTestImpactSerialization(Collections.singletonList(new Impact(1, 42L)));\n    // omit freqs with very large norms\n    doTestImpactSerialization(Collections.singletonList(new Impact(1, -100L)));\n\n    // omit norms\n    doTestImpactSerialization(Collections.singletonList(new Impact(30, 1L)));\n    // omit norms with large freq\n    doTestImpactSerialization(Collections.singletonList(new Impact(500, 1L)));\n\n    // freqs and norms, basic\n    doTestImpactSerialization(\n        Arrays.asList(\n            new Impact(1, 7L),\n            new Impact(3, 9L),\n            new Impact(7, 10L),\n            new Impact(15, 11L),\n            new Impact(20, 13L),\n            new Impact(28, 14L)));\n\n    // freqs and norms, high values\n    doTestImpactSerialization(\n        Arrays.asList(\n            new Impact(2, 2L),\n            new Impact(10, 10L),\n            new Impact(12, 50L),\n            new Impact(50, -100L),\n            new Impact(1000, -80L),\n            new Impact(1005, -3L)));\n  }\n\n","sourceOld":"  public void testImpactSerialization() throws IOException {\n    // omit norms and omit freqs\n    doTestImpactSerialization(Collections.singletonList(new Impact(1, 1L)));\n\n    // omit freqs\n    doTestImpactSerialization(Collections.singletonList(new Impact(1, 42L)));\n    // omit freqs with very large norms\n    doTestImpactSerialization(Collections.singletonList(new Impact(1, -100L)));\n\n    // omit norms\n    doTestImpactSerialization(Collections.singletonList(new Impact(30, 1L)));\n    // omit norms with large freq\n    doTestImpactSerialization(Collections.singletonList(new Impact(500, 1L)));\n\n    // freqs and norms, basic\n    doTestImpactSerialization(\n        Arrays.asList(\n            new Impact(1, 7L),\n            new Impact(3, 9L),\n            new Impact(7, 10L),\n            new Impact(15, 11L),\n            new Impact(20, 13L),\n            new Impact(28, 14L)));\n\n    // freqs and norms, high values\n    doTestImpactSerialization(\n        Arrays.asList(\n            new Impact(2, 2L),\n            new Impact(10, 10L),\n            new Impact(12, 50L),\n            new Impact(50, -100L),\n            new Impact(1000, -80L),\n            new Impact(1005, -3L)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"]},"commit2Childs":{"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}