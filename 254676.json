{"path":"lucene/core/src/test/org/apache/lucene/util/fst/TestFSTDirectAddressing#main(String...).mjava","commits":[{"id":"0f5661e6a04d3172e262ad741b717924f2f1b6a5","date":1576244274,"type":1,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/fst/TestFSTDirectAddressing#main(String...).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/fst/TestFstDirectAddressing#main(String...).mjava","sourceNew":"  public static void main(String... args) throws Exception {\n    if (args.length < 2) {\n      throw new IllegalArgumentException(\"Missing argument\");\n    }\n    if (args[0].equals(\"-countFSTArcs\")) {\n      countFSTArcs(args[1]);\n    } else if (args[0].equals(\"-measureFSTOversizing\")) {\n      measureFSTOversizing(args[1]);\n    } else {\n      throw new IllegalArgumentException(\"Invalid argument \" + args[0]);\n    }\n  }\n\n","sourceOld":"  public static void main(String... args) throws Exception {\n    if (args.length < 2) {\n      throw new IllegalArgumentException(\"Missing argument\");\n    }\n    if (args[0].equals(\"-countFSTArcs\")) {\n      countFSTArcs(args[1]);\n    } else if (args[0].equals(\"-measureFSTOversizing\")) {\n      measureFSTOversizing(args[1]);\n    } else {\n      throw new IllegalArgumentException(\"Invalid argument \" + args[0]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","date":1576247714,"type":1,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/fst/TestFSTDirectAddressing#main(String...).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/fst/TestFstDirectAddressing#main(String...).mjava","sourceNew":"  public static void main(String... args) throws Exception {\n    if (args.length < 2) {\n      throw new IllegalArgumentException(\"Missing argument\");\n    }\n    if (args[0].equals(\"-countFSTArcs\")) {\n      countFSTArcs(args[1]);\n    } else if (args[0].equals(\"-measureFSTOversizing\")) {\n      measureFSTOversizing(args[1]);\n    } else {\n      throw new IllegalArgumentException(\"Invalid argument \" + args[0]);\n    }\n  }\n\n","sourceOld":"  public static void main(String... args) throws Exception {\n    if (args.length < 2) {\n      throw new IllegalArgumentException(\"Missing argument\");\n    }\n    if (args[0].equals(\"-countFSTArcs\")) {\n      countFSTArcs(args[1]);\n    } else if (args[0].equals(\"-measureFSTOversizing\")) {\n      measureFSTOversizing(args[1]);\n    } else {\n      throw new IllegalArgumentException(\"Invalid argument \" + args[0]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06086b5bd0f0d57858f0675becc58edf1f6b7c11","date":1586421397,"type":3,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/fst/TestFSTDirectAddressing#main(String...).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/fst/TestFSTDirectAddressing#main(String...).mjava","sourceNew":"  public static void main(String... args) throws Exception {\n    if (args.length < 2) {\n      throw new IllegalArgumentException(\"Missing argument\");\n    }\n    switch (args[0]) {\n      case \"-countFSTArcs\":\n        countFSTArcs(args[1]);\n        break;\n      case \"-measureFSTOversizing\":\n        measureFSTOversizing(args[1]);\n        break;\n      case \"-recompileAndWalk\":\n        recompileAndWalk(args[1]);\n        break;\n      default:\n        throw new IllegalArgumentException(\"Invalid argument \" + args[0]);\n    }\n  }\n\n","sourceOld":"  public static void main(String... args) throws Exception {\n    if (args.length < 2) {\n      throw new IllegalArgumentException(\"Missing argument\");\n    }\n    if (args[0].equals(\"-countFSTArcs\")) {\n      countFSTArcs(args[1]);\n    } else if (args[0].equals(\"-measureFSTOversizing\")) {\n      measureFSTOversizing(args[1]);\n    } else {\n      throw new IllegalArgumentException(\"Invalid argument \" + args[0]);\n    }\n  }\n\n","bugFix":["71d31a7d5773508492505519bb5230b87c8937ad"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"06086b5bd0f0d57858f0675becc58edf1f6b7c11":["0f5661e6a04d3172e262ad741b717924f2f1b6a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c5db9bff3aeb942c848a2ab8fa4b8b0737377deb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0f5661e6a04d3172e262ad741b717924f2f1b6a5"],"0f5661e6a04d3172e262ad741b717924f2f1b6a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06086b5bd0f0d57858f0675becc58edf1f6b7c11"]},"commit2Childs":{"06086b5bd0f0d57858f0675becc58edf1f6b7c11":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","0f5661e6a04d3172e262ad741b717924f2f1b6a5"],"c5db9bff3aeb942c848a2ab8fa4b8b0737377deb":[],"0f5661e6a04d3172e262ad741b717924f2f1b6a5":["06086b5bd0f0d57858f0675becc58edf1f6b7c11","c5db9bff3aeb942c848a2ab8fa4b8b0737377deb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}