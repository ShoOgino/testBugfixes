{"path":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#setUp().mjava","commits":[{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), false, Mode.SEARCH);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    analyzerNormal = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), false, Mode.NORMAL);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    analyzerNoPunct = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), true, Mode.SEARCH);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    extendedModeAnalyzerNoPunct = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), true, Mode.EXTENDED);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["9dcc09cac106847a24991642f3bb5444c60ddbe7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), false, Mode.SEARCH);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    analyzerNormal = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), false, Mode.NORMAL);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    analyzerNoPunct = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), true, Mode.SEARCH);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    extendedModeAnalyzerNoPunct = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), true, Mode.EXTENDED);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2b45d6769cfaeb4456b4b66cdd5e25c8940f2a4","date":1449124064,"type":3,"author":"Christian Moen","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#setUp().mjava","pathOld":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), false, Mode.SEARCH);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    analyzerNormal = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), false, Mode.NORMAL);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    analyzerNormalNBest = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        JapaneseTokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), false, Mode.NORMAL);\n        tokenizer.setNBestCost(2000);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    analyzerNoPunct = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), true, Mode.SEARCH);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    extendedModeAnalyzerNoPunct = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), true, Mode.EXTENDED);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), false, Mode.SEARCH);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    analyzerNormal = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), false, Mode.NORMAL);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    analyzerNoPunct = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), true, Mode.SEARCH);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    extendedModeAnalyzerNoPunct = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), true, Mode.EXTENDED);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":["9dcc09cac106847a24991642f3bb5444c60ddbe7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9dcc09cac106847a24991642f3bb5444c60ddbe7","date":1580536269,"type":3,"author":"Kazuaki Hiraga","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#setUp().mjava","pathOld":"lucene/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseTokenizer#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), false, false, Mode.SEARCH);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    analyzerNormal = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), false, false, Mode.NORMAL);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    analyzerNormalNBest = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        JapaneseTokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), false, false, Mode.NORMAL);\n        tokenizer.setNBestCost(2000);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    analyzerNoPunct = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), true, false, Mode.SEARCH);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    extendedModeAnalyzerNoPunct = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), true, false, Mode.EXTENDED);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    analyzerNoCompound = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), false, true, Mode.SEARCH);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    extendedModeAnalyzerNoCompound = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), false, true, Mode.EXTENDED);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), false, Mode.SEARCH);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    analyzerNormal = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), false, Mode.NORMAL);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    analyzerNormalNBest = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        JapaneseTokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), false, Mode.NORMAL);\n        tokenizer.setNBestCost(2000);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    analyzerNoPunct = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), true, Mode.SEARCH);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n    extendedModeAnalyzerNoPunct = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new JapaneseTokenizer(newAttributeFactory(), readDict(), true, Mode.EXTENDED);\n        return new TokenStreamComponents(tokenizer, tokenizer);\n      }\n    };\n  }\n\n","bugFix":["a56958d7f71a28824f20031ffbb2e13502a0274e","f2b45d6769cfaeb4456b4b66cdd5e25c8940f2a4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9dcc09cac106847a24991642f3bb5444c60ddbe7":["f2b45d6769cfaeb4456b4b66cdd5e25c8940f2a4"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f2b45d6769cfaeb4456b4b66cdd5e25c8940f2a4":["a56958d7f71a28824f20031ffbb2e13502a0274e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9dcc09cac106847a24991642f3bb5444c60ddbe7"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","f2b45d6769cfaeb4456b4b66cdd5e25c8940f2a4"],"9dcc09cac106847a24991642f3bb5444c60ddbe7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f2b45d6769cfaeb4456b4b66cdd5e25c8940f2a4":["9dcc09cac106847a24991642f3bb5444c60ddbe7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}