{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs,T).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs,T).mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs,T).mjava","sourceNew":"  /**\n   * Make a query\n   */\n  public abstract Query makeQuery(SpatialArgs args, T fieldInfo);\n\n","sourceOld":"  /**\n   * Make a query\n   */\n  public abstract Query makeQuery(SpatialArgs args, T fieldInfo);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"561469a62683fb18474394874c6010a19fb0deb7","date":1340864819,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs,T).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs,T).mjava","sourceNew":"  /**\n   * Make a query which has a score based on the distance from the data to the query shape.\n   * The default implementation constructs a {@link FilteredQuery} based on\n   * {@link #makeFilter(com.spatial4j.core.query.SpatialArgs, SpatialFieldInfo)} and\n   * {@link #makeValueSource(com.spatial4j.core.query.SpatialArgs, SpatialFieldInfo)}.\n   */\n  public Query makeQuery(SpatialArgs args, T fieldInfo) {\n    Filter filter = makeFilter(args, fieldInfo);\n    ValueSource vs = makeValueSource(args, fieldInfo);\n    return new FilteredQuery(new FunctionQuery(vs), filter);\n  }\n\n","sourceOld":"  /**\n   * Make a query\n   */\n  public abstract Query makeQuery(SpatialArgs args, T fieldInfo);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac9aaaaea7349fec4faf6eb1ad64d0f7ccd1f1fd","date":1340946597,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs,T).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs,T).mjava","sourceNew":"  /**\n   * Make a query which has a score based on the distance from the data to the query shape.\n   * The default implementation constructs a {@link FilteredQuery} based on\n   * {@link #makeFilter(org.apache.lucene.spatial.query.SpatialArgs, SpatialFieldInfo)} and\n   * {@link #makeValueSource(org.apache.lucene.spatial.query.SpatialArgs, SpatialFieldInfo)}.\n   */\n  public Query makeQuery(SpatialArgs args, T fieldInfo) {\n    Filter filter = makeFilter(args, fieldInfo);\n    ValueSource vs = makeValueSource(args, fieldInfo);\n    return new FilteredQuery(new FunctionQuery(vs), filter);\n  }\n\n","sourceOld":"  /**\n   * Make a query which has a score based on the distance from the data to the query shape.\n   * The default implementation constructs a {@link FilteredQuery} based on\n   * {@link #makeFilter(com.spatial4j.core.query.SpatialArgs, SpatialFieldInfo)} and\n   * {@link #makeValueSource(com.spatial4j.core.query.SpatialArgs, SpatialFieldInfo)}.\n   */\n  public Query makeQuery(SpatialArgs args, T fieldInfo) {\n    Filter filter = makeFilter(args, fieldInfo);\n    ValueSource vs = makeValueSource(args, fieldInfo);\n    return new FilteredQuery(new FunctionQuery(vs), filter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0415a016b37e58a017fed0a91234f733ab359971","date":1341458183,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs,T).mjava","sourceNew":"  /**\n   * Make a query which has a score based on the distance from the data to the query shape.\n   * The default implementation constructs a {@link FilteredQuery} based on\n   * {@link #makeFilter(org.apache.lucene.spatial.query.SpatialArgs)} and\n   * {@link #makeValueSource(org.apache.lucene.spatial.query.SpatialArgs)}.\n   */\n  public Query makeQuery(SpatialArgs args) {\n    Filter filter = makeFilter(args);\n    ValueSource vs = makeValueSource(args);\n    return new FilteredQuery(new FunctionQuery(vs), filter);\n  }\n\n","sourceOld":"  /**\n   * Make a query which has a score based on the distance from the data to the query shape.\n   * The default implementation constructs a {@link FilteredQuery} based on\n   * {@link #makeFilter(org.apache.lucene.spatial.query.SpatialArgs, SpatialFieldInfo)} and\n   * {@link #makeValueSource(org.apache.lucene.spatial.query.SpatialArgs, SpatialFieldInfo)}.\n   */\n  public Query makeQuery(SpatialArgs args, T fieldInfo) {\n    Filter filter = makeFilter(args, fieldInfo);\n    ValueSource vs = makeValueSource(args, fieldInfo);\n    return new FilteredQuery(new FunctionQuery(vs), filter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs,T).mjava","sourceNew":null,"sourceOld":"  /**\n   * Make a query\n   */\n  public abstract Query makeQuery(SpatialArgs args, T fieldInfo);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0415a016b37e58a017fed0a91234f733ab359971":["ac9aaaaea7349fec4faf6eb1ad64d0f7ccd1f1fd"],"ac9aaaaea7349fec4faf6eb1ad64d0f7ccd1f1fd":["561469a62683fb18474394874c6010a19fb0deb7"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","0415a016b37e58a017fed0a91234f733ab359971"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"561469a62683fb18474394874c6010a19fb0deb7":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0415a016b37e58a017fed0a91234f733ab359971"]},"commit2Childs":{"0415a016b37e58a017fed0a91234f733ab359971":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ac9aaaaea7349fec4faf6eb1ad64d0f7ccd1f1fd":["0415a016b37e58a017fed0a91234f733ab359971"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fe33227f6805edab2036cbb80645cc4e2d1fa424","561469a62683fb18474394874c6010a19fb0deb7"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"561469a62683fb18474394874c6010a19fb0deb7":["ac9aaaaea7349fec4faf6eb1ad64d0f7ccd1f1fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}