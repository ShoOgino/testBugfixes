{"path":"lucene/core/src/java/org/apache/lucene/search/NRTManager#waitForGeneration(long).mjava","commits":[{"id":"2c36db4818c5eba16bdcbedab4f06dd69ae59190","date":1329160108,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/NRTManager#waitForGeneration(long).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Waits for the target generation to become visible in\n   * the searcher.\n   * If the current searcher is older than the\n   * target generation, this method will block\n   * until the searcher is reopened, by another via\n   * {@link #maybeReopen} or until the {@link NRTManager} is closed.\n   * \n   * @param targetGen the generation to wait for\n   */\n  public void waitForGeneration(long targetGen) {\n    waitForGeneration(targetGen, -1, TimeUnit.NANOSECONDS);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"585934372cd682aa1469c805e21999e53d88a356","date":1329506719,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/NRTManager#waitForGeneration(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/NRTManager#waitForGeneration(long).mjava","sourceNew":"  /**\n   * Waits for the target generation to become visible in\n   * the searcher.\n   * If the current searcher is older than the\n   * target generation, this method will block\n   * until the searcher is reopened, by another via\n   * {@link #maybeRefresh} or until the {@link NRTManager} is closed.\n   * \n   * @param targetGen the generation to wait for\n   */\n  public void waitForGeneration(long targetGen) {\n    waitForGeneration(targetGen, -1, TimeUnit.NANOSECONDS);\n  }\n\n","sourceOld":"  /**\n   * Waits for the target generation to become visible in\n   * the searcher.\n   * If the current searcher is older than the\n   * target generation, this method will block\n   * until the searcher is reopened, by another via\n   * {@link #maybeReopen} or until the {@link NRTManager} is closed.\n   * \n   * @param targetGen the generation to wait for\n   */\n  public void waitForGeneration(long targetGen) {\n    waitForGeneration(targetGen, -1, TimeUnit.NANOSECONDS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2045b132a2396bb23dff28d2d9f349a6907d36e","date":1367513076,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ControlledRealTimeReopenThread#waitForGeneration(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/NRTManager#waitForGeneration(long).mjava","sourceNew":"  /**\n   * Waits for the target generation to become visible in\n   * the searcher.\n   * If the current searcher is older than the\n   * target generation, this method will block\n   * until the searcher is reopened, by another via\n   * {@link ReferenceManager#maybeRefresh} or until the {@link ReferenceManager} is closed.\n   * \n   * @param targetGen the generation to wait for\n   */\n  public void waitForGeneration(long targetGen) throws InterruptedException {\n    waitForGeneration(targetGen, -1);\n  }\n\n","sourceOld":"  /**\n   * Waits for the target generation to become visible in\n   * the searcher.\n   * If the current searcher is older than the\n   * target generation, this method will block\n   * until the searcher is reopened, by another via\n   * {@link #maybeRefresh} or until the {@link NRTManager} is closed.\n   * \n   * @param targetGen the generation to wait for\n   */\n  public void waitForGeneration(long targetGen) {\n    waitForGeneration(targetGen, -1, TimeUnit.NANOSECONDS);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2045b132a2396bb23dff28d2d9f349a6907d36e":["585934372cd682aa1469c805e21999e53d88a356"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"585934372cd682aa1469c805e21999e53d88a356":["2c36db4818c5eba16bdcbedab4f06dd69ae59190"],"2c36db4818c5eba16bdcbedab4f06dd69ae59190":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c2045b132a2396bb23dff28d2d9f349a6907d36e"]},"commit2Childs":{"c2045b132a2396bb23dff28d2d9f349a6907d36e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2c36db4818c5eba16bdcbedab4f06dd69ae59190"],"585934372cd682aa1469c805e21999e53d88a356":["c2045b132a2396bb23dff28d2d9f349a6907d36e"],"2c36db4818c5eba16bdcbedab4f06dd69ae59190":["585934372cd682aa1469c805e21999e53d88a356"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}