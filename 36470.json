{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#read().mjava","commits":[{"id":"10b9c6c42133576daaccbd79bd04c88511b9caca","date":1455930223,"type":0,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#read().mjava","pathOld":"/dev/null","sourceNew":"  public Tuple read() throws IOException {\n    Tuple tuple = _read();\n\n    if(tuple.EOF) {\n      return tuple;\n    }\n\n    ++count;\n    if(checkpointEvery > -1 && (count % checkpointEvery) == 0) {\n      persistCheckpoints();\n    }\n\n    long version = tuple.getLong(\"_version_\");\n    String slice = tuple.getString(\"_SLICE_\");\n    checkpoints.put(slice, version);\n\n    tuple.remove(\"_SLICE_\");\n    tuple.remove(\"_CORE_\");\n\n    return tuple;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ab3f83fe809caa1d81a4ed52dfa5372723b348d","date":1458525918,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#read().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#read().mjava","sourceNew":"  public Tuple read() throws IOException {\n    Tuple tuple = _read();\n\n    if(tuple.EOF) {\n      if(runCount > 0) {\n        tuple.put(\"sleepMillis\", 0);\n      } else {\n        tuple.put(\"sleepMillis\", 1000);\n      }\n\n      return tuple;\n    }\n\n    ++count;\n    ++runCount;\n    if(checkpointEvery > -1 && (count % checkpointEvery) == 0) {\n      persistCheckpoints();\n    }\n\n    long version = tuple.getLong(\"_version_\");\n    String slice = tuple.getString(\"_SLICE_\");\n    checkpoints.put(slice, version);\n\n    tuple.remove(\"_SLICE_\");\n    tuple.remove(\"_CORE_\");\n\n    return tuple;\n  }\n\n","sourceOld":"  public Tuple read() throws IOException {\n    Tuple tuple = _read();\n\n    if(tuple.EOF) {\n      return tuple;\n    }\n\n    ++count;\n    if(checkpointEvery > -1 && (count % checkpointEvery) == 0) {\n      persistCheckpoints();\n    }\n\n    long version = tuple.getLong(\"_version_\");\n    String slice = tuple.getString(\"_SLICE_\");\n    checkpoints.put(slice, version);\n\n    tuple.remove(\"_SLICE_\");\n    tuple.remove(\"_CORE_\");\n\n    return tuple;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d2dadc1f5ca8703d8659f4964961f9967935d75","date":1490231750,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#read().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#read().mjava","sourceNew":"  public Tuple read() throws IOException {\n    Tuple tuple = _read();\n\n    if(tuple.EOF) {\n      if(runCount > 0) {\n        tuple.put(\"sleepMillis\", 0);\n      } else {\n        tuple.put(\"sleepMillis\", 1000);\n      }\n\n      return tuple;\n    }\n\n    ++count;\n    ++runCount;\n    if(checkpointEvery > -1 && (count % checkpointEvery) == 0) {\n      persistCheckpoints();\n    }\n\n    long version = tuple.getLong(VERSION_FIELD);\n    String slice = tuple.getString(\"_SLICE_\");\n    checkpoints.put(slice, version);\n\n    tuple.remove(\"_SLICE_\");\n    tuple.remove(\"_CORE_\");\n\n    return tuple;\n  }\n\n","sourceOld":"  public Tuple read() throws IOException {\n    Tuple tuple = _read();\n\n    if(tuple.EOF) {\n      if(runCount > 0) {\n        tuple.put(\"sleepMillis\", 0);\n      } else {\n        tuple.put(\"sleepMillis\", 1000);\n      }\n\n      return tuple;\n    }\n\n    ++count;\n    ++runCount;\n    if(checkpointEvery > -1 && (count % checkpointEvery) == 0) {\n      persistCheckpoints();\n    }\n\n    long version = tuple.getLong(\"_version_\");\n    String slice = tuple.getString(\"_SLICE_\");\n    checkpoints.put(slice, version);\n\n    tuple.remove(\"_SLICE_\");\n    tuple.remove(\"_CORE_\");\n\n    return tuple;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5fa6615014cd2288fe930f8c8bb726f9504961d","date":1490280013,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#read().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TopicStream#read().mjava","sourceNew":"  public Tuple read() throws IOException {\n    Tuple tuple = _read();\n\n    if(tuple.EOF) {\n      if(runCount > 0) {\n        tuple.put(\"sleepMillis\", 0);\n      } else {\n        tuple.put(\"sleepMillis\", 1000);\n      }\n\n      return tuple;\n    }\n\n    ++count;\n    ++runCount;\n    if(checkpointEvery > -1 && (count % checkpointEvery) == 0) {\n      persistCheckpoints();\n    }\n\n    long version = tuple.getLong(VERSION_FIELD);\n    String slice = tuple.getString(\"_SLICE_\");\n    checkpoints.put(slice, version);\n\n    tuple.remove(\"_SLICE_\");\n    tuple.remove(\"_CORE_\");\n\n    return tuple;\n  }\n\n","sourceOld":"  public Tuple read() throws IOException {\n    Tuple tuple = _read();\n\n    if(tuple.EOF) {\n      if(runCount > 0) {\n        tuple.put(\"sleepMillis\", 0);\n      } else {\n        tuple.put(\"sleepMillis\", 1000);\n      }\n\n      return tuple;\n    }\n\n    ++count;\n    ++runCount;\n    if(checkpointEvery > -1 && (count % checkpointEvery) == 0) {\n      persistCheckpoints();\n    }\n\n    long version = tuple.getLong(\"_version_\");\n    String slice = tuple.getString(\"_SLICE_\");\n    checkpoints.put(slice, version);\n\n    tuple.remove(\"_SLICE_\");\n    tuple.remove(\"_CORE_\");\n\n    return tuple;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e5fa6615014cd2288fe930f8c8bb726f9504961d":["5ab3f83fe809caa1d81a4ed52dfa5372723b348d"],"10b9c6c42133576daaccbd79bd04c88511b9caca":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6d2dadc1f5ca8703d8659f4964961f9967935d75":["5ab3f83fe809caa1d81a4ed52dfa5372723b348d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5ab3f83fe809caa1d81a4ed52dfa5372723b348d":["10b9c6c42133576daaccbd79bd04c88511b9caca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6d2dadc1f5ca8703d8659f4964961f9967935d75"]},"commit2Childs":{"e5fa6615014cd2288fe930f8c8bb726f9504961d":[],"10b9c6c42133576daaccbd79bd04c88511b9caca":["5ab3f83fe809caa1d81a4ed52dfa5372723b348d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["10b9c6c42133576daaccbd79bd04c88511b9caca"],"6d2dadc1f5ca8703d8659f4964961f9967935d75":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5ab3f83fe809caa1d81a4ed52dfa5372723b348d":["e5fa6615014cd2288fe930f8c8bb726f9504961d","6d2dadc1f5ca8703d8659f4964961f9967935d75"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e5fa6615014cd2288fe930f8c8bb726f9504961d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}