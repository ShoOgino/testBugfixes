{"path":"lucene/core/src/java/org/apache/lucene/util/compress/LZ4.HighCompressionHashTable#addHash(int).mjava","commits":[{"id":"9407318969e8504257b4c5764c65755a043e5404","date":1579873617,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/compress/LZ4.HighCompressionHashTable#addHash(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/LZ4.HCHashTable#addHash(byte[],int).mjava","sourceNew":"    private void addHash(int off) {\n      final int v = readInt(bytes, off);\n      final int h = hashHC(v);\n      int delta = off - hashTable[h];\n      if (delta <= 0 || delta >= MAX_DISTANCE) {\n        delta = MAX_DISTANCE - 1;\n      }\n      chainTable[off & MASK] = (short) delta;\n      hashTable[h] = off;\n    }\n\n","sourceOld":"    private void addHash(byte[] bytes, int off) {\n      final int v = readInt(bytes, off);\n      final int h = hashHC(v);\n      int delta = off - hashTable[h];\n      assert delta > 0 : delta;\n      if (delta >= MAX_DISTANCE) {\n        delta = MAX_DISTANCE - 1;\n      }\n      chainTable[off & MASK] = (short) delta;\n      hashTable[h] = off;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9407318969e8504257b4c5764c65755a043e5404":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9407318969e8504257b4c5764c65755a043e5404"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9407318969e8504257b4c5764c65755a043e5404"],"9407318969e8504257b4c5764c65755a043e5404":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}