{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.ValidateInfo#ValidateInfo(Class,Set[String],Number,Number).mjava","commits":[{"id":"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2","date":1498616740,"type":1,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.ValidateInfo#ValidateInfo(Class,Set[String],Number,Number).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.ValidateInfo#ValidateInfo(Class,Set[String],Number,Number).mjava","sourceNew":"    ValidateInfo(Class type, Set<String> vals, Number min, Number max) {\n      this.type = type;\n      this.vals = vals;\n      this.min = min;\n      if(min != null && !type.isInstance(min)) throw new RuntimeException(\"wrong min value type, expected: \" + type.getName() + \" actual: \" + min.getClass().getName());\n      this.max = max;\n      if(max != null && !type.isInstance(max)) throw new RuntimeException(\"wrong max value type, expected: \" + type.getName() + \" actual: \" + max.getClass().getName());\n    }\n\n","sourceOld":"    ValidateInfo(Class type, Set<String> vals, Number min, Number max) {\n      this.type = type;\n      this.vals = vals;\n      this.min = min;\n      if(min != null && !type.isInstance(min)) throw new RuntimeException(\"wrong min value type, expected: \" + type.getName() + \" actual: \" + min.getClass().getName());\n      this.max = max;\n      if(max != null && !type.isInstance(max)) throw new RuntimeException(\"wrong max value type, expected: \" + type.getName() + \" actual: \" + max.getClass().getName());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98f11c416d30e556e0004a9a84960702d12d35b1","date":1498628359,"type":1,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.ValidateInfo#ValidateInfo(Class,Set[String],Number,Number).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause.ValidateInfo#ValidateInfo(Class,Set[String],Number,Number).mjava","sourceNew":"    ValidateInfo(Class type, Set<String> vals, Number min, Number max) {\n      this.type = type;\n      this.vals = vals;\n      this.min = min;\n      if (min != null && !type.isInstance(min))\n        throw new RuntimeException(\"wrong min value type, expected: \" + type.getName() + \" actual: \" + min.getClass().getName());\n      this.max = max;\n      if (max != null && !type.isInstance(max))\n        throw new RuntimeException(\"wrong max value type, expected: \" + type.getName() + \" actual: \" + max.getClass().getName());\n    }\n\n","sourceOld":"    ValidateInfo(Class type, Set<String> vals, Number min, Number max) {\n      this.type = type;\n      this.vals = vals;\n      this.min = min;\n      if (min != null && !type.isInstance(min))\n        throw new RuntimeException(\"wrong min value type, expected: \" + type.getName() + \" actual: \" + min.getClass().getName());\n      this.max = max;\n      if (max != null && !type.isInstance(max))\n        throw new RuntimeException(\"wrong max value type, expected: \" + type.getName() + \" actual: \" + max.getClass().getName());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.ValidateInfo#ValidateInfo(Class,Set[String],Number,Number).mjava","pathOld":"/dev/null","sourceNew":"    ValidateInfo(Class type, Set<String> vals, Number min, Number max) {\n      this.type = type;\n      this.vals = vals;\n      this.min = min;\n      if(min != null && !type.isInstance(min)) throw new RuntimeException(\"wrong min value type, expected: \" + type.getName() + \" actual: \" + min.getClass().getName());\n      this.max = max;\n      if(max != null && !type.isInstance(max)) throw new RuntimeException(\"wrong max value type, expected: \" + type.getName() + \" actual: \" + max.getClass().getName());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.ValidateInfo#ValidateInfo(Class,Set[String],Number,Number).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.ValidateInfo#ValidateInfo(Class,Set[String],Number,Number).mjava","sourceNew":"    ValidateInfo(Class type, Set<String> vals, Number min, Number max) {\n      this.type = type;\n      this.vals = vals;\n      this.min = min;\n      if (min != null && !type.isInstance(min))\n        throw new RuntimeException(\"wrong min value type, expected: \" + type.getName() + \" actual: \" + min.getClass().getName());\n      this.max = max;\n      if (max != null && !type.isInstance(max))\n        throw new RuntimeException(\"wrong max value type, expected: \" + type.getName() + \" actual: \" + max.getClass().getName());\n    }\n\n","sourceOld":"    ValidateInfo(Class type, Set<String> vals, Number min, Number max) {\n      this.type = type;\n      this.vals = vals;\n      this.min = min;\n      if(min != null && !type.isInstance(min)) throw new RuntimeException(\"wrong min value type, expected: \" + type.getName() + \" actual: \" + min.getClass().getName());\n      this.max = max;\n      if(max != null && !type.isInstance(max)) throw new RuntimeException(\"wrong max value type, expected: \" + type.getName() + \" actual: \" + max.getClass().getName());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.ValidateInfo#ValidateInfo(Class,Set[String],Number,Number).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.ValidateInfo#ValidateInfo(Class,Set[String],Number,Number).mjava","sourceNew":"    ValidateInfo(Class type, Set<String> vals, Number min, Number max) {\n      this.type = type;\n      this.vals = vals;\n      this.min = min;\n      if (min != null && !type.isInstance(min))\n        throw new RuntimeException(\"wrong min value type, expected: \" + type.getName() + \" actual: \" + min.getClass().getName());\n      this.max = max;\n      if (max != null && !type.isInstance(max))\n        throw new RuntimeException(\"wrong max value type, expected: \" + type.getName() + \" actual: \" + max.getClass().getName());\n    }\n\n","sourceOld":"    ValidateInfo(Class type, Set<String> vals, Number min, Number max) {\n      this.type = type;\n      this.vals = vals;\n      this.min = min;\n      if(min != null && !type.isInstance(min)) throw new RuntimeException(\"wrong min value type, expected: \" + type.getName() + \" actual: \" + min.getClass().getName());\n      this.max = max;\n      if(max != null && !type.isInstance(max)) throw new RuntimeException(\"wrong max value type, expected: \" + type.getName() + \" actual: \" + max.getClass().getName());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1bbcda32e5cd37ef61ea1190bacd080308e22070","date":1508850553,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Clause.ValidateInfo#ValidateInfo(Class,Set[String],Number,Number).mjava","sourceNew":null,"sourceOld":"    ValidateInfo(Class type, Set<String> vals, Number min, Number max) {\n      this.type = type;\n      this.vals = vals;\n      this.min = min;\n      if (min != null && !type.isInstance(min))\n        throw new RuntimeException(\"wrong min value type, expected: \" + type.getName() + \" actual: \" + min.getClass().getName());\n      this.max = max;\n      if (max != null && !type.isInstance(max))\n        throw new RuntimeException(\"wrong max value type, expected: \" + type.getName() + \" actual: \" + max.getClass().getName());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1bbcda32e5cd37ef61ea1190bacd080308e22070":["560c18d71dad43d675158783c3840f8c80d6d39c"],"560c18d71dad43d675158783c3840f8c80d6d39c":["28288370235ed02234a64753cdbf0c6ec096304a","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2"],"98f11c416d30e556e0004a9a84960702d12d35b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1bbcda32e5cd37ef61ea1190bacd080308e22070"]},"commit2Childs":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2":["28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6249f3a9e6b3580715fd7ab5f4da0bf6e096f8f2","28288370235ed02234a64753cdbf0c6ec096304a","98f11c416d30e556e0004a9a84960702d12d35b1"],"1bbcda32e5cd37ef61ea1190bacd080308e22070":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"560c18d71dad43d675158783c3840f8c80d6d39c":["1bbcda32e5cd37ef61ea1190bacd080308e22070"],"28288370235ed02234a64753cdbf0c6ec096304a":["c304e97e7c1d472bc70e801b35ee78583916c6cd","560c18d71dad43d675158783c3840f8c80d6d39c"],"98f11c416d30e556e0004a9a84960702d12d35b1":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}