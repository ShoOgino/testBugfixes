{"path":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory.SearcherThread#run().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory.SearcherThread#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestLockFactory.SearcherThread#run().mjava","sourceNew":"        @Override\n        public void run() {\n            IndexReader reader = null;\n            IndexSearcher searcher = null;\n            Query query = new TermQuery(new Term(\"content\", \"aaa\"));\n            for(int i=0;i<this.numIteration;i++) {\n                try{\n                    reader = IndexReader.open(dir);\n                    searcher = new IndexSearcher(reader);\n                } catch (Exception e) {\n                    hitException = true;\n                    System.out.println(\"Stress Test Index Searcher: create hit unexpected exception: \" + e.toString());\n                    e.printStackTrace(System.out);\n                    break;\n                }\n                try {\n                  searcher.search(query, null, 1000);\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: search hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n                // System.out.println(hits.length() + \" total results\");\n                try {\n                  reader.close();\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: close hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n            }\n        }\n\n","sourceOld":"        @Override\n        public void run() {\n            IndexReader reader = null;\n            IndexSearcher searcher = null;\n            Query query = new TermQuery(new Term(\"content\", \"aaa\"));\n            for(int i=0;i<this.numIteration;i++) {\n                try{\n                    reader = IndexReader.open(dir);\n                    searcher = new IndexSearcher(reader);\n                } catch (Exception e) {\n                    hitException = true;\n                    System.out.println(\"Stress Test Index Searcher: create hit unexpected exception: \" + e.toString());\n                    e.printStackTrace(System.out);\n                    break;\n                }\n                try {\n                  searcher.search(query, null, 1000);\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: search hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n                // System.out.println(hits.length() + \" total results\");\n                try {\n                  reader.close();\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: close hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n            }\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory.SearcherThread#run().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory.SearcherThread#run().mjava","sourceNew":"        @Override\n        public void run() {\n            IndexReader reader = null;\n            IndexSearcher searcher = null;\n            Query query = new TermQuery(new Term(\"content\", \"aaa\"));\n            for(int i=0;i<this.numIteration;i++) {\n                try{\n                    reader = DirectoryReader.open(dir);\n                    searcher = new IndexSearcher(reader);\n                } catch (Exception e) {\n                    hitException = true;\n                    System.out.println(\"Stress Test Index Searcher: create hit unexpected exception: \" + e.toString());\n                    e.printStackTrace(System.out);\n                    break;\n                }\n                try {\n                  searcher.search(query, null, 1000);\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: search hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n                // System.out.println(hits.length() + \" total results\");\n                try {\n                  reader.close();\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: close hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n            }\n        }\n\n","sourceOld":"        @Override\n        public void run() {\n            IndexReader reader = null;\n            IndexSearcher searcher = null;\n            Query query = new TermQuery(new Term(\"content\", \"aaa\"));\n            for(int i=0;i<this.numIteration;i++) {\n                try{\n                    reader = IndexReader.open(dir);\n                    searcher = new IndexSearcher(reader);\n                } catch (Exception e) {\n                    hitException = true;\n                    System.out.println(\"Stress Test Index Searcher: create hit unexpected exception: \" + e.toString());\n                    e.printStackTrace(System.out);\n                    break;\n                }\n                try {\n                  searcher.search(query, null, 1000);\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: search hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n                // System.out.println(hits.length() + \" total results\");\n                try {\n                  reader.close();\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: close hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n            }\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173","date":1365631993,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory.SearcherThread#run().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory.SearcherThread#run().mjava","sourceNew":"        @Override\n        public void run() {\n            IndexReader reader = null;\n            IndexSearcher searcher = null;\n            Query query = new TermQuery(new Term(\"content\", \"aaa\"));\n            for(int i=0;i<this.numIteration;i++) {\n                try{\n                    reader = DirectoryReader.open(dir);\n                    searcher = newSearcher(reader);\n                } catch (Exception e) {\n                    hitException = true;\n                    System.out.println(\"Stress Test Index Searcher: create hit unexpected exception: \" + e.toString());\n                    e.printStackTrace(System.out);\n                    break;\n                }\n                try {\n                  searcher.search(query, null, 1000);\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: search hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n                // System.out.println(hits.length() + \" total results\");\n                try {\n                  reader.close();\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: close hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n            }\n        }\n\n","sourceOld":"        @Override\n        public void run() {\n            IndexReader reader = null;\n            IndexSearcher searcher = null;\n            Query query = new TermQuery(new Term(\"content\", \"aaa\"));\n            for(int i=0;i<this.numIteration;i++) {\n                try{\n                    reader = DirectoryReader.open(dir);\n                    searcher = new IndexSearcher(reader);\n                } catch (Exception e) {\n                    hitException = true;\n                    System.out.println(\"Stress Test Index Searcher: create hit unexpected exception: \" + e.toString());\n                    e.printStackTrace(System.out);\n                    break;\n                }\n                try {\n                  searcher.search(query, null, 1000);\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: search hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n                // System.out.println(hits.length() + \" total results\");\n                try {\n                  reader.close();\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: close hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n            }\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory.SearcherThread#run().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory.SearcherThread#run().mjava","sourceNew":"        @Override\n        public void run() {\n            IndexReader reader = null;\n            IndexSearcher searcher = null;\n            Query query = new TermQuery(new Term(\"content\", \"aaa\"));\n            for(int i=0;i<this.numIteration;i++) {\n                try{\n                    reader = DirectoryReader.open(dir);\n                    searcher = newSearcher(reader);\n                } catch (Exception e) {\n                    hitException = true;\n                    System.out.println(\"Stress Test Index Searcher: create hit unexpected exception: \" + e.toString());\n                    e.printStackTrace(System.out);\n                    break;\n                }\n                try {\n                  searcher.search(query, null, 1000);\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: search hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n                // System.out.println(hits.length() + \" total results\");\n                try {\n                  reader.close();\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: close hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n            }\n        }\n\n","sourceOld":"        @Override\n        public void run() {\n            IndexReader reader = null;\n            IndexSearcher searcher = null;\n            Query query = new TermQuery(new Term(\"content\", \"aaa\"));\n            for(int i=0;i<this.numIteration;i++) {\n                try{\n                    reader = DirectoryReader.open(dir);\n                    searcher = newSearcher(reader);\n                } catch (Exception e) {\n                    hitException = true;\n                    System.out.println(\"Stress Test Index Searcher: create hit unexpected exception: \" + e.toString());\n                    e.printStackTrace(System.out);\n                    break;\n                }\n                try {\n                  searcher.search(query, null, 1000);\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: search hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n                // System.out.println(hits.length() + \" total results\");\n                try {\n                  reader.close();\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: close hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n            }\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory.SearcherThread#run().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory.SearcherThread#run().mjava","sourceNew":"        @Override\n        public void run() {\n            IndexReader reader = null;\n            IndexSearcher searcher = null;\n            Query query = new TermQuery(new Term(\"content\", \"aaa\"));\n            for(int i=0;i<this.numIteration;i++) {\n                try{\n                    reader = DirectoryReader.open(dir);\n                    searcher = newSearcher(reader);\n                } catch (Exception e) {\n                    hitException = true;\n                    System.out.println(\"Stress Test Index Searcher: create hit unexpected exception: \" + e.toString());\n                    e.printStackTrace(System.out);\n                    break;\n                }\n                try {\n                  searcher.search(query, null, 1000);\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: search hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n                // System.out.println(hits.length() + \" total results\");\n                try {\n                  reader.close();\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: close hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n            }\n        }\n\n","sourceOld":"        @Override\n        public void run() {\n            IndexReader reader = null;\n            IndexSearcher searcher = null;\n            Query query = new TermQuery(new Term(\"content\", \"aaa\"));\n            for(int i=0;i<this.numIteration;i++) {\n                try{\n                    reader = DirectoryReader.open(dir);\n                    searcher = newSearcher(reader);\n                } catch (Exception e) {\n                    hitException = true;\n                    System.out.println(\"Stress Test Index Searcher: create hit unexpected exception: \" + e.toString());\n                    e.printStackTrace(System.out);\n                    break;\n                }\n                try {\n                  searcher.search(query, null, 1000);\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: search hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n                // System.out.println(hits.length() + \" total results\");\n                try {\n                  reader.close();\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: close hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n            }\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory.SearcherThread#run().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory.SearcherThread#run().mjava","sourceNew":"        @Override\n        public void run() {\n            IndexReader reader = null;\n            IndexSearcher searcher = null;\n            Query query = new TermQuery(new Term(\"content\", \"aaa\"));\n            for(int i=0;i<this.numIteration;i++) {\n                try{\n                    reader = DirectoryReader.open(dir);\n                    searcher = newSearcher(reader);\n                } catch (Exception e) {\n                    hitException = true;\n                    System.out.println(\"Stress Test Index Searcher: create hit unexpected exception: \" + e.toString());\n                    e.printStackTrace(System.out);\n                    break;\n                }\n                try {\n                  searcher.search(query, 1000);\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: search hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n                // System.out.println(hits.length() + \" total results\");\n                try {\n                  reader.close();\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: close hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n            }\n        }\n\n","sourceOld":"        @Override\n        public void run() {\n            IndexReader reader = null;\n            IndexSearcher searcher = null;\n            Query query = new TermQuery(new Term(\"content\", \"aaa\"));\n            for(int i=0;i<this.numIteration;i++) {\n                try{\n                    reader = DirectoryReader.open(dir);\n                    searcher = newSearcher(reader);\n                } catch (Exception e) {\n                    hitException = true;\n                    System.out.println(\"Stress Test Index Searcher: create hit unexpected exception: \" + e.toString());\n                    e.printStackTrace(System.out);\n                    break;\n                }\n                try {\n                  searcher.search(query, null, 1000);\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: search hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n                // System.out.println(hits.length() + \" total results\");\n                try {\n                  reader.close();\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: close hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n            }\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"618635065f043788c9e034f96ca5cd5cea1b4592","date":1433442044,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestLockFactory.SearcherThread#run().mjava","sourceNew":null,"sourceOld":"        @Override\n        public void run() {\n            IndexReader reader = null;\n            IndexSearcher searcher = null;\n            Query query = new TermQuery(new Term(\"content\", \"aaa\"));\n            for(int i=0;i<this.numIteration;i++) {\n                try{\n                    reader = DirectoryReader.open(dir);\n                    searcher = newSearcher(reader);\n                } catch (Exception e) {\n                    hitException = true;\n                    System.out.println(\"Stress Test Index Searcher: create hit unexpected exception: \" + e.toString());\n                    e.printStackTrace(System.out);\n                    break;\n                }\n                try {\n                  searcher.search(query, 1000);\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: search hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n                // System.out.println(hits.length() + \" total results\");\n                try {\n                  reader.close();\n                } catch (IOException e) {\n                  hitException = true;\n                  System.out.println(\"Stress Test Index Searcher: close hit unexpected exception: \" + e.toString());\n                  e.printStackTrace(System.out);\n                  break;\n                }\n            }\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"618635065f043788c9e034f96ca5cd5cea1b4592":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173"],"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["618635065f043788c9e034f96ca5cd5cea1b4592"]},"commit2Childs":{"618635065f043788c9e034f96ca5cd5cea1b4592":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["618635065f043788c9e034f96ca5cd5cea1b4592"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}