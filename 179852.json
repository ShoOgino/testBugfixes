{"path":"src/java/org/apache/solr/search/PrefixGenerator[PrefixFilter]#generate(IndexReader).mjava","commits":[{"id":"366fcca5de1fe02aa77c7aca163ce4c0dbf30112","date":1138917988,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/PrefixGenerator[PrefixFilter]#generate(IndexReader).mjava","pathOld":"src/lucene_extras/org/apache/lucene/search/PrefixGenerator[PrefixFilter]#generate(IndexReader).mjava","sourceNew":"  public void generate(IndexReader reader) throws IOException {\r\n    TermEnum enumerator = reader.terms(prefix);\r\n    TermDocs termDocs = reader.termDocs();\r\n\r\n    try {\r\n\r\n      String prefixText = prefix.text();\r\n      String prefixField = prefix.field();\r\n      do {\r\n        Term term = enumerator.term();\r\n        if (term != null &&\r\n            term.text().startsWith(prefixText) &&\r\n            term.field() == prefixField)\r\n        {\r\n          termDocs.seek(term);\r\n          while (termDocs.next()) {\r\n            handleDoc(termDocs.doc());\r\n          }\r\n        } else {\r\n          break;\r\n        }\r\n      } while (enumerator.next());\r\n    } finally {\r\n      termDocs.close();\r\n      enumerator.close();\r\n    }\r\n  }\r\n\n","sourceOld":"  public void generate(IndexReader reader) throws IOException {\n    TermEnum enumerator = reader.terms(prefix);\n    TermDocs termDocs = reader.termDocs();\n\n    try {\n\n      String prefixText = prefix.text();\n      String prefixField = prefix.field();\n      do {\n        Term term = enumerator.term();\n        if (term != null &&\n            term.text().startsWith(prefixText) &&\n            term.field() == prefixField)\n        {\n          termDocs.seek(term);\n          while (termDocs.next()) {\n            handleDoc(termDocs.doc());\n          }\n        } else {\n          break;\n        }\n      } while (enumerator.next());\n    } finally {\n      termDocs.close();\n      enumerator.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c0e301b711811c6aaee90440cc1a7925fdd1a1e","date":1153259525,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/PrefixGenerator[PrefixFilter]#generate(IndexReader).mjava","pathOld":"src/java/org/apache/solr/search/PrefixGenerator[PrefixFilter]#generate(IndexReader).mjava","sourceNew":"  public void generate(IndexReader reader) throws IOException {\n    TermEnum enumerator = reader.terms(prefix);\n    TermDocs termDocs = reader.termDocs();\n\n    try {\n\n      String prefixText = prefix.text();\n      String prefixField = prefix.field();\n      do {\n        Term term = enumerator.term();\n        if (term != null &&\n            term.text().startsWith(prefixText) &&\n            term.field() == prefixField)\n        {\n          termDocs.seek(term);\n          while (termDocs.next()) {\n            handleDoc(termDocs.doc());\n          }\n        } else {\n          break;\n        }\n      } while (enumerator.next());\n    } finally {\n      termDocs.close();\n      enumerator.close();\n    }\n  }\n\n","sourceOld":"  public void generate(IndexReader reader) throws IOException {\r\n    TermEnum enumerator = reader.terms(prefix);\r\n    TermDocs termDocs = reader.termDocs();\r\n\r\n    try {\r\n\r\n      String prefixText = prefix.text();\r\n      String prefixField = prefix.field();\r\n      do {\r\n        Term term = enumerator.term();\r\n        if (term != null &&\r\n            term.text().startsWith(prefixText) &&\r\n            term.field() == prefixField)\r\n        {\r\n          termDocs.seek(term);\r\n          while (termDocs.next()) {\r\n            handleDoc(termDocs.doc());\r\n          }\r\n        } else {\r\n          break;\r\n        }\r\n      } while (enumerator.next());\r\n    } finally {\r\n      termDocs.close();\r\n      enumerator.close();\r\n    }\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/PrefixGenerator[PrefixFilter]#generate(IndexReader).mjava","pathOld":"src/java/org/apache/solr/search/PrefixGenerator[PrefixFilter]#generate(IndexReader).mjava","sourceNew":"  public void generate(IndexReader reader) throws IOException {\n    TermEnum enumerator = reader.terms(prefix);\n    TermDocs termDocs = reader.termDocs();\n\n    try {\n\n      String prefixText = prefix.text();\n      String prefixField = prefix.field();\n      do {\n        Term term = enumerator.term();\n        if (term != null &&\n            term.text().startsWith(prefixText) &&\n            term.field() == prefixField)\n        {\n          termDocs.seek(term);\n          while (termDocs.next()) {\n            handleDoc(termDocs.doc());\n          }\n        } else {\n          break;\n        }\n      } while (enumerator.next());\n    } finally {\n      termDocs.close();\n      enumerator.close();\n    }\n  }\n\n","sourceOld":"  public void generate(IndexReader reader) throws IOException {\n    TermEnum enumerator = reader.terms(prefix);\n    TermDocs termDocs = reader.termDocs();\n\n    try {\n\n      String prefixText = prefix.text();\n      String prefixField = prefix.field();\n      do {\n        Term term = enumerator.term();\n        if (term != null &&\n            term.text().startsWith(prefixText) &&\n            term.field() == prefixField)\n        {\n          termDocs.seek(term);\n          while (termDocs.next()) {\n            handleDoc(termDocs.doc());\n          }\n        } else {\n          break;\n        }\n      } while (enumerator.next());\n    } finally {\n      termDocs.close();\n      enumerator.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0c0e301b711811c6aaee90440cc1a7925fdd1a1e":["366fcca5de1fe02aa77c7aca163ce4c0dbf30112"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"366fcca5de1fe02aa77c7aca163ce4c0dbf30112":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["0c0e301b711811c6aaee90440cc1a7925fdd1a1e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0c0e301b711811c6aaee90440cc1a7925fdd1a1e":["ad94625fb8d088209f46650c8097196fec67f00c"],"366fcca5de1fe02aa77c7aca163ce4c0dbf30112":["0c0e301b711811c6aaee90440cc1a7925fdd1a1e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["366fcca5de1fe02aa77c7aca163ce4c0dbf30112"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}