{"path":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","commits":[{"id":"d20d5e40789b1c42f4f926e3174b271256c43657","date":1301641092,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b09c7419b92e982a901698cb401ce22ac35e4b04","date":1301668869,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"47203e13ac23625771dbc8c30dfdefd6064ebf10","date":1306531746,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","bugFix":["b365e1bb255226e730a37a0bb229582adb1bc16f"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n\n    endTrackingSearchers();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"288aa050f8188ece6bc90e9eaab901c23600631f","date":1306916543,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    closeDirectories();\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n  }\n\n","bugFix":null,"bugIntro":["e22ffe8cc51a892ae103df018822d7873e901c2a","e22ffe8cc51a892ae103df018822d7873e901c2a","e22ffe8cc51a892ae103df018822d7873e901c2a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37ff5956d30d0c66110ac0c84d8e32d46b67eff1","date":1306967829,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    closeDirectories();\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c715a0f99152be7566591f323c6c5a25725a1bcb","date":1307118449,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    closeDirectories();\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    closeDirectories();\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    closeDirectories();\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    closeDirectories();\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    closeDirectories();\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","pathOld":"solr/src/test-framework/org/apache/solr/SolrTestCaseJ4#deleteCore().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    closeDirectories();\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public static void deleteCore() throws Exception {\n    log.info(\"###deleteCore\" );\n    if (h != null) { h.close(); }\n    closeDirectories();\n    if (dataDir != null) {\n      String skip = System.getProperty(\"solr.test.leavedatadir\");\n      if (null != skip && 0 != skip.trim().length()) {\n        System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n      } else {\n        if (!recurseDelete(dataDir)) {\n          System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n        }\n      }\n    }\n\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n    \n    dataDir = null;\n    solrConfig = null;\n    h = null;\n    lrf = null;\n    configString = schemaString = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"288aa050f8188ece6bc90e9eaab901c23600631f":["47203e13ac23625771dbc8c30dfdefd6064ebf10"],"c26f00b574427b55127e869b935845554afde1fa":["288aa050f8188ece6bc90e9eaab901c23600631f","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b09c7419b92e982a901698cb401ce22ac35e4b04"],"d20d5e40789b1c42f4f926e3174b271256c43657":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c715a0f99152be7566591f323c6c5a25725a1bcb":["2e10cb22a8bdb44339e282925a29182bb2f3174d","288aa050f8188ece6bc90e9eaab901c23600631f"],"47203e13ac23625771dbc8c30dfdefd6064ebf10":["b09c7419b92e982a901698cb401ce22ac35e4b04"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["37ff5956d30d0c66110ac0c84d8e32d46b67eff1"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["d20d5e40789b1c42f4f926e3174b271256c43657","47203e13ac23625771dbc8c30dfdefd6064ebf10"],"37ff5956d30d0c66110ac0c84d8e32d46b67eff1":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","288aa050f8188ece6bc90e9eaab901c23600631f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b09c7419b92e982a901698cb401ce22ac35e4b04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["288aa050f8188ece6bc90e9eaab901c23600631f"],"45669a651c970812a680841b97a77cce06af559f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b09c7419b92e982a901698cb401ce22ac35e4b04"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["135621f3a0670a9394eb563224a3b76cc4dddc0f","47203e13ac23625771dbc8c30dfdefd6064ebf10"]},"commit2Childs":{"288aa050f8188ece6bc90e9eaab901c23600631f":["c26f00b574427b55127e869b935845554afde1fa","c715a0f99152be7566591f323c6c5a25725a1bcb","37ff5956d30d0c66110ac0c84d8e32d46b67eff1","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"d20d5e40789b1c42f4f926e3174b271256c43657":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"c715a0f99152be7566591f323c6c5a25725a1bcb":[],"47203e13ac23625771dbc8c30dfdefd6064ebf10":["288aa050f8188ece6bc90e9eaab901c23600631f","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"37ff5956d30d0c66110ac0c84d8e32d46b67eff1":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["37ff5956d30d0c66110ac0c84d8e32d46b67eff1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["135621f3a0670a9394eb563224a3b76cc4dddc0f","d20d5e40789b1c42f4f926e3174b271256c43657","b09c7419b92e982a901698cb401ce22ac35e4b04","45669a651c970812a680841b97a77cce06af559f"],"b09c7419b92e982a901698cb401ce22ac35e4b04":["135621f3a0670a9394eb563224a3b76cc4dddc0f","47203e13ac23625771dbc8c30dfdefd6064ebf10","45669a651c970812a680841b97a77cce06af559f"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"45669a651c970812a680841b97a77cce06af559f":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["c715a0f99152be7566591f323c6c5a25725a1bcb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c715a0f99152be7566591f323c6c5a25725a1bcb","a258fbb26824fd104ed795e5d9033d2d040049ee","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}