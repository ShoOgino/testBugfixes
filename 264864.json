{"path":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","sourceNew":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    return docWriter.getRAMUsed();\n  }\n\n","sourceOld":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    return docWriter.getRAMUsed();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44fcbde6fb2ac44ee3b45e013e54a42911e689ff","date":1292065621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","sourceNew":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    return docWriter.bytesUsed() + bufferedDeletes.bytesUsed();\n  }\n\n","sourceOld":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    return docWriter.getRAMUsed();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","sourceNew":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    return docWriter.bytesUsed() + bufferedDeletes.bytesUsed();\n  }\n\n","sourceOld":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    return docWriter.getRAMUsed();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","sourceNew":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    // nocommit\n    //return docWriter.bytesUsed() + bufferedDeletes.bytesUsed();\n    return 0;\n  }\n\n","sourceOld":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    return docWriter.getRAMUsed();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c19f985e36a65cc969e8e564fe337a0d41512075","date":1296330536,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","sourceNew":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    return docWriter.bytesUsed() + bufferedDeletesStream.bytesUsed();\n  }\n\n","sourceOld":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    return docWriter.bytesUsed() + bufferedDeletes.bytesUsed();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","sourceNew":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    return docWriter.bytesUsed() + bufferedDeletesStream.bytesUsed();\n  }\n\n","sourceOld":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    return docWriter.bytesUsed() + bufferedDeletes.bytesUsed();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","sourceNew":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    // nocommit\n    //return docWriter.bytesUsed() + bufferedDeletesStream.bytesUsed();\n    return 0;\n  }\n\n","sourceOld":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    // nocommit\n    //return docWriter.bytesUsed() + bufferedDeletes.bytesUsed();\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2ed1b9b7b46829fe3199afe9a8bc203f201b175","date":1301491807,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","sourceNew":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    return docWriter.flushControl.netBytes() + bufferedDeletesStream.bytesUsed();\n  }\n\n","sourceOld":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    // nocommit\n    //return docWriter.bytesUsed() + bufferedDeletesStream.bytesUsed();\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","sourceNew":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    return docWriter.flushControl.netBytes() + bufferedDeletesStream.bytesUsed();\n  }\n\n","sourceOld":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    return docWriter.bytesUsed() + bufferedDeletesStream.bytesUsed();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","sourceNew":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    return docWriter.flushControl.netBytes() + bufferedDeletesStream.bytesUsed();\n  }\n\n","sourceOld":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    return docWriter.bytesUsed() + bufferedDeletesStream.bytesUsed();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","sourceNew":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    return docWriter.flushControl.netBytes() + bufferedDeletesStream.bytesUsed();\n  }\n\n","sourceOld":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    return docWriter.bytesUsed() + bufferedDeletesStream.bytesUsed();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#ramSizeInBytes().mjava","sourceNew":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    return docWriter.flushControl.netBytes() + bufferedDeletesStream.bytesUsed();\n  }\n\n","sourceOld":"  /** Expert:  Return the total size of all index files currently cached in memory.\n   * Useful for size management with flushRamDocs()\n   */\n  public final long ramSizeInBytes() {\n    ensureOpen();\n    return docWriter.flushControl.netBytes() + bufferedDeletesStream.bytesUsed();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["c19f985e36a65cc969e8e564fe337a0d41512075","d2ed1b9b7b46829fe3199afe9a8bc203f201b175"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["9454a6510e2db155fb01faa5c049b06ece95fab9","44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"c19f985e36a65cc969e8e564fe337a0d41512075":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"d2ed1b9b7b46829fe3199afe9a8bc203f201b175":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a3776dccca01c11e7046323cfad46a3b4a471233":["c19f985e36a65cc969e8e564fe337a0d41512075","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","c19f985e36a65cc969e8e564fe337a0d41512075"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c19f985e36a65cc969e8e564fe337a0d41512075"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c19f985e36a65cc969e8e564fe337a0d41512075"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","135621f3a0670a9394eb563224a3b76cc4dddc0f","a3776dccca01c11e7046323cfad46a3b4a471233"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c19f985e36a65cc969e8e564fe337a0d41512075":["b3e06be49006ecac364d39d12b9c9f74882f9b9f","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"d2ed1b9b7b46829fe3199afe9a8bc203f201b175":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["d2ed1b9b7b46829fe3199afe9a8bc203f201b175"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}