{"path":"backwards/src/java/org/apache/lucene/index/IndexWriter#IndexWriter(Directory,Analyzer,boolean,IndexDeletionPolicy,MaxFieldLength).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/index/IndexWriter#IndexWriter(Directory,Analyzer,boolean,IndexDeletionPolicy,MaxFieldLength).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Expert: constructs an IndexWriter with a custom {@link\n   * IndexDeletionPolicy}, for the index in <code>d</code>.\n   * Text will be analyzed with <code>a</code>.  If\n   * <code>create</code> is true, then a new, empty index\n   * will be created in <code>d</code>, replacing the index\n   * already there, if any.\n   *\n   * @param d the index directory\n   * @param a the analyzer to use\n   * @param create <code>true</code> to create the index or overwrite\n   *  the existing one; <code>false</code> to append to the existing\n   *  index\n   * @param deletionPolicy see <a href=\"#deletionPolicy\">above</a>\n   * @param mfl {@link org.apache.lucene.index.IndexWriter.MaxFieldLength}, whether or not to limit field lengths.  Value is in number of terms/tokens\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws LockObtainFailedException if another writer\n   *  has this index open (<code>write.lock</code> could not\n   *  be obtained)\n   * @throws IOException if the directory cannot be read/written to, or\n   *  if it does not exist and <code>create</code> is\n   *  <code>false</code> or if there is any other low-level\n   *  IO error\n   */\n  public IndexWriter(Directory d, Analyzer a, boolean create, IndexDeletionPolicy deletionPolicy, MaxFieldLength mfl)\n       throws CorruptIndexException, LockObtainFailedException, IOException {\n    init(d, a, create, deletionPolicy, mfl.getLimit(), null, null);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/IndexWriter#IndexWriter(Directory,Analyzer,boolean,IndexDeletionPolicy,MaxFieldLength).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/IndexWriter#IndexWriter(Directory,Analyzer,boolean,IndexDeletionPolicy,MaxFieldLength).mjava","sourceNew":"  /**\n   * Expert: constructs an IndexWriter with a custom {@link\n   * IndexDeletionPolicy}, for the index in <code>d</code>.\n   * Text will be analyzed with <code>a</code>.  If\n   * <code>create</code> is true, then a new, empty index\n   * will be created in <code>d</code>, replacing the index\n   * already there, if any.\n   *\n   * @param d the index directory\n   * @param a the analyzer to use\n   * @param create <code>true</code> to create the index or overwrite\n   *  the existing one; <code>false</code> to append to the existing\n   *  index\n   * @param deletionPolicy see <a href=\"#deletionPolicy\">above</a>\n   * @param mfl {@link org.apache.lucene.index.IndexWriter.MaxFieldLength}, whether or not to limit field lengths.  Value is in number of terms/tokens\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws LockObtainFailedException if another writer\n   *  has this index open (<code>write.lock</code> could not\n   *  be obtained)\n   * @throws IOException if the directory cannot be read/written to, or\n   *  if it does not exist and <code>create</code> is\n   *  <code>false</code> or if there is any other low-level\n   *  IO error\n   */\n  public IndexWriter(Directory d, Analyzer a, boolean create, IndexDeletionPolicy deletionPolicy, MaxFieldLength mfl)\n       throws CorruptIndexException, LockObtainFailedException, IOException {\n    init(d, a, create, deletionPolicy, mfl.getLimit(), null, null);\n  }\n\n","sourceOld":"  /**\n   * Expert: constructs an IndexWriter with a custom {@link\n   * IndexDeletionPolicy}, for the index in <code>d</code>.\n   * Text will be analyzed with <code>a</code>.  If\n   * <code>create</code> is true, then a new, empty index\n   * will be created in <code>d</code>, replacing the index\n   * already there, if any.\n   *\n   * @param d the index directory\n   * @param a the analyzer to use\n   * @param create <code>true</code> to create the index or overwrite\n   *  the existing one; <code>false</code> to append to the existing\n   *  index\n   * @param deletionPolicy see <a href=\"#deletionPolicy\">above</a>\n   * @param mfl {@link org.apache.lucene.index.IndexWriter.MaxFieldLength}, whether or not to limit field lengths.  Value is in number of terms/tokens\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws LockObtainFailedException if another writer\n   *  has this index open (<code>write.lock</code> could not\n   *  be obtained)\n   * @throws IOException if the directory cannot be read/written to, or\n   *  if it does not exist and <code>create</code> is\n   *  <code>false</code> or if there is any other low-level\n   *  IO error\n   */\n  public IndexWriter(Directory d, Analyzer a, boolean create, IndexDeletionPolicy deletionPolicy, MaxFieldLength mfl)\n       throws CorruptIndexException, LockObtainFailedException, IOException {\n    init(d, a, create, deletionPolicy, mfl.getLimit(), null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}