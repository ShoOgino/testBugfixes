{"path":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer#testTokenStream().mjava","commits":[{"id":"45b06c3ff8a4d9d3d751dd311e51c59303c2719c","date":1250600126,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer#testTokenStream().mjava","pathOld":"/dev/null","sourceNew":"  public void testTokenStream() throws Exception {\n    Analyzer analyzer = new CJKAnalyzer();\n    TokenStream ts = analyzer.tokenStream(\"dummy\", new StringReader(\"\\u4e00\\u4e01\\u4e02\"));\n    TermAttribute termAtt = (TermAttribute) ts.getAttribute(TermAttribute.class);\n    assertTrue(ts.incrementToken());\n    assertEquals(\"\\u4e00\\u4e01\", termAtt.term());\n    assertTrue(ts.incrementToken());\n    assertEquals(\"\\u4e01\\u4e02\", termAtt.term());\n    assertFalse(ts.incrementToken());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["e64a71406348a5942a2166256238aff8313d0914"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8d78f014fded44fbde905f4f84cdc21907b371e8","date":1254383623,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer#testTokenStream().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer#testTokenStream().mjava","sourceNew":"  public void testTokenStream() throws Exception {\n    Analyzer analyzer = new CJKAnalyzer();\n    TokenStream ts = analyzer.tokenStream(\"dummy\", new StringReader(\"\\u4e00\\u4e01\\u4e02\"));\n    TermAttribute termAtt = ts.getAttribute(TermAttribute.class);\n    assertTrue(ts.incrementToken());\n    assertEquals(\"\\u4e00\\u4e01\", termAtt.term());\n    assertTrue(ts.incrementToken());\n    assertEquals(\"\\u4e01\\u4e02\", termAtt.term());\n    assertFalse(ts.incrementToken());\n  }\n\n","sourceOld":"  public void testTokenStream() throws Exception {\n    Analyzer analyzer = new CJKAnalyzer();\n    TokenStream ts = analyzer.tokenStream(\"dummy\", new StringReader(\"\\u4e00\\u4e01\\u4e02\"));\n    TermAttribute termAtt = (TermAttribute) ts.getAttribute(TermAttribute.class);\n    assertTrue(ts.incrementToken());\n    assertEquals(\"\\u4e00\\u4e01\", termAtt.term());\n    assertTrue(ts.incrementToken());\n    assertEquals(\"\\u4e01\\u4e02\", termAtt.term());\n    assertFalse(ts.incrementToken());\n  }\n\n","bugFix":null,"bugIntro":["e64a71406348a5942a2166256238aff8313d0914"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer#testTokenStream().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer#testTokenStream().mjava","sourceNew":"  public void testTokenStream() throws Exception {\n    Analyzer analyzer = new CJKAnalyzer(Version.LUCENE_CURRENT);\n    TokenStream ts = analyzer.tokenStream(\"dummy\", new StringReader(\"\\u4e00\\u4e01\\u4e02\"));\n    TermAttribute termAtt = ts.getAttribute(TermAttribute.class);\n    assertTrue(ts.incrementToken());\n    assertEquals(\"\\u4e00\\u4e01\", termAtt.term());\n    assertTrue(ts.incrementToken());\n    assertEquals(\"\\u4e01\\u4e02\", termAtt.term());\n    assertFalse(ts.incrementToken());\n  }\n\n","sourceOld":"  public void testTokenStream() throws Exception {\n    Analyzer analyzer = new CJKAnalyzer();\n    TokenStream ts = analyzer.tokenStream(\"dummy\", new StringReader(\"\\u4e00\\u4e01\\u4e02\"));\n    TermAttribute termAtt = ts.getAttribute(TermAttribute.class);\n    assertTrue(ts.incrementToken());\n    assertEquals(\"\\u4e00\\u4e01\", termAtt.term());\n    assertTrue(ts.incrementToken());\n    assertEquals(\"\\u4e01\\u4e02\", termAtt.term());\n    assertFalse(ts.incrementToken());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e64a71406348a5942a2166256238aff8313d0914","date":1263756357,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer#testTokenStream().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer#testTokenStream().mjava","sourceNew":"  public void testTokenStream() throws Exception {\n    Analyzer analyzer = new CJKAnalyzer(Version.LUCENE_CURRENT);\n    assertAnalyzesTo(analyzer, \"\\u4e00\\u4e01\\u4e02\", \n        new String[] { \"\\u4e00\\u4e01\", \"\\u4e01\\u4e02\"});\n  }\n\n","sourceOld":"  public void testTokenStream() throws Exception {\n    Analyzer analyzer = new CJKAnalyzer(Version.LUCENE_CURRENT);\n    TokenStream ts = analyzer.tokenStream(\"dummy\", new StringReader(\"\\u4e00\\u4e01\\u4e02\"));\n    TermAttribute termAtt = ts.getAttribute(TermAttribute.class);\n    assertTrue(ts.incrementToken());\n    assertEquals(\"\\u4e00\\u4e01\", termAtt.term());\n    assertTrue(ts.incrementToken());\n    assertEquals(\"\\u4e01\\u4e02\", termAtt.term());\n    assertFalse(ts.incrementToken());\n  }\n\n","bugFix":["8d78f014fded44fbde905f4f84cdc21907b371e8","45b06c3ff8a4d9d3d751dd311e51c59303c2719c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer#testTokenStream().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer#testTokenStream().mjava","sourceNew":"  public void testTokenStream() throws Exception {\n    Analyzer analyzer = new CJKAnalyzer(TEST_VERSION_CURRENT);\n    assertAnalyzesTo(analyzer, \"\\u4e00\\u4e01\\u4e02\", \n        new String[] { \"\\u4e00\\u4e01\", \"\\u4e01\\u4e02\"});\n  }\n\n","sourceOld":"  public void testTokenStream() throws Exception {\n    Analyzer analyzer = new CJKAnalyzer(Version.LUCENE_CURRENT);\n    assertAnalyzesTo(analyzer, \"\\u4e00\\u4e01\\u4e02\", \n        new String[] { \"\\u4e00\\u4e01\", \"\\u4e01\\u4e02\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer#testTokenStream().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer#testTokenStream().mjava","sourceNew":"  public void testTokenStream() throws Exception {\n    Analyzer analyzer = new CJKAnalyzer(TEST_VERSION_CURRENT);\n    assertAnalyzesTo(analyzer, \"\\u4e00\\u4e01\\u4e02\", \n        new String[] { \"\\u4e00\\u4e01\", \"\\u4e01\\u4e02\"});\n  }\n\n","sourceOld":"  public void testTokenStream() throws Exception {\n    Analyzer analyzer = new CJKAnalyzer(TEST_VERSION_CURRENT);\n    assertAnalyzesTo(analyzer, \"\\u4e00\\u4e01\\u4e02\", \n        new String[] { \"\\u4e00\\u4e01\", \"\\u4e01\\u4e02\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e64a71406348a5942a2166256238aff8313d0914":["ba1116b3450a9c1642c89445d131b37344055245"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8d78f014fded44fbde905f4f84cdc21907b371e8":["45b06c3ff8a4d9d3d751dd311e51c59303c2719c"],"45b06c3ff8a4d9d3d751dd311e51c59303c2719c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["e64a71406348a5942a2166256238aff8313d0914"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"ba1116b3450a9c1642c89445d131b37344055245":["8d78f014fded44fbde905f4f84cdc21907b371e8"]},"commit2Childs":{"e64a71406348a5942a2166256238aff8313d0914":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["45b06c3ff8a4d9d3d751dd311e51c59303c2719c"],"8d78f014fded44fbde905f4f84cdc21907b371e8":["ba1116b3450a9c1642c89445d131b37344055245"],"45b06c3ff8a4d9d3d751dd311e51c59303c2719c":["8d78f014fded44fbde905f4f84cdc21907b371e8"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ba1116b3450a9c1642c89445d131b37344055245":["e64a71406348a5942a2166256238aff8313d0914"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}