{"path":"solr/core/src/java/org/apache/solr/update/processor/DistributedZkUpdateProcessor#zkCheck().mjava","commits":[{"id":"9d70e774cb25c8a8d2c3e5e84200f235f9168d87","date":1553016391,"type":1,"author":"Bar Rotstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DistributedZkUpdateProcessor#zkCheck().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#zkCheck().mjava","sourceNew":"  private void zkCheck() {\n\n    // Streaming updates can delay shutdown and cause big update reorderings (new streams can't be\n    // initiated, but existing streams carry on).  This is why we check if the CC is shutdown.\n    // See SOLR-8203 and loop HdfsChaosMonkeyNothingIsSafeTest (and check for inconsistent shards) to test.\n    if (req.getCore().getCoreContainer().isShutDown()) {\n      throw new SolrException(SolrException.ErrorCode.SERVICE_UNAVAILABLE, \"CoreContainer is shutting down.\");\n    }\n\n    if ((updateCommand.getFlags() & (UpdateCommand.REPLAY | UpdateCommand.PEER_SYNC)) != 0) {\n      // for log reply or peer sync, we don't need to be connected to ZK\n      return;\n    }\n\n    if (!zkController.getZkClient().getConnectionManager().isLikelyExpired()) {\n      return;\n    }\n\n    throw new SolrException(SolrException.ErrorCode.SERVICE_UNAVAILABLE, \"Cannot talk to ZooKeeper - Updates are disabled.\");\n  }\n\n","sourceOld":"  private void zkCheck() {\n\n    // Streaming updates can delay shutdown and cause big update reorderings (new streams can't be\n    // initiated, but existing streams carry on).  This is why we check if the CC is shutdown.\n    // See SOLR-8203 and loop HdfsChaosMonkeyNothingIsSafeTest (and check for inconsistent shards) to test.\n    if (req.getCore().getCoreContainer().isShutDown()) {\n      throw new SolrException(ErrorCode.SERVICE_UNAVAILABLE, \"CoreContainer is shutting down.\");\n    }\n\n    if ((updateCommand.getFlags() & (UpdateCommand.REPLAY | UpdateCommand.PEER_SYNC)) != 0) {\n      // for log reply or peer sync, we don't need to be connected to ZK\n      return;\n    }\n\n    if (!zkController.getZkClient().getConnectionManager().isLikelyExpired()) {\n      return;\n    }\n    \n    throw new SolrException(ErrorCode.SERVICE_UNAVAILABLE, \"Cannot talk to ZooKeeper - Updates are disabled.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d70e774cb25c8a8d2c3e5e84200f235f9168d87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9d70e774cb25c8a8d2c3e5e84200f235f9168d87"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9d70e774cb25c8a8d2c3e5e84200f235f9168d87"],"9d70e774cb25c8a8d2c3e5e84200f235f9168d87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}