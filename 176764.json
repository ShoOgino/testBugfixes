{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#doDeltaImport(SolrWriter,RequestParams).mjava","commits":[{"id":"db6dfac30d1553e9356900c2b76b768139483a62","date":1230619368,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#doDeltaImport(SolrWriter,RequestParams).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#doDeltaImport(SolrWriter,RequestParams,Map[String,String]).mjava","sourceNew":"  public void doDeltaImport(SolrWriter writer, RequestParams requestParams) {\n    LOG.info(\"Starting Delta Import\");\n    setStatus(Status.RUNNING_DELTA_DUMP);\n\n    try {\n      if (requestParams.commit) {\n        setIndexStartTime(new Date());\n      }\n      docBuilder = new DocBuilder(this, writer, requestParams);\n      docBuilder.execute();\n      if (!requestParams.debug)\n        cumulativeStatistics.add(docBuilder.importStatistics);\n    } catch (Throwable t) {\n      LOG.error(\"Delta Import Failed\", t);\n      docBuilder.rollback();\n    } finally {\n      setStatus(Status.IDLE);\n      config.clearCaches();\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","sourceOld":"  public void doDeltaImport(SolrWriter writer, RequestParams requestParams,\n                            Map<String, String> variables) {\n    LOG.info(\"Starting Delta Import\");\n    setStatus(Status.RUNNING_DELTA_DUMP);\n\n    try {\n      if (requestParams.commit) {\n        setIndexStartTime(new Date());\n      }\n      docBuilder = new DocBuilder(this, writer, requestParams, variables);\n      docBuilder.execute(config.documents.get(0).name);\n      if (!requestParams.debug)\n        cumulativeStatistics.add(docBuilder.importStatistics);\n    } catch (Throwable t) {\n      LOG.error(\"Delta Import Failed\", t);\n      docBuilder.rollback();\n    } finally {\n      setStatus(Status.IDLE);\n      config.clearCaches();\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5e687a2949d54b73aea9ef33af1b52803515004e","date":1235571456,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#doDeltaImport(SolrWriter,RequestParams).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#doDeltaImport(SolrWriter,RequestParams).mjava","sourceNew":"  public void doDeltaImport(SolrWriter writer, RequestParams requestParams) {\n    LOG.info(\"Starting Delta Import\");\n    setStatus(Status.RUNNING_DELTA_DUMP);\n\n    try {\n      setIndexStartTime(new Date());\n      docBuilder = new DocBuilder(this, writer, requestParams);\n      docBuilder.execute();\n      if (!requestParams.debug)\n        cumulativeStatistics.add(docBuilder.importStatistics);\n    } catch (Throwable t) {\n      LOG.error(\"Delta Import Failed\", t);\n      docBuilder.rollback();\n    } finally {\n      setStatus(Status.IDLE);\n      config.clearCaches();\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","sourceOld":"  public void doDeltaImport(SolrWriter writer, RequestParams requestParams) {\n    LOG.info(\"Starting Delta Import\");\n    setStatus(Status.RUNNING_DELTA_DUMP);\n\n    try {\n      if (requestParams.commit) {\n        setIndexStartTime(new Date());\n      }\n      docBuilder = new DocBuilder(this, writer, requestParams);\n      docBuilder.execute();\n      if (!requestParams.debug)\n        cumulativeStatistics.add(docBuilder.importStatistics);\n    } catch (Throwable t) {\n      LOG.error(\"Delta Import Failed\", t);\n      docBuilder.rollback();\n    } finally {\n      setStatus(Status.IDLE);\n      config.clearCaches();\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#doDeltaImport(SolrWriter,RequestParams).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImporter#doDeltaImport(SolrWriter,RequestParams).mjava","sourceNew":"  public void doDeltaImport(SolrWriter writer, RequestParams requestParams) {\n    LOG.info(\"Starting Delta Import\");\n    setStatus(Status.RUNNING_DELTA_DUMP);\n\n    try {\n      setIndexStartTime(new Date());\n      docBuilder = new DocBuilder(this, writer, requestParams);\n      docBuilder.execute();\n      if (!requestParams.debug)\n        cumulativeStatistics.add(docBuilder.importStatistics);\n    } catch (Throwable t) {\n      LOG.error(\"Delta Import Failed\", t);\n      docBuilder.rollback();\n    } finally {\n      setStatus(Status.IDLE);\n      config.clearCaches();\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","sourceOld":"  public void doDeltaImport(SolrWriter writer, RequestParams requestParams) {\n    LOG.info(\"Starting Delta Import\");\n    setStatus(Status.RUNNING_DELTA_DUMP);\n\n    try {\n      setIndexStartTime(new Date());\n      docBuilder = new DocBuilder(this, writer, requestParams);\n      docBuilder.execute();\n      if (!requestParams.debug)\n        cumulativeStatistics.add(docBuilder.importStatistics);\n    } catch (Throwable t) {\n      LOG.error(\"Delta Import Failed\", t);\n      docBuilder.rollback();\n    } finally {\n      setStatus(Status.IDLE);\n      config.clearCaches();\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5e687a2949d54b73aea9ef33af1b52803515004e":["db6dfac30d1553e9356900c2b76b768139483a62"],"ad94625fb8d088209f46650c8097196fec67f00c":["5e687a2949d54b73aea9ef33af1b52803515004e"],"db6dfac30d1553e9356900c2b76b768139483a62":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["db6dfac30d1553e9356900c2b76b768139483a62"],"5e687a2949d54b73aea9ef33af1b52803515004e":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"db6dfac30d1553e9356900c2b76b768139483a62":["5e687a2949d54b73aea9ef33af1b52803515004e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}