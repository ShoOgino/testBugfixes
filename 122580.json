{"path":"backwards/src/test/org/apache/lucene/TestSnapshotDeletionPolicy#readFile(Directory,String).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/TestSnapshotDeletionPolicy#readFile(Directory,String).mjava","pathOld":"/dev/null","sourceNew":"  private void readFile(Directory dir, String name) throws Exception {\n    IndexInput input = dir.openInput(name);\n    try {\n      long size = dir.fileLength(name);\n      long bytesLeft = size;\n      while (bytesLeft > 0) {\n        final int numToRead;\n        if (bytesLeft < buffer.length)\n          numToRead = (int) bytesLeft;\n        else\n          numToRead = buffer.length;\n        input.readBytes(buffer, 0, numToRead, false);\n        bytesLeft -= numToRead;\n      }\n      // Don't do this in your real backups!  This is just\n      // to force a backup to take a somewhat long time, to\n      // make sure we are exercising the fact that the\n      // IndexWriter should not delete this file even when I\n      // take my time reading it.\n      Thread.sleep(1);\n    } finally {\n      input.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/TestSnapshotDeletionPolicy#readFile(Directory,String).mjava","pathOld":"backwards/src/test/org/apache/lucene/TestSnapshotDeletionPolicy#readFile(Directory,String).mjava","sourceNew":"  private void readFile(Directory dir, String name) throws Exception {\n    IndexInput input = dir.openInput(name);\n    try {\n      long size = dir.fileLength(name);\n      long bytesLeft = size;\n      while (bytesLeft > 0) {\n        final int numToRead;\n        if (bytesLeft < buffer.length)\n          numToRead = (int) bytesLeft;\n        else\n          numToRead = buffer.length;\n        input.readBytes(buffer, 0, numToRead, false);\n        bytesLeft -= numToRead;\n      }\n      // Don't do this in your real backups!  This is just\n      // to force a backup to take a somewhat long time, to\n      // make sure we are exercising the fact that the\n      // IndexWriter should not delete this file even when I\n      // take my time reading it.\n      Thread.sleep(1);\n    } finally {\n      input.close();\n    }\n  }\n\n","sourceOld":"  private void readFile(Directory dir, String name) throws Exception {\n    IndexInput input = dir.openInput(name);\n    try {\n      long size = dir.fileLength(name);\n      long bytesLeft = size;\n      while (bytesLeft > 0) {\n        final int numToRead;\n        if (bytesLeft < buffer.length)\n          numToRead = (int) bytesLeft;\n        else\n          numToRead = buffer.length;\n        input.readBytes(buffer, 0, numToRead, false);\n        bytesLeft -= numToRead;\n      }\n      // Don't do this in your real backups!  This is just\n      // to force a backup to take a somewhat long time, to\n      // make sure we are exercising the fact that the\n      // IndexWriter should not delete this file even when I\n      // take my time reading it.\n      Thread.sleep(1);\n    } finally {\n      input.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}