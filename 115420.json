{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2#testCompositePk_FullImport_MT().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2#testCompositePk_FullImport_MT().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2#testCompositePk_FullImport_MT().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testCompositePk_FullImport_MT() throws Exception {\n    List parentRow = new ArrayList();\n    parentRow.add(createMap(\"id\", \"1\"));\n    parentRow.add(createMap(\"id\", \"2\"));\n    MockDataSource.setIterator(\"select * from x\", parentRow.iterator());\n\n    List childRow = new ArrayList();\n    childRow.add(createMap(\"desc\", \"hello\"));\n\n    MockDataSource.setIterator(\"select * from y where y.A=1\", childRow.iterator());\n    MockDataSource.setIterator(\"select * from y where y.A=2\", childRow.iterator());\n\n    runFullImport(dataConfig_2threads);\n\n    assertQ(req(\"id:1\"), \"//*[@numFound='1']\");\n    assertQ(req(\"id:2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"desc:hello\"), \"//*[@numFound='2']\");\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testCompositePk_FullImport_MT() throws Exception {\n    List parentRow = new ArrayList();\n    parentRow.add(createMap(\"id\", \"1\"));\n    parentRow.add(createMap(\"id\", \"2\"));\n    MockDataSource.setIterator(\"select * from x\", parentRow.iterator());\n\n    List childRow = new ArrayList();\n    childRow.add(createMap(\"desc\", \"hello\"));\n\n    MockDataSource.setIterator(\"select * from y where y.A=1\", childRow.iterator());\n    MockDataSource.setIterator(\"select * from y where y.A=2\", childRow.iterator());\n\n    runFullImport(dataConfig_2threads);\n\n    assertQ(req(\"id:1\"), \"//*[@numFound='1']\");\n    assertQ(req(\"id:2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"desc:hello\"), \"//*[@numFound='2']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2#testCompositePk_FullImport_MT().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2#testCompositePk_FullImport_MT().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testCompositePk_FullImport_MT() throws Exception {\n    List parentRow = new ArrayList();\n    parentRow.add(createMap(\"id\", \"1\"));\n    parentRow.add(createMap(\"id\", \"2\"));\n    MockDataSource.setIterator(\"select * from x\", parentRow.iterator());\n\n    List childRow = new ArrayList();\n    childRow.add(createMap(\"desc\", \"hello\"));\n\n    MockDataSource.setIterator(\"select * from y where y.A=1\", childRow.iterator());\n    MockDataSource.setIterator(\"select * from y where y.A=2\", childRow.iterator());\n\n    runFullImport(dataConfig_2threads);\n\n    assertQ(req(\"id:1\"), \"//*[@numFound='1']\");\n    assertQ(req(\"id:2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"desc:hello\"), \"//*[@numFound='2']\");\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testCompositePk_FullImport_MT() throws Exception {\n    List parentRow = new ArrayList();\n    parentRow.add(createMap(\"id\", \"1\"));\n    parentRow.add(createMap(\"id\", \"2\"));\n    MockDataSource.setIterator(\"select * from x\", parentRow.iterator());\n\n    List childRow = new ArrayList();\n    childRow.add(createMap(\"desc\", \"hello\"));\n\n    MockDataSource.setIterator(\"select * from y where y.A=1\", childRow.iterator());\n    MockDataSource.setIterator(\"select * from y where y.A=2\", childRow.iterator());\n\n    runFullImport(dataConfig_2threads);\n\n    assertQ(req(\"id:1\"), \"//*[@numFound='1']\");\n    assertQ(req(\"id:2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"desc:hello\"), \"//*[@numFound='2']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b84e23a1c994ea309896dd9424563e0092f3607","date":1332774278,"type":4,"author":"James Dyer","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestSqlEntityProcessor2#testCompositePk_FullImport_MT().mjava","sourceNew":null,"sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testCompositePk_FullImport_MT() throws Exception {\n    List parentRow = new ArrayList();\n    parentRow.add(createMap(\"id\", \"1\"));\n    parentRow.add(createMap(\"id\", \"2\"));\n    MockDataSource.setIterator(\"select * from x\", parentRow.iterator());\n\n    List childRow = new ArrayList();\n    childRow.add(createMap(\"desc\", \"hello\"));\n\n    MockDataSource.setIterator(\"select * from y where y.A=1\", childRow.iterator());\n    MockDataSource.setIterator(\"select * from y where y.A=2\", childRow.iterator());\n\n    runFullImport(dataConfig_2threads);\n\n    assertQ(req(\"id:1\"), \"//*[@numFound='1']\");\n    assertQ(req(\"id:2\"), \"//*[@numFound='1']\");\n    assertQ(req(\"desc:hello\"), \"//*[@numFound='2']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b84e23a1c994ea309896dd9424563e0092f3607":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4b84e23a1c994ea309896dd9424563e0092f3607"]},"commit2Childs":{"4b84e23a1c994ea309896dd9424563e0092f3607":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["4b84e23a1c994ea309896dd9424563e0092f3607"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}