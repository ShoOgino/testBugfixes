{"path":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[],int[]).mjava","commits":[{"id":"2aeefba8262036d422d639e48c49d51316bea138","date":1545148224,"type":1,"author":"iverase","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[],int[]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[]).mjava","sourceNew":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t, int[] scratchTriangle) {\n    // decode indexed triangle\n    LatLonShape.decodeTriangle(t, scratchTriangle);\n\n    int aY = scratchTriangle[0];\n    int aX = scratchTriangle[1];\n    int bY = scratchTriangle[2];\n    int bX = scratchTriangle[3];\n    int cY = scratchTriangle[4];\n    int cX = scratchTriangle[5];\n\n    if (queryRelation == LatLonShape.QueryRelation.WITHIN) {\n      return rectangle2D.containsTriangle(aX, aY, bX, bY, cX, cY);\n    }\n    return rectangle2D.intersectsTriangle(aX, aY, bX, bY, cX, cY);\n  }\n\n","sourceOld":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t) {\n    // decode indexed triangle\n    long a = NumericUtils.sortableBytesToLong(t, 4 * LatLonShape.BYTES);\n    long b = NumericUtils.sortableBytesToLong(t, 5 * LatLonShape.BYTES);\n    long c = NumericUtils.sortableBytesToLong(t, 6 * LatLonShape.BYTES);\n\n    int aX = (int)((a >>> 32) & 0x00000000FFFFFFFFL);\n    int bX = (int)((b >>> 32) & 0x00000000FFFFFFFFL);\n    int cX = (int)((c >>> 32) & 0x00000000FFFFFFFFL);\n    int aY = (int)(a & 0x00000000FFFFFFFFL);\n    int bY = (int)(b & 0x00000000FFFFFFFFL);\n    int cY = (int)(c & 0x00000000FFFFFFFFL);\n\n    if (queryRelation == LatLonShape.QueryRelation.WITHIN) {\n      return rectangle2D.containsTriangle(aX, aY, bX, bY, cX, cY);\n    }\n    return rectangle2D.intersectsTriangle(aX, aY, bX, bY, cX, cY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5e8251ad51618827e557dd369f16921a666914b5","date":1548082828,"type":5,"author":"iverase","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[],int[],LatLonShape.QueryRelation).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[],int[]).mjava","sourceNew":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t, int[] scratchTriangle, LatLonShape.QueryRelation queryRelation) {\n    // decode indexed triangle\n    LatLonShape.decodeTriangle(t, scratchTriangle);\n\n    int aY = scratchTriangle[0];\n    int aX = scratchTriangle[1];\n    int bY = scratchTriangle[2];\n    int bX = scratchTriangle[3];\n    int cY = scratchTriangle[4];\n    int cX = scratchTriangle[5];\n\n    if (queryRelation == LatLonShape.QueryRelation.WITHIN) {\n      return rectangle2D.containsTriangle(aX, aY, bX, bY, cX, cY);\n    }\n    return rectangle2D.intersectsTriangle(aX, aY, bX, bY, cX, cY);\n  }\n\n","sourceOld":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t, int[] scratchTriangle) {\n    // decode indexed triangle\n    LatLonShape.decodeTriangle(t, scratchTriangle);\n\n    int aY = scratchTriangle[0];\n    int aX = scratchTriangle[1];\n    int bY = scratchTriangle[2];\n    int bX = scratchTriangle[3];\n    int cY = scratchTriangle[4];\n    int cX = scratchTriangle[5];\n\n    if (queryRelation == LatLonShape.QueryRelation.WITHIN) {\n      return rectangle2D.containsTriangle(aX, aY, bX, bY, cX, cY);\n    }\n    return rectangle2D.intersectsTriangle(aX, aY, bX, bY, cX, cY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2682a1cd25864ccdc1b44bf047bd08700f28ba06","date":1548321910,"type":5,"author":"Tommaso Teofili","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[],int[],LatLonShape.QueryRelation).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryMatches(byte[],int[]).mjava","sourceNew":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t, int[] scratchTriangle, LatLonShape.QueryRelation queryRelation) {\n    // decode indexed triangle\n    LatLonShape.decodeTriangle(t, scratchTriangle);\n\n    int aY = scratchTriangle[0];\n    int aX = scratchTriangle[1];\n    int bY = scratchTriangle[2];\n    int bX = scratchTriangle[3];\n    int cY = scratchTriangle[4];\n    int cX = scratchTriangle[5];\n\n    if (queryRelation == LatLonShape.QueryRelation.WITHIN) {\n      return rectangle2D.containsTriangle(aX, aY, bX, bY, cX, cY);\n    }\n    return rectangle2D.intersectsTriangle(aX, aY, bX, bY, cX, cY);\n  }\n\n","sourceOld":"  /** returns true if the query matches the encoded triangle */\n  @Override\n  protected boolean queryMatches(byte[] t, int[] scratchTriangle) {\n    // decode indexed triangle\n    LatLonShape.decodeTriangle(t, scratchTriangle);\n\n    int aY = scratchTriangle[0];\n    int aX = scratchTriangle[1];\n    int bY = scratchTriangle[2];\n    int bX = scratchTriangle[3];\n    int cY = scratchTriangle[4];\n    int cX = scratchTriangle[5];\n\n    if (queryRelation == LatLonShape.QueryRelation.WITHIN) {\n      return rectangle2D.containsTriangle(aX, aY, bX, bY, cX, cY);\n    }\n    return rectangle2D.intersectsTriangle(aX, aY, bX, bY, cX, cY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2aeefba8262036d422d639e48c49d51316bea138":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5e8251ad51618827e557dd369f16921a666914b5":["2aeefba8262036d422d639e48c49d51316bea138"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5e8251ad51618827e557dd369f16921a666914b5"],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":["2aeefba8262036d422d639e48c49d51316bea138","5e8251ad51618827e557dd369f16921a666914b5"]},"commit2Childs":{"2aeefba8262036d422d639e48c49d51316bea138":["5e8251ad51618827e557dd369f16921a666914b5","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2aeefba8262036d422d639e48c49d51316bea138"],"5e8251ad51618827e557dd369f16921a666914b5":["cd5edd1f2b162a5cfa08efd17851a07373a96817","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}