{"path":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon#testPacMan().mjava","commits":[{"id":"86979a945891cffd49f9634fac5d16ebfe47c541","date":1459704804,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon#testPacMan().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestPolygon#testPacMan().mjava","sourceNew":"  public void testPacMan() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    Polygon polygon = new Polygon(py, px);\n    assertTrue(polygon.crosses(yMin, yMax, xMin, xMax));\n    assertFalse(polygon.contains(yMin, yMax, xMin, xMax));\n  }\n\n","sourceOld":"  public void testPacMan() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    Polygon polygon = new Polygon(py, px);\n    assertTrue(polygon.crosses(yMin, yMax, xMin, xMax));\n    assertFalse(polygon.contains(yMin, yMax, xMin, xMax));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"82235a501cff963da53cb98d86009e33e15cf47f","date":1459788663,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon#testPacMan().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon#testPacMan().mjava","sourceNew":"  public void testPacMan() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    Polygon polygon = new Polygon(py, px);\n    assertEquals(Relation.CELL_CROSSES_QUERY, polygon.relate(yMin, yMax, xMin, xMax));\n  }\n\n","sourceOld":"  public void testPacMan() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    Polygon polygon = new Polygon(py, px);\n    assertTrue(polygon.crosses(yMin, yMax, xMin, xMax));\n    assertFalse(polygon.contains(yMin, yMax, xMin, xMax));\n  }\n\n","bugFix":["95ddcac9ac08381985af6eac8f8b77ba881d4ad8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09af2c9610ce53a4b25fd99344299b40318a4a1a","date":1459876565,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon#testPacMan().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon#testPacMan().mjava","sourceNew":"  public void testPacMan() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    Polygon polygon = new Polygon(py, px);\n    assertEquals(Relation.CELL_CROSSES_QUERY, polygon.relate(yMin, yMax, xMin, xMax));\n  }\n\n","sourceOld":"  public void testPacMan() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    Polygon polygon = new Polygon(py, px);\n    assertTrue(polygon.crosses(yMin, yMax, xMin, xMax));\n    assertFalse(polygon.contains(yMin, yMax, xMin, xMax));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"925fce43f3bac029d912b9b7de03c789e258a333","date":1461612714,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testPacMan().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon#testPacMan().mjava","sourceNew":"  public void testPacMan() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    Polygon2D polygon = Polygon2D.create(new Polygon(py, px));\n    assertEquals(Relation.CELL_CROSSES_QUERY, polygon.relate(yMin, yMax, xMin, xMax));\n  }\n\n","sourceOld":"  public void testPacMan() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    Polygon polygon = new Polygon(py, px);\n    assertEquals(Relation.CELL_CROSSES_QUERY, polygon.relate(yMin, yMax, xMin, xMax));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f901826e47f75f810d7aae24b0455d21ea1fe2","date":1461678892,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon2D#testPacMan().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestPolygon#testPacMan().mjava","sourceNew":"  public void testPacMan() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    Polygon2D polygon = Polygon2D.create(new Polygon(py, px));\n    assertEquals(Relation.CELL_CROSSES_QUERY, polygon.relate(yMin, yMax, xMin, xMax));\n  }\n\n","sourceOld":"  public void testPacMan() throws Exception {\n    // pacman\n    double[] px = {0, 10, 10, 0, -8, -10, -8, 0, 10, 10, 0};\n    double[] py = {0, 5, 9, 10, 9, 0, -9, -10, -9, -5, 0};\n\n    // candidate crosses cell\n    double xMin = 2;//-5;\n    double xMax = 11;//0.000001;\n    double yMin = -1;//0;\n    double yMax = 1;//5;\n\n    // test cell crossing poly\n    Polygon polygon = new Polygon(py, px);\n    assertEquals(Relation.CELL_CROSSES_QUERY, polygon.relate(yMin, yMax, xMin, xMax));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"82235a501cff963da53cb98d86009e33e15cf47f":["86979a945891cffd49f9634fac5d16ebfe47c541"],"86979a945891cffd49f9634fac5d16ebfe47c541":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09af2c9610ce53a4b25fd99344299b40318a4a1a":["86979a945891cffd49f9634fac5d16ebfe47c541","82235a501cff963da53cb98d86009e33e15cf47f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["82235a501cff963da53cb98d86009e33e15cf47f","925fce43f3bac029d912b9b7de03c789e258a333"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"925fce43f3bac029d912b9b7de03c789e258a333":["82235a501cff963da53cb98d86009e33e15cf47f"]},"commit2Childs":{"82235a501cff963da53cb98d86009e33e15cf47f":["09af2c9610ce53a4b25fd99344299b40318a4a1a","f7f901826e47f75f810d7aae24b0455d21ea1fe2","925fce43f3bac029d912b9b7de03c789e258a333"],"86979a945891cffd49f9634fac5d16ebfe47c541":["82235a501cff963da53cb98d86009e33e15cf47f","09af2c9610ce53a4b25fd99344299b40318a4a1a"],"09af2c9610ce53a4b25fd99344299b40318a4a1a":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["86979a945891cffd49f9634fac5d16ebfe47c541"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"925fce43f3bac029d912b9b7de03c789e258a333":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09af2c9610ce53a4b25fd99344299b40318a4a1a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}