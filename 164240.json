{"path":"lucene/backwards/src/java/org/apache/lucene/index/FormatPostingsPositionsWriter#FormatPostingsPositionsWriter(SegmentWriteState,FormatPostingsDocsWriter).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/FormatPostingsPositionsWriter#FormatPostingsPositionsWriter(SegmentWriteState,FormatPostingsDocsWriter).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/FormatPostingsPositionsWriter#FormatPostingsPositionsWriter(SegmentWriteState,FormatPostingsDocsWriter).mjava","sourceNew":"  FormatPostingsPositionsWriter(SegmentWriteState state, FormatPostingsDocsWriter parent) throws IOException {\n    this.parent = parent;\n    omitTermFreqAndPositions = parent.omitTermFreqAndPositions;\n    if (parent.parent.parent.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      final String fileName = IndexFileNames.segmentFileName(parent.parent.parent.segment, IndexFileNames.PROX_EXTENSION);\n      state.flushedFiles.add(fileName);\n      out = parent.parent.parent.dir.createOutput(fileName);\n      parent.skipListWriter.setProxOutput(out);\n    } else\n      // Every field omits TF so we will write no prox file\n      out = null;\n  }\n\n","sourceOld":"  FormatPostingsPositionsWriter(SegmentWriteState state, FormatPostingsDocsWriter parent) throws IOException {\n    this.parent = parent;\n    omitTermFreqAndPositions = parent.omitTermFreqAndPositions;\n    if (parent.parent.parent.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      final String fileName = IndexFileNames.segmentFileName(parent.parent.parent.segment, IndexFileNames.PROX_EXTENSION);\n      state.flushedFiles.add(fileName);\n      out = parent.parent.parent.dir.createOutput(fileName);\n      parent.skipListWriter.setProxOutput(out);\n    } else\n      // Every field omits TF so we will write no prox file\n      out = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/index/FormatPostingsPositionsWriter#FormatPostingsPositionsWriter(SegmentWriteState,FormatPostingsDocsWriter).mjava","sourceNew":null,"sourceOld":"  FormatPostingsPositionsWriter(SegmentWriteState state, FormatPostingsDocsWriter parent) throws IOException {\n    this.parent = parent;\n    omitTermFreqAndPositions = parent.omitTermFreqAndPositions;\n    if (parent.parent.parent.fieldInfos.hasProx()) {\n      // At least one field does not omit TF, so create the\n      // prox file\n      final String fileName = IndexFileNames.segmentFileName(parent.parent.parent.segment, IndexFileNames.PROX_EXTENSION);\n      state.flushedFiles.add(fileName);\n      out = parent.parent.parent.dir.createOutput(fileName);\n      parent.skipListWriter.setProxOutput(out);\n    } else\n      // Every field omits TF so we will write no prox file\n      out = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}