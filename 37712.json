{"path":"lucene/core/src/java/org/apache/lucene/util/packed/MonotonicBlockPackedReader#of(IndexInput,int,int,long,boolean).mjava","commits":[{"id":"db1893644d5f20456c9524b28e826293d767db65","date":1401985804,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/MonotonicBlockPackedReader#of(IndexInput,int,int,long,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Sole constructor. */\n  public static MonotonicBlockPackedReader of(IndexInput in, int packedIntsVersion, int blockSize, long valueCount, boolean direct) throws IOException {\n    if (packedIntsVersion < PackedInts.VERSION_MONOTONIC_WITHOUT_ZIGZAG) {\n      return new MonotonicBlockPackedReader(in, packedIntsVersion, blockSize, valueCount, direct) {\n        @Override\n        protected long decodeDelta(long delta) {\n          return zigZagDecode(delta);\n        }\n      };\n    }\n    return new MonotonicBlockPackedReader(in, packedIntsVersion, blockSize, valueCount, direct);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0b5f2776cabd1c1bbd3fe122be0f1d547189717","date":1418824930,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/MonotonicBlockPackedReader#of(IndexInput,int,int,long,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/MonotonicBlockPackedReader#of(IndexInput,int,int,long,boolean).mjava","sourceNew":"  /** Sole constructor. */\n  public static MonotonicBlockPackedReader of(IndexInput in, int packedIntsVersion, int blockSize, long valueCount, boolean direct) throws IOException {\n    return new MonotonicBlockPackedReader(in, packedIntsVersion, blockSize, valueCount, direct);\n  }\n\n","sourceOld":"  /** Sole constructor. */\n  public static MonotonicBlockPackedReader of(IndexInput in, int packedIntsVersion, int blockSize, long valueCount, boolean direct) throws IOException {\n    if (packedIntsVersion < PackedInts.VERSION_MONOTONIC_WITHOUT_ZIGZAG) {\n      return new MonotonicBlockPackedReader(in, packedIntsVersion, blockSize, valueCount, direct) {\n        @Override\n        protected long decodeDelta(long delta) {\n          return zigZagDecode(delta);\n        }\n      };\n    }\n    return new MonotonicBlockPackedReader(in, packedIntsVersion, blockSize, valueCount, direct);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"db1893644d5f20456c9524b28e826293d767db65":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c0b5f2776cabd1c1bbd3fe122be0f1d547189717":["db1893644d5f20456c9524b28e826293d767db65"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c0b5f2776cabd1c1bbd3fe122be0f1d547189717"]},"commit2Childs":{"db1893644d5f20456c9524b28e826293d767db65":["c0b5f2776cabd1c1bbd3fe122be0f1d547189717"],"c0b5f2776cabd1c1bbd3fe122be0f1d547189717":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["db1893644d5f20456c9524b28e826293d767db65"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}