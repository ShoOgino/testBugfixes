{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexFileDeleter#testTrashyFile().mjava","commits":[{"id":"98d2deb8c96c79ebef084a1f8e5a1a6c08608f13","date":1409346855,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexFileDeleter#testTrashyFile().mjava","pathOld":"/dev/null","sourceNew":"  public void testTrashyFile() throws IOException {\n    MockDirectoryWrapper dir = newMockDirectory();\n    dir.setCheckIndexOnClose(false); // TODO: maybe handle such trash better elsewhere...\n    \n    // empty commit\n    new IndexWriter(dir, new IndexWriterConfig(null)).close();   \n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    assertEquals(1, sis.getGeneration());\n    \n    // add trash file\n    dir.createOutput(IndexFileNames.SEGMENTS + \"_\", IOContext.DEFAULT).close();\n    \n    // no inflation\n    IndexFileDeleter.inflateGens(sis, Arrays.asList(dir.listAll()), InfoStream.getDefault());\n    assertEquals(1, sis.getGeneration());\n\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3384e6013a93e4d11b7d75388693f8d0388602bf","date":1413951663,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexFileDeleter#testTrashyFile().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexFileDeleter#testTrashyFile().mjava","sourceNew":"  public void testTrashyFile() throws IOException {\n    MockDirectoryWrapper dir = newMockDirectory();\n    dir.setCheckIndexOnClose(false); // TODO: maybe handle such trash better elsewhere...\n    \n    // empty commit\n    new IndexWriter(dir, new IndexWriterConfig(null)).close();   \n    \n    SegmentInfos sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(1, sis.getGeneration());\n    \n    // add trash file\n    dir.createOutput(IndexFileNames.SEGMENTS + \"_\", IOContext.DEFAULT).close();\n    \n    // no inflation\n    IndexFileDeleter.inflateGens(sis, Arrays.asList(dir.listAll()), InfoStream.getDefault());\n    assertEquals(1, sis.getGeneration());\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testTrashyFile() throws IOException {\n    MockDirectoryWrapper dir = newMockDirectory();\n    dir.setCheckIndexOnClose(false); // TODO: maybe handle such trash better elsewhere...\n    \n    // empty commit\n    new IndexWriter(dir, new IndexWriterConfig(null)).close();   \n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    assertEquals(1, sis.getGeneration());\n    \n    // add trash file\n    dir.createOutput(IndexFileNames.SEGMENTS + \"_\", IOContext.DEFAULT).close();\n    \n    // no inflation\n    IndexFileDeleter.inflateGens(sis, Arrays.asList(dir.listAll()), InfoStream.getDefault());\n    assertEquals(1, sis.getGeneration());\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexFileDeleter#testTrashyFile().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexFileDeleter#testTrashyFile().mjava","sourceNew":"  public void testTrashyFile() throws IOException {\n    MockDirectoryWrapper dir = newMockDirectory();\n    dir.setCheckIndexOnClose(false); // TODO: maybe handle such trash better elsewhere...\n    \n    // empty commit\n    new IndexWriter(dir, new IndexWriterConfig(null)).close();   \n    \n    SegmentInfos sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(1, sis.getGeneration());\n    \n    // add trash file\n    dir.createOutput(IndexFileNames.SEGMENTS + \"_\", IOContext.DEFAULT).close();\n    \n    // no inflation\n    IndexFileDeleter.inflateGens(sis, Arrays.asList(dir.listAll()), InfoStream.getDefault());\n    assertEquals(1, sis.getGeneration());\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testTrashyFile() throws IOException {\n    MockDirectoryWrapper dir = newMockDirectory();\n    dir.setCheckIndexOnClose(false); // TODO: maybe handle such trash better elsewhere...\n    \n    // empty commit\n    new IndexWriter(dir, new IndexWriterConfig(null)).close();   \n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    assertEquals(1, sis.getGeneration());\n    \n    // add trash file\n    dir.createOutput(IndexFileNames.SEGMENTS + \"_\", IOContext.DEFAULT).close();\n    \n    // no inflation\n    IndexFileDeleter.inflateGens(sis, Arrays.asList(dir.listAll()), InfoStream.getDefault());\n    assertEquals(1, sis.getGeneration());\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22989c36ff05c657df26dd3377b37c9ad35859bc","date":1424477375,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexFileDeleter#testTrashyFile().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexFileDeleter#testTrashyFile().mjava","sourceNew":"  public void testTrashyFile() throws IOException {\n    MockDirectoryWrapper dir = newMockDirectory();\n    dir.setCheckIndexOnClose(false); // TODO: maybe handle such trash better elsewhere...\n    \n    // empty commit\n    new IndexWriter(dir, new IndexWriterConfig(null)).close();   \n    \n    SegmentInfos sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(1, sis.getGeneration());\n    \n    // add trash file\n    dir.createOutput(IndexFileNames.SEGMENTS + \"_\", IOContext.DEFAULT).close();\n    \n    // no inflation\n    inflateGens(sis, Arrays.asList(dir.listAll()), InfoStream.getDefault());\n    assertEquals(1, sis.getGeneration());\n\n    dir.close();\n  }\n\n","sourceOld":"  public void testTrashyFile() throws IOException {\n    MockDirectoryWrapper dir = newMockDirectory();\n    dir.setCheckIndexOnClose(false); // TODO: maybe handle such trash better elsewhere...\n    \n    // empty commit\n    new IndexWriter(dir, new IndexWriterConfig(null)).close();   \n    \n    SegmentInfos sis = SegmentInfos.readLatestCommit(dir);\n    assertEquals(1, sis.getGeneration());\n    \n    // add trash file\n    dir.createOutput(IndexFileNames.SEGMENTS + \"_\", IOContext.DEFAULT).close();\n    \n    // no inflation\n    IndexFileDeleter.inflateGens(sis, Arrays.asList(dir.listAll()), InfoStream.getDefault());\n    assertEquals(1, sis.getGeneration());\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"98d2deb8c96c79ebef084a1f8e5a1a6c08608f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3384e6013a93e4d11b7d75388693f8d0388602bf":["98d2deb8c96c79ebef084a1f8e5a1a6c08608f13"],"22989c36ff05c657df26dd3377b37c9ad35859bc":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["98d2deb8c96c79ebef084a1f8e5a1a6c08608f13","3384e6013a93e4d11b7d75388693f8d0388602bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["22989c36ff05c657df26dd3377b37c9ad35859bc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["98d2deb8c96c79ebef084a1f8e5a1a6c08608f13"],"98d2deb8c96c79ebef084a1f8e5a1a6c08608f13":["3384e6013a93e4d11b7d75388693f8d0388602bf","db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"3384e6013a93e4d11b7d75388693f8d0388602bf":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"22989c36ff05c657df26dd3377b37c9ad35859bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["22989c36ff05c657df26dd3377b37c9ad35859bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}