{"path":"solr/core/src/test/org/apache/solr/servlet/SolrRequestParserTest#testAutoDetect().mjava","commits":[{"id":"0d17ec5164debc23076db7fd11d0331f201583b5","date":1426658173,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/servlet/SolrRequestParserTest#testAutoDetect().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testAutoDetect() throws Exception {\n    String curl = \"curl/7.30.0\";\n    for (String method : new String[]{\"GET\",\"POST\"}) {\n      doAutoDetect(null, method, \"{}=a\", null,                \"{}\", \"a\");  // unknown agent should not auto-detect\n      doAutoDetect(curl, method, \"{}\",   \"application/json\", null, null);  // curl should auto-detect\n      doAutoDetect(curl, method, \"  \\t\\n\\r  {}  \", \"application/json\", null, null); // starting with whitespace\n      doAutoDetect(curl, method, \"  \\t\\n\\r  // how now brown cow\\n {}  \", \"application/json\", null, null);     // supporting comments\n      doAutoDetect(curl, method, \"  \\t\\n\\r  #different style comment\\n {}  \", \"application/json\", null, null);\n      doAutoDetect(curl, method, \"  \\t\\n\\r  /* C style comment */\\n {}  \", \"application/json\", null, null);\n      doAutoDetect(curl, method, \"  \\t\\n\\r  <tag>hi</tag>  \", \"text/xml\", null, null);\n\n      doAutoDetect(curl, method, \"  \\t\\r\\n  aaa=1&bbb=2&ccc=3\",   null, \"bbb\", \"2\");  // params with whitespace first\n      doAutoDetect(curl, method, \"/x=foo&aaa=1&bbb=2&ccc=3\",   null, \"/x\", \"foo\");  // param name that looks like a path\n      doAutoDetect(curl, method, \" \\t\\r\\n /x=foo&aaa=1&bbb=2&ccc=3\",   null, \"bbb\", \"2\");  // param name that looks like a path\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/servlet/SolrRequestParserTest#testAutoDetect().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testAutoDetect() throws Exception {\n    String curl = \"curl/7.30.0\";\n    for (String method : new String[]{\"GET\",\"POST\"}) {\n      doAutoDetect(null, method, \"{}=a\", null,                \"{}\", \"a\");  // unknown agent should not auto-detect\n      doAutoDetect(curl, method, \"{}\",   \"application/json\", null, null);  // curl should auto-detect\n      doAutoDetect(curl, method, \"  \\t\\n\\r  {}  \", \"application/json\", null, null); // starting with whitespace\n      doAutoDetect(curl, method, \"  \\t\\n\\r  // how now brown cow\\n {}  \", \"application/json\", null, null);     // supporting comments\n      doAutoDetect(curl, method, \"  \\t\\n\\r  #different style comment\\n {}  \", \"application/json\", null, null);\n      doAutoDetect(curl, method, \"  \\t\\n\\r  /* C style comment */\\n {}  \", \"application/json\", null, null);\n      doAutoDetect(curl, method, \"  \\t\\n\\r  <tag>hi</tag>  \", \"text/xml\", null, null);\n\n      doAutoDetect(curl, method, \"  \\t\\r\\n  aaa=1&bbb=2&ccc=3\",   null, \"bbb\", \"2\");  // params with whitespace first\n      doAutoDetect(curl, method, \"/x=foo&aaa=1&bbb=2&ccc=3\",   null, \"/x\", \"foo\");  // param name that looks like a path\n      doAutoDetect(curl, method, \" \\t\\r\\n /x=foo&aaa=1&bbb=2&ccc=3\",   null, \"bbb\", \"2\");  // param name that looks like a path\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0d17ec5164debc23076db7fd11d0331f201583b5"],"0d17ec5164debc23076db7fd11d0331f201583b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d17ec5164debc23076db7fd11d0331f201583b5"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"0d17ec5164debc23076db7fd11d0331f201583b5":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0d17ec5164debc23076db7fd11d0331f201583b5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}