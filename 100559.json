{"path":"lucene/src/java/org/apache/lucene/index/codecs/PerDocConsumer#merge(MergeState,PerDocValues).mjava","commits":[{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PerDocConsumer#merge(MergeState,PerDocValues).mjava","pathOld":"/dev/null","sourceNew":"  public void merge(MergeState mergeState, PerDocValues producer)\n      throws IOException {\n    Iterable<String> fields = producer.fields();\n    for (String field : fields) {\n      mergeState.fieldInfo = mergeState.fieldInfos.fieldInfo(field);\n      assert mergeState.fieldInfo != null : \"FieldInfo for field is null: \"\n          + field;\n      if (mergeState.fieldInfo.hasDocValues()) {\n        final DocValues docValues = producer.docValues(field);\n        if (docValues == null) {\n          /*\n           * It is actually possible that a fieldInfo has a values type but no\n           * values are actually available. this can happen if there are already\n           * segments without values around.\n           */\n          continue;\n        }\n        final DocValuesConsumer docValuesConsumer = addValuesField(mergeState.fieldInfo);\n        assert docValuesConsumer != null;\n        docValuesConsumer.merge(mergeState, docValues);\n      }\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a178822e66424e8b9d52a1f0a3d8f2f8d641b99","date":1305619757,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PerDocConsumer#merge(MergeState,PerDocValues).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PerDocConsumer#merge(MergeState,PerDocValues).mjava","sourceNew":"  /**\n   * Consumes and merges the given {@link PerDocValues} producer\n   * into this consumers format.   \n   */\n  public void merge(MergeState mergeState, PerDocValues producer)\n      throws IOException {\n    Iterable<String> fields = producer.fields();\n    for (String field : fields) {\n      mergeState.fieldInfo = mergeState.fieldInfos.fieldInfo(field);\n      assert mergeState.fieldInfo != null : \"FieldInfo for field is null: \"\n          + field;\n      if (mergeState.fieldInfo.hasDocValues()) {\n        final DocValues docValues = producer.docValues(field);\n        if (docValues == null) {\n          /*\n           * It is actually possible that a fieldInfo has a values type but no\n           * values are actually available. this can happen if there are already\n           * segments without values around.\n           */\n          continue;\n        }\n        final DocValuesConsumer docValuesConsumer = addValuesField(mergeState.fieldInfo);\n        assert docValuesConsumer != null;\n        docValuesConsumer.merge(mergeState, docValues);\n      }\n    }\n\n  }\n\n","sourceOld":"  public void merge(MergeState mergeState, PerDocValues producer)\n      throws IOException {\n    Iterable<String> fields = producer.fields();\n    for (String field : fields) {\n      mergeState.fieldInfo = mergeState.fieldInfos.fieldInfo(field);\n      assert mergeState.fieldInfo != null : \"FieldInfo for field is null: \"\n          + field;\n      if (mergeState.fieldInfo.hasDocValues()) {\n        final DocValues docValues = producer.docValues(field);\n        if (docValues == null) {\n          /*\n           * It is actually possible that a fieldInfo has a values type but no\n           * values are actually available. this can happen if there are already\n           * segments without values around.\n           */\n          continue;\n        }\n        final DocValuesConsumer docValuesConsumer = addValuesField(mergeState.fieldInfo);\n        assert docValuesConsumer != null;\n        docValuesConsumer.merge(mergeState, docValues);\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41e5bbad683f7546e96f08ffe8bc50cf447f2586","date":1307113213,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PerDocConsumer#merge(MergeState,PerDocValues).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PerDocConsumer#merge(MergeState,PerDocValues).mjava","sourceNew":"  /**\n   * Consumes and merges the given {@link PerDocValues} producer\n   * into this consumers format.   \n   */\n  public void merge(MergeState mergeState, PerDocValues producer)\n      throws IOException {\n    Iterable<String> fields = producer.fields();\n    for (String field : fields) {\n      mergeState.fieldInfo = mergeState.fieldInfos.fieldInfo(field);\n      assert mergeState.fieldInfo != null : \"FieldInfo for field is null: \"\n          + field;\n      if (mergeState.fieldInfo.hasDocValues()) {\n        final IndexDocValues docValues = producer.docValues(field);\n        if (docValues == null) {\n          /*\n           * It is actually possible that a fieldInfo has a values type but no\n           * values are actually available. this can happen if there are already\n           * segments without values around.\n           */\n          continue;\n        }\n        final DocValuesConsumer docValuesConsumer = addValuesField(mergeState.fieldInfo);\n        assert docValuesConsumer != null;\n        docValuesConsumer.merge(mergeState, docValues);\n      }\n    }\n\n  }\n\n","sourceOld":"  /**\n   * Consumes and merges the given {@link PerDocValues} producer\n   * into this consumers format.   \n   */\n  public void merge(MergeState mergeState, PerDocValues producer)\n      throws IOException {\n    Iterable<String> fields = producer.fields();\n    for (String field : fields) {\n      mergeState.fieldInfo = mergeState.fieldInfos.fieldInfo(field);\n      assert mergeState.fieldInfo != null : \"FieldInfo for field is null: \"\n          + field;\n      if (mergeState.fieldInfo.hasDocValues()) {\n        final DocValues docValues = producer.docValues(field);\n        if (docValues == null) {\n          /*\n           * It is actually possible that a fieldInfo has a values type but no\n           * values are actually available. this can happen if there are already\n           * segments without values around.\n           */\n          continue;\n        }\n        final DocValuesConsumer docValuesConsumer = addValuesField(mergeState.fieldInfo);\n        assert docValuesConsumer != null;\n        docValuesConsumer.merge(mergeState, docValues);\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PerDocConsumer#merge(MergeState,PerDocValues).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Consumes and merges the given {@link PerDocValues} producer\n   * into this consumers format.   \n   */\n  public void merge(MergeState mergeState, PerDocValues producer)\n      throws IOException {\n    Iterable<String> fields = producer.fields();\n    for (String field : fields) {\n      mergeState.fieldInfo = mergeState.fieldInfos.fieldInfo(field);\n      assert mergeState.fieldInfo != null : \"FieldInfo for field is null: \"\n          + field;\n      if (mergeState.fieldInfo.hasDocValues()) {\n        final IndexDocValues docValues = producer.docValues(field);\n        if (docValues == null) {\n          /*\n           * It is actually possible that a fieldInfo has a values type but no\n           * values are actually available. this can happen if there are already\n           * segments without values around.\n           */\n          continue;\n        }\n        final DocValuesConsumer docValuesConsumer = addValuesField(mergeState.fieldInfo);\n        assert docValuesConsumer != null;\n        docValuesConsumer.merge(mergeState, docValues);\n      }\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/PerDocConsumer#merge(MergeState,PerDocValues).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Consumes and merges the given {@link PerDocValues} producer\n   * into this consumers format.   \n   */\n  public void merge(MergeState mergeState, PerDocValues producer)\n      throws IOException {\n    Iterable<String> fields = producer.fields();\n    for (String field : fields) {\n      mergeState.fieldInfo = mergeState.fieldInfos.fieldInfo(field);\n      assert mergeState.fieldInfo != null : \"FieldInfo for field is null: \"\n          + field;\n      if (mergeState.fieldInfo.hasDocValues()) {\n        final IndexDocValues docValues = producer.docValues(field);\n        if (docValues == null) {\n          /*\n           * It is actually possible that a fieldInfo has a values type but no\n           * values are actually available. this can happen if there are already\n           * segments without values around.\n           */\n          continue;\n        }\n        final DocValuesConsumer docValuesConsumer = addValuesField(mergeState.fieldInfo);\n        assert docValuesConsumer != null;\n        docValuesConsumer.merge(mergeState, docValues);\n      }\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32aca6bb0a6aa0a1813e7d035ac0e039f54269f4","date":1318260487,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/PerDocConsumer#merge(MergeState,PerDocValues).mjava","sourceNew":null,"sourceOld":"  /**\n   * Consumes and merges the given {@link PerDocValues} producer\n   * into this consumers format.   \n   */\n  public void merge(MergeState mergeState, PerDocValues producer)\n      throws IOException {\n    Iterable<String> fields = producer.fields();\n    for (String field : fields) {\n      mergeState.fieldInfo = mergeState.fieldInfos.fieldInfo(field);\n      assert mergeState.fieldInfo != null : \"FieldInfo for field is null: \"\n          + field;\n      if (mergeState.fieldInfo.hasDocValues()) {\n        final IndexDocValues docValues = producer.docValues(field);\n        if (docValues == null) {\n          /*\n           * It is actually possible that a fieldInfo has a values type but no\n           * values are actually available. this can happen if there are already\n           * segments without values around.\n           */\n          continue;\n        }\n        final DocValuesConsumer docValuesConsumer = addValuesField(mergeState.fieldInfo);\n        assert docValuesConsumer != null;\n        docValuesConsumer.merge(mergeState, docValues);\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e8d7ba2175f47e280231533f7d3016249cea88b"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","41e5bbad683f7546e96f08ffe8bc50cf447f2586"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"41e5bbad683f7546e96f08ffe8bc50cf447f2586":["8a178822e66424e8b9d52a1f0a3d8f2f8d641b99"],"32aca6bb0a6aa0a1813e7d035ac0e039f54269f4":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"8a178822e66424e8b9d52a1f0a3d8f2f8d641b99":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["32aca6bb0a6aa0a1813e7d035ac0e039f54269f4"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","32aca6bb0a6aa0a1813e7d035ac0e039f54269f4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","135621f3a0670a9394eb563224a3b76cc4dddc0f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["8a178822e66424e8b9d52a1f0a3d8f2f8d641b99"],"41e5bbad683f7546e96f08ffe8bc50cf447f2586":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"32aca6bb0a6aa0a1813e7d035ac0e039f54269f4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8a178822e66424e8b9d52a1f0a3d8f2f8d641b99":["41e5bbad683f7546e96f08ffe8bc50cf447f2586"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}