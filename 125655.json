{"path":"lucene/core/src/java/org/apache/lucene/document/LatLonPointDistanceComparator#compareBottom(int).mjava","commits":[{"id":"88b0212386fe531136816706dc37dc49b9dbf7dc","date":1532560226,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/LatLonPointDistanceComparator#compareBottom(int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointDistanceComparator#compareBottom(int).mjava","sourceNew":"  @Override\n  public int compareBottom(int doc) throws IOException {\n    if (doc > currentDocs.docID()) {\n      currentDocs.advance(doc);\n    }\n    if (doc < currentDocs.docID()) {\n      return Double.compare(bottom, Double.POSITIVE_INFINITY);\n    }\n\n    setValues();\n\n    int numValues = currentDocs.docValueCount();\n\n    int cmp = -1;\n    for (int i = 0; i < numValues; i++) {\n      long encoded = currentValues[i];\n\n      // test bounding box\n      int latitudeBits = (int)(encoded >> 32);\n      if (latitudeBits < minLat || latitudeBits > maxLat) {\n        continue;\n      }\n      int longitudeBits = (int)(encoded & 0xFFFFFFFF);\n      if ((longitudeBits < minLon || longitudeBits > maxLon) && (longitudeBits < minLon2)) {\n        continue;\n      }\n\n      // only compute actual distance if its inside \"competitive bounding box\"\n      double docLatitude = decodeLatitude(latitudeBits);\n      double docLongitude = decodeLongitude(longitudeBits);\n      cmp = Math.max(cmp, Double.compare(bottom, SloppyMath.haversinSortKey(latitude, longitude, docLatitude, docLongitude)));\n      // once we compete in the PQ, no need to continue.\n      if (cmp > 0) {\n        return cmp;\n      }\n    }\n    return cmp;\n  }\n\n","sourceOld":"  @Override\n  public int compareBottom(int doc) throws IOException {\n    if (doc > currentDocs.docID()) {\n      currentDocs.advance(doc);\n    }\n    if (doc < currentDocs.docID()) {\n      return Double.compare(bottom, Double.POSITIVE_INFINITY);\n    }\n\n    setValues();\n\n    int numValues = currentDocs.docValueCount();\n\n    int cmp = -1;\n    for (int i = 0; i < numValues; i++) {\n      long encoded = currentValues[i];\n\n      // test bounding box\n      int latitudeBits = (int)(encoded >> 32);\n      if (latitudeBits < minLat || latitudeBits > maxLat) {\n        continue;\n      }\n      int longitudeBits = (int)(encoded & 0xFFFFFFFF);\n      if ((longitudeBits < minLon || longitudeBits > maxLon) && (longitudeBits < minLon2)) {\n        continue;\n      }\n\n      // only compute actual distance if its inside \"competitive bounding box\"\n      double docLatitude = decodeLatitude(latitudeBits);\n      double docLongitude = decodeLongitude(longitudeBits);\n      cmp = Math.max(cmp, Double.compare(bottom, SloppyMath.haversinSortKey(latitude, longitude, docLatitude, docLongitude)));\n      // once we compete in the PQ, no need to continue.\n      if (cmp > 0) {\n        return cmp;\n      }\n    }\n    return cmp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"88b0212386fe531136816706dc37dc49b9dbf7dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["88b0212386fe531136816706dc37dc49b9dbf7dc"]},"commit2Childs":{"88b0212386fe531136816706dc37dc49b9dbf7dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["88b0212386fe531136816706dc37dc49b9dbf7dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}