{"path":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#addURLsToClassLoader(URLClassLoader,List[URL]).mjava","commits":[{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#addURLsToClassLoader(URLClassLoader,List[URL]).mjava","pathOld":"/dev/null","sourceNew":"  private static URLClassLoader addURLsToClassLoader(final URLClassLoader oldLoader, List<URL> urls) {\n    if (urls.size() == 0) {\n      return oldLoader;\n    }\n\n    List<URL> allURLs = new ArrayList<>();\n    allURLs.addAll(Arrays.asList(oldLoader.getURLs()));\n    allURLs.addAll(urls);\n    for (URL url : urls) {\n      log.info(\"Adding '{}' to classloader\", url.toString());\n    }\n\n    ClassLoader oldParent = oldLoader.getParent();\n    IOUtils.closeWhileHandlingException(oldLoader);\n    return URLClassLoader.newInstance(allURLs.toArray(new URL[allURLs.size()]), oldParent);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f0c8426396c925de8db3ed3f8ff40fd73670a5c","date":1474556641,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#addURLsToClassLoader(URLClassLoader,List[URL]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#addURLsToClassLoader(URLClassLoader,List[URL]).mjava","sourceNew":"  private static URLClassLoader addURLsToClassLoader(final URLClassLoader oldLoader, List<URL> urls) {\n    if (urls.size() == 0) {\n      return oldLoader;\n    }\n\n    List<URL> allURLs = new ArrayList<>();\n    allURLs.addAll(Arrays.asList(oldLoader.getURLs()));\n    allURLs.addAll(urls);\n    for (URL url : urls) {\n      log.debug(\"Adding '{}' to classloader\", url.toString());\n    }\n\n    ClassLoader oldParent = oldLoader.getParent();\n    IOUtils.closeWhileHandlingException(oldLoader);\n    return URLClassLoader.newInstance(allURLs.toArray(new URL[allURLs.size()]), oldParent);\n  }\n\n","sourceOld":"  private static URLClassLoader addURLsToClassLoader(final URLClassLoader oldLoader, List<URL> urls) {\n    if (urls.size() == 0) {\n      return oldLoader;\n    }\n\n    List<URL> allURLs = new ArrayList<>();\n    allURLs.addAll(Arrays.asList(oldLoader.getURLs()));\n    allURLs.addAll(urls);\n    for (URL url : urls) {\n      log.info(\"Adding '{}' to classloader\", url.toString());\n    }\n\n    ClassLoader oldParent = oldLoader.getParent();\n    IOUtils.closeWhileHandlingException(oldLoader);\n    return URLClassLoader.newInstance(allURLs.toArray(new URL[allURLs.size()]), oldParent);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"126d6ad24eed13163ba0959435d5a80e5672837c","date":1474567302,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#addURLsToClassLoader(URLClassLoader,List[URL]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#addURLsToClassLoader(URLClassLoader,List[URL]).mjava","sourceNew":"  private static URLClassLoader addURLsToClassLoader(final URLClassLoader oldLoader, List<URL> urls) {\n    if (urls.size() == 0) {\n      return oldLoader;\n    }\n\n    List<URL> allURLs = new ArrayList<>();\n    allURLs.addAll(Arrays.asList(oldLoader.getURLs()));\n    allURLs.addAll(urls);\n    for (URL url : urls) {\n      log.debug(\"Adding '{}' to classloader\", url.toString());\n    }\n\n    ClassLoader oldParent = oldLoader.getParent();\n    IOUtils.closeWhileHandlingException(oldLoader);\n    return URLClassLoader.newInstance(allURLs.toArray(new URL[allURLs.size()]), oldParent);\n  }\n\n","sourceOld":"  private static URLClassLoader addURLsToClassLoader(final URLClassLoader oldLoader, List<URL> urls) {\n    if (urls.size() == 0) {\n      return oldLoader;\n    }\n\n    List<URL> allURLs = new ArrayList<>();\n    allURLs.addAll(Arrays.asList(oldLoader.getURLs()));\n    allURLs.addAll(urls);\n    for (URL url : urls) {\n      log.info(\"Adding '{}' to classloader\", url.toString());\n    }\n\n    ClassLoader oldParent = oldLoader.getParent();\n    IOUtils.closeWhileHandlingException(oldLoader);\n    return URLClassLoader.newInstance(allURLs.toArray(new URL[allURLs.size()]), oldParent);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#addURLsToClassLoader(URLClassLoader,List[URL]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#addURLsToClassLoader(URLClassLoader,List[URL]).mjava","sourceNew":"  private static URLClassLoader addURLsToClassLoader(final URLClassLoader oldLoader, List<URL> urls) {\n    if (urls.size() == 0) {\n      return oldLoader;\n    }\n\n    List<URL> allURLs = new ArrayList<>();\n    allURLs.addAll(Arrays.asList(oldLoader.getURLs()));\n    allURLs.addAll(urls);\n    for (URL url : urls) {\n      log.debug(\"Adding '{}' to classloader\", url.toString());\n    }\n\n    ClassLoader oldParent = oldLoader.getParent();\n    IOUtils.closeWhileHandlingException(oldLoader);\n    return URLClassLoader.newInstance(allURLs.toArray(new URL[allURLs.size()]), oldParent);\n  }\n\n","sourceOld":"  private static URLClassLoader addURLsToClassLoader(final URLClassLoader oldLoader, List<URL> urls) {\n    if (urls.size() == 0) {\n      return oldLoader;\n    }\n\n    List<URL> allURLs = new ArrayList<>();\n    allURLs.addAll(Arrays.asList(oldLoader.getURLs()));\n    allURLs.addAll(urls);\n    for (URL url : urls) {\n      log.info(\"Adding '{}' to classloader\", url.toString());\n    }\n\n    ClassLoader oldParent = oldLoader.getParent();\n    IOUtils.closeWhileHandlingException(oldLoader);\n    return URLClassLoader.newInstance(allURLs.toArray(new URL[allURLs.size()]), oldParent);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#addURLsToClassLoader(URLClassLoader,List[URL]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#addURLsToClassLoader(URLClassLoader,List[URL]).mjava","sourceNew":"  private static URLClassLoader addURLsToClassLoader(final URLClassLoader oldLoader, List<URL> urls) {\n    if (urls.size() == 0) {\n      return oldLoader;\n    }\n\n    List<URL> allURLs = new ArrayList<>();\n    allURLs.addAll(Arrays.asList(oldLoader.getURLs()));\n    allURLs.addAll(urls);\n    for (URL url : urls) {\n      log.debug(\"Adding '{}' to classloader\", url.toString());\n    }\n\n    ClassLoader oldParent = oldLoader.getParent();\n    IOUtils.closeWhileHandlingException(oldLoader);\n    return URLClassLoader.newInstance(allURLs.toArray(new URL[allURLs.size()]), oldParent);\n  }\n\n","sourceOld":"  private static URLClassLoader addURLsToClassLoader(final URLClassLoader oldLoader, List<URL> urls) {\n    if (urls.size() == 0) {\n      return oldLoader;\n    }\n\n    List<URL> allURLs = new ArrayList<>();\n    allURLs.addAll(Arrays.asList(oldLoader.getURLs()));\n    allURLs.addAll(urls);\n    for (URL url : urls) {\n      log.info(\"Adding '{}' to classloader\", url.toString());\n    }\n\n    ClassLoader oldParent = oldLoader.getParent();\n    IOUtils.closeWhileHandlingException(oldLoader);\n    return URLClassLoader.newInstance(allURLs.toArray(new URL[allURLs.size()]), oldParent);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"140be51d03394488536f4aacedace29f9b318347","date":1587170432,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#addURLsToClassLoader(URLClassLoader,List[URL]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#addURLsToClassLoader(URLClassLoader,List[URL]).mjava","sourceNew":"  private static URLClassLoader addURLsToClassLoader(final URLClassLoader oldLoader, List<URL> urls) {\n    if (urls.size() == 0) {\n      return oldLoader;\n    }\n\n    List<URL> allURLs = new ArrayList<>();\n    allURLs.addAll(Arrays.asList(oldLoader.getURLs()));\n    allURLs.addAll(urls);\n    for (URL url : urls) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Adding '{}' to classloader\", url.toString());\n      }\n    }\n\n    ClassLoader oldParent = oldLoader.getParent();\n    IOUtils.closeWhileHandlingException(oldLoader);\n    return URLClassLoader.newInstance(allURLs.toArray(new URL[allURLs.size()]), oldParent);\n  }\n\n","sourceOld":"  private static URLClassLoader addURLsToClassLoader(final URLClassLoader oldLoader, List<URL> urls) {\n    if (urls.size() == 0) {\n      return oldLoader;\n    }\n\n    List<URL> allURLs = new ArrayList<>();\n    allURLs.addAll(Arrays.asList(oldLoader.getURLs()));\n    allURLs.addAll(urls);\n    for (URL url : urls) {\n      log.debug(\"Adding '{}' to classloader\", url.toString());\n    }\n\n    ClassLoader oldParent = oldLoader.getParent();\n    IOUtils.closeWhileHandlingException(oldLoader);\n    return URLClassLoader.newInstance(allURLs.toArray(new URL[allURLs.size()]), oldParent);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"575e66bd4b2349209027f6801184da7fc3cba13f","date":1587609169,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#addURLsToClassLoader(URLClassLoader,List[URL]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrResourceLoader#addURLsToClassLoader(URLClassLoader,List[URL]).mjava","sourceNew":"  private static URLClassLoader addURLsToClassLoader(final URLClassLoader oldLoader, List<URL> urls) {\n    if (urls.size() == 0) {\n      return oldLoader;\n    }\n\n    List<URL> allURLs = new ArrayList<>();\n    allURLs.addAll(Arrays.asList(oldLoader.getURLs()));\n    allURLs.addAll(urls);\n    for (URL url : urls) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Adding '{}' to classloader\", url);\n      }\n    }\n\n    ClassLoader oldParent = oldLoader.getParent();\n    IOUtils.closeWhileHandlingException(oldLoader);\n    return URLClassLoader.newInstance(allURLs.toArray(new URL[allURLs.size()]), oldParent);\n  }\n\n","sourceOld":"  private static URLClassLoader addURLsToClassLoader(final URLClassLoader oldLoader, List<URL> urls) {\n    if (urls.size() == 0) {\n      return oldLoader;\n    }\n\n    List<URL> allURLs = new ArrayList<>();\n    allURLs.addAll(Arrays.asList(oldLoader.getURLs()));\n    allURLs.addAll(urls);\n    for (URL url : urls) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Adding '{}' to classloader\", url.toString());\n      }\n    }\n\n    ClassLoader oldParent = oldLoader.getParent();\n    IOUtils.closeWhileHandlingException(oldLoader);\n    return URLClassLoader.newInstance(allURLs.toArray(new URL[allURLs.size()]), oldParent);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"126d6ad24eed13163ba0959435d5a80e5672837c":["a626ec4d1c92e59fe390724d6220081047b03ce7","7f0c8426396c925de8db3ed3f8ff40fd73670a5c"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"140be51d03394488536f4aacedace29f9b318347":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a626ec4d1c92e59fe390724d6220081047b03ce7","126d6ad24eed13163ba0959435d5a80e5672837c"],"575e66bd4b2349209027f6801184da7fc3cba13f":["140be51d03394488536f4aacedace29f9b318347"],"7f0c8426396c925de8db3ed3f8ff40fd73670a5c":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a626ec4d1c92e59fe390724d6220081047b03ce7","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["575e66bd4b2349209027f6801184da7fc3cba13f"]},"commit2Childs":{"126d6ad24eed13163ba0959435d5a80e5672837c":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["126d6ad24eed13163ba0959435d5a80e5672837c","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","7f0c8426396c925de8db3ed3f8ff40fd73670a5c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"140be51d03394488536f4aacedace29f9b318347":["575e66bd4b2349209027f6801184da7fc3cba13f"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["140be51d03394488536f4aacedace29f9b318347","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"575e66bd4b2349209027f6801184da7fc3cba13f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7f0c8426396c925de8db3ed3f8ff40fd73670a5c":["126d6ad24eed13163ba0959435d5a80e5672837c"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}