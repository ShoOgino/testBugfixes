{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n    conf.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarity().getClass());\n    conf.setSimilarity(null);\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n    conf.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarity().getClass());\n    conf.setSimilarity(null);\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ab99e8c71442b92c320e218141dee04a9b91ce8","date":1269203801,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n    conf.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarity().getClass());\n    conf.setSimilarity(null);\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(5);\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(0);\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n    conf.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarity().getClass());\n    conf.setSimilarity(null);\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":["3971a049eab9d119ba1497d7ee89abc1a9a96278"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n    conf.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarity().getClass());\n    conf.setSimilarity(null);\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(5);\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(0);\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n    conf.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarity().getClass());\n    conf.setSimilarity(null);\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(5);\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(0);\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6c18273ea5b3974d2f30117f46f1ae416c28f727","date":1279708040,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n    conf.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarity().getClass());\n    conf.setSimilarity(null);\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(5));\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(0));\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n    conf.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarity().getClass());\n    conf.setSimilarity(null);\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(5);\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(0);\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":["3971a049eab9d119ba1497d7ee89abc1a9a96278"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n\n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n\n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n    conf.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarity().getClass());\n    conf.setSimilarity(null);\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n\n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(5));\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(0));\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n\n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n    conf.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarity().getClass());\n    conf.setSimilarity(null);\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(5));\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(0));\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fd9325c7ff9928fabe81c28553b41fc7aa57dfab","date":1295896411,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(5);\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(0);\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n    conf.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarity().getClass());\n    conf.setSimilarity(null);\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(5);\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(0);\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n\n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n\n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n\n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(5));\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(0));\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n\n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n\n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n\n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n    conf.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarity().getClass());\n    conf.setSimilarity(null);\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n\n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(5));\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(0));\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n\n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"81cc37e458a3bdbe82fc7b807a5d1a59b06f9191","date":1296158863,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(5);\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(0);\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(5);\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(0);\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(5);\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(0);\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n    conf.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarity().getClass());\n    conf.setSimilarity(null);\n    assertTrue(Similarity.getDefault() == conf.getSimilarity());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(5);\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(0);\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n\n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n\n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n\n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(5));\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(0));\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n\n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n\n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n\n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n\n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(5));\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(0));\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n\n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"160d004a0e8f5361a446f9d01456aee1c1af20dc","date":1301061642,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarityProvider());\n    assertEquals(MySimilarityProvider.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(5);\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(0);\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(5);\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(0);\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarityProvider());\n    assertEquals(MySimilarityProvider.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(5);\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(0);\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(5);\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(0);\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n\n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n\n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarityProvider());\n    assertEquals(MySimilarityProvider.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n\n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(5));\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(0));\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n\n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n\n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n\n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n\n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(5));\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(0));\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n\n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d2ed1b9b7b46829fe3199afe9a8bc203f201b175","date":1301491807,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n\n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n\n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarityProvider());\n    assertEquals(MySimilarityProvider.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n\n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(2048);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to >= 2048\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(0);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(5));\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(0));\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n\n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n\n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n\n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarityProvider());\n    assertEquals(MySimilarityProvider.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n\n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(5));\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(0));\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n\n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"01e5948db9a07144112d2f08f28ca2e3cd880348","date":1301759232,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarityProvider());\n    assertEquals(MySimilarityProvider.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(5);\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(0);\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(TieredMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarityProvider());\n    assertEquals(MySimilarityProvider.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(5);\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(0);\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n\n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n\n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarityProvider());\n    assertEquals(MySimilarityProvider.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n\n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(2048);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to >= 2048\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(0);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(5));\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(0));\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n\n    // Test MergePolicy\n    assertEquals(TieredMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n\n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n\n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarityProvider());\n    assertEquals(MySimilarityProvider.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n\n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(2048);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to >= 2048\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(0);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(5));\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(0));\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n\n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarityProvider());\n    assertEquals(MySimilarityProvider.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(5);\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(0);\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(TieredMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarityProvider());\n    assertEquals(MySimilarityProvider.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(5);\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(0);\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(TieredMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n\n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n\n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarityProvider());\n    assertEquals(MySimilarityProvider.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n\n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(2048);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to >= 2048\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(0);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(5));\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(0));\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n\n    // Test MergePolicy\n    assertEquals(TieredMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n\n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n\n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarityProvider());\n    assertEquals(MySimilarityProvider.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n\n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(2048);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to >= 2048\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(0);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(5));\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(0));\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n\n    // Test MergePolicy\n    assertEquals(TieredMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"19b281157bd1e723dc9a712b6058506090cf2a8a","date":1304007734,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n\n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n\n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarityProvider());\n    assertEquals(MySimilarityProvider.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n\n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(2048);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to >= 2048\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(0);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Test MergePolicy\n    assertEquals(TieredMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n\n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n\n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarityProvider());\n    assertEquals(MySimilarityProvider.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n\n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(2048);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to >= 2048\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(0);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(5));\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setIndexerThreadPool(new ThreadAffinityDocumentsWriterThreadPool(0));\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n\n    // Test MergePolicy\n    assertEquals(TieredMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n\n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n\n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarityProvider());\n    assertEquals(MySimilarityProvider.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n\n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(2048);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to >= 2048\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(0);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Test MergePolicy\n    assertEquals(TieredMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarityProvider());\n    assertEquals(MySimilarityProvider.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(5);\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(0);\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(TieredMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n\n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n\n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarityProvider());\n    assertEquals(MySimilarityProvider.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n\n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(2048);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to >= 2048\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(0);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Test MergePolicy\n    assertEquals(TieredMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarityProvider());\n    assertEquals(MySimilarityProvider.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(5);\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(0);\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n\n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n\n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarityProvider());\n    assertEquals(MySimilarityProvider.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n\n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(2048);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to >= 2048\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(0);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Test MergePolicy\n    assertEquals(TieredMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    \n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    \n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarityProvider());\n    assertEquals(MySimilarityProvider.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriter.defaultIndexingChain == conf.getIndexingChain());\n    \n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(5);\n    assertEquals(5, conf.getMaxThreadStates());\n    conf.setMaxThreadStates(0);\n    assertEquals(IndexWriterConfig.DEFAULT_MAX_THREAD_STATES, conf.getMaxThreadStates());\n    \n    // Test MergePolicy\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b","date":1328532481,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n\n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n\n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarity() == conf.getSimilarity());\n    conf.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarity().getClass());\n    conf.setSimilarity(null);\n    assertTrue(IndexSearcher.getDefaultSimilarity() == conf.getSimilarity());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n\n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(2048);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to >= 2048\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(0);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Test MergePolicy\n    assertEquals(TieredMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n\n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n\n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n    conf.setSimilarityProvider(new MySimilarityProvider());\n    assertEquals(MySimilarityProvider.class, conf.getSimilarityProvider().getClass());\n    conf.setSimilarityProvider(null);\n    assertTrue(IndexSearcher.getDefaultSimilarityProvider() == conf.getSimilarityProvider());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n\n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(2048);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to >= 2048\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(0);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Test MergePolicy\n    assertEquals(TieredMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":["3971a049eab9d119ba1497d7ee89abc1a9a96278"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testInvalidValues().mjava","sourceNew":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n\n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n\n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarity() == conf.getSimilarity());\n    conf.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarity().getClass());\n    conf.setSimilarity(null);\n    assertTrue(IndexSearcher.getDefaultSimilarity() == conf.getSimilarity());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n\n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(2048);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to >= 2048\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(0);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Test MergePolicy\n    assertEquals(TieredMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","sourceOld":"  @Test\n  public void testInvalidValues() throws Exception {\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n\n    // Test IndexDeletionPolicy\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(new SnapshotDeletionPolicy(null));\n    assertEquals(SnapshotDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n    conf.setIndexDeletionPolicy(null);\n    assertEquals(KeepOnlyLastCommitDeletionPolicy.class, conf.getIndexDeletionPolicy().getClass());\n\n    // Test MergeScheduler\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, conf.getMergeScheduler().getClass());\n    conf.setMergeScheduler(null);\n    assertEquals(ConcurrentMergeScheduler.class, conf.getMergeScheduler().getClass());\n\n    // Test Similarity: \n    // we shouldnt assert what the default is, just that its not null.\n    assertTrue(IndexSearcher.getDefaultSimilarity() == conf.getSimilarity());\n    conf.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, conf.getSimilarity().getClass());\n    conf.setSimilarity(null);\n    assertTrue(IndexSearcher.getDefaultSimilarity() == conf.getSimilarity());\n\n    // Test IndexingChain\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n    conf.setIndexingChain(new MyIndexingChain());\n    assertEquals(MyIndexingChain.class, conf.getIndexingChain().getClass());\n    conf.setIndexingChain(null);\n    assertTrue(DocumentsWriterPerThread.defaultIndexingChain == conf.getIndexingChain());\n\n    try {\n      conf.setMaxBufferedDeleteTerms(0);\n      fail(\"should not have succeeded to set maxBufferedDeleteTerms to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      conf.setMaxBufferedDocs(1);\n      fail(\"should not have succeeded to set maxBufferedDocs to 1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    try {\n      // Disable both MAX_BUF_DOCS and RAM_SIZE_MB\n      conf.setMaxBufferedDocs(4);\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      conf.setMaxBufferedDocs(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable maxBufferedDocs when ramBufferSizeMB is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    conf.setRAMBufferSizeMB(IndexWriterConfig.DEFAULT_RAM_BUFFER_SIZE_MB);\n    conf.setMaxBufferedDocs(IndexWriterConfig.DEFAULT_MAX_BUFFERED_DOCS);\n    try {\n      conf.setRAMBufferSizeMB(IndexWriterConfig.DISABLE_AUTO_FLUSH);\n      fail(\"should not have succeeded to disable ramBufferSizeMB when maxBufferedDocs is disabled as well\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n\n    // Test setReaderTermsIndexDivisor\n    try {\n      conf.setReaderTermsIndexDivisor(0);\n      fail(\"should not have succeeded to set termsIndexDivisor to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Setting to -1 is ok\n    conf.setReaderTermsIndexDivisor(-1);\n    try {\n      conf.setReaderTermsIndexDivisor(-2);\n      fail(\"should not have succeeded to set termsIndexDivisor to < -1\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(2048);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to >= 2048\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    try {\n      conf.setRAMPerThreadHardLimitMB(0);\n      fail(\"should not have succeeded to set RAMPerThreadHardLimitMB to 0\");\n    } catch (IllegalArgumentException e) {\n      // this is expected\n    }\n    \n    // Test MergePolicy\n    assertEquals(TieredMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, conf.getMergePolicy().getClass());\n    conf.setMergePolicy(null);\n    assertEquals(LogByteSizeMergePolicy.class, conf.getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["6c18273ea5b3974d2f30117f46f1ae416c28f727","d572389229127c297dd1fa5ce4758e1cec41e799"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"01e5948db9a07144112d2f08f28ca2e3cd880348":["160d004a0e8f5361a446f9d01456aee1c1af20dc"],"81cc37e458a3bdbe82fc7b807a5d1a59b06f9191":["fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"fd9325c7ff9928fabe81c28553b41fc7aa57dfab":["d572389229127c297dd1fa5ce4758e1cec41e799"],"d2ed1b9b7b46829fe3199afe9a8bc203f201b175":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["bde51b089eb7f86171eb3406e38a274743f9b7ac","160d004a0e8f5361a446f9d01456aee1c1af20dc"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["01e5948db9a07144112d2f08f28ca2e3cd880348"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["d572389229127c297dd1fa5ce4758e1cec41e799","81cc37e458a3bdbe82fc7b807a5d1a59b06f9191"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"19b281157bd1e723dc9a712b6058506090cf2a8a":["962d04139994fce5193143ef35615499a9a96d78"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["bb9b72f7c3d7827c64dd4ec580ded81778da361d","81cc37e458a3bdbe82fc7b807a5d1a59b06f9191"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6c18273ea5b3974d2f30117f46f1ae416c28f727":["d572389229127c297dd1fa5ce4758e1cec41e799"],"7ab99e8c71442b92c320e218141dee04a9b91ce8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["d619839baa8ce5503e496b94a9e42ad6f079293f","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"d572389229127c297dd1fa5ce4758e1cec41e799":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["f2c5f0cb44df114db4228c8f77861714b5cabaea","19b281157bd1e723dc9a712b6058506090cf2a8a"],"962d04139994fce5193143ef35615499a9a96d78":["45669a651c970812a680841b97a77cce06af559f","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"160d004a0e8f5361a446f9d01456aee1c1af20dc":["81cc37e458a3bdbe82fc7b807a5d1a59b06f9191"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["29ef99d61cda9641b6250bf9567329a6e65f901d","160d004a0e8f5361a446f9d01456aee1c1af20dc"],"a3776dccca01c11e7046323cfad46a3b4a471233":["160d004a0e8f5361a446f9d01456aee1c1af20dc","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"45669a651c970812a680841b97a77cce06af559f":["d2ed1b9b7b46829fe3199afe9a8bc203f201b175","01e5948db9a07144112d2f08f28ca2e3cd880348"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"01e5948db9a07144112d2f08f28ca2e3cd880348":["f2c5f0cb44df114db4228c8f77861714b5cabaea","45669a651c970812a680841b97a77cce06af559f"],"fd9325c7ff9928fabe81c28553b41fc7aa57dfab":["bb9b72f7c3d7827c64dd4ec580ded81778da361d","81cc37e458a3bdbe82fc7b807a5d1a59b06f9191"],"81cc37e458a3bdbe82fc7b807a5d1a59b06f9191":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","160d004a0e8f5361a446f9d01456aee1c1af20dc"],"d2ed1b9b7b46829fe3199afe9a8bc203f201b175":["45669a651c970812a680841b97a77cce06af559f"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["d2ed1b9b7b46829fe3199afe9a8bc203f201b175"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["b3e06be49006ecac364d39d12b9c9f74882f9b9f","962d04139994fce5193143ef35615499a9a96d78"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"19b281157bd1e723dc9a712b6058506090cf2a8a":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"6c18273ea5b3974d2f30117f46f1ae416c28f727":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7ab99e8c71442b92c320e218141dee04a9b91ce8":["d572389229127c297dd1fa5ce4758e1cec41e799"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b","135621f3a0670a9394eb563224a3b76cc4dddc0f","a3776dccca01c11e7046323cfad46a3b4a471233"],"d572389229127c297dd1fa5ce4758e1cec41e799":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fd9325c7ff9928fabe81c28553b41fc7aa57dfab","29ef99d61cda9641b6250bf9567329a6e65f901d","6c18273ea5b3974d2f30117f46f1ae416c28f727"],"962d04139994fce5193143ef35615499a9a96d78":["19b281157bd1e723dc9a712b6058506090cf2a8a"],"160d004a0e8f5361a446f9d01456aee1c1af20dc":["01e5948db9a07144112d2f08f28ca2e3cd880348","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","a3776dccca01c11e7046323cfad46a3b4a471233"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"45669a651c970812a680841b97a77cce06af559f":["962d04139994fce5193143ef35615499a9a96d78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}