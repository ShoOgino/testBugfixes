{"path":"lucene/src/java/org/apache/lucene/codecs/BlockTermsWriter#BlockTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/BlockTermsWriter#BlockTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsWriter#BlockTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase).mjava","sourceNew":"  public BlockTermsWriter(TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state, PostingsWriterBase postingsWriter)\n      throws IOException {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.segmentSuffix, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    out = state.directory.createOutput(termsFileName, state.context);\n    boolean success = false;\n    try {\n      fieldInfos = state.fieldInfos;\n      writeHeader(out);\n      currentField = null;\n      this.postingsWriter = postingsWriter;\n      // segment = state.segmentName;\n      \n      //System.out.println(\"BTW.init seg=\" + state.segmentName);\n      \n      postingsWriter.start(out); // have consumer write its format/header\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":"  public BlockTermsWriter(TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state, PostingsWriterBase postingsWriter)\n      throws IOException {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.segmentSuffix, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    out = state.directory.createOutput(termsFileName, state.context);\n    boolean success = false;\n    try {\n      fieldInfos = state.fieldInfos;\n      writeHeader(out);\n      currentField = null;\n      this.postingsWriter = postingsWriter;\n      // segment = state.segmentName;\n      \n      //System.out.println(\"BTW.init seg=\" + state.segmentName);\n      \n      postingsWriter.start(out); // have consumer write its format/header\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/BlockTermsWriter#BlockTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/BlockTermsWriter#BlockTermsWriter(TermsIndexWriterBase,SegmentWriteState,PostingsWriterBase).mjava","sourceNew":"  public BlockTermsWriter(TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state, PostingsWriterBase postingsWriter)\n      throws IOException {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.segmentSuffix, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    out = state.directory.createOutput(termsFileName, state.context);\n    boolean success = false;\n    try {\n      fieldInfos = state.fieldInfos;\n      writeHeader(out);\n      currentField = null;\n      this.postingsWriter = postingsWriter;\n      // segment = state.segmentName;\n      \n      //System.out.println(\"BTW.init seg=\" + state.segmentName);\n      \n      postingsWriter.start(out); // have consumer write its format/header\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":"  public BlockTermsWriter(TermsIndexWriterBase termsIndexWriter,\n      SegmentWriteState state, PostingsWriterBase postingsWriter)\n      throws IOException {\n    final String termsFileName = IndexFileNames.segmentFileName(state.segmentName, state.segmentSuffix, TERMS_EXTENSION);\n    this.termsIndexWriter = termsIndexWriter;\n    out = state.directory.createOutput(termsFileName, state.context);\n    boolean success = false;\n    try {\n      fieldInfos = state.fieldInfos;\n      writeHeader(out);\n      currentField = null;\n      this.postingsWriter = postingsWriter;\n      // segment = state.segmentName;\n      \n      //System.out.println(\"BTW.init seg=\" + state.segmentName);\n      \n      postingsWriter.start(out); // have consumer write its format/header\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}