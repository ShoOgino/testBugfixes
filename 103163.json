{"path":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testQueryCollapse().mjava","commits":[{"id":"c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d","date":1382570352,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testQueryCollapse().mjava","pathOld":"/dev/null","sourceNew":"  public void testQueryCollapse() throws Exception {\n    SolrQueryRequest req = req(\"myField\",\"foo_s\");\n    try {\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField}\");\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f9eac2f0b568b3694682edb863185a273fbbc6f","date":1391883217,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testQueryCollapse().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testQueryCollapse().mjava","sourceNew":"  public void testQueryCollapse() throws Exception {\n    SolrQueryRequest req = req(\"myField\",\"foo_s\");\n\n    try {\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField max=a}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField min=a}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField max=a nullPolicy=expand}\");\n\n      //Add boosted documents to the request context.\n      Map context = req.getContext();\n      Set boosted = new HashSet();\n      boosted.add(\"doc1\");\n      boosted.add(\"doc2\");\n      context.put(\"BOOSTED\", boosted);\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField min=a}\",\n          \"{!collapse field=$myField min=a nullPolicy=ignore}\");\n\n\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  public void testQueryCollapse() throws Exception {\n    SolrQueryRequest req = req(\"myField\",\"foo_s\");\n    try {\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField}\");\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0325de99180d346d61d36938843a5c8451fe26ae","date":1447368726,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testQueryCollapse().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testQueryCollapse().mjava","sourceNew":"  public void testQueryCollapse() throws Exception {\n    SolrQueryRequest req = req(\"myField\",\"foo_s\",\n                               \"g_sort\",\"foo_s1 asc, foo_i desc\");\n\n    try {\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField max=a}\");\n\n      assertQueryEquals(\"collapse\", req,\n                        \"{!collapse field=$myField min=a}\",\n                        \"{!collapse field=$myField min=a nullPolicy=ignore}\");\n      \n      assertQueryEquals(\"collapse\", req,\n                        \"{!collapse field=$myField sort=$g_sort}\",\n                        \"{!collapse field=$myField sort='foo_s1 asc, foo_i desc'}\",\n                        \"{!collapse field=$myField sort=$g_sort nullPolicy=ignore}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField max=a nullPolicy=expand}\");\n\n      //Add boosted documents to the request context.\n      Map context = req.getContext();\n      Set boosted = new HashSet();\n      boosted.add(\"doc1\");\n      boosted.add(\"doc2\");\n      context.put(\"BOOSTED\", boosted);\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField min=a}\",\n          \"{!collapse field=$myField min=a nullPolicy=ignore}\");\n\n\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  public void testQueryCollapse() throws Exception {\n    SolrQueryRequest req = req(\"myField\",\"foo_s\");\n\n    try {\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField max=a}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField min=a}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField max=a nullPolicy=expand}\");\n\n      //Add boosted documents to the request context.\n      Map context = req.getContext();\n      Set boosted = new HashSet();\n      boosted.add(\"doc1\");\n      boosted.add(\"doc2\");\n      context.put(\"BOOSTED\", boosted);\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField min=a}\",\n          \"{!collapse field=$myField min=a nullPolicy=ignore}\");\n\n\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89261f2e2f1daac6de850bf45b31f5b8d3573f29","date":1537189734,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testQueryCollapse().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testQueryCollapse().mjava","sourceNew":"  public void testQueryCollapse() throws Exception {\n    SolrQueryRequest req = req(\"myField\",\"foo_s1\",\n                               \"g_sort\",\"foo_s1 asc, foo_i desc\");\n\n    try {\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField max=a}\");\n\n      assertQueryEquals(\"collapse\", req,\n                        \"{!collapse field=$myField min=a}\",\n                        \"{!collapse field=$myField min=a nullPolicy=ignore}\");\n      \n      assertQueryEquals(\"collapse\", req,\n                        \"{!collapse field=$myField sort=$g_sort}\",\n                        \"{!collapse field=$myField sort='foo_s1 asc, foo_i desc'}\",\n                        \"{!collapse field=$myField sort=$g_sort nullPolicy=ignore}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField max=a nullPolicy=expand}\");\n\n      //Add boosted documents to the request context.\n      Map context = req.getContext();\n      Set boosted = new HashSet();\n      boosted.add(\"doc1\");\n      boosted.add(\"doc2\");\n      context.put(\"BOOSTED\", boosted);\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField min=a}\",\n          \"{!collapse field=$myField min=a nullPolicy=ignore}\");\n\n\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  public void testQueryCollapse() throws Exception {\n    SolrQueryRequest req = req(\"myField\",\"foo_s\",\n                               \"g_sort\",\"foo_s1 asc, foo_i desc\");\n\n    try {\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField max=a}\");\n\n      assertQueryEquals(\"collapse\", req,\n                        \"{!collapse field=$myField min=a}\",\n                        \"{!collapse field=$myField min=a nullPolicy=ignore}\");\n      \n      assertQueryEquals(\"collapse\", req,\n                        \"{!collapse field=$myField sort=$g_sort}\",\n                        \"{!collapse field=$myField sort='foo_s1 asc, foo_i desc'}\",\n                        \"{!collapse field=$myField sort=$g_sort nullPolicy=ignore}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField max=a nullPolicy=expand}\");\n\n      //Add boosted documents to the request context.\n      Map context = req.getContext();\n      Set boosted = new HashSet();\n      boosted.add(\"doc1\");\n      boosted.add(\"doc2\");\n      context.put(\"BOOSTED\", boosted);\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField min=a}\",\n          \"{!collapse field=$myField min=a nullPolicy=ignore}\");\n\n\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a18e3c53fdd9e2e8f2bdb3b21ca3964273a2b5b0","date":1576656084,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testQueryCollapse().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testQueryCollapse().mjava","sourceNew":"  public void testQueryCollapse() throws Exception {\n    SolrQueryRequest req = req(\"myField\",\"foo_s1\",\n                               \"g_sort\",\"foo_s1 asc, foo_i desc\");\n\n    try {\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField max=a}\");\n\n      assertQueryEquals(\"collapse\", req,\n                        \"{!collapse field=$myField min=a}\",\n                        \"{!collapse field=$myField min=a nullPolicy=ignore}\");\n\n      assertQueryEquals(\"collapse\", req,\n                        \"{!collapse field=$myField sort=$g_sort}\",\n                        \"{!collapse field=$myField sort='foo_s1 asc, foo_i desc'}\",\n                        \"{!collapse field=$myField sort=$g_sort nullPolicy=ignore}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField max=a nullPolicy=expand}\");\n\n      //Add boosted documents to the request context.\n      Map context = req.getContext();\n      Set boosted = new HashSet();\n      boosted.add(\"doc1\");\n      boosted.add(\"doc2\");\n      context.put(\"BOOSTED\", boosted);\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField min=a}\",\n          \"{!collapse field=$myField min=a nullPolicy=ignore}\");\n\n\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  public void testQueryCollapse() throws Exception {\n    SolrQueryRequest req = req(\"myField\",\"foo_s1\",\n                               \"g_sort\",\"foo_s1 asc, foo_i desc\");\n\n    try {\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField max=a}\");\n\n      assertQueryEquals(\"collapse\", req,\n                        \"{!collapse field=$myField min=a}\",\n                        \"{!collapse field=$myField min=a nullPolicy=ignore}\");\n      \n      assertQueryEquals(\"collapse\", req,\n                        \"{!collapse field=$myField sort=$g_sort}\",\n                        \"{!collapse field=$myField sort='foo_s1 asc, foo_i desc'}\",\n                        \"{!collapse field=$myField sort=$g_sort nullPolicy=ignore}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField max=a nullPolicy=expand}\");\n\n      //Add boosted documents to the request context.\n      Map context = req.getContext();\n      Set boosted = new HashSet();\n      boosted.add(\"doc1\");\n      boosted.add(\"doc2\");\n      context.put(\"BOOSTED\", boosted);\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField min=a}\",\n          \"{!collapse field=$myField min=a nullPolicy=ignore}\");\n\n\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"246314af59d76a47fccc31e9494eefee01ec9c00","date":1576657955,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testQueryCollapse().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testQueryCollapse().mjava","sourceNew":"  public void testQueryCollapse() throws Exception {\n    SolrQueryRequest req = req(\"myField\",\"foo_s1\",\n                               \"g_sort\",\"foo_s1 asc, foo_i desc\");\n\n    try {\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField max=a}\");\n\n      assertQueryEquals(\"collapse\", req,\n                        \"{!collapse field=$myField min=a}\",\n                        \"{!collapse field=$myField min=a nullPolicy=ignore}\");\n\n      assertQueryEquals(\"collapse\", req,\n                        \"{!collapse field=$myField sort=$g_sort}\",\n                        \"{!collapse field=$myField sort='foo_s1 asc, foo_i desc'}\",\n                        \"{!collapse field=$myField sort=$g_sort nullPolicy=ignore}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField max=a nullPolicy=expand}\");\n\n      //Add boosted documents to the request context.\n      Map context = req.getContext();\n      Set boosted = new HashSet();\n      boosted.add(\"doc1\");\n      boosted.add(\"doc2\");\n      context.put(\"BOOSTED\", boosted);\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField min=a}\",\n          \"{!collapse field=$myField min=a nullPolicy=ignore}\");\n\n\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  public void testQueryCollapse() throws Exception {\n    SolrQueryRequest req = req(\"myField\",\"foo_s1\",\n                               \"g_sort\",\"foo_s1 asc, foo_i desc\");\n\n    try {\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField max=a}\");\n\n      assertQueryEquals(\"collapse\", req,\n                        \"{!collapse field=$myField min=a}\",\n                        \"{!collapse field=$myField min=a nullPolicy=ignore}\");\n      \n      assertQueryEquals(\"collapse\", req,\n                        \"{!collapse field=$myField sort=$g_sort}\",\n                        \"{!collapse field=$myField sort='foo_s1 asc, foo_i desc'}\",\n                        \"{!collapse field=$myField sort=$g_sort nullPolicy=ignore}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField max=a nullPolicy=expand}\");\n\n      //Add boosted documents to the request context.\n      Map context = req.getContext();\n      Set boosted = new HashSet();\n      boosted.add(\"doc1\");\n      boosted.add(\"doc2\");\n      context.put(\"BOOSTED\", boosted);\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField min=a}\",\n          \"{!collapse field=$myField min=a nullPolicy=ignore}\");\n\n\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testQueryCollapse().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testQueryCollapse().mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  public void testQueryCollapse() throws Exception {\n    SolrQueryRequest req = req(\"myField\",\"foo_s1\",\n                               \"g_sort\",\"foo_s1 asc, foo_i desc\");\n\n    try {\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField max=a}\");\n\n      assertQueryEquals(\"collapse\", req,\n                        \"{!collapse field=$myField min=a}\",\n                        \"{!collapse field=$myField min=a nullPolicy=ignore}\");\n\n      assertQueryEquals(\"collapse\", req,\n                        \"{!collapse field=$myField sort=$g_sort}\",\n                        \"{!collapse field=$myField sort='foo_s1 asc, foo_i desc'}\",\n                        \"{!collapse field=$myField sort=$g_sort nullPolicy=ignore}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField max=a nullPolicy=expand}\");\n\n      //Add boosted documents to the request context.\n      @SuppressWarnings({\"rawtypes\"})\n      Map context = req.getContext();\n      @SuppressWarnings({\"rawtypes\"})\n      Set boosted = new HashSet();\n      boosted.add(\"doc1\");\n      boosted.add(\"doc2\");\n      context.put(\"BOOSTED\", boosted);\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField min=a}\",\n          \"{!collapse field=$myField min=a nullPolicy=ignore}\");\n\n\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  public void testQueryCollapse() throws Exception {\n    SolrQueryRequest req = req(\"myField\",\"foo_s1\",\n                               \"g_sort\",\"foo_s1 asc, foo_i desc\");\n\n    try {\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField max=a}\");\n\n      assertQueryEquals(\"collapse\", req,\n                        \"{!collapse field=$myField min=a}\",\n                        \"{!collapse field=$myField min=a nullPolicy=ignore}\");\n\n      assertQueryEquals(\"collapse\", req,\n                        \"{!collapse field=$myField sort=$g_sort}\",\n                        \"{!collapse field=$myField sort='foo_s1 asc, foo_i desc'}\",\n                        \"{!collapse field=$myField sort=$g_sort nullPolicy=ignore}\");\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField max=a nullPolicy=expand}\");\n\n      //Add boosted documents to the request context.\n      Map context = req.getContext();\n      Set boosted = new HashSet();\n      boosted.add(\"doc1\");\n      boosted.add(\"doc2\");\n      context.put(\"BOOSTED\", boosted);\n\n      assertQueryEquals(\"collapse\", req,\n          \"{!collapse field=$myField min=a}\",\n          \"{!collapse field=$myField min=a nullPolicy=ignore}\");\n\n\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"246314af59d76a47fccc31e9494eefee01ec9c00":["89261f2e2f1daac6de850bf45b31f5b8d3573f29","a18e3c53fdd9e2e8f2bdb3b21ca3964273a2b5b0"],"89261f2e2f1daac6de850bf45b31f5b8d3573f29":["0325de99180d346d61d36938843a5c8451fe26ae"],"c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6f9eac2f0b568b3694682edb863185a273fbbc6f":["c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d"],"0325de99180d346d61d36938843a5c8451fe26ae":["6f9eac2f0b568b3694682edb863185a273fbbc6f"],"a18e3c53fdd9e2e8f2bdb3b21ca3964273a2b5b0":["89261f2e2f1daac6de850bf45b31f5b8d3573f29"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["a18e3c53fdd9e2e8f2bdb3b21ca3964273a2b5b0"]},"commit2Childs":{"246314af59d76a47fccc31e9494eefee01ec9c00":[],"89261f2e2f1daac6de850bf45b31f5b8d3573f29":["246314af59d76a47fccc31e9494eefee01ec9c00","a18e3c53fdd9e2e8f2bdb3b21ca3964273a2b5b0"],"c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d":["6f9eac2f0b568b3694682edb863185a273fbbc6f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c1a89fbf5a750bffb59fe3bf0779dd9fb5ee0c4d"],"6f9eac2f0b568b3694682edb863185a273fbbc6f":["0325de99180d346d61d36938843a5c8451fe26ae"],"0325de99180d346d61d36938843a5c8451fe26ae":["89261f2e2f1daac6de850bf45b31f5b8d3573f29"],"a18e3c53fdd9e2e8f2bdb3b21ca3964273a2b5b0":["246314af59d76a47fccc31e9494eefee01ec9c00","e98520789adb1d5ad05afb4956eca0944a929688"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["246314af59d76a47fccc31e9494eefee01ec9c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}