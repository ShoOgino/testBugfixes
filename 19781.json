{"path":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomByteBlockAllocator().mjava","commits":[{"id":"30fd30bfbfa6b9e036bcd99c8339712e965d4a63","date":1351859294,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomByteBlockAllocator().mjava","pathOld":"/dev/null","sourceNew":"  private Allocator randomByteBlockAllocator() {\n    if (random().nextBoolean()) {\n      return new RecyclingByteBlockAllocator();\n    } else {\n      return new ByteBlockPool.DirectAllocator();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"761333d77c7f29123c00c93b107b743f32f012e6","date":1411986072,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndexAgainstRAMDir#randomByteBlockAllocator().mjava","pathOld":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomByteBlockAllocator().mjava","sourceNew":"  private Allocator randomByteBlockAllocator() {\n    if (random().nextBoolean()) {\n      return new RecyclingByteBlockAllocator();\n    } else {\n      return new ByteBlockPool.DirectAllocator();\n    }\n  }\n\n","sourceOld":"  private Allocator randomByteBlockAllocator() {\n    if (random().nextBoolean()) {\n      return new RecyclingByteBlockAllocator();\n    } else {\n      return new ByteBlockPool.DirectAllocator();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndexAgainstRAMDir#randomByteBlockAllocator().mjava","pathOld":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#randomByteBlockAllocator().mjava","sourceNew":"  private Allocator randomByteBlockAllocator() {\n    if (random().nextBoolean()) {\n      return new RecyclingByteBlockAllocator();\n    } else {\n      return new ByteBlockPool.DirectAllocator();\n    }\n  }\n\n","sourceOld":"  private Allocator randomByteBlockAllocator() {\n    if (random().nextBoolean()) {\n      return new RecyclingByteBlockAllocator();\n    } else {\n      return new ByteBlockPool.DirectAllocator();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"30fd30bfbfa6b9e036bcd99c8339712e965d4a63":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["30fd30bfbfa6b9e036bcd99c8339712e965d4a63","761333d77c7f29123c00c93b107b743f32f012e6"],"761333d77c7f29123c00c93b107b743f32f012e6":["30fd30bfbfa6b9e036bcd99c8339712e965d4a63"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["761333d77c7f29123c00c93b107b743f32f012e6"]},"commit2Childs":{"30fd30bfbfa6b9e036bcd99c8339712e965d4a63":["d9a47902d6207303f5ed3e7aaca62ca33433af66","761333d77c7f29123c00c93b107b743f32f012e6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30fd30bfbfa6b9e036bcd99c8339712e965d4a63"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"761333d77c7f29123c00c93b107b743f32f012e6":["d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}