{"path":"contrib/queries/src/java/org/apache/lucene/search/trie/AbstractTrieRangeFilter#asQuery().mjava","commits":[{"id":"d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0","date":1234549621,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/trie/AbstractTrieRangeFilter#asQuery().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns this range filter as a query.\r\n   * Using this method, it is possible to create a Query using <code>new {Long|Int}TrieRangeFilter(....).asQuery()</code>.\r\n   * This is a synonym for wrapping with a {@link ConstantScoreQuery},\r\n   * but this query returns a better <code>toString()</code> variant.\r\n   */\r\n  public Query asQuery() {\r\n    return new ConstantScoreQuery(this) {\r\n    \r\n      /** this instance return a nicer String variant than the original {@link ConstantScoreQuery} */\r\n      //@Override\r\n      public String toString(final String field) {\r\n        // return a more convenient representation of this query than ConstantScoreQuery does:\r\n        return ((AbstractTrieRangeFilter) filter).toString(field)+ToStringUtils.boost(getBoost());\r\n      }\r\n\r\n    };\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9c5935b70b4650c37e1ac32e6ee4f93ee4449cc","date":1239886708,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/queries/src/java/org/apache/lucene/search/trie/AbstractTrieRangeFilter#asQuery().mjava","sourceNew":null,"sourceOld":"  /** Returns this range filter as a query.\r\n   * Using this method, it is possible to create a Query using <code>new {Long|Int}TrieRangeFilter(....).asQuery()</code>.\r\n   * This is a synonym for wrapping with a {@link ConstantScoreQuery},\r\n   * but this query returns a better <code>toString()</code> variant.\r\n   */\r\n  public Query asQuery() {\r\n    return new ConstantScoreQuery(this) {\r\n    \r\n      /** this instance return a nicer String variant than the original {@link ConstantScoreQuery} */\r\n      //@Override\r\n      public String toString(final String field) {\r\n        // return a more convenient representation of this query than ConstantScoreQuery does:\r\n        return ((AbstractTrieRangeFilter) filter).toString(field)+ToStringUtils.boost(getBoost());\r\n      }\r\n\r\n    };\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9c5935b70b4650c37e1ac32e6ee4f93ee4449cc":["d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9c5935b70b4650c37e1ac32e6ee4f93ee4449cc"]},"commit2Childs":{"d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0":["c9c5935b70b4650c37e1ac32e6ee4f93ee4449cc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0"],"c9c5935b70b4650c37e1ac32e6ee4f93ee4449cc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}