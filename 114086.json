{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/tr/TestApostropheFilterFactory#testBogusArguments().mjava","commits":[{"id":"e6367f005680cc618a2b075ccaff1b241484be38","date":1393620092,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/tr/TestApostropheFilterFactory#testBogusArguments().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test that bogus arguments result in exception\n   */\n  public void testBogusArguments() throws Exception {\n    try {\n      tokenFilterFactory(\"Apostrophe\", \"bogusArg\", \"bogusValue\");\n      fail();\n    } catch (IllegalArgumentException expected) {\n      assertTrue(expected.getMessage().contains(\"Unknown parameter(s):\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/tr/TestApostropheFilterFactory#testBogusArguments().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/tr/TestApostropheFilterFactory#testBogusArguments().mjava","sourceNew":"  /**\n   * Test that bogus arguments result in exception\n   */\n  public void testBogusArguments() throws Exception {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      tokenFilterFactory(\"Apostrophe\", \"bogusArg\", \"bogusValue\");\n    });\n    assertTrue(expected.getMessage().contains(\"Unknown parameter(s):\"));\n  }\n\n","sourceOld":"  /**\n   * Test that bogus arguments result in exception\n   */\n  public void testBogusArguments() throws Exception {\n    try {\n      tokenFilterFactory(\"Apostrophe\", \"bogusArg\", \"bogusValue\");\n      fail();\n    } catch (IllegalArgumentException expected) {\n      assertTrue(expected.getMessage().contains(\"Unknown parameter(s):\"));\n    }\n  }\n\n","bugFix":["e6367f005680cc618a2b075ccaff1b241484be38"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["e6367f005680cc618a2b075ccaff1b241484be38"],"e6367f005680cc618a2b075ccaff1b241484be38":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e6367f005680cc618a2b075ccaff1b241484be38"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6367f005680cc618a2b075ccaff1b241484be38":["05fe562aa248790944d43cdd478f512572835ba0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}