{"path":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testInvalidLeadWithAny().mjava","commits":[{"id":"06a4493f0c732d2928d1a4f773f15d19434aa8ba","date":1405856163,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testInvalidLeadWithAny().mjava","pathOld":"/dev/null","sourceNew":"  public void testInvalidLeadWithAny() throws Exception {\n    TermAutomatonQuery q = new TermAutomatonQuery(\"field\");\n    int s0 = q.createState();\n    int s1 = q.createState();\n    int s2 = q.createState();\n    q.setAccept(s2, true);\n    q.addAnyTransition(s0, s1);\n    q.addTransition(s1, s2, \"b\");\n    try {\n      q.finish();\n      fail(\"did not hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testInvalidLeadWithAny().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestTermAutomatonQuery#testInvalidLeadWithAny().mjava","sourceNew":"  public void testInvalidLeadWithAny() throws Exception {\n    TermAutomatonQuery q = new TermAutomatonQuery(\"field\");\n    int s0 = q.createState();\n    int s1 = q.createState();\n    int s2 = q.createState();\n    q.setAccept(s2, true);\n    q.addAnyTransition(s0, s1);\n    q.addTransition(s1, s2, \"b\");\n    expectThrows(IllegalStateException.class, () -> {\n      q.finish();\n    });\n  }\n\n","sourceOld":"  public void testInvalidLeadWithAny() throws Exception {\n    TermAutomatonQuery q = new TermAutomatonQuery(\"field\");\n    int s0 = q.createState();\n    int s1 = q.createState();\n    int s2 = q.createState();\n    q.setAccept(s2, true);\n    q.addAnyTransition(s0, s1);\n    q.addTransition(s1, s2, \"b\");\n    try {\n      q.finish();\n      fail(\"did not hit expected exception\");\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n  }\n\n","bugFix":["06a4493f0c732d2928d1a4f773f15d19434aa8ba"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["06a4493f0c732d2928d1a4f773f15d19434aa8ba"],"06a4493f0c732d2928d1a4f773f15d19434aa8ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["06a4493f0c732d2928d1a4f773f15d19434aa8ba"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"06a4493f0c732d2928d1a4f773f15d19434aa8ba":["05fe562aa248790944d43cdd478f512572835ba0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}