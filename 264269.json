{"path":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#testAnalyzer().mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#testAnalyzer().mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#testAnalyzer().mjava","sourceNew":"\tpublic void testAnalyzer() throws Exception {\n\t\tFrenchAnalyzer fa = new FrenchAnalyzer();\n\t\n\t\t// test null reader\n\t\tboolean iaeFlag = false;\n\t\ttry {\n\t\t\tfa.tokenStream(\"dummy\", null);\n\t\t} catch (IllegalArgumentException iae) {\n\t\t\tiaeFlag = true;\n\t\t}\n\t\tassertEquals(iaeFlag, true);\n\n\t\t// test null fieldname\n\t\tiaeFlag = false;\n\t\ttry {\n\t\t\tfa.tokenStream(null, new StringReader(\"dummy\"));\n\t\t} catch (IllegalArgumentException iae) {\n\t\t\tiaeFlag = true;\n\t\t}\n\t\tassertEquals(iaeFlag, true);\n\n\t\tassertAnalyzesTo(fa, \"\", new String[] {\n\t\t});\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"chien chat cheval\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"chien CHAT CHEVAL\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"  chien  ,? + = -  CHAT /: > CHEVAL\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(fa, \"chien++\", new String[] { \"chien\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"mot \\\"entreguillemet\\\"\",\n\t\t\tnew String[] { \"mot\", \"entreguillemet\" });\n\n\t\t// let's do some french specific tests now\t\n\n\t\t/* 1. couldn't resist\n\t\t I would expect this to stay one term as in French the minus \n\t\tsign is often used for composing words */\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"Jean-François\",\n\t\t\tnew String[] { \"jean\", \"françois\" });\n\n\t\t// 2. stopwords\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"le la chien les aux chat du des à cheval\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\t// some nouns and adjectives\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"lances chismes habitable chiste éléments captifs\",\n\t\t\tnew String[] {\n\t\t\t\t\"lanc\",\n\t\t\t\t\"chism\",\n\t\t\t\t\"habit\",\n\t\t\t\t\"chist\",\n\t\t\t\t\"élément\",\n\t\t\t\t\"captif\" });\n\n\t\t// some verbs\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"finissions souffrirent rugissante\",\n\t\t\tnew String[] { \"fin\", \"souffr\", \"rug\" });\n\n\t\t// some everything else\n\t\t// aujourd'hui stays one term which is OK\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"C3PO aujourd'hui oeuf ïâöûàä anticonstitutionnellement Java++ \",\n\t\t\tnew String[] {\n\t\t\t\t\"c3po\",\n\t\t\t\t\"aujourd'hui\",\n\t\t\t\t\"oeuf\",\n\t\t\t\t\"ïâöûàä\",\n\t\t\t\t\"anticonstitutionnel\",\n\t\t\t\t\"jav\" });\n\n\t\t// some more everything else\n\t\t// here 1940-1945 stays as one term, 1940:1945 not ?\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"33Bis 1940-1945 1940:1945 (---i+++)*\",\n\t\t\tnew String[] { \"33bis\", \"1940-1945\", \"1940\", \"1945\", \"i\" });\n\n\t}\n\n","sourceOld":"\tpublic void testAnalyzer() throws Exception {\n\t\tFrenchAnalyzer fa = new FrenchAnalyzer();\n\t\n\t\t// test null reader\n\t\tboolean iaeFlag = false;\n\t\ttry {\n\t\t\tfa.tokenStream(\"dummy\", null);\n\t\t} catch (IllegalArgumentException iae) {\n\t\t\tiaeFlag = true;\n\t\t}\n\t\tassertEquals(iaeFlag, true);\n\n\t\t// test null fieldname\n\t\tiaeFlag = false;\n\t\ttry {\n\t\t\tfa.tokenStream(null, new StringReader(\"dummy\"));\n\t\t} catch (IllegalArgumentException iae) {\n\t\t\tiaeFlag = true;\n\t\t}\n\t\tassertEquals(iaeFlag, true);\n\n\t\tassertAnalyzesTo(fa, \"\", new String[] {\n\t\t});\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"chien chat cheval\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"chien CHAT CHEVAL\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"  chien  ,? + = -  CHAT /: > CHEVAL\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(fa, \"chien++\", new String[] { \"chien\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"mot \\\"entreguillemet\\\"\",\n\t\t\tnew String[] { \"mot\", \"entreguillemet\" });\n\n\t\t// let's do some french specific tests now\t\n\n\t\t/* 1. couldn't resist\n\t\t I would expect this to stay one term as in French the minus \n\t\tsign is often used for composing words */\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"Jean-François\",\n\t\t\tnew String[] { \"jean\", \"françois\" });\n\n\t\t// 2. stopwords\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"le la chien les aux chat du des à cheval\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\t// some nouns and adjectives\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"lances chismes habitable chiste éléments captifs\",\n\t\t\tnew String[] {\n\t\t\t\t\"lanc\",\n\t\t\t\t\"chism\",\n\t\t\t\t\"habit\",\n\t\t\t\t\"chist\",\n\t\t\t\t\"élément\",\n\t\t\t\t\"captif\" });\n\n\t\t// some verbs\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"finissions souffrirent rugissante\",\n\t\t\tnew String[] { \"fin\", \"souffr\", \"rug\" });\n\n\t\t// some everything else\n\t\t// aujourd'hui stays one term which is OK\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"C3PO aujourd'hui oeuf ïâöûàä anticonstitutionnellement Java++ \",\n\t\t\tnew String[] {\n\t\t\t\t\"c3po\",\n\t\t\t\t\"aujourd'hui\",\n\t\t\t\t\"oeuf\",\n\t\t\t\t\"ïâöûàä\",\n\t\t\t\t\"anticonstitutionnel\",\n\t\t\t\t\"jav\" });\n\n\t\t// some more everything else\n\t\t// here 1940-1945 stays as one term, 1940:1945 not ?\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"33Bis 1940-1945 1940:1945 (---i+++)*\",\n\t\t\tnew String[] { \"33bis\", \"1940-1945\", \"1940\", \"1945\", \"i\" });\n\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c83a2e572295a9d2b63506929926d0522f61d386","date":1256184192,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#testAnalyzer().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#testAnalyzer().mjava","sourceNew":"\tpublic void testAnalyzer() throws Exception {\n\t\tFrenchAnalyzer fa = new FrenchAnalyzer();\n\t\n\t\tassertAnalyzesTo(fa, \"\", new String[] {\n\t\t});\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"chien chat cheval\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"chien CHAT CHEVAL\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"  chien  ,? + = -  CHAT /: > CHEVAL\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(fa, \"chien++\", new String[] { \"chien\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"mot \\\"entreguillemet\\\"\",\n\t\t\tnew String[] { \"mot\", \"entreguillemet\" });\n\n\t\t// let's do some french specific tests now\t\n\n\t\t/* 1. couldn't resist\n\t\t I would expect this to stay one term as in French the minus \n\t\tsign is often used for composing words */\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"Jean-François\",\n\t\t\tnew String[] { \"jean\", \"françois\" });\n\n\t\t// 2. stopwords\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"le la chien les aux chat du des à cheval\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\t// some nouns and adjectives\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"lances chismes habitable chiste éléments captifs\",\n\t\t\tnew String[] {\n\t\t\t\t\"lanc\",\n\t\t\t\t\"chism\",\n\t\t\t\t\"habit\",\n\t\t\t\t\"chist\",\n\t\t\t\t\"élément\",\n\t\t\t\t\"captif\" });\n\n\t\t// some verbs\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"finissions souffrirent rugissante\",\n\t\t\tnew String[] { \"fin\", \"souffr\", \"rug\" });\n\n\t\t// some everything else\n\t\t// aujourd'hui stays one term which is OK\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"C3PO aujourd'hui oeuf ïâöûàä anticonstitutionnellement Java++ \",\n\t\t\tnew String[] {\n\t\t\t\t\"c3po\",\n\t\t\t\t\"aujourd'hui\",\n\t\t\t\t\"oeuf\",\n\t\t\t\t\"ïâöûàä\",\n\t\t\t\t\"anticonstitutionnel\",\n\t\t\t\t\"jav\" });\n\n\t\t// some more everything else\n\t\t// here 1940-1945 stays as one term, 1940:1945 not ?\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"33Bis 1940-1945 1940:1945 (---i+++)*\",\n\t\t\tnew String[] { \"33bis\", \"1940-1945\", \"1940\", \"1945\", \"i\" });\n\n\t}\n\n","sourceOld":"\tpublic void testAnalyzer() throws Exception {\n\t\tFrenchAnalyzer fa = new FrenchAnalyzer();\n\t\n\t\t// test null reader\n\t\tboolean iaeFlag = false;\n\t\ttry {\n\t\t\tfa.tokenStream(\"dummy\", null);\n\t\t} catch (IllegalArgumentException iae) {\n\t\t\tiaeFlag = true;\n\t\t}\n\t\tassertEquals(iaeFlag, true);\n\n\t\t// test null fieldname\n\t\tiaeFlag = false;\n\t\ttry {\n\t\t\tfa.tokenStream(null, new StringReader(\"dummy\"));\n\t\t} catch (IllegalArgumentException iae) {\n\t\t\tiaeFlag = true;\n\t\t}\n\t\tassertEquals(iaeFlag, true);\n\n\t\tassertAnalyzesTo(fa, \"\", new String[] {\n\t\t});\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"chien chat cheval\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"chien CHAT CHEVAL\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"  chien  ,? + = -  CHAT /: > CHEVAL\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(fa, \"chien++\", new String[] { \"chien\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"mot \\\"entreguillemet\\\"\",\n\t\t\tnew String[] { \"mot\", \"entreguillemet\" });\n\n\t\t// let's do some french specific tests now\t\n\n\t\t/* 1. couldn't resist\n\t\t I would expect this to stay one term as in French the minus \n\t\tsign is often used for composing words */\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"Jean-François\",\n\t\t\tnew String[] { \"jean\", \"françois\" });\n\n\t\t// 2. stopwords\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"le la chien les aux chat du des à cheval\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\t// some nouns and adjectives\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"lances chismes habitable chiste éléments captifs\",\n\t\t\tnew String[] {\n\t\t\t\t\"lanc\",\n\t\t\t\t\"chism\",\n\t\t\t\t\"habit\",\n\t\t\t\t\"chist\",\n\t\t\t\t\"élément\",\n\t\t\t\t\"captif\" });\n\n\t\t// some verbs\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"finissions souffrirent rugissante\",\n\t\t\tnew String[] { \"fin\", \"souffr\", \"rug\" });\n\n\t\t// some everything else\n\t\t// aujourd'hui stays one term which is OK\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"C3PO aujourd'hui oeuf ïâöûàä anticonstitutionnellement Java++ \",\n\t\t\tnew String[] {\n\t\t\t\t\"c3po\",\n\t\t\t\t\"aujourd'hui\",\n\t\t\t\t\"oeuf\",\n\t\t\t\t\"ïâöûàä\",\n\t\t\t\t\"anticonstitutionnel\",\n\t\t\t\t\"jav\" });\n\n\t\t// some more everything else\n\t\t// here 1940-1945 stays as one term, 1940:1945 not ?\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"33Bis 1940-1945 1940:1945 (---i+++)*\",\n\t\t\tnew String[] { \"33bis\", \"1940-1945\", \"1940\", \"1945\", \"i\" });\n\n\t}\n\n","bugFix":["cc876d32607abc0047c0c7919922247efcfaf086","36f8536aad2e65f5a64d8784afd359db1b1f62d2","a28f2a02242055cc5e2dde7ed01137cf7ea6e3c1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#testAnalyzer().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#testAnalyzer().mjava","sourceNew":"\tpublic void testAnalyzer() throws Exception {\n\t\tFrenchAnalyzer fa = new FrenchAnalyzer(Version.LUCENE_CURRENT);\n\t\n\t\tassertAnalyzesTo(fa, \"\", new String[] {\n\t\t});\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"chien chat cheval\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"chien CHAT CHEVAL\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"  chien  ,? + = -  CHAT /: > CHEVAL\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(fa, \"chien++\", new String[] { \"chien\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"mot \\\"entreguillemet\\\"\",\n\t\t\tnew String[] { \"mot\", \"entreguillemet\" });\n\n\t\t// let's do some french specific tests now\t\n\n\t\t/* 1. couldn't resist\n\t\t I would expect this to stay one term as in French the minus \n\t\tsign is often used for composing words */\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"Jean-François\",\n\t\t\tnew String[] { \"jean\", \"françois\" });\n\n\t\t// 2. stopwords\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"le la chien les aux chat du des à cheval\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\t// some nouns and adjectives\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"lances chismes habitable chiste éléments captifs\",\n\t\t\tnew String[] {\n\t\t\t\t\"lanc\",\n\t\t\t\t\"chism\",\n\t\t\t\t\"habit\",\n\t\t\t\t\"chist\",\n\t\t\t\t\"élément\",\n\t\t\t\t\"captif\" });\n\n\t\t// some verbs\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"finissions souffrirent rugissante\",\n\t\t\tnew String[] { \"fin\", \"souffr\", \"rug\" });\n\n\t\t// some everything else\n\t\t// aujourd'hui stays one term which is OK\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"C3PO aujourd'hui oeuf ïâöûàä anticonstitutionnellement Java++ \",\n\t\t\tnew String[] {\n\t\t\t\t\"c3po\",\n\t\t\t\t\"aujourd'hui\",\n\t\t\t\t\"oeuf\",\n\t\t\t\t\"ïâöûàä\",\n\t\t\t\t\"anticonstitutionnel\",\n\t\t\t\t\"jav\" });\n\n\t\t// some more everything else\n\t\t// here 1940-1945 stays as one term, 1940:1945 not ?\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"33Bis 1940-1945 1940:1945 (---i+++)*\",\n\t\t\tnew String[] { \"33bis\", \"1940-1945\", \"1940\", \"1945\", \"i\" });\n\n\t}\n\n","sourceOld":"\tpublic void testAnalyzer() throws Exception {\n\t\tFrenchAnalyzer fa = new FrenchAnalyzer();\n\t\n\t\tassertAnalyzesTo(fa, \"\", new String[] {\n\t\t});\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"chien chat cheval\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"chien CHAT CHEVAL\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"  chien  ,? + = -  CHAT /: > CHEVAL\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(fa, \"chien++\", new String[] { \"chien\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"mot \\\"entreguillemet\\\"\",\n\t\t\tnew String[] { \"mot\", \"entreguillemet\" });\n\n\t\t// let's do some french specific tests now\t\n\n\t\t/* 1. couldn't resist\n\t\t I would expect this to stay one term as in French the minus \n\t\tsign is often used for composing words */\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"Jean-François\",\n\t\t\tnew String[] { \"jean\", \"françois\" });\n\n\t\t// 2. stopwords\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"le la chien les aux chat du des à cheval\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\t// some nouns and adjectives\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"lances chismes habitable chiste éléments captifs\",\n\t\t\tnew String[] {\n\t\t\t\t\"lanc\",\n\t\t\t\t\"chism\",\n\t\t\t\t\"habit\",\n\t\t\t\t\"chist\",\n\t\t\t\t\"élément\",\n\t\t\t\t\"captif\" });\n\n\t\t// some verbs\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"finissions souffrirent rugissante\",\n\t\t\tnew String[] { \"fin\", \"souffr\", \"rug\" });\n\n\t\t// some everything else\n\t\t// aujourd'hui stays one term which is OK\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"C3PO aujourd'hui oeuf ïâöûàä anticonstitutionnellement Java++ \",\n\t\t\tnew String[] {\n\t\t\t\t\"c3po\",\n\t\t\t\t\"aujourd'hui\",\n\t\t\t\t\"oeuf\",\n\t\t\t\t\"ïâöûàä\",\n\t\t\t\t\"anticonstitutionnel\",\n\t\t\t\t\"jav\" });\n\n\t\t// some more everything else\n\t\t// here 1940-1945 stays as one term, 1940:1945 not ?\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"33Bis 1940-1945 1940:1945 (---i+++)*\",\n\t\t\tnew String[] { \"33bis\", \"1940-1945\", \"1940\", \"1945\", \"i\" });\n\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#testAnalyzer().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#testAnalyzer().mjava","sourceNew":"\tpublic void testAnalyzer() throws Exception {\n\t\tFrenchAnalyzer fa = new FrenchAnalyzer(TEST_VERSION_CURRENT);\n\t\n\t\tassertAnalyzesTo(fa, \"\", new String[] {\n\t\t});\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"chien chat cheval\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"chien CHAT CHEVAL\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"  chien  ,? + = -  CHAT /: > CHEVAL\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(fa, \"chien++\", new String[] { \"chien\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"mot \\\"entreguillemet\\\"\",\n\t\t\tnew String[] { \"mot\", \"entreguillemet\" });\n\n\t\t// let's do some french specific tests now\t\n\n\t\t/* 1. couldn't resist\n\t\t I would expect this to stay one term as in French the minus \n\t\tsign is often used for composing words */\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"Jean-François\",\n\t\t\tnew String[] { \"jean\", \"françois\" });\n\n\t\t// 2. stopwords\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"le la chien les aux chat du des à cheval\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\t// some nouns and adjectives\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"lances chismes habitable chiste éléments captifs\",\n\t\t\tnew String[] {\n\t\t\t\t\"lanc\",\n\t\t\t\t\"chism\",\n\t\t\t\t\"habit\",\n\t\t\t\t\"chist\",\n\t\t\t\t\"élément\",\n\t\t\t\t\"captif\" });\n\n\t\t// some verbs\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"finissions souffrirent rugissante\",\n\t\t\tnew String[] { \"fin\", \"souffr\", \"rug\" });\n\n\t\t// some everything else\n\t\t// aujourd'hui stays one term which is OK\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"C3PO aujourd'hui oeuf ïâöûàä anticonstitutionnellement Java++ \",\n\t\t\tnew String[] {\n\t\t\t\t\"c3po\",\n\t\t\t\t\"aujourd'hui\",\n\t\t\t\t\"oeuf\",\n\t\t\t\t\"ïâöûàä\",\n\t\t\t\t\"anticonstitutionnel\",\n\t\t\t\t\"jav\" });\n\n\t\t// some more everything else\n\t\t// here 1940-1945 stays as one term, 1940:1945 not ?\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"33Bis 1940-1945 1940:1945 (---i+++)*\",\n\t\t\tnew String[] { \"33bis\", \"1940-1945\", \"1940\", \"1945\", \"i\" });\n\n\t}\n\n","sourceOld":"\tpublic void testAnalyzer() throws Exception {\n\t\tFrenchAnalyzer fa = new FrenchAnalyzer(Version.LUCENE_CURRENT);\n\t\n\t\tassertAnalyzesTo(fa, \"\", new String[] {\n\t\t});\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"chien chat cheval\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"chien CHAT CHEVAL\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"  chien  ,? + = -  CHAT /: > CHEVAL\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(fa, \"chien++\", new String[] { \"chien\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"mot \\\"entreguillemet\\\"\",\n\t\t\tnew String[] { \"mot\", \"entreguillemet\" });\n\n\t\t// let's do some french specific tests now\t\n\n\t\t/* 1. couldn't resist\n\t\t I would expect this to stay one term as in French the minus \n\t\tsign is often used for composing words */\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"Jean-François\",\n\t\t\tnew String[] { \"jean\", \"françois\" });\n\n\t\t// 2. stopwords\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"le la chien les aux chat du des à cheval\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\t// some nouns and adjectives\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"lances chismes habitable chiste éléments captifs\",\n\t\t\tnew String[] {\n\t\t\t\t\"lanc\",\n\t\t\t\t\"chism\",\n\t\t\t\t\"habit\",\n\t\t\t\t\"chist\",\n\t\t\t\t\"élément\",\n\t\t\t\t\"captif\" });\n\n\t\t// some verbs\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"finissions souffrirent rugissante\",\n\t\t\tnew String[] { \"fin\", \"souffr\", \"rug\" });\n\n\t\t// some everything else\n\t\t// aujourd'hui stays one term which is OK\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"C3PO aujourd'hui oeuf ïâöûàä anticonstitutionnellement Java++ \",\n\t\t\tnew String[] {\n\t\t\t\t\"c3po\",\n\t\t\t\t\"aujourd'hui\",\n\t\t\t\t\"oeuf\",\n\t\t\t\t\"ïâöûàä\",\n\t\t\t\t\"anticonstitutionnel\",\n\t\t\t\t\"jav\" });\n\n\t\t// some more everything else\n\t\t// here 1940-1945 stays as one term, 1940:1945 not ?\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"33Bis 1940-1945 1940:1945 (---i+++)*\",\n\t\t\tnew String[] { \"33bis\", \"1940-1945\", \"1940\", \"1945\", \"i\" });\n\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#testAnalyzer().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#testAnalyzer().mjava","sourceNew":"\tpublic void testAnalyzer() throws Exception {\n\t\tFrenchAnalyzer fa = new FrenchAnalyzer(TEST_VERSION_CURRENT);\n\t\n\t\tassertAnalyzesTo(fa, \"\", new String[] {\n\t\t});\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"chien chat cheval\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"chien CHAT CHEVAL\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"  chien  ,? + = -  CHAT /: > CHEVAL\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(fa, \"chien++\", new String[] { \"chien\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"mot \\\"entreguillemet\\\"\",\n\t\t\tnew String[] { \"mot\", \"entreguillemet\" });\n\n\t\t// let's do some french specific tests now\t\n\n\t\t/* 1. couldn't resist\n\t\t I would expect this to stay one term as in French the minus \n\t\tsign is often used for composing words */\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"Jean-François\",\n\t\t\tnew String[] { \"jean\", \"françois\" });\n\n\t\t// 2. stopwords\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"le la chien les aux chat du des à cheval\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\t// some nouns and adjectives\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"lances chismes habitable chiste éléments captifs\",\n\t\t\tnew String[] {\n\t\t\t\t\"lanc\",\n\t\t\t\t\"chism\",\n\t\t\t\t\"habit\",\n\t\t\t\t\"chist\",\n\t\t\t\t\"élément\",\n\t\t\t\t\"captif\" });\n\n\t\t// some verbs\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"finissions souffrirent rugissante\",\n\t\t\tnew String[] { \"fin\", \"souffr\", \"rug\" });\n\n\t\t// some everything else\n\t\t// aujourd'hui stays one term which is OK\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"C3PO aujourd'hui oeuf ïâöûàä anticonstitutionnellement Java++ \",\n\t\t\tnew String[] {\n\t\t\t\t\"c3po\",\n\t\t\t\t\"aujourd'hui\",\n\t\t\t\t\"oeuf\",\n\t\t\t\t\"ïâöûàä\",\n\t\t\t\t\"anticonstitutionnel\",\n\t\t\t\t\"jav\" });\n\n\t\t// some more everything else\n\t\t// here 1940-1945 stays as one term, 1940:1945 not ?\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"33Bis 1940-1945 1940:1945 (---i+++)*\",\n\t\t\tnew String[] { \"33bis\", \"1940-1945\", \"1940\", \"1945\", \"i\" });\n\n\t}\n\n","sourceOld":"\tpublic void testAnalyzer() throws Exception {\n\t\tFrenchAnalyzer fa = new FrenchAnalyzer(TEST_VERSION_CURRENT);\n\t\n\t\tassertAnalyzesTo(fa, \"\", new String[] {\n\t\t});\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"chien chat cheval\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"chien CHAT CHEVAL\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"  chien  ,? + = -  CHAT /: > CHEVAL\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\tassertAnalyzesTo(fa, \"chien++\", new String[] { \"chien\" });\n\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"mot \\\"entreguillemet\\\"\",\n\t\t\tnew String[] { \"mot\", \"entreguillemet\" });\n\n\t\t// let's do some french specific tests now\t\n\n\t\t/* 1. couldn't resist\n\t\t I would expect this to stay one term as in French the minus \n\t\tsign is often used for composing words */\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"Jean-François\",\n\t\t\tnew String[] { \"jean\", \"françois\" });\n\n\t\t// 2. stopwords\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"le la chien les aux chat du des à cheval\",\n\t\t\tnew String[] { \"chien\", \"chat\", \"cheval\" });\n\n\t\t// some nouns and adjectives\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"lances chismes habitable chiste éléments captifs\",\n\t\t\tnew String[] {\n\t\t\t\t\"lanc\",\n\t\t\t\t\"chism\",\n\t\t\t\t\"habit\",\n\t\t\t\t\"chist\",\n\t\t\t\t\"élément\",\n\t\t\t\t\"captif\" });\n\n\t\t// some verbs\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"finissions souffrirent rugissante\",\n\t\t\tnew String[] { \"fin\", \"souffr\", \"rug\" });\n\n\t\t// some everything else\n\t\t// aujourd'hui stays one term which is OK\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"C3PO aujourd'hui oeuf ïâöûàä anticonstitutionnellement Java++ \",\n\t\t\tnew String[] {\n\t\t\t\t\"c3po\",\n\t\t\t\t\"aujourd'hui\",\n\t\t\t\t\"oeuf\",\n\t\t\t\t\"ïâöûàä\",\n\t\t\t\t\"anticonstitutionnel\",\n\t\t\t\t\"jav\" });\n\n\t\t// some more everything else\n\t\t// here 1940-1945 stays as one term, 1940:1945 not ?\n\t\tassertAnalyzesTo(\n\t\t\tfa,\n\t\t\t\"33Bis 1940-1945 1940:1945 (---i+++)*\",\n\t\t\tnew String[] { \"33bis\", \"1940-1945\", \"1940\", \"1945\", \"i\" });\n\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c83a2e572295a9d2b63506929926d0522f61d386":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["ba1116b3450a9c1642c89445d131b37344055245"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"ba1116b3450a9c1642c89445d131b37344055245":["c83a2e572295a9d2b63506929926d0522f61d386"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["c83a2e572295a9d2b63506929926d0522f61d386"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"c83a2e572295a9d2b63506929926d0522f61d386":["ba1116b3450a9c1642c89445d131b37344055245"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ba1116b3450a9c1642c89445d131b37344055245":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}