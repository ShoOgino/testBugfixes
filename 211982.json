{"path":"solr/src/java/org/apache/solr/analysis/HyphenationCompoundWordTokenFilterFactory#inform(ResourceLoader).mjava","commits":[{"id":"8f86529fc497c589a6282416c6de55435212238d","date":1278688851,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/HyphenationCompoundWordTokenFilterFactory#inform(ResourceLoader).mjava","pathOld":"/dev/null","sourceNew":"  public void inform(ResourceLoader loader) {\n    Reader reader = null;\n    try {\n      if (dictFile != null) // the dictionary can be empty.\n        dictionary = getWordSet(loader, dictFile, false);\n      \n      InputStream hyph = loader.openResource(hypFile);\n      reader = new InputStreamReader(hyph, encoding);\n      hyphenator = HyphenationCompoundWordTokenFilter.getHyphenationTree(reader);\n    } catch (Exception e) { // TODO: getHyphenationTree really shouldnt throw \"Exception\"\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c8b28a7124e9fa13cdb9b0c79da424c3d05f4217"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/analysis/HyphenationCompoundWordTokenFilterFactory#inform(ResourceLoader).mjava","pathOld":"/dev/null","sourceNew":"  public void inform(ResourceLoader loader) {\n    Reader reader = null;\n    try {\n      if (dictFile != null) // the dictionary can be empty.\n        dictionary = getWordSet(loader, dictFile, false);\n      \n      InputStream hyph = loader.openResource(hypFile);\n      reader = new InputStreamReader(hyph, encoding);\n      hyphenator = HyphenationCompoundWordTokenFilter.getHyphenationTree(reader);\n    } catch (Exception e) { // TODO: getHyphenationTree really shouldnt throw \"Exception\"\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c8b28a7124e9fa13cdb9b0c79da424c3d05f4217","date":1288533406,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/HyphenationCompoundWordTokenFilterFactory#inform(ResourceLoader).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/HyphenationCompoundWordTokenFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    InputStream stream = null;\n    try {\n      if (dictFile != null) // the dictionary can be empty.\n        dictionary = getWordSet(loader, dictFile, false);\n      // TODO: Broken, because we cannot resolve real system id\n      // ResourceLoader should also supply method like ClassLoader to get resource URL\n      stream = loader.openResource(hypFile);\n      final InputSource is = new InputSource(stream);\n      is.setEncoding(encoding); // if it's null let xml parser decide\n      is.setSystemId(hypFile);\n      hyphenator = HyphenationCompoundWordTokenFilter.getHyphenationTree(is);\n    } catch (Exception e) { // TODO: getHyphenationTree really shouldn't throw \"Exception\"\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(stream);\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    Reader reader = null;\n    try {\n      if (dictFile != null) // the dictionary can be empty.\n        dictionary = getWordSet(loader, dictFile, false);\n      \n      InputStream hyph = loader.openResource(hypFile);\n      reader = new InputStreamReader(hyph, encoding);\n      hyphenator = HyphenationCompoundWordTokenFilter.getHyphenationTree(reader);\n    } catch (Exception e) { // TODO: getHyphenationTree really shouldnt throw \"Exception\"\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","bugFix":["8f86529fc497c589a6282416c6de55435212238d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/analysis/HyphenationCompoundWordTokenFilterFactory#inform(ResourceLoader).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/HyphenationCompoundWordTokenFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    InputStream stream = null;\n    try {\n      if (dictFile != null) // the dictionary can be empty.\n        dictionary = getWordSet(loader, dictFile, false);\n      // TODO: Broken, because we cannot resolve real system id\n      // ResourceLoader should also supply method like ClassLoader to get resource URL\n      stream = loader.openResource(hypFile);\n      final InputSource is = new InputSource(stream);\n      is.setEncoding(encoding); // if it's null let xml parser decide\n      is.setSystemId(hypFile);\n      hyphenator = HyphenationCompoundWordTokenFilter.getHyphenationTree(is);\n    } catch (Exception e) { // TODO: getHyphenationTree really shouldn't throw \"Exception\"\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(stream);\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    Reader reader = null;\n    try {\n      if (dictFile != null) // the dictionary can be empty.\n        dictionary = getWordSet(loader, dictFile, false);\n      \n      InputStream hyph = loader.openResource(hypFile);\n      reader = new InputStreamReader(hyph, encoding);\n      hyphenator = HyphenationCompoundWordTokenFilter.getHyphenationTree(reader);\n    } catch (Exception e) { // TODO: getHyphenationTree really shouldnt throw \"Exception\"\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/analysis/HyphenationCompoundWordTokenFilterFactory#inform(ResourceLoader).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/HyphenationCompoundWordTokenFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    InputStream stream = null;\n    try {\n      if (dictFile != null) // the dictionary can be empty.\n        dictionary = getWordSet(loader, dictFile, false);\n      // TODO: Broken, because we cannot resolve real system id\n      // ResourceLoader should also supply method like ClassLoader to get resource URL\n      stream = loader.openResource(hypFile);\n      final InputSource is = new InputSource(stream);\n      is.setEncoding(encoding); // if it's null let xml parser decide\n      is.setSystemId(hypFile);\n      hyphenator = HyphenationCompoundWordTokenFilter.getHyphenationTree(is);\n    } catch (Exception e) { // TODO: getHyphenationTree really shouldn't throw \"Exception\"\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(stream);\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    Reader reader = null;\n    try {\n      if (dictFile != null) // the dictionary can be empty.\n        dictionary = getWordSet(loader, dictFile, false);\n      \n      InputStream hyph = loader.openResource(hypFile);\n      reader = new InputStreamReader(hyph, encoding);\n      hyphenator = HyphenationCompoundWordTokenFilter.getHyphenationTree(reader);\n    } catch (Exception e) { // TODO: getHyphenationTree really shouldnt throw \"Exception\"\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/HyphenationCompoundWordTokenFilterFactory#inform(ResourceLoader).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/HyphenationCompoundWordTokenFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    InputStream stream = null;\n    try {\n      if (dictFile != null) // the dictionary can be empty.\n        dictionary = getWordSet(loader, dictFile, false);\n      // TODO: Broken, because we cannot resolve real system id\n      // ResourceLoader should also supply method like ClassLoader to get resource URL\n      stream = loader.openResource(hypFile);\n      final InputSource is = new InputSource(stream);\n      is.setEncoding(encoding); // if it's null let xml parser decide\n      is.setSystemId(hypFile);\n      hyphenator = HyphenationCompoundWordTokenFilter.getHyphenationTree(is);\n    } catch (Exception e) { // TODO: getHyphenationTree really shouldn't throw \"Exception\"\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(stream);\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    InputStream stream = null;\n    try {\n      if (dictFile != null) // the dictionary can be empty.\n        dictionary = getWordSet(loader, dictFile, false);\n      // TODO: Broken, because we cannot resolve real system id\n      // ResourceLoader should also supply method like ClassLoader to get resource URL\n      stream = loader.openResource(hypFile);\n      final InputSource is = new InputSource(stream);\n      is.setEncoding(encoding); // if it's null let xml parser decide\n      is.setSystemId(hypFile);\n      hyphenator = HyphenationCompoundWordTokenFilter.getHyphenationTree(is);\n    } catch (Exception e) { // TODO: getHyphenationTree really shouldn't throw \"Exception\"\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(stream);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/HyphenationCompoundWordTokenFilterFactory#inform(ResourceLoader).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/HyphenationCompoundWordTokenFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    InputStream stream = null;\n    try {\n      if (dictFile != null) // the dictionary can be empty.\n        dictionary = getWordSet(loader, dictFile, false);\n      // TODO: Broken, because we cannot resolve real system id\n      // ResourceLoader should also supply method like ClassLoader to get resource URL\n      stream = loader.openResource(hypFile);\n      final InputSource is = new InputSource(stream);\n      is.setEncoding(encoding); // if it's null let xml parser decide\n      is.setSystemId(hypFile);\n      hyphenator = HyphenationCompoundWordTokenFilter.getHyphenationTree(is);\n    } catch (Exception e) { // TODO: getHyphenationTree really shouldn't throw \"Exception\"\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(stream);\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    InputStream stream = null;\n    try {\n      if (dictFile != null) // the dictionary can be empty.\n        dictionary = getWordSet(loader, dictFile, false);\n      // TODO: Broken, because we cannot resolve real system id\n      // ResourceLoader should also supply method like ClassLoader to get resource URL\n      stream = loader.openResource(hypFile);\n      final InputSource is = new InputSource(stream);\n      is.setEncoding(encoding); // if it's null let xml parser decide\n      is.setSystemId(hypFile);\n      hyphenator = HyphenationCompoundWordTokenFilter.getHyphenationTree(is);\n    } catch (Exception e) { // TODO: getHyphenationTree really shouldn't throw \"Exception\"\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(stream);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/analysis/HyphenationCompoundWordTokenFilterFactory#inform(ResourceLoader).mjava","pathOld":"solr/src/java/org/apache/solr/analysis/HyphenationCompoundWordTokenFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    InputStream stream = null;\n    try {\n      if (dictFile != null) // the dictionary can be empty.\n        dictionary = getWordSet(loader, dictFile, false);\n      // TODO: Broken, because we cannot resolve real system id\n      // ResourceLoader should also supply method like ClassLoader to get resource URL\n      stream = loader.openResource(hypFile);\n      final InputSource is = new InputSource(stream);\n      is.setEncoding(encoding); // if it's null let xml parser decide\n      is.setSystemId(hypFile);\n      hyphenator = HyphenationCompoundWordTokenFilter.getHyphenationTree(is);\n    } catch (Exception e) { // TODO: getHyphenationTree really shouldn't throw \"Exception\"\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(stream);\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    InputStream stream = null;\n    try {\n      if (dictFile != null) // the dictionary can be empty.\n        dictionary = getWordSet(loader, dictFile, false);\n      // TODO: Broken, because we cannot resolve real system id\n      // ResourceLoader should also supply method like ClassLoader to get resource URL\n      stream = loader.openResource(hypFile);\n      final InputSource is = new InputSource(stream);\n      is.setEncoding(encoding); // if it's null let xml parser decide\n      is.setSystemId(hypFile);\n      hyphenator = HyphenationCompoundWordTokenFilter.getHyphenationTree(is);\n    } catch (Exception e) { // TODO: getHyphenationTree really shouldn't throw \"Exception\"\n      throw new RuntimeException(e);\n    } finally {\n      IOUtils.closeQuietly(stream);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8f86529fc497c589a6282416c6de55435212238d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c8b28a7124e9fa13cdb9b0c79da424c3d05f4217":["8f86529fc497c589a6282416c6de55435212238d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c8b28a7124e9fa13cdb9b0c79da424c3d05f4217"],"c26f00b574427b55127e869b935845554afde1fa":["c8b28a7124e9fa13cdb9b0c79da424c3d05f4217","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["8f86529fc497c589a6282416c6de55435212238d","c8b28a7124e9fa13cdb9b0c79da424c3d05f4217"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["c8b28a7124e9fa13cdb9b0c79da424c3d05f4217"],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8f86529fc497c589a6282416c6de55435212238d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","c8b28a7124e9fa13cdb9b0c79da424c3d05f4217"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"8f86529fc497c589a6282416c6de55435212238d":["c8b28a7124e9fa13cdb9b0c79da424c3d05f4217","85a883878c0af761245ab048babc63d099f835f3","5f4e87790277826a2aea119328600dfb07761f32"],"c8b28a7124e9fa13cdb9b0c79da424c3d05f4217":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","85a883878c0af761245ab048babc63d099f835f3","a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8f86529fc497c589a6282416c6de55435212238d","5f4e87790277826a2aea119328600dfb07761f32"],"85a883878c0af761245ab048babc63d099f835f3":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["85a883878c0af761245ab048babc63d099f835f3","a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}