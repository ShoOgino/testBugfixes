{"path":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#doCheck(Options).mjava","commits":[{"id":"ca56618660563c407aafdbd4ee4175ba2c73e6dc","date":1448923608,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#doCheck(Options).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Actually perform the index check\n   * @param opts The options to use for this check\n   * @return 0 iff the index is clean, 1 otherwise\n   */\n  public int doCheck(Options opts) throws IOException, InterruptedException {\n    setCrossCheckTermVectors(opts.doCrossCheckTermVectors);\n    setChecksumsOnly(opts.doChecksumsOnly);\n    setInfoStream(opts.out, opts.verbose);\n\n    Status result = checkIndex(opts.onlySegments);\n    if (result.missingSegments) {\n      return 1;\n    }\n\n    if (!result.clean) {\n      if (!opts.doExorcise) {\n        opts.out.println(\"WARNING: would write new segments file, and \" + result.totLoseDocCount + \" documents would be lost, if -exorcise were specified\\n\");\n      } else {\n        opts.out.println(\"WARNING: \" + result.totLoseDocCount + \" documents will be lost\\n\");\n        opts.out.println(\"NOTE: will write new segments file in 5 seconds; this will remove \" + result.totLoseDocCount + \" docs from the index. YOU WILL LOSE DATA. THIS IS YOUR LAST CHANCE TO CTRL+C!\");\n        for(int s=0;s<5;s++) {\n          Thread.sleep(1000);\n          opts.out.println(\"  \" + (5-s) + \"...\");\n        }\n        opts.out.println(\"Writing...\");\n        exorciseIndex(result);\n        opts.out.println(\"OK\");\n        opts.out.println(\"Wrote new segments file \\\"\" + result.newSegments.getSegmentsFileName() + \"\\\"\");\n      }\n    }\n    opts.out.println(\"\");\n\n    if (result.clean == true) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a0e5953a07337cd41bcde610503024c07073b26","date":1519143251,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#doCheck(Options).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#doCheck(Options).mjava","sourceNew":"  /**\n   * Actually perform the index check\n   * @param opts The options to use for this check\n   * @return 0 iff the index is clean, 1 otherwise\n   */\n  public int doCheck(Options opts) throws IOException, InterruptedException {\n    setDoSlowChecks(opts.doSlowChecks);\n    setChecksumsOnly(opts.doChecksumsOnly);\n    setInfoStream(opts.out, opts.verbose);\n\n    Status result = checkIndex(opts.onlySegments);\n    if (result.missingSegments) {\n      return 1;\n    }\n\n    if (!result.clean) {\n      if (!opts.doExorcise) {\n        opts.out.println(\"WARNING: would write new segments file, and \" + result.totLoseDocCount + \" documents would be lost, if -exorcise were specified\\n\");\n      } else {\n        opts.out.println(\"WARNING: \" + result.totLoseDocCount + \" documents will be lost\\n\");\n        opts.out.println(\"NOTE: will write new segments file in 5 seconds; this will remove \" + result.totLoseDocCount + \" docs from the index. YOU WILL LOSE DATA. THIS IS YOUR LAST CHANCE TO CTRL+C!\");\n        for(int s=0;s<5;s++) {\n          Thread.sleep(1000);\n          opts.out.println(\"  \" + (5-s) + \"...\");\n        }\n        opts.out.println(\"Writing...\");\n        exorciseIndex(result);\n        opts.out.println(\"OK\");\n        opts.out.println(\"Wrote new segments file \\\"\" + result.newSegments.getSegmentsFileName() + \"\\\"\");\n      }\n    }\n    opts.out.println(\"\");\n\n    if (result.clean == true) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n","sourceOld":"  /**\n   * Actually perform the index check\n   * @param opts The options to use for this check\n   * @return 0 iff the index is clean, 1 otherwise\n   */\n  public int doCheck(Options opts) throws IOException, InterruptedException {\n    setCrossCheckTermVectors(opts.doCrossCheckTermVectors);\n    setChecksumsOnly(opts.doChecksumsOnly);\n    setInfoStream(opts.out, opts.verbose);\n\n    Status result = checkIndex(opts.onlySegments);\n    if (result.missingSegments) {\n      return 1;\n    }\n\n    if (!result.clean) {\n      if (!opts.doExorcise) {\n        opts.out.println(\"WARNING: would write new segments file, and \" + result.totLoseDocCount + \" documents would be lost, if -exorcise were specified\\n\");\n      } else {\n        opts.out.println(\"WARNING: \" + result.totLoseDocCount + \" documents will be lost\\n\");\n        opts.out.println(\"NOTE: will write new segments file in 5 seconds; this will remove \" + result.totLoseDocCount + \" docs from the index. YOU WILL LOSE DATA. THIS IS YOUR LAST CHANCE TO CTRL+C!\");\n        for(int s=0;s<5;s++) {\n          Thread.sleep(1000);\n          opts.out.println(\"  \" + (5-s) + \"...\");\n        }\n        opts.out.println(\"Writing...\");\n        exorciseIndex(result);\n        opts.out.println(\"OK\");\n        opts.out.println(\"Wrote new segments file \\\"\" + result.newSegments.getSegmentsFileName() + \"\\\"\");\n      }\n    }\n    opts.out.println(\"\");\n\n    if (result.clean == true) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9a0e5953a07337cd41bcde610503024c07073b26":["ca56618660563c407aafdbd4ee4175ba2c73e6dc"],"ca56618660563c407aafdbd4ee4175ba2c73e6dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9a0e5953a07337cd41bcde610503024c07073b26"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ca56618660563c407aafdbd4ee4175ba2c73e6dc"],"9a0e5953a07337cd41bcde610503024c07073b26":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ca56618660563c407aafdbd4ee4175ba2c73e6dc":["9a0e5953a07337cd41bcde610503024c07073b26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}