{"path":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\r\n  public void close() {\r\n    try {\r\n      mgr.shutdown();\r\n    } catch (Throwable e) {\r\n      SolrException.log(log, e);\r\n    }\r\n    try {\r\n      loadbalancer.shutdown();\r\n    } catch (Throwable e) {\r\n      SolrException.log(log, e);\r\n    }\r\n    try {\r\n      commExecutor.shutdownNow();\r\n    } catch (Throwable e) {\r\n      SolrException.log(log, e);\r\n    }\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\r\n  public void close() {\r\n    try {\r\n      mgr.shutdown();\r\n    } catch (Throwable e) {\r\n      SolrException.log(log, e);\r\n    }\r\n    try {\r\n      loadbalancer.shutdown();\r\n    } catch (Throwable e) {\r\n      SolrException.log(log, e);\r\n    }\r\n    try {\r\n      commExecutor.shutdownNow();\r\n    } catch (Throwable e) {\r\n      SolrException.log(log, e);\r\n    }\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\r\n  public void close() {\r\n    try {\r\n      mgr.shutdown();\r\n    } catch (Throwable e) {\r\n      SolrException.log(log, e);\r\n    }\r\n    try {\r\n      loadbalancer.shutdown();\r\n    } catch (Throwable e) {\r\n      SolrException.log(log, e);\r\n    }\r\n    try {\r\n      commExecutor.shutdownNow();\r\n    } catch (Throwable e) {\r\n      SolrException.log(log, e);\r\n    }\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23","date":1332766738,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","sourceNew":"  @Override\n  public void close() {\n    try {\n      mgr.shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      loadbalancer.shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      commExecutor.shutdownNow();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n  }\n\n","sourceOld":"  @Override\r\n  public void close() {\r\n    try {\r\n      mgr.shutdown();\r\n    } catch (Throwable e) {\r\n      SolrException.log(log, e);\r\n    }\r\n    try {\r\n      loadbalancer.shutdown();\r\n    } catch (Throwable e) {\r\n      SolrException.log(log, e);\r\n    }\r\n    try {\r\n      commExecutor.shutdownNow();\r\n    } catch (Throwable e) {\r\n      SolrException.log(log, e);\r\n    }\r\n  }\r\n\n","bugFix":null,"bugIntro":["f1832e3af3b96b6e4738c4c81d84283d72eb6d26","f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"eb99886ff640d94edb43e0d36112a2b7023379ba","date":1338292884,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","sourceNew":"  @Override\n  public void close() {\n    try {\n      defaultClient.getConnectionManager().shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      loadbalancer.shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      commExecutor.shutdownNow();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    try {\n      mgr.shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      loadbalancer.shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      commExecutor.shutdownNow();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":["f1832e3af3b96b6e4738c4c81d84283d72eb6d26"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6","date":1346692465,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","sourceNew":"  @Override\n  public void close() {\n    try {\n      defaultClient.getConnectionManager().shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      loadbalancer.shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(commExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    try {\n      defaultClient.getConnectionManager().shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      loadbalancer.shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      commExecutor.shutdownNow();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":["a6378064655e76cd7b908b1cab4ce425b384b508"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a6378064655e76cd7b908b1cab4ce425b384b508","date":1347656715,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","sourceNew":"  @Override\n  public void close() {\n    try {\n      defaultClient.getConnectionManager().shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      loadbalancer.shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      ExecutorUtil.shutdownNowAndAwaitTermination(commExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    try {\n      defaultClient.getConnectionManager().shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      loadbalancer.shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(commExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n  }\n\n","bugFix":["7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a69439d0df009e0bb0038d1e427159f449dd670d","date":1355704683,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","sourceNew":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownNowAndAwaitTermination(commExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    \n    try {\n      defaultClient.getConnectionManager().shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      loadbalancer.shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    try {\n      defaultClient.getConnectionManager().shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      loadbalancer.shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      ExecutorUtil.shutdownNowAndAwaitTermination(commExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":["f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7f4821d05931759774f7fd656e31d449de2d1436","date":1355887327,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","sourceNew":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(commExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    \n    try {\n      defaultClient.getConnectionManager().shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      loadbalancer.shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownNowAndAwaitTermination(commExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    \n    try {\n      defaultClient.getConnectionManager().shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      loadbalancer.shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f1832e3af3b96b6e4738c4c81d84283d72eb6d26","date":1355935278,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","sourceNew":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(commExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    \n    try {\n      if(defaultClient != null) {\n        defaultClient.getConnectionManager().shutdown();\n      }\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      if(loadbalancer != null) {\n        loadbalancer.shutdown();\n      }\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(commExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    \n    try {\n      defaultClient.getConnectionManager().shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      loadbalancer.shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n\n  }\n\n","bugFix":["5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23","eb99886ff640d94edb43e0d36112a2b7023379ba"],"bugIntro":["f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"80ba0e0ced6273399ff97caaf301445b9fd24895","date":1356802943,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","sourceNew":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownNowAndAwaitTermination(commExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    \n    try {\n      if(defaultClient != null) {\n        defaultClient.getConnectionManager().shutdown();\n      }\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      if(loadbalancer != null) {\n        loadbalancer.shutdown();\n      }\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(commExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    \n    try {\n      if(defaultClient != null) {\n        defaultClient.getConnectionManager().shutdown();\n      }\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      if(loadbalancer != null) {\n        loadbalancer.shutdown();\n      }\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","sourceNew":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownNowAndAwaitTermination(commExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    \n    try {\n      if(defaultClient != null) {\n        defaultClient.getConnectionManager().shutdown();\n      }\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      if(loadbalancer != null) {\n        loadbalancer.shutdown();\n      }\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    try {\n      defaultClient.getConnectionManager().shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      loadbalancer.shutdown();\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      ExecutorUtil.shutdownNowAndAwaitTermination(commExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f56da6f4f15d95f318d2d6ac2a39a9183dfecff2","date":1389633998,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","sourceNew":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownNowAndAwaitTermination(commExecutor);\n    } finally {\n      try {\n        if (defaultClient != null) {\n          defaultClient.getConnectionManager().shutdown();\n        }\n      } finally {\n        \n        if (loadbalancer != null) {\n          loadbalancer.shutdown();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownNowAndAwaitTermination(commExecutor);\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    \n    try {\n      if(defaultClient != null) {\n        defaultClient.getConnectionManager().shutdown();\n      }\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n    try {\n      if(loadbalancer != null) {\n        loadbalancer.shutdown();\n      }\n    } catch (Throwable e) {\n      SolrException.log(log, e);\n    }\n\n  }\n\n","bugFix":["5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23","f1832e3af3b96b6e4738c4c81d84283d72eb6d26","a69439d0df009e0bb0038d1e427159f449dd670d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc3b13b430571c2e169f98fe38e1e7666f88522d","date":1422446157,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","sourceNew":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownNowAndAwaitTermination(commExecutor);\n    } finally {\n      try {\n        if (defaultClient != null) {\n          defaultClient.getConnectionManager().shutdown();\n        }\n      } finally {\n        \n        if (loadbalancer != null) {\n          loadbalancer.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownNowAndAwaitTermination(commExecutor);\n    } finally {\n      try {\n        if (defaultClient != null) {\n          defaultClient.getConnectionManager().shutdown();\n        }\n      } finally {\n        \n        if (loadbalancer != null) {\n          loadbalancer.shutdown();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65bb80df7000cd47101332ac36f23a1aa64526c1","date":1440518409,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","sourceNew":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(commExecutor);\n    } finally {\n      try {\n        if (defaultClient != null) {\n          defaultClient.getConnectionManager().shutdown();\n        }\n      } finally {\n        \n        if (loadbalancer != null) {\n          loadbalancer.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownNowAndAwaitTermination(commExecutor);\n    } finally {\n      try {\n        if (defaultClient != null) {\n          defaultClient.getConnectionManager().shutdown();\n        }\n      } finally {\n        \n        if (loadbalancer != null) {\n          loadbalancer.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"859081acf00749f5dd462772c571d611d4a4d2db","date":1459527719,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","sourceNew":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(commExecutor);\n    } finally {\n      try {\n        if (loadbalancer != null) {\n          loadbalancer.close();\n        }\n      } finally { \n        if (defaultClient != null) {\n          HttpClientUtil.close(defaultClient);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(commExecutor);\n    } finally {\n      try {\n        if (defaultClient != null) {\n          defaultClient.getConnectionManager().shutdown();\n        }\n      } finally {\n        \n        if (loadbalancer != null) {\n          loadbalancer.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16fa358573e3c2508728b3c7c438a8c19a3f0ae4","date":1482846144,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","sourceNew":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(commExecutor);\n    } finally {\n      try {\n        if (loadbalancer != null) {\n          loadbalancer.close();\n        }\n      } finally { \n        if (defaultClient != null) {\n          HttpClientUtil.close(defaultClient);\n        }\n        if (clientConnectionManager != null)  {\n          clientConnectionManager.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(commExecutor);\n    } finally {\n      try {\n        if (loadbalancer != null) {\n          loadbalancer.close();\n        }\n      } finally { \n        if (defaultClient != null) {\n          HttpClientUtil.close(defaultClient);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","sourceNew":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(commExecutor);\n    } finally {\n      try {\n        if (loadbalancer != null) {\n          loadbalancer.close();\n        }\n      } finally { \n        if (defaultClient != null) {\n          HttpClientUtil.close(defaultClient);\n        }\n        if (clientConnectionManager != null)  {\n          clientConnectionManager.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(commExecutor);\n    } finally {\n      try {\n        if (loadbalancer != null) {\n          loadbalancer.close();\n        }\n      } finally { \n        if (defaultClient != null) {\n          HttpClientUtil.close(defaultClient);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a77e5e21cbd575a8240b0e3926164f15295f4e8","date":1544979500,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","sourceNew":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(commExecutor);\n    } finally {\n      try {\n        if (loadbalancer != null) {\n          loadbalancer.close();\n        }\n      } finally { \n        if (defaultClient != null) {\n          IOUtils.closeQuietly(defaultClient);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(commExecutor);\n    } finally {\n      try {\n        if (loadbalancer != null) {\n          loadbalancer.close();\n        }\n      } finally { \n        if (defaultClient != null) {\n          HttpClientUtil.close(defaultClient);\n        }\n        if (clientConnectionManager != null)  {\n          clientConnectionManager.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e9e5eaf280a6aa21423126b8232aa157a9b7366","date":1571772228,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","sourceNew":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(commExecutor);\n    } finally {\n      try {\n        if (loadbalancer != null) {\n          loadbalancer.close();\n        }\n      } finally { \n        if (defaultClient != null) {\n          IOUtils.closeQuietly(defaultClient);\n        }\n      }\n    }\n    try {\n      SolrMetricProducer.super.close();\n    } catch (Exception e) {\n      log.warn(\"Exception closing.\", e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(commExecutor);\n    } finally {\n      try {\n        if (loadbalancer != null) {\n          loadbalancer.close();\n        }\n      } finally { \n        if (defaultClient != null) {\n          IOUtils.closeQuietly(defaultClient);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"833432c363468a5df50f87446a68015404b1fbcf","date":1572302961,"type":3,"author":"Houston Putman","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","sourceNew":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(commExecutor);\n    } finally {\n      try {\n        if (loadbalancer != null) {\n          loadbalancer.close();\n        }\n      } finally {\n        if (defaultClient != null) {\n          IOUtils.closeQuietly(defaultClient);\n        }\n      }\n    }\n    try {\n      SolrMetricProducer.super.close();\n    } catch (Exception e) {\n      log.warn(\"Exception closing.\", e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(commExecutor);\n    } finally {\n      try {\n        if (loadbalancer != null) {\n          loadbalancer.close();\n        }\n      } finally { \n        if (defaultClient != null) {\n          IOUtils.closeQuietly(defaultClient);\n        }\n      }\n    }\n    try {\n      SolrMetricProducer.super.close();\n    } catch (Exception e) {\n      log.warn(\"Exception closing.\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1964c059f45ae1de1877f9f0fe3ca327ea4218e8","date":1594088246,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#close().mjava","sourceNew":"  @Override\n  public void close() {\n    try {\n      if (loadbalancer != null) {\n        loadbalancer.close();\n      }\n    } finally {\n      try {\n        if (defaultClient != null) {\n          IOUtils.closeQuietly(defaultClient);\n        }\n      } finally {\n        ExecutorUtil.shutdownAndAwaitTermination(commExecutor);\n      }\n    }\n    try {\n      SolrMetricProducer.super.close();\n    } catch (Exception e) {\n      log.warn(\"Exception closing.\", e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() {\n    try {\n      ExecutorUtil.shutdownAndAwaitTermination(commExecutor);\n    } finally {\n      try {\n        if (loadbalancer != null) {\n          loadbalancer.close();\n        }\n      } finally {\n        if (defaultClient != null) {\n          IOUtils.closeQuietly(defaultClient);\n        }\n      }\n    }\n    try {\n      SolrMetricProducer.super.close();\n    } catch (Exception e) {\n      log.warn(\"Exception closing.\", e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a6378064655e76cd7b908b1cab4ce425b384b508","80ba0e0ced6273399ff97caaf301445b9fd24895"],"1964c059f45ae1de1877f9f0fe3ca327ea4218e8":["833432c363468a5df50f87446a68015404b1fbcf"],"7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6":["eb99886ff640d94edb43e0d36112a2b7023379ba"],"5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2e9e5eaf280a6aa21423126b8232aa157a9b7366":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"80ba0e0ced6273399ff97caaf301445b9fd24895":["f1832e3af3b96b6e4738c4c81d84283d72eb6d26"],"a69439d0df009e0bb0038d1e427159f449dd670d":["a6378064655e76cd7b908b1cab4ce425b384b508"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"eb99886ff640d94edb43e0d36112a2b7023379ba":["5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["859081acf00749f5dd462772c571d611d4a4d2db","16fa358573e3c2508728b3c7c438a8c19a3f0ae4"],"833432c363468a5df50f87446a68015404b1fbcf":["2e9e5eaf280a6aa21423126b8232aa157a9b7366"],"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["16fa358573e3c2508728b3c7c438a8c19a3f0ae4"],"859081acf00749f5dd462772c571d611d4a4d2db":["65bb80df7000cd47101332ac36f23a1aa64526c1"],"7f4821d05931759774f7fd656e31d449de2d1436":["a69439d0df009e0bb0038d1e427159f449dd670d"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a6378064655e76cd7b908b1cab4ce425b384b508":["7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6"],"f1832e3af3b96b6e4738c4c81d84283d72eb6d26":["7f4821d05931759774f7fd656e31d449de2d1436"],"65bb80df7000cd47101332ac36f23a1aa64526c1":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"],"f56da6f4f15d95f318d2d6ac2a39a9183dfecff2":["80ba0e0ced6273399ff97caaf301445b9fd24895"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1964c059f45ae1de1877f9f0fe3ca327ea4218e8"],"16fa358573e3c2508728b3c7c438a8c19a3f0ae4":["859081acf00749f5dd462772c571d611d4a4d2db"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"1964c059f45ae1de1877f9f0fe3ca327ea4218e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6":["a6378064655e76cd7b908b1cab4ce425b384b508"],"5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23":["eb99886ff640d94edb43e0d36112a2b7023379ba"],"80ba0e0ced6273399ff97caaf301445b9fd24895":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"],"2e9e5eaf280a6aa21423126b8232aa157a9b7366":["833432c363468a5df50f87446a68015404b1fbcf"],"a69439d0df009e0bb0038d1e427159f449dd670d":["7f4821d05931759774f7fd656e31d449de2d1436"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"eb99886ff640d94edb43e0d36112a2b7023379ba":["7157fdda82ae1a1cb77b012ef0eb72249ee2f3d6"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[],"833432c363468a5df50f87446a68015404b1fbcf":["1964c059f45ae1de1877f9f0fe3ca327ea4218e8"],"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["2e9e5eaf280a6aa21423126b8232aa157a9b7366"],"859081acf00749f5dd462772c571d611d4a4d2db":["f03e4bed5023ec3ef93a771b8888cae991cf448d","16fa358573e3c2508728b3c7c438a8c19a3f0ae4"],"7f4821d05931759774f7fd656e31d449de2d1436":["f1832e3af3b96b6e4738c4c81d84283d72eb6d26"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"a6378064655e76cd7b908b1cab4ce425b384b508":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a69439d0df009e0bb0038d1e427159f449dd670d"],"f1832e3af3b96b6e4738c4c81d84283d72eb6d26":["80ba0e0ced6273399ff97caaf301445b9fd24895"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"65bb80df7000cd47101332ac36f23a1aa64526c1":["859081acf00749f5dd462772c571d611d4a4d2db"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["65bb80df7000cd47101332ac36f23a1aa64526c1"],"f56da6f4f15d95f318d2d6ac2a39a9183dfecff2":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"16fa358573e3c2508728b3c7c438a8c19a3f0ae4":["f03e4bed5023ec3ef93a771b8888cae991cf448d","1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","f03e4bed5023ec3ef93a771b8888cae991cf448d","0d22ac6a4146774c1bc8400160fc0b6150294e92","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}