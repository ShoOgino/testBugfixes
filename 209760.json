{"path":"lucene/backwards/src/java/org/apache/lucene/index/SegmentInfo#getNormFileName(int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/SegmentInfo#getNormFileName(int).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/SegmentInfo#getNormFileName(int).mjava","sourceNew":"  /**\n   * Get the file name for the norms file for this field.\n   *\n   * @param number field index\n   */\n  public String getNormFileName(int number) throws IOException {\n    String prefix;\n\n    long gen;\n    if (normGen == null) {\n      gen = CHECK_DIR;\n    } else {\n      gen = normGen[number];\n    }\n    \n    if (hasSeparateNorms(number)) {\n      // case 1: separate norm\n      prefix = \".s\";\n      return IndexFileNames.fileNameFromGeneration(name, prefix + number, gen);\n    }\n\n    if (hasSingleNormFile) {\n      // case 2: lockless (or nrm file exists) - single file for all norms \n      prefix = \".\" + IndexFileNames.NORMS_EXTENSION;\n      return IndexFileNames.fileNameFromGeneration(name, prefix, WITHOUT_GEN);\n    }\n      \n    // case 3: norm file for each field\n    prefix = \".f\";\n    return IndexFileNames.fileNameFromGeneration(name, prefix + number, WITHOUT_GEN);\n  }\n\n","sourceOld":"  /**\n   * Get the file name for the norms file for this field.\n   *\n   * @param number field index\n   */\n  public String getNormFileName(int number) throws IOException {\n    String prefix;\n\n    long gen;\n    if (normGen == null) {\n      gen = CHECK_DIR;\n    } else {\n      gen = normGen[number];\n    }\n    \n    if (hasSeparateNorms(number)) {\n      // case 1: separate norm\n      prefix = \".s\";\n      return IndexFileNames.fileNameFromGeneration(name, prefix + number, gen);\n    }\n\n    if (hasSingleNormFile) {\n      // case 2: lockless (or nrm file exists) - single file for all norms \n      prefix = \".\" + IndexFileNames.NORMS_EXTENSION;\n      return IndexFileNames.fileNameFromGeneration(name, prefix, WITHOUT_GEN);\n    }\n      \n    // case 3: norm file for each field\n    prefix = \".f\";\n    return IndexFileNames.fileNameFromGeneration(name, prefix + number, WITHOUT_GEN);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/index/SegmentInfo#getNormFileName(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Get the file name for the norms file for this field.\n   *\n   * @param number field index\n   */\n  public String getNormFileName(int number) throws IOException {\n    String prefix;\n\n    long gen;\n    if (normGen == null) {\n      gen = CHECK_DIR;\n    } else {\n      gen = normGen[number];\n    }\n    \n    if (hasSeparateNorms(number)) {\n      // case 1: separate norm\n      prefix = \".s\";\n      return IndexFileNames.fileNameFromGeneration(name, prefix + number, gen);\n    }\n\n    if (hasSingleNormFile) {\n      // case 2: lockless (or nrm file exists) - single file for all norms \n      prefix = \".\" + IndexFileNames.NORMS_EXTENSION;\n      return IndexFileNames.fileNameFromGeneration(name, prefix, WITHOUT_GEN);\n    }\n      \n    // case 3: norm file for each field\n    prefix = \".f\";\n    return IndexFileNames.fileNameFromGeneration(name, prefix + number, WITHOUT_GEN);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}