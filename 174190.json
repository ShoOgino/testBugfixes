{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockDocs(IndexOutput,int[],int,int).mjava","commits":[{"id":"ca792c26af46bd6c4a08d81117c60440cf6a7e3d","date":1445938295,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockDocs(IndexOutput,int[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  protected void writeLeafBlockDocs(IndexOutput out, int[] docIDs, int start, int count) throws IOException {\n    out.writeVInt(count);\n\n    int lastDocID = 0;\n    for (int i=0;i<count;i++) {\n      int docID = docIDs[start + i];\n      out.writeVInt(docID - lastDocID);\n      lastDocID = docID;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1904709ea0185dc04e3d77ea01c79e909caf2796","date":1447006699,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockDocs(IndexOutput,int[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockDocs(IndexOutput,int[],int,int).mjava","sourceNew":"  protected void writeLeafBlockDocs(IndexOutput out, int[] docIDs, int start, int count) throws IOException {\n    out.writeVInt(count);\n\n    for (int i=0;i<count;i++) {\n      out.writeInt(docIDs[start + i]);\n    }\n  }\n\n","sourceOld":"  protected void writeLeafBlockDocs(IndexOutput out, int[] docIDs, int start, int count) throws IOException {\n    out.writeVInt(count);\n\n    int lastDocID = 0;\n    for (int i=0;i<count;i++) {\n      int docID = docIDs[start + i];\n      out.writeVInt(docID - lastDocID);\n      lastDocID = docID;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d53f98721d7cda12df9fd4b2e8e2c235be9ac494","date":1450448699,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockDocs(IndexOutput,int[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockDocs(IndexOutput,int[],int,int).mjava","sourceNew":"  protected void writeLeafBlockDocs(IndexOutput out, int[] docIDs, int start, int count) throws IOException {\n    assert count > 0: \"maxPointsInLeafNode=\" + maxPointsInLeafNode;\n    out.writeVInt(count);\n\n    for (int i=0;i<count;i++) {\n      out.writeInt(docIDs[start + i]);\n    }\n  }\n\n","sourceOld":"  protected void writeLeafBlockDocs(IndexOutput out, int[] docIDs, int start, int count) throws IOException {\n    out.writeVInt(count);\n\n    for (int i=0;i<count;i++) {\n      out.writeInt(docIDs[start + i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"adc24e961ba2d17d4cc061a9fde65e9059b7f1ee","date":1467616421,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockDocs(IndexOutput,int[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockDocs(IndexOutput,int[],int,int).mjava","sourceNew":"  protected void writeLeafBlockDocs(IndexOutput out, int[] docIDs, int start, int count) throws IOException {\n    assert count > 0: \"maxPointsInLeafNode=\" + maxPointsInLeafNode;\n    out.writeVInt(count);\n    DocIdsWriter.writeDocIds(docIDs, start, count, out);\n  }\n\n","sourceOld":"  protected void writeLeafBlockDocs(IndexOutput out, int[] docIDs, int start, int count) throws IOException {\n    assert count > 0: \"maxPointsInLeafNode=\" + maxPointsInLeafNode;\n    out.writeVInt(count);\n\n    for (int i=0;i<count;i++) {\n      out.writeInt(docIDs[start + i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockDocs(IndexOutput,int[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockDocs(IndexOutput,int[],int,int).mjava","sourceNew":"  protected void writeLeafBlockDocs(IndexOutput out, int[] docIDs, int start, int count) throws IOException {\n    assert count > 0: \"maxPointsInLeafNode=\" + maxPointsInLeafNode;\n    out.writeVInt(count);\n    DocIdsWriter.writeDocIds(docIDs, start, count, out);\n  }\n\n","sourceOld":"  protected void writeLeafBlockDocs(IndexOutput out, int[] docIDs, int start, int count) throws IOException {\n    assert count > 0: \"maxPointsInLeafNode=\" + maxPointsInLeafNode;\n    out.writeVInt(count);\n\n    for (int i=0;i<count;i++) {\n      out.writeInt(docIDs[start + i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fc0d60683b47b5d922124c31f57c8b34734f9e6","date":1480846684,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockDocs(IndexOutput,int[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockDocs(IndexOutput,int[],int,int).mjava","sourceNew":"  private void writeLeafBlockDocs(IndexOutput out, int[] docIDs, int start, int count) throws IOException {\n    assert count > 0: \"maxPointsInLeafNode=\" + maxPointsInLeafNode;\n    out.writeVInt(count);\n    DocIdsWriter.writeDocIds(docIDs, start, count, out);\n  }\n\n","sourceOld":"  protected void writeLeafBlockDocs(IndexOutput out, int[] docIDs, int start, int count) throws IOException {\n    assert count > 0: \"maxPointsInLeafNode=\" + maxPointsInLeafNode;\n    out.writeVInt(count);\n    DocIdsWriter.writeDocIds(docIDs, start, count, out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9","date":1481155163,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockDocs(DataOutput,int[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockDocs(IndexOutput,int[],int,int).mjava","sourceNew":"  private void writeLeafBlockDocs(DataOutput out, int[] docIDs, int start, int count) throws IOException {\n    assert count > 0: \"maxPointsInLeafNode=\" + maxPointsInLeafNode;\n    out.writeVInt(count);\n    DocIdsWriter.writeDocIds(docIDs, start, count, out);\n  }\n\n","sourceOld":"  private void writeLeafBlockDocs(IndexOutput out, int[] docIDs, int start, int count) throws IOException {\n    assert count > 0: \"maxPointsInLeafNode=\" + maxPointsInLeafNode;\n    out.writeVInt(count);\n    DocIdsWriter.writeDocIds(docIDs, start, count, out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":6,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextBKDWriter#writeLeafBlockDocs(IndexOutput,int[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockDocs(IndexOutput,int[],int,int).mjava","sourceNew":"  protected void writeLeafBlockDocs(IndexOutput out, int[] docIDs, int start, int count) throws IOException {\n    write(out, BLOCK_COUNT);\n    writeInt(out, count);\n    newline(out);\n    for(int i=0;i<count;i++) {\n      write(out, BLOCK_DOC_ID);\n      writeInt(out, docIDs[start+i]);\n      newline(out);\n    }\n  }\n\n","sourceOld":"  protected void writeLeafBlockDocs(IndexOutput out, int[] docIDs, int start, int count) throws IOException {\n    assert count > 0: \"maxPointsInLeafNode=\" + maxPointsInLeafNode;\n    out.writeVInt(count);\n    DocIdsWriter.writeDocIds(docIDs, start, count, out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockDocs(DataOutput,int[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeLeafBlockDocs(IndexOutput,int[],int,int).mjava","sourceNew":"  private void writeLeafBlockDocs(DataOutput out, int[] docIDs, int start, int count) throws IOException {\n    assert count > 0: \"maxPointsInLeafNode=\" + maxPointsInLeafNode;\n    out.writeVInt(count);\n    DocIdsWriter.writeDocIds(docIDs, start, count, out);\n  }\n\n","sourceOld":"  protected void writeLeafBlockDocs(IndexOutput out, int[] docIDs, int start, int count) throws IOException {\n    assert count > 0: \"maxPointsInLeafNode=\" + maxPointsInLeafNode;\n    out.writeVInt(count);\n    DocIdsWriter.writeDocIds(docIDs, start, count, out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9fc0d60683b47b5d922124c31f57c8b34734f9e6":["adc24e961ba2d17d4cc061a9fde65e9059b7f1ee"],"adc24e961ba2d17d4cc061a9fde65e9059b7f1ee":["d53f98721d7cda12df9fd4b2e8e2c235be9ac494"],"ca792c26af46bd6c4a08d81117c60440cf6a7e3d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d53f98721d7cda12df9fd4b2e8e2c235be9ac494":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"1904709ea0185dc04e3d77ea01c79e909caf2796":["ca792c26af46bd6c4a08d81117c60440cf6a7e3d"],"9856095f7afb5a607bf5e65077615ed91273508c":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["d53f98721d7cda12df9fd4b2e8e2c235be9ac494","adc24e961ba2d17d4cc061a9fde65e9059b7f1ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9"],"c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9":["9fc0d60683b47b5d922124c31f57c8b34734f9e6"]},"commit2Childs":{"9fc0d60683b47b5d922124c31f57c8b34734f9e6":["c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9"],"adc24e961ba2d17d4cc061a9fde65e9059b7f1ee":["9fc0d60683b47b5d922124c31f57c8b34734f9e6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"ca792c26af46bd6c4a08d81117c60440cf6a7e3d":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ca792c26af46bd6c4a08d81117c60440cf6a7e3d"],"d53f98721d7cda12df9fd4b2e8e2c235be9ac494":["adc24e961ba2d17d4cc061a9fde65e9059b7f1ee","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"1904709ea0185dc04e3d77ea01c79e909caf2796":["d53f98721d7cda12df9fd4b2e8e2c235be9ac494"],"9856095f7afb5a607bf5e65077615ed91273508c":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["9856095f7afb5a607bf5e65077615ed91273508c"],"c4ad863d796f4e72a3a1ef4bacd2e19c3e9258c9":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}