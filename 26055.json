{"path":"src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(String,Analyzer).mjava","commits":[{"id":"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef","date":1063245093,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(String,Analyzer).mjava","pathOld":"/dev/null","sourceNew":"  /** Constructs a query parser.\n   *  @param field\tthe default field for query terms.\n   *  @param analyzer   used to find terms in the query text.\n   */\n  public QueryParser(String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    analyzer = a;\n    field = f;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199fcfef6092b06089a588bf55391b8ce5aea8f5","date":1064896716,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(String,Analyzer).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(String,Analyzer).mjava","sourceNew":"  /** Constructs a query parser.\n   *  @param f\tthe default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    analyzer = a;\n    field = f;\n  }\n\n","sourceOld":"  /** Constructs a query parser.\n   *  @param field\tthe default field for query terms.\n   *  @param analyzer   used to find terms in the query text.\n   */\n  public QueryParser(String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    analyzer = a;\n    field = f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f3029a7a46013b533900f159ca12ee4f27e0de5c","date":1065150762,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(String,Analyzer).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(String,Analyzer).mjava","sourceNew":"  /** Constructs a query parser.\n   *  @param f\tthe default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(String f, Analyzer a) {\n    this(f, a, Locale.getDefault());\n  }\n\n","sourceOld":"  /** Constructs a query parser.\n   *  @param f\tthe default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    analyzer = a;\n    field = f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd9bdafc45175f108b0e45b1335f905caeb5786f","date":1065194037,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(String,Analyzer).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(String,Analyzer).mjava","sourceNew":"  /** Constructs a query parser.\n   *  @param f\tthe default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    analyzer = a;\n    field = f;\n  }\n\n","sourceOld":"  /** Constructs a query parser.\n   *  @param f\tthe default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(String f, Analyzer a) {\n    this(f, a, Locale.getDefault());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9eacfbe2ad1cb736606c0e0093f7f3ab4a2e13c","date":1078315633,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(String,Analyzer).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(String,Analyzer).mjava","sourceNew":"  /** Constructs a query parser.\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    analyzer = a;\n    field = f;\n  }\n\n","sourceOld":"  /** Constructs a query parser.\n   *  @param f\tthe default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    analyzer = a;\n    field = f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(Version,String,Analyzer).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(String,Analyzer).mjava","sourceNew":"  /** Constructs a query parser.\n   *  @param matchVersion  Lucene version to match.  See <a href=\"#version\">above</a>)\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(Version matchVersion, String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    analyzer = a;\n    field = f;\n    if (matchVersion.onOrAfter(Version.LUCENE_29)) {\n      enablePositionIncrements = true;\n    } else {\n      enablePositionIncrements = false;\n    }\n  }\n\n","sourceOld":"  /** Constructs a query parser.\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    analyzer = a;\n    field = f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bd9bdafc45175f108b0e45b1335f905caeb5786f":["f3029a7a46013b533900f159ca12ee4f27e0de5c"],"f3029a7a46013b533900f159ca12ee4f27e0de5c":["199fcfef6092b06089a588bf55391b8ce5aea8f5"],"199fcfef6092b06089a588bf55391b8ce5aea8f5":["9dc3f3d3156ee3e335155b8a8f44f7e926db09ef"],"f9eacfbe2ad1cb736606c0e0093f7f3ab4a2e13c":["bd9bdafc45175f108b0e45b1335f905caeb5786f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba1116b3450a9c1642c89445d131b37344055245"],"ba1116b3450a9c1642c89445d131b37344055245":["f9eacfbe2ad1cb736606c0e0093f7f3ab4a2e13c"]},"commit2Childs":{"bd9bdafc45175f108b0e45b1335f905caeb5786f":["f9eacfbe2ad1cb736606c0e0093f7f3ab4a2e13c"],"f3029a7a46013b533900f159ca12ee4f27e0de5c":["bd9bdafc45175f108b0e45b1335f905caeb5786f"],"199fcfef6092b06089a588bf55391b8ce5aea8f5":["f3029a7a46013b533900f159ca12ee4f27e0de5c"],"f9eacfbe2ad1cb736606c0e0093f7f3ab4a2e13c":["ba1116b3450a9c1642c89445d131b37344055245"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9dc3f3d3156ee3e335155b8a8f44f7e926db09ef"],"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef":["199fcfef6092b06089a588bf55391b8ce5aea8f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"ba1116b3450a9c1642c89445d131b37344055245":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}