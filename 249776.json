{"path":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#add(String,Query).mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#add(String,Query).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SimpleDrillDownQuery#add(String,Query).mjava","sourceNew":"  /** Expert: add a custom drill-down subQuery.  Use this\n   *  when you have a separate way to drill-down on the\n   *  dimension than the indexed facet ordinals. */\n  public void add(String dim, Query subQuery) {\n\n    // TODO: we should use FilteredQuery?\n\n    // So scores of the drill-down query don't have an\n    // effect:\n    final ConstantScoreQuery drillDownQuery = new ConstantScoreQuery(subQuery);\n    drillDownQuery.setBoost(0.0f);\n\n    query.add(drillDownQuery, Occur.MUST);\n\n    drillDownDims.put(dim, drillDownDims.size());\n  }\n\n","sourceOld":"  /** Expert: add a custom drill-down subQuery.  Use this\n   *  when you have a separate way to drill-down on the\n   *  dimension than the indexed facet ordinals. */\n  public void add(String dim, Query subQuery) {\n\n    // TODO: we should use FilteredQuery?\n\n    // So scores of the drill-down query don't have an\n    // effect:\n    final ConstantScoreQuery drillDownQuery = new ConstantScoreQuery(subQuery);\n    drillDownQuery.setBoost(0.0f);\n\n    query.add(drillDownQuery, Occur.MUST);\n\n    drillDownDims.put(dim, drillDownDims.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6e499df4729e7162d5b39a70b0142e3186a029f","date":1385554050,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#add(String,Query).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#add(String,Query).mjava","sourceNew":"  /** Expert: add a custom drill-down subQuery.  Use this\n   *  when you have a separate way to drill-down on the\n   *  dimension than the indexed facet ordinals (for\n   *  example, use a {@link NumericRangeQuery} to drill down\n   *  after{@link RangeFacetCounts}. */\n  public void add(String dim, Query subQuery) {\n\n    // TODO: we should use FilteredQuery?\n\n    // So scores of the drill-down query don't have an\n    // effect:\n    final ConstantScoreQuery drillDownQuery = new ConstantScoreQuery(subQuery);\n    drillDownQuery.setBoost(0.0f);\n\n    query.add(drillDownQuery, Occur.MUST);\n\n    drillDownDims.put(dim, drillDownDims.size());\n  }\n\n","sourceOld":"  /** Expert: add a custom drill-down subQuery.  Use this\n   *  when you have a separate way to drill-down on the\n   *  dimension than the indexed facet ordinals. */\n  public void add(String dim, Query subQuery) {\n\n    // TODO: we should use FilteredQuery?\n\n    // So scores of the drill-down query don't have an\n    // effect:\n    final ConstantScoreQuery drillDownQuery = new ConstantScoreQuery(subQuery);\n    drillDownQuery.setBoost(0.0f);\n\n    query.add(drillDownQuery, Occur.MUST);\n\n    drillDownDims.put(dim, drillDownDims.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd3ed8c8fa2a4b995f5dfca3f00e5ce80161de0e","date":1385900513,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#add(String,Query).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#add(String,Query).mjava","sourceNew":"  /** Expert: add a custom drill-down subQuery.  Use this\n   *  when you have a separate way to drill-down on the\n   *  dimension than the indexed facet ordinals (for\n   *  example, use a {@link NumericRangeQuery} to drill down\n   *  after {@link LongRangeFacetCounts} or {@link DoubleRangeFacetCounts}. */\n  public void add(String dim, Query subQuery) {\n\n    // TODO: we should use FilteredQuery?\n\n    // So scores of the drill-down query don't have an\n    // effect:\n    final ConstantScoreQuery drillDownQuery = new ConstantScoreQuery(subQuery);\n    drillDownQuery.setBoost(0.0f);\n\n    query.add(drillDownQuery, Occur.MUST);\n\n    drillDownDims.put(dim, drillDownDims.size());\n  }\n\n","sourceOld":"  /** Expert: add a custom drill-down subQuery.  Use this\n   *  when you have a separate way to drill-down on the\n   *  dimension than the indexed facet ordinals (for\n   *  example, use a {@link NumericRangeQuery} to drill down\n   *  after{@link RangeFacetCounts}. */\n  public void add(String dim, Query subQuery) {\n\n    // TODO: we should use FilteredQuery?\n\n    // So scores of the drill-down query don't have an\n    // effect:\n    final ConstantScoreQuery drillDownQuery = new ConstantScoreQuery(subQuery);\n    drillDownQuery.setBoost(0.0f);\n\n    query.add(drillDownQuery, Occur.MUST);\n\n    drillDownDims.put(dim, drillDownDims.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#add(String,Query).mjava","pathOld":"/dev/null","sourceNew":"  /** Expert: add a custom drill-down subQuery.  Use this\n   *  when you have a separate way to drill-down on the\n   *  dimension than the indexed facet ordinals (for\n   *  example, use a {@link NumericRangeQuery} to drill down\n   *  after {@link LongRangeFacetCounts} or {@link DoubleRangeFacetCounts}. */\n  public void add(String dim, Query subQuery) {\n\n    // TODO: we should use FilteredQuery?\n\n    // So scores of the drill-down query don't have an\n    // effect:\n    final ConstantScoreQuery drillDownQuery = new ConstantScoreQuery(subQuery);\n    drillDownQuery.setBoost(0.0f);\n\n    query.add(drillDownQuery, Occur.MUST);\n\n    drillDownDims.put(dim, drillDownDims.size());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"40640359164f629dd440a47df2e145d084ce9645","date":1391711808,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#add(String,Query).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#add(String,Query).mjava","sourceNew":"  /** Expert: add a custom drill-down subQuery.  Use this\n   *  when you have a separate way to drill-down on the\n   *  dimension than the indexed facet ordinals. */\n  public void add(String dim, Query subQuery) {\n\n    if (drillDownDims.containsKey(dim)) {\n      throw new IllegalArgumentException(\"dimension \\\"\" + dim + \"\\\" already has a drill-down\");\n    }\n    // TODO: we should use FilteredQuery?\n\n    // So scores of the drill-down query don't have an\n    // effect:\n    final ConstantScoreQuery drillDownQuery = new ConstantScoreQuery(subQuery);\n    drillDownQuery.setBoost(0.0f);\n\n    query.add(drillDownQuery, Occur.MUST);\n\n    drillDownDims.put(dim, drillDownDims.size());\n  }\n\n","sourceOld":"  /** Expert: add a custom drill-down subQuery.  Use this\n   *  when you have a separate way to drill-down on the\n   *  dimension than the indexed facet ordinals (for\n   *  example, use a {@link NumericRangeQuery} to drill down\n   *  after {@link LongRangeFacetCounts} or {@link DoubleRangeFacetCounts}. */\n  public void add(String dim, Query subQuery) {\n\n    // TODO: we should use FilteredQuery?\n\n    // So scores of the drill-down query don't have an\n    // effect:\n    final ConstantScoreQuery drillDownQuery = new ConstantScoreQuery(subQuery);\n    drillDownQuery.setBoost(0.0f);\n\n    query.add(drillDownQuery, Occur.MUST);\n\n    drillDownDims.put(dim, drillDownDims.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#add(String,Query).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#add(String,Query).mjava","sourceNew":"  /** Expert: add a custom drill-down subQuery.  Use this\n   *  when you have a separate way to drill-down on the\n   *  dimension than the indexed facet ordinals. */\n  public void add(String dim, Query subQuery) {\n    assert drillDownDims.size() == dimQueries.size();\n    if (drillDownDims.containsKey(dim) == false) {\n      drillDownDims.put(dim, drillDownDims.size());\n      BooleanQuery.Builder builder = new BooleanQuery.Builder();\n      builder.setDisableCoord(true);\n      dimQueries.add(builder);\n    }\n    final int index = drillDownDims.get(dim);\n    dimQueries.get(index).add(subQuery, Occur.SHOULD);\n  }\n\n","sourceOld":"  /** Expert: add a custom drill-down subQuery.  Use this\n   *  when you have a separate way to drill-down on the\n   *  dimension than the indexed facet ordinals. */\n  public void add(String dim, Query subQuery) {\n\n    if (drillDownDims.containsKey(dim)) {\n      throw new IllegalArgumentException(\"dimension \\\"\" + dim + \"\\\" already has a drill-down\");\n    }\n    // TODO: we should use FilteredQuery?\n\n    // So scores of the drill-down query don't have an\n    // effect:\n    final ConstantScoreQuery drillDownQuery = new ConstantScoreQuery(subQuery);\n    drillDownQuery.setBoost(0.0f);\n\n    query.add(drillDownQuery, Occur.MUST);\n\n    drillDownDims.put(dim, drillDownDims.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8a0e442f7b61f811680273b25da95994a724466","date":1467878549,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#add(String,Query).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#add(String,Query).mjava","sourceNew":"  /** Expert: add a custom drill-down subQuery.  Use this\n   *  when you have a separate way to drill-down on the\n   *  dimension than the indexed facet ordinals. */\n  public void add(String dim, Query subQuery) {\n    assert drillDownDims.size() == dimQueries.size();\n    if (drillDownDims.containsKey(dim) == false) {\n      drillDownDims.put(dim, drillDownDims.size());\n      BooleanQuery.Builder builder = new BooleanQuery.Builder();\n      dimQueries.add(builder);\n    }\n    final int index = drillDownDims.get(dim);\n    dimQueries.get(index).add(subQuery, Occur.SHOULD);\n  }\n\n","sourceOld":"  /** Expert: add a custom drill-down subQuery.  Use this\n   *  when you have a separate way to drill-down on the\n   *  dimension than the indexed facet ordinals. */\n  public void add(String dim, Query subQuery) {\n    assert drillDownDims.size() == dimQueries.size();\n    if (drillDownDims.containsKey(dim) == false) {\n      drillDownDims.put(dim, drillDownDims.size());\n      BooleanQuery.Builder builder = new BooleanQuery.Builder();\n      builder.setDisableCoord(true);\n      dimQueries.add(builder);\n    }\n    final int index = drillDownDims.get(dim);\n    dimQueries.get(index).add(subQuery, Occur.SHOULD);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#add(String,Query).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/DrillDownQuery#add(String,Query).mjava","sourceNew":"  /** Expert: add a custom drill-down subQuery.  Use this\n   *  when you have a separate way to drill-down on the\n   *  dimension than the indexed facet ordinals. */\n  public void add(String dim, Query subQuery) {\n    assert drillDownDims.size() == dimQueries.size();\n    if (drillDownDims.containsKey(dim) == false) {\n      drillDownDims.put(dim, drillDownDims.size());\n      BooleanQuery.Builder builder = new BooleanQuery.Builder();\n      dimQueries.add(builder);\n    }\n    final int index = drillDownDims.get(dim);\n    dimQueries.get(index).add(subQuery, Occur.SHOULD);\n  }\n\n","sourceOld":"  /** Expert: add a custom drill-down subQuery.  Use this\n   *  when you have a separate way to drill-down on the\n   *  dimension than the indexed facet ordinals. */\n  public void add(String dim, Query subQuery) {\n    assert drillDownDims.size() == dimQueries.size();\n    if (drillDownDims.containsKey(dim) == false) {\n      drillDownDims.put(dim, drillDownDims.size());\n      BooleanQuery.Builder builder = new BooleanQuery.Builder();\n      builder.setDisableCoord(true);\n      dimQueries.add(builder);\n    }\n    final int index = drillDownDims.get(dim);\n    dimQueries.get(index).add(subQuery, Occur.SHOULD);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["40640359164f629dd440a47df2e145d084ce9645"],"b6e499df4729e7162d5b39a70b0142e3186a029f":["21d36d0db865f7b84026b447bec653469a6e66df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bd3ed8c8fa2a4b995f5dfca3f00e5ce80161de0e":["b6e499df4729e7162d5b39a70b0142e3186a029f"],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c8a0e442f7b61f811680273b25da95994a724466":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bd3ed8c8fa2a4b995f5dfca3f00e5ce80161de0e"],"40640359164f629dd440a47df2e145d084ce9645":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747","c8a0e442f7b61f811680273b25da95994a724466"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c8a0e442f7b61f811680273b25da95994a724466"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["c8a0e442f7b61f811680273b25da95994a724466","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"b6e499df4729e7162d5b39a70b0142e3186a029f":["bd3ed8c8fa2a4b995f5dfca3f00e5ce80161de0e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","3cc728b07df73b197e6d940d27f9b08b63918f13"],"21d36d0db865f7b84026b447bec653469a6e66df":["b6e499df4729e7162d5b39a70b0142e3186a029f"],"bd3ed8c8fa2a4b995f5dfca3f00e5ce80161de0e":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c8a0e442f7b61f811680273b25da95994a724466":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["40640359164f629dd440a47df2e145d084ce9645"],"40640359164f629dd440a47df2e145d084ce9645":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}