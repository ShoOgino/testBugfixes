{"path":"solr/core/src/java/org/apache/solr/update/processor/FieldValueMutatingUpdateProcessor#mutate(SolrInputField).mjava","commits":[{"id":"be9a5d1846ac0beb625ba68da060e16119d9f51e","date":1328820081,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/FieldValueMutatingUpdateProcessor#mutate(SolrInputField).mjava","pathOld":"/dev/null","sourceNew":"  protected final SolrInputField mutate(final SolrInputField src) {\n    SolrInputField result = new SolrInputField(src.getName());\n    for (final Object srcVal : src.getValues()) {\n      final Object destVal = mutateValue(srcVal);\n      if (DELETE_VALUE_SINGLETON == destVal) { \n        /* NOOP */\n        log.debug(\"removing value from field '{}': {}\", \n                  src.getName(), srcVal);\n      } else {\n        if (destVal != srcVal) {\n          log.debug(\"replace value from field '{}': {} with {}\", \n                    new Object[] { src.getName(), srcVal, destVal });\n        }\n        result.addValue(destVal, 1.0F);\n      }\n    }\n    result.setBoost(src.getBoost());\n    return 0 == result.getValueCount() ? null : result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/FieldValueMutatingUpdateProcessor#mutate(SolrInputField).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/FieldValueMutatingUpdateProcessor#mutate(SolrInputField).mjava","sourceNew":"  @Override\n  protected final SolrInputField mutate(final SolrInputField src) {\n    SolrInputField result = new SolrInputField(src.getName());\n    for (final Object srcVal : src.getValues()) {\n      final Object destVal = mutateValue(srcVal);\n      if (DELETE_VALUE_SINGLETON == destVal) { \n        /* NOOP */\n        log.debug(\"removing value from field '{}': {}\", \n                  src.getName(), srcVal);\n      } else {\n        if (destVal != srcVal) {\n          log.debug(\"replace value from field '{}': {} with {}\", \n                    new Object[] { src.getName(), srcVal, destVal });\n        }\n        result.addValue(destVal, 1.0F);\n      }\n    }\n    result.setBoost(src.getBoost());\n    return 0 == result.getValueCount() ? null : result;\n  }\n\n","sourceOld":"  protected final SolrInputField mutate(final SolrInputField src) {\n    SolrInputField result = new SolrInputField(src.getName());\n    for (final Object srcVal : src.getValues()) {\n      final Object destVal = mutateValue(srcVal);\n      if (DELETE_VALUE_SINGLETON == destVal) { \n        /* NOOP */\n        log.debug(\"removing value from field '{}': {}\", \n                  src.getName(), srcVal);\n      } else {\n        if (destVal != srcVal) {\n          log.debug(\"replace value from field '{}': {} with {}\", \n                    new Object[] { src.getName(), srcVal, destVal });\n        }\n        result.addValue(destVal, 1.0F);\n      }\n    }\n    result.setBoost(src.getBoost());\n    return 0 == result.getValueCount() ? null : result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/FieldValueMutatingUpdateProcessor#mutate(SolrInputField).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/FieldValueMutatingUpdateProcessor#mutate(SolrInputField).mjava","sourceNew":"  @Override\n  protected final SolrInputField mutate(final SolrInputField src) {\n    SolrInputField result = new SolrInputField(src.getName());\n    for (final Object srcVal : src.getValues()) {\n      final Object destVal = mutateValue(srcVal);\n      if (DELETE_VALUE_SINGLETON == destVal) { \n        /* NOOP */\n        log.debug(\"removing value from field '{}': {}\", \n                  src.getName(), srcVal);\n      } else {\n        if (destVal != srcVal) {\n          log.debug(\"replace value from field '{}': {} with {}\", \n                    new Object[] { src.getName(), srcVal, destVal });\n        }\n        result.addValue(destVal, 1.0F);\n      }\n    }\n    result.setBoost(src.getBoost());\n    return 0 == result.getValueCount() ? null : result;\n  }\n\n","sourceOld":"  protected final SolrInputField mutate(final SolrInputField src) {\n    SolrInputField result = new SolrInputField(src.getName());\n    for (final Object srcVal : src.getValues()) {\n      final Object destVal = mutateValue(srcVal);\n      if (DELETE_VALUE_SINGLETON == destVal) { \n        /* NOOP */\n        log.debug(\"removing value from field '{}': {}\", \n                  src.getName(), srcVal);\n      } else {\n        if (destVal != srcVal) {\n          log.debug(\"replace value from field '{}': {} with {}\", \n                    new Object[] { src.getName(), srcVal, destVal });\n        }\n        result.addValue(destVal, 1.0F);\n      }\n    }\n    result.setBoost(src.getBoost());\n    return 0 == result.getValueCount() ? null : result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f09e72d6997a334fb9dc92ae57a60371f9a700af","date":1418387608,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/FieldValueMutatingUpdateProcessor#mutate(SolrInputField).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/FieldValueMutatingUpdateProcessor#mutate(SolrInputField).mjava","sourceNew":"  @Override\n  protected final SolrInputField mutate(final SolrInputField src) {\n    Collection<Object> values = src.getValues();\n    if(values == null) return src;//don't mutate\n    SolrInputField result = new SolrInputField(src.getName());\n    for (final Object srcVal : values) {\n      final Object destVal = mutateValue(srcVal);\n      if (DELETE_VALUE_SINGLETON == destVal) { \n        /* NOOP */\n        log.debug(\"removing value from field '{}': {}\", \n                  src.getName(), srcVal);\n      } else {\n        if (destVal != srcVal) {\n          log.debug(\"replace value from field '{}': {} with {}\", \n                    new Object[] { src.getName(), srcVal, destVal });\n        }\n        result.addValue(destVal, 1.0F);\n      }\n    }\n    result.setBoost(src.getBoost());\n    return 0 == result.getValueCount() ? null : result;\n  }\n\n","sourceOld":"  @Override\n  protected final SolrInputField mutate(final SolrInputField src) {\n    SolrInputField result = new SolrInputField(src.getName());\n    for (final Object srcVal : src.getValues()) {\n      final Object destVal = mutateValue(srcVal);\n      if (DELETE_VALUE_SINGLETON == destVal) { \n        /* NOOP */\n        log.debug(\"removing value from field '{}': {}\", \n                  src.getName(), srcVal);\n      } else {\n        if (destVal != srcVal) {\n          log.debug(\"replace value from field '{}': {} with {}\", \n                    new Object[] { src.getName(), srcVal, destVal });\n        }\n        result.addValue(destVal, 1.0F);\n      }\n    }\n    result.setBoost(src.getBoost());\n    return 0 == result.getValueCount() ? null : result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/FieldValueMutatingUpdateProcessor#mutate(SolrInputField).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/FieldValueMutatingUpdateProcessor#mutate(SolrInputField).mjava","sourceNew":"  @Override\n  protected final SolrInputField mutate(final SolrInputField src) {\n    Collection<Object> values = src.getValues();\n    if(values == null) return src;//don't mutate\n    SolrInputField result = new SolrInputField(src.getName());\n    for (final Object srcVal : values) {\n      final Object destVal = mutateValue(srcVal);\n      if (DELETE_VALUE_SINGLETON == destVal) { \n        /* NOOP */\n        log.debug(\"removing value from field '{}': {}\", \n                  src.getName(), srcVal);\n      } else {\n        if (destVal != srcVal) {\n          log.debug(\"replace value from field '{}': {} with {}\", \n                    new Object[] { src.getName(), srcVal, destVal });\n        }\n        result.addValue(destVal);\n      }\n    }\n    return 0 == result.getValueCount() ? null : result;\n  }\n\n","sourceOld":"  @Override\n  protected final SolrInputField mutate(final SolrInputField src) {\n    Collection<Object> values = src.getValues();\n    if(values == null) return src;//don't mutate\n    SolrInputField result = new SolrInputField(src.getName());\n    for (final Object srcVal : values) {\n      final Object destVal = mutateValue(srcVal);\n      if (DELETE_VALUE_SINGLETON == destVal) { \n        /* NOOP */\n        log.debug(\"removing value from field '{}': {}\", \n                  src.getName(), srcVal);\n      } else {\n        if (destVal != srcVal) {\n          log.debug(\"replace value from field '{}': {} with {}\", \n                    new Object[] { src.getName(), srcVal, destVal });\n        }\n        result.addValue(destVal, 1.0F);\n      }\n    }\n    result.setBoost(src.getBoost());\n    return 0 == result.getValueCount() ? null : result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"740d649f013f07efbeb73ca854f106c60166e7c0","date":1587431295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/FieldValueMutatingUpdateProcessor#mutate(SolrInputField).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/FieldValueMutatingUpdateProcessor#mutate(SolrInputField).mjava","sourceNew":"  @Override\n  protected final SolrInputField mutate(final SolrInputField src) {\n    Collection<Object> values = src.getValues();\n    if(values == null) return src;//don't mutate\n    SolrInputField result = new SolrInputField(src.getName());\n    for (final Object srcVal : values) {\n      final Object destVal = mutateValue(srcVal);\n      if (DELETE_VALUE_SINGLETON == destVal) { \n        /* NOOP */\n        if (log.isDebugEnabled()) {\n          log.debug(\"removing value from field '{}': {}\",\n              src.getName(), srcVal);\n        }\n      } else {\n        if (destVal != srcVal) {\n          if (log.isDebugEnabled()) {\n            log.debug(\"replace value from field '{}': {} with {}\",\n                new Object[]{src.getName(), srcVal, destVal});\n          }\n        }\n        result.addValue(destVal);\n      }\n    }\n    return 0 == result.getValueCount() ? null : result;\n  }\n\n","sourceOld":"  @Override\n  protected final SolrInputField mutate(final SolrInputField src) {\n    Collection<Object> values = src.getValues();\n    if(values == null) return src;//don't mutate\n    SolrInputField result = new SolrInputField(src.getName());\n    for (final Object srcVal : values) {\n      final Object destVal = mutateValue(srcVal);\n      if (DELETE_VALUE_SINGLETON == destVal) { \n        /* NOOP */\n        log.debug(\"removing value from field '{}': {}\", \n                  src.getName(), srcVal);\n      } else {\n        if (destVal != srcVal) {\n          log.debug(\"replace value from field '{}': {} with {}\", \n                    new Object[] { src.getName(), srcVal, destVal });\n        }\n        result.addValue(destVal);\n      }\n    }\n    return 0 == result.getValueCount() ? null : result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["be9a5d1846ac0beb625ba68da060e16119d9f51e","7530de27b87b961b51f01bd1299b7004d46e8823"],"be9a5d1846ac0beb625ba68da060e16119d9f51e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"740d649f013f07efbeb73ca854f106c60166e7c0":["acd9883560fd89e6448b2b447302fe543040cd4f"],"f09e72d6997a334fb9dc92ae57a60371f9a700af":["7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"acd9883560fd89e6448b2b447302fe543040cd4f":["f09e72d6997a334fb9dc92ae57a60371f9a700af"],"7530de27b87b961b51f01bd1299b7004d46e8823":["be9a5d1846ac0beb625ba68da060e16119d9f51e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["740d649f013f07efbeb73ca854f106c60166e7c0"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"be9a5d1846ac0beb625ba68da060e16119d9f51e":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"740d649f013f07efbeb73ca854f106c60166e7c0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f09e72d6997a334fb9dc92ae57a60371f9a700af":["acd9883560fd89e6448b2b447302fe543040cd4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be9a5d1846ac0beb625ba68da060e16119d9f51e"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","f09e72d6997a334fb9dc92ae57a60371f9a700af"],"acd9883560fd89e6448b2b447302fe543040cd4f":["740d649f013f07efbeb73ca854f106c60166e7c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}