{"path":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#parseFieldBoosts(String[]).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#parseFieldBoosts(String[]).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#parseFieldBoosts(String[]).mjava","sourceNew":"  /**\n   * Like <code>parseFieldBoosts(String)</code>, but parses all the strings\n   * in the provided array (which may be null).\n   *\n   * @param fieldLists an array of Strings eg. <code>{\"fieldOne^2.3\", \"fieldTwo\", fieldThree^-0.4}</code>\n   * @return Map of fieldOne =&gt; 2.3, fieldTwo =&gt; null, fieldThree =&gt; -0.4\n   */\n  public static Map<String,Float> parseFieldBoosts(String[] fieldLists) {\n    if (null == fieldLists || 0 == fieldLists.length) {\n      return new HashMap<String,Float>();\n    }\n    Map<String, Float> out = new HashMap<String,Float>(7);\n    for (String in : fieldLists) {\n      if (null == in || \"\".equals(in.trim()))\n        continue;\n      String[] bb = in.trim().split(\"\\\\s+\");\n      for (String s : bb) {\n        String[] bbb = s.split(\"\\\\^\");\n        out.put(bbb[0], 1 == bbb.length ? null : Float.valueOf(bbb[1]));\n      }\n    }\n    return out;\n  }\n\n","sourceOld":"  /**\n   * Like <code>parseFieldBoosts(String)</code>, but parses all the strings\n   * in the provided array (which may be null).\n   *\n   * @param fieldLists an array of Strings eg. <code>{\"fieldOne^2.3\", \"fieldTwo\", fieldThree^-0.4}</code>\n   * @return Map of fieldOne =&gt; 2.3, fieldTwo =&gt; null, fieldThree =&gt; -0.4\n   */\n  public static Map<String,Float> parseFieldBoosts(String[] fieldLists) {\n    if (null == fieldLists || 0 == fieldLists.length) {\n      return new HashMap<String,Float>();\n    }\n    Map<String, Float> out = new HashMap<String,Float>(7);\n    for (String in : fieldLists) {\n      if (null == in || \"\".equals(in.trim()))\n        continue;\n      String[] bb = in.trim().split(\"\\\\s+\");\n      for (String s : bb) {\n        String[] bbb = s.split(\"\\\\^\");\n        out.put(bbb[0], 1 == bbb.length ? null : Float.valueOf(bbb[1]));\n      }\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#parseFieldBoosts(String[]).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#parseFieldBoosts(String[]).mjava","sourceNew":"  /**\n   * Like <code>parseFieldBoosts(String)</code>, but parses all the strings\n   * in the provided array (which may be null).\n   *\n   * @param fieldLists an array of Strings eg. <code>{\"fieldOne^2.3\", \"fieldTwo\", fieldThree^-0.4}</code>\n   * @return Map of fieldOne =&gt; 2.3, fieldTwo =&gt; null, fieldThree =&gt; -0.4\n   */\n  public static Map<String,Float> parseFieldBoosts(String[] fieldLists) {\n    if (null == fieldLists || 0 == fieldLists.length) {\n      return new HashMap<String,Float>();\n    }\n    Map<String, Float> out = new HashMap<String,Float>(7);\n    for (String in : fieldLists) {\n      if (null == in || \"\".equals(in.trim()))\n        continue;\n      String[] bb = in.trim().split(\"\\\\s+\");\n      for (String s : bb) {\n        String[] bbb = s.split(\"\\\\^\");\n        out.put(bbb[0], 1 == bbb.length ? null : Float.valueOf(bbb[1]));\n      }\n    }\n    return out;\n  }\n\n","sourceOld":"  /**\n   * Like <code>parseFieldBoosts(String)</code>, but parses all the strings\n   * in the provided array (which may be null).\n   *\n   * @param fieldLists an array of Strings eg. <code>{\"fieldOne^2.3\", \"fieldTwo\", fieldThree^-0.4}</code>\n   * @return Map of fieldOne =&gt; 2.3, fieldTwo =&gt; null, fieldThree =&gt; -0.4\n   */\n  public static Map<String,Float> parseFieldBoosts(String[] fieldLists) {\n    if (null == fieldLists || 0 == fieldLists.length) {\n      return new HashMap<String,Float>();\n    }\n    Map<String, Float> out = new HashMap<String,Float>(7);\n    for (String in : fieldLists) {\n      if (null == in || \"\".equals(in.trim()))\n        continue;\n      String[] bb = in.trim().split(\"\\\\s+\");\n      for (String s : bb) {\n        String[] bbb = s.split(\"\\\\^\");\n        out.put(bbb[0], 1 == bbb.length ? null : Float.valueOf(bbb[1]));\n      }\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#parseFieldBoosts(String[]).mjava","pathOld":"solr/src/java/org/apache/solr/util/SolrPluginUtils#parseFieldBoosts(String[]).mjava","sourceNew":"  /**\n   * Like <code>parseFieldBoosts(String)</code>, but parses all the strings\n   * in the provided array (which may be null).\n   *\n   * @param fieldLists an array of Strings eg. <code>{\"fieldOne^2.3\", \"fieldTwo\", fieldThree^-0.4}</code>\n   * @return Map of fieldOne =&gt; 2.3, fieldTwo =&gt; null, fieldThree =&gt; -0.4\n   */\n  public static Map<String,Float> parseFieldBoosts(String[] fieldLists) {\n    if (null == fieldLists || 0 == fieldLists.length) {\n      return new HashMap<String,Float>();\n    }\n    Map<String, Float> out = new HashMap<String,Float>(7);\n    for (String in : fieldLists) {\n      if (null == in || \"\".equals(in.trim()))\n        continue;\n      String[] bb = in.trim().split(\"\\\\s+\");\n      for (String s : bb) {\n        String[] bbb = s.split(\"\\\\^\");\n        out.put(bbb[0], 1 == bbb.length ? null : Float.valueOf(bbb[1]));\n      }\n    }\n    return out;\n  }\n\n","sourceOld":"  /**\n   * Like <code>parseFieldBoosts(String)</code>, but parses all the strings\n   * in the provided array (which may be null).\n   *\n   * @param fieldLists an array of Strings eg. <code>{\"fieldOne^2.3\", \"fieldTwo\", fieldThree^-0.4}</code>\n   * @return Map of fieldOne =&gt; 2.3, fieldTwo =&gt; null, fieldThree =&gt; -0.4\n   */\n  public static Map<String,Float> parseFieldBoosts(String[] fieldLists) {\n    if (null == fieldLists || 0 == fieldLists.length) {\n      return new HashMap<String,Float>();\n    }\n    Map<String, Float> out = new HashMap<String,Float>(7);\n    for (String in : fieldLists) {\n      if (null == in || \"\".equals(in.trim()))\n        continue;\n      String[] bb = in.trim().split(\"\\\\s+\");\n      for (String s : bb) {\n        String[] bbb = s.split(\"\\\\^\");\n        out.put(bbb[0], 1 == bbb.length ? null : Float.valueOf(bbb[1]));\n      }\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9e959ce5e0805c43916e999d21f2018a2b475ab","date":1337958990,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#parseFieldBoosts(String[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#parseFieldBoosts(String[]).mjava","sourceNew":"  /**\n   * Like <code>parseFieldBoosts(String)</code>, but parses all the strings\n   * in the provided array (which may be null).\n   *\n   * @param fieldLists an array of Strings eg. <code>{\"fieldOne^2.3\", \"fieldTwo\", fieldThree^-0.4}</code>\n   * @return Map of fieldOne =&gt; 2.3, fieldTwo =&gt; null, fieldThree =&gt; -0.4\n   */\n  public static Map<String,Float> parseFieldBoosts(String[] fieldLists) {\n    if (null == fieldLists || 0 == fieldLists.length) {\n      return new HashMap<String,Float>();\n    }\n    Map<String, Float> out = new HashMap<String,Float>(7);\n    for (String in : fieldLists) {\n      if (null == in) {\n        continue;\n      }\n      in = in.trim();\n      if(in.length()==0) {\n        continue;\n      }\n      \n      String[] bb = whitespacePattern.split(in);\n      for (String s : bb) {\n        String[] bbb = caratPattern.split(s);\n        out.put(bbb[0], 1 == bbb.length ? null : Float.valueOf(bbb[1]));\n      }\n    }\n    return out;\n  }\n\n","sourceOld":"  /**\n   * Like <code>parseFieldBoosts(String)</code>, but parses all the strings\n   * in the provided array (which may be null).\n   *\n   * @param fieldLists an array of Strings eg. <code>{\"fieldOne^2.3\", \"fieldTwo\", fieldThree^-0.4}</code>\n   * @return Map of fieldOne =&gt; 2.3, fieldTwo =&gt; null, fieldThree =&gt; -0.4\n   */\n  public static Map<String,Float> parseFieldBoosts(String[] fieldLists) {\n    if (null == fieldLists || 0 == fieldLists.length) {\n      return new HashMap<String,Float>();\n    }\n    Map<String, Float> out = new HashMap<String,Float>(7);\n    for (String in : fieldLists) {\n      if (null == in || \"\".equals(in.trim()))\n        continue;\n      String[] bb = in.trim().split(\"\\\\s+\");\n      for (String s : bb) {\n        String[] bbb = s.split(\"\\\\^\");\n        out.put(bbb[0], 1 == bbb.length ? null : Float.valueOf(bbb[1]));\n      }\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#parseFieldBoosts(String[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#parseFieldBoosts(String[]).mjava","sourceNew":"  /**\n   * Like <code>parseFieldBoosts(String)</code>, but parses all the strings\n   * in the provided array (which may be null).\n   *\n   * @param fieldLists an array of Strings eg. <code>{\"fieldOne^2.3\", \"fieldTwo\", fieldThree^-0.4}</code>\n   * @return Map of fieldOne =&gt; 2.3, fieldTwo =&gt; null, fieldThree =&gt; -0.4\n   */\n  public static Map<String,Float> parseFieldBoosts(String[] fieldLists) {\n    if (null == fieldLists || 0 == fieldLists.length) {\n      return new HashMap<>();\n    }\n    Map<String, Float> out = new HashMap<>(7);\n    for (String in : fieldLists) {\n      if (null == in) {\n        continue;\n      }\n      in = in.trim();\n      if(in.length()==0) {\n        continue;\n      }\n      \n      String[] bb = whitespacePattern.split(in);\n      for (String s : bb) {\n        String[] bbb = caratPattern.split(s);\n        out.put(bbb[0], 1 == bbb.length ? null : Float.valueOf(bbb[1]));\n      }\n    }\n    return out;\n  }\n\n","sourceOld":"  /**\n   * Like <code>parseFieldBoosts(String)</code>, but parses all the strings\n   * in the provided array (which may be null).\n   *\n   * @param fieldLists an array of Strings eg. <code>{\"fieldOne^2.3\", \"fieldTwo\", fieldThree^-0.4}</code>\n   * @return Map of fieldOne =&gt; 2.3, fieldTwo =&gt; null, fieldThree =&gt; -0.4\n   */\n  public static Map<String,Float> parseFieldBoosts(String[] fieldLists) {\n    if (null == fieldLists || 0 == fieldLists.length) {\n      return new HashMap<String,Float>();\n    }\n    Map<String, Float> out = new HashMap<String,Float>(7);\n    for (String in : fieldLists) {\n      if (null == in) {\n        continue;\n      }\n      in = in.trim();\n      if(in.length()==0) {\n        continue;\n      }\n      \n      String[] bb = whitespacePattern.split(in);\n      for (String s : bb) {\n        String[] bbb = caratPattern.split(s);\n        out.put(bbb[0], 1 == bbb.length ? null : Float.valueOf(bbb[1]));\n      }\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5991832ae4bac45cecfff0fc33125aeac823d3d","date":1456229449,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#parseFieldBoosts(String[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#parseFieldBoosts(String[]).mjava","sourceNew":"  /**\n   * Like <code>parseFieldBoosts(String)</code>, but parses all the strings\n   * in the provided array (which may be null).\n   *\n   * @param fieldLists an array of Strings eg. <code>{\"fieldOne^2.3\", \"fieldTwo\", fieldThree^-0.4}</code>\n   * @return Map of fieldOne =&gt; 2.3, fieldTwo =&gt; null, fieldThree =&gt; -0.4\n   */\n  public static Map<String,Float> parseFieldBoosts(String[] fieldLists) {\n    if (null == fieldLists || 0 == fieldLists.length) {\n      return new HashMap<>();\n    }\n    Map<String, Float> out = new HashMap<>(7);\n    for (String in : fieldLists) {\n      if (null == in) {\n        continue;\n      }\n      in = in.trim();\n      if(in.length()==0) {\n        continue;\n      }\n\n      String[] bb = whitespacePattern.split(in);\n      for (String s : bb) {\n        String[] bbb = caratPattern.split(s);\n        out.put(bbb[0], 1 == bbb.length ? null : Float.valueOf(bbb[1]));\n      }\n    }\n    return out;\n  }\n\n","sourceOld":"  /**\n   * Like <code>parseFieldBoosts(String)</code>, but parses all the strings\n   * in the provided array (which may be null).\n   *\n   * @param fieldLists an array of Strings eg. <code>{\"fieldOne^2.3\", \"fieldTwo\", fieldThree^-0.4}</code>\n   * @return Map of fieldOne =&gt; 2.3, fieldTwo =&gt; null, fieldThree =&gt; -0.4\n   */\n  public static Map<String,Float> parseFieldBoosts(String[] fieldLists) {\n    if (null == fieldLists || 0 == fieldLists.length) {\n      return new HashMap<>();\n    }\n    Map<String, Float> out = new HashMap<>(7);\n    for (String in : fieldLists) {\n      if (null == in) {\n        continue;\n      }\n      in = in.trim();\n      if(in.length()==0) {\n        continue;\n      }\n      \n      String[] bb = whitespacePattern.split(in);\n      for (String s : bb) {\n        String[] bbb = caratPattern.split(s);\n        out.put(bbb[0], 1 == bbb.length ? null : Float.valueOf(bbb[1]));\n      }\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5296efc4b319f5647b606629c093a94b23692c6","date":1456267155,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#parseFieldBoosts(String[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrPluginUtils#parseFieldBoosts(String[]).mjava","sourceNew":"  /**\n   * Like <code>parseFieldBoosts(String)</code>, but parses all the strings\n   * in the provided array (which may be null).\n   *\n   * @param fieldLists an array of Strings eg. <code>{\"fieldOne^2.3\", \"fieldTwo\", fieldThree^-0.4}</code>\n   * @return Map of fieldOne =&gt; 2.3, fieldTwo =&gt; null, fieldThree =&gt; -0.4\n   */\n  public static Map<String,Float> parseFieldBoosts(String[] fieldLists) {\n    if (null == fieldLists || 0 == fieldLists.length) {\n      return new HashMap<>();\n    }\n    Map<String, Float> out = new HashMap<>(7);\n    for (String in : fieldLists) {\n      if (null == in) {\n        continue;\n      }\n      in = in.trim();\n      if(in.length()==0) {\n        continue;\n      }\n\n      String[] bb = whitespacePattern.split(in);\n      for (String s : bb) {\n        String[] bbb = caratPattern.split(s);\n        out.put(bbb[0], 1 == bbb.length ? null : Float.valueOf(bbb[1]));\n      }\n    }\n    return out;\n  }\n\n","sourceOld":"  /**\n   * Like <code>parseFieldBoosts(String)</code>, but parses all the strings\n   * in the provided array (which may be null).\n   *\n   * @param fieldLists an array of Strings eg. <code>{\"fieldOne^2.3\", \"fieldTwo\", fieldThree^-0.4}</code>\n   * @return Map of fieldOne =&gt; 2.3, fieldTwo =&gt; null, fieldThree =&gt; -0.4\n   */\n  public static Map<String,Float> parseFieldBoosts(String[] fieldLists) {\n    if (null == fieldLists || 0 == fieldLists.length) {\n      return new HashMap<>();\n    }\n    Map<String, Float> out = new HashMap<>(7);\n    for (String in : fieldLists) {\n      if (null == in) {\n        continue;\n      }\n      in = in.trim();\n      if(in.length()==0) {\n        continue;\n      }\n      \n      String[] bb = whitespacePattern.split(in);\n      for (String s : bb) {\n        String[] bbb = caratPattern.split(s);\n        out.put(bbb[0], 1 == bbb.length ? null : Float.valueOf(bbb[1]));\n      }\n    }\n    return out;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d9e959ce5e0805c43916e999d21f2018a2b475ab"],"d9e959ce5e0805c43916e999d21f2018a2b475ab":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a5296efc4b319f5647b606629c093a94b23692c6":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","b5991832ae4bac45cecfff0fc33125aeac823d3d"],"b5991832ae4bac45cecfff0fc33125aeac823d3d":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b5991832ae4bac45cecfff0fc33125aeac823d3d"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["a5296efc4b319f5647b606629c093a94b23692c6","b5991832ae4bac45cecfff0fc33125aeac823d3d"],"d9e959ce5e0805c43916e999d21f2018a2b475ab":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["d9e959ce5e0805c43916e999d21f2018a2b475ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"a5296efc4b319f5647b606629c093a94b23692c6":[],"b5991832ae4bac45cecfff0fc33125aeac823d3d":["a5296efc4b319f5647b606629c093a94b23692c6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","a5296efc4b319f5647b606629c093a94b23692c6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}