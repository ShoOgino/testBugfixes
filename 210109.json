{"path":"lucene/core/src/java/org/apache/lucene/util/WeakIdentityMap#[K,V]_newHashMap(boolean).mjava","commits":[{"id":"702ef053ffa12d6bc4fecda3ebf4fd0e897177be","date":1365845315,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/WeakIdentityMap#[K,V]_newHashMap(boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new {@code WeakIdentityMap} based on a non-synchronized {@link HashMap}.\n   * @param reapOnRead controls if the map <a href=\"#reapInfo\">cleans up the reference queue on every read operation</a>.\n   */\n  public static <K,V> WeakIdentityMap<K,V> newHashMap(boolean reapOnRead) {\n    return new WeakIdentityMap<K,V>(new HashMap<IdentityWeakReference,V>(), reapOnRead);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/WeakIdentityMap#[K,V]_newHashMap(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/WeakIdentityMap#[K,V]_newHashMap(boolean).mjava","sourceNew":"  /**\n   * Creates a new {@code WeakIdentityMap} based on a non-synchronized {@link HashMap}.\n   * @param reapOnRead controls if the map <a href=\"#reapInfo\">cleans up the reference queue on every read operation</a>.\n   */\n  public static <K,V> WeakIdentityMap<K,V> newHashMap(boolean reapOnRead) {\n    return new WeakIdentityMap<>(new HashMap<IdentityWeakReference,V>(), reapOnRead);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@code WeakIdentityMap} based on a non-synchronized {@link HashMap}.\n   * @param reapOnRead controls if the map <a href=\"#reapInfo\">cleans up the reference queue on every read operation</a>.\n   */\n  public static <K,V> WeakIdentityMap<K,V> newHashMap(boolean reapOnRead) {\n    return new WeakIdentityMap<K,V>(new HashMap<IdentityWeakReference,V>(), reapOnRead);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["702ef053ffa12d6bc4fecda3ebf4fd0e897177be"],"702ef053ffa12d6bc4fecda3ebf4fd0e897177be":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"702ef053ffa12d6bc4fecda3ebf4fd0e897177be":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["702ef053ffa12d6bc4fecda3ebf4fd0e897177be"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}