{"path":"src/java/org/apache/solr/schema/TrieField#getMainValuePrefix(FieldType).mjava","commits":[{"id":"5e62bfc99fea332bfdcdca0f73a821428d533279","date":1254838400,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/TrieField#getMainValuePrefix(FieldType).mjava","pathOld":"/dev/null","sourceNew":"  /** expert internal use, subject to change.\n   * Returns null if no prefix or prefix not needed, or the prefix of the main value of a trie field\n   * that indexes multiple precisions per value.\n   */\n  public static String getMainValuePrefix(FieldType ft) {\n    if (ft instanceof TrieDateField) {\n      int step = ((TrieDateField)ft).getPrecisionStep();\n      if (step <= 0 || step >=64) return null;\n      return LONG_PREFIX;\n    } else if (ft instanceof TrieField) {\n      TrieField trie = (TrieField)ft;\n      if (trie.precisionStep  == Integer.MAX_VALUE) return null;\n\n      switch (trie.type) {\n        case INTEGER:\n        case FLOAT:\n          return INT_PREFIX;\n        case LONG:\n        case DOUBLE:\n        case DATE:\n          return LONG_PREFIX;\n        default:\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + trie.type);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/TrieField#getMainValuePrefix(FieldType).mjava","pathOld":"src/java/org/apache/solr/schema/TrieField#getMainValuePrefix(FieldType).mjava","sourceNew":"  /** expert internal use, subject to change.\n   * Returns null if no prefix or prefix not needed, or the prefix of the main value of a trie field\n   * that indexes multiple precisions per value.\n   */\n  public static String getMainValuePrefix(FieldType ft) {\n    if (ft instanceof TrieDateField) {\n      int step = ((TrieDateField)ft).getPrecisionStep();\n      if (step <= 0 || step >=64) return null;\n      return LONG_PREFIX;\n    } else if (ft instanceof TrieField) {\n      TrieField trie = (TrieField)ft;\n      if (trie.precisionStep  == Integer.MAX_VALUE) return null;\n\n      switch (trie.type) {\n        case INTEGER:\n        case FLOAT:\n          return INT_PREFIX;\n        case LONG:\n        case DOUBLE:\n        case DATE:\n          return LONG_PREFIX;\n        default:\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + trie.type);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  /** expert internal use, subject to change.\n   * Returns null if no prefix or prefix not needed, or the prefix of the main value of a trie field\n   * that indexes multiple precisions per value.\n   */\n  public static String getMainValuePrefix(FieldType ft) {\n    if (ft instanceof TrieDateField) {\n      int step = ((TrieDateField)ft).getPrecisionStep();\n      if (step <= 0 || step >=64) return null;\n      return LONG_PREFIX;\n    } else if (ft instanceof TrieField) {\n      TrieField trie = (TrieField)ft;\n      if (trie.precisionStep  == Integer.MAX_VALUE) return null;\n\n      switch (trie.type) {\n        case INTEGER:\n        case FLOAT:\n          return INT_PREFIX;\n        case LONG:\n        case DOUBLE:\n        case DATE:\n          return LONG_PREFIX;\n        default:\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field: \" + trie.type);\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5e62bfc99fea332bfdcdca0f73a821428d533279":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["5e62bfc99fea332bfdcdca0f73a821428d533279"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["5e62bfc99fea332bfdcdca0f73a821428d533279"],"5e62bfc99fea332bfdcdca0f73a821428d533279":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}