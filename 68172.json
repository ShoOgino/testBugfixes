{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#incRef().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#incRef().mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#incRef().mjava","sourceNew":"  /**\n   * Expert: increments the refCount of this TaxonomyReader instance. \n   * RefCounts can be used to determine when a taxonomy reader can be closed \n   * safely, i.e. as soon as there are no more references. \n   * Be sure to always call a corresponding decRef(), in a finally clause; \n   * otherwise the reader may never be closed. \n   */\n  public void incRef();\n\n","sourceOld":"  /**\n   * Expert: increments the refCount of this TaxonomyReader instance. \n   * RefCounts can be used to determine when a taxonomy reader can be closed \n   * safely, i.e. as soon as there are no more references. \n   * Be sure to always call a corresponding decRef(), in a finally clause; \n   * otherwise the reader may never be closed. \n   */\n  public void incRef();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1","date":1353511594,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#incRef().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#incRef().mjava","sourceNew":"  /**\n   * Expert: increments the refCount of this TaxonomyReader instance. RefCounts\n   * can be used to determine when a taxonomy reader can be closed safely, i.e.\n   * as soon as there are no more references. Be sure to always call a\n   * corresponding decRef(), in a finally clause; otherwise the reader may never\n   * be closed.\n   */\n  public final void incRef() {\n    ensureOpen();\n    refCount.incrementAndGet();\n  }\n\n","sourceOld":"  /**\n   * Expert: increments the refCount of this TaxonomyReader instance. \n   * RefCounts can be used to determine when a taxonomy reader can be closed \n   * safely, i.e. as soon as there are no more references. \n   * Be sure to always call a corresponding decRef(), in a finally clause; \n   * otherwise the reader may never be closed. \n   */\n  public void incRef();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#incRef().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/TaxonomyReader#incRef().mjava","sourceNew":"  /**\n   * Expert: increments the refCount of this TaxonomyReader instance. RefCounts\n   * can be used to determine when a taxonomy reader can be closed safely, i.e.\n   * as soon as there are no more references. Be sure to always call a\n   * corresponding decRef(), in a finally clause; otherwise the reader may never\n   * be closed.\n   */\n  public final void incRef() {\n    ensureOpen();\n    refCount.incrementAndGet();\n  }\n\n","sourceOld":"  /**\n   * Expert: increments the refCount of this TaxonomyReader instance. \n   * RefCounts can be used to determine when a taxonomy reader can be closed \n   * safely, i.e. as soon as there are no more references. \n   * Be sure to always call a corresponding decRef(), in a finally clause; \n   * otherwise the reader may never be closed. \n   */\n  public void incRef();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["b89678825b68eccaf09e6ab71675fc0b0af1e099","219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["407687e67faf6e1f02a211ca078d8e3eed631027","219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}