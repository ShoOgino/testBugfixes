{"path":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter.SortInfo#toString().mjava","commits":[{"id":"36f5a8c57e16c0f801006a52f87c75378427852e","date":1393256707,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter.SortInfo#toString().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Sort.SortInfo#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      return String.format(Locale.ROOT,\n          \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n          totalTime / 1000.0d, readTime / 1000.0d, sortTime / 1000.0d, mergeTime / 1000.0d,\n          lines, tempMergeFiles, mergeRounds,\n          (double) bufferSize / MB);\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      return String.format(Locale.ROOT,\n          \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n          totalTime / 1000.0d, readTime / 1000.0d, sortTime / 1000.0d, mergeTime / 1000.0d,\n          lines, tempMergeFiles, mergeRounds,\n          (double) bufferSize / MB);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba791bce8103c79e38f957e9c5a53a75871bd918","date":1393539206,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter.SortInfo#toString().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Sort.SortInfo#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      return String.format(Locale.ROOT,\n          \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n          totalTime / 1000.0d, readTime / 1000.0d, sortTime / 1000.0d, mergeTime / 1000.0d,\n          lines, tempMergeFiles, mergeRounds,\n          (double) bufferSize / MB);\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      return String.format(Locale.ROOT,\n          \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n          totalTime / 1000.0d, readTime / 1000.0d, sortTime / 1000.0d, mergeTime / 1000.0d,\n          lines, tempMergeFiles, mergeRounds,\n          (double) bufferSize / MB);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"867e3d9153fb761456b54a9dcce566e1545c5ef6","date":1444903098,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter.SortInfo#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter.SortInfo#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      return String.format(Locale.ROOT,\n          \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n          totalTime / 1000.0d, readTime / 1000.0d, sortTime / 1000.0d, mergeTime / 1000.0d,\n          lineCount, tempMergeFiles, mergeRounds,\n          (double) bufferSize / MB);\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      return String.format(Locale.ROOT,\n          \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n          totalTime / 1000.0d, readTime / 1000.0d, sortTime / 1000.0d, mergeTime / 1000.0d,\n          lines, tempMergeFiles, mergeRounds,\n          (double) bufferSize / MB);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dcb0432bcb41451b41e9aaaabe99f5d208258fe","date":1493203108,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter.SortInfo#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter.SortInfo#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      return String.format(Locale.ROOT,\n                           \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n                           totalTimeMS / 1000.0d, readTimeMS / 1000.0d, sortTimeMS.get() / 1000.0d, mergeTimeMS.get() / 1000.0d,\n                           lineCount, tempMergeFiles, mergeRounds,\n                           (double) bufferSize / MB);\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      return String.format(Locale.ROOT,\n          \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n          totalTime / 1000.0d, readTime / 1000.0d, sortTime / 1000.0d, mergeTime / 1000.0d,\n          lineCount, tempMergeFiles, mergeRounds,\n          (double) bufferSize / MB);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter.SortInfo#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter.SortInfo#toString().mjava","sourceNew":"    @Override\n    public String toString() {\n      return String.format(Locale.ROOT,\n                           \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n                           totalTimeMS / 1000.0d, readTimeMS / 1000.0d, sortTimeMS.get() / 1000.0d, mergeTimeMS.get() / 1000.0d,\n                           lineCount, tempMergeFiles, mergeRounds,\n                           (double) bufferSize / MB);\n    }\n\n","sourceOld":"    @Override\n    public String toString() {\n      return String.format(Locale.ROOT,\n          \"time=%.2f sec. total (%.2f reading, %.2f sorting, %.2f merging), lines=%d, temp files=%d, merges=%d, soft ram limit=%.2f MB\",\n          totalTime / 1000.0d, readTime / 1000.0d, sortTime / 1000.0d, mergeTime / 1000.0d,\n          lineCount, tempMergeFiles, mergeRounds,\n          (double) bufferSize / MB);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["867e3d9153fb761456b54a9dcce566e1545c5ef6","7dcb0432bcb41451b41e9aaaabe99f5d208258fe"],"ba791bce8103c79e38f957e9c5a53a75871bd918":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","36f5a8c57e16c0f801006a52f87c75378427852e"],"36f5a8c57e16c0f801006a52f87c75378427852e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dcb0432bcb41451b41e9aaaabe99f5d208258fe":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dcb0432bcb41451b41e9aaaabe99f5d208258fe"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"ba791bce8103c79e38f957e9c5a53a75871bd918":["867e3d9153fb761456b54a9dcce566e1545c5ef6"],"36f5a8c57e16c0f801006a52f87c75378427852e":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba791bce8103c79e38f957e9c5a53a75871bd918","36f5a8c57e16c0f801006a52f87c75378427852e"],"7dcb0432bcb41451b41e9aaaabe99f5d208258fe":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"867e3d9153fb761456b54a9dcce566e1545c5ef6":["e9017cf144952056066919f1ebc7897ff9bd71b1","7dcb0432bcb41451b41e9aaaabe99f5d208258fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}