{"path":"solr/core/src/java/org/apache/solr/core/SolrCores#update(Observable,Object).mjava","commits":[{"id":"9435d55e3ea95c5d94406d3affc36f9505b6a736","date":1491251232,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCores#update(Observable,Object).mjava","pathOld":"/dev/null","sourceNew":"  // Let transient cache implementation tell us when it ages out a corel\n  @Override\n  public void update(Observable o, Object arg) {\n    synchronized (modifyLock) {\n      pendingCloses.add((SolrCore) arg); // Essentially just queue this core up for closing.\n      modifyLock.notifyAll(); // Wakes up closer thread too\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b6a4b585aed7660a589375f6a09b90efd29c961","date":1491296430,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCores#update(Observable,Object).mjava","pathOld":"/dev/null","sourceNew":"  // Let transient cache implementation tell us when it ages out a corel\n  @Override\n  public void update(Observable o, Object arg) {\n    synchronized (modifyLock) {\n      pendingCloses.add((SolrCore) arg); // Essentially just queue this core up for closing.\n      modifyLock.notifyAll(); // Wakes up closer thread too\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de42069b76d72d8b1505a17202f116d17f35dacb","date":1507439523,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCores#update(Observable,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCores#update(Observable,Object).mjava","sourceNew":"  // Let transient cache implementation tell us when it ages out a corel\n  @Override\n  public void update(Observable o, Object arg) {\n    synchronized (modifyLock) {\n      SolrCore core = (SolrCore) arg;\n      SolrQueryRequest req = new LocalSolrQueryRequest(core, new ModifiableSolrParams());\n      CommitUpdateCommand cmd = new CommitUpdateCommand(req, false);\n      cmd.openSearcher = false;\n      cmd.waitSearcher = false;\n      try {\n        core.getUpdateHandler().commit(cmd);\n      } catch (IOException e) {\n        log.warn(\"Caught exception trying to close a transient core, ignoring as it should be benign\");\n      }\n      pendingCloses.add(core); // Essentially just queue this core up for closing.\n      modifyLock.notifyAll(); // Wakes up closer thread too\n    }\n  }\n\n","sourceOld":"  // Let transient cache implementation tell us when it ages out a corel\n  @Override\n  public void update(Observable o, Object arg) {\n    synchronized (modifyLock) {\n      pendingCloses.add((SolrCore) arg); // Essentially just queue this core up for closing.\n      modifyLock.notifyAll(); // Wakes up closer thread too\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac90ca17453be359d8f4a124dc6a369730fe1b16","date":1511286940,"type":3,"author":"Erick","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCores#update(Observable,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCores#update(Observable,Object).mjava","sourceNew":"  // Let transient cache implementation tell us when it ages out a core\n  @Override\n  public void update(Observable o, Object arg) {\n    synchronized (modifyLock) {\n      // Erick Erickson debugging TestLazyCores. With this un-commented, we get no testLazyCores failures.\n//      SolrCore core = (SolrCore) arg;\n//      SolrQueryRequest req = new LocalSolrQueryRequest(core, new ModifiableSolrParams());\n//      CommitUpdateCommand cmd = new CommitUpdateCommand(req, false);\n//      cmd.openSearcher = false;\n//      cmd.waitSearcher = false;\n//      try {\n//        core.getUpdateHandler().commit(cmd);\n//      } catch (IOException e) {\n//        log.warn(\"Caught exception trying to close a transient core, ignoring as it should be benign\");\n//      }\n      pendingCloses.add((SolrCore) arg); // Essentially just queue this core up for closing.\n      modifyLock.notifyAll(); // Wakes up closer thread too\n    }\n  }\n\n","sourceOld":"  // Let transient cache implementation tell us when it ages out a corel\n  @Override\n  public void update(Observable o, Object arg) {\n    synchronized (modifyLock) {\n      SolrCore core = (SolrCore) arg;\n      SolrQueryRequest req = new LocalSolrQueryRequest(core, new ModifiableSolrParams());\n      CommitUpdateCommand cmd = new CommitUpdateCommand(req, false);\n      cmd.openSearcher = false;\n      cmd.waitSearcher = false;\n      try {\n        core.getUpdateHandler().commit(cmd);\n      } catch (IOException e) {\n        log.warn(\"Caught exception trying to close a transient core, ignoring as it should be benign\");\n      }\n      pendingCloses.add(core); // Essentially just queue this core up for closing.\n      modifyLock.notifyAll(); // Wakes up closer thread too\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e90dd0b64429dc7138401e6da40805ab536751bd","date":1511287039,"type":3,"author":"Erick","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCores#update(Observable,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCores#update(Observable,Object).mjava","sourceNew":"  // Let transient cache implementation tell us when it ages out a core\n  @Override\n  public void update(Observable o, Object arg) {\n    synchronized (modifyLock) {\n      // Erick Erickson debugging TestLazyCores. With this un-commented, we get no testLazyCores failures.\n//      SolrCore core = (SolrCore) arg;\n//      SolrQueryRequest req = new LocalSolrQueryRequest(core, new ModifiableSolrParams());\n//      CommitUpdateCommand cmd = new CommitUpdateCommand(req, false);\n//      cmd.openSearcher = false;\n//      cmd.waitSearcher = false;\n//      try {\n//        core.getUpdateHandler().commit(cmd);\n//      } catch (IOException e) {\n//        log.warn(\"Caught exception trying to close a transient core, ignoring as it should be benign\");\n//      }\n      pendingCloses.add((SolrCore) arg); // Essentially just queue this core up for closing.\n      modifyLock.notifyAll(); // Wakes up closer thread too\n    }\n  }\n\n","sourceOld":"  // Let transient cache implementation tell us when it ages out a corel\n  @Override\n  public void update(Observable o, Object arg) {\n    synchronized (modifyLock) {\n      SolrCore core = (SolrCore) arg;\n      SolrQueryRequest req = new LocalSolrQueryRequest(core, new ModifiableSolrParams());\n      CommitUpdateCommand cmd = new CommitUpdateCommand(req, false);\n      cmd.openSearcher = false;\n      cmd.waitSearcher = false;\n      try {\n        core.getUpdateHandler().commit(cmd);\n      } catch (IOException e) {\n        log.warn(\"Caught exception trying to close a transient core, ignoring as it should be benign\");\n      }\n      pendingCloses.add(core); // Essentially just queue this core up for closing.\n      modifyLock.notifyAll(); // Wakes up closer thread too\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39c830d7063b84a924dd9f3285b6660e34bb8b26","date":1511305529,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCores#update(Observable,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCores#update(Observable,Object).mjava","sourceNew":"  // Let transient cache implementation tell us when it ages out a core\n  @Override\n  public void update(Observable o, Object arg) {\n    synchronized (modifyLock) {\n      // Erick Erickson debugging TestLazyCores. With this un-commented, we get no testLazyCores failures.\n//      SolrCore core = (SolrCore) arg;\n//      SolrQueryRequest req = new LocalSolrQueryRequest(core, new ModifiableSolrParams());\n//      CommitUpdateCommand cmd = new CommitUpdateCommand(req, false);\n//      cmd.openSearcher = false;\n//      cmd.waitSearcher = false;\n//      try {\n//        core.getUpdateHandler().commit(cmd);\n//      } catch (IOException e) {\n//        log.warn(\"Caught exception trying to close a transient core, ignoring as it should be benign\");\n//      }\n      pendingCloses.add((SolrCore) arg); // Essentially just queue this core up for closing.\n      modifyLock.notifyAll(); // Wakes up closer thread too\n    }\n  }\n\n","sourceOld":"  // Let transient cache implementation tell us when it ages out a corel\n  @Override\n  public void update(Observable o, Object arg) {\n    synchronized (modifyLock) {\n      SolrCore core = (SolrCore) arg;\n      SolrQueryRequest req = new LocalSolrQueryRequest(core, new ModifiableSolrParams());\n      CommitUpdateCommand cmd = new CommitUpdateCommand(req, false);\n      cmd.openSearcher = false;\n      cmd.waitSearcher = false;\n      try {\n        core.getUpdateHandler().commit(cmd);\n      } catch (IOException e) {\n        log.warn(\"Caught exception trying to close a transient core, ignoring as it should be benign\");\n      }\n      pendingCloses.add(core); // Essentially just queue this core up for closing.\n      modifyLock.notifyAll(); // Wakes up closer thread too\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b88a121b875f9ae2ac50f85cf46dcb680f126357","date":1555416009,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCores#queueCoreClose(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCores#update(Observable,Object).mjava","sourceNew":"  // Let transient cache implementation tell us when it ages out a core\n  @Override\n  public void queueCoreClose(SolrCore core) {\n    synchronized (modifyLock) {\n      // Erick Erickson debugging TestLazyCores. With this un-commented, we get no testLazyCores failures.\n//      SolrQueryRequest req = new LocalSolrQueryRequest(core, new ModifiableSolrParams());\n//      CommitUpdateCommand cmd = new CommitUpdateCommand(req, false);\n//      cmd.openSearcher = false;\n//      cmd.waitSearcher = false;\n//      try {\n//        core.getUpdateHandler().commit(cmd);\n//      } catch (IOException e) {\n//        log.warn(\"Caught exception trying to close a transient core, ignoring as it should be benign\");\n//      }\n      pendingCloses.add(core); // Essentially just queue this core up for closing.\n      modifyLock.notifyAll(); // Wakes up closer thread too\n    }\n  }\n\n","sourceOld":"  // Let transient cache implementation tell us when it ages out a core\n  @Override\n  public void update(Observable o, Object arg) {\n    synchronized (modifyLock) {\n      // Erick Erickson debugging TestLazyCores. With this un-commented, we get no testLazyCores failures.\n//      SolrCore core = (SolrCore) arg;\n//      SolrQueryRequest req = new LocalSolrQueryRequest(core, new ModifiableSolrParams());\n//      CommitUpdateCommand cmd = new CommitUpdateCommand(req, false);\n//      cmd.openSearcher = false;\n//      cmd.waitSearcher = false;\n//      try {\n//        core.getUpdateHandler().commit(cmd);\n//      } catch (IOException e) {\n//        log.warn(\"Caught exception trying to close a transient core, ignoring as it should be benign\");\n//      }\n      pendingCloses.add((SolrCore) arg); // Essentially just queue this core up for closing.\n      modifyLock.notifyAll(); // Wakes up closer thread too\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9435d55e3ea95c5d94406d3affc36f9505b6a736":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b88a121b875f9ae2ac50f85cf46dcb680f126357":["39c830d7063b84a924dd9f3285b6660e34bb8b26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"39c830d7063b84a924dd9f3285b6660e34bb8b26":["de42069b76d72d8b1505a17202f116d17f35dacb","e90dd0b64429dc7138401e6da40805ab536751bd"],"ac90ca17453be359d8f4a124dc6a369730fe1b16":["de42069b76d72d8b1505a17202f116d17f35dacb"],"8b6a4b585aed7660a589375f6a09b90efd29c961":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"de42069b76d72d8b1505a17202f116d17f35dacb":["9435d55e3ea95c5d94406d3affc36f9505b6a736"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b88a121b875f9ae2ac50f85cf46dcb680f126357"],"e90dd0b64429dc7138401e6da40805ab536751bd":["de42069b76d72d8b1505a17202f116d17f35dacb","ac90ca17453be359d8f4a124dc6a369730fe1b16"]},"commit2Childs":{"9435d55e3ea95c5d94406d3affc36f9505b6a736":["de42069b76d72d8b1505a17202f116d17f35dacb"],"b88a121b875f9ae2ac50f85cf46dcb680f126357":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9435d55e3ea95c5d94406d3affc36f9505b6a736","8b6a4b585aed7660a589375f6a09b90efd29c961"],"39c830d7063b84a924dd9f3285b6660e34bb8b26":["b88a121b875f9ae2ac50f85cf46dcb680f126357"],"ac90ca17453be359d8f4a124dc6a369730fe1b16":["e90dd0b64429dc7138401e6da40805ab536751bd"],"8b6a4b585aed7660a589375f6a09b90efd29c961":[],"de42069b76d72d8b1505a17202f116d17f35dacb":["39c830d7063b84a924dd9f3285b6660e34bb8b26","ac90ca17453be359d8f4a124dc6a369730fe1b16","e90dd0b64429dc7138401e6da40805ab536751bd"],"e90dd0b64429dc7138401e6da40805ab536751bd":["39c830d7063b84a924dd9f3285b6660e34bb8b26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8b6a4b585aed7660a589375f6a09b90efd29c961","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}