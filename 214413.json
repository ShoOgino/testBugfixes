{"path":"sandbox/projects/appex/src/java/org/krysalis/centipede/ant/task/JTidyTask#stripDuplicateAttributes(Node,Node).mjava","commits":[{"id":"e3074d05d861bc1436ee03619fdee547f9c51d22","date":1020526983,"type":0,"author":"Andrew C. Oliver","isMerge":false,"pathNew":"sandbox/projects/appex/src/java/org/krysalis/centipede/ant/task/JTidyTask#stripDuplicateAttributes(Node,Node).mjava","pathOld":"/dev/null","sourceNew":"    // using parent because jtidy dom is bugged, cannot get parent or delete child\n    public static void stripDuplicateAttributes(Node node, Node parent)\n    {\n\n        // The output depends on the type of the node\n        switch (node.getNodeType())\n        {\n\n            case Node.DOCUMENT_NODE :\n            {\n                Document doc   = ( Document ) node;\n                Node     child = doc.getFirstChild();\n\n                while (child != null)\n                {\n                    stripDuplicateAttributes(child, node);\n                    child = child.getNextSibling();\n                }\n                break;\n            }\n            case Node.ELEMENT_NODE :\n            {\n                Element      elt              = ( Element ) node;\n                NamedNodeMap attrs            = elt.getAttributes();\n                ArrayList    nodesToRemove    = new ArrayList();\n                int          nodesToRemoveNum = 0;\n\n                for (int i = 0; i < attrs.getLength(); i++)\n                {\n                    Node a = attrs.item(i);\n\n                    for (int j = 0; j < attrs.getLength(); j++)\n                    {\n                        Node b = attrs.item(j);\n\n                        // if there are two attributes with same name\n                        if ((i != j)\n                                && (a.getNodeName().equals(b.getNodeName())))\n                        {\n                            nodesToRemove.add(b);\n                            nodesToRemoveNum++;\n                        }\n                    }\n                }\n                for (int i = 0; i < nodesToRemoveNum; i++)\n                {\n                    org.w3c.dom.Attr    nodeToDelete       =\n                        ( org.w3c.dom.Attr ) nodesToRemove.get(i);\n                    org.w3c.dom.Element nodeToDeleteParent =\n                        ( org.w3c.dom\n                            .Element ) node;   // nodeToDelete.getParentNode();\n\n                    nodeToDeleteParent.removeAttributeNode(nodeToDelete);\n                }\n                nodesToRemove.clear();\n                Node child = elt.getFirstChild();\n\n                while (child != null)\n                {\n                    stripDuplicateAttributes(child, node);\n                    child = child.getNextSibling();\n                }\n                break;\n            }\n            default :\n\n                // do nothing\n                break;\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f35ba86e9cc568fdc800d780c620749584b1d5bc","date":1051838861,"type":4,"author":"Kelvin Tan","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/projects/appex/src/java/org/krysalis/centipede/ant/task/JTidyTask#stripDuplicateAttributes(Node,Node).mjava","sourceNew":null,"sourceOld":"    // using parent because jtidy dom is bugged, cannot get parent or delete child\n    public static void stripDuplicateAttributes(Node node, Node parent)\n    {\n\n        // The output depends on the type of the node\n        switch (node.getNodeType())\n        {\n\n            case Node.DOCUMENT_NODE :\n            {\n                Document doc   = ( Document ) node;\n                Node     child = doc.getFirstChild();\n\n                while (child != null)\n                {\n                    stripDuplicateAttributes(child, node);\n                    child = child.getNextSibling();\n                }\n                break;\n            }\n            case Node.ELEMENT_NODE :\n            {\n                Element      elt              = ( Element ) node;\n                NamedNodeMap attrs            = elt.getAttributes();\n                ArrayList    nodesToRemove    = new ArrayList();\n                int          nodesToRemoveNum = 0;\n\n                for (int i = 0; i < attrs.getLength(); i++)\n                {\n                    Node a = attrs.item(i);\n\n                    for (int j = 0; j < attrs.getLength(); j++)\n                    {\n                        Node b = attrs.item(j);\n\n                        // if there are two attributes with same name\n                        if ((i != j)\n                                && (a.getNodeName().equals(b.getNodeName())))\n                        {\n                            nodesToRemove.add(b);\n                            nodesToRemoveNum++;\n                        }\n                    }\n                }\n                for (int i = 0; i < nodesToRemoveNum; i++)\n                {\n                    org.w3c.dom.Attr    nodeToDelete       =\n                        ( org.w3c.dom.Attr ) nodesToRemove.get(i);\n                    org.w3c.dom.Element nodeToDeleteParent =\n                        ( org.w3c.dom\n                            .Element ) node;   // nodeToDelete.getParentNode();\n\n                    nodeToDeleteParent.removeAttributeNode(nodeToDelete);\n                }\n                nodesToRemove.clear();\n                Node child = elt.getFirstChild();\n\n                while (child != null)\n                {\n                    stripDuplicateAttributes(child, node);\n                    child = child.getNextSibling();\n                }\n                break;\n            }\n            default :\n\n                // do nothing\n                break;\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f35ba86e9cc568fdc800d780c620749584b1d5bc":["e3074d05d861bc1436ee03619fdee547f9c51d22"],"e3074d05d861bc1436ee03619fdee547f9c51d22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f35ba86e9cc568fdc800d780c620749584b1d5bc"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3074d05d861bc1436ee03619fdee547f9c51d22"],"f35ba86e9cc568fdc800d780c620749584b1d5bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e3074d05d861bc1436ee03619fdee547f9c51d22":["f35ba86e9cc568fdc800d780c620749584b1d5bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}