{"path":"lucene/sandbox/src/java/org/apache/lucene/search/PointInRectQuery#rewrite(IndexReader).mjava","commits":[{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/PointInRectQuery#rewrite(IndexReader).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/DimensionalPointInRectQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    // Crosses date line: we just rewrite into OR of two bboxes:\n    if (maxLon < minLon) {\n\n      // Disable coord here because a multi-valued doc could match both rects and get unfairly boosted:\n      BooleanQuery.Builder q = new BooleanQuery.Builder();\n      q.setDisableCoord(true);\n\n      // E.g.: maxLon = -179, minLon = 179\n      PointInRectQuery left = new PointInRectQuery(field, minLat, maxLat, GeoUtils.MIN_LON_INCL, maxLon);\n      q.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n      PointInRectQuery right = new PointInRectQuery(field, minLat, maxLat, minLon, GeoUtils.MAX_LON_INCL);\n      q.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n      return new ConstantScoreQuery(q.build());\n    } else {\n      return super.rewrite(reader);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    // Crosses date line: we just rewrite into OR of two bboxes:\n    if (maxLon < minLon) {\n\n      // Disable coord here because a multi-valued doc could match both rects and get unfairly boosted:\n      BooleanQuery.Builder q = new BooleanQuery.Builder();\n      q.setDisableCoord(true);\n\n      // E.g.: maxLon = -179, minLon = 179\n      DimensionalPointInRectQuery left = new DimensionalPointInRectQuery(field, minLat, maxLat, GeoUtils.MIN_LON_INCL, maxLon);\n      q.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n      DimensionalPointInRectQuery right = new DimensionalPointInRectQuery(field, minLat, maxLat, minLon, GeoUtils.MAX_LON_INCL);\n      q.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n      return new ConstantScoreQuery(q.build());\n    } else {\n      return super.rewrite(reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"609ba4ce51a7095e9815d4fb2666ec85714f8f54","date":1456320705,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/PointInRectQuery#rewrite(IndexReader).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    // Crosses date line: we just rewrite into OR of two bboxes:\n    if (maxLon < minLon) {\n\n      // Disable coord here because a multi-valued doc could match both rects and get unfairly boosted:\n      BooleanQuery.Builder q = new BooleanQuery.Builder();\n      q.setDisableCoord(true);\n\n      // E.g.: maxLon = -179, minLon = 179\n      PointInRectQuery left = new PointInRectQuery(field, minLat, maxLat, GeoUtils.MIN_LON_INCL, maxLon);\n      q.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n      PointInRectQuery right = new PointInRectQuery(field, minLat, maxLat, minLon, GeoUtils.MAX_LON_INCL);\n      q.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n      return new ConstantScoreQuery(q.build());\n    } else {\n      return super.rewrite(reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6","date":1456321728,"type":4,"author":"Mike McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/PointInRectQuery#rewrite(IndexReader).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    // Crosses date line: we just rewrite into OR of two bboxes:\n    if (maxLon < minLon) {\n\n      // Disable coord here because a multi-valued doc could match both rects and get unfairly boosted:\n      BooleanQuery.Builder q = new BooleanQuery.Builder();\n      q.setDisableCoord(true);\n\n      // E.g.: maxLon = -179, minLon = 179\n      PointInRectQuery left = new PointInRectQuery(field, minLat, maxLat, GeoUtils.MIN_LON_INCL, maxLon);\n      q.add(new BooleanClause(left, BooleanClause.Occur.SHOULD));\n      PointInRectQuery right = new PointInRectQuery(field, minLat, maxLat, minLon, GeoUtils.MAX_LON_INCL);\n      q.add(new BooleanClause(right, BooleanClause.Occur.SHOULD));\n      return new ConstantScoreQuery(q.build());\n    } else {\n      return super.rewrite(reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"609ba4ce51a7095e9815d4fb2666ec85714f8f54":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6":["cab7a79353f33d1a94cd307bf33aa5148601ebe6","609ba4ce51a7095e9815d4fb2666ec85714f8f54"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["609ba4ce51a7095e9815d4fb2666ec85714f8f54"]},"commit2Childs":{"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["609ba4ce51a7095e9815d4fb2666ec85714f8f54","1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"609ba4ce51a7095e9815d4fb2666ec85714f8f54":["1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}