{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish(long,long,int).mjava","commits":[{"id":"038e2a9b07e2f8ae58336613cea227bf8b973484","date":1346850972,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish(long,long,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/BlockTermsWriter.TermsWriter#finish(long,long,int).mjava","sourceNew":"    // Finishes all terms in this field\n    @Override\n    public void finish(long sumTotalTermFreq, long sumDocFreq, int docCount) throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      fieldIndexWriter.finish(out.getFilePointer());\n    }\n\n","sourceOld":"    // Finishes all terms in this field\n    @Override\n    public void finish(long sumTotalTermFreq, long sumDocFreq, int docCount) throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      fieldIndexWriter.finish(out.getFilePointer());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"26867fa391352324254e5eafd1c2d63e3221f4fc","date":1350562745,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish(long,long,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish(long,long,int).mjava","sourceNew":"    // Finishes all terms in this field\n    @Override\n    public void finish(long sumTotalTermFreq, long sumDocFreq, int docCount) throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      fieldIndexWriter.finish(out.getFilePointer());\n      if (numTerms > 0) {\n        fields.add(new FieldMetaData(fieldInfo,\n                                     numTerms,\n                                     termsStartPointer,\n                                     sumTotalTermFreq,\n                                     sumDocFreq,\n                                     docCount));\n      }\n    }\n\n","sourceOld":"    // Finishes all terms in this field\n    @Override\n    public void finish(long sumTotalTermFreq, long sumDocFreq, int docCount) throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      fieldIndexWriter.finish(out.getFilePointer());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db4fdbf3d262768eabc027cd8321edca0cd11fa8","date":1350574784,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish(long,long,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish(long,long,int).mjava","sourceNew":"    // Finishes all terms in this field\n    @Override\n    public void finish(long sumTotalTermFreq, long sumDocFreq, int docCount) throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      fieldIndexWriter.finish(out.getFilePointer());\n      if (numTerms > 0) {\n        fields.add(new FieldMetaData(fieldInfo,\n                                     numTerms,\n                                     termsStartPointer,\n                                     sumTotalTermFreq,\n                                     sumDocFreq,\n                                     docCount));\n      }\n    }\n\n","sourceOld":"    // Finishes all terms in this field\n    @Override\n    public void finish(long sumTotalTermFreq, long sumDocFreq, int docCount) throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      fieldIndexWriter.finish(out.getFilePointer());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98","date":1377268487,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish(long,long,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish(long,long,int).mjava","sourceNew":"    // Finishes all terms in this field\n    @Override\n    public void finish(long sumTotalTermFreq, long sumDocFreq, int docCount) throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      fieldIndexWriter.finish(out.getFilePointer());\n      if (numTerms > 0) {\n        fields.add(new FieldMetaData(fieldInfo,\n                                     numTerms,\n                                     termsStartPointer,\n                                     sumTotalTermFreq,\n                                     sumDocFreq,\n                                     docCount,\n                                     longsSize));\n      }\n    }\n\n","sourceOld":"    // Finishes all terms in this field\n    @Override\n    public void finish(long sumTotalTermFreq, long sumDocFreq, int docCount) throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      fieldIndexWriter.finish(out.getFilePointer());\n      if (numTerms > 0) {\n        fields.add(new FieldMetaData(fieldInfo,\n                                     numTerms,\n                                     termsStartPointer,\n                                     sumTotalTermFreq,\n                                     sumDocFreq,\n                                     docCount));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f948dd442d23baa6cbb28daf77c8db78b351329","date":1378742876,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish(long,long,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish(long,long,int).mjava","sourceNew":"    // Finishes all terms in this field\n    @Override\n    public void finish(long sumTotalTermFreq, long sumDocFreq, int docCount) throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      fieldIndexWriter.finish(out.getFilePointer());\n      if (numTerms > 0) {\n        fields.add(new FieldMetaData(fieldInfo,\n                                     numTerms,\n                                     termsStartPointer,\n                                     sumTotalTermFreq,\n                                     sumDocFreq,\n                                     docCount,\n                                     longsSize));\n      }\n    }\n\n","sourceOld":"    // Finishes all terms in this field\n    @Override\n    public void finish(long sumTotalTermFreq, long sumDocFreq, int docCount) throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      fieldIndexWriter.finish(out.getFilePointer());\n      if (numTerms > 0) {\n        fields.add(new FieldMetaData(fieldInfo,\n                                     numTerms,\n                                     termsStartPointer,\n                                     sumTotalTermFreq,\n                                     sumDocFreq,\n                                     docCount));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa80a35d7c4b2b1e83082b275e3e8328ab93db52","date":1381766157,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/blockterms/BlockTermsWriter.TermsWriter#finish(long,long,int).mjava","sourceNew":"    // Finishes all terms in this field\n    void finish() throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      fieldIndexWriter.finish(out.getFilePointer());\n      if (numTerms > 0) {\n        fields.add(new FieldMetaData(fieldInfo,\n                                     numTerms,\n                                     termsStartPointer,\n                                     fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS) >= 0 ? sumTotalTermFreq : -1,\n                                     sumDocFreq,\n                                     docsSeen.cardinality(),\n                                     longsSize));\n      }\n    }\n\n","sourceOld":"    // Finishes all terms in this field\n    @Override\n    public void finish(long sumTotalTermFreq, long sumDocFreq, int docCount) throws IOException {\n      if (pendingCount > 0) {\n        flushBlock();\n      }\n      // EOF marker:\n      out.writeVInt(0);\n\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      fieldIndexWriter.finish(out.getFilePointer());\n      if (numTerms > 0) {\n        fields.add(new FieldMetaData(fieldInfo,\n                                     numTerms,\n                                     termsStartPointer,\n                                     sumTotalTermFreq,\n                                     sumDocFreq,\n                                     docCount,\n                                     longsSize));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98":["26867fa391352324254e5eafd1c2d63e3221f4fc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":["038e2a9b07e2f8ae58336613cea227bf8b973484","26867fa391352324254e5eafd1c2d63e3221f4fc"],"fa80a35d7c4b2b1e83082b275e3e8328ab93db52":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"26867fa391352324254e5eafd1c2d63e3221f4fc":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"2f948dd442d23baa6cbb28daf77c8db78b351329":["26867fa391352324254e5eafd1c2d63e3221f4fc","1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52"],"038e2a9b07e2f8ae58336613cea227bf8b973484":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98":["2f948dd442d23baa6cbb28daf77c8db78b351329"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["038e2a9b07e2f8ae58336613cea227bf8b973484"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":[],"fa80a35d7c4b2b1e83082b275e3e8328ab93db52":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"26867fa391352324254e5eafd1c2d63e3221f4fc":["1a88d7b0899b7d22dcbd4cf8ca35d9ec9850ab98","db4fdbf3d262768eabc027cd8321edca0cd11fa8","2f948dd442d23baa6cbb28daf77c8db78b351329"],"2f948dd442d23baa6cbb28daf77c8db78b351329":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52"],"038e2a9b07e2f8ae58336613cea227bf8b973484":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","26867fa391352324254e5eafd1c2d63e3221f4fc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}