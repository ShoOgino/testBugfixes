{"path":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","commits":[{"id":"c30fc6c6819ecb25af47f81683b9f52a3122054e","date":1306346530,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(dir, 1, \"a\", null, null, null);\n    try {\n      sm.createCompoundFile(\"b1\", w.segmentInfos.info(0));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    try {\n      sm.createCompoundFile(\"b2\", w.segmentInfos.info(0));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(dir, 1, \"a\", null, null, null);\n    try {\n      sm.createCompoundFile(\"b1\", w.segmentInfos.info(0));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    try {\n      sm.createCompoundFile(\"b2\", w.segmentInfos.info(0));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(dir, 1, \"a\", null, null, null);\n    try {\n      sm.createCompoundFile(\"b1\", w.segmentInfos.info(0));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    try {\n      sm.createCompoundFile(\"b2\", w.segmentInfos.info(0));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","sourceNew":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(dir, 1, \"a\", null, null, null);\n    try {\n      sm.createCompoundFile(\"b1\", w.segmentInfos.info(0), IOContext.DEFAULT);\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    try {\n      sm.createCompoundFile(\"b2\", w.segmentInfos.info(0), IOContext.DEFAULT);\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(dir, 1, \"a\", null, null, null);\n    try {\n      sm.createCompoundFile(\"b1\", w.segmentInfos.info(0));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    try {\n      sm.createCompoundFile(\"b2\", w.segmentInfos.info(0));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6f9be74ca7baaef11857ad002cad40419979516","date":1309449808,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","sourceNew":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(dir, 1, \"a\", null, null, null, newIOContext(random));\n    try {\n      sm.createCompoundFile(\"b1\", w.segmentInfos.info(0), newIOContext(random));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    try {\n      sm.createCompoundFile(\"b2\", w.segmentInfos.info(0), newIOContext(random));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(dir, 1, \"a\", null, null, null);\n    try {\n      sm.createCompoundFile(\"b1\", w.segmentInfos.info(0), IOContext.DEFAULT);\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    try {\n      sm.createCompoundFile(\"b2\", w.segmentInfos.info(0), IOContext.DEFAULT);\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","sourceNew":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(dir, 1, \"a\", null, null, null, newIOContext(random));\n    try {\n      sm.createCompoundFile(\"b1\", w.segmentInfos.info(0), newIOContext(random));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    try {\n      sm.createCompoundFile(\"b2\", w.segmentInfos.info(0), newIOContext(random));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(dir, 1, \"a\", null, null, null);\n    try {\n      sm.createCompoundFile(\"b1\", w.segmentInfos.info(0));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    try {\n      sm.createCompoundFile(\"b2\", w.segmentInfos.info(0));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","sourceNew":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(dir, 1, \"a\", null, null, null, newIOContext(random));\n    try {\n      sm.createCompoundFile(\"b1\", w.segmentInfos.info(0), newIOContext(random));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    try {\n      sm.createCompoundFile(\"b2\", w.segmentInfos.info(0), newIOContext(random));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(dir, 1, \"a\", null, null, null);\n    try {\n      sm.createCompoundFile(\"b1\", w.segmentInfos.info(0));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    try {\n      sm.createCompoundFile(\"b2\", w.segmentInfos.info(0));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","sourceNew":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(dir, 1, \"a\", null, null, null, newIOContext(random));\n    try {\n      sm.createCompoundFile(\"b1\", w.segmentInfos.info(0), newIOContext(random));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    try {\n      sm.createCompoundFile(\"b2\", w.segmentInfos.info(0), newIOContext(random));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(dir, 1, \"a\", null, null, null, newIOContext(random));\n    try {\n      sm.createCompoundFile(\"b1\", w.segmentInfos.info(0), newIOContext(random));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new Field(\"c\", \"test\", Store.NO, Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    try {\n      sm.createCompoundFile(\"b2\", w.segmentInfos.info(0), newIOContext(random));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33f3748c3aa0fc11e19eeafcf3c71450cfd7f63","date":1319561096,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","sourceNew":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(dir, 1, \"a\", null, null, null, newIOContext(random));\n    boolean doFail = false;\n    try {\n      sm.createCompoundFile(\"b1\", w.segmentInfos.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    try {\n      sm.createCompoundFile(\"b2\", sis.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(dir, 1, \"a\", null, null, null, newIOContext(random));\n    try {\n      sm.createCompoundFile(\"b1\", w.segmentInfos.info(0), newIOContext(random));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    try {\n      sm.createCompoundFile(\"b2\", w.segmentInfos.info(0), newIOContext(random));\n      fail(\"should not have been able to create a .cfs with .del and .s* files\");\n    } catch (AssertionError e) {\n      // expected\n    }\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","sourceNew":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(dir, 1, \"a\", null, null, null, Codec.getDefault(), newIOContext(random));\n    boolean doFail = false;\n    try {\n      sm.createCompoundFile(\"b1\", w.segmentInfos.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    try {\n      sm.createCompoundFile(\"b2\", sis.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(dir, 1, \"a\", null, null, null, newIOContext(random));\n    boolean doFail = false;\n    try {\n      sm.createCompoundFile(\"b1\", w.segmentInfos.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    try {\n      sm.createCompoundFile(\"b2\", sis.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","sourceNew":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(InfoStream.getDefault(), dir, 1, \"a\", MergeState.CheckAbort.NONE, null, null, Codec.getDefault(), newIOContext(random));\n    boolean doFail = false;\n    try {\n      sm.createCompoundFile(\"b1\", w.segmentInfos.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    try {\n      sm.createCompoundFile(\"b2\", sis.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(dir, 1, \"a\", null, null, null, Codec.getDefault(), newIOContext(random));\n    boolean doFail = false;\n    try {\n      sm.createCompoundFile(\"b1\", w.segmentInfos.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    try {\n      sm.createCompoundFile(\"b2\", sis.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","sourceNew":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(InfoStream.getDefault(), dir, 1, \"a\", MergeState.CheckAbort.NONE, null, null, Codec.getDefault(), newIOContext(random));\n    boolean doFail = false;\n    try {\n      IndexWriter.createCompoundFile(dir, \"b1\", MergeState.CheckAbort.NONE, w.segmentInfos.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    try {\n      IndexWriter.createCompoundFile(dir, \"b2\", MergeState.CheckAbort.NONE, sis.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(InfoStream.getDefault(), dir, 1, \"a\", MergeState.CheckAbort.NONE, null, null, Codec.getDefault(), newIOContext(random));\n    boolean doFail = false;\n    try {\n      sm.createCompoundFile(\"b1\", w.segmentInfos.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    try {\n      sm.createCompoundFile(\"b2\", sis.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4122a26e1fd0457a340616673a3d3aada370f713","date":1322955654,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","sourceNew":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(InfoStream.getDefault(), dir, 1, \"a\", MergeState.CheckAbort.NONE, null, null, Codec.getDefault(), newIOContext(random));\n    boolean doFail = false;\n    try {\n      IndexWriter.createCompoundFile(dir, \"b1\", MergeState.CheckAbort.NONE, w.segmentInfos.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n    \n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(InfoStream.getDefault(), dir, 1, \"a\", MergeState.CheckAbort.NONE, null, null, Codec.getDefault(), newIOContext(random));\n    boolean doFail = false;\n    try {\n      IndexWriter.createCompoundFile(dir, \"b1\", MergeState.CheckAbort.NONE, w.segmentInfos.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    try {\n      IndexWriter.createCompoundFile(dir, \"b2\", MergeState.CheckAbort.NONE, sis.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","sourceNew":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(InfoStream.getDefault(), dir, 1, \"a\", MergeState.CheckAbort.NONE, null, null, Codec.getDefault(), newIOContext(random));\n    boolean doFail = false;\n    try {\n      IndexWriter.createCompoundFile(dir, \"b1\", MergeState.CheckAbort.NONE, w.segmentInfos.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n    \n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(InfoStream.getDefault(), dir, 1, \"a\", MergeState.CheckAbort.NONE, null, null, Codec.getDefault(), newIOContext(random));\n    boolean doFail = false;\n    try {\n      IndexWriter.createCompoundFile(dir, \"b1\", MergeState.CheckAbort.NONE, w.segmentInfos.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    try {\n      IndexWriter.createCompoundFile(dir, \"b2\", MergeState.CheckAbort.NONE, sis.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","sourceNew":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(InfoStream.getDefault(), dir, 1, \"a\", MergeState.CheckAbort.NONE, null, null, Codec.getDefault(), newIOContext(random));\n    boolean doFail = false;\n    try {\n      IndexWriter.createCompoundFile(dir, \"b1\", MergeState.CheckAbort.NONE, w.segmentInfos.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n    \n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(InfoStream.getDefault(), dir, 1, \"a\", MergeState.CheckAbort.NONE, null, null, Codec.getDefault(), newIOContext(random));\n    boolean doFail = false;\n    try {\n      IndexWriter.createCompoundFile(dir, \"b1\", MergeState.CheckAbort.NONE, w.segmentInfos.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n    \n    // Create an index w/ .s*\n    w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE));\n    doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.close();\n    IndexReader r = IndexReader.open(dir, false);\n    r.setNorm(0, \"c\", (byte) 1);\n    r.close();\n    \n    // Assert that SM fails if .s* exists\n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    try {\n      IndexWriter.createCompoundFile(dir, \"b2\", MergeState.CheckAbort.NONE, sis.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be9e3e7d2fc880996ffcfe9a8fc47057b647e9e3","date":1327944832,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","sourceNew":null,"sourceOld":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(InfoStream.getDefault(), dir, 1, \"a\", MergeState.CheckAbort.NONE, null, null, Codec.getDefault(), newIOContext(random));\n    boolean doFail = false;\n    try {\n      IndexWriter.createCompoundFile(dir, \"b1\", MergeState.CheckAbort.NONE, w.segmentInfos.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296df632fd63421ea20756fa11ad36fbc6f4c8a9","date":1327957998,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","sourceNew":null,"sourceOld":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(InfoStream.getDefault(), dir, 1, \"a\", MergeState.CheckAbort.NONE, null, null, Codec.getDefault(), newIOContext(random));\n    boolean doFail = false;\n    try {\n      IndexWriter.createCompoundFile(dir, \"b1\", MergeState.CheckAbort.NONE, w.segmentInfos.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"410e066f093e407222d9681429d209084e783149","date":1327958394,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentMerger#testInvalidFilesToCreateCompound().mjava","sourceNew":null,"sourceOld":"  // LUCENE-3143\n  public void testInvalidFilesToCreateCompound() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    \n    // Create an index w/ .del file\n    w.addDocument(new Document());\n    Document doc = new Document();\n    doc.add(new TextField(\"c\", \"test\"));\n    w.addDocument(doc);\n    w.commit();\n    w.deleteDocuments(new Term(\"c\", \"test\"));\n    w.close();\n    \n    // Assert that SM fails if .del exists\n    SegmentMerger sm = new SegmentMerger(InfoStream.getDefault(), dir, 1, \"a\", MergeState.CheckAbort.NONE, null, null, Codec.getDefault(), newIOContext(random));\n    boolean doFail = false;\n    try {\n      IndexWriter.createCompoundFile(dir, \"b1\", MergeState.CheckAbort.NONE, w.segmentInfos.info(0), newIOContext(random));\n      doFail = true; // should never get here\n    } catch (AssertionError e) {\n      // expected\n    }\n    assertFalse(\"should not have been able to create a .cfs with .del and .s* files\", doFail);\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"410e066f093e407222d9681429d209084e783149":["3615ce4a1f785ae1b779244de52c6a7d99227e60","296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["3cc749c053615f5871f3b95715fe292f34e70a53","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"06584e6e98d592b34e1329b384182f368d2025e8":["7b91922b55d15444d554721b352861d028eb8278"],"3cc749c053615f5871f3b95715fe292f34e70a53":["06584e6e98d592b34e1329b384182f368d2025e8"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["c30fc6c6819ecb25af47f81683b9f52a3122054e"],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["3615ce4a1f785ae1b779244de52c6a7d99227e60","be9e3e7d2fc880996ffcfe9a8fc47057b647e9e3"],"be9e3e7d2fc880996ffcfe9a8fc47057b647e9e3":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"7b91922b55d15444d554721b352861d028eb8278":["d33f3748c3aa0fc11e19eeafcf3c71450cfd7f63"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c30fc6c6819ecb25af47f81683b9f52a3122054e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b6f9be74ca7baaef11857ad002cad40419979516":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["3cc749c053615f5871f3b95715fe292f34e70a53","4122a26e1fd0457a340616673a3d3aada370f713"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["c30fc6c6819ecb25af47f81683b9f52a3122054e","b6f9be74ca7baaef11857ad002cad40419979516"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"c30fc6c6819ecb25af47f81683b9f52a3122054e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4122a26e1fd0457a340616673a3d3aada370f713":["3cc749c053615f5871f3b95715fe292f34e70a53"],"d33f3748c3aa0fc11e19eeafcf3c71450cfd7f63":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c30fc6c6819ecb25af47f81683b9f52a3122054e"]},"commit2Childs":{"410e066f093e407222d9681429d209084e783149":[],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"06584e6e98d592b34e1329b384182f368d2025e8":["3cc749c053615f5871f3b95715fe292f34e70a53"],"3cc749c053615f5871f3b95715fe292f34e70a53":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60","4122a26e1fd0457a340616673a3d3aada370f713"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["b6f9be74ca7baaef11857ad002cad40419979516"],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["410e066f093e407222d9681429d209084e783149","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"be9e3e7d2fc880996ffcfe9a8fc47057b647e9e3":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"7b91922b55d15444d554721b352861d028eb8278":["06584e6e98d592b34e1329b384182f368d2025e8"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c30fc6c6819ecb25af47f81683b9f52a3122054e","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"b6f9be74ca7baaef11857ad002cad40419979516":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["410e066f093e407222d9681429d209084e783149","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","296df632fd63421ea20756fa11ad36fbc6f4c8a9","be9e3e7d2fc880996ffcfe9a8fc47057b647e9e3"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["5d004d0e0b3f65bb40da76d476d659d7888270e8","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"c30fc6c6819ecb25af47f81683b9f52a3122054e":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","ddc4c914be86e34b54f70023f45a60fa7f04e929","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"4122a26e1fd0457a340616673a3d3aada370f713":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["d33f3748c3aa0fc11e19eeafcf3c71450cfd7f63"],"d33f3748c3aa0fc11e19eeafcf3c71450cfd7f63":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["410e066f093e407222d9681429d209084e783149","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}