{"path":"solr/core/src/test/org/apache/solr/cloud/TestCloudConsistency#assertDocExists(HttpSolrClient,String,String).mjava","commits":[{"id":"8c30d22eaf1287a88a402fba9d8b7b9d20d6ef94","date":1520143025,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestCloudConsistency#assertDocExists(HttpSolrClient,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void assertDocExists(HttpSolrClient solr, String coll, String docId) throws Exception {\n    NamedList rsp = realTimeGetDocId(solr, docId);\n    String match = JSONTestUtil.matchObj(\"/id\", rsp.get(\"doc\"), docId);\n    assertTrue(\"Doc with id=\" + docId + \" not found in \" + solr.getBaseURL()\n        + \" due to: \" + match + \"; rsp=\"+rsp, match == null);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa2585c33d5d66a1c837c312221eb55ddb3c4300","date":1592493170,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestCloudConsistency#assertDocExists(HttpSolrClient,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestCloudConsistency#assertDocExists(HttpSolrClient,String,String).mjava","sourceNew":"  private void assertDocExists(HttpSolrClient solr, String coll, String docId) throws Exception {\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList rsp = realTimeGetDocId(solr, docId);\n    String match = JSONTestUtil.matchObj(\"/id\", rsp.get(\"doc\"), docId);\n    assertTrue(\"Doc with id=\" + docId + \" not found in \" + solr.getBaseURL()\n        + \" due to: \" + match + \"; rsp=\"+rsp, match == null);\n  }\n\n","sourceOld":"  private void assertDocExists(HttpSolrClient solr, String coll, String docId) throws Exception {\n    NamedList rsp = realTimeGetDocId(solr, docId);\n    String match = JSONTestUtil.matchObj(\"/id\", rsp.get(\"doc\"), docId);\n    assertTrue(\"Doc with id=\" + docId + \" not found in \" + solr.getBaseURL()\n        + \" due to: \" + match + \"; rsp=\"+rsp, match == null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["8c30d22eaf1287a88a402fba9d8b7b9d20d6ef94"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8c30d22eaf1287a88a402fba9d8b7b9d20d6ef94":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"]},"commit2Childs":{"aa2585c33d5d66a1c837c312221eb55ddb3c4300":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8c30d22eaf1287a88a402fba9d8b7b9d20d6ef94"],"8c30d22eaf1287a88a402fba9d8b7b9d20d6ef94":["aa2585c33d5d66a1c837c312221eb55ddb3c4300"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}