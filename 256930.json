{"path":"lucene/src/java/org/apache/lucene/index/codecs/DefaultStoredFieldsReader#rawDocs(int[],int,int).mjava","commits":[{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultStoredFieldsReader#rawDocs(int[],int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultFieldsReader#rawDocs(int[],int,int).mjava","sourceNew":"  /** Returns the length in bytes of each raw document in a\n   *  contiguous range of length numDocs starting with\n   *  startDocID.  Returns the IndexInput (the fieldStream),\n   *  already seeked to the starting point for startDocID.*/\n  public final IndexInput rawDocs(int[] lengths, int startDocID, int numDocs) throws IOException {\n    seekIndex(startDocID);\n    long startOffset = indexStream.readLong();\n    long lastOffset = startOffset;\n    int count = 0;\n    while (count < numDocs) {\n      final long offset;\n      final int docID = docStoreOffset + startDocID + count + 1;\n      assert docID <= numTotalDocs;\n      if (docID < numTotalDocs) \n        offset = indexStream.readLong();\n      else\n        offset = fieldsStream.length();\n      lengths[count++] = (int) (offset-lastOffset);\n      lastOffset = offset;\n    }\n\n    fieldsStream.seek(startOffset);\n\n    return fieldsStream;\n  }\n\n","sourceOld":"  /** Returns the length in bytes of each raw document in a\n   *  contiguous range of length numDocs starting with\n   *  startDocID.  Returns the IndexInput (the fieldStream),\n   *  already seeked to the starting point for startDocID.*/\n  public final IndexInput rawDocs(int[] lengths, int startDocID, int numDocs) throws IOException {\n    seekIndex(startDocID);\n    long startOffset = indexStream.readLong();\n    long lastOffset = startOffset;\n    int count = 0;\n    while (count < numDocs) {\n      final long offset;\n      final int docID = docStoreOffset + startDocID + count + 1;\n      assert docID <= numTotalDocs;\n      if (docID < numTotalDocs) \n        offset = indexStream.readLong();\n      else\n        offset = fieldsStream.length();\n      lengths[count++] = (int) (offset-lastOffset);\n      lastOffset = offset;\n    }\n\n    fieldsStream.seek(startOffset);\n\n    return fieldsStream;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cfd7f00f3dbc4c50d336540f063493fc0f7d830f","date":1322850565,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40StoredFieldsReader#rawDocs(int[],int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultStoredFieldsReader#rawDocs(int[],int,int).mjava","sourceNew":"  /** Returns the length in bytes of each raw document in a\n   *  contiguous range of length numDocs starting with\n   *  startDocID.  Returns the IndexInput (the fieldStream),\n   *  already seeked to the starting point for startDocID.*/\n  public final IndexInput rawDocs(int[] lengths, int startDocID, int numDocs) throws IOException {\n    seekIndex(startDocID);\n    long startOffset = indexStream.readLong();\n    long lastOffset = startOffset;\n    int count = 0;\n    while (count < numDocs) {\n      final long offset;\n      final int docID = docStoreOffset + startDocID + count + 1;\n      assert docID <= numTotalDocs;\n      if (docID < numTotalDocs) \n        offset = indexStream.readLong();\n      else\n        offset = fieldsStream.length();\n      lengths[count++] = (int) (offset-lastOffset);\n      lastOffset = offset;\n    }\n\n    fieldsStream.seek(startOffset);\n\n    return fieldsStream;\n  }\n\n","sourceOld":"  /** Returns the length in bytes of each raw document in a\n   *  contiguous range of length numDocs starting with\n   *  startDocID.  Returns the IndexInput (the fieldStream),\n   *  already seeked to the starting point for startDocID.*/\n  public final IndexInput rawDocs(int[] lengths, int startDocID, int numDocs) throws IOException {\n    seekIndex(startDocID);\n    long startOffset = indexStream.readLong();\n    long lastOffset = startOffset;\n    int count = 0;\n    while (count < numDocs) {\n      final long offset;\n      final int docID = docStoreOffset + startDocID + count + 1;\n      assert docID <= numTotalDocs;\n      if (docID < numTotalDocs) \n        offset = indexStream.readLong();\n      else\n        offset = fieldsStream.length();\n      lengths[count++] = (int) (offset-lastOffset);\n      lastOffset = offset;\n    }\n\n    fieldsStream.seek(startOffset);\n\n    return fieldsStream;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cfd7f00f3dbc4c50d336540f063493fc0f7d830f":["06584e6e98d592b34e1329b384182f368d2025e8"],"06584e6e98d592b34e1329b384182f368d2025e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cfd7f00f3dbc4c50d336540f063493fc0f7d830f"]},"commit2Childs":{"cfd7f00f3dbc4c50d336540f063493fc0f7d830f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"06584e6e98d592b34e1329b384182f368d2025e8":["cfd7f00f3dbc4c50d336540f063493fc0f7d830f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["06584e6e98d592b34e1329b384182f368d2025e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}