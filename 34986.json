{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(String[]).mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(String[]).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(String[]).mjava","sourceNew":"  /**\n   * Create a set of words from an array\n   * The resulting Set does case insensitive matching\n   * TODO We should look for a faster dictionary lookup approach.\n   * @param dictionary \n   * @return {@link Set} of lowercased terms \n   */\n  public static final Set<?> makeDictionary(final String[] dictionary) {\n    return makeDictionary(Version.LUCENE_30, dictionary);\n  }\n\n","sourceOld":"  /**\n   * Create a set of words from an array\n   * The resulting Set does case insensitive matching\n   * TODO We should look for a faster dictionary lookup approach.\n   * @param dictionary \n   * @return {@link Set} of lowercased terms \n   */\n  public static final Set<?> makeDictionary(final String[] dictionary) {\n    return makeDictionary(Version.LUCENE_30, dictionary);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(String[]).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(String[]).mjava","sourceNew":"  /**\n   * Create a set of words from an array\n   * The resulting Set does case insensitive matching\n   * TODO We should look for a faster dictionary lookup approach.\n   * @param dictionary \n   * @return {@link Set} of lowercased terms \n   */\n  public static Set<?> makeDictionary(final String[] dictionary) {\n    return makeDictionary(Version.LUCENE_30, dictionary);\n  }\n\n","sourceOld":"  /**\n   * Create a set of words from an array\n   * The resulting Set does case insensitive matching\n   * TODO We should look for a faster dictionary lookup approach.\n   * @param dictionary \n   * @return {@link Set} of lowercased terms \n   */\n  public static final Set<?> makeDictionary(final String[] dictionary) {\n    return makeDictionary(Version.LUCENE_30, dictionary);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(String[]).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(String[]).mjava","sourceNew":"  /**\n   * Create a set of words from an array\n   * The resulting Set does case insensitive matching\n   * TODO We should look for a faster dictionary lookup approach.\n   * @param dictionary \n   * @return {@link Set} of lowercased terms \n   */\n  public static Set<?> makeDictionary(final String[] dictionary) {\n    return makeDictionary(Version.LUCENE_30, dictionary);\n  }\n\n","sourceOld":"  /**\n   * Create a set of words from an array\n   * The resulting Set does case insensitive matching\n   * TODO We should look for a faster dictionary lookup approach.\n   * @param dictionary \n   * @return {@link Set} of lowercased terms \n   */\n  public static final Set<?> makeDictionary(final String[] dictionary) {\n    return makeDictionary(Version.LUCENE_30, dictionary);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(String[]).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(String[]).mjava","sourceNew":"  /**\n   * Create a set of words from an array\n   * The resulting Set does case insensitive matching\n   * TODO We should look for a faster dictionary lookup approach.\n   * @param dictionary \n   * @return {@link Set} of lowercased terms \n   */\n  public static Set<?> makeDictionary(final String[] dictionary) {\n    return makeDictionary(Version.LUCENE_30, dictionary);\n  }\n\n","sourceOld":"  /**\n   * Create a set of words from an array\n   * The resulting Set does case insensitive matching\n   * TODO We should look for a faster dictionary lookup approach.\n   * @param dictionary \n   * @return {@link Set} of lowercased terms \n   */\n  public static final Set<?> makeDictionary(final String[] dictionary) {\n    return makeDictionary(Version.LUCENE_30, dictionary);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e15bea9339982eec538668b67ae252b28e0003e","date":1319539476,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(String[]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Create a set of words from an array\n   * The resulting Set does case insensitive matching\n   * TODO We should look for a faster dictionary lookup approach.\n   * @param dictionary \n   * @return {@link Set} of lowercased terms \n   */\n  public static Set<?> makeDictionary(final String[] dictionary) {\n    return makeDictionary(Version.LUCENE_30, dictionary);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e15bea9339982eec538668b67ae252b28e0003e":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["0f080986da691a3bba7b757f43ab72cdc82b57ce","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"3bb13258feba31ab676502787ab2e1779f129b7a":["0f080986da691a3bba7b757f43ab72cdc82b57ce","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e15bea9339982eec538668b67ae252b28e0003e"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["0f080986da691a3bba7b757f43ab72cdc82b57ce"]},"commit2Childs":{"1e15bea9339982eec538668b67ae252b28e0003e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["1e15bea9339982eec538668b67ae252b28e0003e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}