{"path":"lucene/core/src/java/org/apache/lucene/index/Terms#getComparator().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/Terms#getComparator().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/Terms#getComparator().mjava","sourceNew":"  /** Return the BytesRef Comparator used to sort terms\n   *  provided by the iterator.  This method may return null\n   *  if there are no terms.  This method may be invoked\n   *  many times; it's best to cache a single instance &\n   *  reuse it. */\n  public abstract Comparator<BytesRef> getComparator() throws IOException;\n\n","sourceOld":"  /** Return the BytesRef Comparator used to sort terms\n   *  provided by the iterator.  This method may return null\n   *  if there are no terms.  This method may be invoked\n   *  many times; it's best to cache a single instance &\n   *  reuse it. */\n  public abstract Comparator<BytesRef> getComparator() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c70c64aed8c1aa9864b4b1a109b3b868226e3b02","date":1358429253,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/Terms#getComparator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/Terms#getComparator().mjava","sourceNew":"  /** Return the BytesRef Comparator used to sort terms\n   *  provided by the iterator.  This method may return null\n   *  if there are no terms.  This method may be invoked\n   *  many times; it's best to cache a single instance &\n   *  reuse it. */\n  public abstract Comparator<BytesRef> getComparator();\n\n","sourceOld":"  /** Return the BytesRef Comparator used to sort terms\n   *  provided by the iterator.  This method may return null\n   *  if there are no terms.  This method may be invoked\n   *  many times; it's best to cache a single instance &\n   *  reuse it. */\n  public abstract Comparator<BytesRef> getComparator() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4015cd39dff8d4dec562d909f9766debac53aa6","date":1358548736,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/Terms#getComparator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/Terms#getComparator().mjava","sourceNew":"  /** Return the BytesRef Comparator used to sort terms\n   *  provided by the iterator.  This method may return null\n   *  if there are no terms.  This method may be invoked\n   *  many times; it's best to cache a single instance &\n   *  reuse it. */\n  public abstract Comparator<BytesRef> getComparator();\n\n","sourceOld":"  /** Return the BytesRef Comparator used to sort terms\n   *  provided by the iterator.  This method may return null\n   *  if there are no terms.  This method may be invoked\n   *  many times; it's best to cache a single instance &\n   *  reuse it. */\n  public abstract Comparator<BytesRef> getComparator() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5","date":1379624229,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/Terms#getComparator().mjava","sourceNew":null,"sourceOld":"  /** Return the BytesRef Comparator used to sort terms\n   *  provided by the iterator.  This method may return null\n   *  if there are no terms.  This method may be invoked\n   *  many times; it's best to cache a single instance &\n   *  reuse it. */\n  public abstract Comparator<BytesRef> getComparator();\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c70c64aed8c1aa9864b4b1a109b3b868226e3b02":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","c70c64aed8c1aa9864b4b1a109b3b868226e3b02"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5":["c70c64aed8c1aa9864b4b1a109b3b868226e3b02"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5"]},"commit2Childs":{"c70c64aed8c1aa9864b4b1a109b3b868226e3b02":["c4015cd39dff8d4dec562d909f9766debac53aa6","519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5"],"c4015cd39dff8d4dec562d909f9766debac53aa6":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c70c64aed8c1aa9864b4b1a109b3b868226e3b02","c4015cd39dff8d4dec562d909f9766debac53aa6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"519bac5f6a2dc1779d2fe8e51d9e1762ec94b4a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c4015cd39dff8d4dec562d909f9766debac53aa6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}