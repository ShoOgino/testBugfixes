{"path":"src/test/org/apache/lucene/store/MockRAMOutputStream#close().mjava","commits":[{"id":"eeefd99c477417e5c7c574228461ebafe92469d4","date":1166460329,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/MockRAMOutputStream#close().mjava","pathOld":"/dev/null","sourceNew":"  public void close() throws IOException {\n    super.close();\n\n    // Now compute actual disk usage & track the maxUsedSize\n    // in the MockRAMDirectory:\n    long size = dir.getRecomputedActualSizeInBytes();\n    if (size > dir.maxUsedSize) {\n      dir.maxUsedSize = size;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/MockRAMOutputStream#close().mjava","pathOld":"src/test/org/apache/lucene/store/MockRAMOutputStream#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    super.close();\n\n    // Now compute actual disk usage & track the maxUsedSize\n    // in the MockRAMDirectory:\n    long size = dir.getRecomputedActualSizeInBytes();\n    if (size > dir.maxUsedSize) {\n      dir.maxUsedSize = size;\n    }\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    super.close();\n\n    // Now compute actual disk usage & track the maxUsedSize\n    // in the MockRAMDirectory:\n    long size = dir.getRecomputedActualSizeInBytes();\n    if (size > dir.maxUsedSize) {\n      dir.maxUsedSize = size;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/store/MockRAMOutputStream#close().mjava","pathOld":"src/test/org/apache/lucene/store/MockRAMOutputStream#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    super.close();\n\n    // Now compute actual disk usage & track the maxUsedSize\n    // in the MockRAMDirectory:\n    long size = dir.getRecomputedActualSizeInBytes();\n    if (size > dir.maxUsedSize) {\n      dir.maxUsedSize = size;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    super.close();\n\n    // Now compute actual disk usage & track the maxUsedSize\n    // in the MockRAMDirectory:\n    long size = dir.getRecomputedActualSizeInBytes();\n    if (size > dir.maxUsedSize) {\n      dir.maxUsedSize = size;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["eeefd99c477417e5c7c574228461ebafe92469d4"],"eeefd99c477417e5c7c574228461ebafe92469d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1326054a8d3aa66382d49decc7f330955c9c6f71"]},"commit2Childs":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"eeefd99c477417e5c7c574228461ebafe92469d4":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eeefd99c477417e5c7c574228461ebafe92469d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}