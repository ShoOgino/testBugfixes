{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerElectionContext#runLeaderProcess(boolean,int).mjava","commits":[{"id":"ba33781da68babcaa5828121b443d3eb5c9d8480","date":1590595589,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerElectionContext#runLeaderProcess(boolean,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerElectionContext[ElectionContext]#runLeaderProcess(boolean,int).mjava","sourceNew":"  @Override\n  void runLeaderProcess(boolean weAreReplacement, int pauseBeforeStartMs) throws KeeperException,\n      InterruptedException {\n    if (isClosed) {\n      return;\n    }\n    log.info(\"I am going to be the leader {}\", id);\n    final String id = leaderSeqPath\n        .substring(leaderSeqPath.lastIndexOf(\"/\") + 1);\n    ZkNodeProps myProps = new ZkNodeProps(ID, id);\n\n    zkClient.makePath(leaderPath, Utils.toJSON(myProps),\n        CreateMode.EPHEMERAL, true);\n    if (pauseBeforeStartMs > 0) {\n      try {\n        Thread.sleep(pauseBeforeStartMs);\n      } catch (InterruptedException e) {\n        Thread.interrupted();\n        log.warn(\"Wait interrupted \", e);\n      }\n    }\n    synchronized (this) {\n      if (!this.isClosed && !overseer.getZkController().getCoreContainer().isShutDown()) {\n        overseer.start(id);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  void runLeaderProcess(boolean weAreReplacement, int pauseBeforeStartMs) throws KeeperException,\n      InterruptedException {\n    if (isClosed) {\n      return;\n    }\n    log.info(\"I am going to be the leader {}\", id);\n    final String id = leaderSeqPath\n        .substring(leaderSeqPath.lastIndexOf(\"/\") + 1);\n    ZkNodeProps myProps = new ZkNodeProps(ID, id);\n\n    zkClient.makePath(leaderPath, Utils.toJSON(myProps),\n        CreateMode.EPHEMERAL, true);\n    if(pauseBeforeStartMs >0){\n      try {\n        Thread.sleep(pauseBeforeStartMs);\n      } catch (InterruptedException e) {\n        Thread.interrupted();\n        log.warn(\"Wait interrupted \", e);\n      }\n    }\n    synchronized (this) {\n      if (!this.isClosed && !overseer.getZkController().getCoreContainer().isShutDown()) {\n        overseer.start(id);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ba33781da68babcaa5828121b443d3eb5c9d8480":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba33781da68babcaa5828121b443d3eb5c9d8480"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba33781da68babcaa5828121b443d3eb5c9d8480"],"ba33781da68babcaa5828121b443d3eb5c9d8480":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}