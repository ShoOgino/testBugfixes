{"path":"solr/core/src/java/org/apache/solr/rest/BaseSolrResource#handlePostExecution(Logger).mjava","commits":[{"id":"afb6bf9ce227ab6aac5068547e286ecc958b8b9d","date":1394661169,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/BaseSolrResource#handlePostExecution(Logger).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/schema/BaseSchemaResource#handlePostExecution(Logger).mjava","sourceNew":"  /**\n   * Deal with an exception on the SolrResponse, fill in response header info,\n   * and log the accumulated messages on the SolrResponse.\n   */\n  protected void handlePostExecution(Logger log) {\n    \n    handleException(log);\n    \n    // TODO: should status=0 (success?) be left as-is in the response header?\n    SolrCore.postDecorateResponse(null, solrRequest, solrResponse);\n\n    if (log.isInfoEnabled() && solrResponse.getToLog().size() > 0) {\n      log.info(solrResponse.getToLogAsString(solrCore.getLogId()));\n    }\n  }\n\n","sourceOld":"  /**\n   * Deal with an exception on the SolrResponse, fill in response header info,\n   * and log the accumulated messages on the SolrResponse.\n   */\n  protected void handlePostExecution(Logger log) {\n    \n    handleException(log);\n    \n    // TODO: should status=0 (success?) be left as-is in the response header?\n    SolrCore.postDecorateResponse(null, solrRequest, solrResponse);\n\n    if (log.isInfoEnabled() && solrResponse.getToLog().size() > 0) {\n      log.info(solrResponse.getToLogAsString(solrCore.getLogId()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0b7196d371f022e3c5c078c58aee21f1c246ce23","date":1455059321,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/BaseSolrResource#handlePostExecution(Logger).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/BaseSolrResource#handlePostExecution(Logger).mjava","sourceNew":"  /**\n   * Deal with an exception on the SolrResponse, fill in response header info,\n   * and log the accumulated messages on the SolrResponse.\n   */\n  protected void handlePostExecution(Logger log) {\n    \n    handleException(log);\n    \n    // TODO: should status=0 (success?) be left as-is in the response header?\n    SolrCore.postDecorateResponse(null, solrRequest, solrResponse);\n    addDeprecatedWarning();\n\n    if (log.isInfoEnabled() && solrResponse.getToLog().size() > 0) {\n      log.info(solrResponse.getToLogAsString(solrCore.getLogId()));\n    }\n  }\n\n","sourceOld":"  /**\n   * Deal with an exception on the SolrResponse, fill in response header info,\n   * and log the accumulated messages on the SolrResponse.\n   */\n  protected void handlePostExecution(Logger log) {\n    \n    handleException(log);\n    \n    // TODO: should status=0 (success?) be left as-is in the response header?\n    SolrCore.postDecorateResponse(null, solrRequest, solrResponse);\n\n    if (log.isInfoEnabled() && solrResponse.getToLog().size() > 0) {\n      log.info(solrResponse.getToLogAsString(solrCore.getLogId()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b","date":1601832109,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/BaseSolrResource#handlePostExecution(Logger).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/BaseSolrResource#handlePostExecution(Logger).mjava","sourceNew":"  /**\n   * Deal with an exception on the SolrResponse, fill in response header info,\n   * and log the accumulated messages on the SolrResponse.\n   */\n  protected void handlePostExecution(Logger log) {\n    \n    handleException(log);\n\n    addDeprecatedWarning();\n\n    if (log.isInfoEnabled() && solrResponse.getToLog().size() > 0) {\n      log.info(solrResponse.getToLogAsString(solrCore.getLogId()));\n    }\n  }\n\n","sourceOld":"  /**\n   * Deal with an exception on the SolrResponse, fill in response header info,\n   * and log the accumulated messages on the SolrResponse.\n   */\n  protected void handlePostExecution(Logger log) {\n    \n    handleException(log);\n    \n    // TODO: should status=0 (success?) be left as-is in the response header?\n    SolrCore.postDecorateResponse(null, solrRequest, solrResponse);\n    addDeprecatedWarning();\n\n    if (log.isInfoEnabled() && solrResponse.getToLog().size() > 0) {\n      log.info(solrResponse.getToLogAsString(solrCore.getLogId()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b":["0b7196d371f022e3c5c078c58aee21f1c246ce23"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0b7196d371f022e3c5c078c58aee21f1c246ce23":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b"]},"commit2Childs":{"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["0b7196d371f022e3c5c078c58aee21f1c246ce23"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"0b7196d371f022e3c5c078c58aee21f1c246ce23":["89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}