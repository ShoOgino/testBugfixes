{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointsFormat.AssertingPointsWriter#writeField(FieldInfo,PointsReader).mjava","commits":[{"id":"4522ffca5a1f420c6a02198c9332d7c596a30ca5","date":1457270822,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointsFormat.AssertingPointsWriter#writeField(FieldInfo,PointsReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointFormat.AssertingPointWriter#writeField(FieldInfo,PointReader).mjava","sourceNew":"    @Override\n    public void writeField(FieldInfo fieldInfo, PointsReader values) throws IOException {\n      if (fieldInfo.getPointDimensionCount() == 0) {\n        throw new IllegalArgumentException(\"writing field=\\\"\" + fieldInfo.name + \"\\\" but pointDimensionalCount is 0\");\n      }\n      in.writeField(fieldInfo, values);\n    }\n\n","sourceOld":"    @Override\n    public void writeField(FieldInfo fieldInfo, PointReader values) throws IOException {\n      if (fieldInfo.getPointDimensionCount() == 0) {\n        throw new IllegalArgumentException(\"writing field=\\\"\" + fieldInfo.name + \"\\\" but pointDimensionalCount is 0\");\n      }\n      in.writeField(fieldInfo, values);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10005c6013abbd1102f2463cf95604d4c8774c99","date":1469460814,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointsFormat.AssertingPointsWriter#writeField(FieldInfo,PointsReader,double).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointsFormat.AssertingPointsWriter#writeField(FieldInfo,PointsReader).mjava","sourceNew":"    @Override\n    public void writeField(FieldInfo fieldInfo, PointsReader values, double maxMBSortInHeap) throws IOException {\n      if (fieldInfo.getPointDimensionCount() == 0) {\n        throw new IllegalArgumentException(\"writing field=\\\"\" + fieldInfo.name + \"\\\" but pointDimensionalCount is 0\");\n      }\n      in.writeField(fieldInfo, values, maxMBSortInHeap);\n    }\n\n","sourceOld":"    @Override\n    public void writeField(FieldInfo fieldInfo, PointsReader values) throws IOException {\n      if (fieldInfo.getPointDimensionCount() == 0) {\n        throw new IllegalArgumentException(\"writing field=\\\"\" + fieldInfo.name + \"\\\" but pointDimensionalCount is 0\");\n      }\n      in.writeField(fieldInfo, values);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d08973aa47f2cf98a588293a53af4e948952ccfb","date":1469518724,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointsFormat.AssertingPointsWriter#writeField(FieldInfo,PointsReader,double).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointsFormat.AssertingPointsWriter#writeField(FieldInfo,PointsReader).mjava","sourceNew":"    @Override\n    public void writeField(FieldInfo fieldInfo, PointsReader values, double maxMBSortInHeap) throws IOException {\n      if (fieldInfo.getPointDimensionCount() == 0) {\n        throw new IllegalArgumentException(\"writing field=\\\"\" + fieldInfo.name + \"\\\" but pointDimensionalCount is 0\");\n      }\n      in.writeField(fieldInfo, values, maxMBSortInHeap);\n    }\n\n","sourceOld":"    @Override\n    public void writeField(FieldInfo fieldInfo, PointsReader values) throws IOException {\n      if (fieldInfo.getPointDimensionCount() == 0) {\n        throw new IllegalArgumentException(\"writing field=\\\"\" + fieldInfo.name + \"\\\" but pointDimensionalCount is 0\");\n      }\n      in.writeField(fieldInfo, values);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0567940defa1ea6eb8a039d9d36e3682063f8a4","date":1469815320,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointsFormat.AssertingPointsWriter#writeField(FieldInfo,PointsReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointsFormat.AssertingPointsWriter#writeField(FieldInfo,PointsReader,double).mjava","sourceNew":"    @Override\n    public void writeField(FieldInfo fieldInfo, PointsReader values) throws IOException {\n      if (fieldInfo.getPointDimensionCount() == 0) {\n        throw new IllegalArgumentException(\"writing field=\\\"\" + fieldInfo.name + \"\\\" but pointDimensionalCount is 0\");\n      }\n      in.writeField(fieldInfo, values);\n    }\n\n","sourceOld":"    @Override\n    public void writeField(FieldInfo fieldInfo, PointsReader values, double maxMBSortInHeap) throws IOException {\n      if (fieldInfo.getPointDimensionCount() == 0) {\n        throw new IllegalArgumentException(\"writing field=\\\"\" + fieldInfo.name + \"\\\" but pointDimensionalCount is 0\");\n      }\n      in.writeField(fieldInfo, values, maxMBSortInHeap);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointsFormat.AssertingPointsWriter#writeField(FieldInfo,PointsReader).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void writeField(FieldInfo fieldInfo, PointsReader values) throws IOException {\n      if (fieldInfo.getPointDimensionCount() == 0) {\n        throw new IllegalArgumentException(\"writing field=\\\"\" + fieldInfo.name + \"\\\" but pointDimensionalCount is 0\");\n      }\n      in.writeField(fieldInfo, values);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6652c943595e92c187ee904c382863013eae28f","date":1539042663,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointsFormat.AssertingPointsWriter#writeField(FieldInfo,PointsReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointsFormat.AssertingPointsWriter#writeField(FieldInfo,PointsReader).mjava","sourceNew":"    @Override\n    public void writeField(FieldInfo fieldInfo, PointsReader values) throws IOException {\n      if (fieldInfo.getPointDataDimensionCount() == 0) {\n        throw new IllegalArgumentException(\"writing field=\\\"\" + fieldInfo.name + \"\\\" but pointDataDimensionalCount is 0\");\n      }\n      in.writeField(fieldInfo, values);\n    }\n\n","sourceOld":"    @Override\n    public void writeField(FieldInfo fieldInfo, PointsReader values) throws IOException {\n      if (fieldInfo.getPointDimensionCount() == 0) {\n        throw new IllegalArgumentException(\"writing field=\\\"\" + fieldInfo.name + \"\\\" but pointDimensionalCount is 0\");\n      }\n      in.writeField(fieldInfo, values);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59ed8c026ba85e3c42fb89605b2032dc6f9cc241","date":1581113294,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointsFormat.AssertingPointsWriter#writeField(FieldInfo,PointsReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingPointsFormat.AssertingPointsWriter#writeField(FieldInfo,PointsReader).mjava","sourceNew":"    @Override\n    public void writeField(FieldInfo fieldInfo, PointsReader values) throws IOException {\n      if (fieldInfo.getPointDimensionCount() == 0) {\n        throw new IllegalArgumentException(\"writing field=\\\"\" + fieldInfo.name + \"\\\" but pointDimensionalCount is 0\");\n      }\n      in.writeField(fieldInfo, values);\n    }\n\n","sourceOld":"    @Override\n    public void writeField(FieldInfo fieldInfo, PointsReader values) throws IOException {\n      if (fieldInfo.getPointDataDimensionCount() == 0) {\n        throw new IllegalArgumentException(\"writing field=\\\"\" + fieldInfo.name + \"\\\" but pointDataDimensionalCount is 0\");\n      }\n      in.writeField(fieldInfo, values);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b0567940defa1ea6eb8a039d9d36e3682063f8a4":["d08973aa47f2cf98a588293a53af4e948952ccfb"],"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["f6652c943595e92c187ee904c382863013eae28f"],"f6652c943595e92c187ee904c382863013eae28f":["b0567940defa1ea6eb8a039d9d36e3682063f8a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"10005c6013abbd1102f2463cf95604d4c8774c99":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"],"d08973aa47f2cf98a588293a53af4e948952ccfb":["4522ffca5a1f420c6a02198c9332d7c596a30ca5","10005c6013abbd1102f2463cf95604d4c8774c99"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["d08973aa47f2cf98a588293a53af4e948952ccfb","b0567940defa1ea6eb8a039d9d36e3682063f8a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"]},"commit2Childs":{"b0567940defa1ea6eb8a039d9d36e3682063f8a4":["f6652c943595e92c187ee904c382863013eae28f","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["10005c6013abbd1102f2463cf95604d4c8774c99","d08973aa47f2cf98a588293a53af4e948952ccfb"],"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f6652c943595e92c187ee904c382863013eae28f":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"],"10005c6013abbd1102f2463cf95604d4c8774c99":["d08973aa47f2cf98a588293a53af4e948952ccfb"],"d08973aa47f2cf98a588293a53af4e948952ccfb":["b0567940defa1ea6eb8a039d9d36e3682063f8a4","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}