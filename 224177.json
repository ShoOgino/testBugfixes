{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.RunSolrRequest#execute(SimScenario).mjava","commits":[{"id":"a7aeb53916301ea6a5fedff4fdc9617b257cbc7d","date":1571856490,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.RunSolrRequest#execute(SimScenario).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void execute(SimScenario scenario) throws Exception {\n      String path = params.get(\"path\", \"/\");\n      SolrRequest.METHOD m = SolrRequest.METHOD.valueOf(params.get(\"httpMethod\", \"GET\"));\n      params.remove(\"httpMethod\");\n      String streamBody = params.get(\"stream.body\");\n      params.remove(\"stream.body\");\n      GenericSolrRequest req = new GenericSolrRequest(m, path, params);\n      if (streamBody != null) {\n        req.setContentWriter(new RequestWriter.StringPayloadContentWriter(streamBody, \"application/json\"));\n      }\n      SolrResponse rsp = scenario.cluster.request(req);\n      List<SolrResponse> responses = (List<SolrResponse>) scenario.context.computeIfAbsent(RESPONSES_CTX_PROP, Utils.NEW_ARRAYLIST_FUN);\n      responses.add(rsp);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"daa0f21a44e235a2299ea1fa913898b182dd7cce","date":1590952026,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.RunSolrRequest#execute(SimScenario).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.RunSolrRequest#execute(SimScenario).mjava","sourceNew":"    @Override\n    public void execute(SimScenario scenario) throws Exception {\n      String path = params.get(\"path\", \"/\");\n      SolrRequest.METHOD m = SolrRequest.METHOD.valueOf(params.get(\"httpMethod\", \"GET\"));\n      params.remove(\"httpMethod\");\n      String streamBody = params.get(\"stream.body\");\n      params.remove(\"stream.body\");\n      GenericSolrRequest req = new GenericSolrRequest(m, path, params);\n      if (streamBody != null) {\n        req.setContentWriter(new RequestWriter.StringPayloadContentWriter(streamBody, \"application/json\"));\n      }\n      SolrResponse rsp = scenario.cluster.request(req);\n      @SuppressWarnings({\"unchecked\"})\n      List<SolrResponse> responses = (List<SolrResponse>) scenario.context.computeIfAbsent(RESPONSES_CTX_PROP, Utils.NEW_ARRAYLIST_FUN);\n      responses.add(rsp);\n    }\n\n","sourceOld":"    @Override\n    public void execute(SimScenario scenario) throws Exception {\n      String path = params.get(\"path\", \"/\");\n      SolrRequest.METHOD m = SolrRequest.METHOD.valueOf(params.get(\"httpMethod\", \"GET\"));\n      params.remove(\"httpMethod\");\n      String streamBody = params.get(\"stream.body\");\n      params.remove(\"stream.body\");\n      GenericSolrRequest req = new GenericSolrRequest(m, path, params);\n      if (streamBody != null) {\n        req.setContentWriter(new RequestWriter.StringPayloadContentWriter(streamBody, \"application/json\"));\n      }\n      SolrResponse rsp = scenario.cluster.request(req);\n      List<SolrResponse> responses = (List<SolrResponse>) scenario.context.computeIfAbsent(RESPONSES_CTX_PROP, Utils.NEW_ARRAYLIST_FUN);\n      responses.add(rsp);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.RunSolrRequest#execute(SimScenario).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void execute(SimScenario scenario) throws Exception {\n      String path = params.get(\"path\", \"/\");\n      SolrRequest.METHOD m = SolrRequest.METHOD.valueOf(params.get(\"httpMethod\", \"GET\"));\n      params.remove(\"httpMethod\");\n      String streamBody = params.get(\"stream.body\");\n      params.remove(\"stream.body\");\n      GenericSolrRequest req = new GenericSolrRequest(m, path, params);\n      if (streamBody != null) {\n        req.setContentWriter(new RequestWriter.StringPayloadContentWriter(streamBody, \"application/json\"));\n      }\n      SolrResponse rsp = scenario.cluster.request(req);\n      @SuppressWarnings({\"unchecked\"})\n      List<SolrResponse> responses = (List<SolrResponse>) scenario.context.computeIfAbsent(RESPONSES_CTX_PROP, Utils.NEW_ARRAYLIST_FUN);\n      responses.add(rsp);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["daa0f21a44e235a2299ea1fa913898b182dd7cce"],"daa0f21a44e235a2299ea1fa913898b182dd7cce":["a7aeb53916301ea6a5fedff4fdc9617b257cbc7d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"],"a7aeb53916301ea6a5fedff4fdc9617b257cbc7d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"daa0f21a44e235a2299ea1fa913898b182dd7cce":["3f504512a03d978990cbff30db0522b354e846db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a7aeb53916301ea6a5fedff4fdc9617b257cbc7d"],"a7aeb53916301ea6a5fedff4fdc9617b257cbc7d":["daa0f21a44e235a2299ea1fa913898b182dd7cce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}