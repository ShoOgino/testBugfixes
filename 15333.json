{"path":"lucene/src/java/org/apache/lucene/index/codecs/lucene3x/SegmentTermDocs#read(int[],int[]).mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene3x/SegmentTermDocs#read(int[],int[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/preflex/SegmentTermDocs#read(int[],int[]).mjava","sourceNew":"  /** Optimized implementation. */\n  public int read(final int[] docs, final int[] freqs)\n          throws IOException {\n    final int length = docs.length;\n    if (indexOptions == IndexOptions.DOCS_ONLY) {\n      return readNoTf(docs, freqs, length);\n    } else {\n      int i = 0;\n      while (i < length && count < df) {\n        // manually inlined call to next() for speed\n        final int docCode = freqStream.readVInt();\n        doc += docCode >>> 1;       // shift off low bit\n        if ((docCode & 1) != 0)       // if low bit is set\n          freq = 1;         // freq is one\n        else\n          freq = freqStream.readVInt();     // else read freq\n        count++;\n\n        if (liveDocs == null || liveDocs.get(doc)) {\n          docs[i] = doc;\n          freqs[i] = freq;\n          ++i;\n        }\n      }\n      return i;\n    }\n  }\n\n","sourceOld":"  /** Optimized implementation. */\n  public int read(final int[] docs, final int[] freqs)\n          throws IOException {\n    final int length = docs.length;\n    if (indexOptions == IndexOptions.DOCS_ONLY) {\n      return readNoTf(docs, freqs, length);\n    } else {\n      int i = 0;\n      while (i < length && count < df) {\n        // manually inlined call to next() for speed\n        final int docCode = freqStream.readVInt();\n        doc += docCode >>> 1;       // shift off low bit\n        if ((docCode & 1) != 0)       // if low bit is set\n          freq = 1;         // freq is one\n        else\n          freq = freqStream.readVInt();     // else read freq\n        count++;\n\n        if (liveDocs == null || liveDocs.get(doc)) {\n          docs[i] = doc;\n          freqs[i] = freq;\n          ++i;\n        }\n      }\n      return i;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/SegmentTermDocs#read(int[],int[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene3x/SegmentTermDocs#read(int[],int[]).mjava","sourceNew":"  /** Optimized implementation. */\n  public int read(final int[] docs, final int[] freqs)\n          throws IOException {\n    final int length = docs.length;\n    if (indexOptions == IndexOptions.DOCS_ONLY) {\n      return readNoTf(docs, freqs, length);\n    } else {\n      int i = 0;\n      while (i < length && count < df) {\n        // manually inlined call to next() for speed\n        final int docCode = freqStream.readVInt();\n        doc += docCode >>> 1;       // shift off low bit\n        if ((docCode & 1) != 0)       // if low bit is set\n          freq = 1;         // freq is one\n        else\n          freq = freqStream.readVInt();     // else read freq\n        count++;\n\n        if (liveDocs == null || liveDocs.get(doc)) {\n          docs[i] = doc;\n          freqs[i] = freq;\n          ++i;\n        }\n      }\n      return i;\n    }\n  }\n\n","sourceOld":"  /** Optimized implementation. */\n  public int read(final int[] docs, final int[] freqs)\n          throws IOException {\n    final int length = docs.length;\n    if (indexOptions == IndexOptions.DOCS_ONLY) {\n      return readNoTf(docs, freqs, length);\n    } else {\n      int i = 0;\n      while (i < length && count < df) {\n        // manually inlined call to next() for speed\n        final int docCode = freqStream.readVInt();\n        doc += docCode >>> 1;       // shift off low bit\n        if ((docCode & 1) != 0)       // if low bit is set\n          freq = 1;         // freq is one\n        else\n          freq = freqStream.readVInt();     // else read freq\n        count++;\n\n        if (liveDocs == null || liveDocs.get(doc)) {\n          docs[i] = doc;\n          freqs[i] = freq;\n          ++i;\n        }\n      }\n      return i;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}