{"path":"lucene/core/src/java/org/apache/lucene/util/RamUsageEstimator#sizeOf(String).mjava","commits":[{"id":"1263de2bb0042265cc21611cccdf11992274edcf","date":1393266507,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/RamUsageEstimator#sizeOf(String).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the size in bytes of the String object. */\n  public static long sizeOf(String s) {\n    return shallowSizeOf(s) + alignObjectSize(NUM_BYTES_ARRAY_HEADER + NUM_BYTES_CHAR * s.length());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d69a38404c7c4cc457210f85de200556d49231d","date":1393285454,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/RamUsageEstimator#sizeOf(String).mjava","sourceNew":null,"sourceOld":"  /** Returns the size in bytes of the String object. */\n  public static long sizeOf(String s) {\n    return shallowSizeOf(s) + alignObjectSize(NUM_BYTES_ARRAY_HEADER + NUM_BYTES_CHAR * s.length());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe90d104db258964b96e50418b9caa0c156eafda","date":1561555614,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/RamUsageEstimator#sizeOf(String).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the size in bytes of the String object. */\n  public static long sizeOf(String s) {\n    if (s == null) {\n      return 0;\n    }\n    // may not be true in Java 9+ and CompactStrings - but we have no way to determine this\n\n    // char[] + hashCode\n    long size = STRING_SIZE + (long)NUM_BYTES_ARRAY_HEADER + (long)Character.BYTES * s.length();\n    return alignObjectSize(size);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1263de2bb0042265cc21611cccdf11992274edcf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe90d104db258964b96e50418b9caa0c156eafda":["0d69a38404c7c4cc457210f85de200556d49231d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0d69a38404c7c4cc457210f85de200556d49231d":["1263de2bb0042265cc21611cccdf11992274edcf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fe90d104db258964b96e50418b9caa0c156eafda"]},"commit2Childs":{"1263de2bb0042265cc21611cccdf11992274edcf":["0d69a38404c7c4cc457210f85de200556d49231d"],"fe90d104db258964b96e50418b9caa0c156eafda":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1263de2bb0042265cc21611cccdf11992274edcf"],"0d69a38404c7c4cc457210f85de200556d49231d":["fe90d104db258964b96e50418b9caa0c156eafda"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}