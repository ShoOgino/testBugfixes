{"path":"modules/spatial/src/java/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTreeFactory#makeSPT(Map[String,String],ClassLoader,SpatialContext).mjava","commits":[{"id":"de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e","date":1330665960,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial/src/java/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTreeFactory#makeSPT(Map[String,String],ClassLoader,SpatialContext).mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/strategy/prefix/tree/SpatialPrefixTreeFactory#makeSPT(Map[String,String],ClassLoader,SpatialContext).mjava","sourceNew":"  /**\n   * The factory  is looked up via \"prefixTree\" in args, expecting \"geohash\" or \"quad\".\n   * If its neither of these, then \"geohash\" is chosen for a geo context, otherwise \"quad\" is chosen.\n   */\n  public static SpatialPrefixTree makeSPT(Map<String,String> args, ClassLoader classLoader, SpatialContext ctx) {\n    SpatialPrefixTreeFactory instance;\n    String cname = args.get(\"prefixTree\");\n    if (cname == null)\n      cname = ctx.isGeo() ? \"geohash\" : \"quad\";\n    if (\"geohash\".equalsIgnoreCase(cname))\n      instance = new GeohashPrefixTree.Factory();\n    else if (\"quad\".equalsIgnoreCase(cname))\n      instance = new QuadPrefixTree.Factory();\n    else {\n      try {\n        Class c = classLoader.loadClass(cname);\n        instance = (SpatialPrefixTreeFactory) c.newInstance();\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n    instance.init(args,ctx);\n    return instance.newSPT();\n  }\n\n","sourceOld":"  /**\n   * The factory  is looked up via \"prefixTree\" in args, expecting \"geohash\" or \"quad\".\n   * If its neither of these, then \"geohash\" is chosen for a geo context, otherwise \"quad\" is chosen.\n   */\n  public static SpatialPrefixTree makeSPT(Map<String,String> args, ClassLoader classLoader, SpatialContext ctx) {\n    SpatialPrefixTreeFactory instance;\n    String cname = args.get(\"prefixTree\");\n    if (cname == null)\n      cname = ctx.isGeo() ? \"geohash\" : \"quad\";\n    if (\"geohash\".equalsIgnoreCase(cname))\n      instance = new GeohashPrefixTree.Factory();\n    else if (\"quad\".equalsIgnoreCase(cname))\n      instance = new QuadPrefixTree.Factory();\n    else {\n      try {\n        Class c = classLoader.loadClass(cname);\n        instance = (SpatialPrefixTreeFactory) c.newInstance();\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n    instance.init(args,ctx);\n    return instance.newSPT();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e47768b261c28e7e6032060e8331475c81057953","date":1331681297,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"modules/spatial/src/java/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTreeFactory#makeSPT(Map[String,String],ClassLoader,SpatialContext).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * The factory  is looked up via \"prefixTree\" in args, expecting \"geohash\" or \"quad\".\n   * If its neither of these, then \"geohash\" is chosen for a geo context, otherwise \"quad\" is chosen.\n   */\n  public static SpatialPrefixTree makeSPT(Map<String,String> args, ClassLoader classLoader, SpatialContext ctx) {\n    SpatialPrefixTreeFactory instance;\n    String cname = args.get(\"prefixTree\");\n    if (cname == null)\n      cname = ctx.isGeo() ? \"geohash\" : \"quad\";\n    if (\"geohash\".equalsIgnoreCase(cname))\n      instance = new GeohashPrefixTree.Factory();\n    else if (\"quad\".equalsIgnoreCase(cname))\n      instance = new QuadPrefixTree.Factory();\n    else {\n      try {\n        Class c = classLoader.loadClass(cname);\n        instance = (SpatialPrefixTreeFactory) c.newInstance();\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n    instance.init(args,ctx);\n    return instance.newSPT();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTreeFactory#makeSPT(Map[String,String],ClassLoader,SpatialContext).mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTreeFactory#makeSPT(Map[String,String],ClassLoader,SpatialContext).mjava","sourceNew":"  /**\n   * The factory  is looked up via \"prefixTree\" in args, expecting \"geohash\" or \"quad\".\n   * If its neither of these, then \"geohash\" is chosen for a geo context, otherwise \"quad\" is chosen.\n   */\n  public static SpatialPrefixTree makeSPT(Map<String,String> args, ClassLoader classLoader, SpatialContext ctx) {\n    SpatialPrefixTreeFactory instance;\n    String cname = args.get(\"prefixTree\");\n    if (cname == null)\n      cname = ctx.isGeo() ? \"geohash\" : \"quad\";\n    if (\"geohash\".equalsIgnoreCase(cname))\n      instance = new GeohashPrefixTree.Factory();\n    else if (\"quad\".equalsIgnoreCase(cname))\n      instance = new QuadPrefixTree.Factory();\n    else {\n      try {\n        Class c = classLoader.loadClass(cname);\n        instance = (SpatialPrefixTreeFactory) c.newInstance();\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n    instance.init(args,ctx);\n    return instance.newSPT();\n  }\n\n","sourceOld":"  /**\n   * The factory  is looked up via \"prefixTree\" in args, expecting \"geohash\" or \"quad\".\n   * If its neither of these, then \"geohash\" is chosen for a geo context, otherwise \"quad\" is chosen.\n   */\n  public static SpatialPrefixTree makeSPT(Map<String,String> args, ClassLoader classLoader, SpatialContext ctx) {\n    SpatialPrefixTreeFactory instance;\n    String cname = args.get(\"prefixTree\");\n    if (cname == null)\n      cname = ctx.isGeo() ? \"geohash\" : \"quad\";\n    if (\"geohash\".equalsIgnoreCase(cname))\n      instance = new GeohashPrefixTree.Factory();\n    else if (\"quad\".equalsIgnoreCase(cname))\n      instance = new QuadPrefixTree.Factory();\n    else {\n      try {\n        Class c = classLoader.loadClass(cname);\n        instance = (SpatialPrefixTreeFactory) c.newInstance();\n      } catch (Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n    instance.init(args,ctx);\n    return instance.newSPT();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e47768b261c28e7e6032060e8331475c81057953"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e47768b261c28e7e6032060e8331475c81057953":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e"],"de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e47768b261c28e7e6032060e8331475c81057953","de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e"],"e47768b261c28e7e6032060e8331475c81057953":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e":["e47768b261c28e7e6032060e8331475c81057953"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}