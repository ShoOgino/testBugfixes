{"path":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.indexWriterProvider = ((DirectUpdateHandler2)updateHandler).indexWriterProvider;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      indexWriterProvider = new DefaultIndexWriterProvider(core);\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.indexWriterProvider = ((DirectUpdateHandler2)updateHandler).indexWriterProvider;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      indexWriterProvider = new DefaultIndexWriterProvider(core);\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.indexWriterProvider = ((DirectUpdateHandler2)updateHandler).indexWriterProvider;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      indexWriterProvider = new DefaultIndexWriterProvider(core);\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.indexWriterProvider = ((DirectUpdateHandler2)updateHandler).indexWriterProvider;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      indexWriterProvider = new DefaultIndexWriterProvider(core);\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.indexWriterProvider = ((DirectUpdateHandler2)updateHandler).indexWriterProvider;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      indexWriterProvider = new DefaultIndexWriterProvider(core);\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.indexWriterProvider = ((DirectUpdateHandler2)updateHandler).indexWriterProvider;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      indexWriterProvider = new DefaultIndexWriterProvider(core);\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"774e6bee28f9c598a3ce2536597c865ed6d32f2c","date":1313001285,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.indexWriterProvider = ((DirectUpdateHandler2)updateHandler).indexWriterProvider;\n      this.indexWriterProvider.updateCore(core);\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      indexWriterProvider = new DefaultIndexWriterProvider(core);\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.indexWriterProvider = ((DirectUpdateHandler2)updateHandler).indexWriterProvider;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      indexWriterProvider = new DefaultIndexWriterProvider(core);\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0e8cb6e9df9d6fc873383924f02d9aacfffebf4e","date":1313005033,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.indexWriterProvider = ((DirectUpdateHandler2)updateHandler).indexWriterProvider;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      indexWriterProvider = new DefaultIndexWriterProvider();\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.indexWriterProvider = ((DirectUpdateHandler2)updateHandler).indexWriterProvider;\n      this.indexWriterProvider.updateCore(core);\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      indexWriterProvider = new DefaultIndexWriterProvider(core);\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n  }\n\n","bugFix":null,"bugIntro":["e22ffe8cc51a892ae103df018822d7873e901c2a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cec585935ebadb78352a93e4a429d2b89fb2d53e","date":1313269561,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.indexWriterProvider = ((DirectUpdateHandler2)updateHandler).indexWriterProvider;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      indexWriterProvider = new DefaultIndexWriterProvider();\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.indexWriterProvider = ((DirectUpdateHandler2)updateHandler).indexWriterProvider;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      indexWriterProvider = new DefaultIndexWriterProvider();\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e22ffe8cc51a892ae103df018822d7873e901c2a","date":1313696790,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.indexWriterProvider = ((DirectUpdateHandler2)updateHandler).indexWriterProvider;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      indexWriterProvider = new DefaultSolrCoreState(core.getDirectoryFactory());\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.indexWriterProvider = ((DirectUpdateHandler2)updateHandler).indexWriterProvider;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      indexWriterProvider = new DefaultIndexWriterProvider();\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n  }\n\n","bugFix":["0e8cb6e9df9d6fc873383924f02d9aacfffebf4e"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bd0ef6574805f3cb9880e0983b7548a6aa933508","date":1315345052,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.indexWriterProvider = ((DirectUpdateHandler2)updateHandler).indexWriterProvider;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      indexWriterProvider = new DefaultSolrCoreState(core.getDirectoryFactory());\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    this.ulog.init(this, core);\n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.indexWriterProvider = ((DirectUpdateHandler2)updateHandler).indexWriterProvider;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      indexWriterProvider = new DefaultSolrCoreState(core.getDirectoryFactory());\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"98fa1aca20a29db3d3d1a867eeed78f65448febe","date":1317919012,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.solrCoreState = ((DirectUpdateHandler2)updateHandler).solrCoreState;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      solrCoreState = new DefaultSolrCoreState(core.getDirectoryFactory());\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    this.ulog.init(this, core);\n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.indexWriterProvider = ((DirectUpdateHandler2)updateHandler).indexWriterProvider;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      indexWriterProvider = new DefaultSolrCoreState(core.getDirectoryFactory());\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    this.ulog.init(this, core);\n  }\n\n","bugFix":null,"bugIntro":["3c8475e39c56b28600d2b496f3e78f7421190f62"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.solrCoreState = ((DirectUpdateHandler2) updateHandler).solrCoreState;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      solrCoreState = new DefaultSolrCoreState(core.getDirectoryFactory());\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    if (this.ulog != null) {\n      this.ulog.init(this, core);\n    }\n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.solrCoreState = ((DirectUpdateHandler2)updateHandler).solrCoreState;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      solrCoreState = new DefaultSolrCoreState(core.getDirectoryFactory());\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    this.ulog.init(this, core);\n  }\n\n","bugFix":null,"bugIntro":["3c8475e39c56b28600d2b496f3e78f7421190f62"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.solrCoreState = ((DirectUpdateHandler2) updateHandler).solrCoreState;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      solrCoreState = new DefaultSolrCoreState(core.getDirectoryFactory());\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    if (this.ulog != null) {\n      this.ulog.init(this, core);\n    }\n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.solrCoreState = ((DirectUpdateHandler2)updateHandler).solrCoreState;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      solrCoreState = new DefaultSolrCoreState(core.getDirectoryFactory());\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    this.ulog.init(this, core);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.solrCoreState = ((DirectUpdateHandler2) updateHandler).solrCoreState;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      solrCoreState = new DefaultSolrCoreState(core.getDirectoryFactory());\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    if (this.ulog != null) {\n      this.ulog.init(this, core);\n    }\n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.solrCoreState = ((DirectUpdateHandler2)updateHandler).solrCoreState;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      solrCoreState = new DefaultSolrCoreState(core.getDirectoryFactory());\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    this.ulog.init(this, core);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad31de9d3b830bc174d4c41df9f80f4cac82576","date":1328107867,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.solrCoreState = ((DirectUpdateHandler2) updateHandler).solrCoreState;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      solrCoreState = new DefaultSolrCoreState(core.getDirectoryFactory());\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, updateHandlerInfo.openSearcher, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    if (this.ulog != null) {\n      this.ulog.init(this, core);\n    }\n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.solrCoreState = ((DirectUpdateHandler2) updateHandler).solrCoreState;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      solrCoreState = new DefaultSolrCoreState(core.getDirectoryFactory());\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, true, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, true, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    if (this.ulog != null) {\n      this.ulog.init(this, core);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.solrCoreState = ((DirectUpdateHandler2) updateHandler).solrCoreState;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      solrCoreState = new DefaultSolrCoreState(core.getDirectoryFactory());\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, updateHandlerInfo.openSearcher, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    if (this.ulog != null) {\n      this.ulog.init(this, core);\n    }\n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.solrCoreState = ((DirectUpdateHandler2) updateHandler).solrCoreState;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      solrCoreState = new DefaultSolrCoreState(core.getDirectoryFactory());\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, updateHandlerInfo.openSearcher, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    if (this.ulog != null) {\n      this.ulog.init(this, core);\n    }\n  }\n\n","bugFix":["7a71a0b2d4be2299a163f60626729852d81a8e02"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.solrCoreState = ((DirectUpdateHandler2) updateHandler).solrCoreState;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      solrCoreState = new DefaultSolrCoreState(core.getDirectoryFactory());\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, updateHandlerInfo.openSearcher, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    if (this.ulog != null) {\n      this.ulog.init(this, core);\n    }\n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) throws IOException {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.solrCoreState = ((DirectUpdateHandler2) updateHandler).solrCoreState;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      solrCoreState = new DefaultSolrCoreState(core.getDirectoryFactory());\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, updateHandlerInfo.openSearcher, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    if (this.ulog != null) {\n      this.ulog.init(this, core);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c8475e39c56b28600d2b496f3e78f7421190f62","date":1349102564,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) {\n    super(core);\n    solrCoreState = core.getSolrCoreState();\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, updateHandlerInfo.openSearcher, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    if (this.ulog != null) {\n      this.ulog.init(this, core);\n    }\n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) {\n    super(core);\n    if (updateHandler instanceof DirectUpdateHandler2) {\n      this.solrCoreState = ((DirectUpdateHandler2) updateHandler).solrCoreState;\n    } else {\n      // the impl has changed, so we cannot use the old state - decref it\n      updateHandler.decref();\n      solrCoreState = new DefaultSolrCoreState(core.getDirectoryFactory());\n    }\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, updateHandlerInfo.openSearcher, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    if (this.ulog != null) {\n      this.ulog.init(this, core);\n    }\n  }\n\n","bugFix":["98fa1aca20a29db3d3d1a867eeed78f65448febe","2c007e7c4cf8c55bc2a5884e315123afaaeec87f","7a71a0b2d4be2299a163f60626729852d81a8e02"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"039186fd2452232060d10c35a255715d6147dd91","date":1359732548,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) {\n    super(core);\n    solrCoreState = core.getSolrCoreState();\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, updateHandlerInfo.openSearcher, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    if (this.ulog != null) {\n      this.ulog.init(this, core);\n    }\n    \n    commitWithinSoftCommit = updateHandlerInfo.commitWithinSoftCommit;\n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) {\n    super(core);\n    solrCoreState = core.getSolrCoreState();\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, updateHandlerInfo.openSearcher, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    if (this.ulog != null) {\n      this.ulog.init(this, core);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c47e57a9659cee31304e7b75b71b252d2f33b6f9","date":1359743123,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) {\n    super(core);\n    solrCoreState = core.getSolrCoreState();\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, updateHandlerInfo.openSearcher, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    if (this.ulog != null) {\n      this.ulog.init(this, core);\n    }\n    \n    commitWithinSoftCommit = updateHandlerInfo.commitWithinSoftCommit;\n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) {\n    super(core);\n    solrCoreState = core.getSolrCoreState();\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, updateHandlerInfo.openSearcher, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    if (this.ulog != null) {\n      this.ulog.init(this, core);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28d656aaac42f919a3a7e8a859407018d75fed41","date":1363584435,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) {\n    super(core, updateHandler.getUpdateLog());\n    solrCoreState = core.getSolrCoreState();\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, updateHandlerInfo.openSearcher, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    if (this.ulog != null) {\n      this.ulog.init(this, core);\n    }\n    \n    commitWithinSoftCommit = updateHandlerInfo.commitWithinSoftCommit;\n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) {\n    super(core);\n    solrCoreState = core.getSolrCoreState();\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, updateHandlerInfo.openSearcher, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    if (this.ulog != null) {\n      this.ulog.init(this, core);\n    }\n    \n    commitWithinSoftCommit = updateHandlerInfo.commitWithinSoftCommit;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7189c90089da119be6d4026d4bfa8d28ba7d418b","date":1363584689,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) {\n    super(core, updateHandler.getUpdateLog());\n    solrCoreState = core.getSolrCoreState();\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, updateHandlerInfo.openSearcher, true);\n    \n    commitWithinSoftCommit = updateHandlerInfo.commitWithinSoftCommit;\n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) {\n    super(core, updateHandler.getUpdateLog());\n    solrCoreState = core.getSolrCoreState();\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, updateHandlerInfo.openSearcher, true);\n    \n    this.ulog = updateHandler.getUpdateLog();\n    if (this.ulog != null) {\n      this.ulog.init(this, core);\n    }\n    \n    commitWithinSoftCommit = updateHandlerInfo.commitWithinSoftCommit;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ab99a2487a34179af579c58aee0f6954a54173b","date":1370025444,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) {\n    super(core, updateHandler.getUpdateLog());\n    solrCoreState = core.getSolrCoreState();\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, updateHandlerInfo.openSearcher, true);\n    \n    commitWithinSoftCommit = updateHandlerInfo.commitWithinSoftCommit;\n\n    UpdateLog existingLog = updateHandler.getUpdateLog();\n    if (this.ulog != null && this.ulog == existingLog) {\n      // If we are reusing the existing update log, inform the log that it's update handler has changed.\n      // We do this as late as possible.\n      this.ulog.init(this, core);\n    }\n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) {\n    super(core, updateHandler.getUpdateLog());\n    solrCoreState = core.getSolrCoreState();\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, updateHandlerInfo.openSearcher, true);\n    \n    commitWithinSoftCommit = updateHandlerInfo.commitWithinSoftCommit;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b262e4be9cc7c2090a610b2a5e3628815288798","date":1403120031,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) {\n    super(core, updateHandler.getUpdateLog());\n    solrCoreState = core.getSolrCoreState();\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, updateHandlerInfo.openSearcher, true);\n    \n    commitWithinSoftCommit = updateHandlerInfo.commitWithinSoftCommit;\n    indexWriterCloseWaitsForMerges = updateHandlerInfo.indexWriterCloseWaitsForMerges;\n\n    UpdateLog existingLog = updateHandler.getUpdateLog();\n    if (this.ulog != null && this.ulog == existingLog) {\n      // If we are reusing the existing update log, inform the log that it's update handler has changed.\n      // We do this as late as possible.\n      this.ulog.init(this, core);\n    }\n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) {\n    super(core, updateHandler.getUpdateLog());\n    solrCoreState = core.getSolrCoreState();\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, updateHandlerInfo.openSearcher, true);\n    \n    commitWithinSoftCommit = updateHandlerInfo.commitWithinSoftCommit;\n\n    UpdateLog existingLog = updateHandler.getUpdateLog();\n    if (this.ulog != null && this.ulog == existingLog) {\n      // If we are reusing the existing update log, inform the log that it's update handler has changed.\n      // We do this as late as possible.\n      this.ulog.init(this, core);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) {\n    super(core, updateHandler.getUpdateLog());\n    solrCoreState = core.getSolrCoreState();\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, updateHandlerInfo.openSearcher, true);\n    \n    commitWithinSoftCommit = updateHandlerInfo.commitWithinSoftCommit;\n    indexWriterCloseWaitsForMerges = updateHandlerInfo.indexWriterCloseWaitsForMerges;\n\n    UpdateLog existingLog = updateHandler.getUpdateLog();\n    if (this.ulog != null && this.ulog == existingLog) {\n      // If we are reusing the existing update log, inform the log that its update handler has changed.\n      // We do this as late as possible.\n      this.ulog.init(this, core);\n    }\n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) {\n    super(core, updateHandler.getUpdateLog());\n    solrCoreState = core.getSolrCoreState();\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, updateHandlerInfo.openSearcher, true);\n    \n    commitWithinSoftCommit = updateHandlerInfo.commitWithinSoftCommit;\n    indexWriterCloseWaitsForMerges = updateHandlerInfo.indexWriterCloseWaitsForMerges;\n\n    UpdateLog existingLog = updateHandler.getUpdateLog();\n    if (this.ulog != null && this.ulog == existingLog) {\n      // If we are reusing the existing update log, inform the log that it's update handler has changed.\n      // We do this as late as possible.\n      this.ulog.init(this, core);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d07d6c279b65daaca32ee033fa06e4d7e85e0dd","date":1525384847,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DirectUpdateHandler2#DirectUpdateHandler2(SolrCore,UpdateHandler).mjava","sourceNew":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) {\n    super(core, updateHandler.getUpdateLog());\n    solrCoreState = core.getSolrCoreState();\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs;\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime;\n    long fileSizeUpperBound = updateHandlerInfo.autoCommitMaxSizeBytes;\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, fileSizeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs;\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime;\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, NO_FILE_SIZE_UPPER_BOUND_PLACEHOLDER, updateHandlerInfo.openSearcher, true);\n    \n    commitWithinSoftCommit = updateHandlerInfo.commitWithinSoftCommit;\n    indexWriterCloseWaitsForMerges = updateHandlerInfo.indexWriterCloseWaitsForMerges;\n\n    UpdateLog existingLog = updateHandler.getUpdateLog();\n    if (this.ulog != null && this.ulog == existingLog) {\n      // If we are reusing the existing update log, inform the log that its update handler has changed.\n      // We do this as late as possible.\n      this.ulog.init(this, core);\n    }\n  }\n\n","sourceOld":"  public DirectUpdateHandler2(SolrCore core, UpdateHandler updateHandler) {\n    super(core, updateHandler.getUpdateLog());\n    solrCoreState = core.getSolrCoreState();\n    \n    UpdateHandlerInfo updateHandlerInfo = core.getSolrConfig()\n        .getUpdateHandlerInfo();\n    int docsUpperBound = updateHandlerInfo.autoCommmitMaxDocs; // getInt(\"updateHandler/autoCommit/maxDocs\", -1);\n    int timeUpperBound = updateHandlerInfo.autoCommmitMaxTime; // getInt(\"updateHandler/autoCommit/maxTime\", -1);\n    commitTracker = new CommitTracker(\"Hard\", core, docsUpperBound, timeUpperBound, updateHandlerInfo.openSearcher, false);\n    \n    int softCommitDocsUpperBound = updateHandlerInfo.autoSoftCommmitMaxDocs; // getInt(\"updateHandler/autoSoftCommit/maxDocs\", -1);\n    int softCommitTimeUpperBound = updateHandlerInfo.autoSoftCommmitMaxTime; // getInt(\"updateHandler/autoSoftCommit/maxTime\", -1);\n    softCommitTracker = new CommitTracker(\"Soft\", core, softCommitDocsUpperBound, softCommitTimeUpperBound, updateHandlerInfo.openSearcher, true);\n    \n    commitWithinSoftCommit = updateHandlerInfo.commitWithinSoftCommit;\n    indexWriterCloseWaitsForMerges = updateHandlerInfo.indexWriterCloseWaitsForMerges;\n\n    UpdateLog existingLog = updateHandler.getUpdateLog();\n    if (this.ulog != null && this.ulog == existingLog) {\n      // If we are reusing the existing update log, inform the log that its update handler has changed.\n      // We do this as late as possible.\n      this.ulog.init(this, core);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d07d6c279b65daaca32ee033fa06e4d7e85e0dd":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"98fa1aca20a29db3d3d1a867eeed78f65448febe":["bd0ef6574805f3cb9880e0983b7548a6aa933508"],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["7b262e4be9cc7c2090a610b2a5e3628815288798"],"28d656aaac42f919a3a7e8a859407018d75fed41":["039186fd2452232060d10c35a255715d6147dd91"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["98fa1aca20a29db3d3d1a867eeed78f65448febe","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c47e57a9659cee31304e7b75b71b252d2f33b6f9":["3c8475e39c56b28600d2b496f3e78f7421190f62","039186fd2452232060d10c35a255715d6147dd91"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["0ad31de9d3b830bc174d4c41df9f80f4cac82576"],"e22ffe8cc51a892ae103df018822d7873e901c2a":["cec585935ebadb78352a93e4a429d2b89fb2d53e"],"7b262e4be9cc7c2090a610b2a5e3628815288798":["6ab99a2487a34179af579c58aee0f6954a54173b"],"039186fd2452232060d10c35a255715d6147dd91":["3c8475e39c56b28600d2b496f3e78f7421190f62"],"774e6bee28f9c598a3ce2536597c865ed6d32f2c":["c26f00b574427b55127e869b935845554afde1fa"],"0e8cb6e9df9d6fc873383924f02d9aacfffebf4e":["774e6bee28f9c598a3ce2536597c865ed6d32f2c"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["98fa1aca20a29db3d3d1a867eeed78f65448febe","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"7189c90089da119be6d4026d4bfa8d28ba7d418b":["28d656aaac42f919a3a7e8a859407018d75fed41"],"cec585935ebadb78352a93e4a429d2b89fb2d53e":["0e8cb6e9df9d6fc873383924f02d9aacfffebf4e"],"bd0ef6574805f3cb9880e0983b7548a6aa933508":["e22ffe8cc51a892ae103df018822d7873e901c2a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["0ad31de9d3b830bc174d4c41df9f80f4cac82576","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"6ab99a2487a34179af579c58aee0f6954a54173b":["7189c90089da119be6d4026d4bfa8d28ba7d418b"],"3c8475e39c56b28600d2b496f3e78f7421190f62":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"0ad31de9d3b830bc174d4c41df9f80f4cac82576":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["98fa1aca20a29db3d3d1a867eeed78f65448febe"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d07d6c279b65daaca32ee033fa06e4d7e85e0dd"]},"commit2Childs":{"4d07d6c279b65daaca32ee033fa06e4d7e85e0dd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c26f00b574427b55127e869b935845554afde1fa":["774e6bee28f9c598a3ce2536597c865ed6d32f2c"],"98fa1aca20a29db3d3d1a867eeed78f65448febe":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["4d07d6c279b65daaca32ee033fa06e4d7e85e0dd"],"28d656aaac42f919a3a7e8a859407018d75fed41":["7189c90089da119be6d4026d4bfa8d28ba7d418b"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c47e57a9659cee31304e7b75b71b252d2f33b6f9":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","3c8475e39c56b28600d2b496f3e78f7421190f62"],"e22ffe8cc51a892ae103df018822d7873e901c2a":["bd0ef6574805f3cb9880e0983b7548a6aa933508"],"7b262e4be9cc7c2090a610b2a5e3628815288798":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"039186fd2452232060d10c35a255715d6147dd91":["28d656aaac42f919a3a7e8a859407018d75fed41","c47e57a9659cee31304e7b75b71b252d2f33b6f9"],"774e6bee28f9c598a3ce2536597c865ed6d32f2c":["0e8cb6e9df9d6fc873383924f02d9aacfffebf4e"],"0e8cb6e9df9d6fc873383924f02d9aacfffebf4e":["cec585935ebadb78352a93e4a429d2b89fb2d53e"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"7189c90089da119be6d4026d4bfa8d28ba7d418b":["6ab99a2487a34179af579c58aee0f6954a54173b"],"cec585935ebadb78352a93e4a429d2b89fb2d53e":["e22ffe8cc51a892ae103df018822d7873e901c2a"],"bd0ef6574805f3cb9880e0983b7548a6aa933508":["98fa1aca20a29db3d3d1a867eeed78f65448febe"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"3c8475e39c56b28600d2b496f3e78f7421190f62":["c47e57a9659cee31304e7b75b71b252d2f33b6f9","039186fd2452232060d10c35a255715d6147dd91"],"0ad31de9d3b830bc174d4c41df9f80f4cac82576":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"6ab99a2487a34179af579c58aee0f6954a54173b":["7b262e4be9cc7c2090a610b2a5e3628815288798"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0ad31de9d3b830bc174d4c41df9f80f4cac82576"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0d22ac6a4146774c1bc8400160fc0b6150294e92","c47e57a9659cee31304e7b75b71b252d2f33b6f9","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","fe33227f6805edab2036cbb80645cc4e2d1fa424","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}