{"path":"src/java/org/apache/solr/common/util/StrUtils#splitFileNames(String).mjava","commits":[{"id":"460ea70a086b1e40166cc236947edc7e52a3ddf9","date":1217405516,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/common/util/StrUtils#splitFileNames(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Splits file names separated by comma character.\n   * File names can contain comma characters escaped by backslash '\\'\n   *\n   * @param fileNames the string containing file names\n   * @return a list of file names with the escaping backslashed removed\n   */\n  public static List<String> splitFileNames(String fileNames) {\n    if (fileNames == null)\n      return Collections.<String>emptyList();\n\n    List<String> result = new ArrayList<String>();\n    for (String file : fileNames.split(\"(?<!\\\\\\\\),\")) {\n      result.add(file.replaceAll(\"\\\\\\\\(?=,)\", \"\"));\n    }\n\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/common/org/apache/solr/common/util/StrUtils#splitFileNames(String).mjava","pathOld":"src/java/org/apache/solr/common/util/StrUtils#splitFileNames(String).mjava","sourceNew":"  /**\n   * Splits file names separated by comma character.\n   * File names can contain comma characters escaped by backslash '\\'\n   *\n   * @param fileNames the string containing file names\n   * @return a list of file names with the escaping backslashed removed\n   */\n  public static List<String> splitFileNames(String fileNames) {\n    if (fileNames == null)\n      return Collections.<String>emptyList();\n\n    List<String> result = new ArrayList<String>();\n    for (String file : fileNames.split(\"(?<!\\\\\\\\),\")) {\n      result.add(file.replaceAll(\"\\\\\\\\(?=,)\", \"\"));\n    }\n\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Splits file names separated by comma character.\n   * File names can contain comma characters escaped by backslash '\\'\n   *\n   * @param fileNames the string containing file names\n   * @return a list of file names with the escaping backslashed removed\n   */\n  public static List<String> splitFileNames(String fileNames) {\n    if (fileNames == null)\n      return Collections.<String>emptyList();\n\n    List<String> result = new ArrayList<String>();\n    for (String file : fileNames.split(\"(?<!\\\\\\\\),\")) {\n      result.add(file.replaceAll(\"\\\\\\\\(?=,)\", \"\"));\n    }\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["460ea70a086b1e40166cc236947edc7e52a3ddf9"],"460ea70a086b1e40166cc236947edc7e52a3ddf9":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":[],"460ea70a086b1e40166cc236947edc7e52a3ddf9":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["460ea70a086b1e40166cc236947edc7e52a3ddf9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e3602d5eab954caecc726ab136ad580ac1ceb917","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}