{"path":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockSynonymFilter#incrementToken().mjava","commits":[{"id":"138a352a6d4e54824d0275bc7aa1b784e78c81fe","date":1467756222,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockSynonymFilter#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (tokenQueue.size() > 0) {\n      tokenQueue.remove(0).copyTo(this);\n      return true;\n    }\n    if (endOfInput == false && input.incrementToken()) {\n      if (termAtt.toString().equals(\"dogs\")) {\n        addSynonymAndRestoreOrigToken(\"dog\", 1, offsetAtt.endOffset());\n      } else if (termAtt.toString().equals(\"guinea\")) {\n        AttributeSource firstSavedToken = cloneAttributes();\n        if (input.incrementToken()) {\n          if (termAtt.toString().equals(\"pig\")) {\n            AttributeSource secondSavedToken = cloneAttributes();\n            int secondEndOffset = offsetAtt.endOffset();\n            firstSavedToken.copyTo(this);\n            addSynonym(\"cavy\", 2, secondEndOffset);\n            tokenQueue.add(secondSavedToken);\n          } else if (termAtt.toString().equals(\"dogs\")) {\n            tokenQueue.add(cloneAttributes());\n            addSynonym(\"dog\", 1, offsetAtt.endOffset());\n          }\n        } else {\n          endOfInput = true;\n        }\n        firstSavedToken.copyTo(this);\n      }\n      return true;\n    } else {\n      endOfInput = true;\n      return false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockSynonymFilter#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (tokenQueue.size() > 0) {\n      tokenQueue.remove(0).copyTo(this);\n      return true;\n    }\n    if (endOfInput == false && input.incrementToken()) {\n      if (termAtt.toString().equals(\"dogs\")) {\n        addSynonymAndRestoreOrigToken(\"dog\", 1, offsetAtt.endOffset());\n      } else if (termAtt.toString().equals(\"guinea\")) {\n        AttributeSource firstSavedToken = cloneAttributes();\n        if (input.incrementToken()) {\n          if (termAtt.toString().equals(\"pig\")) {\n            AttributeSource secondSavedToken = cloneAttributes();\n            int secondEndOffset = offsetAtt.endOffset();\n            firstSavedToken.copyTo(this);\n            addSynonym(\"cavy\", 2, secondEndOffset);\n            tokenQueue.add(secondSavedToken);\n          } else if (termAtt.toString().equals(\"dogs\")) {\n            tokenQueue.add(cloneAttributes());\n            addSynonym(\"dog\", 1, offsetAtt.endOffset());\n          }\n        } else {\n          endOfInput = true;\n        }\n        firstSavedToken.copyTo(this);\n      }\n      return true;\n    } else {\n      endOfInput = true;\n      return false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"138a352a6d4e54824d0275bc7aa1b784e78c81fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","138a352a6d4e54824d0275bc7aa1b784e78c81fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["138a352a6d4e54824d0275bc7aa1b784e78c81fe"]},"commit2Childs":{"138a352a6d4e54824d0275bc7aa1b784e78c81fe":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["138a352a6d4e54824d0275bc7aa1b784e78c81fe","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}