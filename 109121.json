{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#drop(SegmentInfoPerCommit).mjava","commits":[{"id":"9d153abcf92dc5329d98571a8c3035df9bd80648","date":1337702630,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#drop(SegmentInfoPerCommit).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#drop(SegmentInfo).mjava","sourceNew":"    public synchronized void drop(SegmentInfoPerCommit info) throws IOException {\n      final ReadersAndLiveDocs rld = readerMap.get(info);\n      if (rld != null) {\n        assert info == rld.info;\n        readerMap.remove(info);\n        rld.dropReaders();\n      }\n    }\n\n","sourceOld":"    public synchronized void drop(SegmentInfo info) throws IOException {\n      final ReadersAndLiveDocs rld = readerMap.get(info);\n      if (rld != null) {\n        assert info == rld.info;\n        readerMap.remove(info);\n        rld.dropReaders();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#drop(SegmentInfoPerCommit).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#drop(SegmentInfo).mjava","sourceNew":"    public synchronized void drop(SegmentInfoPerCommit info) throws IOException {\n      final ReadersAndLiveDocs rld = readerMap.get(info);\n      if (rld != null) {\n        assert info == rld.info;\n        readerMap.remove(info);\n        rld.dropReaders();\n      }\n    }\n\n","sourceOld":"    public synchronized void drop(SegmentInfo info) throws IOException {\n      final ReadersAndLiveDocs rld = readerMap.get(info);\n      if (rld != null) {\n        assert info == rld.info;\n        readerMap.remove(info);\n        rld.dropReaders();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75e4e08ceec867127dcd9913a5ebbc46cf85a28d","date":1379651991,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#drop(SegmentInfoPerCommit).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#drop(SegmentInfoPerCommit).mjava","sourceNew":"    public synchronized void drop(SegmentInfoPerCommit info) throws IOException {\n      final ReadersAndLiveDocs rld = readerMap.get(info);\n      if (rld != null) {\n        assert info == rld.info;\n//        System.out.println(\"[\" + Thread.currentThread().getName() + \"] ReaderPool.drop: \" + info);\n        readerMap.remove(info);\n        rld.dropReaders();\n      }\n    }\n\n","sourceOld":"    public synchronized void drop(SegmentInfoPerCommit info) throws IOException {\n      final ReadersAndLiveDocs rld = readerMap.get(info);\n      if (rld != null) {\n        assert info == rld.info;\n        readerMap.remove(info);\n        rld.dropReaders();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#drop(SegmentCommitInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter.ReaderPool#drop(SegmentInfoPerCommit).mjava","sourceNew":"    public synchronized void drop(SegmentCommitInfo info) throws IOException {\n      final ReadersAndUpdates rld = readerMap.get(info);\n      if (rld != null) {\n        assert info == rld.info;\n//        System.out.println(\"[\" + Thread.currentThread().getName() + \"] ReaderPool.drop: \" + info);\n        readerMap.remove(info);\n        rld.dropReaders();\n      }\n    }\n\n","sourceOld":"    public synchronized void drop(SegmentInfoPerCommit info) throws IOException {\n      final ReadersAndLiveDocs rld = readerMap.get(info);\n      if (rld != null) {\n        assert info == rld.info;\n//        System.out.println(\"[\" + Thread.currentThread().getName() + \"] ReaderPool.drop: \" + info);\n        readerMap.remove(info);\n        rld.dropReaders();\n      }\n    }\n\n","bugFix":null,"bugIntro":["fdc3f2b9a4e1c1aacfa53b304c4e42c13a1677ef"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["75e4e08ceec867127dcd9913a5ebbc46cf85a28d"],"75e4e08ceec867127dcd9913a5ebbc46cf85a28d":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9d153abcf92dc5329d98571a8c3035df9bd80648"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d153abcf92dc5329d98571a8c3035df9bd80648":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"]},"commit2Childs":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"75e4e08ceec867127dcd9913a5ebbc46cf85a28d":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["75e4e08ceec867127dcd9913a5ebbc46cf85a28d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","9d153abcf92dc5329d98571a8c3035df9bd80648"],"9d153abcf92dc5329d98571a8c3035df9bd80648":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}