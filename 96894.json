{"path":"solr/core/src/test/org/apache/solr/rest/TestManagedResourceStorage#testFileBasedJsonStorage().mjava","commits":[{"id":"afb6bf9ce227ab6aac5068547e286ecc958b8b9d","date":1394661169,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/TestManagedResourceStorage#testFileBasedJsonStorage().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Runs persisted managed resource creation and update tests on JSON storage.\n   */\n  @Test\n  public void testFileBasedJsonStorage() throws Exception {    \n    SolrResourceLoader loader = new SolrResourceLoader(\"./\");    \n    // Solr unit tests can only write to their working directory due to\n    // a custom Java Security Manager installed in the test environment\n    NamedList<String> initArgs = new NamedList<>();\n    initArgs.add(ManagedResourceStorage.STORAGE_DIR_INIT_ARG, \"./managed\");    \n    FileStorageIO fileStorageIO = new FileStorageIO();\n    fileStorageIO.configure(loader, initArgs);\n    doStorageTests(loader, fileStorageIO);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19","date":1400739326,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/TestManagedResourceStorage#testFileBasedJsonStorage().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/TestManagedResourceStorage#testFileBasedJsonStorage().mjava","sourceNew":"  /**\n   * Runs persisted managed resource creation and update tests on JSON storage.\n   */\n  @Test\n  public void testFileBasedJsonStorage() throws Exception {\n    File instanceDir = createTempDir(\"json-storage\");\n    SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n    NamedList<String> initArgs = new NamedList<>();\n    String managedDir = instanceDir.getAbsolutePath() + File.separator + \"managed\";\n    initArgs.add(ManagedResourceStorage.STORAGE_DIR_INIT_ARG, managedDir);\n    FileStorageIO fileStorageIO = new FileStorageIO();\n    fileStorageIO.configure(loader, initArgs);\n    doStorageTests(loader, fileStorageIO);\n  }\n\n","sourceOld":"  /**\n   * Runs persisted managed resource creation and update tests on JSON storage.\n   */\n  @Test\n  public void testFileBasedJsonStorage() throws Exception {    \n    SolrResourceLoader loader = new SolrResourceLoader(\"./\");    \n    // Solr unit tests can only write to their working directory due to\n    // a custom Java Security Manager installed in the test environment\n    NamedList<String> initArgs = new NamedList<>();\n    initArgs.add(ManagedResourceStorage.STORAGE_DIR_INIT_ARG, \"./managed\");    \n    FileStorageIO fileStorageIO = new FileStorageIO();\n    fileStorageIO.configure(loader, initArgs);\n    doStorageTests(loader, fileStorageIO);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/rest/TestManagedResourceStorage#testFileBasedJsonStorage().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/TestManagedResourceStorage#testFileBasedJsonStorage().mjava","sourceNew":"  /**\n   * Runs persisted managed resource creation and update tests on JSON storage.\n   */\n  @Test\n  public void testFileBasedJsonStorage() throws Exception {\n    File instanceDir = createTempDir(\"json-storage\");\n    SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n    NamedList<String> initArgs = new NamedList<>();\n    String managedDir = instanceDir.getAbsolutePath() + File.separator + \"managed\";\n    initArgs.add(ManagedResourceStorage.STORAGE_DIR_INIT_ARG, managedDir);\n    FileStorageIO fileStorageIO = new FileStorageIO();\n    fileStorageIO.configure(loader, initArgs);\n    doStorageTests(loader, fileStorageIO);\n  }\n\n","sourceOld":"  /**\n   * Runs persisted managed resource creation and update tests on JSON storage.\n   */\n  @Test\n  public void testFileBasedJsonStorage() throws Exception {    \n    SolrResourceLoader loader = new SolrResourceLoader(\"./\");    \n    // Solr unit tests can only write to their working directory due to\n    // a custom Java Security Manager installed in the test environment\n    NamedList<String> initArgs = new NamedList<>();\n    initArgs.add(ManagedResourceStorage.STORAGE_DIR_INIT_ARG, \"./managed\");    \n    FileStorageIO fileStorageIO = new FileStorageIO();\n    fileStorageIO.configure(loader, initArgs);\n    doStorageTests(loader, fileStorageIO);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38aabd3f6197d25576587ec0d23b0a81c2ccbec9","date":1409160087,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/TestManagedResourceStorage#testFileBasedJsonStorage().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/TestManagedResourceStorage#testFileBasedJsonStorage().mjava","sourceNew":"  /**\n   * Runs persisted managed resource creation and update tests on JSON storage.\n   */\n  @Test\n  public void testFileBasedJsonStorage() throws Exception {\n    File instanceDir = createTempDir(\"json-storage\");\n    SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n    try {\n      NamedList<String> initArgs = new NamedList<>();\n      String managedDir = instanceDir.getAbsolutePath() + File.separator + \"managed\";\n      initArgs.add(ManagedResourceStorage.STORAGE_DIR_INIT_ARG, managedDir);\n      FileStorageIO fileStorageIO = new FileStorageIO();\n      fileStorageIO.configure(loader, initArgs);\n      doStorageTests(loader, fileStorageIO);\n    } finally {\n      loader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Runs persisted managed resource creation and update tests on JSON storage.\n   */\n  @Test\n  public void testFileBasedJsonStorage() throws Exception {\n    File instanceDir = createTempDir(\"json-storage\");\n    SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n    NamedList<String> initArgs = new NamedList<>();\n    String managedDir = instanceDir.getAbsolutePath() + File.separator + \"managed\";\n    initArgs.add(ManagedResourceStorage.STORAGE_DIR_INIT_ARG, managedDir);\n    FileStorageIO fileStorageIO = new FileStorageIO();\n    fileStorageIO.configure(loader, initArgs);\n    doStorageTests(loader, fileStorageIO);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/TestManagedResourceStorage#testFileBasedJsonStorage().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/TestManagedResourceStorage#testFileBasedJsonStorage().mjava","sourceNew":"  /**\n   * Runs persisted managed resource creation and update tests on JSON storage.\n   */\n  @Test\n  public void testFileBasedJsonStorage() throws Exception {\n    File instanceDir = createTempDir(\"json-storage\").toFile();\n    SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n    try {\n      NamedList<String> initArgs = new NamedList<>();\n      String managedDir = instanceDir.getAbsolutePath() + File.separator + \"managed\";\n      initArgs.add(ManagedResourceStorage.STORAGE_DIR_INIT_ARG, managedDir);\n      FileStorageIO fileStorageIO = new FileStorageIO();\n      fileStorageIO.configure(loader, initArgs);\n      doStorageTests(loader, fileStorageIO);\n    } finally {\n      loader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Runs persisted managed resource creation and update tests on JSON storage.\n   */\n  @Test\n  public void testFileBasedJsonStorage() throws Exception {\n    File instanceDir = createTempDir(\"json-storage\");\n    SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n    try {\n      NamedList<String> initArgs = new NamedList<>();\n      String managedDir = instanceDir.getAbsolutePath() + File.separator + \"managed\";\n      initArgs.add(ManagedResourceStorage.STORAGE_DIR_INIT_ARG, managedDir);\n      FileStorageIO fileStorageIO = new FileStorageIO();\n      fileStorageIO.configure(loader, initArgs);\n      doStorageTests(loader, fileStorageIO);\n    } finally {\n      loader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/TestManagedResourceStorage#testFileBasedJsonStorage().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/TestManagedResourceStorage#testFileBasedJsonStorage().mjava","sourceNew":"  /**\n   * Runs persisted managed resource creation and update tests on JSON storage.\n   */\n  @Test\n  public void testFileBasedJsonStorage() throws Exception {\n    File instanceDir = createTempDir(\"json-storage\").toFile();\n    SolrResourceLoader loader = new SolrResourceLoader(instanceDir.toPath());\n    try {\n      NamedList<String> initArgs = new NamedList<>();\n      String managedDir = instanceDir.getAbsolutePath() + File.separator + \"managed\";\n      initArgs.add(ManagedResourceStorage.STORAGE_DIR_INIT_ARG, managedDir);\n      FileStorageIO fileStorageIO = new FileStorageIO();\n      fileStorageIO.configure(loader, initArgs);\n      doStorageTests(loader, fileStorageIO);\n    } finally {\n      loader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Runs persisted managed resource creation and update tests on JSON storage.\n   */\n  @Test\n  public void testFileBasedJsonStorage() throws Exception {\n    File instanceDir = createTempDir(\"json-storage\").toFile();\n    SolrResourceLoader loader = new SolrResourceLoader(instanceDir.getAbsolutePath());\n    try {\n      NamedList<String> initArgs = new NamedList<>();\n      String managedDir = instanceDir.getAbsolutePath() + File.separator + \"managed\";\n      initArgs.add(ManagedResourceStorage.STORAGE_DIR_INIT_ARG, managedDir);\n      FileStorageIO fileStorageIO = new FileStorageIO();\n      fileStorageIO.configure(loader, initArgs);\n      doStorageTests(loader, fileStorageIO);\n    } finally {\n      loader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a626ec4d1c92e59fe390724d6220081047b03ce7":["f4abec28b874149a7223e32cc7a01704c27790de"],"38aabd3f6197d25576587ec0d23b0a81c2ccbec9":["4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7605579001505896d48b07160075a5c8b8e128e":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d","4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"f4abec28b874149a7223e32cc7a01704c27790de":["38aabd3f6197d25576587ec0d23b0a81c2ccbec9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"]},"commit2Childs":{"a626ec4d1c92e59fe390724d6220081047b03ce7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"38aabd3f6197d25576587ec0d23b0a81c2ccbec9":["f4abec28b874149a7223e32cc7a01704c27790de"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["b7605579001505896d48b07160075a5c8b8e128e","4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"b7605579001505896d48b07160075a5c8b8e128e":[],"f4abec28b874149a7223e32cc7a01704c27790de":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19":["38aabd3f6197d25576587ec0d23b0a81c2ccbec9","b7605579001505896d48b07160075a5c8b8e128e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}