{"path":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#setUp().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#setUp().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    this.spanProcessorPipeline = new QueryNodeProcessorPipeline();\n    this.spanQueryConfigHandler = new SpansQueryConfigHandler();\n    this.spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // set up the processor pipeline\n    this.spanProcessorPipeline\n        .setQueryConfigHandler(this.spanQueryConfigHandler);\n\n    this.spanProcessorPipeline.addProcessor(new WildcardQueryNodeProcessor());\n    this.spanProcessorPipeline\n        .addProcessor(new SpansValidatorQueryNodeProcessor());\n    this.spanProcessorPipeline\n        .addProcessor(new UniqueFieldQueryNodeProcessor());\n\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    this.spanProcessorPipeline = new QueryNodeProcessorPipeline();\n    this.spanQueryConfigHandler = new SpansQueryConfigHandler();\n    this.spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // set up the processor pipeline\n    this.spanProcessorPipeline\n        .setQueryConfigHandler(this.spanQueryConfigHandler);\n\n    this.spanProcessorPipeline.addProcessor(new WildcardQueryNodeProcessor());\n    this.spanProcessorPipeline\n        .addProcessor(new SpansValidatorQueryNodeProcessor());\n    this.spanProcessorPipeline\n        .addProcessor(new UniqueFieldQueryNodeProcessor());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#setUp().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    this.spanProcessorPipeline = new QueryNodeProcessorPipeline();\n    this.spanQueryConfigHandler = new SpansQueryConfigHandler();\n    this.spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // set up the processor pipeline\n    this.spanProcessorPipeline\n        .setQueryConfigHandler(this.spanQueryConfigHandler);\n\n    this.spanProcessorPipeline.addProcessor(new WildcardQueryNodeProcessor());\n    this.spanProcessorPipeline\n        .addProcessor(new SpansValidatorQueryNodeProcessor());\n    this.spanProcessorPipeline\n        .addProcessor(new UniqueFieldQueryNodeProcessor());\n\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    this.spanProcessorPipeline = new QueryNodeProcessorPipeline();\n    this.spanQueryConfigHandler = new SpansQueryConfigHandler();\n    this.spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // set up the processor pipeline\n    this.spanProcessorPipeline\n        .setQueryConfigHandler(this.spanQueryConfigHandler);\n\n    this.spanProcessorPipeline.addProcessor(new WildcardQueryNodeProcessor());\n    this.spanProcessorPipeline\n        .addProcessor(new SpansValidatorQueryNodeProcessor());\n    this.spanProcessorPipeline\n        .addProcessor(new UniqueFieldQueryNodeProcessor());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90bebc0585625959c8f1752410aea0884dc253f0","date":1287520434,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#setUp().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    this.spanProcessorPipeline = new QueryNodeProcessorPipeline();\n    this.spanQueryConfigHandler = new SpansQueryConfigHandler();\n    this.spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // set up the processor pipeline\n    this.spanProcessorPipeline\n        .setQueryConfigHandler(this.spanQueryConfigHandler);\n\n    this.spanProcessorPipeline.add(new WildcardQueryNodeProcessor());\n    this.spanProcessorPipeline.add(new SpansValidatorQueryNodeProcessor());\n    this.spanProcessorPipeline.add(new UniqueFieldQueryNodeProcessor());\n\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    this.spanProcessorPipeline = new QueryNodeProcessorPipeline();\n    this.spanQueryConfigHandler = new SpansQueryConfigHandler();\n    this.spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // set up the processor pipeline\n    this.spanProcessorPipeline\n        .setQueryConfigHandler(this.spanQueryConfigHandler);\n\n    this.spanProcessorPipeline.addProcessor(new WildcardQueryNodeProcessor());\n    this.spanProcessorPipeline\n        .addProcessor(new SpansValidatorQueryNodeProcessor());\n    this.spanProcessorPipeline\n        .addProcessor(new UniqueFieldQueryNodeProcessor());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#setUp().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    this.spanProcessorPipeline = new QueryNodeProcessorPipeline();\n    this.spanQueryConfigHandler = new SpansQueryConfigHandler();\n    this.spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // set up the processor pipeline\n    this.spanProcessorPipeline\n        .setQueryConfigHandler(this.spanQueryConfigHandler);\n\n    this.spanProcessorPipeline.add(new WildcardQueryNodeProcessor());\n    this.spanProcessorPipeline.add(new SpansValidatorQueryNodeProcessor());\n    this.spanProcessorPipeline.add(new UniqueFieldQueryNodeProcessor());\n\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    this.spanProcessorPipeline = new QueryNodeProcessorPipeline();\n    this.spanQueryConfigHandler = new SpansQueryConfigHandler();\n    this.spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // set up the processor pipeline\n    this.spanProcessorPipeline\n        .setQueryConfigHandler(this.spanQueryConfigHandler);\n\n    this.spanProcessorPipeline.addProcessor(new WildcardQueryNodeProcessor());\n    this.spanProcessorPipeline\n        .addProcessor(new SpansValidatorQueryNodeProcessor());\n    this.spanProcessorPipeline\n        .addProcessor(new UniqueFieldQueryNodeProcessor());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#setUp().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    this.spanProcessorPipeline = new QueryNodeProcessorPipeline();\n    this.spanQueryConfigHandler = new SpansQueryConfigHandler();\n    this.spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // set up the processor pipeline\n    this.spanProcessorPipeline\n        .setQueryConfigHandler(this.spanQueryConfigHandler);\n\n    this.spanProcessorPipeline.add(new WildcardQueryNodeProcessor());\n    this.spanProcessorPipeline.add(new SpansValidatorQueryNodeProcessor());\n    this.spanProcessorPipeline.add(new UniqueFieldQueryNodeProcessor());\n\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n\n    this.spanProcessorPipeline = new QueryNodeProcessorPipeline();\n    this.spanQueryConfigHandler = new SpansQueryConfigHandler();\n    this.spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // set up the processor pipeline\n    this.spanProcessorPipeline\n        .setQueryConfigHandler(this.spanQueryConfigHandler);\n\n    this.spanProcessorPipeline.addProcessor(new WildcardQueryNodeProcessor());\n    this.spanProcessorPipeline\n        .addProcessor(new SpansValidatorQueryNodeProcessor());\n    this.spanProcessorPipeline\n        .addProcessor(new UniqueFieldQueryNodeProcessor());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","date":1310612214,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/spans/TestSpanQueryParser#setUp().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    this.spanProcessorPipeline = new QueryNodeProcessorPipeline();\n    this.spanQueryConfigHandler = new SpansQueryConfigHandler();\n    this.spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // set up the processor pipeline\n    this.spanProcessorPipeline\n        .setQueryConfigHandler(this.spanQueryConfigHandler);\n\n    this.spanProcessorPipeline.add(new WildcardQueryNodeProcessor());\n    this.spanProcessorPipeline.add(new SpansValidatorQueryNodeProcessor());\n    this.spanProcessorPipeline.add(new UniqueFieldQueryNodeProcessor());\n\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    this.spanProcessorPipeline = new QueryNodeProcessorPipeline();\n    this.spanQueryConfigHandler = new SpansQueryConfigHandler();\n    this.spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // set up the processor pipeline\n    this.spanProcessorPipeline\n        .setQueryConfigHandler(this.spanQueryConfigHandler);\n\n    this.spanProcessorPipeline.add(new WildcardQueryNodeProcessor());\n    this.spanProcessorPipeline.add(new SpansValidatorQueryNodeProcessor());\n    this.spanProcessorPipeline.add(new UniqueFieldQueryNodeProcessor());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["90bebc0585625959c8f1752410aea0884dc253f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","90bebc0585625959c8f1752410aea0884dc253f0"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["43b04c27924fe393e38e9f0986e32c634f261859","90bebc0585625959c8f1752410aea0884dc253f0"],"90bebc0585625959c8f1752410aea0884dc253f0":["43b04c27924fe393e38e9f0986e32c634f261859"],"43b04c27924fe393e38e9f0986e32c634f261859":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"90bebc0585625959c8f1752410aea0884dc253f0":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"43b04c27924fe393e38e9f0986e32c634f261859":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","90bebc0585625959c8f1752410aea0884dc253f0"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","43b04c27924fe393e38e9f0986e32c634f261859"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}