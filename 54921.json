{"path":"solr/core/src/test/org/apache/solr/handler/V2ApiIntegrationTest#testWTParam().mjava","commits":[{"id":"123626d87933f51fa655aedcd1a60c61fafe9fd6","date":1552248638,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/V2ApiIntegrationTest#testWTParam().mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"rawtypes\")\n  @Test\n  public void testWTParam() throws Exception {\n    V2Request request = new V2Request.Builder(\"/c/\" + COLL_NAME + \"/get/_introspect\").build();\n    // TODO: If possible do this in a better way\n    request.setResponseParser(new NoOpResponseParser(\"bleh\"));\n\n    Map resp = resAsMap(cluster.getSolrClient(), request);\n    String respString = resp.toString();\n\n    assertFalse(respString.contains(\"<body><h2>HTTP ERROR 500</h2>\"));\n    assertFalse(respString.contains(\"500\"));\n    assertFalse(respString.contains(\"NullPointerException\"));\n    assertFalse(respString.contains(\"<p>Problem accessing /solr/____v2/c/collection1/get/_introspect. Reason:\"));\n    // since no-op response writer is used, doing contains match\n    assertTrue(respString.contains(\"/c/collection1/get\"));\n\n    // no response parser\n    request.setResponseParser(null);\n    resp = resAsMap(cluster.getSolrClient(), request);\n    respString = resp.toString();\n\n    assertFalse(respString.contains(\"<body><h2>HTTP ERROR 500</h2>\"));\n    assertFalse(respString.contains(\"<p>Problem accessing /solr/____v2/c/collection1/get/_introspect. Reason:\"));\n    assertEquals(\"/c/collection1/get\", Utils.getObjectByPath(resp, true, \"/spec[0]/url/paths[0]\"));\n    assertEquals(respString, 0, Utils.getObjectByPath(resp, true, \"/responseHeader/status\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"123626d87933f51fa655aedcd1a60c61fafe9fd6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["123626d87933f51fa655aedcd1a60c61fafe9fd6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["123626d87933f51fa655aedcd1a60c61fafe9fd6"],"123626d87933f51fa655aedcd1a60c61fafe9fd6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}