{"path":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/search/index/IndexController#createNewDeleteAllEntriesTask(ServerBaseFeed).mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/search/index/IndexController#createNewDeleteAllEntriesTask(ServerBaseFeed).mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/search/index/IndexController#createNewDeleteAllEntriesTask(ServerBaseFeed).mjava","sourceNew":"    private void createNewDeleteAllEntriesTask(final ServerBaseFeed feed){\n        checkDestroyed();\n        checkInitialized();\n        if(LOG.isInfoEnabled())\n            LOG.info(\"Deleting all entries for feed dispatch new IndexDocumentBuilder -- \"+feed.getId());\n        String serviceName = feed.getServiceConfig().getName();\n        ServiceIndex bean = this.indexerMap.get(serviceName);\n        if (bean == null)\n            throw new RuntimeException(\"no indexer for service \" + serviceName\n                    + \" registered\");\n        Lock lock = bean.getLock();\n        lock.lock();\n        try{\n            IndexDocumentBuilder<IndexDocument> callable = new IndexFeedDeleteTask(feed.getId());\n            sumbitTask(callable,bean.getIndexer());\n        }finally{\n            lock.unlock();\n        }\n            \n        \n    }\n\n","sourceOld":"    private void createNewDeleteAllEntriesTask(final ServerBaseFeed feed){\n        checkDestroyed();\n        checkInitialized();\n        if(LOG.isInfoEnabled())\n            LOG.info(\"Deleting all entries for feed dispatch new IndexDocumentBuilder -- \"+feed.getId());\n        String serviceName = feed.getServiceConfig().getName();\n        ServiceIndex bean = this.indexerMap.get(serviceName);\n        if (bean == null)\n            throw new RuntimeException(\"no indexer for service \" + serviceName\n                    + \" registered\");\n        Lock lock = bean.getLock();\n        lock.lock();\n        try{\n            IndexDocumentBuilder<IndexDocument> callable = new IndexFeedDeleteTask(feed.getId());\n            sumbitTask(callable,bean.getIndexer());\n        }finally{\n            lock.unlock();\n        }\n            \n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/search/index/IndexController#createNewDeleteAllEntriesTask(ServerBaseFeed).mjava","sourceNew":null,"sourceOld":"    private void createNewDeleteAllEntriesTask(final ServerBaseFeed feed){\n        checkDestroyed();\n        checkInitialized();\n        if(LOG.isInfoEnabled())\n            LOG.info(\"Deleting all entries for feed dispatch new IndexDocumentBuilder -- \"+feed.getId());\n        String serviceName = feed.getServiceConfig().getName();\n        ServiceIndex bean = this.indexerMap.get(serviceName);\n        if (bean == null)\n            throw new RuntimeException(\"no indexer for service \" + serviceName\n                    + \" registered\");\n        Lock lock = bean.getLock();\n        lock.lock();\n        try{\n            IndexDocumentBuilder<IndexDocument> callable = new IndexFeedDeleteTask(feed.getId());\n            sumbitTask(callable,bean.getIndexer());\n        }finally{\n            lock.unlock();\n        }\n            \n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}