{"path":"solr/core/src/java/org/apache/solr/search/facet/SweepCountAware.SegCountPerSeg#register(CountSlotAcc[],LongValues,int).mjava","commits":[{"id":"2f9e4bd10604489b5817ee29e35ac96a3148cbec","date":1594345357,"type":0,"author":"Michael Gibney","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/SweepCountAware.SegCountPerSeg#register(CountSlotAcc[],LongValues,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Maps accumulated per-segment term ords to global term ords and increments global slots on the specified countAccs\n     * accordingly. The index of each CountSlotAcc in the specified countAccs array must correspond to the\n     * the static index of its associated count accumulation doc domain and per-seg count array.\n     * \n     * @param countAccs - global-scope CountSlotAccs (one for each domain) to be incremented for the most recently accumulated\n     * segment\n     * @param toGlobal - mapping of per-segment term ords to global term ords for the most recently accumulated segment\n     * @param maxSegOrd - the max per-seg term ord for the most recently accumulated segment\n     */\n    public void register(CountSlotAcc[] countAccs, LongValues toGlobal, int maxSegOrd) {\n      int segOrd = maxSegOrd;\n      final int maxIdx = countAccs.length - 1;\n      for (;;) {\n        if (seen[segOrd]) {\n          int i = maxIdx;\n          int slot = toGlobal == null ? segOrd : (int)toGlobal.get(segOrd);\n          do {\n            final int inc = allSegCounts[i][segOrd];\n            if (inc > 0) {\n              countAccs[i].incrementCount(slot, inc);\n            }\n          } while (i-- > 0);\n        }\n        if (--segOrd < 0) {\n          break;\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2f9e4bd10604489b5817ee29e35ac96a3148cbec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2f9e4bd10604489b5817ee29e35ac96a3148cbec"]},"commit2Childs":{"2f9e4bd10604489b5817ee29e35ac96a3148cbec":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2f9e4bd10604489b5817ee29e35ac96a3148cbec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}