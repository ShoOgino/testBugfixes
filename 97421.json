{"path":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#printGroups(List[#-extends-DistinctValuesCollector.GroupCount[Comparable[#]]]).mjava","commits":[{"id":"20e94e61fe5291647346b70437617e6b6c370408","date":1483783127,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#printGroups(List[#-extends-DistinctValuesCollector.GroupCount[Comparable[#]]]).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#printGroups(List[AbstractDistinctValuesCollector.GroupCount[Comparable[#]]]).mjava","sourceNew":"  private void printGroups(List<? extends DistinctValuesCollector.GroupCount<Comparable<?>>> results) {\n    for(int i=0;i<results.size();i++) {\n      DistinctValuesCollector.GroupCount<Comparable<?>> group = results.get(i);\n      Object gv = group.groupValue;\n      if (gv instanceof BytesRef) {\n        System.out.println(i + \": groupValue=\" + ((BytesRef) gv).utf8ToString());\n      } else {\n        System.out.println(i + \": groupValue=\" + gv);\n      }\n      for(Object o : group.uniqueValues) {\n        if (o instanceof BytesRef) {\n          System.out.println(\"  \" + ((BytesRef) o).utf8ToString());\n        } else {\n          System.out.println(\"  \" + o);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void printGroups(List<AbstractDistinctValuesCollector.GroupCount<Comparable<?>>> results) {\n    for(int i=0;i<results.size();i++) {\n      AbstractDistinctValuesCollector.GroupCount<Comparable<?>> group = results.get(i);\n      Object gv = group.groupValue;\n      if (gv instanceof BytesRef) {\n        System.out.println(i + \": groupValue=\" + ((BytesRef) gv).utf8ToString());\n      } else {\n        System.out.println(i + \": groupValue=\" + gv);\n      }\n      for(Object o : group.uniqueValues) {\n        if (o instanceof BytesRef) {\n          System.out.println(\"  \" + ((BytesRef) o).utf8ToString());\n        } else {\n          System.out.println(\"  \" + o);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#printGroups(List[#-extends-DistinctValuesCollector.GroupCount[Comparable[#]]]).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#printGroups(List[AbstractDistinctValuesCollector.GroupCount[Comparable[#]]]).mjava","sourceNew":"  private void printGroups(List<? extends DistinctValuesCollector.GroupCount<Comparable<?>>> results) {\n    for(int i=0;i<results.size();i++) {\n      DistinctValuesCollector.GroupCount<Comparable<?>> group = results.get(i);\n      Object gv = group.groupValue;\n      if (gv instanceof BytesRef) {\n        System.out.println(i + \": groupValue=\" + ((BytesRef) gv).utf8ToString());\n      } else {\n        System.out.println(i + \": groupValue=\" + gv);\n      }\n      for(Object o : group.uniqueValues) {\n        if (o instanceof BytesRef) {\n          System.out.println(\"  \" + ((BytesRef) o).utf8ToString());\n        } else {\n          System.out.println(\"  \" + o);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void printGroups(List<AbstractDistinctValuesCollector.GroupCount<Comparable<?>>> results) {\n    for(int i=0;i<results.size();i++) {\n      AbstractDistinctValuesCollector.GroupCount<Comparable<?>> group = results.get(i);\n      Object gv = group.groupValue;\n      if (gv instanceof BytesRef) {\n        System.out.println(i + \": groupValue=\" + ((BytesRef) gv).utf8ToString());\n      } else {\n        System.out.println(i + \": groupValue=\" + gv);\n      }\n      for(Object o : group.uniqueValues) {\n        if (o instanceof BytesRef) {\n          System.out.println(\"  \" + ((BytesRef) o).utf8ToString());\n        } else {\n          System.out.println(\"  \" + o);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ae958a739da1866696f442384393ba2f13e33e5","date":1491819018,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#printGroups(List[DistinctValuesCollector.GroupCount[Comparable[Object],Comparable[Object]]]).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#printGroups(List[#-extends-DistinctValuesCollector.GroupCount[Comparable[#]]]).mjava","sourceNew":"  private void printGroups(List<DistinctValuesCollector.GroupCount<Comparable<Object>, Comparable<Object>>> results) {\n    for(int i=0;i<results.size();i++) {\n      DistinctValuesCollector.GroupCount<Comparable<Object>, Comparable<Object>> group = results.get(i);\n      Object gv = group.groupValue;\n      if (gv instanceof BytesRef) {\n        System.out.println(i + \": groupValue=\" + ((BytesRef) gv).utf8ToString());\n      } else {\n        System.out.println(i + \": groupValue=\" + gv);\n      }\n      for(Object o : group.uniqueValues) {\n        if (o instanceof BytesRef) {\n          System.out.println(\"  \" + ((BytesRef) o).utf8ToString());\n        } else {\n          System.out.println(\"  \" + o);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private void printGroups(List<? extends DistinctValuesCollector.GroupCount<Comparable<?>>> results) {\n    for(int i=0;i<results.size();i++) {\n      DistinctValuesCollector.GroupCount<Comparable<?>> group = results.get(i);\n      Object gv = group.groupValue;\n      if (gv instanceof BytesRef) {\n        System.out.println(i + \": groupValue=\" + ((BytesRef) gv).utf8ToString());\n      } else {\n        System.out.println(i + \": groupValue=\" + gv);\n      }\n      for(Object o : group.uniqueValues) {\n        if (o instanceof BytesRef) {\n          System.out.println(\"  \" + ((BytesRef) o).utf8ToString());\n        } else {\n          System.out.println(\"  \" + o);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/DistinctValuesCollectorTest#printGroups(List[#-extends-DistinctValuesCollector.GroupCount[Comparable[#]]]).mjava","sourceNew":null,"sourceOld":"  private void printGroups(List<? extends DistinctValuesCollector.GroupCount<Comparable<?>>> results) {\n    for(int i=0;i<results.size();i++) {\n      DistinctValuesCollector.GroupCount<Comparable<?>> group = results.get(i);\n      Object gv = group.groupValue;\n      if (gv instanceof BytesRef) {\n        System.out.println(i + \": groupValue=\" + ((BytesRef) gv).utf8ToString());\n      } else {\n        System.out.println(i + \": groupValue=\" + gv);\n      }\n      for(Object o : group.uniqueValues) {\n        if (o instanceof BytesRef) {\n          System.out.println(\"  \" + ((BytesRef) o).utf8ToString());\n        } else {\n          System.out.println(\"  \" + o);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["20e94e61fe5291647346b70437617e6b6c370408"],"20e94e61fe5291647346b70437617e6b6c370408":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","20e94e61fe5291647346b70437617e6b6c370408"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7ae958a739da1866696f442384393ba2f13e33e5"],"7ae958a739da1866696f442384393ba2f13e33e5":["20e94e61fe5291647346b70437617e6b6c370408"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"20e94e61fe5291647346b70437617e6b6c370408":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","7ae958a739da1866696f442384393ba2f13e33e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["20e94e61fe5291647346b70437617e6b6c370408","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7ae958a739da1866696f442384393ba2f13e33e5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}