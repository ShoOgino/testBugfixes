{"path":"solr/core/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputSource).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputSource).mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputSource).mjava","sourceNew":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputSource is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    if (is == null) {\n      is = new InputSource(loader.openSchema(name));\n      is.setSystemId(SystemIdResolver.createSystemIdFromResourceName(name));\n    }\n    readSchema(is);\n    loader.inform( loader );\n  }\n\n","sourceOld":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputSource is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    if (is == null) {\n      is = new InputSource(loader.openSchema(name));\n      is.setSystemId(SystemIdResolver.createSystemIdFromResourceName(name));\n    }\n    readSchema(is);\n    loader.inform( loader );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputSource).mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputSource).mjava","sourceNew":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputSource is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    if (is == null) {\n      is = new InputSource(loader.openSchema(name));\n      is.setSystemId(SystemIdResolver.createSystemIdFromResourceName(name));\n    }\n    readSchema(is);\n    loader.inform( loader );\n  }\n\n","sourceOld":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputSource is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    if (is == null) {\n      is = new InputSource(loader.openSchema(name));\n      is.setSystemId(SystemIdResolver.createSystemIdFromResourceName(name));\n    }\n    readSchema(is);\n    loader.inform( loader );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputSource).mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputSource).mjava","sourceNew":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputSource is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    if (is == null) {\n      is = new InputSource(loader.openSchema(name));\n      is.setSystemId(SystemIdResolver.createSystemIdFromResourceName(name));\n    }\n    readSchema(is);\n    loader.inform( loader );\n  }\n\n","sourceOld":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputSource is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    if (is == null) {\n      is = new InputSource(loader.openSchema(name));\n      is.setSystemId(SystemIdResolver.createSystemIdFromResourceName(name));\n    }\n    readSchema(is);\n    loader.inform( loader );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6f80818731469e00f54165ec94aae2db868ea05","date":1343266866,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputSource).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputSource).mjava","sourceNew":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputSource is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    if (is == null) {\n      is = new InputSource(loader.openSchema(name));\n      is.setSystemId(SystemIdResolver.createSystemIdFromResourceName(name));\n    }\n    readSchema(is);\n    try {\n      loader.inform( loader );\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputSource is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    if (is == null) {\n      is = new InputSource(loader.openSchema(name));\n      is.setSystemId(SystemIdResolver.createSystemIdFromResourceName(name));\n    }\n    readSchema(is);\n    loader.inform( loader );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e72e661a57246fd5412d682d707d9dbdf81e555","date":1343303474,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputSource).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputSource).mjava","sourceNew":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputSource is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    try {\n      if (is == null) {\n        is = new InputSource(loader.openSchema(name));\n        is.setSystemId(SystemIdResolver.createSystemIdFromResourceName(name));\n      }\n      readSchema(is);\n      loader.inform( loader );\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputSource is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    if (is == null) {\n      is = new InputSource(loader.openSchema(name));\n      is.setSystemId(SystemIdResolver.createSystemIdFromResourceName(name));\n    }\n    readSchema(is);\n    try {\n      loader.inform( loader );\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputSource).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputSource).mjava","sourceNew":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputSource is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    try {\n      if (is == null) {\n        is = new InputSource(loader.openSchema(name));\n        is.setSystemId(SystemIdResolver.createSystemIdFromResourceName(name));\n      }\n      readSchema(is);\n      loader.inform( loader );\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputSource is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    if (is == null) {\n      is = new InputSource(loader.openSchema(name));\n      is.setSystemId(SystemIdResolver.createSystemIdFromResourceName(name));\n    }\n    readSchema(is);\n    loader.inform( loader );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputSource).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputSource).mjava","sourceNew":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputSource is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    try {\n      if (is == null) {\n        is = new InputSource(loader.openSchema(name));\n        is.setSystemId(SystemIdResolver.createSystemIdFromResourceName(name));\n      }\n      readSchema(is);\n      loader.inform( loader );\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputSource is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    if (is == null) {\n      is = new InputSource(loader.openSchema(name));\n      is.setSystemId(SystemIdResolver.createSystemIdFromResourceName(name));\n    }\n    readSchema(is);\n    loader.inform( loader );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9cf81bc8c6e4078e236f0e38b3a2d0271854f207","date":1364832963,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputSource).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputSource).mjava","sourceNew":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputSource is) {\n    assert null != solrConfig : \"SolrConfig should never be null\";\n    assert null != name : \"schema resource name should never be null\";\n    assert null != is : \"schema InputSource should never be null\";\n\n    this.solrConfig = solrConfig;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    try {\n      readSchema(is);\n      loader.inform(loader);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputSource is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    try {\n      if (is == null) {\n        is = new InputSource(loader.openSchema(name));\n        is.setSystemId(SystemIdResolver.createSystemIdFromResourceName(name));\n      }\n      readSchema(is);\n      loader.inform( loader );\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df151630bfbea5338a007b97bfd37e4ec94f873f","date":1553017904,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(String,InputSource,Version,SolrResourceLoader).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputSource).mjava","sourceNew":"  /**\n   * Constructs a schema using the specified resource name and stream.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(String name, InputSource is, Version luceneVersion, SolrResourceLoader resourceLoader) {\n    this(luceneVersion, resourceLoader);\n\n    this.resourceName = Objects.requireNonNull(name);\n    try {\n      readSchema(is);\n      loader.inform(loader);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputSource is) {\n    assert null != solrConfig : \"SolrConfig should never be null\";\n    assert null != name : \"schema resource name should never be null\";\n    assert null != is : \"schema InputSource should never be null\";\n\n    this.solrConfig = solrConfig;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    try {\n      readSchema(is);\n      loader.inform(loader);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df151630bfbea5338a007b97bfd37e4ec94f873f":["9cf81bc8c6e4078e236f0e38b3a2d0271854f207"],"9cf81bc8c6e4078e236f0e38b3a2d0271854f207":["6e72e661a57246fd5412d682d707d9dbdf81e555"],"aba371508186796cc6151d8223a5b4e16d02e26e":["c26f00b574427b55127e869b935845554afde1fa","6e72e661a57246fd5412d682d707d9dbdf81e555"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6e72e661a57246fd5412d682d707d9dbdf81e555":["f6f80818731469e00f54165ec94aae2db868ea05"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["c26f00b574427b55127e869b935845554afde1fa","6e72e661a57246fd5412d682d707d9dbdf81e555"],"f6f80818731469e00f54165ec94aae2db868ea05":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["df151630bfbea5338a007b97bfd37e4ec94f873f"]},"commit2Childs":{"df151630bfbea5338a007b97bfd37e4ec94f873f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9cf81bc8c6e4078e236f0e38b3a2d0271854f207":["df151630bfbea5338a007b97bfd37e4ec94f873f"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"6e72e661a57246fd5412d682d707d9dbdf81e555":["9cf81bc8c6e4078e236f0e38b3a2d0271854f207","aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"c26f00b574427b55127e869b935845554afde1fa":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","f6f80818731469e00f54165ec94aae2db868ea05"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"f6f80818731469e00f54165ec94aae2db868ea05":["6e72e661a57246fd5412d682d707d9dbdf81e555"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}