{"path":"src/java/org/apache/lucene/index/MultipleTermPositions#skipTo(int).mjava","commits":[{"id":"c7410a1292a8bc3af75faed6b753d861a192e6a5","date":1027003198,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultipleTermPositions#skipTo(int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Describe <code>skipTo</code> method here.\n     *\n     * @param target an <code>int</code> value\n     * @return a <code>boolean</code> value\n     * @exception IOException if an error occurs\n     * @see TermDocs#skipTo(int)\n     */\n    public final boolean skipTo(int target)\n\tthrows IOException\n    {\n\twhile (target > _termPositionsQueue.peek().doc())\n\t{\n\t    TermPositions tp = (TermPositions)_termPositionsQueue.pop();\n\n\t    if (tp.skipTo(target))\n\t\t_termPositionsQueue.put(tp);\n\t    else\n\t\ttp.close();\n\t}\n\n\treturn next();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba6bc708c2b0a1b091d6e60a06e4598fc6c1b86e","date":1097434728,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultipleTermPositions#skipTo(int).mjava","pathOld":"src/java/org/apache/lucene/index/MultipleTermPositions#skipTo(int).mjava","sourceNew":"    public final boolean skipTo(int target)\n\tthrows IOException\n    {\n\twhile (target > _termPositionsQueue.peek().doc())\n\t{\n\t    TermPositions tp = (TermPositions)_termPositionsQueue.pop();\n\n\t    if (tp.skipTo(target))\n\t\t_termPositionsQueue.put(tp);\n\t    else\n\t\ttp.close();\n\t}\n\n\treturn next();\n    }\n\n","sourceOld":"    /**\n     * Describe <code>skipTo</code> method here.\n     *\n     * @param target an <code>int</code> value\n     * @return a <code>boolean</code> value\n     * @exception IOException if an error occurs\n     * @see TermDocs#skipTo(int)\n     */\n    public final boolean skipTo(int target)\n\tthrows IOException\n    {\n\twhile (target > _termPositionsQueue.peek().doc())\n\t{\n\t    TermPositions tp = (TermPositions)_termPositionsQueue.pop();\n\n\t    if (tp.skipTo(target))\n\t\t_termPositionsQueue.put(tp);\n\t    else\n\t\ttp.close();\n\t}\n\n\treturn next();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5020da750a71655fe1dad8a3a51f7fa3562d14fb","date":1121597234,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultipleTermPositions#skipTo(int).mjava","pathOld":"src/java/org/apache/lucene/index/MultipleTermPositions#skipTo(int).mjava","sourceNew":"    public final boolean skipTo(int target)\n\tthrows IOException\n    {\n\twhile (_termPositionsQueue.peek() != null && target > _termPositionsQueue.peek().doc())\n\t{\n\t    TermPositions tp = (TermPositions)_termPositionsQueue.pop();\n\n\t    if (tp.skipTo(target))\n\t\t_termPositionsQueue.put(tp);\n\t    else\n\t\ttp.close();\n\t}\n\n\treturn next();\n    }\n\n","sourceOld":"    public final boolean skipTo(int target)\n\tthrows IOException\n    {\n\twhile (target > _termPositionsQueue.peek().doc())\n\t{\n\t    TermPositions tp = (TermPositions)_termPositionsQueue.pop();\n\n\t    if (tp.skipTo(target))\n\t\t_termPositionsQueue.put(tp);\n\t    else\n\t\ttp.close();\n\t}\n\n\treturn next();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13f021657fa14e418fd91a7ba0ee78979ad71271","date":1122054106,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultipleTermPositions#skipTo(int).mjava","pathOld":"src/java/org/apache/lucene/index/MultipleTermPositions#skipTo(int).mjava","sourceNew":"  public final boolean skipTo(int target) throws IOException {\n    while (_termPositionsQueue.peek() != null && target > _termPositionsQueue.peek().doc()) {\n      TermPositions tp = (TermPositions) _termPositionsQueue.pop();\n      if (tp.skipTo(target))\n        _termPositionsQueue.put(tp);\n      else\n        tp.close();\n    }\n    return next();\n  }\n\n","sourceOld":"    public final boolean skipTo(int target)\n\tthrows IOException\n    {\n\twhile (_termPositionsQueue.peek() != null && target > _termPositionsQueue.peek().doc())\n\t{\n\t    TermPositions tp = (TermPositions)_termPositionsQueue.pop();\n\n\t    if (tp.skipTo(target))\n\t\t_termPositionsQueue.put(tp);\n\t    else\n\t\ttp.close();\n\t}\n\n\treturn next();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0731e137bcbb58121034de6ddaa67332fbe6e5d1","date":1255233265,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultipleTermPositions#skipTo(int).mjava","pathOld":"src/java/org/apache/lucene/index/MultipleTermPositions#skipTo(int).mjava","sourceNew":"  public final boolean skipTo(int target) throws IOException {\n    while (_termPositionsQueue.peek() != null && target > _termPositionsQueue.peek().doc()) {\n      TermPositions tp = (TermPositions) _termPositionsQueue.pop();\n      if (tp.skipTo(target))\n        _termPositionsQueue.add(tp);\n      else\n        tp.close();\n    }\n    return next();\n  }\n\n","sourceOld":"  public final boolean skipTo(int target) throws IOException {\n    while (_termPositionsQueue.peek() != null && target > _termPositionsQueue.peek().doc()) {\n      TermPositions tp = (TermPositions) _termPositionsQueue.pop();\n      if (tp.skipTo(target))\n        _termPositionsQueue.put(tp);\n      else\n        tp.close();\n    }\n    return next();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e1ce9be74263e9659aad8a6ee1f213193710b71","date":1256298843,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultipleTermPositions#skipTo(int).mjava","pathOld":"src/java/org/apache/lucene/index/MultipleTermPositions#skipTo(int).mjava","sourceNew":"  public final boolean skipTo(int target) throws IOException {\n    while (_termPositionsQueue.peek() != null && target > _termPositionsQueue.peek().doc()) {\n      TermPositions tp =  _termPositionsQueue.pop();\n      if (tp.skipTo(target))\n        _termPositionsQueue.add(tp);\n      else\n        tp.close();\n    }\n    return next();\n  }\n\n","sourceOld":"  public final boolean skipTo(int target) throws IOException {\n    while (_termPositionsQueue.peek() != null && target > _termPositionsQueue.peek().doc()) {\n      TermPositions tp = (TermPositions) _termPositionsQueue.pop();\n      if (tp.skipTo(target))\n        _termPositionsQueue.add(tp);\n      else\n        tp.close();\n    }\n    return next();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/MultipleTermPositions#skipTo(int).mjava","pathOld":"src/java/org/apache/lucene/index/MultipleTermPositions#skipTo(int).mjava","sourceNew":"  public final boolean skipTo(int target) throws IOException {\n    while (_termPositionsQueue.peek() != null && target > _termPositionsQueue.peek().doc()) {\n      TermPositions tp =  _termPositionsQueue.pop();\n      if (tp.skipTo(target))\n        _termPositionsQueue.add(tp);\n      else\n        tp.close();\n    }\n    return next();\n  }\n\n","sourceOld":"  public final boolean skipTo(int target) throws IOException {\n    while (_termPositionsQueue.peek() != null && target > _termPositionsQueue.peek().doc()) {\n      TermPositions tp =  _termPositionsQueue.pop();\n      if (tp.skipTo(target))\n        _termPositionsQueue.add(tp);\n      else\n        tp.close();\n    }\n    return next();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4e1ce9be74263e9659aad8a6ee1f213193710b71":["0731e137bcbb58121034de6ddaa67332fbe6e5d1"],"ba6bc708c2b0a1b091d6e60a06e4598fc6c1b86e":["c7410a1292a8bc3af75faed6b753d861a192e6a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0731e137bcbb58121034de6ddaa67332fbe6e5d1":["13f021657fa14e418fd91a7ba0ee78979ad71271"],"13f021657fa14e418fd91a7ba0ee78979ad71271":["5020da750a71655fe1dad8a3a51f7fa3562d14fb"],"5020da750a71655fe1dad8a3a51f7fa3562d14fb":["ba6bc708c2b0a1b091d6e60a06e4598fc6c1b86e"],"c7410a1292a8bc3af75faed6b753d861a192e6a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4e1ce9be74263e9659aad8a6ee1f213193710b71"]},"commit2Childs":{"4e1ce9be74263e9659aad8a6ee1f213193710b71":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ba6bc708c2b0a1b091d6e60a06e4598fc6c1b86e":["5020da750a71655fe1dad8a3a51f7fa3562d14fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7410a1292a8bc3af75faed6b753d861a192e6a5"],"0731e137bcbb58121034de6ddaa67332fbe6e5d1":["4e1ce9be74263e9659aad8a6ee1f213193710b71"],"13f021657fa14e418fd91a7ba0ee78979ad71271":["0731e137bcbb58121034de6ddaa67332fbe6e5d1"],"5020da750a71655fe1dad8a3a51f7fa3562d14fb":["13f021657fa14e418fd91a7ba0ee78979ad71271"],"c7410a1292a8bc3af75faed6b753d861a192e6a5":["ba6bc708c2b0a1b091d6e60a06e4598fc6c1b86e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}