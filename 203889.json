{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(FlushNotifications,int,AtomicLong,boolean,Supplier[String],LiveIndexWriterConfig,Directory,Directory,FieldInfos.FieldNumbers).mjava","commits":[{"id":"86a2e8a56b368d37ef3ba7180541fa317d6fd6c7","date":1524496660,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(FlushNotifications,int,AtomicLong,boolean,Supplier[String],LiveIndexWriterConfig,Directory,Directory,FieldInfos.FieldNumbers).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(IndexWriter,LiveIndexWriterConfig,Directory,Directory).mjava","sourceNew":"  DocumentsWriter(FlushNotifications flushNotifications, int indexCreatedVersionMajor, AtomicLong pendingNumDocs, boolean enableTestPoints,\n                  Supplier<String> segmentNameSupplier, LiveIndexWriterConfig config, Directory directoryOrig, Directory directory,\n                  FieldInfos.FieldNumbers globalFieldNumberMap) {\n    this.indexCreatedVersionMajor = indexCreatedVersionMajor;\n    this.directoryOrig = directoryOrig;\n    this.directory = directory;\n    this.config = config;\n    this.infoStream = config.getInfoStream();\n    this.deleteQueue = new DocumentsWriterDeleteQueue(infoStream);\n    this.perThreadPool = config.getIndexerThreadPool();\n    flushPolicy = config.getFlushPolicy();\n    this.globalFieldNumberMap = globalFieldNumberMap;\n    this.pendingNumDocs = pendingNumDocs;\n    flushControl = new DocumentsWriterFlushControl(this, config);\n    this.segmentNameSupplier = segmentNameSupplier;\n    this.enableTestPoints = enableTestPoints;\n    this.flushNotifications = flushNotifications;\n  }\n\n","sourceOld":"  DocumentsWriter(IndexWriter writer, LiveIndexWriterConfig config, Directory directoryOrig, Directory directory) {\n    this.directoryOrig = directoryOrig;\n    this.directory = directory;\n    this.config = config;\n    this.infoStream = config.getInfoStream();\n    this.deleteQueue = new DocumentsWriterDeleteQueue(infoStream);\n    this.perThreadPool = config.getIndexerThreadPool();\n    flushPolicy = config.getFlushPolicy();\n    this.writer = writer;\n    this.events = new ConcurrentLinkedQueue<>();\n    flushControl = new DocumentsWriterFlushControl(this, config, writer.bufferedUpdatesStream);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"264935965977b4a9e2f3920420647072c9c49176","date":1586600626,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(FlushNotifications,int,AtomicLong,boolean,Supplier[String],LiveIndexWriterConfig,Directory,Directory,FieldInfos.FieldNumbers).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(FlushNotifications,int,AtomicLong,boolean,Supplier[String],LiveIndexWriterConfig,Directory,Directory,FieldInfos.FieldNumbers).mjava","sourceNew":"  DocumentsWriter(FlushNotifications flushNotifications, int indexCreatedVersionMajor, AtomicLong pendingNumDocs, boolean enableTestPoints,\n                  Supplier<String> segmentNameSupplier, LiveIndexWriterConfig config, Directory directoryOrig, Directory directory,\n                  FieldInfos.FieldNumbers globalFieldNumberMap) {\n    this.config = config;\n    this.infoStream = config.getInfoStream();\n    this.deleteQueue = new DocumentsWriterDeleteQueue(infoStream);\n    this.perThreadPool = new DocumentsWriterPerThreadPool(() -> {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(globalFieldNumberMap);\n      return new DocumentsWriterPerThread(indexCreatedVersionMajor,\n          segmentNameSupplier.get(), directoryOrig,\n          directory, config, infoStream, deleteQueue, infos,\n          pendingNumDocs, enableTestPoints);\n    });\n    flushPolicy = config.getFlushPolicy();\n    this.pendingNumDocs = pendingNumDocs;\n    flushControl = new DocumentsWriterFlushControl(this, config);\n    this.flushNotifications = flushNotifications;\n  }\n\n","sourceOld":"  DocumentsWriter(FlushNotifications flushNotifications, int indexCreatedVersionMajor, AtomicLong pendingNumDocs, boolean enableTestPoints,\n                  Supplier<String> segmentNameSupplier, LiveIndexWriterConfig config, Directory directoryOrig, Directory directory,\n                  FieldInfos.FieldNumbers globalFieldNumberMap) {\n    this.indexCreatedVersionMajor = indexCreatedVersionMajor;\n    this.directoryOrig = directoryOrig;\n    this.directory = directory;\n    this.config = config;\n    this.infoStream = config.getInfoStream();\n    this.deleteQueue = new DocumentsWriterDeleteQueue(infoStream);\n    this.perThreadPool = config.getIndexerThreadPool();\n    flushPolicy = config.getFlushPolicy();\n    this.globalFieldNumberMap = globalFieldNumberMap;\n    this.pendingNumDocs = pendingNumDocs;\n    flushControl = new DocumentsWriterFlushControl(this, config);\n    this.segmentNameSupplier = segmentNameSupplier;\n    this.enableTestPoints = enableTestPoints;\n    this.flushNotifications = flushNotifications;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2","date":1588002560,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(FlushNotifications,int,AtomicLong,boolean,Supplier[String],LiveIndexWriterConfig,Directory,Directory,FieldInfos.FieldNumbers).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(FlushNotifications,int,AtomicLong,boolean,Supplier[String],LiveIndexWriterConfig,Directory,Directory,FieldInfos.FieldNumbers).mjava","sourceNew":"  DocumentsWriter(FlushNotifications flushNotifications, int indexCreatedVersionMajor, AtomicLong pendingNumDocs, boolean enableTestPoints,\n                  Supplier<String> segmentNameSupplier, LiveIndexWriterConfig config, Directory directoryOrig, Directory directory,\n                  FieldInfos.FieldNumbers globalFieldNumberMap) {\n    this.config = config;\n    this.infoStream = config.getInfoStream();\n    this.deleteQueue = new DocumentsWriterDeleteQueue(infoStream);\n    this.perThreadPool = new DocumentsWriterPerThreadPool(() -> {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(globalFieldNumberMap);\n      return new DocumentsWriterPerThread(indexCreatedVersionMajor,\n          segmentNameSupplier.get(), directoryOrig,\n          directory, config, infoStream, deleteQueue, infos,\n          pendingNumDocs, enableTestPoints);\n    });\n    this.pendingNumDocs = pendingNumDocs;\n    flushControl = new DocumentsWriterFlushControl(this, config);\n    this.flushNotifications = flushNotifications;\n  }\n\n","sourceOld":"  DocumentsWriter(FlushNotifications flushNotifications, int indexCreatedVersionMajor, AtomicLong pendingNumDocs, boolean enableTestPoints,\n                  Supplier<String> segmentNameSupplier, LiveIndexWriterConfig config, Directory directoryOrig, Directory directory,\n                  FieldInfos.FieldNumbers globalFieldNumberMap) {\n    this.config = config;\n    this.infoStream = config.getInfoStream();\n    this.deleteQueue = new DocumentsWriterDeleteQueue(infoStream);\n    this.perThreadPool = new DocumentsWriterPerThreadPool(() -> {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(globalFieldNumberMap);\n      return new DocumentsWriterPerThread(indexCreatedVersionMajor,\n          segmentNameSupplier.get(), directoryOrig,\n          directory, config, infoStream, deleteQueue, infos,\n          pendingNumDocs, enableTestPoints);\n    });\n    flushPolicy = config.getFlushPolicy();\n    this.pendingNumDocs = pendingNumDocs;\n    flushControl = new DocumentsWriterFlushControl(this, config);\n    this.flushNotifications = flushNotifications;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f97270426d92300e08ac1bd1a4ef499ae02e88b7","date":1592503330,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(FlushNotifications,int,AtomicLong,boolean,Supplier[String],LiveIndexWriterConfig,Directory,Directory,FieldInfos.FieldNumbers).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriter#DocumentsWriter(FlushNotifications,int,AtomicLong,boolean,Supplier[String],LiveIndexWriterConfig,Directory,Directory,FieldInfos.FieldNumbers).mjava","sourceNew":"  DocumentsWriter(FlushNotifications flushNotifications, int indexCreatedVersionMajor, AtomicLong pendingNumDocs, boolean enableTestPoints,\n                  Supplier<String> segmentNameSupplier, LiveIndexWriterConfig config, Directory directoryOrig, Directory directory,\n                  FieldInfos.FieldNumbers globalFieldNumberMap) {\n    this.config = config;\n    this.infoStream = config.getInfoStream();\n    this.deleteQueue = new DocumentsWriterDeleteQueue(infoStream);\n    this.perThreadPool = new DocumentsWriterPerThreadPool(() -> {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(globalFieldNumberMap);\n      return new DocumentsWriterPerThread(indexCreatedVersionMajor,\n          segmentNameSupplier.get(), directoryOrig,\n          directory, config, deleteQueue, infos,\n          pendingNumDocs, enableTestPoints);\n    });\n    this.pendingNumDocs = pendingNumDocs;\n    flushControl = new DocumentsWriterFlushControl(this, config);\n    this.flushNotifications = flushNotifications;\n  }\n\n","sourceOld":"  DocumentsWriter(FlushNotifications flushNotifications, int indexCreatedVersionMajor, AtomicLong pendingNumDocs, boolean enableTestPoints,\n                  Supplier<String> segmentNameSupplier, LiveIndexWriterConfig config, Directory directoryOrig, Directory directory,\n                  FieldInfos.FieldNumbers globalFieldNumberMap) {\n    this.config = config;\n    this.infoStream = config.getInfoStream();\n    this.deleteQueue = new DocumentsWriterDeleteQueue(infoStream);\n    this.perThreadPool = new DocumentsWriterPerThreadPool(() -> {\n      final FieldInfos.Builder infos = new FieldInfos.Builder(globalFieldNumberMap);\n      return new DocumentsWriterPerThread(indexCreatedVersionMajor,\n          segmentNameSupplier.get(), directoryOrig,\n          directory, config, infoStream, deleteQueue, infos,\n          pendingNumDocs, enableTestPoints);\n    });\n    this.pendingNumDocs = pendingNumDocs;\n    flushControl = new DocumentsWriterFlushControl(this, config);\n    this.flushNotifications = flushNotifications;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"264935965977b4a9e2f3920420647072c9c49176":["86a2e8a56b368d37ef3ba7180541fa317d6fd6c7"],"86a2e8a56b368d37ef3ba7180541fa317d6fd6c7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2":["264935965977b4a9e2f3920420647072c9c49176"],"f97270426d92300e08ac1bd1a4ef499ae02e88b7":["8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f97270426d92300e08ac1bd1a4ef499ae02e88b7"]},"commit2Childs":{"264935965977b4a9e2f3920420647072c9c49176":["8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2"],"86a2e8a56b368d37ef3ba7180541fa317d6fd6c7":["264935965977b4a9e2f3920420647072c9c49176"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["86a2e8a56b368d37ef3ba7180541fa317d6fd6c7"],"8a428f5314daaabf8eab7c50bdc3bc14e6cd1aa2":["f97270426d92300e08ac1bd1a4ef499ae02e88b7"],"f97270426d92300e08ac1bd1a4ef499ae02e88b7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}