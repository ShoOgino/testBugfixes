{"path":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#createRevision(int).mjava","commits":[{"id":"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4","date":1368446242,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#createRevision(int).mjava","pathOld":"/dev/null","sourceNew":"  private Revision createRevision(final int id) throws IOException {\n    publishIndexWriter.addDocument(newDocument(publishTaxoWriter, id));\n    publishIndexWriter.setCommitData(new HashMap<String, String>() {{\n      put(VERSION_ID, Integer.toString(id, 16));\n    }});\n    publishIndexWriter.commit();\n    publishTaxoWriter.commit();\n    return new IndexAndTaxonomyRevision(publishIndexWriter, publishTaxoWriter);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["71e1a70f18d64b93db3ef618e606d6df5062f747"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#createRevision(int).mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#createRevision(int).mjava","sourceNew":"  private Revision createRevision(final int id) throws IOException {\n    publishIndexWriter.addDocument(newDocument(publishTaxoWriter, id));\n    publishIndexWriter.setCommitData(new HashMap<String, String>() {{\n      put(VERSION_ID, Integer.toString(id, 16));\n    }});\n    publishIndexWriter.commit();\n    publishTaxoWriter.commit();\n    return new IndexAndTaxonomyRevision(publishIndexWriter, publishTaxoWriter);\n  }\n\n","sourceOld":"  private Revision createRevision(final int id) throws IOException {\n    publishIndexWriter.addDocument(newDocument(publishTaxoWriter, id));\n    publishIndexWriter.setCommitData(new HashMap<String, String>() {{\n      put(VERSION_ID, Integer.toString(id, 16));\n    }});\n    publishIndexWriter.commit();\n    publishTaxoWriter.commit();\n    return new IndexAndTaxonomyRevision(publishIndexWriter, publishTaxoWriter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#createRevision(int).mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#createRevision(int).mjava","sourceNew":"  private Revision createRevision(final int id) throws IOException {\n    publishIndexWriter.addDocument(newDocument(publishTaxoWriter, id));\n    publishIndexWriter.setCommitData(new HashMap<String, String>() {{\n      put(VERSION_ID, Integer.toString(id, 16));\n    }});\n    publishIndexWriter.commit();\n    publishTaxoWriter.commit();\n    return new IndexAndTaxonomyRevision(publishIndexWriter, publishTaxoWriter);\n  }\n\n","sourceOld":"  private Revision createRevision(final int id) throws IOException {\n    publishIndexWriter.addDocument(newDocument(publishTaxoWriter, id));\n    publishIndexWriter.setCommitData(new HashMap<String, String>() {{\n      put(VERSION_ID, Integer.toString(id, 16));\n    }});\n    publishIndexWriter.commit();\n    publishTaxoWriter.commit();\n    return new IndexAndTaxonomyRevision(publishIndexWriter, publishTaxoWriter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71e1a70f18d64b93db3ef618e606d6df5062f747","date":1466156390,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#createRevision(int).mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#createRevision(int).mjava","sourceNew":"  private Revision createRevision(final int id) throws IOException {\n    publishIndexWriter.addDocument(newDocument(publishTaxoWriter, id));\n    publishIndexWriter.setLiveCommitData(new HashMap<String, String>() {{\n      put(VERSION_ID, Integer.toString(id, 16));\n    }}.entrySet());\n    publishIndexWriter.commit();\n    publishTaxoWriter.commit();\n    return new IndexAndTaxonomyRevision(publishIndexWriter, publishTaxoWriter);\n  }\n\n","sourceOld":"  private Revision createRevision(final int id) throws IOException {\n    publishIndexWriter.addDocument(newDocument(publishTaxoWriter, id));\n    publishIndexWriter.setCommitData(new HashMap<String, String>() {{\n      put(VERSION_ID, Integer.toString(id, 16));\n    }});\n    publishIndexWriter.commit();\n    publishTaxoWriter.commit();\n    return new IndexAndTaxonomyRevision(publishIndexWriter, publishTaxoWriter);\n  }\n\n","bugFix":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#createRevision(int).mjava","pathOld":"lucene/replicator/src/test/org/apache/lucene/replicator/IndexAndTaxonomyReplicationClientTest#createRevision(int).mjava","sourceNew":"  private Revision createRevision(final int id) throws IOException {\n    publishIndexWriter.addDocument(newDocument(publishTaxoWriter, id));\n    publishIndexWriter.setLiveCommitData(new HashMap<String, String>() {{\n      put(VERSION_ID, Integer.toString(id, 16));\n    }}.entrySet());\n    publishIndexWriter.commit();\n    publishTaxoWriter.commit();\n    return new IndexAndTaxonomyRevision(publishIndexWriter, publishTaxoWriter);\n  }\n\n","sourceOld":"  private Revision createRevision(final int id) throws IOException {\n    publishIndexWriter.addDocument(newDocument(publishTaxoWriter, id));\n    publishIndexWriter.setCommitData(new HashMap<String, String>() {{\n      put(VERSION_ID, Integer.toString(id, 16));\n    }});\n    publishIndexWriter.commit();\n    publishTaxoWriter.commit();\n    return new IndexAndTaxonomyRevision(publishIndexWriter, publishTaxoWriter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"71e1a70f18d64b93db3ef618e606d6df5062f747":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["19275ba31e621f6da1b83bf13af75233876fd3d4","71e1a70f18d64b93db3ef618e606d6df5062f747"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71e1a70f18d64b93db3ef618e606d6df5062f747"]},"commit2Childs":{"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"71e1a70f18d64b93db3ef618e606d6df5062f747":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["71e1a70f18d64b93db3ef618e606d6df5062f747","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}