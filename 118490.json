{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArray#getFieldCacheCounts().mjava","commits":[{"id":"79759974460bc59933cd169acc94f5c6b16368d5","date":1471318443,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArray#getFieldCacheCounts().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorFCBase[FacetField]#getFieldCacheCounts().mjava","sourceNew":"  private SimpleOrderedMap<Object> getFieldCacheCounts() throws IOException {\n    String prefix = freq.prefix;\n    if (prefix == null || prefix.length() == 0) {\n      prefixRef = null;\n    } else {\n      prefixRef = new BytesRefBuilder();\n      prefixRef.copyChars(prefix);\n    }\n\n    findStartAndEndOrds();\n\n    maxSlots = nTerms;\n\n    if (freq.allBuckets) {\n      allBucketsSlot = maxSlots++;\n    }\n\n    createCollectAcc(nDocs, maxSlots);\n\n    if (freq.allBuckets) {\n      allBucketsAcc = new SpecialSlotAcc(fcontext, collectAcc, allBucketsSlot, otherAccs, 0);\n    }\n\n    collectDocs();\n\n    return findTopSlots();\n  }\n\n","sourceOld":"  public SimpleOrderedMap<Object> getFieldCacheCounts() throws IOException {\n    String prefix = freq.prefix;\n    if (prefix == null || prefix.length() == 0) {\n      prefixRef = null;\n    } else {\n      prefixRef = new BytesRefBuilder();\n      prefixRef.copyChars(prefix);\n    }\n\n    findStartAndEndOrds();\n\n    maxSlots = nTerms;\n\n    if (freq.allBuckets) {\n      allBucketsSlot = maxSlots++;\n    }\n\n    createCollectAcc(nDocs, maxSlots);\n\n    if (freq.allBuckets) {\n      allBucketsAcc = new SpecialSlotAcc(fcontext, collectAcc, allBucketsSlot, otherAccs, 0);\n    }\n\n    collectDocs();\n\n    return findTopSlots();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArray#getFieldCacheCounts().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorFCBase[FacetField]#getFieldCacheCounts().mjava","sourceNew":"  private SimpleOrderedMap<Object> getFieldCacheCounts() throws IOException {\n    String prefix = freq.prefix;\n    if (prefix == null || prefix.length() == 0) {\n      prefixRef = null;\n    } else {\n      prefixRef = new BytesRefBuilder();\n      prefixRef.copyChars(prefix);\n    }\n\n    findStartAndEndOrds();\n\n    maxSlots = nTerms;\n\n    if (freq.allBuckets) {\n      allBucketsSlot = maxSlots++;\n    }\n\n    createCollectAcc(nDocs, maxSlots);\n\n    if (freq.allBuckets) {\n      allBucketsAcc = new SpecialSlotAcc(fcontext, collectAcc, allBucketsSlot, otherAccs, 0);\n    }\n\n    collectDocs();\n\n    return findTopSlots();\n  }\n\n","sourceOld":"  public SimpleOrderedMap<Object> getFieldCacheCounts() throws IOException {\n    String prefix = freq.prefix;\n    if (prefix == null || prefix.length() == 0) {\n      prefixRef = null;\n    } else {\n      prefixRef = new BytesRefBuilder();\n      prefixRef.copyChars(prefix);\n    }\n\n    findStartAndEndOrds();\n\n    maxSlots = nTerms;\n\n    if (freq.allBuckets) {\n      allBucketsSlot = maxSlots++;\n    }\n\n    createCollectAcc(nDocs, maxSlots);\n\n    if (freq.allBuckets) {\n      allBucketsAcc = new SpecialSlotAcc(fcontext, collectAcc, allBucketsSlot, otherAccs, 0);\n    }\n\n    collectDocs();\n\n    return findTopSlots();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArray#getFieldCacheCounts().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorFCBase[FacetField]#getFieldCacheCounts().mjava","sourceNew":"  private SimpleOrderedMap<Object> getFieldCacheCounts() throws IOException {\n    String prefix = freq.prefix;\n    if (prefix == null || prefix.length() == 0) {\n      prefixRef = null;\n    } else {\n      prefixRef = new BytesRefBuilder();\n      prefixRef.copyChars(prefix);\n    }\n\n    findStartAndEndOrds();\n\n    maxSlots = nTerms;\n\n    if (freq.allBuckets) {\n      allBucketsSlot = maxSlots++;\n    }\n\n    createCollectAcc(nDocs, maxSlots);\n\n    if (freq.allBuckets) {\n      allBucketsAcc = new SpecialSlotAcc(fcontext, collectAcc, allBucketsSlot, otherAccs, 0);\n    }\n\n    collectDocs();\n\n    return findTopSlots();\n  }\n\n","sourceOld":"  public SimpleOrderedMap<Object> getFieldCacheCounts() throws IOException {\n    String prefix = freq.prefix;\n    if (prefix == null || prefix.length() == 0) {\n      prefixRef = null;\n    } else {\n      prefixRef = new BytesRefBuilder();\n      prefixRef.copyChars(prefix);\n    }\n\n    findStartAndEndOrds();\n\n    maxSlots = nTerms;\n\n    if (freq.allBuckets) {\n      allBucketsSlot = maxSlots++;\n    }\n\n    createCollectAcc(nDocs, maxSlots);\n\n    if (freq.allBuckets) {\n      allBucketsAcc = new SpecialSlotAcc(fcontext, collectAcc, allBucketsSlot, otherAccs, 0);\n    }\n\n    collectDocs();\n\n    return findTopSlots();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3661d6742eed69ff6cc30ea2538d572624a7cdf8","date":1472676864,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArray#calcFacets().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArray#getFieldCacheCounts().mjava","sourceNew":"  private SimpleOrderedMap<Object> calcFacets() throws IOException {\n    String prefix = freq.prefix;\n    if (prefix == null || prefix.length() == 0) {\n      prefixRef = null;\n    } else {\n      prefixRef = new BytesRefBuilder();\n      prefixRef.copyChars(prefix);\n    }\n\n    findStartAndEndOrds();\n\n    maxSlots = nTerms;\n\n    if (freq.allBuckets) {\n      allBucketsSlot = maxSlots++;\n    }\n\n    createCollectAcc(nDocs, maxSlots);\n\n    if (freq.allBuckets) {\n      allBucketsAcc = new SpecialSlotAcc(fcontext, collectAcc, allBucketsSlot, otherAccs, 0);\n    }\n\n    collectDocs();\n\n    return super.findTopSlots(nTerms, nTerms,\n        slotNum -> { // getBucketValFromSlotNum\n          try {\n            return (Comparable) sf.getType().toObject(sf, lookupOrd(slotNum + startTermIndex));\n          } catch (IOException e) {\n            throw new RuntimeException(e);\n          }\n        },\n        Object::toString); // getFieldQueryVal\n  }\n\n","sourceOld":"  private SimpleOrderedMap<Object> getFieldCacheCounts() throws IOException {\n    String prefix = freq.prefix;\n    if (prefix == null || prefix.length() == 0) {\n      prefixRef = null;\n    } else {\n      prefixRef = new BytesRefBuilder();\n      prefixRef.copyChars(prefix);\n    }\n\n    findStartAndEndOrds();\n\n    maxSlots = nTerms;\n\n    if (freq.allBuckets) {\n      allBucketsSlot = maxSlots++;\n    }\n\n    createCollectAcc(nDocs, maxSlots);\n\n    if (freq.allBuckets) {\n      allBucketsAcc = new SpecialSlotAcc(fcontext, collectAcc, allBucketsSlot, otherAccs, 0);\n    }\n\n    collectDocs();\n\n    return findTopSlots();\n  }\n\n","bugFix":null,"bugIntro":["15b321aed72eecb043f237c490b9afd4e52c25be","15b321aed72eecb043f237c490b9afd4e52c25be"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bc8f206328a706450934717bec7ccc22ad166fc0","date":1473142172,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArray#calcFacets().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArray#getFieldCacheCounts().mjava","sourceNew":"  private SimpleOrderedMap<Object> calcFacets() throws IOException {\n    String prefix = freq.prefix;\n    if (prefix == null || prefix.length() == 0) {\n      prefixRef = null;\n    } else {\n      prefixRef = new BytesRefBuilder();\n      prefixRef.copyChars(prefix);\n    }\n\n    findStartAndEndOrds();\n\n    maxSlots = nTerms;\n\n    if (freq.allBuckets) {\n      allBucketsSlot = maxSlots++;\n    }\n\n    createCollectAcc(nDocs, maxSlots);\n\n    if (freq.allBuckets) {\n      allBucketsAcc = new SpecialSlotAcc(fcontext, collectAcc, allBucketsSlot, otherAccs, 0);\n    }\n\n    collectDocs();\n\n    return super.findTopSlots(nTerms, nTerms,\n        slotNum -> { // getBucketValFromSlotNum\n          try {\n            return (Comparable) sf.getType().toObject(sf, lookupOrd(slotNum + startTermIndex));\n          } catch (IOException e) {\n            throw new RuntimeException(e);\n          }\n        },\n        Object::toString); // getFieldQueryVal\n  }\n\n","sourceOld":"  private SimpleOrderedMap<Object> getFieldCacheCounts() throws IOException {\n    String prefix = freq.prefix;\n    if (prefix == null || prefix.length() == 0) {\n      prefixRef = null;\n    } else {\n      prefixRef = new BytesRefBuilder();\n      prefixRef.copyChars(prefix);\n    }\n\n    findStartAndEndOrds();\n\n    maxSlots = nTerms;\n\n    if (freq.allBuckets) {\n      allBucketsSlot = maxSlots++;\n    }\n\n    createCollectAcc(nDocs, maxSlots);\n\n    if (freq.allBuckets) {\n      allBucketsAcc = new SpecialSlotAcc(fcontext, collectAcc, allBucketsSlot, otherAccs, 0);\n    }\n\n    collectDocs();\n\n    return findTopSlots();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldProcessorByArray#getFieldCacheCounts().mjava","sourceNew":null,"sourceOld":"  private SimpleOrderedMap<Object> getFieldCacheCounts() throws IOException {\n    String prefix = freq.prefix;\n    if (prefix == null || prefix.length() == 0) {\n      prefixRef = null;\n    } else {\n      prefixRef = new BytesRefBuilder();\n      prefixRef.copyChars(prefix);\n    }\n\n    findStartAndEndOrds();\n\n    maxSlots = nTerms;\n\n    if (freq.allBuckets) {\n      allBucketsSlot = maxSlots++;\n    }\n\n    createCollectAcc(nDocs, maxSlots);\n\n    if (freq.allBuckets) {\n      allBucketsAcc = new SpecialSlotAcc(fcontext, collectAcc, allBucketsSlot, otherAccs, 0);\n    }\n\n    collectDocs();\n\n    return findTopSlots();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"403d05f7f8d69b65659157eff1bc1d2717f04c66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["403d05f7f8d69b65659157eff1bc1d2717f04c66","3661d6742eed69ff6cc30ea2538d572624a7cdf8"],"3661d6742eed69ff6cc30ea2538d572624a7cdf8":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","79759974460bc59933cd169acc94f5c6b16368d5"],"79759974460bc59933cd169acc94f5c6b16368d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bc8f206328a706450934717bec7ccc22ad166fc0":["403d05f7f8d69b65659157eff1bc1d2717f04c66","3661d6742eed69ff6cc30ea2538d572624a7cdf8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"403d05f7f8d69b65659157eff1bc1d2717f04c66":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","3661d6742eed69ff6cc30ea2538d572624a7cdf8","bc8f206328a706450934717bec7ccc22ad166fc0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["403d05f7f8d69b65659157eff1bc1d2717f04c66","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","79759974460bc59933cd169acc94f5c6b16368d5"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3661d6742eed69ff6cc30ea2538d572624a7cdf8":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","bc8f206328a706450934717bec7ccc22ad166fc0"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"79759974460bc59933cd169acc94f5c6b16368d5":["2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"bc8f206328a706450934717bec7ccc22ad166fc0":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["bc8f206328a706450934717bec7ccc22ad166fc0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}