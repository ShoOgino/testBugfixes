{"path":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery.CustomWeight#doExplain(LeafReaderContext,int).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery.CustomWeight#doExplain(LeafReaderContext,int).mjava","pathOld":"/dev/null","sourceNew":"    private Explanation doExplain(LeafReaderContext info, int doc) throws IOException {\n      Explanation subQueryExpl = subQueryWeight.explain(info, doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      // match\n      Explanation[] valSrcExpls = new Explanation[valSrcWeights.length];\n      for(int i = 0; i < valSrcWeights.length; i++) {\n        valSrcExpls[i] = valSrcWeights[i].explain(info, doc);\n      }\n      Explanation customExp = CustomScoreQuery.this.getCustomScoreProvider(info).customExplain(doc,subQueryExpl,valSrcExpls);\n      float sc = getBoost() * customExp.getValue();\n      Explanation res = new ComplexExplanation(\n        true, sc, CustomScoreQuery.this.toString() + \", product of:\");\n      res.addDetail(customExp);\n      res.addDetail(new Explanation(getBoost(), \"queryBoost\")); // actually using the q boost as q weight (== weight value)\n      return res;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["40ed2b673f6264a3f84e2f3925b529283f2eb096"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"40ed2b673f6264a3f84e2f3925b529283f2eb096","date":1415102987,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery.CustomWeight#doExplain(LeafReaderContext,int).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery.CustomWeight#doExplain(LeafReaderContext,int).mjava","sourceNew":"    private Explanation doExplain(LeafReaderContext info, int doc) throws IOException {\n      Explanation subQueryExpl = subQueryWeight.explain(info, doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      // match\n      Explanation[] valSrcExpls = new Explanation[valSrcWeights.length];\n      for(int i = 0; i < valSrcWeights.length; i++) {\n        valSrcExpls[i] = valSrcWeights[i].explain(info, doc);\n      }\n      Explanation customExp = CustomScoreQuery.this.getCustomScoreProvider(info).customExplain(doc,subQueryExpl,valSrcExpls);\n      float sc = queryWeight * customExp.getValue();\n      Explanation res = new ComplexExplanation(\n        true, sc, CustomScoreQuery.this.toString() + \", product of:\");\n      res.addDetail(customExp);\n      res.addDetail(new Explanation(queryWeight, \"queryWeight\"));\n      return res;\n    }\n\n","sourceOld":"    private Explanation doExplain(LeafReaderContext info, int doc) throws IOException {\n      Explanation subQueryExpl = subQueryWeight.explain(info, doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      // match\n      Explanation[] valSrcExpls = new Explanation[valSrcWeights.length];\n      for(int i = 0; i < valSrcWeights.length; i++) {\n        valSrcExpls[i] = valSrcWeights[i].explain(info, doc);\n      }\n      Explanation customExp = CustomScoreQuery.this.getCustomScoreProvider(info).customExplain(doc,subQueryExpl,valSrcExpls);\n      float sc = getBoost() * customExp.getValue();\n      Explanation res = new ComplexExplanation(\n        true, sc, CustomScoreQuery.this.toString() + \", product of:\");\n      res.addDetail(customExp);\n      res.addDetail(new Explanation(getBoost(), \"queryBoost\")); // actually using the q boost as q weight (== weight value)\n      return res;\n    }\n\n","bugFix":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","date":1429620941,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery.CustomWeight#doExplain(LeafReaderContext,int).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery.CustomWeight#doExplain(LeafReaderContext,int).mjava","sourceNew":"    private Explanation doExplain(LeafReaderContext info, int doc) throws IOException {\n      Explanation subQueryExpl = subQueryWeight.explain(info, doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      // match\n      Explanation[] valSrcExpls = new Explanation[valSrcWeights.length];\n      for(int i = 0; i < valSrcWeights.length; i++) {\n        valSrcExpls[i] = valSrcWeights[i].explain(info, doc);\n      }\n      Explanation customExp = CustomScoreQuery.this.getCustomScoreProvider(info).customExplain(doc,subQueryExpl,valSrcExpls);\n      float sc = queryWeight * customExp.getValue();\n      return Explanation.match(\n        sc, CustomScoreQuery.this.toString() + \", product of:\",\n        customExp, Explanation.match(queryWeight, \"queryWeight\"));\n    }\n\n","sourceOld":"    private Explanation doExplain(LeafReaderContext info, int doc) throws IOException {\n      Explanation subQueryExpl = subQueryWeight.explain(info, doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      // match\n      Explanation[] valSrcExpls = new Explanation[valSrcWeights.length];\n      for(int i = 0; i < valSrcWeights.length; i++) {\n        valSrcExpls[i] = valSrcWeights[i].explain(info, doc);\n      }\n      Explanation customExp = CustomScoreQuery.this.getCustomScoreProvider(info).customExplain(doc,subQueryExpl,valSrcExpls);\n      float sc = queryWeight * customExp.getValue();\n      Explanation res = new ComplexExplanation(\n        true, sc, CustomScoreQuery.this.toString() + \", product of:\");\n      res.addDetail(customExp);\n      res.addDetail(new Explanation(queryWeight, \"queryWeight\"));\n      return res;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a82662cae660e76ded4de1e9b451633e523d83e1","date":1513619223,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery.CustomWeight#doExplain(LeafReaderContext,int).mjava","sourceNew":null,"sourceOld":"    private Explanation doExplain(LeafReaderContext info, int doc) throws IOException {\n      Explanation subQueryExpl = subQueryWeight.explain(info, doc);\n      if (!subQueryExpl.isMatch()) {\n        return subQueryExpl;\n      }\n      // match\n      Explanation[] valSrcExpls = new Explanation[valSrcWeights.length];\n      for(int i = 0; i < valSrcWeights.length; i++) {\n        valSrcExpls[i] = valSrcWeights[i].explain(info, doc);\n      }\n      Explanation customExp = CustomScoreQuery.this.getCustomScoreProvider(info).customExplain(doc,subQueryExpl,valSrcExpls);\n      float sc = queryWeight * customExp.getValue();\n      return Explanation.match(\n        sc, CustomScoreQuery.this.toString() + \", product of:\",\n        customExp, Explanation.match(queryWeight, \"queryWeight\"));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a82662cae660e76ded4de1e9b451633e523d83e1":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"40ed2b673f6264a3f84e2f3925b529283f2eb096":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["40ed2b673f6264a3f84e2f3925b529283f2eb096"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a82662cae660e76ded4de1e9b451633e523d83e1"]},"commit2Childs":{"a82662cae660e76ded4de1e9b451633e523d83e1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"40ed2b673f6264a3f84e2f3925b529283f2eb096":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["a82662cae660e76ded4de1e9b451633e523d83e1"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["40ed2b673f6264a3f84e2f3925b529283f2eb096"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}