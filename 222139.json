{"path":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <br>WARNING: Sorted function queries are not currently weighted.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, org.apache.lucene.index.IndexReader)}\n   * to populate the SortField.\n   * \n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    //should we pass in the description for the field name?\n    //Hmm, Lucene is going to intern whatever we pass in, not sure I like that\n    //and we can't pass in null, either, as that throws an illegal arg. exception\n    return new SortField(description(), new ValueSourceComparatorSource(), reverse);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <br>WARNING: Sorted function queries are not currently weighted.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, org.apache.lucene.index.IndexReader)}\n   * to populate the SortField.\n   * \n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    //should we pass in the description for the field name?\n    //Hmm, Lucene is going to intern whatever we pass in, not sure I like that\n    //and we can't pass in null, either, as that throws an illegal arg. exception\n    return new SortField(description(), new ValueSourceComparatorSource(), reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","pathOld":"src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","sourceNew":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <br>WARNING: Sorted function queries are not currently weighted.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, org.apache.lucene.index.IndexReader)}\n   * to populate the SortField.\n   * \n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    //should we pass in the description for the field name?\n    //Hmm, Lucene is going to intern whatever we pass in, not sure I like that\n    //and we can't pass in null, either, as that throws an illegal arg. exception\n    return new SortField(description(), new ValueSourceComparatorSource(), reverse);\n  }\n\n","sourceOld":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <br>WARNING: Sorted function queries are not currently weighted.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, org.apache.lucene.index.IndexReader)}\n   * to populate the SortField.\n   * \n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    //should we pass in the description for the field name?\n    //Hmm, Lucene is going to intern whatever we pass in, not sure I like that\n    //and we can't pass in null, either, as that throws an illegal arg. exception\n    return new SortField(description(), new ValueSourceComparatorSource(), reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <br>WARNING: Sorted function queries are not currently weighted.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, org.apache.lucene.index.IndexReader)}\n   * to populate the SortField.\n   * \n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    //should we pass in the description for the field name?\n    //Hmm, Lucene is going to intern whatever we pass in, not sure I like that\n    //and we can't pass in null, either, as that throws an illegal arg. exception\n    return new SortField(description(), new ValueSourceComparatorSource(), reverse);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c220849f876de24a79f756f65b3eb045db59f63f","date":1294902803,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","sourceNew":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <br>WARNING: Sorted function queries are not currently weighted.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, AtomicReaderContext)}\n   * to populate the SortField.\n   * \n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    //should we pass in the description for the field name?\n    //Hmm, Lucene is going to intern whatever we pass in, not sure I like that\n    //and we can't pass in null, either, as that throws an illegal arg. exception\n    return new SortField(description(), new ValueSourceComparatorSource(), reverse);\n  }\n\n","sourceOld":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <br>WARNING: Sorted function queries are not currently weighted.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, org.apache.lucene.index.IndexReader)}\n   * to populate the SortField.\n   * \n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    //should we pass in the description for the field name?\n    //Hmm, Lucene is going to intern whatever we pass in, not sure I like that\n    //and we can't pass in null, either, as that throws an illegal arg. exception\n    return new SortField(description(), new ValueSourceComparatorSource(), reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","sourceNew":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <br>WARNING: Sorted function queries are not currently weighted.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, AtomicReaderContext)}\n   * to populate the SortField.\n   * \n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    //should we pass in the description for the field name?\n    //Hmm, Lucene is going to intern whatever we pass in, not sure I like that\n    //and we can't pass in null, either, as that throws an illegal arg. exception\n    return new SortField(description(), new ValueSourceComparatorSource(), reverse);\n  }\n\n","sourceOld":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <br>WARNING: Sorted function queries are not currently weighted.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, org.apache.lucene.index.IndexReader)}\n   * to populate the SortField.\n   * \n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    //should we pass in the description for the field name?\n    //Hmm, Lucene is going to intern whatever we pass in, not sure I like that\n    //and we can't pass in null, either, as that throws an illegal arg. exception\n    return new SortField(description(), new ValueSourceComparatorSource(), reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"771281b4c7dc712b48ba338b970b49007ca402a1","date":1295480908,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","sourceNew":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <br>WARNING: Sorted function queries are not currently weighted.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","sourceOld":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <br>WARNING: Sorted function queries are not currently weighted.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, AtomicReaderContext)}\n   * to populate the SortField.\n   * \n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    //should we pass in the description for the field name?\n    //Hmm, Lucene is going to intern whatever we pass in, not sure I like that\n    //and we can't pass in null, either, as that throws an illegal arg. exception\n    return new SortField(description(), new ValueSourceComparatorSource(), reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","sourceNew":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <br>WARNING: Sorted function queries are not currently weighted.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","sourceOld":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <br>WARNING: Sorted function queries are not currently weighted.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, AtomicReaderContext)}\n   * to populate the SortField.\n   * \n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    //should we pass in the description for the field name?\n    //Hmm, Lucene is going to intern whatever we pass in, not sure I like that\n    //and we can't pass in null, either, as that throws an illegal arg. exception\n    return new SortField(description(), new ValueSourceComparatorSource(), reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f16d28cc015e89676eb4465f05e003f430057587","date":1296442780,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","sourceNew":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <br>WARNING: Sorted function queries are not currently weighted.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, IndexReader.AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","sourceOld":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <br>WARNING: Sorted function queries are not currently weighted.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","sourceNew":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <br>WARNING: Sorted function queries are not currently weighted.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, IndexReader.AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","sourceOld":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <br>WARNING: Sorted function queries are not currently weighted.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, org.apache.lucene.index.IndexReader)}\n   * to populate the SortField.\n   * \n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    //should we pass in the description for the field name?\n    //Hmm, Lucene is going to intern whatever we pass in, not sure I like that\n    //and we can't pass in null, either, as that throws an illegal arg. exception\n    return new SortField(description(), new ValueSourceComparatorSource(), reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf85ce3cdd972ee87df5f072edaa2cc7eb14b062","date":1297958920,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","sourceNew":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, IndexReader.AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","sourceOld":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <br>WARNING: Sorted function queries are not currently weighted.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, IndexReader.AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1bdbf92da222965b46c0a942c3857ba56e5c638","date":1298297608,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","sourceNew":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, IndexReader.AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","sourceOld":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <br>WARNING: Sorted function queries are not currently weighted.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, IndexReader.AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","sourceNew":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, IndexReader.AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","sourceOld":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <br>WARNING: Sorted function queries are not currently weighted.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f35b388d9df4d2190412cd1cbcc0c391a94bb158","date":1309218318,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/ValueSource#getSortField(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","sourceNew":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, IndexReader.AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","sourceOld":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, IndexReader.AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/ValueSource#getSortField(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","sourceNew":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, IndexReader.AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","sourceOld":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, IndexReader.AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/ValueSource#getSortField(boolean).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/ValueSource#getSortField(boolean).mjava","sourceNew":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, IndexReader.AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","sourceOld":"  /**\n   * EXPERIMENTAL: This method is subject to change.\n   * <p>\n   * Get the SortField for this ValueSource.  Uses the {@link #getValues(java.util.Map, IndexReader.AtomicReaderContext)}\n   * to populate the SortField.\n   *\n   * @param reverse true if this is a reverse sort.\n   * @return The {@link org.apache.lucene.search.SortField} for the ValueSource\n   * @throws IOException if there was a problem reading the values.\n   */\n  public SortField getSortField(boolean reverse) throws IOException {\n    return new ValueSourceSortField(reverse);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":["29ef99d61cda9641b6250bf9567329a6e65f901d","cf85ce3cdd972ee87df5f072edaa2cc7eb14b062"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"f16d28cc015e89676eb4465f05e003f430057587":["771281b4c7dc712b48ba338b970b49007ca402a1"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cf85ce3cdd972ee87df5f072edaa2cc7eb14b062":["f16d28cc015e89676eb4465f05e003f430057587"],"2553b00f699380c64959ccb27991289aae87be2e":["cf85ce3cdd972ee87df5f072edaa2cc7eb14b062","f35b388d9df4d2190412cd1cbcc0c391a94bb158"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["cf85ce3cdd972ee87df5f072edaa2cc7eb14b062","f35b388d9df4d2190412cd1cbcc0c391a94bb158"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["868da859b43505d9d2a023bfeae6dd0c795f5295","771281b4c7dc712b48ba338b970b49007ca402a1"],"771281b4c7dc712b48ba338b970b49007ca402a1":["c220849f876de24a79f756f65b3eb045db59f63f"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c220849f876de24a79f756f65b3eb045db59f63f":["1da8d55113b689b06716246649de6f62430f15c0"],"f35b388d9df4d2190412cd1cbcc0c391a94bb158":["cf85ce3cdd972ee87df5f072edaa2cc7eb14b062"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["1da8d55113b689b06716246649de6f62430f15c0","f16d28cc015e89676eb4465f05e003f430057587"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["1da8d55113b689b06716246649de6f62430f15c0","c220849f876de24a79f756f65b3eb045db59f63f"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["e79a6d080bdd5b2a8f56342cf571b5476de04180","cf85ce3cdd972ee87df5f072edaa2cc7eb14b062"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f35b388d9df4d2190412cd1cbcc0c391a94bb158"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"f1bdbf92da222965b46c0a942c3857ba56e5c638":[],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"f16d28cc015e89676eb4465f05e003f430057587":["cf85ce3cdd972ee87df5f072edaa2cc7eb14b062","29ef99d61cda9641b6250bf9567329a6e65f901d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"cf85ce3cdd972ee87df5f072edaa2cc7eb14b062":["f1bdbf92da222965b46c0a942c3857ba56e5c638","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","f35b388d9df4d2190412cd1cbcc0c391a94bb158","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"2553b00f699380c64959ccb27991289aae87be2e":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"771281b4c7dc712b48ba338b970b49007ca402a1":["f16d28cc015e89676eb4465f05e003f430057587","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"1da8d55113b689b06716246649de6f62430f15c0":["c220849f876de24a79f756f65b3eb045db59f63f","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"c220849f876de24a79f756f65b3eb045db59f63f":["771281b4c7dc712b48ba338b970b49007ca402a1","868da859b43505d9d2a023bfeae6dd0c795f5295"],"f35b388d9df4d2190412cd1cbcc0c391a94bb158":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["f1bdbf92da222965b46c0a942c3857ba56e5c638"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f1bdbf92da222965b46c0a942c3857ba56e5c638","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}