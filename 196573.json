{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListReader#init(long,long,long,int,boolean,boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListReader#init(long,long,long,int,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListReader#init(long,long,long,int,boolean,boolean).mjava","sourceNew":"  public void init(long skipPointer, long freqBasePointer, long proxBasePointer, int df, boolean storesPayloads, boolean storesOffsets) {\n    super.init(skipPointer, df);\n    this.currentFieldStoresPayloads = storesPayloads;\n    this.currentFieldStoresOffsets = storesOffsets;\n    lastFreqPointer = freqBasePointer;\n    lastProxPointer = proxBasePointer;\n\n    Arrays.fill(freqPointer, freqBasePointer);\n    Arrays.fill(proxPointer, proxBasePointer);\n    Arrays.fill(payloadLength, 0);\n    Arrays.fill(offsetLength, 0);\n  }\n\n","sourceOld":"  public void init(long skipPointer, long freqBasePointer, long proxBasePointer, int df, boolean storesPayloads, boolean storesOffsets) {\n    super.init(skipPointer, df);\n    this.currentFieldStoresPayloads = storesPayloads;\n    this.currentFieldStoresOffsets = storesOffsets;\n    lastFreqPointer = freqBasePointer;\n    lastProxPointer = proxBasePointer;\n\n    Arrays.fill(freqPointer, freqBasePointer);\n    Arrays.fill(proxPointer, proxBasePointer);\n    Arrays.fill(payloadLength, 0);\n    Arrays.fill(offsetLength, 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"519435fc0d6082a1b8081f9492b714f716877437","date":1348258553,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListReader#init(long,long,long,int,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListReader#init(long,long,long,int,boolean,boolean).mjava","sourceNew":"  /** Per-term initialization. */\n  public void init(long skipPointer, long freqBasePointer, long proxBasePointer, int df, boolean storesPayloads, boolean storesOffsets) {\n    super.init(skipPointer, df);\n    this.currentFieldStoresPayloads = storesPayloads;\n    this.currentFieldStoresOffsets = storesOffsets;\n    lastFreqPointer = freqBasePointer;\n    lastProxPointer = proxBasePointer;\n\n    Arrays.fill(freqPointer, freqBasePointer);\n    Arrays.fill(proxPointer, proxBasePointer);\n    Arrays.fill(payloadLength, 0);\n    Arrays.fill(offsetLength, 0);\n  }\n\n","sourceOld":"  public void init(long skipPointer, long freqBasePointer, long proxBasePointer, int df, boolean storesPayloads, boolean storesOffsets) {\n    super.init(skipPointer, df);\n    this.currentFieldStoresPayloads = storesPayloads;\n    this.currentFieldStoresOffsets = storesOffsets;\n    lastFreqPointer = freqBasePointer;\n    lastProxPointer = proxBasePointer;\n\n    Arrays.fill(freqPointer, freqBasePointer);\n    Arrays.fill(proxPointer, proxBasePointer);\n    Arrays.fill(payloadLength, 0);\n    Arrays.fill(offsetLength, 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListReader#init(long,long,long,int,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListReader#init(long,long,long,int,boolean,boolean).mjava","sourceNew":"  /** Per-term initialization. */\n  public void init(long skipPointer, long freqBasePointer, long proxBasePointer, int df, boolean storesPayloads, boolean storesOffsets) {\n    super.init(skipPointer, df);\n    this.currentFieldStoresPayloads = storesPayloads;\n    this.currentFieldStoresOffsets = storesOffsets;\n    lastFreqPointer = freqBasePointer;\n    lastProxPointer = proxBasePointer;\n\n    Arrays.fill(freqPointer, freqBasePointer);\n    Arrays.fill(proxPointer, proxBasePointer);\n    Arrays.fill(payloadLength, 0);\n    Arrays.fill(offsetLength, 0);\n  }\n\n","sourceOld":"  /** Per-term initialization. */\n  public void init(long skipPointer, long freqBasePointer, long proxBasePointer, int df, boolean storesPayloads, boolean storesOffsets) {\n    super.init(skipPointer, df);\n    this.currentFieldStoresPayloads = storesPayloads;\n    this.currentFieldStoresOffsets = storesOffsets;\n    lastFreqPointer = freqBasePointer;\n    lastProxPointer = proxBasePointer;\n\n    Arrays.fill(freqPointer, freqBasePointer);\n    Arrays.fill(proxPointer, proxBasePointer);\n    Arrays.fill(payloadLength, 0);\n    Arrays.fill(offsetLength, 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListReader#init(long,long,long,int,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListReader#init(long,long,long,int,boolean,boolean).mjava","sourceNew":"  /** Per-term initialization. */\n  public void init(long skipPointer, long freqBasePointer, long proxBasePointer, int df, boolean storesPayloads, boolean storesOffsets) {\n    super.init(skipPointer, df);\n    this.currentFieldStoresPayloads = storesPayloads;\n    this.currentFieldStoresOffsets = storesOffsets;\n    lastFreqPointer = freqBasePointer;\n    lastProxPointer = proxBasePointer;\n\n    Arrays.fill(freqPointer, freqBasePointer);\n    Arrays.fill(proxPointer, proxBasePointer);\n    Arrays.fill(payloadLength, 0);\n    Arrays.fill(offsetLength, 0);\n  }\n\n","sourceOld":"  /** Per-term initialization. */\n  public void init(long skipPointer, long freqBasePointer, long proxBasePointer, int df, boolean storesPayloads, boolean storesOffsets) {\n    super.init(skipPointer, df);\n    this.currentFieldStoresPayloads = storesPayloads;\n    this.currentFieldStoresOffsets = storesOffsets;\n    lastFreqPointer = freqBasePointer;\n    lastProxPointer = proxBasePointer;\n\n    Arrays.fill(freqPointer, freqBasePointer);\n    Arrays.fill(proxPointer, proxBasePointer);\n    Arrays.fill(payloadLength, 0);\n    Arrays.fill(offsetLength, 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"519435fc0d6082a1b8081f9492b714f716877437":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["519435fc0d6082a1b8081f9492b714f716877437"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["519435fc0d6082a1b8081f9492b714f716877437","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"519435fc0d6082a1b8081f9492b714f716877437":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["519435fc0d6082a1b8081f9492b714f716877437"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}