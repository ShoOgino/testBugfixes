{"path":"solr/contrib/morphlines-cell/src/java/org/apache/solr/morphlines/cell/SolrCellBuilder.SolrCell#getLocale(String).mjava","commits":[{"id":"c170e9d4c93c47801b611c5f124a91c5d27e0d73","date":1392824784,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/morphlines-cell/src/java/org/apache/solr/morphlines/cell/SolrCellBuilder.SolrCell#getLocale(String).mjava","pathOld":"/dev/null","sourceNew":"    private Locale getLocale(String name) {\n      for (Locale locale : Locale.getAvailableLocales()) {\n        if (locale.toString().equals(name)) {\n          return locale;\n        }\n      }\n      assert Locale.ROOT.toString().equals(\"\");\n      if (name.equals(Locale.ROOT.toString())) {\n        return Locale.ROOT;\n      }\n      throw new MorphlineCompilationException(\"Unknown locale: \" + name, getConfig());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a72cdac51dd6e3756b9d267dd995bf7b0718d90","date":1452897717,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/contrib/morphlines-cell/src/java/org/apache/solr/morphlines/cell/SolrCellBuilder.SolrCell#getLocale(String).mjava","pathOld":"solr/contrib/morphlines-cell/src/java/org/apache/solr/morphlines/cell/SolrCellBuilder.SolrCell#getLocale(String).mjava","sourceNew":"    @SuppressForbidden(reason = \"Usage of outdated locale parsing with Locale#toString() because of backwards compatibility\")\n    private Locale getLocale(String name) {\n      for (Locale locale : Locale.getAvailableLocales()) {\n        if (locale.toString().equals(name)) {\n          return locale;\n        }\n      }\n      try {\n        return new Locale.Builder().setLanguageTag(name).build();\n      } catch (IllformedLocaleException ex) {\n        throw new MorphlineCompilationException(\"Malformed / non-existent locale: \" + name, getConfig(), ex);\n      }\n    }\n\n","sourceOld":"    private Locale getLocale(String name) {\n      for (Locale locale : Locale.getAvailableLocales()) {\n        if (locale.toString().equals(name)) {\n          return locale;\n        }\n      }\n      assert Locale.ROOT.toString().equals(\"\");\n      if (name.equals(Locale.ROOT.toString())) {\n        return Locale.ROOT;\n      }\n      throw new MorphlineCompilationException(\"Unknown locale: \" + name, getConfig());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ed3c9b2800e0f3edfe547830d02e7bb496d7829a","date":1453414615,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/contrib/morphlines-cell/src/java/org/apache/solr/morphlines/cell/SolrCellBuilder.SolrCell#getLocale(String).mjava","pathOld":"solr/contrib/morphlines-cell/src/java/org/apache/solr/morphlines/cell/SolrCellBuilder.SolrCell#getLocale(String).mjava","sourceNew":"    @SuppressForbidden(reason = \"Usage of outdated locale parsing with Locale#toString() because of backwards compatibility\")\n    private Locale getLocale(String name) {\n      if (name == null || name.isEmpty()) {\n        return Locale.ROOT;\n      }\n      for (Locale locale : Locale.getAvailableLocales()) {\n        if (locale.toString().equals(name)) {\n          return locale;\n        }\n      }\n      try {\n        return new Locale.Builder().setLanguageTag(name).build();\n      } catch (IllformedLocaleException ex) {\n        throw new MorphlineCompilationException(\"Malformed / non-existent locale: \" + name, getConfig(), ex);\n      }\n    }\n\n","sourceOld":"    @SuppressForbidden(reason = \"Usage of outdated locale parsing with Locale#toString() because of backwards compatibility\")\n    private Locale getLocale(String name) {\n      for (Locale locale : Locale.getAvailableLocales()) {\n        if (locale.toString().equals(name)) {\n          return locale;\n        }\n      }\n      try {\n        return new Locale.Builder().setLanguageTag(name).build();\n      } catch (IllformedLocaleException ex) {\n        throw new MorphlineCompilationException(\"Malformed / non-existent locale: \" + name, getConfig(), ex);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"982acea6b1fe5ee8319e43789b99c5cfa04e6a36","date":1453496740,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/contrib/morphlines-cell/src/java/org/apache/solr/morphlines/cell/SolrCellBuilder.SolrCell#getLocale(String).mjava","pathOld":"solr/contrib/morphlines-cell/src/java/org/apache/solr/morphlines/cell/SolrCellBuilder.SolrCell#getLocale(String).mjava","sourceNew":"    @SuppressForbidden(reason = \"Usage of outdated locale parsing with Locale#toString() because of backwards compatibility\")\n    private Locale getLocale(String name) {\n      if (name == null) {\n        return Locale.ROOT;\n      }\n      for (Locale locale : Locale.getAvailableLocales()) {\n        if (locale.toString().equals(name)) {\n          return locale;\n        }\n      }\n      try {\n        return new Locale.Builder().setLanguageTag(name).build();\n      } catch (IllformedLocaleException ex) {\n        throw new MorphlineCompilationException(\"Malformed / non-existent locale: \" + name, getConfig(), ex);\n      }\n    }\n\n","sourceOld":"    @SuppressForbidden(reason = \"Usage of outdated locale parsing with Locale#toString() because of backwards compatibility\")\n    private Locale getLocale(String name) {\n      if (name == null || name.isEmpty()) {\n        return Locale.ROOT;\n      }\n      for (Locale locale : Locale.getAvailableLocales()) {\n        if (locale.toString().equals(name)) {\n          return locale;\n        }\n      }\n      try {\n        return new Locale.Builder().setLanguageTag(name).build();\n      } catch (IllformedLocaleException ex) {\n        throw new MorphlineCompilationException(\"Malformed / non-existent locale: \" + name, getConfig(), ex);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12109b652e9210b8d58fca47f6c4a725d058a58e","date":1490373076,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/morphlines-cell/src/java/org/apache/solr/morphlines/cell/SolrCellBuilder.SolrCell#getLocale(String).mjava","sourceNew":null,"sourceOld":"    @SuppressForbidden(reason = \"Usage of outdated locale parsing with Locale#toString() because of backwards compatibility\")\n    private Locale getLocale(String name) {\n      if (name == null) {\n        return Locale.ROOT;\n      }\n      for (Locale locale : Locale.getAvailableLocales()) {\n        if (locale.toString().equals(name)) {\n          return locale;\n        }\n      }\n      try {\n        return new Locale.Builder().setLanguageTag(name).build();\n      } catch (IllformedLocaleException ex) {\n        throw new MorphlineCompilationException(\"Malformed / non-existent locale: \" + name, getConfig(), ex);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe1c4aa9af769a38e878f608070f672efbeac27f","date":1490594650,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/morphlines-cell/src/java/org/apache/solr/morphlines/cell/SolrCellBuilder.SolrCell#getLocale(String).mjava","sourceNew":null,"sourceOld":"    @SuppressForbidden(reason = \"Usage of outdated locale parsing with Locale#toString() because of backwards compatibility\")\n    private Locale getLocale(String name) {\n      if (name == null) {\n        return Locale.ROOT;\n      }\n      for (Locale locale : Locale.getAvailableLocales()) {\n        if (locale.toString().equals(name)) {\n          return locale;\n        }\n      }\n      try {\n        return new Locale.Builder().setLanguageTag(name).build();\n      } catch (IllformedLocaleException ex) {\n        throw new MorphlineCompilationException(\"Malformed / non-existent locale: \" + name, getConfig(), ex);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c170e9d4c93c47801b611c5f124a91c5d27e0d73":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"12109b652e9210b8d58fca47f6c4a725d058a58e":["982acea6b1fe5ee8319e43789b99c5cfa04e6a36"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"982acea6b1fe5ee8319e43789b99c5cfa04e6a36":["ed3c9b2800e0f3edfe547830d02e7bb496d7829a"],"ed3c9b2800e0f3edfe547830d02e7bb496d7829a":["1a72cdac51dd6e3756b9d267dd995bf7b0718d90"],"1a72cdac51dd6e3756b9d267dd995bf7b0718d90":["c170e9d4c93c47801b611c5f124a91c5d27e0d73"],"fe1c4aa9af769a38e878f608070f672efbeac27f":["982acea6b1fe5ee8319e43789b99c5cfa04e6a36"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["12109b652e9210b8d58fca47f6c4a725d058a58e"]},"commit2Childs":{"c170e9d4c93c47801b611c5f124a91c5d27e0d73":["1a72cdac51dd6e3756b9d267dd995bf7b0718d90"],"12109b652e9210b8d58fca47f6c4a725d058a58e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c170e9d4c93c47801b611c5f124a91c5d27e0d73"],"982acea6b1fe5ee8319e43789b99c5cfa04e6a36":["12109b652e9210b8d58fca47f6c4a725d058a58e","fe1c4aa9af769a38e878f608070f672efbeac27f"],"ed3c9b2800e0f3edfe547830d02e7bb496d7829a":["982acea6b1fe5ee8319e43789b99c5cfa04e6a36"],"1a72cdac51dd6e3756b9d267dd995bf7b0718d90":["ed3c9b2800e0f3edfe547830d02e7bb496d7829a"],"fe1c4aa9af769a38e878f608070f672efbeac27f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe1c4aa9af769a38e878f608070f672efbeac27f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}