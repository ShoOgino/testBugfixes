{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeApplyDeletes(boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeApplyDeletes(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#maybeApplyDeletes(boolean).mjava","sourceNew":"  final synchronized void maybeApplyDeletes(boolean applyAllDeletes) throws IOException {\n    if (applyAllDeletes) {\n      if (infoStream.isEnabled(\"IW\")) {\n        infoStream.message(\"IW\", \"apply all deletes during flush\");\n      }\n      applyAllDeletes();\n    } else if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"don't apply deletes now delTermCount=\" + bufferedDeletesStream.numTerms() + \" bytesUsed=\" + bufferedDeletesStream.bytesUsed());\n    }\n  }\n\n","sourceOld":"  final synchronized void maybeApplyDeletes(boolean applyAllDeletes) throws IOException {\n    if (applyAllDeletes) {\n      if (infoStream.isEnabled(\"IW\")) {\n        infoStream.message(\"IW\", \"apply all deletes during flush\");\n      }\n      applyAllDeletes();\n    } else if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"don't apply deletes now delTermCount=\" + bufferedDeletesStream.numTerms() + \" bytesUsed=\" + bufferedDeletesStream.bytesUsed());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeApplyDeletes(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeApplyDeletes(boolean).mjava","sourceNew":"  final synchronized void maybeApplyDeletes(boolean applyAllDeletes) throws IOException {\n    if (applyAllDeletes) {\n      if (infoStream.isEnabled(\"IW\")) {\n        infoStream.message(\"IW\", \"apply all deletes during flush\");\n      }\n      applyAllDeletesAndUpdates();\n    } else if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"don't apply deletes now delTermCount=\" + bufferedUpdatesStream.numTerms() + \" bytesUsed=\" + bufferedUpdatesStream.bytesUsed());\n    }\n  }\n\n","sourceOld":"  final synchronized void maybeApplyDeletes(boolean applyAllDeletes) throws IOException {\n    if (applyAllDeletes) {\n      if (infoStream.isEnabled(\"IW\")) {\n        infoStream.message(\"IW\", \"apply all deletes during flush\");\n      }\n      applyAllDeletes();\n    } else if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"don't apply deletes now delTermCount=\" + bufferedDeletesStream.numTerms() + \" bytesUsed=\" + bufferedDeletesStream.bytesUsed());\n    }\n  }\n\n","bugFix":null,"bugIntro":["e4f3b0a30c9d521b86f768348f832af93505b4eb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bc235a3c94a5ee792a9eae09205d93655d832bde","date":1402659679,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeApplyDeletes(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeApplyDeletes(boolean).mjava","sourceNew":"  final synchronized void maybeApplyDeletes(boolean applyAllDeletes) throws IOException {\n    if (applyAllDeletes) {\n      if (infoStream.isEnabled(\"IW\")) {\n        infoStream.message(\"IW\", \"apply all deletes during flush\");\n      }\n      applyAllDeletesAndUpdates();\n    } else if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"don't apply deletes now delTermCount=\" + bufferedUpdatesStream.numTerms() + \" bytesUsed=\" + bufferedUpdatesStream.ramBytesUsed());\n    }\n  }\n\n","sourceOld":"  final synchronized void maybeApplyDeletes(boolean applyAllDeletes) throws IOException {\n    if (applyAllDeletes) {\n      if (infoStream.isEnabled(\"IW\")) {\n        infoStream.message(\"IW\", \"apply all deletes during flush\");\n      }\n      applyAllDeletesAndUpdates();\n    } else if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"don't apply deletes now delTermCount=\" + bufferedUpdatesStream.numTerms() + \" bytesUsed=\" + bufferedUpdatesStream.bytesUsed());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c6f080a2ab37c464dd98db173f6cbf10dc74f211","date":1402946779,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeApplyDeletes(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeApplyDeletes(boolean).mjava","sourceNew":"  final synchronized void maybeApplyDeletes(boolean applyAllDeletes) throws IOException {\n    if (applyAllDeletes) {\n      if (infoStream.isEnabled(\"IW\")) {\n        infoStream.message(\"IW\", \"apply all deletes during flush\");\n      }\n      applyAllDeletesAndUpdates();\n    } else if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"don't apply deletes now delTermCount=\" + bufferedUpdatesStream.numTerms() + \" bytesUsed=\" + bufferedUpdatesStream.ramBytesUsed());\n    }\n  }\n\n","sourceOld":"  final synchronized void maybeApplyDeletes(boolean applyAllDeletes) throws IOException {\n    if (applyAllDeletes) {\n      if (infoStream.isEnabled(\"IW\")) {\n        infoStream.message(\"IW\", \"apply all deletes during flush\");\n      }\n      applyAllDeletesAndUpdates();\n    } else if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"don't apply deletes now delTermCount=\" + bufferedUpdatesStream.numTerms() + \" bytesUsed=\" + bufferedUpdatesStream.bytesUsed());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e4f3b0a30c9d521b86f768348f832af93505b4eb","date":1420797674,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeApplyDeletes(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeApplyDeletes(boolean).mjava","sourceNew":"  final synchronized boolean maybeApplyDeletes(boolean applyAllDeletes) throws IOException {\n    if (applyAllDeletes) {\n      if (infoStream.isEnabled(\"IW\")) {\n        infoStream.message(\"IW\", \"apply all deletes during flush\");\n      }\n      return applyAllDeletesAndUpdates();\n    } else if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"don't apply deletes now delTermCount=\" + bufferedUpdatesStream.numTerms() + \" bytesUsed=\" + bufferedUpdatesStream.ramBytesUsed());\n    }\n\n    return false;\n  }\n\n","sourceOld":"  final synchronized void maybeApplyDeletes(boolean applyAllDeletes) throws IOException {\n    if (applyAllDeletes) {\n      if (infoStream.isEnabled(\"IW\")) {\n        infoStream.message(\"IW\", \"apply all deletes during flush\");\n      }\n      applyAllDeletesAndUpdates();\n    } else if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"don't apply deletes now delTermCount=\" + bufferedUpdatesStream.numTerms() + \" bytesUsed=\" + bufferedUpdatesStream.ramBytesUsed());\n    }\n  }\n\n","bugFix":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","7d45e9e2ad7f57776540627c78f5e22e469ccdc1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4363cd33f6eff7fb4753574a441e2d18c1022a4","date":1498067235,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeApplyDeletes(boolean).mjava","sourceNew":null,"sourceOld":"  final synchronized boolean maybeApplyDeletes(boolean applyAllDeletes) throws IOException {\n    if (applyAllDeletes) {\n      if (infoStream.isEnabled(\"IW\")) {\n        infoStream.message(\"IW\", \"apply all deletes during flush\");\n      }\n      return applyAllDeletesAndUpdates();\n    } else if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"don't apply deletes now delTermCount=\" + bufferedUpdatesStream.numTerms() + \" bytesUsed=\" + bufferedUpdatesStream.ramBytesUsed());\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeApplyDeletes(boolean).mjava","sourceNew":null,"sourceOld":"  final synchronized boolean maybeApplyDeletes(boolean applyAllDeletes) throws IOException {\n    if (applyAllDeletes) {\n      if (infoStream.isEnabled(\"IW\")) {\n        infoStream.message(\"IW\", \"apply all deletes during flush\");\n      }\n      return applyAllDeletesAndUpdates();\n    } else if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"don't apply deletes now delTermCount=\" + bufferedUpdatesStream.numTerms() + \" bytesUsed=\" + bufferedUpdatesStream.ramBytesUsed());\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#maybeApplyDeletes(boolean).mjava","sourceNew":null,"sourceOld":"  final synchronized boolean maybeApplyDeletes(boolean applyAllDeletes) throws IOException {\n    if (applyAllDeletes) {\n      if (infoStream.isEnabled(\"IW\")) {\n        infoStream.message(\"IW\", \"apply all deletes during flush\");\n      }\n      return applyAllDeletesAndUpdates();\n    } else if (infoStream.isEnabled(\"IW\")) {\n      infoStream.message(\"IW\", \"don't apply deletes now delTermCount=\" + bufferedUpdatesStream.numTerms() + \" bytesUsed=\" + bufferedUpdatesStream.ramBytesUsed());\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bc235a3c94a5ee792a9eae09205d93655d832bde":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["e4f3b0a30c9d521b86f768348f832af93505b4eb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e4f3b0a30c9d521b86f768348f832af93505b4eb":["bc235a3c94a5ee792a9eae09205d93655d832bde"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","bc235a3c94a5ee792a9eae09205d93655d832bde"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["e4f3b0a30c9d521b86f768348f832af93505b4eb","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"28288370235ed02234a64753cdbf0c6ec096304a":["e4f3b0a30c9d521b86f768348f832af93505b4eb","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"bc235a3c94a5ee792a9eae09205d93655d832bde":["e4f3b0a30c9d521b86f768348f832af93505b4eb","c6f080a2ab37c464dd98db173f6cbf10dc74f211"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["bc235a3c94a5ee792a9eae09205d93655d832bde","c6f080a2ab37c464dd98db173f6cbf10dc74f211"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"e4f3b0a30c9d521b86f768348f832af93505b4eb":["f4363cd33f6eff7fb4753574a441e2d18c1022a4","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}