{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/DefaultBloomFilterFactory#getSetForField(SegmentWriteState,FieldInfo).mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/DefaultBloomFilterFactory#getSetForField(SegmentWriteState,FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/bloom/DefaultBloomFilterFactory#getSetForField(SegmentWriteState,FieldInfo).mjava","sourceNew":"  @Override\n  public FuzzySet getSetForField(SegmentWriteState state,FieldInfo info) {\n    //Assume all of the docs have a unique term (e.g. a primary key) and we hope to maintain a set with 10% of bits set\n    return FuzzySet.createSetBasedOnQuality(state.segmentInfo.getDocCount(), 0.10f,  new MurmurHash2());\n  }\n\n","sourceOld":"  @Override\n  public FuzzySet getSetForField(SegmentWriteState state,FieldInfo info) {\n    //Assume all of the docs have a unique term (e.g. a primary key) and we hope to maintain a set with 10% of bits set\n    return FuzzySet.createSetBasedOnQuality(state.segmentInfo.getDocCount(), 0.10f,  new MurmurHash2());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93e750bd74491320276b536b1d5a9864547c5059","date":1346919375,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/DefaultBloomFilterFactory#getSetForField(SegmentWriteState,FieldInfo).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/DefaultBloomFilterFactory#getSetForField(SegmentWriteState,FieldInfo).mjava","sourceNew":"  @Override\n  public FuzzySet getSetForField(SegmentWriteState state,FieldInfo info) {\n    //Assume all of the docs have a unique term (e.g. a primary key) and we hope to maintain a set with 10% of bits set\n    return FuzzySet.createSetBasedOnQuality(state.segmentInfo.getDocCount(), 0.10f);\n  }\n\n","sourceOld":"  @Override\n  public FuzzySet getSetForField(SegmentWriteState state,FieldInfo info) {\n    //Assume all of the docs have a unique term (e.g. a primary key) and we hope to maintain a set with 10% of bits set\n    return FuzzySet.createSetBasedOnQuality(state.segmentInfo.getDocCount(), 0.10f,  new MurmurHash2());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0267c69e2456a3477a1ad785723f2135da3117e","date":1425317087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/DefaultBloomFilterFactory#getSetForField(SegmentWriteState,FieldInfo).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/DefaultBloomFilterFactory#getSetForField(SegmentWriteState,FieldInfo).mjava","sourceNew":"  @Override\n  public FuzzySet getSetForField(SegmentWriteState state,FieldInfo info) {\n    //Assume all of the docs have a unique term (e.g. a primary key) and we hope to maintain a set with 10% of bits set\n    return FuzzySet.createSetBasedOnQuality(state.segmentInfo.maxDoc(), 0.10f);\n  }\n\n","sourceOld":"  @Override\n  public FuzzySet getSetForField(SegmentWriteState state,FieldInfo info) {\n    //Assume all of the docs have a unique term (e.g. a primary key) and we hope to maintain a set with 10% of bits set\n    return FuzzySet.createSetBasedOnQuality(state.segmentInfo.getDocCount(), 0.10f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b06445ae1731e049327712db0454e5643ca9b7fe","date":1425329139,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/DefaultBloomFilterFactory#getSetForField(SegmentWriteState,FieldInfo).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/DefaultBloomFilterFactory#getSetForField(SegmentWriteState,FieldInfo).mjava","sourceNew":"  @Override\n  public FuzzySet getSetForField(SegmentWriteState state,FieldInfo info) {\n    //Assume all of the docs have a unique term (e.g. a primary key) and we hope to maintain a set with 10% of bits set\n    return FuzzySet.createSetBasedOnQuality(state.segmentInfo.maxDoc(), 0.10f);\n  }\n\n","sourceOld":"  @Override\n  public FuzzySet getSetForField(SegmentWriteState state,FieldInfo info) {\n    //Assume all of the docs have a unique term (e.g. a primary key) and we hope to maintain a set with 10% of bits set\n    return FuzzySet.createSetBasedOnQuality(state.segmentInfo.getDocCount(), 0.10f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/DefaultBloomFilterFactory#getSetForField(SegmentWriteState,FieldInfo).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/bloom/DefaultBloomFilterFactory#getSetForField(SegmentWriteState,FieldInfo).mjava","sourceNew":"  @Override\n  public FuzzySet getSetForField(SegmentWriteState state,FieldInfo info) {\n    //Assume all of the docs have a unique term (e.g. a primary key) and we hope to maintain a set with 10% of bits set\n    return FuzzySet.createSetBasedOnQuality(state.segmentInfo.maxDoc(), 0.10f);\n  }\n\n","sourceOld":"  @Override\n  public FuzzySet getSetForField(SegmentWriteState state,FieldInfo info) {\n    //Assume all of the docs have a unique term (e.g. a primary key) and we hope to maintain a set with 10% of bits set\n    return FuzzySet.createSetBasedOnQuality(state.segmentInfo.getDocCount(), 0.10f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["93e750bd74491320276b536b1d5a9864547c5059","b0267c69e2456a3477a1ad785723f2135da3117e"],"b06445ae1731e049327712db0454e5643ca9b7fe":["93e750bd74491320276b536b1d5a9864547c5059","b0267c69e2456a3477a1ad785723f2135da3117e"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b0267c69e2456a3477a1ad785723f2135da3117e":["93e750bd74491320276b536b1d5a9864547c5059"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b0267c69e2456a3477a1ad785723f2135da3117e"],"93e750bd74491320276b536b1d5a9864547c5059":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b06445ae1731e049327712db0454e5643ca9b7fe":[],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["93e750bd74491320276b536b1d5a9864547c5059"],"b0267c69e2456a3477a1ad785723f2135da3117e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"93e750bd74491320276b536b1d5a9864547c5059":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","b0267c69e2456a3477a1ad785723f2135da3117e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}