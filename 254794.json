{"path":"lucene/test-framework/src/java/org/apache/lucene/search/spans/AssertingSpans#nextStartPosition().mjava","commits":[{"id":"28b61f1c9cf357a13efbb645d116d056feb80cf6","date":1428863054,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/spans/AssertingSpans#nextStartPosition().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int nextStartPosition() throws IOException {\n    assert state != State.DOC_START : \"invalid position access, state=\" + state + \": \" + in;\n    assert state != State.DOC_FINISHED : \"invalid position access, state=\" + state + \": \" + in;\n    assert state != State.DOC_UNVERIFIED : \"invalid position access, state=\" + state + \": \" + in;\n    \n    checkCurrentPositions();\n    \n    // move to next position\n    int prev = in.startPosition();\n    int start = in.nextStartPosition();\n    assert start >= prev : \"invalid startPosition (positions went backwards, previous=\" + prev + \"): \" + in;\n    \n    // transition state if necessary\n    if (start == NO_MORE_POSITIONS) {\n      state = State.POS_FINISHED;\n    } else {\n      state = State.ITERATING;\n    }\n    \n    // check new positions\n    checkCurrentPositions();\n    return start;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28b61f1c9cf357a13efbb645d116d056feb80cf6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28b61f1c9cf357a13efbb645d116d056feb80cf6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["28b61f1c9cf357a13efbb645d116d056feb80cf6"],"28b61f1c9cf357a13efbb645d116d056feb80cf6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}