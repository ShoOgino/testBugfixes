{"path":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","pathOld":"solr/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception{\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n\n    new JavaBinCodec(null).marshal(nl,baos);\n    byte[] arr = baos.toByteArray();\n    nl = (NamedList) new JavaBinCodec().unmarshal(new ByteArrayInputStream(arr));\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","sourceOld":"  public void testSimple() throws Exception{\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n\n    new JavaBinCodec(null).marshal(nl,baos);\n    byte[] arr = baos.toByteArray();\n    nl = (NamedList) new JavaBinCodec().unmarshal(new ByteArrayInputStream(arr));\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","pathOld":"solr/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception{\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n\n    new JavaBinCodec(null).marshal(nl,baos);\n    byte[] arr = baos.toByteArray();\n    nl = (NamedList) new JavaBinCodec().unmarshal(new ByteArrayInputStream(arr));\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","sourceOld":"  public void testSimple() throws Exception{\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n\n    new JavaBinCodec(null).marshal(nl,baos);\n    byte[] arr = baos.toByteArray();\n    nl = (NamedList) new JavaBinCodec().unmarshal(new ByteArrayInputStream(arr));\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","pathOld":"solr/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception{\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n\n    new JavaBinCodec(null).marshal(nl,baos);\n    byte[] arr = baos.toByteArray();\n    nl = (NamedList) new JavaBinCodec().unmarshal(new ByteArrayInputStream(arr));\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","sourceOld":"  public void testSimple() throws Exception{\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n\n    new JavaBinCodec(null).marshal(nl,baos);\n    byte[] arr = baos.toByteArray();\n    nl = (NamedList) new JavaBinCodec().unmarshal(new ByteArrayInputStream(arr));\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception{\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n\n    new JavaBinCodec(null).marshal(nl,baos);\n    byte[] arr = baos.toByteArray();\n    nl = (NamedList) new JavaBinCodec().unmarshal(new ByteArrayInputStream(arr));\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","sourceOld":"  public void testSimple() throws Exception{\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n\n    new JavaBinCodec(null).marshal(nl,baos);\n    byte[] arr = baos.toByteArray();\n    nl = (NamedList) new JavaBinCodec().unmarshal(new ByteArrayInputStream(arr));\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception{\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n\n    new JavaBinCodec(null).marshal(nl,baos);\n    byte[] arr = baos.toByteArray();\n    nl = (NamedList) new JavaBinCodec().unmarshal(new ByteArrayInputStream(arr));\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","sourceOld":"  public void testSimple() throws Exception{\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n\n    new JavaBinCodec(null).marshal(nl,baos);\n    byte[] arr = baos.toByteArray();\n    nl = (NamedList) new JavaBinCodec().unmarshal(new ByteArrayInputStream(arr));\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2","date":1497850557,"type":3,"author":"Erick","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception{\n\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","sourceOld":"  public void testSimple() throws Exception{\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n\n    new JavaBinCodec(null).marshal(nl,baos);\n    byte[] arr = baos.toByteArray();\n    nl = (NamedList) new JavaBinCodec().unmarshal(new ByteArrayInputStream(arr));\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception{\n\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","sourceOld":"  public void testSimple() throws Exception{\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n\n    new JavaBinCodec(null).marshal(nl,baos);\n    byte[] arr = baos.toByteArray();\n    nl = (NamedList) new JavaBinCodec().unmarshal(new ByteArrayInputStream(arr));\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception{\n\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","sourceOld":"  public void testSimple() throws Exception{\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n\n    new JavaBinCodec(null).marshal(nl,baos);\n    byte[] arr = baos.toByteArray();\n    nl = (NamedList) new JavaBinCodec().unmarshal(new ByteArrayInputStream(arr));\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","date":1528054850,"type":3,"author":"Michael Braun","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception{\n\n    NamedList nl = new NamedList();\n    Float fval = 10.01f;\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","sourceOld":"  public void testSimple() throws Exception{\n\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"628903f37b6c442da0d390db1c6af9a0e74d41a7","date":1531736685,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception{\n\n    NamedList nl = new NamedList();\n    Float fval = 10.01f;\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","sourceOld":"  public void testSimple() throws Exception{\n\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception{\n\n    NamedList nl = new NamedList();\n    Float fval = 10.01f;\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","sourceOld":"  public void testSimple() throws Exception{\n\n    NamedList nl = new NamedList();\n    Float fval = new Float( 10.01f );\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cba13865da71de3b9b0937fcbc66d726089356d","date":1537507909,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testSimple() throws Exception{\n\n    NamedList nl = new NamedList();\n    Float fval = 10.01f;\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","sourceOld":"  public void testSimple() throws Exception{\n\n    NamedList nl = new NamedList();\n    Float fval = 10.01f;\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d35c84fdef07284c122012ca4000d3b7285a66e","date":1545962630,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","sourceNew":"  @Test\n  // commented out on: 24-Dec-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testSimple() throws Exception{\n\n    NamedList nl = new NamedList();\n    Float fval = 10.01f;\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testSimple() throws Exception{\n\n    NamedList nl = new NamedList();\n    Float fval = 10.01f;\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestNamedListCodec#testSimple().mjava","sourceNew":"  @Test\n  // commented out on: 24-Dec-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  public void testSimple() throws Exception{\n\n    NamedList nl = new NamedList();\n    Float fval = 10.01f;\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","sourceOld":"  @Test\n  // commented out on: 24-Dec-2018   @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // added 20-Sep-2018\n  public void testSimple() throws Exception{\n\n    NamedList nl = new NamedList();\n    Float fval = 10.01f;\n    Boolean bval = Boolean.TRUE;\n    String sval = \"12qwaszx\";\n\n    // Set up a simple document\n    NamedList r = new NamedList();\n\n\n    nl.add(\"responseHeader\", r);\n\n    r.add(\"status\",0);\n    r.add(\"QTime\",63);\n    NamedList p = new NamedList();\n    r.add(\"params\",p);\n    p.add(\"rows\",10);\n    p.add(\"start\",0);\n    p.add(\"indent\",\"on\");\n    p.add(\"q\",\"ipod\");\n\n\n    SolrDocumentList list =     new SolrDocumentList();\n    nl.add(\"response\", list );\n    list.setMaxScore(1.0f);\n    list.setStart(10);\n    list.setNumFound(12);\n\n    SolrDocument doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 100 );\n    list.add(doc);\n\n    doc = new SolrDocument();\n    doc.addField( \"f\", fval );\n    doc.addField( \"b\", bval );\n    doc.addField( \"s\", sval );\n    doc.addField( \"f\", 101 );\n    list.add(doc);\n\n    nl.add(\"zzz\",doc);\n    byte[] arr;\n    try (JavaBinCodec jbc = new JavaBinCodec(null); ByteArrayOutputStream baos = new ByteArrayOutputStream()) {\n      jbc.marshal(nl, baos);\n      arr = baos.toByteArray();\n    }\n    try (JavaBinCodec jbc = new JavaBinCodec(); ByteArrayInputStream bais = new ByteArrayInputStream(arr)) {\n      nl = (NamedList) jbc.unmarshal(bais);\n    }\n\n\n    assertEquals(3, nl.size());\n    assertEquals( \"ipod\",((NamedList)((NamedList)nl.getVal(0)).get(\"params\")).get(\"q\") );\n    list = (SolrDocumentList) nl.getVal(1);\n    assertEquals(12,list.getNumFound() );\n    assertEquals(10,list.getStart() );\n    assertEquals(101, ((List)list.get(1).getFieldValue(\"f\")).get(1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["8d35c84fdef07284c122012ca4000d3b7285a66e"],"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["28288370235ed02234a64753cdbf0c6ec096304a"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["c26f00b574427b55127e869b935845554afde1fa","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["c26f00b574427b55127e869b935845554afde1fa"],"28288370235ed02234a64753cdbf0c6ec096304a":["19275ba31e621f6da1b83bf13af75233876fd3d4","97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2"],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["28288370235ed02234a64753cdbf0c6ec096304a","b6a269c1ddba3f8c9fa9a40572ecc538eddda41a"],"8d35c84fdef07284c122012ca4000d3b7285a66e":["4cba13865da71de3b9b0937fcbc66d726089356d"],"97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["28288370235ed02234a64753cdbf0c6ec096304a","628903f37b6c442da0d390db1c6af9a0e74d41a7"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cba13865da71de3b9b0937fcbc66d726089356d":["628903f37b6c442da0d390db1c6af9a0e74d41a7"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["19275ba31e621f6da1b83bf13af75233876fd3d4","97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba1b632c041956c93c41aa1143d16a567014891"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b6a269c1ddba3f8c9fa9a40572ecc538eddda41a":["628903f37b6c442da0d390db1c6af9a0e74d41a7"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"c26f00b574427b55127e869b935845554afde1fa":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","28288370235ed02234a64753cdbf0c6ec096304a","97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["b6a269c1ddba3f8c9fa9a40572ecc538eddda41a","628903f37b6c442da0d390db1c6af9a0e74d41a7","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5"],"628903f37b6c442da0d390db1c6af9a0e74d41a7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","4cba13865da71de3b9b0937fcbc66d726089356d"],"8d35c84fdef07284c122012ca4000d3b7285a66e":["9ba1b632c041956c93c41aa1143d16a567014891"],"97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"4cba13865da71de3b9b0937fcbc66d726089356d":["8d35c84fdef07284c122012ca4000d3b7285a66e"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","a258fbb26824fd104ed795e5d9033d2d040049ee","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}