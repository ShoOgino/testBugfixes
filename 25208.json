{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilterFactory#init(Map[String,String]).mjava","commits":[{"id":"3241e06e642196396b80bb293acd9c0814d079e0","date":1343094999,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilterFactory#init(Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/LimitTokenCountFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init( args );\n    maxTokenCount = Integer.parseInt( args.get( \"maxTokenCount\" ) );\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, String> args) {\n    super.init( args );\n    maxTokenCount = Integer.parseInt( args.get( \"maxTokenCount\" ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d3e0b5069dbacda34baa90adceb47cb5c9f3e65","date":1343184871,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilterFactory#init(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init( args );\n    String maxTokenCountArg = args.get(\"maxTokenCount\");\n    if (maxTokenCountArg == null) {\n      throw new InitializationException(\"maxTokenCount is mandatory.\");\n    }\n    maxTokenCount = Integer.parseInt(args.get(maxTokenCountArg));\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, String> args) {\n    super.init( args );\n    maxTokenCount = Integer.parseInt( args.get( \"maxTokenCount\" ) );\n  }\n\n","bugFix":null,"bugIntro":["cbe4cb0ba51d9578281533906fc02ee563b60520"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilterFactory#init(Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init( args );\n    String maxTokenCountArg = args.get(\"maxTokenCount\");\n    if (maxTokenCountArg == null) {\n      throw new InitializationException(\"maxTokenCount is mandatory.\");\n    }\n    maxTokenCount = Integer.parseInt(args.get(maxTokenCountArg));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f6f80818731469e00f54165ec94aae2db868ea05","date":1343266866,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilterFactory#init(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init( args );\n    String maxTokenCountArg = args.get(\"maxTokenCount\");\n    if (maxTokenCountArg == null) {\n      throw new IllegalArgumentException(\"maxTokenCount is mandatory.\");\n    }\n    maxTokenCount = Integer.parseInt(args.get(maxTokenCountArg));\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, String> args) {\n    super.init( args );\n    String maxTokenCountArg = args.get(\"maxTokenCount\");\n    if (maxTokenCountArg == null) {\n      throw new InitializationException(\"maxTokenCount is mandatory.\");\n    }\n    maxTokenCount = Integer.parseInt(args.get(maxTokenCountArg));\n  }\n\n","bugFix":null,"bugIntro":["cbe4cb0ba51d9578281533906fc02ee563b60520"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilterFactory#init(Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init( args );\n    String maxTokenCountArg = args.get(\"maxTokenCount\");\n    if (maxTokenCountArg == null) {\n      throw new IllegalArgumentException(\"maxTokenCount is mandatory.\");\n    }\n    maxTokenCount = Integer.parseInt(args.get(maxTokenCountArg));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilterFactory#init(Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init( args );\n    String maxTokenCountArg = args.get(\"maxTokenCount\");\n    if (maxTokenCountArg == null) {\n      throw new IllegalArgumentException(\"maxTokenCount is mandatory.\");\n    }\n    maxTokenCount = Integer.parseInt(args.get(maxTokenCountArg));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cbe4cb0ba51d9578281533906fc02ee563b60520","date":1350514588,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilterFactory#init(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init( args );\n    maxTokenCount = getInt(MAX_TOKEN_COUNT_KEY);\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, String> args) {\n    super.init( args );\n    String maxTokenCountArg = args.get(\"maxTokenCount\");\n    if (maxTokenCountArg == null) {\n      throw new IllegalArgumentException(\"maxTokenCount is mandatory.\");\n    }\n    maxTokenCount = Integer.parseInt(args.get(maxTokenCountArg));\n  }\n\n","bugFix":["3d3e0b5069dbacda34baa90adceb47cb5c9f3e65","f6f80818731469e00f54165ec94aae2db868ea05"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db4fdbf3d262768eabc027cd8321edca0cd11fa8","date":1350574784,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilterFactory#init(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init( args );\n    maxTokenCount = getInt(MAX_TOKEN_COUNT_KEY);\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, String> args) {\n    super.init( args );\n    String maxTokenCountArg = args.get(\"maxTokenCount\");\n    if (maxTokenCountArg == null) {\n      throw new IllegalArgumentException(\"maxTokenCount is mandatory.\");\n    }\n    maxTokenCount = Integer.parseInt(args.get(maxTokenCountArg));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5009d80b96d7223e4120e40035a8b8c1d48cb134","date":1353482392,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilterFactory#init(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init( args );\n    maxTokenCount = getInt(MAX_TOKEN_COUNT_KEY);\n    consumeAllTokens = getBoolean(CONSUME_ALL_TOKENS_KEY, false);\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, String> args) {\n    super.init( args );\n    maxTokenCount = getInt(MAX_TOKEN_COUNT_KEY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilterFactory#init(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init( args );\n    maxTokenCount = getInt(MAX_TOKEN_COUNT_KEY);\n    consumeAllTokens = getBoolean(CONSUME_ALL_TOKENS_KEY, false);\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, String> args) {\n    super.init( args );\n    maxTokenCount = getInt(MAX_TOKEN_COUNT_KEY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LimitTokenCountFilterFactory#init(Map[String,String]).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void init(Map<String, String> args) {\n    super.init( args );\n    maxTokenCount = getInt(MAX_TOKEN_COUNT_KEY);\n    consumeAllTokens = getBoolean(CONSUME_ALL_TOKENS_KEY, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cbe4cb0ba51d9578281533906fc02ee563b60520":["f6f80818731469e00f54165ec94aae2db868ea05"],"407687e67faf6e1f02a211ca078d8e3eed631027":["cbe4cb0ba51d9578281533906fc02ee563b60520","5009d80b96d7223e4120e40035a8b8c1d48cb134"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":["f6f80818731469e00f54165ec94aae2db868ea05","cbe4cb0ba51d9578281533906fc02ee563b60520"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["5009d80b96d7223e4120e40035a8b8c1d48cb134"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3d3e0b5069dbacda34baa90adceb47cb5c9f3e65"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f6f80818731469e00f54165ec94aae2db868ea05"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f6f80818731469e00f54165ec94aae2db868ea05"],"f6f80818731469e00f54165ec94aae2db868ea05":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"3d3e0b5069dbacda34baa90adceb47cb5c9f3e65":["3241e06e642196396b80bb293acd9c0814d079e0"],"3241e06e642196396b80bb293acd9c0814d079e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"5009d80b96d7223e4120e40035a8b8c1d48cb134":["cbe4cb0ba51d9578281533906fc02ee563b60520"]},"commit2Childs":{"cbe4cb0ba51d9578281533906fc02ee563b60520":["407687e67faf6e1f02a211ca078d8e3eed631027","db4fdbf3d262768eabc027cd8321edca0cd11fa8","5009d80b96d7223e4120e40035a8b8c1d48cb134"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["f6f80818731469e00f54165ec94aae2db868ea05"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a1a22b1ad88b436661458df567f3fdb446392a4","aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","3241e06e642196396b80bb293acd9c0814d079e0"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"f6f80818731469e00f54165ec94aae2db868ea05":["cbe4cb0ba51d9578281533906fc02ee563b60520","db4fdbf3d262768eabc027cd8321edca0cd11fa8","aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"3d3e0b5069dbacda34baa90adceb47cb5c9f3e65":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"3241e06e642196396b80bb293acd9c0814d079e0":["3d3e0b5069dbacda34baa90adceb47cb5c9f3e65"],"5009d80b96d7223e4120e40035a8b8c1d48cb134":["407687e67faf6e1f02a211ca078d8e3eed631027","57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","db4fdbf3d262768eabc027cd8321edca0cd11fa8","aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}