{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#incrementToken().mjava","commits":[{"id":"790c3f61c9b891d66d919c5d10db9fa5216eb0f1","date":1274818604,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#incrementToken().mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/StopFilter#incrementToken().mjava","sourceNew":"  /**\n   * Returns the next input Token whose term() is not a stop word.\n   */\n  @Override\n  public final boolean incrementToken() throws IOException {\n    // return the first non-stop word found\n    int skippedPositions = 0;\n    while (input.incrementToken()) {\n      if (!stopWords.contains(termAtt.buffer(), 0, termAtt.length())) {\n        if (enablePositionIncrements) {\n          posIncrAtt.setPositionIncrement(posIncrAtt.getPositionIncrement() + skippedPositions);\n        }\n        return true;\n      }\n      skippedPositions += posIncrAtt.getPositionIncrement();\n    }\n    // reached EOS -- return false\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Returns the next input Token whose term() is not a stop word.\n   */\n  @Override\n  public final boolean incrementToken() throws IOException {\n    // return the first non-stop word found\n    int skippedPositions = 0;\n    while (input.incrementToken()) {\n      if (!stopWords.contains(termAtt.buffer(), 0, termAtt.length())) {\n        if (enablePositionIncrements) {\n          posIncrAtt.setPositionIncrement(posIncrAtt.getPositionIncrement() + skippedPositions);\n        }\n        return true;\n      }\n      skippedPositions += posIncrAtt.getPositionIncrement();\n    }\n    // reached EOS -- return false\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f714d3d16beb7d9cc74e7ae85c110a7976c62938","date":1296412234,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#incrementToken().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns the next input Token whose term() is not a stop word.\n   */\n  @Override\n  public final boolean incrementToken() throws IOException {\n    // return the first non-stop word found\n    int skippedPositions = 0;\n    while (input.incrementToken()) {\n      if (!stopWords.contains(termAtt.buffer(), 0, termAtt.length())) {\n        if (enablePositionIncrements) {\n          posIncrAtt.setPositionIncrement(posIncrAtt.getPositionIncrement() + skippedPositions);\n        }\n        return true;\n      }\n      skippedPositions += posIncrAtt.getPositionIncrement();\n    }\n    // reached EOS -- return false\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#incrementToken().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns the next input Token whose term() is not a stop word.\n   */\n  @Override\n  public final boolean incrementToken() throws IOException {\n    // return the first non-stop word found\n    int skippedPositions = 0;\n    while (input.incrementToken()) {\n      if (!stopWords.contains(termAtt.buffer(), 0, termAtt.length())) {\n        if (enablePositionIncrements) {\n          posIncrAtt.setPositionIncrement(posIncrAtt.getPositionIncrement() + skippedPositions);\n        }\n        return true;\n      }\n      skippedPositions += posIncrAtt.getPositionIncrement();\n    }\n    // reached EOS -- return false\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#incrementToken().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns the next input Token whose term() is not a stop word.\n   */\n  @Override\n  public final boolean incrementToken() throws IOException {\n    // return the first non-stop word found\n    int skippedPositions = 0;\n    while (input.incrementToken()) {\n      if (!stopWords.contains(termAtt.buffer(), 0, termAtt.length())) {\n        if (enablePositionIncrements) {\n          posIncrAtt.setPositionIncrement(posIncrAtt.getPositionIncrement() + skippedPositions);\n        }\n        return true;\n      }\n      skippedPositions += posIncrAtt.getPositionIncrement();\n    }\n    // reached EOS -- return false\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f714d3d16beb7d9cc74e7ae85c110a7976c62938":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1","f714d3d16beb7d9cc74e7ae85c110a7976c62938"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1","f714d3d16beb7d9cc74e7ae85c110a7976c62938"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f714d3d16beb7d9cc74e7ae85c110a7976c62938"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"f714d3d16beb7d9cc74e7ae85c110a7976c62938":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["f714d3d16beb7d9cc74e7ae85c110a7976c62938","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}