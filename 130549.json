{"path":"src/test/org/apache/lucene/search/CheckHits#checkDocIds(String,int[],Hits).mjava","commits":[{"id":"56b47d7ef702892600c875ce48ffbdd5701bb3f3","date":1115407780,"type":1,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/CheckHits#checkDocIds(String,int[],Hits).mjava","pathOld":"src/test/org/apache/lucene/search/CheckHits#checkDocIds(String,int[],Hits,TestCase).mjava","sourceNew":"  /** Tests that a Hits has an expected order of documents */\n  public static void checkDocIds(String mes, int[] results, Hits hits)\n  throws IOException {\n    TestCase.assertEquals(mes + \" nr of hits\", results.length, hits.length());\n    for (int i = 0; i < results.length; i++) {\n      TestCase.assertEquals(mes + \" doc nrs for hit \" + i, results[i], hits.id(i));\n    }\n  }\n\n","sourceOld":"  /** Tests that a Hits has an expected order of documents */\n  public static void checkDocIds(String mes, int[] results, Hits hits, TestCase testCase)\n  throws IOException {\n    TestCase.assertEquals(mes + \" nr of hits\", results.length, hits.length());\n    for (int i = 0; i < results.length; i++) {\n      TestCase.assertEquals(mes + \" doc nrs for hit \" + i, results[i], hits.id(i));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5af07783dbc171e26a694c4f7d735e30c2769faa","date":1211569075,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/CheckHits#checkDocIds(String,int[],ScoreDoc[]).mjava","pathOld":"src/test/org/apache/lucene/search/CheckHits#checkDocIds(String,int[],Hits).mjava","sourceNew":"  /** Tests that a Hits has an expected order of documents */\n  public static void checkDocIds(String mes, int[] results, ScoreDoc[] hits)\n  throws IOException {\n    TestCase.assertEquals(mes + \" nr of hits\", results.length, hits.length);\n    for (int i = 0; i < results.length; i++) {\n      TestCase.assertEquals(mes + \" doc nrs for hit \" + i, results[i], hits[i].doc);\n    }\n  }\n\n","sourceOld":"  /** Tests that a Hits has an expected order of documents */\n  public static void checkDocIds(String mes, int[] results, Hits hits)\n  throws IOException {\n    TestCase.assertEquals(mes + \" nr of hits\", results.length, hits.length());\n    for (int i = 0; i < results.length; i++) {\n      TestCase.assertEquals(mes + \" doc nrs for hit \" + i, results[i], hits.id(i));\n    }\n  }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"56b47d7ef702892600c875ce48ffbdd5701bb3f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5af07783dbc171e26a694c4f7d735e30c2769faa":["56b47d7ef702892600c875ce48ffbdd5701bb3f3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5af07783dbc171e26a694c4f7d735e30c2769faa"]},"commit2Childs":{"56b47d7ef702892600c875ce48ffbdd5701bb3f3":["5af07783dbc171e26a694c4f7d735e30c2769faa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["56b47d7ef702892600c875ce48ffbdd5701bb3f3"],"5af07783dbc171e26a694c4f7d735e30c2769faa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}