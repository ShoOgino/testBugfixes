{"path":"lucene/test-framework/src/java/org/apache/lucene/geo/BaseGeoPointTestCase#testBoxNull().mjava","commits":[{"id":"3e21d7642ee7e0c00429964e5b47504602fe218c","date":1460897579,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/geo/BaseGeoPointTestCase#testBoxNull().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#testBoxNull().mjava","sourceNew":"  /** null field name not allowed */\n  public void testBoxNull() {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      newRectQuery(null, 18, 19, -66, -65);\n    });\n    assertTrue(expected.getMessage().contains(\"field must not be null\"));\n  }\n\n","sourceOld":"  /** null field name not allowed */\n  public void testBoxNull() {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      newRectQuery(null, 18, 19, -66, -65);\n    });\n    assertTrue(expected.getMessage().contains(\"field must not be null\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8cb57c50beb99a1245256e866350af8e5ea1f36","date":1460921840,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/geo/BaseGeoPointTestCase#testBoxNull().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#testBoxNull().mjava","sourceNew":"  /** null field name not allowed */\n  public void testBoxNull() {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      newRectQuery(null, 18, 19, -66, -65);\n    });\n    assertTrue(expected.getMessage().contains(\"field must not be null\"));\n  }\n\n","sourceOld":"  /** null field name not allowed */\n  public void testBoxNull() {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      newRectQuery(null, 18, 19, -66, -65);\n    });\n    assertTrue(expected.getMessage().contains(\"field must not be null\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3e21d7642ee7e0c00429964e5b47504602fe218c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8cb57c50beb99a1245256e866350af8e5ea1f36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3e21d7642ee7e0c00429964e5b47504602fe218c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f8cb57c50beb99a1245256e866350af8e5ea1f36"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e21d7642ee7e0c00429964e5b47504602fe218c","f8cb57c50beb99a1245256e866350af8e5ea1f36"],"3e21d7642ee7e0c00429964e5b47504602fe218c":["f8cb57c50beb99a1245256e866350af8e5ea1f36"],"f8cb57c50beb99a1245256e866350af8e5ea1f36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}