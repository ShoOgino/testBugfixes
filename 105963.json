{"path":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#isAllEqual(int[]).mjava","commits":[{"id":"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","date":1343686506,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#isAllEqual(int[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pfor/ForUtil#isAllEqual(int[]).mjava","sourceNew":"  protected static boolean isAllEqual(final int[] data) {\n    int len = data.length;\n    int v = data[0];\n    for (int i=1; i<len; i++) {\n      if (data[i] != v) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  protected static boolean isAllEqual(final int[] data) {\n    int len = data.length;\n    int v = data[0];\n    for (int i=1; i<len; i++) {\n      if (data[i] != v) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8081d5018e8846bf4080f2809432c759996e749f","date":1344206372,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#isAllEqual(int[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#isAllEqual(int[]).mjava","sourceNew":"  // nocommit: we must have a util function for this, hmm?\n  protected static boolean isAllEqual(final int[] data) {\n    int len = data.length;\n    int v = data[0];\n    for (int i=1; i<len; i++) {\n      if (data[i] != v) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  protected static boolean isAllEqual(final int[] data) {\n    int len = data.length;\n    int v = data[0];\n    for (int i=1; i<len; i++) {\n      if (data[i] != v) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6b41208259e8566cba0ecac7da6a331ea9732dd","date":1344551376,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#isAllEqual(int[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#isAllEqual(int[]).mjava","sourceNew":"  // nocommit: we must have a util function for this, hmm?\n  private static boolean isAllEqual(final int[] data) {\n    final long v = data[0];\n    for (int i = 1; i < BLOCK_SIZE; ++i) {\n      if (data[i] != v) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  // nocommit: we must have a util function for this, hmm?\n  protected static boolean isAllEqual(final int[] data) {\n    int len = data.length;\n    int v = data[0];\n    for (int i=1; i<len; i++) {\n      if (data[i] != v) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"007463e97416788017c563017736002c3f72ea73","date":1344616184,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#isAllEqual(int[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#isAllEqual(int[]).mjava","sourceNew":"  private static boolean isAllEqual(final int[] data) {\n    final long v = data[0];\n    for (int i = 1; i < BLOCK_SIZE; ++i) {\n      if (data[i] != v) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  // nocommit: we must have a util function for this, hmm?\n  private static boolean isAllEqual(final int[] data) {\n    final long v = data[0];\n    for (int i = 1; i < BLOCK_SIZE; ++i) {\n      if (data[i] != v) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8615860cb50aefb8eebca1d1b3893dbe21cf126","date":1345550448,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#isAllEqual(int[]).mjava","pathOld":"/dev/null","sourceNew":"  private static boolean isAllEqual(final int[] data) {\n    final long v = data[0];\n    for (int i = 1; i < BLOCK_SIZE; ++i) {\n      if (data[i] != v) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#isAllEqual(int[]).mjava","pathOld":"/dev/null","sourceNew":"  private static boolean isAllEqual(final int[] data) {\n    final long v = data[0];\n    for (int i = 1; i < BLOCK_SIZE; ++i) {\n      if (data[i] != v) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/block/ForUtil#isAllEqual(int[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#isAllEqual(int[]).mjava","sourceNew":"  private static boolean isAllEqual(final int[] data) {\n    final long v = data[0];\n    for (int i = 1; i < BLOCK_SIZE; ++i) {\n      if (data[i] != v) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  private static boolean isAllEqual(final int[] data) {\n    final long v = data[0];\n    for (int i = 1; i < BLOCK_SIZE; ++i) {\n      if (data[i] != v) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"007463e97416788017c563017736002c3f72ea73":["e6b41208259e8566cba0ecac7da6a331ea9732dd"],"001b25b42373b22a52f399dbf072f1224632e8e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","007463e97416788017c563017736002c3f72ea73"],"8081d5018e8846bf4080f2809432c759996e749f":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"e6b41208259e8566cba0ecac7da6a331ea9732dd":["8081d5018e8846bf4080f2809432c759996e749f"]},"commit2Childs":{"007463e97416788017c563017736002c3f72ea73":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"001b25b42373b22a52f399dbf072f1224632e8e6":[],"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["8081d5018e8846bf4080f2809432c759996e749f"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["001b25b42373b22a52f399dbf072f1224632e8e6","7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["001b25b42373b22a52f399dbf072f1224632e8e6","3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"8081d5018e8846bf4080f2809432c759996e749f":["e6b41208259e8566cba0ecac7da6a331ea9732dd"],"e6b41208259e8566cba0ecac7da6a331ea9732dd":["007463e97416788017c563017736002c3f72ea73"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}