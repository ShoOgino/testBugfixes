{"path":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/dict/UserDictionary#getFeature(int,int...).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/dict/UserDictionary#getFeature(int,int...).mjava","pathOld":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/dict/UserDictionary#getFeature(int,int...).mjava","sourceNew":"  private String getFeature(int wordId, int... fields) {\n    String[] allFeatures = getAllFeaturesArray(wordId);\n    if (allFeatures == null) {\n      return null;\n    }\n    StringBuilder sb = new StringBuilder();\n    if (fields.length == 0) { // All features\n      for (String feature : allFeatures) {\n        sb.append(CSVUtil.quoteEscape(feature)).append(\",\");\n      }\n    } else if (fields.length == 1) { // One feature doesn't need to escape value\n      sb.append(allFeatures[fields[0]]).append(\",\");\t\t\t\n    } else {\n      for (int field : fields){\n        sb.append(CSVUtil.quoteEscape(allFeatures[field])).append(\",\");\n      }\n    }\n    return sb.deleteCharAt(sb.length() - 1).toString();\n  }\n\n","sourceOld":"  private String getFeature(int wordId, int... fields) {\n    String[] allFeatures = getAllFeaturesArray(wordId);\n    if (allFeatures == null) {\n      return null;\n    }\n    StringBuilder sb = new StringBuilder();\n    if (fields.length == 0) { // All features\n      for (String feature : allFeatures) {\n        sb.append(CSVUtil.quoteEscape(feature)).append(\",\");\n      }\n    } else if (fields.length == 1) { // One feature doesn't need to escape value\n      sb.append(allFeatures[fields[0]]).append(\",\");\t\t\t\n    } else {\n      for (int field : fields){\n        sb.append(CSVUtil.quoteEscape(allFeatures[field])).append(\",\");\n      }\n    }\n    return sb.deleteCharAt(sb.length() - 1).toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/dict/UserDictionary#getFeature(int,int...).mjava","pathOld":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/dict/UserDictionary#getFeature(int,int...).mjava","sourceNew":"  private String getFeature(int wordId, int... fields) {\n    String[] allFeatures = getAllFeaturesArray(wordId);\n    if (allFeatures == null) {\n      return null;\n    }\n    StringBuilder sb = new StringBuilder();\n    if (fields.length == 0) { // All features\n      for (String feature : allFeatures) {\n        sb.append(CSVUtil.quoteEscape(feature)).append(\",\");\n      }\n    } else if (fields.length == 1) { // One feature doesn't need to escape value\n      sb.append(allFeatures[fields[0]]).append(\",\");\n    } else {\n      for (int field : fields){\n        sb.append(CSVUtil.quoteEscape(allFeatures[field])).append(\",\");\n      }\n    }\n    return sb.deleteCharAt(sb.length() - 1).toString();\n  }\n\n","sourceOld":"  private String getFeature(int wordId, int... fields) {\n    String[] allFeatures = getAllFeaturesArray(wordId);\n    if (allFeatures == null) {\n      return null;\n    }\n    StringBuilder sb = new StringBuilder();\n    if (fields.length == 0) { // All features\n      for (String feature : allFeatures) {\n        sb.append(CSVUtil.quoteEscape(feature)).append(\",\");\n      }\n    } else if (fields.length == 1) { // One feature doesn't need to escape value\n      sb.append(allFeatures[fields[0]]).append(\",\");\t\t\t\n    } else {\n      for (int field : fields){\n        sb.append(CSVUtil.quoteEscape(allFeatures[field])).append(\",\");\n      }\n    }\n    return sb.deleteCharAt(sb.length() - 1).toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}