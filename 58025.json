{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/request/LukeRequest#getParams().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/LukeRequest#getParams().mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/request/LukeRequest#getParams().mjava","sourceNew":"  @Override\n  public SolrParams getParams() {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    if( fields != null && fields.size() > 0 ) {\n      params.add( CommonParams.FL, fields.toArray( new String[fields.size()] ) );\n    }\n    if( numTerms >= 0 ) {\n      params.add( \"numTerms\", numTerms+\"\" );\n    }\n    if (showSchema) {\n    \tparams.add(\"show\", \"schema\");\n    }\n    return params;\n  }\n\n","sourceOld":"  @Override\n  public SolrParams getParams() {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    if( fields != null && fields.size() > 0 ) {\n      params.add( CommonParams.FL, fields.toArray( new String[fields.size()] ) );\n    }\n    if( numTerms >= 0 ) {\n      params.add( \"numTerms\", numTerms+\"\" );\n    }\n    if (showSchema) {\n    \tparams.add(\"show\", \"schema\");\n    }\n    return params;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/LukeRequest#getParams().mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/request/LukeRequest#getParams().mjava","sourceNew":"  @Override\n  public SolrParams getParams() {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    if( fields != null && fields.size() > 0 ) {\n      params.add( CommonParams.FL, fields.toArray( new String[fields.size()] ) );\n    }\n    if( numTerms >= 0 ) {\n      params.add( \"numTerms\", numTerms+\"\" );\n    }\n    if (showSchema) {\n    \tparams.add(\"show\", \"schema\");\n    }\n    return params;\n  }\n\n","sourceOld":"  @Override\n  public SolrParams getParams() {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    if( fields != null && fields.size() > 0 ) {\n      params.add( CommonParams.FL, fields.toArray( new String[fields.size()] ) );\n    }\n    if( numTerms >= 0 ) {\n      params.add( \"numTerms\", numTerms+\"\" );\n    }\n    if (showSchema) {\n    \tparams.add(\"show\", \"schema\");\n    }\n    return params;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/LukeRequest#getParams().mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/request/LukeRequest#getParams().mjava","sourceNew":"  @Override\n  public SolrParams getParams() {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    if( fields != null && fields.size() > 0 ) {\n      params.add( CommonParams.FL, fields.toArray( new String[fields.size()] ) );\n    }\n    if( numTerms >= 0 ) {\n      params.add( \"numTerms\", numTerms+\"\" );\n    }\n    if (showSchema) {\n    \tparams.add(\"show\", \"schema\");\n    }\n    return params;\n  }\n\n","sourceOld":"  @Override\n  public SolrParams getParams() {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    if( fields != null && fields.size() > 0 ) {\n      params.add( CommonParams.FL, fields.toArray( new String[fields.size()] ) );\n    }\n    if( numTerms >= 0 ) {\n      params.add( \"numTerms\", numTerms+\"\" );\n    }\n    if (showSchema) {\n    \tparams.add(\"show\", \"schema\");\n    }\n    return params;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/LukeRequest#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/LukeRequest#getParams().mjava","sourceNew":"  @Override\n  public SolrParams getParams() {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    if( fields != null && fields.size() > 0 ) {\n      params.add( CommonParams.FL, fields.toArray( new String[fields.size()] ) );\n    }\n    if( numTerms >= 0 ) {\n      params.add( \"numTerms\", numTerms+\"\" );\n    }\n    if (showSchema) {\n      params.add(\"show\", \"schema\");\n    }\n    return params;\n  }\n\n","sourceOld":"  @Override\n  public SolrParams getParams() {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    if( fields != null && fields.size() > 0 ) {\n      params.add( CommonParams.FL, fields.toArray( new String[fields.size()] ) );\n    }\n    if( numTerms >= 0 ) {\n      params.add( \"numTerms\", numTerms+\"\" );\n    }\n    if (showSchema) {\n    \tparams.add(\"show\", \"schema\");\n    }\n    return params;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1b3cdb7c8121b7c2c0a5f86fdd4a402dbbb455d","date":1554165618,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/LukeRequest#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/LukeRequest#getParams().mjava","sourceNew":"  @Override\n  public SolrParams getParams() {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    if( fields != null && fields.size() > 0 ) {\n      params.add( CommonParams.FL, fields.toArray( new String[fields.size()] ) );\n    }\n    if( numTerms >= 0 ) {\n      params.add( \"numTerms\", numTerms+\"\" );\n    }\n    if (showSchema) {\n      params.add(\"show\", \"schema\");\n    }\n    if (includeIndexFieldFlags != null) {\n      params.add(\"includeIndexFieldFlags\", includeIndexFieldFlags.toString());\n    }\n\n    return params;\n  }\n\n","sourceOld":"  @Override\n  public SolrParams getParams() {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    if( fields != null && fields.size() > 0 ) {\n      params.add( CommonParams.FL, fields.toArray( new String[fields.size()] ) );\n    }\n    if( numTerms >= 0 ) {\n      params.add( \"numTerms\", numTerms+\"\" );\n    }\n    if (showSchema) {\n      params.add(\"show\", \"schema\");\n    }\n    return params;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d1b3cdb7c8121b7c2c0a5f86fdd4a402dbbb455d":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1b3cdb7c8121b7c2c0a5f86fdd4a402dbbb455d"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"d1b3cdb7c8121b7c2c0a5f86fdd4a402dbbb455d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["d1b3cdb7c8121b7c2c0a5f86fdd4a402dbbb455d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}