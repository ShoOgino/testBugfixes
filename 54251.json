{"path":"src/java/org/apache/lucene/index/MultiSegmentReader#readerIndex(int,int[],int).mjava","commits":[{"id":"125b5699f11b58d9be0820c6ce8b1648812902e8","date":1190273227,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiSegmentReader#readerIndex(int,int[],int).mjava","pathOld":"/dev/null","sourceNew":"  static int readerIndex(int n, int[] starts, int numSubReaders) {    // find reader for doc n:\n    int lo = 0;                                      // search starts array\n    int hi = numSubReaders - 1;                  // for first element less\n\n    while (hi >= lo) {\n      int mid = (lo + hi) >> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n        hi = mid - 1;\n      else if (n > midValue)\n        lo = mid + 1;\n      else {                                      // found a match\n        while (mid+1 < numSubReaders && starts[mid+1] == midValue) {\n          mid++;                                  // scan to last match\n        }\n        return mid;\n      }\n    }\n    return hi;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["b194dd68c45dcab90573bcf23819361780012809"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5712975970a595c28f1988efd007e1b8a617a92f","date":1219499238,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiSegmentReader#readerIndex(int,int[],int).mjava","pathOld":"src/java/org/apache/lucene/index/MultiSegmentReader#readerIndex(int,int[],int).mjava","sourceNew":"  final static int readerIndex(int n, int[] starts, int numSubReaders) {    // find reader for doc n:\n    int lo = 0;                                      // search starts array\n    int hi = numSubReaders - 1;                  // for first element less\n\n    while (hi >= lo) {\n      int mid = (lo + hi) >> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n        hi = mid - 1;\n      else if (n > midValue)\n        lo = mid + 1;\n      else {                                      // found a match\n        while (mid+1 < numSubReaders && starts[mid+1] == midValue) {\n          mid++;                                  // scan to last match\n        }\n        return mid;\n      }\n    }\n    return hi;\n  }\n\n","sourceOld":"  static int readerIndex(int n, int[] starts, int numSubReaders) {    // find reader for doc n:\n    int lo = 0;                                      // search starts array\n    int hi = numSubReaders - 1;                  // for first element less\n\n    while (hi >= lo) {\n      int mid = (lo + hi) >> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n        hi = mid - 1;\n      else if (n > midValue)\n        lo = mid + 1;\n      else {                                      // found a match\n        while (mid+1 < numSubReaders && starts[mid+1] == midValue) {\n          mid++;                                  // scan to last match\n        }\n        return mid;\n      }\n    }\n    return hi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b194dd68c45dcab90573bcf23819361780012809","date":1228347979,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/MultiSegmentReader#readerIndex(int,int[],int).mjava","pathOld":"src/java/org/apache/lucene/index/MultiSegmentReader#readerIndex(int,int[],int).mjava","sourceNew":"  final static int readerIndex(int n, int[] starts, int numSubReaders) {    // find reader for doc n:\n    int lo = 0;                                      // search starts array\n    int hi = numSubReaders - 1;                  // for first element less\n\n    while (hi >= lo) {\n      int mid = (lo + hi) >>> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n        hi = mid - 1;\n      else if (n > midValue)\n        lo = mid + 1;\n      else {                                      // found a match\n        while (mid+1 < numSubReaders && starts[mid+1] == midValue) {\n          mid++;                                  // scan to last match\n        }\n        return mid;\n      }\n    }\n    return hi;\n  }\n\n","sourceOld":"  final static int readerIndex(int n, int[] starts, int numSubReaders) {    // find reader for doc n:\n    int lo = 0;                                      // search starts array\n    int hi = numSubReaders - 1;                  // for first element less\n\n    while (hi >= lo) {\n      int mid = (lo + hi) >> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n        hi = mid - 1;\n      else if (n > midValue)\n        lo = mid + 1;\n      else {                                      // found a match\n        while (mid+1 < numSubReaders && starts[mid+1] == midValue) {\n          mid++;                                  // scan to last match\n        }\n        return mid;\n      }\n    }\n    return hi;\n  }\n\n","bugFix":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1","date":1244392278,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryReader#readerIndex(int,int[],int).mjava","pathOld":"src/java/org/apache/lucene/index/MultiSegmentReader#readerIndex(int,int[],int).mjava","sourceNew":"  final static int readerIndex(int n, int[] starts, int numSubReaders) {    // find reader for doc n:\n    int lo = 0;                                      // search starts array\n    int hi = numSubReaders - 1;                  // for first element less\n\n    while (hi >= lo) {\n      int mid = (lo + hi) >>> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n        hi = mid - 1;\n      else if (n > midValue)\n        lo = mid + 1;\n      else {                                      // found a match\n        while (mid+1 < numSubReaders && starts[mid+1] == midValue) {\n          mid++;                                  // scan to last match\n        }\n        return mid;\n      }\n    }\n    return hi;\n  }\n\n","sourceOld":"  final static int readerIndex(int n, int[] starts, int numSubReaders) {    // find reader for doc n:\n    int lo = 0;                                      // search starts array\n    int hi = numSubReaders - 1;                  // for first element less\n\n    while (hi >= lo) {\n      int mid = (lo + hi) >>> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n        hi = mid - 1;\n      else if (n > midValue)\n        lo = mid + 1;\n      else {                                      // found a match\n        while (mid+1 < numSubReaders && starts[mid+1] == midValue) {\n          mid++;                                  // scan to last match\n        }\n        return mid;\n      }\n    }\n    return hi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["b194dd68c45dcab90573bcf23819361780012809"],"125b5699f11b58d9be0820c6ce8b1648812902e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5712975970a595c28f1988efd007e1b8a617a92f":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b194dd68c45dcab90573bcf23819361780012809":["5712975970a595c28f1988efd007e1b8a617a92f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"]},"commit2Childs":{"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"125b5699f11b58d9be0820c6ce8b1648812902e8":["5712975970a595c28f1988efd007e1b8a617a92f"],"5712975970a595c28f1988efd007e1b8a617a92f":["b194dd68c45dcab90573bcf23819361780012809"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"b194dd68c45dcab90573bcf23819361780012809":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}