{"path":"src/java/org/apache/solr/update/DocumentBuilder#addField(String,String,float).mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/update/DocumentBuilder#addField(String,String,float).mjava","pathOld":"/dev/null","sourceNew":"  public void addField(String name, String val, float boost) {\n    SchemaField ftype = schema.getField(name);\n    addField(ftype,val,boost);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b451a0c4c12c9a8575a49bafc27463190c8b8833","date":1149619984,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/update/DocumentBuilder#addField(String,String,float).mjava","pathOld":"src/java/org/apache/solr/update/DocumentBuilder#addField(String,String,float).mjava","sourceNew":"  public void addField(String name, String val, float boost) {\n    SchemaField sfield = schema.getFieldOrNull(name);\n    if (sfield != null) {\n      addField(sfield,val,boost);\n    }\n\n    // Check if we should copy this field to any other fields.\n    // This could happen whether it is explicit or not.\n    SchemaField[] destArr = schema.getCopyFields(name);\n    if (destArr != null) {\n      for (SchemaField destField : destArr) {\n        addSingleField(destField,val,boost);\n      }\n    }\n\n    // error if this field name doesn't match anything\n    if (sfield==null && (destArr==null || destArr.length==0)) {\n      throw new SolrException(400,\"ERROR:unknown field '\" + name + \"'\");\n    }\n  }\n\n","sourceOld":"  public void addField(String name, String val, float boost) {\n    SchemaField ftype = schema.getField(name);\n    addField(ftype,val,boost);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996","date":1180477701,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/update/DocumentBuilder#addField(String,String,float).mjava","pathOld":"src/java/org/apache/solr/update/DocumentBuilder#addField(String,String,float).mjava","sourceNew":"  public void addField(String name, String val, float boost) {\n    SchemaField sfield = schema.getFieldOrNull(name);\n    if (sfield != null) {\n      addField(sfield,val,boost);\n    }\n\n    // Check if we should copy this field to any other fields.\n    // This could happen whether it is explicit or not.\n    SchemaField[] destArr = schema.getCopyFields(name);\n    if (destArr != null) {\n      for (SchemaField destField : destArr) {\n        addSingleField(destField,val,boost);\n      }\n    }\n\n    // error if this field name doesn't match anything\n    if (sfield==null && (destArr==null || destArr.length==0)) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"ERROR:unknown field '\" + name + \"'\");\n    }\n  }\n\n","sourceOld":"  public void addField(String name, String val, float boost) {\n    SchemaField sfield = schema.getFieldOrNull(name);\n    if (sfield != null) {\n      addField(sfield,val,boost);\n    }\n\n    // Check if we should copy this field to any other fields.\n    // This could happen whether it is explicit or not.\n    SchemaField[] destArr = schema.getCopyFields(name);\n    if (destArr != null) {\n      for (SchemaField destField : destArr) {\n        addSingleField(destField,val,boost);\n      }\n    }\n\n    // error if this field name doesn't match anything\n    if (sfield==null && (destArr==null || destArr.length==0)) {\n      throw new SolrException(400,\"ERROR:unknown field '\" + name + \"'\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3af5c76d2483084bbda5752c994faee06ef14778","date":1209074670,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/update/DocumentBuilder#addField(String,String,float).mjava","pathOld":"src/java/org/apache/solr/update/DocumentBuilder#addField(String,String,float).mjava","sourceNew":"  /**\n   * Add the Field and value to the document with the specified boost, invoking the copyField mechanism\n   * @param name The name of the field.\n   * @param val The value to add\n   * @param boost The boost\n   *\n   * @see #addField(String, String)\n   * @see #addField(org.apache.solr.schema.SchemaField, String, float)\n   * @see #addSingleField(org.apache.solr.schema.SchemaField, String, float)\n   *\n   */\n  public void addField(String name, String val, float boost) {\n    SchemaField sfield = schema.getFieldOrNull(name);\n    if (sfield != null) {\n      addField(sfield,val,boost);\n    }\n\n    // Check if we should copy this field to any other fields.\n    // This could happen whether it is explicit or not.\n    SchemaField[] destArr = schema.getCopyFields(name);\n    if (destArr != null) {\n      for (SchemaField destField : destArr) {\n        addSingleField(destField,val,boost);\n      }\n    }\n\n    // error if this field name doesn't match anything\n    if (sfield==null && (destArr==null || destArr.length==0)) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"ERROR:unknown field '\" + name + \"'\");\n    }\n  }\n\n","sourceOld":"  public void addField(String name, String val, float boost) {\n    SchemaField sfield = schema.getFieldOrNull(name);\n    if (sfield != null) {\n      addField(sfield,val,boost);\n    }\n\n    // Check if we should copy this field to any other fields.\n    // This could happen whether it is explicit or not.\n    SchemaField[] destArr = schema.getCopyFields(name);\n    if (destArr != null) {\n      for (SchemaField destField : destArr) {\n        addSingleField(destField,val,boost);\n      }\n    }\n\n    // error if this field name doesn't match anything\n    if (sfield==null && (destArr==null || destArr.length==0)) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"ERROR:unknown field '\" + name + \"'\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55883d09343e80968c5e44b9c14da13238544a0a","date":1228020380,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/java/org/apache/solr/update/DocumentBuilder#addField(String,String,float).mjava","pathOld":"src/java/org/apache/solr/update/DocumentBuilder#addField(String,String,float).mjava","sourceNew":"  /**\n   * Add the Field and value to the document with the specified boost, invoking the copyField mechanism\n   * @param name The name of the field.\n   * @param val The value to add\n   * @param boost The boost\n   *\n   * @see #addField(String, String)\n   * @see #addField(org.apache.solr.schema.SchemaField, String, float)\n   * @see #addSingleField(org.apache.solr.schema.SchemaField, String, float)\n   *\n   */\n  public void addField(String name, String val, float boost) {\n    SchemaField sfield = schema.getFieldOrNull(name);\n    if (sfield != null) {\n      addField(sfield,val,boost);\n    }\n\n    // Check if we should copy this field to any other fields.\n    // This could happen whether it is explicit or not.\n    final List<CopyField> copyFields = schema.getCopyFieldsList(name);\n    if (copyFields != null) {\n      for(CopyField cf : copyFields) {\n        addSingleField(cf.getDestination(), cf.getLimitedValue( val ), boost);\n      }\n    }\n\n    // error if this field name doesn't match anything\n    if (sfield==null && (copyFields==null || copyFields.size()==0)) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"ERROR:unknown field '\" + name + \"'\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Add the Field and value to the document with the specified boost, invoking the copyField mechanism\n   * @param name The name of the field.\n   * @param val The value to add\n   * @param boost The boost\n   *\n   * @see #addField(String, String)\n   * @see #addField(org.apache.solr.schema.SchemaField, String, float)\n   * @see #addSingleField(org.apache.solr.schema.SchemaField, String, float)\n   *\n   */\n  public void addField(String name, String val, float boost) {\n    SchemaField sfield = schema.getFieldOrNull(name);\n    if (sfield != null) {\n      addField(sfield,val,boost);\n    }\n\n    // Check if we should copy this field to any other fields.\n    // This could happen whether it is explicit or not.\n    SchemaField[] destArr = schema.getCopyFields(name);\n    if (destArr != null) {\n      for (SchemaField destField : destArr) {\n        addSingleField(destField,val,boost);\n      }\n    }\n\n    // error if this field name doesn't match anything\n    if (sfield==null && (destArr==null || destArr.length==0)) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"ERROR:unknown field '\" + name + \"'\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/update/DocumentBuilder#addField(String,String,float).mjava","pathOld":"src/java/org/apache/solr/update/DocumentBuilder#addField(String,String,float).mjava","sourceNew":"  /**\n   * Add the Field and value to the document with the specified boost, invoking the copyField mechanism\n   * @param name The name of the field.\n   * @param val The value to add\n   * @param boost The boost\n   *\n   * @see #addField(String, String)\n   * @see #addField(org.apache.solr.schema.SchemaField, String, float)\n   * @see #addSingleField(org.apache.solr.schema.SchemaField, String, float)\n   *\n   */\n  public void addField(String name, String val, float boost) {\n    SchemaField sfield = schema.getFieldOrNull(name);\n    if (sfield != null) {\n      addField(sfield,val,boost);\n    }\n\n    // Check if we should copy this field to any other fields.\n    // This could happen whether it is explicit or not.\n    final List<CopyField> copyFields = schema.getCopyFieldsList(name);\n    if (copyFields != null) {\n      for(CopyField cf : copyFields) {\n        addSingleField(cf.getDestination(), cf.getLimitedValue( val ), boost);\n      }\n    }\n\n    // error if this field name doesn't match anything\n    if (sfield==null && (copyFields==null || copyFields.size()==0)) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"ERROR:unknown field '\" + name + \"'\");\n    }\n  }\n\n","sourceOld":"  /**\n   * Add the Field and value to the document with the specified boost, invoking the copyField mechanism\n   * @param name The name of the field.\n   * @param val The value to add\n   * @param boost The boost\n   *\n   * @see #addField(String, String)\n   * @see #addField(org.apache.solr.schema.SchemaField, String, float)\n   * @see #addSingleField(org.apache.solr.schema.SchemaField, String, float)\n   *\n   */\n  public void addField(String name, String val, float boost) {\n    SchemaField sfield = schema.getFieldOrNull(name);\n    if (sfield != null) {\n      addField(sfield,val,boost);\n    }\n\n    // Check if we should copy this field to any other fields.\n    // This could happen whether it is explicit or not.\n    final List<CopyField> copyFields = schema.getCopyFieldsList(name);\n    if (copyFields != null) {\n      for(CopyField cf : copyFields) {\n        addSingleField(cf.getDestination(), cf.getLimitedValue( val ), boost);\n      }\n    }\n\n    // error if this field name doesn't match anything\n    if (sfield==null && (copyFields==null || copyFields.size()==0)) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"ERROR:unknown field '\" + name + \"'\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3af5c76d2483084bbda5752c994faee06ef14778":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["55883d09343e80968c5e44b9c14da13238544a0a"],"b451a0c4c12c9a8575a49bafc27463190c8b8833":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"55883d09343e80968c5e44b9c14da13238544a0a":["3af5c76d2483084bbda5752c994faee06ef14778"],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["b451a0c4c12c9a8575a49bafc27463190c8b8833"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3af5c76d2483084bbda5752c994faee06ef14778":["55883d09343e80968c5e44b9c14da13238544a0a"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["b451a0c4c12c9a8575a49bafc27463190c8b8833"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"b451a0c4c12c9a8575a49bafc27463190c8b8833":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["3af5c76d2483084bbda5752c994faee06ef14778"],"55883d09343e80968c5e44b9c14da13238544a0a":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}