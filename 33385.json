{"path":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/fetcher/KnownPathsFilter#handleRequest(Message).mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/fetcher/KnownPathsFilter#handleRequest(Message).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Description of the Method\n     *\n     * @param message  Description of the Parameter\n     * @return         Description of the Return Value\n     */\n    public Message handleRequest(Message message)\n    {\n        URL url = ((URLMessage)message).getUrl();\n        String file = url.getFile();\n        String host = url.getHost();\n        int i;\n        for (i = 0; i < pathLength; i++)\n        {\n            if (file.startsWith(pathsToFilter[i]))\n            {\n                filtered++;\n                return null;\n            }\n        }\n        for (i = 0; i < fileLength; i++)\n        {\n            if (file.endsWith(filesToFilter[i]))\n            {\n                filtered++;\n                return null;\n            }\n        }\n        for (i = 0; i<hostLength; i++)\n        {\n            if(hostFilter[i].equals(host))\n            {\n                filtered++;\n                return null;\n            }\n        }\n        return message;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9feed3746fdf26f0373bf041bb77d53700faaa5","date":1035300110,"type":3,"author":"cmarschner","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/fetcher/KnownPathsFilter#handleRequest(Message).mjava","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/fetcher/KnownPathsFilter#handleRequest(Message).mjava","sourceNew":"    /**\n     * Description of the Method\n     *\n     * @param message  Description of the Parameter\n     * @return         Description of the Return Value\n     */\n    public Message handleRequest(Message message)\n    {\n        try\n        {\n            URL url = new URL(((URLMessage)message).getNormalizedURLString());\n            String file = url.getFile();\n            String host = url.getHost();\n            int i;\n            for (i = 0; i < pathLength; i++)\n            {\n                if (file.startsWith(pathsToFilter[i]))\n                {\n                    filtered++;\n                    //log.log(\"KnownPathsFilter: filtered file '\" + url + \"' - file starts with \" + pathsToFilter[i]);\n                    log.log(message.toString());\n                    return null;\n                }\n            }\n            for (i = 0; i < fileLength; i++)\n            {\n                if (file.endsWith(filesToFilter[i]))\n                {\n                    filtered++;\n                    //log.log(\"KnownPathsFilter: filtered file '\" + url + \"' - file ends with \" + filesToFilter[i]);\n                    log.log(message.toString());\n                    return null;\n                }\n            }\n            for (i = 0; i<hostLength; i++)\n            {\n                if(hostsToFilter[i].equals(host))\n                {\n                    filtered++;\n                    //log.log(\"KnownPathsFilter: filtered file '\" + url + \"' - host equals \" + host);\n                    log.log(message.toString());\n                    return null;\n                }\n            }\n        }\n        catch(MalformedURLException e)\n        {\n            e.printStackTrace();\n        }\n        return message;\n    }\n\n","sourceOld":"    /**\n     * Description of the Method\n     *\n     * @param message  Description of the Parameter\n     * @return         Description of the Return Value\n     */\n    public Message handleRequest(Message message)\n    {\n        URL url = ((URLMessage)message).getUrl();\n        String file = url.getFile();\n        String host = url.getHost();\n        int i;\n        for (i = 0; i < pathLength; i++)\n        {\n            if (file.startsWith(pathsToFilter[i]))\n            {\n                filtered++;\n                return null;\n            }\n        }\n        for (i = 0; i < fileLength; i++)\n        {\n            if (file.endsWith(filesToFilter[i]))\n            {\n                filtered++;\n                return null;\n            }\n        }\n        for (i = 0; i<hostLength; i++)\n        {\n            if(hostFilter[i].equals(host))\n            {\n                filtered++;\n                return null;\n            }\n        }\n        return message;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/fetcher/KnownPathsFilter#handleRequest(Message).mjava","sourceNew":null,"sourceOld":"    /**\n     * Description of the Method\n     *\n     * @param message  Description of the Parameter\n     * @return         Description of the Return Value\n     */\n    public Message handleRequest(Message message)\n    {\n        try\n        {\n            URL url = new URL(((URLMessage)message).getNormalizedURLString());\n            String file = url.getFile();\n            String host = url.getHost();\n            int i;\n            for (i = 0; i < pathLength; i++)\n            {\n                if (file.startsWith(pathsToFilter[i]))\n                {\n                    filtered++;\n                    //log.log(\"KnownPathsFilter: filtered file '\" + url + \"' - file starts with \" + pathsToFilter[i]);\n                    log.log(message.toString());\n                    return null;\n                }\n            }\n            for (i = 0; i < fileLength; i++)\n            {\n                if (file.endsWith(filesToFilter[i]))\n                {\n                    filtered++;\n                    //log.log(\"KnownPathsFilter: filtered file '\" + url + \"' - file ends with \" + filesToFilter[i]);\n                    log.log(message.toString());\n                    return null;\n                }\n            }\n            for (i = 0; i<hostLength; i++)\n            {\n                if(hostsToFilter[i].equals(host))\n                {\n                    filtered++;\n                    //log.log(\"KnownPathsFilter: filtered file '\" + url + \"' - host equals \" + host);\n                    log.log(message.toString());\n                    return null;\n                }\n            }\n        }\n        catch(MalformedURLException e)\n        {\n            e.printStackTrace();\n        }\n        return message;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["d9feed3746fdf26f0373bf041bb77d53700faaa5"],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"],"d9feed3746fdf26f0373bf041bb77d53700faaa5":["05d36e0b328ec96237035fbcca240e73631396e5"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05d36e0b328ec96237035fbcca240e73631396e5":["d9feed3746fdf26f0373bf041bb77d53700faaa5"],"d9feed3746fdf26f0373bf041bb77d53700faaa5":["afc16d717d9ed1a8e45371668ca6de674164d624"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}