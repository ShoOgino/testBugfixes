{"path":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.IntersectTermsEnum#pushFrame(Frame).mjava","commits":[{"id":"e8be4ed7ae45ceed621fa6227c0ee604c81a3638","date":1375254900,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.IntersectTermsEnum#pushFrame(Frame).mjava","pathOld":"/dev/null","sourceNew":"      // nocommit: need to load ord lazily?\n      void pushFrame(Frame frame) {\n        final FST.Arc<Long> arc = frame.arc;\n        arc.output = fstOutputs.add(topFrame().arc.output, arc.output);\n        term = grow(arc.label);\n        level++;\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"646afd4e29139bf4b06a5d88f6dcfdb5c2cd625b","date":1375270956,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.IntersectTermsEnum#pushFrame(Frame).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.IntersectTermsEnum#pushFrame(Frame).mjava","sourceNew":"      // nocommit: need to load ord lazily?\n      void pushFrame(Frame frame) {\n        final FST.Arc<Long> arc = frame.arc;\n        arc.output = fstOutputs.add(topFrame().arc.output, arc.output);\n        term = grow(arc.label);\n        level++;\n        assert frame == stack[level];\n      }\n\n","sourceOld":"      // nocommit: need to load ord lazily?\n      void pushFrame(Frame frame) {\n        final FST.Arc<Long> arc = frame.arc;\n        arc.output = fstOutputs.add(topFrame().arc.output, arc.output);\n        term = grow(arc.label);\n        level++;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":5,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.IntersectTermsEnum#pushFrame(Frame).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/temp/TempFSTOrdTermsReader.TermsReader.IntersectTermsEnum#pushFrame(Frame).mjava","sourceNew":"      // nocommit: need to load ord lazily?\n      void pushFrame(Frame frame) {\n        final FST.Arc<Long> arc = frame.arc;\n        arc.output = fstOutputs.add(topFrame().arc.output, arc.output);\n        term = grow(arc.label);\n        level++;\n        assert frame == stack[level];\n      }\n\n","sourceOld":"      // nocommit: need to load ord lazily?\n      void pushFrame(Frame frame) {\n        final FST.Arc<Long> arc = frame.arc;\n        arc.output = fstOutputs.add(topFrame().arc.output, arc.output);\n        term = grow(arc.label);\n        level++;\n        assert frame == stack[level];\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"646afd4e29139bf4b06a5d88f6dcfdb5c2cd625b":["e8be4ed7ae45ceed621fa6227c0ee604c81a3638"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["646afd4e29139bf4b06a5d88f6dcfdb5c2cd625b"],"e8be4ed7ae45ceed621fa6227c0ee604c81a3638":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"646afd4e29139bf4b06a5d88f6dcfdb5c2cd625b":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e8be4ed7ae45ceed621fa6227c0ee604c81a3638","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"e8be4ed7ae45ceed621fa6227c0ee604c81a3638":["646afd4e29139bf4b06a5d88f6dcfdb5c2cd625b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}