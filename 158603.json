{"path":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocConsumer#addValuesField(Type,FieldInfo).mjava","commits":[{"id":"de5bbadeb3abac0f650298bff584bd4317bd75aa","date":1331116004,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocConsumer#addValuesField(Type,FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextNormsConsumer#addValuesField(Type,FieldInfo).mjava","sourceNew":"  @Override\n  public DocValuesConsumer addValuesField(Type type, FieldInfo field)\n      throws IOException {\n    return new SimpleTextDocValuesConsumer(SimpleTextDocValuesFormat.docValuesId(state.segmentName,\n        field.number), state.directory, state.context, type, segmentSuffix);\n  }\n\n","sourceOld":"  @Override\n  public DocValuesConsumer addValuesField(Type type, FieldInfo fieldInfo)\n      throws IOException {\n    if (type != Type.FIXED_INTS_8) {\n      throw new UnsupportedOperationException(\"Codec only supports single byte norm values. Type give: \" + type);\n    }\n    return new SimpleTextNormsDocValuesConsumer(fieldInfo);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":1,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocConsumer#addValuesField(Type,FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextNormsConsumer#addValuesField(Type,FieldInfo).mjava","sourceNew":"  @Override\n  public DocValuesConsumer addValuesField(Type type, FieldInfo field)\n      throws IOException {\n    return new SimpleTextDocValuesConsumer(SimpleTextDocValuesFormat.docValuesId(state.segmentName,\n        field.number), state.directory, state.context, type, segmentSuffix);\n  }\n\n","sourceOld":"  @Override\n  public DocValuesConsumer addValuesField(Type type, FieldInfo fieldInfo)\n      throws IOException {\n    if (type != Type.FIXED_INTS_8) {\n      throw new UnsupportedOperationException(\"Codec only supports single byte norm values. Type give: \" + type);\n    }\n    return new SimpleTextNormsDocValuesConsumer(fieldInfo);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"129c6e8ac0c0d9a110ba29e4b5f1889374f30076","date":1337725510,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocConsumer#addValuesField(Type,FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocConsumer#addValuesField(Type,FieldInfo).mjava","sourceNew":"  @Override\n  public DocValuesConsumer addValuesField(Type type, FieldInfo field)\n      throws IOException {\n    return new SimpleTextDocValuesConsumer(SimpleTextDocValuesFormat.docValuesId(state.segmentInfo.name,\n        field.number), state.directory, state.context, type, segmentSuffix);\n  }\n\n","sourceOld":"  @Override\n  public DocValuesConsumer addValuesField(Type type, FieldInfo field)\n      throws IOException {\n    return new SimpleTextDocValuesConsumer(SimpleTextDocValuesFormat.docValuesId(state.segmentName,\n        field.number), state.directory, state.context, type, segmentSuffix);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocConsumer#addValuesField(Type,FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocConsumer#addValuesField(Type,FieldInfo).mjava","sourceNew":"  @Override\n  public DocValuesConsumer addValuesField(Type type, FieldInfo field)\n      throws IOException {\n    return new SimpleTextDocValuesConsumer(SimpleTextDocValuesFormat.docValuesId(state.segmentInfo.name,\n        field.number), state.directory, state.context, type, segmentSuffix);\n  }\n\n","sourceOld":"  @Override\n  public DocValuesConsumer addValuesField(Type type, FieldInfo field)\n      throws IOException {\n    return new SimpleTextDocValuesConsumer(SimpleTextDocValuesFormat.docValuesId(state.segmentName,\n        field.number), state.directory, state.context, type, segmentSuffix);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocConsumer#addValuesField(Type,FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocConsumer#addValuesField(Type,FieldInfo).mjava","sourceNew":"  @Override\n  public DocValuesConsumer addValuesField(Type type, FieldInfo field)\n      throws IOException {\n    return new SimpleTextDocValuesConsumer(SimpleTextDocValuesFormat.docValuesId(state.segmentInfo.name,\n        field.number), state.directory, state.context, type, segmentSuffix);\n  }\n\n","sourceOld":"  @Override\n  public DocValuesConsumer addValuesField(Type type, FieldInfo field)\n      throws IOException {\n    return new SimpleTextDocValuesConsumer(SimpleTextDocValuesFormat.docValuesId(state.segmentInfo.name,\n        field.number), state.directory, state.context, type, segmentSuffix);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","de5bbadeb3abac0f650298bff584bd4317bd75aa"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["de5bbadeb3abac0f650298bff584bd4317bd75aa","129c6e8ac0c0d9a110ba29e4b5f1889374f30076"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["de5bbadeb3abac0f650298bff584bd4317bd75aa"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"de5bbadeb3abac0f650298bff584bd4317bd75aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38e3b736c7ca086d61b7dbb841c905ee115490da","de5bbadeb3abac0f650298bff584bd4317bd75aa"],"de5bbadeb3abac0f650298bff584bd4317bd75aa":["38e3b736c7ca086d61b7dbb841c905ee115490da","615ddbd81799980d0fdd95e0238e1c498b6f47b0","129c6e8ac0c0d9a110ba29e4b5f1889374f30076"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}