{"path":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#readerToDocValuesProducer(LeafReader).mjava","commits":[{"id":"505bff044e47a553f461b6f4484d1d08faf4ac85","date":1420728783,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#readerToDocValuesProducer(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MergeState#readerToDocValuesProducer(LeafReader).mjava","sourceNew":"  private static DocValuesProducer readerToDocValuesProducer(final LeafReader reader) {\n    return new DocValuesProducer() {\n\n      @Override\n      public NumericDocValues getNumeric(FieldInfo field) throws IOException {  \n        return reader.getNumericDocValues(field.name);\n      }\n\n      @Override\n      public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n        return reader.getBinaryDocValues(field.name);\n      }\n\n      @Override\n      public SortedDocValues getSorted(FieldInfo field) throws IOException {\n        return reader.getSortedDocValues(field.name);\n      }\n\n      @Override\n      public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n        return reader.getSortedNumericDocValues(field.name);\n      }\n\n      @Override\n      public SortedSetDocValues getSortedSet(FieldInfo field) throws IOException {\n        return reader.getSortedSetDocValues(field.name);\n      }\n\n      @Override\n      public Bits getDocsWithField(FieldInfo field) throws IOException {\n        return reader.getDocsWithField(field.name);\n      }\n\n      @Override\n      public void checkIntegrity() throws IOException {\n        // We already checkIntegrity the entire reader up front\n      }\n\n      @Override\n      public void close() {\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return 0;\n      }\n    };\n  }\n\n","sourceOld":"  private DocValuesProducer readerToDocValuesProducer(final LeafReader reader) {\n    return new DocValuesProducer() {\n\n      @Override\n      public NumericDocValues getNumeric(FieldInfo field) throws IOException {  \n        return reader.getNumericDocValues(field.name);\n      }\n\n      @Override\n      public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n        return reader.getBinaryDocValues(field.name);\n      }\n\n      @Override\n      public SortedDocValues getSorted(FieldInfo field) throws IOException {\n        return reader.getSortedDocValues(field.name);\n      }\n\n      @Override\n      public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n        return reader.getSortedNumericDocValues(field.name);\n      }\n\n      @Override\n      public SortedSetDocValues getSortedSet(FieldInfo field) throws IOException {\n        return reader.getSortedSetDocValues(field.name);\n      }\n\n      @Override\n      public Bits getDocsWithField(FieldInfo field) throws IOException {\n        return reader.getDocsWithField(field.name);\n      }\n\n      @Override\n      public void checkIntegrity() throws IOException {\n        // We already checkIntegrity the entire reader up front in SegmentMerger\n      }\n\n      @Override\n      public void close() {\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#readerToDocValuesProducer(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#readerToDocValuesProducer(LeafReader).mjava","sourceNew":"  private static DocValuesProducer readerToDocValuesProducer(final LeafReader reader) {\n    return new DocValuesProducer() {\n\n      @Override\n      public NumericDocValues getNumeric(FieldInfo field) throws IOException {\n        return reader.getNumericDocValues(field.name);\n      }\n\n      @Override\n      public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n        return reader.getBinaryDocValues(field.name);\n      }\n\n      @Override\n      public SortedDocValues getSorted(FieldInfo field) throws IOException {\n        return reader.getSortedDocValues(field.name);\n      }\n\n      @Override\n      public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n        return reader.getSortedNumericDocValues(field.name);\n      }\n\n      @Override\n      public SortedSetDocValues getSortedSet(FieldInfo field) throws IOException {\n        return reader.getSortedSetDocValues(field.name);\n      }\n\n      @Override\n      public void checkIntegrity() throws IOException {\n        // We already checkIntegrity the entire reader up front\n      }\n\n      @Override\n      public void close() {\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return 0;\n      }\n    };\n  }\n\n","sourceOld":"  private static DocValuesProducer readerToDocValuesProducer(final LeafReader reader) {\n    return new DocValuesProducer() {\n\n      @Override\n      public NumericDocValues getNumeric(FieldInfo field) throws IOException {  \n        return reader.getNumericDocValues(field.name);\n      }\n\n      @Override\n      public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n        return reader.getBinaryDocValues(field.name);\n      }\n\n      @Override\n      public SortedDocValues getSorted(FieldInfo field) throws IOException {\n        return reader.getSortedDocValues(field.name);\n      }\n\n      @Override\n      public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n        return reader.getSortedNumericDocValues(field.name);\n      }\n\n      @Override\n      public SortedSetDocValues getSortedSet(FieldInfo field) throws IOException {\n        return reader.getSortedSetDocValues(field.name);\n      }\n\n      @Override\n      public Bits getDocsWithField(FieldInfo field) throws IOException {\n        return reader.getDocsWithField(field.name);\n      }\n\n      @Override\n      public void checkIntegrity() throws IOException {\n        // We already checkIntegrity the entire reader up front\n      }\n\n      @Override\n      public void close() {\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#readerToDocValuesProducer(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#readerToDocValuesProducer(LeafReader).mjava","sourceNew":"  private static DocValuesProducer readerToDocValuesProducer(final LeafReader reader) {\n    return new DocValuesProducer() {\n\n      @Override\n      public NumericDocValues getNumeric(FieldInfo field) throws IOException {\n        return reader.getNumericDocValues(field.name);\n      }\n\n      @Override\n      public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n        return reader.getBinaryDocValues(field.name);\n      }\n\n      @Override\n      public SortedDocValues getSorted(FieldInfo field) throws IOException {\n        return reader.getSortedDocValues(field.name);\n      }\n\n      @Override\n      public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n        return reader.getSortedNumericDocValues(field.name);\n      }\n\n      @Override\n      public SortedSetDocValues getSortedSet(FieldInfo field) throws IOException {\n        return reader.getSortedSetDocValues(field.name);\n      }\n\n      @Override\n      public void checkIntegrity() throws IOException {\n        // We already checkIntegrity the entire reader up front\n      }\n\n      @Override\n      public void close() {\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return 0;\n      }\n    };\n  }\n\n","sourceOld":"  private static DocValuesProducer readerToDocValuesProducer(final LeafReader reader) {\n    return new DocValuesProducer() {\n\n      @Override\n      public NumericDocValues getNumeric(FieldInfo field) throws IOException {  \n        return reader.getNumericDocValues(field.name);\n      }\n\n      @Override\n      public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n        return reader.getBinaryDocValues(field.name);\n      }\n\n      @Override\n      public SortedDocValues getSorted(FieldInfo field) throws IOException {\n        return reader.getSortedDocValues(field.name);\n      }\n\n      @Override\n      public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n        return reader.getSortedNumericDocValues(field.name);\n      }\n\n      @Override\n      public SortedSetDocValues getSortedSet(FieldInfo field) throws IOException {\n        return reader.getSortedSetDocValues(field.name);\n      }\n\n      @Override\n      public Bits getDocsWithField(FieldInfo field) throws IOException {\n        return reader.getDocsWithField(field.name);\n      }\n\n      @Override\n      public void checkIntegrity() throws IOException {\n        // We already checkIntegrity the entire reader up front\n      }\n\n      @Override\n      public void close() {\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#readerToDocValuesProducer(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#readerToDocValuesProducer(LeafReader).mjava","sourceNew":"  private static DocValuesProducer readerToDocValuesProducer(final LeafReader reader) {\n    return new DocValuesProducer() {\n\n      @Override\n      public NumericDocValues getNumeric(FieldInfo field) throws IOException {\n        return reader.getNumericDocValues(field.name);\n      }\n\n      @Override\n      public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n        return reader.getBinaryDocValues(field.name);\n      }\n\n      @Override\n      public SortedDocValues getSorted(FieldInfo field) throws IOException {\n        return reader.getSortedDocValues(field.name);\n      }\n\n      @Override\n      public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n        return reader.getSortedNumericDocValues(field.name);\n      }\n\n      @Override\n      public SortedSetDocValues getSortedSet(FieldInfo field) throws IOException {\n        return reader.getSortedSetDocValues(field.name);\n      }\n\n      @Override\n      public void checkIntegrity() throws IOException {\n        // We already checkIntegrity the entire reader up front\n      }\n\n      @Override\n      public void close() {\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return 0;\n      }\n    };\n  }\n\n","sourceOld":"  private static DocValuesProducer readerToDocValuesProducer(final LeafReader reader) {\n    return new DocValuesProducer() {\n\n      @Override\n      public NumericDocValues getNumeric(FieldInfo field) throws IOException {  \n        return reader.getNumericDocValues(field.name);\n      }\n\n      @Override\n      public BinaryDocValues getBinary(FieldInfo field) throws IOException {\n        return reader.getBinaryDocValues(field.name);\n      }\n\n      @Override\n      public SortedDocValues getSorted(FieldInfo field) throws IOException {\n        return reader.getSortedDocValues(field.name);\n      }\n\n      @Override\n      public SortedNumericDocValues getSortedNumeric(FieldInfo field) throws IOException {\n        return reader.getSortedNumericDocValues(field.name);\n      }\n\n      @Override\n      public SortedSetDocValues getSortedSet(FieldInfo field) throws IOException {\n        return reader.getSortedSetDocValues(field.name);\n      }\n\n      @Override\n      public Bits getDocsWithField(FieldInfo field) throws IOException {\n        return reader.getDocsWithField(field.name);\n      }\n\n      @Override\n      public void checkIntegrity() throws IOException {\n        // We already checkIntegrity the entire reader up front\n      }\n\n      @Override\n      public void close() {\n      }\n\n      @Override\n      public long ramBytesUsed() {\n        return 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["505bff044e47a553f461b6f4484d1d08faf4ac85","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["505bff044e47a553f461b6f4484d1d08faf4ac85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}