{"path":"lucene/core/src/java/org/apache/lucene/store/MMapDirectory#createSlicer(String,IOContext).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/MMapDirectory#createSlicer(String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/MMapDirectory#createSlicer(String,IOContext).mjava","sourceNew":"  public IndexInputSlicer createSlicer(final String name, final IOContext context) throws IOException {\n    ensureOpen();\n    final File f = new File(getDirectory(), name);\n    final RandomAccessFile raf = new RandomAccessFile(f, \"r\");\n    return new IndexInputSlicer() {\n      @Override\n      public void close() throws IOException {\n        raf.close();\n      }\n\n      @Override\n      public IndexInput openSlice(String sliceDescription, long offset, long length) throws IOException {\n        return new MMapIndexInput(\"MMapIndexInput(\" + sliceDescription + \" in path=\\\"\" + f + \"\\\" slice=\" + offset + \":\" + (offset+length) + \")\", raf, offset, length, chunkSizePower);\n      }\n\n      @Override\n      public IndexInput openFullSlice() throws IOException {\n        return openSlice(\"full-slice\", 0, raf.length());\n      }\n    };\n  }\n\n","sourceOld":"  public IndexInputSlicer createSlicer(final String name, final IOContext context) throws IOException {\n    ensureOpen();\n    final File f = new File(getDirectory(), name);\n    final RandomAccessFile raf = new RandomAccessFile(f, \"r\");\n    return new IndexInputSlicer() {\n      @Override\n      public void close() throws IOException {\n        raf.close();\n      }\n\n      @Override\n      public IndexInput openSlice(String sliceDescription, long offset, long length) throws IOException {\n        return new MMapIndexInput(\"MMapIndexInput(\" + sliceDescription + \" in path=\\\"\" + f + \"\\\" slice=\" + offset + \":\" + (offset+length) + \")\", raf, offset, length, chunkSizePower);\n      }\n\n      @Override\n      public IndexInput openFullSlice() throws IOException {\n        return openSlice(\"full-slice\", 0, raf.length());\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e5e734869d76c22acfc12bc53ecbfcc1606c2f5","date":1347072117,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/MMapDirectory#createSlicer(String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/MMapDirectory#createSlicer(String,IOContext).mjava","sourceNew":"  @Override\n  public IndexInputSlicer createSlicer(String name, IOContext context) throws IOException {\n    final MMapIndexInput full = (MMapIndexInput) openInput(name, context);\n    return new IndexInputSlicer() {\n      @Override\n      public IndexInput openSlice(String sliceDescription, long offset, long length) throws IOException {\n        ensureOpen();\n        return full.slice(sliceDescription, offset, length);\n      }\n      \n      @Override\n      public void close() throws IOException {\n        full.close();\n      }\n    };\n  }\n\n","sourceOld":"  public IndexInputSlicer createSlicer(final String name, final IOContext context) throws IOException {\n    ensureOpen();\n    final File f = new File(getDirectory(), name);\n    final RandomAccessFile raf = new RandomAccessFile(f, \"r\");\n    return new IndexInputSlicer() {\n      @Override\n      public void close() throws IOException {\n        raf.close();\n      }\n\n      @Override\n      public IndexInput openSlice(String sliceDescription, long offset, long length) throws IOException {\n        return new MMapIndexInput(\"MMapIndexInput(\" + sliceDescription + \" in path=\\\"\" + f + \"\\\" slice=\" + offset + \":\" + (offset+length) + \")\", raf, offset, length, chunkSizePower);\n      }\n\n      @Override\n      public IndexInput openFullSlice() throws IOException {\n        return openSlice(\"full-slice\", 0, raf.length());\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3","date":1400334249,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/store/MMapDirectory#createSlicer(String,IOContext).mjava","sourceNew":null,"sourceOld":"  @Override\n  public IndexInputSlicer createSlicer(String name, IOContext context) throws IOException {\n    final MMapIndexInput full = (MMapIndexInput) openInput(name, context);\n    return new IndexInputSlicer() {\n      @Override\n      public IndexInput openSlice(String sliceDescription, long offset, long length) throws IOException {\n        ensureOpen();\n        return full.slice(sliceDescription, offset, length);\n      }\n      \n      @Override\n      public void close() throws IOException {\n        full.close();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/store/MMapDirectory#createSlicer(String,IOContext).mjava","sourceNew":null,"sourceOld":"  @Override\n  public IndexInputSlicer createSlicer(String name, IOContext context) throws IOException {\n    final MMapIndexInput full = (MMapIndexInput) openInput(name, context);\n    return new IndexInputSlicer() {\n      @Override\n      public IndexInput openSlice(String sliceDescription, long offset, long length) throws IOException {\n        ensureOpen();\n        return full.slice(sliceDescription, offset, length);\n      }\n      \n      @Override\n      public void close() throws IOException {\n        full.close();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4e5e734869d76c22acfc12bc53ecbfcc1606c2f5":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3":["4e5e734869d76c22acfc12bc53ecbfcc1606c2f5"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"56572ec06f1407c066d6b7399413178b33176cd8":["4e5e734869d76c22acfc12bc53ecbfcc1606c2f5","e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3"]},"commit2Childs":{"4e5e734869d76c22acfc12bc53ecbfcc1606c2f5":["e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3","56572ec06f1407c066d6b7399413178b33176cd8"],"e7db8f2ddb77c9e36f948c8283a3b61bdfb6c2f3":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["4e5e734869d76c22acfc12bc53ecbfcc1606c2f5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}