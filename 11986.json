{"path":"solr/core/src/java/org/apache/solr/core/RequestHandlers#applyParamSet(SolrConfig,PluginInfo).mjava","commits":[{"id":"0f7392e322590b1c5c54beda8e0dc4dac5a0dc70","date":1409367206,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestHandlers#applyParamSet(SolrConfig,PluginInfo).mjava","pathOld":"/dev/null","sourceNew":"  private PluginInfo applyParamSet(SolrConfig config, PluginInfo info) {\n    List<ParamSet> paramSets= new ArrayList<>();\n    String p = info.attributes.get(\"paramSet\");\n    if(p!=null) {\n      for (String paramSet : StrUtils.splitSmart(p, ',')) {\n        if(config.getParamSets().containsKey(paramSet)) paramSets.add(config.getParamSets().get(paramSet));\n        else log.warn(\"INVALID paramSet {} in requestHandler {}\", paramSet, info.toString());\n      }\n    }\n    for (ParamSet paramSet : config.getParamSets().values()) {\n      if(paramSet.matchPath(info.name)) paramSets.add(paramSet);\n    }\n    if(!paramSets.isEmpty()){\n      info = new PluginInfo(info.type, info.attributes, info.initArgs.clone(), info.children);\n      for (ParamSet paramSet : paramSets) {\n        paramSet.apply(info.initArgs);\n      }\n    }\n    return info;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb537081ae8ce706dd40a122f57a9e7b8a112be8","date":1411065946,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestHandlers#applyParamSet(SolrConfig,PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/RequestHandlers#applyParamSet(SolrConfig,PluginInfo).mjava","sourceNew":"  private PluginInfo applyParamSet(SolrConfig config, PluginInfo info) {\n    List<InitParams> ags = new ArrayList<>();\n    String p = info.attributes.get(InitParams.TYPE);\n    if(p!=null) {\n      for (String arg : StrUtils.splitSmart(p, ',')) {\n        if(config.getInitParams().containsKey(arg)) ags.add(config.getInitParams().get(arg));\n        else log.warn(\"INVALID paramSet {} in requestHandler {}\", arg, info.toString());\n      }\n    }\n    for (InitParams args : config.getInitParams().values()) {\n      if(args.matchPath(info.name)) ags.add(args);\n    }\n    if(!ags.isEmpty()){\n      info = new PluginInfo(info.type, info.attributes, info.initArgs.clone(), info.children);\n      for (InitParams args : ags) {\n        args.apply(info.initArgs);\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  private PluginInfo applyParamSet(SolrConfig config, PluginInfo info) {\n    List<ParamSet> paramSets= new ArrayList<>();\n    String p = info.attributes.get(\"paramSet\");\n    if(p!=null) {\n      for (String paramSet : StrUtils.splitSmart(p, ',')) {\n        if(config.getParamSets().containsKey(paramSet)) paramSets.add(config.getParamSets().get(paramSet));\n        else log.warn(\"INVALID paramSet {} in requestHandler {}\", paramSet, info.toString());\n      }\n    }\n    for (ParamSet paramSet : config.getParamSets().values()) {\n      if(paramSet.matchPath(info.name)) paramSets.add(paramSet);\n    }\n    if(!paramSets.isEmpty()){\n      info = new PluginInfo(info.type, info.attributes, info.initArgs.clone(), info.children);\n      for (ParamSet paramSet : paramSets) {\n        paramSet.apply(info.initArgs);\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8f9fd570bc31c72df35ff9374f45131e8e74d0c","date":1415015820,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RequestHandlers#applyInitParams(SolrConfig,PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/RequestHandlers#applyParamSet(SolrConfig,PluginInfo).mjava","sourceNew":"  private PluginInfo applyInitParams(SolrConfig config, PluginInfo info) {\n    List<InitParams> ags = new ArrayList<>();\n    String p = info.attributes.get(InitParams.TYPE);\n    if(p!=null) {\n      for (String arg : StrUtils.splitSmart(p, ',')) {\n        if(config.getInitParams().containsKey(arg)) ags.add(config.getInitParams().get(arg));\n        else log.warn(\"INVALID paramSet {} in requestHandler {}\", arg, info.toString());\n      }\n    }\n    for (InitParams args : config.getInitParams().values())\n      if(args.matchPath(info.name)) ags.add(args);\n    if(!ags.isEmpty()){\n      info = new PluginInfo(info.type, info.attributes, info.initArgs.clone(), info.children);\n      for (InitParams initParam : ags) {\n        initParam.apply(info.initArgs);\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  private PluginInfo applyParamSet(SolrConfig config, PluginInfo info) {\n    List<InitParams> ags = new ArrayList<>();\n    String p = info.attributes.get(InitParams.TYPE);\n    if(p!=null) {\n      for (String arg : StrUtils.splitSmart(p, ',')) {\n        if(config.getInitParams().containsKey(arg)) ags.add(config.getInitParams().get(arg));\n        else log.warn(\"INVALID paramSet {} in requestHandler {}\", arg, info.toString());\n      }\n    }\n    for (InitParams args : config.getInitParams().values()) {\n      if(args.matchPath(info.name)) ags.add(args);\n    }\n    if(!ags.isEmpty()){\n      info = new PluginInfo(info.type, info.attributes, info.initArgs.clone(), info.children);\n      for (InitParams args : ags) {\n        args.apply(info.initArgs);\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb537081ae8ce706dd40a122f57a9e7b8a112be8":["0f7392e322590b1c5c54beda8e0dc4dac5a0dc70"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c8f9fd570bc31c72df35ff9374f45131e8e74d0c":["bb537081ae8ce706dd40a122f57a9e7b8a112be8"],"0f7392e322590b1c5c54beda8e0dc4dac5a0dc70":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c8f9fd570bc31c72df35ff9374f45131e8e74d0c"]},"commit2Childs":{"bb537081ae8ce706dd40a122f57a9e7b8a112be8":["c8f9fd570bc31c72df35ff9374f45131e8e74d0c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f7392e322590b1c5c54beda8e0dc4dac5a0dc70"],"c8f9fd570bc31c72df35ff9374f45131e8e74d0c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0f7392e322590b1c5c54beda8e0dc4dac5a0dc70":["bb537081ae8ce706dd40a122f57a9e7b8a112be8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}