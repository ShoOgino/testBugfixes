{"path":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/segmentation/TestICUTokenizerFactory#testKeywordTokenizeCyrillicAndThai().mjava","commits":[{"id":"5d76c4ba90dcb3d7e77f4454d13b4c9beb9c16cb","date":1354558878,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/segmentation/TestICUTokenizerFactory#testKeywordTokenizeCyrillicAndThai().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Specify more than one script/rule file pair.\n   * Override default DefaultICUTokenizerConfig Thai script tokenization.\n   * Use the same rule file for both scripts.\n   */\n  public void testKeywordTokenizeCyrillicAndThai() throws Exception {\n    Reader reader = new StringReader\n        (\"Some English.  Немного русский.  ข้อความภาษาไทยเล็ก ๆ น้อย ๆ  More English.\");\n    ICUTokenizerFactory factory = new ICUTokenizerFactory();\n    final Map<String,String> args = new HashMap<String,String>();\n    args.put(ICUTokenizerFactory.RULEFILES, \"Cyrl:KeywordTokenizer.rbbi,Thai:KeywordTokenizer.rbbi\");\n    factory.init(args);\n    factory.inform(new ClasspathResourceLoader(getClass()));\n    TokenStream stream = factory.create(reader);\n    assertTokenStreamContents(stream, new String[] { \"Some\", \"English\",\n        \"Немного русский.  \",\n        \"ข้อความภาษาไทยเล็ก ๆ น้อย ๆ  \",\n        \"More\", \"English\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/segmentation/TestICUTokenizerFactory#testKeywordTokenizeCyrillicAndThai().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Specify more than one script/rule file pair.\n   * Override default DefaultICUTokenizerConfig Thai script tokenization.\n   * Use the same rule file for both scripts.\n   */\n  public void testKeywordTokenizeCyrillicAndThai() throws Exception {\n    Reader reader = new StringReader\n        (\"Some English.  Немного русский.  ข้อความภาษาไทยเล็ก ๆ น้อย ๆ  More English.\");\n    ICUTokenizerFactory factory = new ICUTokenizerFactory();\n    final Map<String,String> args = new HashMap<String,String>();\n    args.put(ICUTokenizerFactory.RULEFILES, \"Cyrl:KeywordTokenizer.rbbi,Thai:KeywordTokenizer.rbbi\");\n    factory.init(args);\n    factory.inform(new ClasspathResourceLoader(getClass()));\n    TokenStream stream = factory.create(reader);\n    assertTokenStreamContents(stream, new String[] { \"Some\", \"English\",\n        \"Немного русский.  \",\n        \"ข้อความภาษาไทยเล็ก ๆ น้อย ๆ  \",\n        \"More\", \"English\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/segmentation/TestICUTokenizerFactory#testKeywordTokenizeCyrillicAndThai().mjava","pathOld":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/segmentation/TestICUTokenizerFactory#testKeywordTokenizeCyrillicAndThai().mjava","sourceNew":"  /**\n   * Specify more than one script/rule file pair.\n   * Override default DefaultICUTokenizerConfig Thai script tokenization.\n   * Use the same rule file for both scripts.\n   */\n  public void testKeywordTokenizeCyrillicAndThai() throws Exception {\n    Reader reader = new StringReader\n        (\"Some English.  Немного русский.  ข้อความภาษาไทยเล็ก ๆ น้อย ๆ  More English.\");\n    final Map<String,String> args = new HashMap<String,String>();\n    args.put(ICUTokenizerFactory.RULEFILES, \"Cyrl:KeywordTokenizer.rbbi,Thai:KeywordTokenizer.rbbi\");\n    ICUTokenizerFactory factory = new ICUTokenizerFactory(args);\n    factory.inform(new ClasspathResourceLoader(getClass()));\n    TokenStream stream = factory.create(reader);\n    assertTokenStreamContents(stream, new String[] { \"Some\", \"English\",\n        \"Немного русский.  \",\n        \"ข้อความภาษาไทยเล็ก ๆ น้อย ๆ  \",\n        \"More\", \"English\" });\n  }\n\n","sourceOld":"  /**\n   * Specify more than one script/rule file pair.\n   * Override default DefaultICUTokenizerConfig Thai script tokenization.\n   * Use the same rule file for both scripts.\n   */\n  public void testKeywordTokenizeCyrillicAndThai() throws Exception {\n    Reader reader = new StringReader\n        (\"Some English.  Немного русский.  ข้อความภาษาไทยเล็ก ๆ น้อย ๆ  More English.\");\n    ICUTokenizerFactory factory = new ICUTokenizerFactory();\n    final Map<String,String> args = new HashMap<String,String>();\n    args.put(ICUTokenizerFactory.RULEFILES, \"Cyrl:KeywordTokenizer.rbbi,Thai:KeywordTokenizer.rbbi\");\n    factory.init(args);\n    factory.inform(new ClasspathResourceLoader(getClass()));\n    TokenStream stream = factory.create(reader);\n    assertTokenStreamContents(stream, new String[] { \"Some\", \"English\",\n        \"Немного русский.  \",\n        \"ข้อความภาษาไทยเล็ก ๆ น้อย ๆ  \",\n        \"More\", \"English\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/segmentation/TestICUTokenizerFactory#testKeywordTokenizeCyrillicAndThai().mjava","pathOld":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/segmentation/TestICUTokenizerFactory#testKeywordTokenizeCyrillicAndThai().mjava","sourceNew":"  /**\n   * Specify more than one script/rule file pair.\n   * Override default DefaultICUTokenizerConfig Thai script tokenization.\n   * Use the same rule file for both scripts.\n   */\n  public void testKeywordTokenizeCyrillicAndThai() throws Exception {\n    Reader reader = new StringReader\n        (\"Some English.  Немного русский.  ข้อความภาษาไทยเล็ก ๆ น้อย ๆ  More English.\");\n    final Map<String,String> args = new HashMap<String,String>();\n    args.put(ICUTokenizerFactory.RULEFILES, \"Cyrl:KeywordTokenizer.rbbi,Thai:KeywordTokenizer.rbbi\");\n    ICUTokenizerFactory factory = new ICUTokenizerFactory(args);\n    factory.inform(new ClasspathResourceLoader(getClass()));\n    Tokenizer stream = factory.create();\n    stream.setReader(reader);\n    assertTokenStreamContents(stream, new String[] { \"Some\", \"English\",\n        \"Немного русский.  \",\n        \"ข้อความภาษาไทยเล็ก ๆ น้อย ๆ  \",\n        \"More\", \"English\" });\n  }\n\n","sourceOld":"  /**\n   * Specify more than one script/rule file pair.\n   * Override default DefaultICUTokenizerConfig Thai script tokenization.\n   * Use the same rule file for both scripts.\n   */\n  public void testKeywordTokenizeCyrillicAndThai() throws Exception {\n    Reader reader = new StringReader\n        (\"Some English.  Немного русский.  ข้อความภาษาไทยเล็ก ๆ น้อย ๆ  More English.\");\n    final Map<String,String> args = new HashMap<String,String>();\n    args.put(ICUTokenizerFactory.RULEFILES, \"Cyrl:KeywordTokenizer.rbbi,Thai:KeywordTokenizer.rbbi\");\n    ICUTokenizerFactory factory = new ICUTokenizerFactory(args);\n    factory.inform(new ClasspathResourceLoader(getClass()));\n    TokenStream stream = factory.create(reader);\n    assertTokenStreamContents(stream, new String[] { \"Some\", \"English\",\n        \"Немного русский.  \",\n        \"ข้อความภาษาไทยเล็ก ๆ น้อย ๆ  \",\n        \"More\", \"English\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/segmentation/TestICUTokenizerFactory#testKeywordTokenizeCyrillicAndThai().mjava","pathOld":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/segmentation/TestICUTokenizerFactory#testKeywordTokenizeCyrillicAndThai().mjava","sourceNew":"  /**\n   * Specify more than one script/rule file pair.\n   * Override default DefaultICUTokenizerConfig Thai script tokenization.\n   * Use the same rule file for both scripts.\n   */\n  public void testKeywordTokenizeCyrillicAndThai() throws Exception {\n    Reader reader = new StringReader\n        (\"Some English.  Немного русский.  ข้อความภาษาไทยเล็ก ๆ น้อย ๆ  More English.\");\n    final Map<String,String> args = new HashMap<>();\n    args.put(ICUTokenizerFactory.RULEFILES, \"Cyrl:KeywordTokenizer.rbbi,Thai:KeywordTokenizer.rbbi\");\n    ICUTokenizerFactory factory = new ICUTokenizerFactory(args);\n    factory.inform(new ClasspathResourceLoader(getClass()));\n    Tokenizer stream = factory.create();\n    stream.setReader(reader);\n    assertTokenStreamContents(stream, new String[] { \"Some\", \"English\",\n        \"Немного русский.  \",\n        \"ข้อความภาษาไทยเล็ก ๆ น้อย ๆ  \",\n        \"More\", \"English\" });\n  }\n\n","sourceOld":"  /**\n   * Specify more than one script/rule file pair.\n   * Override default DefaultICUTokenizerConfig Thai script tokenization.\n   * Use the same rule file for both scripts.\n   */\n  public void testKeywordTokenizeCyrillicAndThai() throws Exception {\n    Reader reader = new StringReader\n        (\"Some English.  Немного русский.  ข้อความภาษาไทยเล็ก ๆ น้อย ๆ  More English.\");\n    final Map<String,String> args = new HashMap<String,String>();\n    args.put(ICUTokenizerFactory.RULEFILES, \"Cyrl:KeywordTokenizer.rbbi,Thai:KeywordTokenizer.rbbi\");\n    ICUTokenizerFactory factory = new ICUTokenizerFactory(args);\n    factory.inform(new ClasspathResourceLoader(getClass()));\n    Tokenizer stream = factory.create();\n    stream.setReader(reader);\n    assertTokenStreamContents(stream, new String[] { \"Some\", \"English\",\n        \"Немного русский.  \",\n        \"ข้อความภาษาไทยเล็ก ๆ น้อย ๆ  \",\n        \"More\", \"English\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75","date":1399205975,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/segmentation/TestICUTokenizerFactory#testKeywordTokenizeCyrillicAndThai().mjava","pathOld":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/segmentation/TestICUTokenizerFactory#testKeywordTokenizeCyrillicAndThai().mjava","sourceNew":"  /**\n   * Specify more than one script/rule file pair.\n   * Override default DefaultICUTokenizerConfig Thai script tokenization.\n   * Use the same rule file for both scripts.\n   */\n  public void testKeywordTokenizeCyrillicAndThai() throws Exception {\n    Reader reader = new StringReader\n        (\"Some English.  Немного русский.  ข้อความภาษาไทยเล็ก ๆ น้อย ๆ  More English.\");\n    final Map<String,String> args = new HashMap<>();\n    args.put(ICUTokenizerFactory.RULEFILES, \"Cyrl:KeywordTokenizer.rbbi,Thai:KeywordTokenizer.rbbi\");\n    ICUTokenizerFactory factory = new ICUTokenizerFactory(args);\n    factory.inform(new ClasspathResourceLoader(getClass()));\n    Tokenizer stream = factory.create(newAttributeFactory());\n    stream.setReader(reader);\n    assertTokenStreamContents(stream, new String[] { \"Some\", \"English\",\n        \"Немного русский.  \",\n        \"ข้อความภาษาไทยเล็ก ๆ น้อย ๆ  \",\n        \"More\", \"English\" });\n  }\n\n","sourceOld":"  /**\n   * Specify more than one script/rule file pair.\n   * Override default DefaultICUTokenizerConfig Thai script tokenization.\n   * Use the same rule file for both scripts.\n   */\n  public void testKeywordTokenizeCyrillicAndThai() throws Exception {\n    Reader reader = new StringReader\n        (\"Some English.  Немного русский.  ข้อความภาษาไทยเล็ก ๆ น้อย ๆ  More English.\");\n    final Map<String,String> args = new HashMap<>();\n    args.put(ICUTokenizerFactory.RULEFILES, \"Cyrl:KeywordTokenizer.rbbi,Thai:KeywordTokenizer.rbbi\");\n    ICUTokenizerFactory factory = new ICUTokenizerFactory(args);\n    factory.inform(new ClasspathResourceLoader(getClass()));\n    Tokenizer stream = factory.create();\n    stream.setReader(reader);\n    assertTokenStreamContents(stream, new String[] { \"Some\", \"English\",\n        \"Немного русский.  \",\n        \"ข้อความภาษาไทยเล็ก ๆ น้อย ๆ  \",\n        \"More\", \"English\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"5d76c4ba90dcb3d7e77f4454d13b4c9beb9c16cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5d76c4ba90dcb3d7e77f4454d13b4c9beb9c16cb"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["5d76c4ba90dcb3d7e77f4454d13b4c9beb9c16cb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["923f36bb0db6f793cf62dbb68723ae3bfbaf1d75"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["923f36bb0db6f793cf62dbb68723ae3bfbaf1d75"],"5d76c4ba90dcb3d7e77f4454d13b4c9beb9c16cb":["407687e67faf6e1f02a211ca078d8e3eed631027","57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5d76c4ba90dcb3d7e77f4454d13b4c9beb9c16cb","407687e67faf6e1f02a211ca078d8e3eed631027"],"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}