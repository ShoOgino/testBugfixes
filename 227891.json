{"path":"backwards/src/java/org/apache/lucene/analysis/ISOLatin1AccentFilter#incrementToken().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/analysis/ISOLatin1AccentFilter#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public final boolean incrementToken() throws java.io.IOException {    \n    if (input.incrementToken()) {\n      final char[] buffer = termAtt.termBuffer();\n      final int length = termAtt.termLength();\n      // If no characters actually require rewriting then we\n      // just return token as-is:\n      for(int i=0;i<length;i++) {\n        final char c = buffer[i];\n        if (c >= '\\u00c0' && c <= '\\uFB06') {\n          removeAccents(buffer, length);\n          termAtt.setTermBuffer(output, 0, outputPos);\n          break;\n        }\n      }\n      return true;\n    } else\n      return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/analysis/ISOLatin1AccentFilter#incrementToken().mjava","pathOld":"backwards/src/java/org/apache/lucene/analysis/ISOLatin1AccentFilter#incrementToken().mjava","sourceNew":"  @Override\n  public final boolean incrementToken() throws java.io.IOException {    \n    if (input.incrementToken()) {\n      final char[] buffer = termAtt.termBuffer();\n      final int length = termAtt.termLength();\n      // If no characters actually require rewriting then we\n      // just return token as-is:\n      for(int i=0;i<length;i++) {\n        final char c = buffer[i];\n        if (c >= '\\u00c0' && c <= '\\uFB06') {\n          removeAccents(buffer, length);\n          termAtt.setTermBuffer(output, 0, outputPos);\n          break;\n        }\n      }\n      return true;\n    } else\n      return false;\n  }\n\n","sourceOld":"  @Override\n  public final boolean incrementToken() throws java.io.IOException {    \n    if (input.incrementToken()) {\n      final char[] buffer = termAtt.termBuffer();\n      final int length = termAtt.termLength();\n      // If no characters actually require rewriting then we\n      // just return token as-is:\n      for(int i=0;i<length;i++) {\n        final char c = buffer[i];\n        if (c >= '\\u00c0' && c <= '\\uFB06') {\n          removeAccents(buffer, length);\n          termAtt.setTermBuffer(output, 0, outputPos);\n          break;\n        }\n      }\n      return true;\n    } else\n      return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":6,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/ISOLatin1AccentFilter#incrementToken().mjava","pathOld":"backwards/src/java/org/apache/lucene/analysis/ISOLatin1AccentFilter#incrementToken().mjava","sourceNew":"  @Override\n  public final boolean incrementToken() throws java.io.IOException {    \n    if (input.incrementToken()) {\n      final char[] buffer = termAtt.termBuffer();\n      final int length = termAtt.termLength();\n      // If no characters actually require rewriting then we\n      // just return token as-is:\n      for(int i=0;i<length;i++) {\n        final char c = buffer[i];\n        if (c >= '\\u00c0' && c <= '\\uFB06') {\n          removeAccents(buffer, length);\n          termAtt.setTermBuffer(output, 0, outputPos);\n          break;\n        }\n      }\n      return true;\n    } else\n      return false;\n  }\n\n","sourceOld":"  @Override\n  public final boolean incrementToken() throws java.io.IOException {    \n    if (input.incrementToken()) {\n      final char[] buffer = termAtt.termBuffer();\n      final int length = termAtt.termLength();\n      // If no characters actually require rewriting then we\n      // just return token as-is:\n      for(int i=0;i<length;i++) {\n        final char c = buffer[i];\n        if (c >= '\\u00c0' && c <= '\\uFB06') {\n          removeAccents(buffer, length);\n          termAtt.setTermBuffer(output, 0, outputPos);\n          break;\n        }\n      }\n      return true;\n    } else\n      return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}