{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getChildResources().mjava","commits":[{"id":"0936055c0eed56be3e4ae5c9db5b0e355390736a","date":1410874015,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getChildResources().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Iterable<? extends Accountable> getChildResources() {\n    ensureOpen();\n    List<Accountable> resources = new ArrayList<>();\n    if (core.fields != null) {\n      resources.add(Accountables.namedAccountable(\"postings\", core.fields));\n    }\n    if (core.normsProducer != null) {\n      resources.add(Accountables.namedAccountable(\"norms\", core.normsProducer));\n    }\n    if (docValuesProducer != null) {\n      resources.add(Accountables.namedAccountable(\"docvalues\", docValuesProducer));\n    }\n    if (getFieldsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"stored fields\", getFieldsReader()));\n    }\n    if (getTermVectorsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"term vectors\", getTermVectorsReader()));\n    }\n    return resources;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["8028ab7a24273833d53d35eb160dba5b57283cf5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8028ab7a24273833d53d35eb160dba5b57283cf5","date":1416767720,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getChildResources().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getChildResources().mjava","sourceNew":"  @Override\n  public Iterable<? extends Accountable> getChildResources() {\n    ensureOpen();\n    List<Accountable> resources = new ArrayList<>();\n    resources.add(Accountables.namedAccountable(\"postings\", core.fields));\n    if (core.normsProducer != null) {\n      resources.add(Accountables.namedAccountable(\"norms\", core.normsProducer));\n    }\n    if (docValuesProducer != null) {\n      resources.add(Accountables.namedAccountable(\"docvalues\", docValuesProducer));\n    }\n    if (getFieldsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"stored fields\", getFieldsReader()));\n    }\n    if (getTermVectorsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"term vectors\", getTermVectorsReader()));\n    }\n    return resources;\n  }\n\n","sourceOld":"  @Override\n  public Iterable<? extends Accountable> getChildResources() {\n    ensureOpen();\n    List<Accountable> resources = new ArrayList<>();\n    if (core.fields != null) {\n      resources.add(Accountables.namedAccountable(\"postings\", core.fields));\n    }\n    if (core.normsProducer != null) {\n      resources.add(Accountables.namedAccountable(\"norms\", core.normsProducer));\n    }\n    if (docValuesProducer != null) {\n      resources.add(Accountables.namedAccountable(\"docvalues\", docValuesProducer));\n    }\n    if (getFieldsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"stored fields\", getFieldsReader()));\n    }\n    if (getTermVectorsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"term vectors\", getTermVectorsReader()));\n    }\n    return resources;\n  }\n\n","bugFix":["0936055c0eed56be3e4ae5c9db5b0e355390736a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fca6c8418a91a6d30730ad418791ddf59ec3d07a","date":1418666585,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getChildResources().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getChildResources().mjava","sourceNew":"  @Override\n  public Iterable<Accountable> getChildResources() {\n    ensureOpen();\n    List<Accountable> resources = new ArrayList<>();\n    resources.add(Accountables.namedAccountable(\"postings\", core.fields));\n    if (core.normsProducer != null) {\n      resources.add(Accountables.namedAccountable(\"norms\", core.normsProducer));\n    }\n    if (docValuesProducer != null) {\n      resources.add(Accountables.namedAccountable(\"docvalues\", docValuesProducer));\n    }\n    if (getFieldsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"stored fields\", getFieldsReader()));\n    }\n    if (getTermVectorsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"term vectors\", getTermVectorsReader()));\n    }\n    return resources;\n  }\n\n","sourceOld":"  @Override\n  public Iterable<? extends Accountable> getChildResources() {\n    ensureOpen();\n    List<Accountable> resources = new ArrayList<>();\n    resources.add(Accountables.namedAccountable(\"postings\", core.fields));\n    if (core.normsProducer != null) {\n      resources.add(Accountables.namedAccountable(\"norms\", core.normsProducer));\n    }\n    if (docValuesProducer != null) {\n      resources.add(Accountables.namedAccountable(\"docvalues\", docValuesProducer));\n    }\n    if (getFieldsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"stored fields\", getFieldsReader()));\n    }\n    if (getTermVectorsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"term vectors\", getTermVectorsReader()));\n    }\n    return resources;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ba6ae8e3c153347cbb605024ca7550f5c91b178","date":1420215916,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getChildResources().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getChildResources().mjava","sourceNew":"  @Override\n  public Collection<Accountable> getChildResources() {\n    ensureOpen();\n    List<Accountable> resources = new ArrayList<>();\n    resources.add(Accountables.namedAccountable(\"postings\", core.fields));\n    if (core.normsProducer != null) {\n      resources.add(Accountables.namedAccountable(\"norms\", core.normsProducer));\n    }\n    if (docValuesProducer != null) {\n      resources.add(Accountables.namedAccountable(\"docvalues\", docValuesProducer));\n    }\n    if (getFieldsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"stored fields\", getFieldsReader()));\n    }\n    if (getTermVectorsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"term vectors\", getTermVectorsReader()));\n    }\n    return Collections.unmodifiableList(resources);\n  }\n\n","sourceOld":"  @Override\n  public Iterable<Accountable> getChildResources() {\n    ensureOpen();\n    List<Accountable> resources = new ArrayList<>();\n    resources.add(Accountables.namedAccountable(\"postings\", core.fields));\n    if (core.normsProducer != null) {\n      resources.add(Accountables.namedAccountable(\"norms\", core.normsProducer));\n    }\n    if (docValuesProducer != null) {\n      resources.add(Accountables.namedAccountable(\"docvalues\", docValuesProducer));\n    }\n    if (getFieldsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"stored fields\", getFieldsReader()));\n    }\n    if (getTermVectorsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"term vectors\", getTermVectorsReader()));\n    }\n    return resources;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"505bff044e47a553f461b6f4484d1d08faf4ac85","date":1420728783,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CodecReader#getChildResources().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getChildResources().mjava","sourceNew":"  @Override\n  public Collection<Accountable> getChildResources() {\n    ensureOpen();\n    List<Accountable> resources = new ArrayList<>();\n    \n    // terms/postings\n    resources.add(Accountables.namedAccountable(\"postings\", getPostingsReader()));\n    \n    // norms\n    if (getNormsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"norms\", getNormsReader()));\n    }\n    \n    // docvalues\n    if (getDocValuesReader() != null) {\n      resources.add(Accountables.namedAccountable(\"docvalues\", getDocValuesReader()));\n    }\n    \n    // stored fields\n    if (getFieldsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"stored fields\", getFieldsReader()));\n    }\n\n    // term vectors\n    if (getTermVectorsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"term vectors\", getTermVectorsReader()));\n    }\n    \n    return Collections.unmodifiableList(resources);\n  }\n\n","sourceOld":"  @Override\n  public Collection<Accountable> getChildResources() {\n    ensureOpen();\n    List<Accountable> resources = new ArrayList<>();\n    resources.add(Accountables.namedAccountable(\"postings\", core.fields));\n    if (core.normsProducer != null) {\n      resources.add(Accountables.namedAccountable(\"norms\", core.normsProducer));\n    }\n    if (docValuesProducer != null) {\n      resources.add(Accountables.namedAccountable(\"docvalues\", docValuesProducer));\n    }\n    if (getFieldsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"stored fields\", getFieldsReader()));\n    }\n    if (getTermVectorsReader() != null) {\n      resources.add(Accountables.namedAccountable(\"term vectors\", getTermVectorsReader()));\n    }\n    return Collections.unmodifiableList(resources);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8ba6ae8e3c153347cbb605024ca7550f5c91b178":["fca6c8418a91a6d30730ad418791ddf59ec3d07a"],"fca6c8418a91a6d30730ad418791ddf59ec3d07a":["8028ab7a24273833d53d35eb160dba5b57283cf5"],"8028ab7a24273833d53d35eb160dba5b57283cf5":["0936055c0eed56be3e4ae5c9db5b0e355390736a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0936055c0eed56be3e4ae5c9db5b0e355390736a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["8ba6ae8e3c153347cbb605024ca7550f5c91b178"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["505bff044e47a553f461b6f4484d1d08faf4ac85"]},"commit2Childs":{"8ba6ae8e3c153347cbb605024ca7550f5c91b178":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"fca6c8418a91a6d30730ad418791ddf59ec3d07a":["8ba6ae8e3c153347cbb605024ca7550f5c91b178"],"8028ab7a24273833d53d35eb160dba5b57283cf5":["fca6c8418a91a6d30730ad418791ddf59ec3d07a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0936055c0eed56be3e4ae5c9db5b0e355390736a"],"0936055c0eed56be3e4ae5c9db5b0e355390736a":["8028ab7a24273833d53d35eb160dba5b57283cf5"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}