{"path":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","commits":[{"id":"66a31a416e3550794ff2e245570885b7193952b6","date":1298453724,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return (node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n            node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"692804e172a5810620fac3194db7b7616a21ad3d","date":1298513499,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return (node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n            node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return (node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n            node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8be6e1e4fbbc94d90b78f175c03ff389b6949373","date":1306674752,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","sourceNew":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return (node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n            node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP;\n  }\n\n","sourceOld":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return (node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n            node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","sourceNew":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return (node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n            node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP;\n  }\n\n","sourceOld":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return (node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n            node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#shouldExpand(UnCompiledNode[T]).mjava","sourceNew":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return (node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n            node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP;\n  }\n\n","sourceOld":"  /**\n   * Nodes will be expanded if their depth (distance from the root node) is\n   * &lt;= this value and their number of arcs is &gt;=\n   * {@link #FIXED_ARRAY_NUM_ARCS_SHALLOW}.\n   * \n   * <p>\n   * Fixed array consumes more RAM but enables binary search on the arcs\n   * (instead of a linear scan) on lookup by arc label.\n   * \n   * @return <code>true</code> if <code>node</code> should be stored in an\n   *         expanded (array) form.\n   * \n   * @see #FIXED_ARRAY_NUM_ARCS_DEEP\n   * @see Builder.UnCompiledNode#depth\n   */\n  private boolean shouldExpand(UnCompiledNode<T> node) {\n    return (node.depth <= FIXED_ARRAY_SHALLOW_DISTANCE && node.numArcs >= FIXED_ARRAY_NUM_ARCS_SHALLOW) || \n            node.numArcs >= FIXED_ARRAY_NUM_ARCS_DEEP;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"692804e172a5810620fac3194db7b7616a21ad3d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","66a31a416e3550794ff2e245570885b7193952b6"],"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["66a31a416e3550794ff2e245570885b7193952b6"],"66a31a416e3550794ff2e245570885b7193952b6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","66a31a416e3550794ff2e245570885b7193952b6"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["66a31a416e3550794ff2e245570885b7193952b6","8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["d619839baa8ce5503e496b94a9e42ad6f079293f","8be6e1e4fbbc94d90b78f175c03ff389b6949373"]},"commit2Childs":{"692804e172a5810620fac3194db7b7616a21ad3d":[],"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"66a31a416e3550794ff2e245570885b7193952b6":["692804e172a5810620fac3194db7b7616a21ad3d","8be6e1e4fbbc94d90b78f175c03ff389b6949373","d619839baa8ce5503e496b94a9e42ad6f079293f","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["692804e172a5810620fac3194db7b7616a21ad3d","66a31a416e3550794ff2e245570885b7193952b6","d619839baa8ce5503e496b94a9e42ad6f079293f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["692804e172a5810620fac3194db7b7616a21ad3d","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}