{"path":"src/java/org/apache/solr/analysis/ReversedWildcardFilter#incrementToken().mjava","commits":[{"id":"f66fbc07ecf3707c1ec81e35ca9e4df7ff22101a","date":1252677016,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/ReversedWildcardFilter#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if( save != null ) {\n      // clearAttributes();  // not currently necessary\n      restoreState(save);\n      save = null;\n      return true;\n    }\n\n    if (!input.incrementToken()) return false;\n\n    // pass through zero-length terms\n    int oldLen = termAtt.termLength();\n    if (oldLen ==0) return true;\n    int origOffset = posAtt.getPositionIncrement();\n    if (withOriginal == true){\n      posAtt.setPositionIncrement(0);\n      save = captureState();\n    }\n    char [] buffer = termAtt.resizeTermBuffer(oldLen + 1);\n    buffer[oldLen] = markerChar;\n    //String reversed = reverseAndMark(value, markerChar);\n    ReverseStringFilter.reverse(buffer, oldLen + 1);\n\n    posAtt.setPositionIncrement(origOffset);\n    termAtt.setTermBuffer(buffer, 0, oldLen +1);\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4ea4e0df42b1e8d32da66955b10083ed12ba7cc4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ea4e0df42b1e8d32da66955b10083ed12ba7cc4","date":1258992545,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/ReversedWildcardFilter#incrementToken().mjava","pathOld":"src/java/org/apache/solr/analysis/ReversedWildcardFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if( save != null ) {\n      // clearAttributes();  // not currently necessary\n      restoreState(save);\n      save = null;\n      return true;\n    }\n\n    if (!input.incrementToken()) return false;\n\n    // pass through zero-length terms\n    int oldLen = termAtt.termLength();\n    if (oldLen ==0) return true;\n    int origOffset = posAtt.getPositionIncrement();\n    if (withOriginal == true){\n      posAtt.setPositionIncrement(0);\n      save = captureState();\n    }\n    char [] buffer = termAtt.resizeTermBuffer(oldLen + 1);\n    buffer[oldLen] = markerChar;\n    reverse(buffer, 0, oldLen + 1);\n\n    posAtt.setPositionIncrement(origOffset);\n    termAtt.setTermBuffer(buffer, 0, oldLen +1);\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if( save != null ) {\n      // clearAttributes();  // not currently necessary\n      restoreState(save);\n      save = null;\n      return true;\n    }\n\n    if (!input.incrementToken()) return false;\n\n    // pass through zero-length terms\n    int oldLen = termAtt.termLength();\n    if (oldLen ==0) return true;\n    int origOffset = posAtt.getPositionIncrement();\n    if (withOriginal == true){\n      posAtt.setPositionIncrement(0);\n      save = captureState();\n    }\n    char [] buffer = termAtt.resizeTermBuffer(oldLen + 1);\n    buffer[oldLen] = markerChar;\n    //String reversed = reverseAndMark(value, markerChar);\n    ReverseStringFilter.reverse(buffer, oldLen + 1);\n\n    posAtt.setPositionIncrement(origOffset);\n    termAtt.setTermBuffer(buffer, 0, oldLen +1);\n    return true;\n  }\n\n","bugFix":["f66fbc07ecf3707c1ec81e35ca9e4df7ff22101a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/ReversedWildcardFilter#incrementToken().mjava","pathOld":"src/java/org/apache/solr/analysis/ReversedWildcardFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if( save != null ) {\n      // clearAttributes();  // not currently necessary\n      restoreState(save);\n      save = null;\n      return true;\n    }\n\n    if (!input.incrementToken()) return false;\n\n    // pass through zero-length terms\n    int oldLen = termAtt.termLength();\n    if (oldLen ==0) return true;\n    int origOffset = posAtt.getPositionIncrement();\n    if (withOriginal == true){\n      posAtt.setPositionIncrement(0);\n      save = captureState();\n    }\n    char [] buffer = termAtt.resizeTermBuffer(oldLen + 1);\n    buffer[oldLen] = markerChar;\n    reverse(buffer, 0, oldLen + 1);\n\n    posAtt.setPositionIncrement(origOffset);\n    termAtt.setTermBuffer(buffer, 0, oldLen +1);\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if( save != null ) {\n      // clearAttributes();  // not currently necessary\n      restoreState(save);\n      save = null;\n      return true;\n    }\n\n    if (!input.incrementToken()) return false;\n\n    // pass through zero-length terms\n    int oldLen = termAtt.termLength();\n    if (oldLen ==0) return true;\n    int origOffset = posAtt.getPositionIncrement();\n    if (withOriginal == true){\n      posAtt.setPositionIncrement(0);\n      save = captureState();\n    }\n    char [] buffer = termAtt.resizeTermBuffer(oldLen + 1);\n    buffer[oldLen] = markerChar;\n    reverse(buffer, 0, oldLen + 1);\n\n    posAtt.setPositionIncrement(origOffset);\n    termAtt.setTermBuffer(buffer, 0, oldLen +1);\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ea4e0df42b1e8d32da66955b10083ed12ba7cc4":["f66fbc07ecf3707c1ec81e35ca9e4df7ff22101a"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"f66fbc07ecf3707c1ec81e35ca9e4df7ff22101a":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["4ea4e0df42b1e8d32da66955b10083ed12ba7cc4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4ea4e0df42b1e8d32da66955b10083ed12ba7cc4":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["f66fbc07ecf3707c1ec81e35ca9e4df7ff22101a"],"f66fbc07ecf3707c1ec81e35ca9e4df7ff22101a":["4ea4e0df42b1e8d32da66955b10083ed12ba7cc4"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}