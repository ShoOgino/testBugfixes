{"path":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testShouldThrowEOFException().mjava","commits":[{"id":"43e57158408015b1e7b1079de74aafe822e11811","date":1453058546,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testShouldThrowEOFException().mjava","pathOld":"/dev/null","sourceNew":"  public void testShouldThrowEOFException() throws Exception {\n    final Random random = random();\n\n    try (Directory dir = newDirectory()) {\n      final int len = 16 + random().nextInt(2048) / 16 * 16;\n      final byte[] bytes = new byte[len];\n\n      try (IndexOutput os = dir.createOutput(\"foo\", newIOContext(random))) {\n        os.writeBytes(bytes, bytes.length);\n      }\n\n      try (IndexInput is = dir.openInput(\"foo\", newIOContext(random))) {\n        try {\n          is.seek(0);\n          // Here, I go past EOF.\n          is.seek(len + random().nextInt(2048));\n          // since EOF is not enforced by the previous call in RAMInputStream\n          // this call to readBytes should throw the exception.\n          is.readBytes(bytes, 0, 16);\n          fail(\"Did not get EOFException\");\n        } catch (EOFException eof) {\n          // expected!\n        }\n      }\n    }\n  }\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4eda6e6a7dc9d9178b430d989fa9e3033edc780","date":1453398628,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testShouldThrowEOFException().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testShouldThrowEOFException().mjava","sourceNew":"  public void testShouldThrowEOFException() throws Exception {\n    final Random random = random();\n\n    try (Directory dir = newDirectory()) {\n      final int len = 16 + random().nextInt(2048) / 16 * 16;\n      final byte[] bytes = new byte[len];\n\n      try (IndexOutput os = dir.createOutput(\"foo\", newIOContext(random))) {\n        os.writeBytes(bytes, bytes.length);\n      }\n\n      try (IndexInput is = dir.openInput(\"foo\", newIOContext(random))) {\n        try {\n          is.seek(0);\n          // Here, I go past EOF.\n          is.seek(len + random().nextInt(2048));\n          // since EOF is not enforced by the previous call in RAMInputStream\n          // this call to readBytes should throw the exception.\n          is.readBytes(bytes, 0, 16);\n          fail(\"Did not get EOFException\");\n        } catch (EOFException eof) {\n          // expected!\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void testShouldThrowEOFException() throws Exception {\n    final Random random = random();\n\n    try (Directory dir = newDirectory()) {\n      final int len = 16 + random().nextInt(2048) / 16 * 16;\n      final byte[] bytes = new byte[len];\n\n      try (IndexOutput os = dir.createOutput(\"foo\", newIOContext(random))) {\n        os.writeBytes(bytes, bytes.length);\n      }\n\n      try (IndexInput is = dir.openInput(\"foo\", newIOContext(random))) {\n        try {\n          is.seek(0);\n          // Here, I go past EOF.\n          is.seek(len + random().nextInt(2048));\n          // since EOF is not enforced by the previous call in RAMInputStream\n          // this call to readBytes should throw the exception.\n          is.readBytes(bytes, 0, 16);\n          fail(\"Did not get EOFException\");\n        } catch (EOFException eof) {\n          // expected!\n        }\n      }\n    }\n  }\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testShouldThrowEOFException().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testShouldThrowEOFException().mjava","sourceNew":"  public void testShouldThrowEOFException() throws Exception {\n    final Random random = random();\n\n    try (Directory dir = newDirectory()) {\n      final int len = 16 + random().nextInt(2048) / 16 * 16;\n      final byte[] bytes = new byte[len];\n\n      try (IndexOutput os = dir.createOutput(\"foo\", newIOContext(random))) {\n        os.writeBytes(bytes, bytes.length);\n      }\n\n      try (IndexInput is = dir.openInput(\"foo\", newIOContext(random))) {\n        expectThrows(EOFException.class, () -> {\n          is.seek(0);\n          // Here, I go past EOF.\n          is.seek(len + random().nextInt(2048));\n          // since EOF is not enforced by the previous call in RAMInputStream\n          // this call to readBytes should throw the exception.\n          is.readBytes(bytes, 0, 16);\n        });\n      }\n    }\n  }\n\n","sourceOld":"  public void testShouldThrowEOFException() throws Exception {\n    final Random random = random();\n\n    try (Directory dir = newDirectory()) {\n      final int len = 16 + random().nextInt(2048) / 16 * 16;\n      final byte[] bytes = new byte[len];\n\n      try (IndexOutput os = dir.createOutput(\"foo\", newIOContext(random))) {\n        os.writeBytes(bytes, bytes.length);\n      }\n\n      try (IndexInput is = dir.openInput(\"foo\", newIOContext(random))) {\n        try {\n          is.seek(0);\n          // Here, I go past EOF.\n          is.seek(len + random().nextInt(2048));\n          // since EOF is not enforced by the previous call in RAMInputStream\n          // this call to readBytes should throw the exception.\n          is.readBytes(bytes, 0, 16);\n          fail(\"Did not get EOFException\");\n        } catch (EOFException eof) {\n          // expected!\n        }\n      }\n    }\n  }\n\n","bugFix":["43e57158408015b1e7b1079de74aafe822e11811"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"409da428f28953cf35fddd5c9ff5c7e4f5439863","date":1547556145,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestRAMDirectory#testShouldThrowEOFException().mjava","sourceNew":null,"sourceOld":"  public void testShouldThrowEOFException() throws Exception {\n    final Random random = random();\n\n    try (Directory dir = newDirectory()) {\n      final int len = 16 + random().nextInt(2048) / 16 * 16;\n      final byte[] bytes = new byte[len];\n\n      try (IndexOutput os = dir.createOutput(\"foo\", newIOContext(random))) {\n        os.writeBytes(bytes, bytes.length);\n      }\n\n      try (IndexInput is = dir.openInput(\"foo\", newIOContext(random))) {\n        expectThrows(EOFException.class, () -> {\n          is.seek(0);\n          // Here, I go past EOF.\n          is.seek(len + random().nextInt(2048));\n          // since EOF is not enforced by the previous call in RAMInputStream\n          // this call to readBytes should throw the exception.\n          is.readBytes(bytes, 0, 16);\n        });\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"43e57158408015b1e7b1079de74aafe822e11811":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"409da428f28953cf35fddd5c9ff5c7e4f5439863":["05fe562aa248790944d43cdd478f512572835ba0"],"d4eda6e6a7dc9d9178b430d989fa9e3033edc780":["43e57158408015b1e7b1079de74aafe822e11811"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["d4eda6e6a7dc9d9178b430d989fa9e3033edc780"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["409da428f28953cf35fddd5c9ff5c7e4f5439863"]},"commit2Childs":{"43e57158408015b1e7b1079de74aafe822e11811":["d4eda6e6a7dc9d9178b430d989fa9e3033edc780"],"409da428f28953cf35fddd5c9ff5c7e4f5439863":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["43e57158408015b1e7b1079de74aafe822e11811"],"d4eda6e6a7dc9d9178b430d989fa9e3033edc780":["05fe562aa248790944d43cdd478f512572835ba0"],"05fe562aa248790944d43cdd478f512572835ba0":["409da428f28953cf35fddd5c9ff5c7e4f5439863"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}