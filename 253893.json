{"path":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testStop().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testStop().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testStop().mjava","sourceNew":"  /** Test a configuration that behaves a lot like StopAnalyzer */\n  public void testStop() throws Exception {\n    Analyzer a = new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    assertAnalyzesTo(a, \"the quick brown a fox\",\n        new String[] { \"quick\", \"brown\", \"fox\" },\n        new int[] { 2, 1, 2 });\n    \n    // disable positions\n    a = new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, false);\n    assertAnalyzesTo(a, \"the quick brown a fox\",\n        new String[] { \"quick\", \"brown\", \"fox\" },\n        new int[] { 1, 1, 1 });\n  }\n\n","sourceOld":"  /** Test a configuration that behaves a lot like StopAnalyzer */\n  public void testStop() throws Exception {\n    Analyzer a = new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    assertAnalyzesTo(a, \"the quick brown a fox\",\n        new String[] { \"quick\", \"brown\", \"fox\" },\n        new int[] { 2, 1, 2 });\n    \n    // disable positions\n    a = new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, false);\n    assertAnalyzesTo(a, \"the quick brown a fox\",\n        new String[] { \"quick\", \"brown\", \"fox\" },\n        new int[] { 1, 1, 1 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testStop().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testStop().mjava","sourceNew":"  /** Test a configuration that behaves a lot like StopAnalyzer */\n  public void testStop() throws Exception {\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    assertAnalyzesTo(a, \"the quick brown a fox\",\n        new String[] { \"quick\", \"brown\", \"fox\" },\n        new int[] { 2, 1, 2 });\n    \n    // disable positions\n    a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, false);\n    assertAnalyzesTo(a, \"the quick brown a fox\",\n        new String[] { \"quick\", \"brown\", \"fox\" },\n        new int[] { 1, 1, 1 });\n  }\n\n","sourceOld":"  /** Test a configuration that behaves a lot like StopAnalyzer */\n  public void testStop() throws Exception {\n    Analyzer a = new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    assertAnalyzesTo(a, \"the quick brown a fox\",\n        new String[] { \"quick\", \"brown\", \"fox\" },\n        new int[] { 2, 1, 2 });\n    \n    // disable positions\n    a = new MockAnalyzer(random, MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, false);\n    assertAnalyzesTo(a, \"the quick brown a fox\",\n        new String[] { \"quick\", \"brown\", \"fox\" },\n        new int[] { 1, 1, 1 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eafa8c5eabc3dacd34680054e6a33bda024080ac","date":1367691488,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testStop().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testStop().mjava","sourceNew":"  /** Test a configuration that behaves a lot like StopAnalyzer */\n  public void testStop() throws Exception {\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    assertAnalyzesTo(a, \"the quick brown a fox\",\n        new String[] { \"quick\", \"brown\", \"fox\" },\n        new int[] { 2, 1, 2 });\n  }\n\n","sourceOld":"  /** Test a configuration that behaves a lot like StopAnalyzer */\n  public void testStop() throws Exception {\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, true);\n    assertAnalyzesTo(a, \"the quick brown a fox\",\n        new String[] { \"quick\", \"brown\", \"fox\" },\n        new int[] { 2, 1, 2 });\n    \n    // disable positions\n    a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET, false);\n    assertAnalyzesTo(a, \"the quick brown a fox\",\n        new String[] { \"quick\", \"brown\", \"fox\" },\n        new int[] { 1, 1, 1 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testStop().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testStop().mjava","sourceNew":"  /** Test a configuration that behaves a lot like StopAnalyzer */\n  public void testStop() throws Exception {\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    assertAnalyzesTo(a, \"the quick brown a fox\",\n        new String[] { \"quick\", \"brown\", \"fox\" },\n        new int[] { 2, 1, 2 });\n  }\n\n","sourceOld":"  /** Test a configuration that behaves a lot like StopAnalyzer */\n  public void testStop() throws Exception {\n    Analyzer a = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true, MockTokenFilter.ENGLISH_STOPSET);\n    assertAnalyzesTo(a, \"the quick brown a fox\",\n        new String[] { \"quick\", \"brown\", \"fox\" },\n        new int[] { 2, 1, 2 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"eafa8c5eabc3dacd34680054e6a33bda024080ac":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["eafa8c5eabc3dacd34680054e6a33bda024080ac"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"eafa8c5eabc3dacd34680054e6a33bda024080ac":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["eafa8c5eabc3dacd34680054e6a33bda024080ac"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}