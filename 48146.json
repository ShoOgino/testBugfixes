{"path":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/util/CachingQueue#insert(Object).mjava","commits":[{"id":"3757bc672f1525d4d7501cbb5ee441e2b764e2ff","date":1024437420,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/util/CachingQueue#insert(Object).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * inserts an object to the front of the queue\n     *\n     * @param o                   the object to be inserted. must implement Serializable\n     * @exception StoreException  encapsulates Exceptions that occur when writing to hard disk\n     */\n    public synchronized void insert(Object o)\n        throws StoreException\n    {\n        if (last == null && first == null)\n        {\n            first = last = newBlock();\n            queueBlocks.addFirst(first);\n            numBlocks++;\n        }\n        if (last == null && first != null)\n        {\n            // affirm((last==null && first==null) || (last!= null && first!=null));\n            System.err.println(\"Error in CachingQueue: last!=first==null\");\n        }\n\n        if (first.size() >= blockSize)\n        {\n            // save block and create a new one\n            QueueBlock newBlock = newBlock();\n            numBlocks++;\n            if (last != first)\n            {\n                first.store();\n            }\n            queueBlocks.addFirst(newBlock);\n            first = newBlock;\n        }\n        first.insert(o);\n        size++;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/util/CachingQueue#insert(Object).mjava","sourceNew":null,"sourceOld":"    /**\n     * inserts an object to the front of the queue\n     *\n     * @param o                   the object to be inserted. must implement Serializable\n     * @exception StoreException  encapsulates Exceptions that occur when writing to hard disk\n     */\n    public synchronized void insert(Object o)\n        throws StoreException\n    {\n        if (last == null && first == null)\n        {\n            first = last = newBlock();\n            queueBlocks.addFirst(first);\n            numBlocks++;\n        }\n        if (last == null && first != null)\n        {\n            // affirm((last==null && first==null) || (last!= null && first!=null));\n            System.err.println(\"Error in CachingQueue: last!=first==null\");\n        }\n\n        if (first.size() >= blockSize)\n        {\n            // save block and create a new one\n            QueueBlock newBlock = newBlock();\n            numBlocks++;\n            if (last != first)\n            {\n                first.store();\n            }\n            queueBlocks.addFirst(newBlock);\n            first = newBlock;\n        }\n        first.insert(o);\n        size++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3757bc672f1525d4d7501cbb5ee441e2b764e2ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["3757bc672f1525d4d7501cbb5ee441e2b764e2ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"3757bc672f1525d4d7501cbb5ee441e2b764e2ff":["afc16d717d9ed1a8e45371668ca6de674164d624"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3757bc672f1525d4d7501cbb5ee441e2b764e2ff"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}