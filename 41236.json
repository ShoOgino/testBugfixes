{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTrimFilter#testTrim().mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTrimFilter#testTrim().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTrimFilter#testTrim().mjava","sourceNew":"  public void testTrim() throws Exception {\n    char[] a = \" a \".toCharArray();\n    char[] b = \"b   \".toCharArray();\n    char[] ccc = \"cCc\".toCharArray();\n    char[] whitespace = \"   \".toCharArray();\n    char[] empty = \"\".toCharArray();\n\n    TokenStream ts = new IterTokenStream(new Token(a, 0, a.length, 1, 5),\n                    new Token(b, 0, b.length, 6, 10),\n                    new Token(ccc, 0, ccc.length, 11, 15),\n                    new Token(whitespace, 0, whitespace.length, 16, 20),\n                    new Token(empty, 0, empty.length, 21, 21));\n    ts = new TrimFilter(ts, false);\n\n    assertTokenStreamContents(ts, new String[] { \"a\", \"b\", \"cCc\", \"\", \"\"});\n\n    a = \" a\".toCharArray();\n    b = \"b \".toCharArray();\n    ccc = \" c \".toCharArray();\n    whitespace = \"   \".toCharArray();\n    ts = new IterTokenStream(\n            new Token(a, 0, a.length, 0, 2),\n            new Token(b, 0, b.length, 0, 2),\n            new Token(ccc, 0, ccc.length, 0, 3),\n            new Token(whitespace, 0, whitespace.length, 0, 3));\n    ts = new TrimFilter(ts, true);\n    \n    assertTokenStreamContents(ts, \n        new String[] { \"a\", \"b\", \"c\", \"\" },\n        new int[] { 1, 0, 1, 3 },\n        new int[] { 2, 1, 2, 3 },\n        new int[] { 1, 1, 1, 1 });\n  }\n\n","sourceOld":"  public void testTrim() throws Exception {\n    char[] a = \" a \".toCharArray();\n    char[] b = \"b   \".toCharArray();\n    char[] ccc = \"cCc\".toCharArray();\n    char[] whitespace = \"   \".toCharArray();\n    char[] empty = \"\".toCharArray();\n\n    TokenStream ts = new IterTokenStream(new Token(a, 0, a.length, 1, 5),\n                    new Token(b, 0, b.length, 6, 10),\n                    new Token(ccc, 0, ccc.length, 11, 15),\n                    new Token(whitespace, 0, whitespace.length, 16, 20),\n                    new Token(empty, 0, empty.length, 21, 21));\n    ts = new TrimFilter(ts, false);\n\n    assertTokenStreamContents(ts, new String[] { \"a\", \"b\", \"cCc\", \"\", \"\"});\n\n    a = \" a\".toCharArray();\n    b = \"b \".toCharArray();\n    ccc = \" c \".toCharArray();\n    whitespace = \"   \".toCharArray();\n    ts = new IterTokenStream(\n            new Token(a, 0, a.length, 0, 2),\n            new Token(b, 0, b.length, 0, 2),\n            new Token(ccc, 0, ccc.length, 0, 3),\n            new Token(whitespace, 0, whitespace.length, 0, 3));\n    ts = new TrimFilter(ts, true);\n    \n    assertTokenStreamContents(ts, \n        new String[] { \"a\", \"b\", \"c\", \"\" },\n        new int[] { 1, 0, 1, 3 },\n        new int[] { 2, 1, 2, 3 },\n        new int[] { 1, 1, 1, 1 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"888c2d6bca1edd8d9293631d6e1d188b036e0f05","date":1334076894,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTrimFilter#testTrim().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTrimFilter#testTrim().mjava","sourceNew":"  public void testTrim() throws Exception {\n    char[] a = \" a \".toCharArray();\n    char[] b = \"b   \".toCharArray();\n    char[] ccc = \"cCc\".toCharArray();\n    char[] whitespace = \"   \".toCharArray();\n    char[] empty = \"\".toCharArray();\n\n    TokenStream ts = new IterTokenStream(new Token(a, 0, a.length, 1, 5),\n                    new Token(b, 0, b.length, 6, 10),\n                    new Token(ccc, 0, ccc.length, 11, 15),\n                    new Token(whitespace, 0, whitespace.length, 16, 20),\n                    new Token(empty, 0, empty.length, 21, 21));\n    ts = new TrimFilter(ts, false);\n\n    assertTokenStreamContents(ts, new String[] { \"a\", \"b\", \"cCc\", \"\", \"\"});\n\n    a = \" a\".toCharArray();\n    b = \"b \".toCharArray();\n    ccc = \" c \".toCharArray();\n    whitespace = \"   \".toCharArray();\n    ts = new IterTokenStream(\n            new Token(a, 0, a.length, 0, 2),\n            new Token(b, 0, b.length, 0, 2),\n            new Token(ccc, 0, ccc.length, 0, 3),\n            new Token(whitespace, 0, whitespace.length, 0, 3));\n    ts = new TrimFilter(ts, true);\n    \n    assertTokenStreamContents(ts, \n        new String[] { \"a\", \"b\", \"c\", \"\" },\n        new int[] { 1, 0, 1, 3 },\n        new int[] { 2, 1, 2, 3 },\n        null,\n        new int[] { 1, 1, 1, 1 },\n        null,\n        null,\n        false);\n  }\n\n","sourceOld":"  public void testTrim() throws Exception {\n    char[] a = \" a \".toCharArray();\n    char[] b = \"b   \".toCharArray();\n    char[] ccc = \"cCc\".toCharArray();\n    char[] whitespace = \"   \".toCharArray();\n    char[] empty = \"\".toCharArray();\n\n    TokenStream ts = new IterTokenStream(new Token(a, 0, a.length, 1, 5),\n                    new Token(b, 0, b.length, 6, 10),\n                    new Token(ccc, 0, ccc.length, 11, 15),\n                    new Token(whitespace, 0, whitespace.length, 16, 20),\n                    new Token(empty, 0, empty.length, 21, 21));\n    ts = new TrimFilter(ts, false);\n\n    assertTokenStreamContents(ts, new String[] { \"a\", \"b\", \"cCc\", \"\", \"\"});\n\n    a = \" a\".toCharArray();\n    b = \"b \".toCharArray();\n    ccc = \" c \".toCharArray();\n    whitespace = \"   \".toCharArray();\n    ts = new IterTokenStream(\n            new Token(a, 0, a.length, 0, 2),\n            new Token(b, 0, b.length, 0, 2),\n            new Token(ccc, 0, ccc.length, 0, 3),\n            new Token(whitespace, 0, whitespace.length, 0, 3));\n    ts = new TrimFilter(ts, true);\n    \n    assertTokenStreamContents(ts, \n        new String[] { \"a\", \"b\", \"c\", \"\" },\n        new int[] { 1, 0, 1, 3 },\n        new int[] { 2, 1, 2, 3 },\n        new int[] { 1, 1, 1, 1 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e","date":1334174049,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTrimFilter#testTrim().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTrimFilter#testTrim().mjava","sourceNew":"  public void testTrim() throws Exception {\n    char[] a = \" a \".toCharArray();\n    char[] b = \"b   \".toCharArray();\n    char[] ccc = \"cCc\".toCharArray();\n    char[] whitespace = \"   \".toCharArray();\n    char[] empty = \"\".toCharArray();\n\n    TokenStream ts = new IterTokenStream(new Token(a, 0, a.length, 1, 5),\n                    new Token(b, 0, b.length, 6, 10),\n                    new Token(ccc, 0, ccc.length, 11, 15),\n                    new Token(whitespace, 0, whitespace.length, 16, 20),\n                    new Token(empty, 0, empty.length, 21, 21));\n    ts = new TrimFilter(ts, false);\n\n    assertTokenStreamContents(ts, new String[] { \"a\", \"b\", \"cCc\", \"\", \"\"});\n\n    a = \" a\".toCharArray();\n    b = \"b \".toCharArray();\n    ccc = \" c \".toCharArray();\n    whitespace = \"   \".toCharArray();\n    ts = new IterTokenStream(\n            new Token(a, 0, a.length, 0, 2),\n            new Token(b, 0, b.length, 0, 2),\n            new Token(ccc, 0, ccc.length, 0, 3),\n            new Token(whitespace, 0, whitespace.length, 0, 3));\n    ts = new TrimFilter(ts, true);\n    \n    assertTokenStreamContents(ts, \n        new String[] { \"a\", \"b\", \"c\", \"\" },\n        new int[] { 1, 0, 1, 3 },\n        new int[] { 2, 1, 2, 3 },\n        null,\n        new int[] { 1, 1, 1, 1 },\n        null,\n        null,\n        false);\n  }\n\n","sourceOld":"  public void testTrim() throws Exception {\n    char[] a = \" a \".toCharArray();\n    char[] b = \"b   \".toCharArray();\n    char[] ccc = \"cCc\".toCharArray();\n    char[] whitespace = \"   \".toCharArray();\n    char[] empty = \"\".toCharArray();\n\n    TokenStream ts = new IterTokenStream(new Token(a, 0, a.length, 1, 5),\n                    new Token(b, 0, b.length, 6, 10),\n                    new Token(ccc, 0, ccc.length, 11, 15),\n                    new Token(whitespace, 0, whitespace.length, 16, 20),\n                    new Token(empty, 0, empty.length, 21, 21));\n    ts = new TrimFilter(ts, false);\n\n    assertTokenStreamContents(ts, new String[] { \"a\", \"b\", \"cCc\", \"\", \"\"});\n\n    a = \" a\".toCharArray();\n    b = \"b \".toCharArray();\n    ccc = \" c \".toCharArray();\n    whitespace = \"   \".toCharArray();\n    ts = new IterTokenStream(\n            new Token(a, 0, a.length, 0, 2),\n            new Token(b, 0, b.length, 0, 2),\n            new Token(ccc, 0, ccc.length, 0, 3),\n            new Token(whitespace, 0, whitespace.length, 0, 3));\n    ts = new TrimFilter(ts, true);\n    \n    assertTokenStreamContents(ts, \n        new String[] { \"a\", \"b\", \"c\", \"\" },\n        new int[] { 1, 0, 1, 3 },\n        new int[] { 2, 1, 2, 3 },\n        new int[] { 1, 1, 1, 1 });\n  }\n\n","bugFix":["2fd023a662cc25ae7e0ad0f33d71c476a16d0579"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTrimFilter#testTrim().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTrimFilter#testTrim().mjava","sourceNew":"  public void testTrim() throws Exception {\n    char[] a = \" a \".toCharArray();\n    char[] b = \"b   \".toCharArray();\n    char[] ccc = \"cCc\".toCharArray();\n    char[] whitespace = \"   \".toCharArray();\n    char[] empty = \"\".toCharArray();\n\n    TokenStream ts = new IterTokenStream(new Token(a, 0, a.length, 1, 5),\n                    new Token(b, 0, b.length, 6, 10),\n                    new Token(ccc, 0, ccc.length, 11, 15),\n                    new Token(whitespace, 0, whitespace.length, 16, 20),\n                    new Token(empty, 0, empty.length, 21, 21));\n    ts = new TrimFilter(ts, false);\n\n    assertTokenStreamContents(ts, new String[] { \"a\", \"b\", \"cCc\", \"\", \"\"});\n\n    a = \" a\".toCharArray();\n    b = \"b \".toCharArray();\n    ccc = \" c \".toCharArray();\n    whitespace = \"   \".toCharArray();\n    ts = new IterTokenStream(\n            new Token(a, 0, a.length, 0, 2),\n            new Token(b, 0, b.length, 0, 2),\n            new Token(ccc, 0, ccc.length, 0, 3),\n            new Token(whitespace, 0, whitespace.length, 0, 3));\n    ts = new TrimFilter(ts, true);\n    \n    assertTokenStreamContents(ts, \n        new String[] { \"a\", \"b\", \"c\", \"\" },\n        new int[] { 1, 0, 1, 3 },\n        new int[] { 2, 1, 2, 3 },\n        null,\n        new int[] { 1, 1, 1, 1 },\n        null,\n        null,\n        false);\n  }\n\n","sourceOld":"  public void testTrim() throws Exception {\n    char[] a = \" a \".toCharArray();\n    char[] b = \"b   \".toCharArray();\n    char[] ccc = \"cCc\".toCharArray();\n    char[] whitespace = \"   \".toCharArray();\n    char[] empty = \"\".toCharArray();\n\n    TokenStream ts = new IterTokenStream(new Token(a, 0, a.length, 1, 5),\n                    new Token(b, 0, b.length, 6, 10),\n                    new Token(ccc, 0, ccc.length, 11, 15),\n                    new Token(whitespace, 0, whitespace.length, 16, 20),\n                    new Token(empty, 0, empty.length, 21, 21));\n    ts = new TrimFilter(ts, false);\n\n    assertTokenStreamContents(ts, new String[] { \"a\", \"b\", \"cCc\", \"\", \"\"});\n\n    a = \" a\".toCharArray();\n    b = \"b \".toCharArray();\n    ccc = \" c \".toCharArray();\n    whitespace = \"   \".toCharArray();\n    ts = new IterTokenStream(\n            new Token(a, 0, a.length, 0, 2),\n            new Token(b, 0, b.length, 0, 2),\n            new Token(ccc, 0, ccc.length, 0, 3),\n            new Token(whitespace, 0, whitespace.length, 0, 3));\n    ts = new TrimFilter(ts, true);\n    \n    assertTokenStreamContents(ts, \n        new String[] { \"a\", \"b\", \"c\", \"\" },\n        new int[] { 1, 0, 1, 3 },\n        new int[] { 2, 1, 2, 3 },\n        null,\n        new int[] { 1, 1, 1, 1 },\n        null,\n        null,\n        false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"888c2d6bca1edd8d9293631d6e1d188b036e0f05":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e":["0f080986da691a3bba7b757f43ab72cdc82b57ce","888c2d6bca1edd8d9293631d6e1d188b036e0f05"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"888c2d6bca1edd8d9293631d6e1d188b036e0f05":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["888c2d6bca1edd8d9293631d6e1d188b036e0f05","ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}