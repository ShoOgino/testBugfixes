{"path":"lucene/core/src/java/org/apache/lucene/search/spans/Spans#scoreCurrentDoc().mjava","commits":[{"id":"557b118fdfb9d28b6cfe38fac273af58c4d51135","date":1445505363,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/Spans#scoreCurrentDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanScorer#scoreCurrentDoc().mjava","sourceNew":"  /**\n   * Score the current doc. The default implementation scores the doc\n   * with the similarity using the slop-adjusted {@link #freq}.\n   */\n  protected float scoreCurrentDoc() throws IOException {\n    assert docScorer != null : getClass() + \" has a null docScorer!\";\n    return docScorer.score(docID(), freq);\n  }\n\n","sourceOld":"  /**\n   * Score the current doc. The default implementation scores the doc \n   * with the similarity using the slop-adjusted {@link #freq}.\n   */\n  protected float scoreCurrentDoc() throws IOException {\n    return docScorer.score(spans.docID(), freq);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanScorer#scoreCurrentDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/Spans#scoreCurrentDoc().mjava","sourceNew":"  /**\n   * Score the current doc. The default implementation scores the doc\n   * with the similarity using the slop-adjusted {@link #freq}.\n   */\n  protected float scoreCurrentDoc() throws IOException {\n    assert docScorer != null : getClass() + \" has a null docScorer!\";\n    return docScorer.score(docID(), freq);\n  }\n\n","sourceOld":"  /**\n   * Score the current doc. The default implementation scores the doc\n   * with the similarity using the slop-adjusted {@link #freq}.\n   */\n  protected float scoreCurrentDoc() throws IOException {\n    assert docScorer != null : getClass() + \" has a null docScorer!\";\n    return docScorer.score(docID(), freq);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"557b118fdfb9d28b6cfe38fac273af58c4d51135":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["557b118fdfb9d28b6cfe38fac273af58c4d51135"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dd748bb245633a8195281556bb0e68a6ea97d18"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["557b118fdfb9d28b6cfe38fac273af58c4d51135"],"557b118fdfb9d28b6cfe38fac273af58c4d51135":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}