{"path":"lucene/backwards/src/java/org/apache/lucene/search/MultiSearcher#search(Weight,Filter,int,Sort).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/MultiSearcher#search(Weight,Filter,int,Sort).mjava","pathOld":"backwards/src/java/org/apache/lucene/search/MultiSearcher#search(Weight,Filter,int,Sort).mjava","sourceNew":"  @Override\n  public TopFieldDocs search (Weight weight, Filter filter, int n, Sort sort) throws IOException {\n    FieldDocSortedHitQueue hq = new FieldDocSortedHitQueue(n);\n    int totalHits = 0;\n\n    float maxScore=Float.NEGATIVE_INFINITY;\n    \n    for (int i = 0; i < searchables.length; i++) { // search each searcher\n      final TopFieldDocs docs = new MultiSearcherCallableWithSort(DummyConcurrentLock.INSTANCE,\n        searchables[i], weight, filter, n, hq, sort, i, starts).call();\n      totalHits += docs.totalHits; // update totalHits\n      maxScore = Math.max(maxScore, docs.getMaxScore());\n    }\n\n    final ScoreDoc[] scoreDocs = new ScoreDoc[hq.size()];\n    for (int i = hq.size() - 1; i >= 0; i--)\t  // put docs in array\n      scoreDocs[i] =  hq.pop();\n\n    return new TopFieldDocs (totalHits, scoreDocs, hq.getFields(), maxScore);\n  }\n\n","sourceOld":"  @Override\n  public TopFieldDocs search (Weight weight, Filter filter, int n, Sort sort) throws IOException {\n    FieldDocSortedHitQueue hq = new FieldDocSortedHitQueue(n);\n    int totalHits = 0;\n\n    float maxScore=Float.NEGATIVE_INFINITY;\n    \n    for (int i = 0; i < searchables.length; i++) { // search each searcher\n      final TopFieldDocs docs = new MultiSearcherCallableWithSort(DummyConcurrentLock.INSTANCE,\n        searchables[i], weight, filter, n, hq, sort, i, starts).call();\n      totalHits += docs.totalHits; // update totalHits\n      maxScore = Math.max(maxScore, docs.getMaxScore());\n    }\n\n    final ScoreDoc[] scoreDocs = new ScoreDoc[hq.size()];\n    for (int i = hq.size() - 1; i >= 0; i--)\t  // put docs in array\n      scoreDocs[i] =  hq.pop();\n\n    return new TopFieldDocs (totalHits, scoreDocs, hq.getFields(), maxScore);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/search/MultiSearcher#search(Weight,Filter,int,Sort).mjava","sourceNew":null,"sourceOld":"  @Override\n  public TopFieldDocs search (Weight weight, Filter filter, int n, Sort sort) throws IOException {\n    FieldDocSortedHitQueue hq = new FieldDocSortedHitQueue(n);\n    int totalHits = 0;\n\n    float maxScore=Float.NEGATIVE_INFINITY;\n    \n    for (int i = 0; i < searchables.length; i++) { // search each searcher\n      final TopFieldDocs docs = new MultiSearcherCallableWithSort(DummyConcurrentLock.INSTANCE,\n        searchables[i], weight, filter, n, hq, sort, i, starts).call();\n      totalHits += docs.totalHits; // update totalHits\n      maxScore = Math.max(maxScore, docs.getMaxScore());\n    }\n\n    final ScoreDoc[] scoreDocs = new ScoreDoc[hq.size()];\n    for (int i = hq.size() - 1; i >= 0; i--)\t  // put docs in array\n      scoreDocs[i] =  hq.pop();\n\n    return new TopFieldDocs (totalHits, scoreDocs, hq.getFields(), maxScore);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}