{"path":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#setSimilarity(Similarity).mjava","commits":[{"id":"dddb2c2ed096135b31cff8907f24ca2f5db46562","date":1413882711,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#setSimilarity(Similarity).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Set the Similarity to be used for calculating field norms\n   */\n  public void setSimilarity(Similarity similarity) {\n    if (frozen)\n      throw new IllegalArgumentException(\"Cannot set Similarity when MemoryIndex is frozen\");\n    this.normSimilarity = similarity;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#setSimilarity(Similarity).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Set the Similarity to be used for calculating field norms\n   */\n  public void setSimilarity(Similarity similarity) {\n    if (frozen)\n      throw new IllegalArgumentException(\"Cannot set Similarity when MemoryIndex is frozen\");\n    this.normSimilarity = similarity;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f657d9837900f4519ca1cbd5e98d86d4bba4dab","date":1417790596,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#setSimilarity(Similarity).mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#setSimilarity(Similarity).mjava","sourceNew":"  /**\n   * Set the Similarity to be used for calculating field norms\n   */\n  public void setSimilarity(Similarity similarity) {\n    if (frozen)\n      throw new IllegalArgumentException(\"Cannot set Similarity when MemoryIndex is frozen\");\n    if (this.normSimilarity == similarity)\n      return;\n    this.normSimilarity = similarity;\n    //invalidate any cached norms that may exist\n    for (Info info : fields.values()) {\n      info.norms = null;\n    }\n  }\n\n","sourceOld":"  /**\n   * Set the Similarity to be used for calculating field norms\n   */\n  public void setSimilarity(Similarity similarity) {\n    if (frozen)\n      throw new IllegalArgumentException(\"Cannot set Similarity when MemoryIndex is frozen\");\n    this.normSimilarity = similarity;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95e93d67f29b6bee6e39efb3fb6f1237b5b9850b","date":1487325043,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#setSimilarity(Similarity).mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#setSimilarity(Similarity).mjava","sourceNew":"  /**\n   * Set the Similarity to be used for calculating field norms\n   */\n  public void setSimilarity(Similarity similarity) {\n    if (frozen)\n      throw new IllegalArgumentException(\"Cannot set Similarity when MemoryIndex is frozen\");\n    if (this.normSimilarity == similarity)\n      return;\n    this.normSimilarity = similarity;\n    //invalidate any cached norms that may exist\n    for (Info info : fields.values()) {\n      info.norm = null;\n    }\n  }\n\n","sourceOld":"  /**\n   * Set the Similarity to be used for calculating field norms\n   */\n  public void setSimilarity(Similarity similarity) {\n    if (frozen)\n      throw new IllegalArgumentException(\"Cannot set Similarity when MemoryIndex is frozen\");\n    if (this.normSimilarity == similarity)\n      return;\n    this.normSimilarity = similarity;\n    //invalidate any cached norms that may exist\n    for (Info info : fields.values()) {\n      info.norms = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0818fc555aefcb0330785d4ad1c1487980a0b04b","date":1599049757,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#setSimilarity(Similarity).mjava","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#setSimilarity(Similarity).mjava","sourceNew":"  /**\n   * Set the Similarity to be used for calculating field norms\n   * @param similarity instance with custom {@link Similarity#computeNorm} implementation\n   */\n  public void setSimilarity(Similarity similarity) {\n    if (frozen)\n      throw new IllegalArgumentException(\"Cannot set Similarity when MemoryIndex is frozen\");\n    if (this.normSimilarity == similarity)\n      return;\n    this.normSimilarity = similarity;\n    //invalidate any cached norms that may exist\n    for (Info info : fields.values()) {\n      info.norm = null;\n    }\n  }\n\n","sourceOld":"  /**\n   * Set the Similarity to be used for calculating field norms\n   */\n  public void setSimilarity(Similarity similarity) {\n    if (frozen)\n      throw new IllegalArgumentException(\"Cannot set Similarity when MemoryIndex is frozen\");\n    if (this.normSimilarity == similarity)\n      return;\n    this.normSimilarity = similarity;\n    //invalidate any cached norms that may exist\n    for (Info info : fields.values()) {\n      info.norm = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","dddb2c2ed096135b31cff8907f24ca2f5db46562"],"dddb2c2ed096135b31cff8907f24ca2f5db46562":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0818fc555aefcb0330785d4ad1c1487980a0b04b":["95e93d67f29b6bee6e39efb3fb6f1237b5b9850b"],"95e93d67f29b6bee6e39efb3fb6f1237b5b9850b":["0f657d9837900f4519ca1cbd5e98d86d4bba4dab"],"0f657d9837900f4519ca1cbd5e98d86d4bba4dab":["dddb2c2ed096135b31cff8907f24ca2f5db46562"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0818fc555aefcb0330785d4ad1c1487980a0b04b"]},"commit2Childs":{"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"dddb2c2ed096135b31cff8907f24ca2f5db46562":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","0f657d9837900f4519ca1cbd5e98d86d4bba4dab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","dddb2c2ed096135b31cff8907f24ca2f5db46562"],"0818fc555aefcb0330785d4ad1c1487980a0b04b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"95e93d67f29b6bee6e39efb3fb6f1237b5b9850b":["0818fc555aefcb0330785d4ad1c1487980a0b04b"],"0f657d9837900f4519ca1cbd5e98d86d4bba4dab":["95e93d67f29b6bee6e39efb3fb6f1237b5b9850b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}