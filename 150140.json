{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#checkRandomStrings(String).mjava","commits":[{"id":"b6a6a9e301c12ab07b1d0428b5aad813fff317b3","date":1343846505,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#checkRandomStrings(String).mjava","pathOld":"/dev/null","sourceNew":"  public void checkRandomStrings(final String snowballLanguage) throws IOException {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer t = new MockTokenizer(reader);\n        return new TokenStreamComponents(t, new SnowballFilter(t, snowballLanguage));\n      }  \n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#checkRandomStrings(String).mjava","pathOld":"/dev/null","sourceNew":"  public void checkRandomStrings(final String snowballLanguage) throws IOException {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer t = new MockTokenizer(reader);\n        return new TokenStreamComponents(t, new SnowballFilter(t, snowballLanguage));\n      }  \n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#checkRandomStrings(String).mjava","pathOld":"/dev/null","sourceNew":"  public void checkRandomStrings(final String snowballLanguage) throws IOException {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer t = new MockTokenizer(reader);\n        return new TokenStreamComponents(t, new SnowballFilter(t, snowballLanguage));\n      }  \n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#checkRandomStrings(String).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#checkRandomStrings(String).mjava","sourceNew":"  public void checkRandomStrings(final String snowballLanguage) throws IOException {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer t = new MockTokenizer();\n        return new TokenStreamComponents(t, new SnowballFilter(t, snowballLanguage));\n      }  \n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n  }\n\n","sourceOld":"  public void checkRandomStrings(final String snowballLanguage) throws IOException {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer t = new MockTokenizer(reader);\n        return new TokenStreamComponents(t, new SnowballFilter(t, snowballLanguage));\n      }  \n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e902c08baf3b883b738211276f135b9db68b4530","date":1417054381,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#checkRandomStrings(String).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#checkRandomStrings(String).mjava","sourceNew":"  public void checkRandomStrings(final String snowballLanguage) throws IOException {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer t = new MockTokenizer();\n        return new TokenStreamComponents(t, new SnowballFilter(t, snowballLanguage));\n      }  \n    };\n    checkRandomData(random(), a, 100*RANDOM_MULTIPLIER);\n  }\n\n","sourceOld":"  public void checkRandomStrings(final String snowballLanguage) throws IOException {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer t = new MockTokenizer();\n        return new TokenStreamComponents(t, new SnowballFilter(t, snowballLanguage));\n      }  \n    };\n    checkRandomData(random(), a, 1000*RANDOM_MULTIPLIER);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#checkRandomStrings(String).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#checkRandomStrings(String).mjava","sourceNew":"  public void checkRandomStrings(final String snowballLanguage) throws IOException {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer t = new MockTokenizer();\n        return new TokenStreamComponents(t, new SnowballFilter(t, snowballLanguage));\n      }  \n    };\n    checkRandomData(random(), a, 100*RANDOM_MULTIPLIER);\n    a.close();\n  }\n\n","sourceOld":"  public void checkRandomStrings(final String snowballLanguage) throws IOException {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer t = new MockTokenizer();\n        return new TokenStreamComponents(t, new SnowballFilter(t, snowballLanguage));\n      }  \n    };\n    checkRandomData(random(), a, 100*RANDOM_MULTIPLIER);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#checkRandomStrings(String).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#checkRandomStrings(String).mjava","sourceNew":"  public void checkRandomStrings(final String snowballLanguage) throws IOException {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer t = new MockTokenizer();\n        return new TokenStreamComponents(t, new SnowballFilter(t, snowballLanguage));\n      }  \n    };\n    checkRandomData(random(), a, 100*RANDOM_MULTIPLIER);\n    a.close();\n  }\n\n","sourceOld":"  public void checkRandomStrings(final String snowballLanguage) throws IOException {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer t = new MockTokenizer();\n        return new TokenStreamComponents(t, new SnowballFilter(t, snowballLanguage));\n      }  \n    };\n    checkRandomData(random(), a, 100*RANDOM_MULTIPLIER);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57c6c784f777a2cc8fa014507ea129526822714d","date":1579733373,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#checkRandomStrings(String).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/snowball/TestSnowball#checkRandomStrings(String).mjava","sourceNew":"  public void checkRandomStrings(final String snowballLanguage) throws IOException {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer t = new MockTokenizer();\n        return new TokenStreamComponents(t, new SnowballFilter(t, snowballLanguage));\n      }  \n    };\n    checkRandomData(random(), a, 20 * RANDOM_MULTIPLIER);\n    a.close();\n  }\n\n","sourceOld":"  public void checkRandomStrings(final String snowballLanguage) throws IOException {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer t = new MockTokenizer();\n        return new TokenStreamComponents(t, new SnowballFilter(t, snowballLanguage));\n      }  \n    };\n    checkRandomData(random(), a, 100*RANDOM_MULTIPLIER);\n    a.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e902c08baf3b883b738211276f135b9db68b4530":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"57c6c784f777a2cc8fa014507ea129526822714d":["a56958d7f71a28824f20031ffbb2e13502a0274e"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["e902c08baf3b883b738211276f135b9db68b4530","a56958d7f71a28824f20031ffbb2e13502a0274e"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["e902c08baf3b883b738211276f135b9db68b4530"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57c6c784f777a2cc8fa014507ea129526822714d"]},"commit2Childs":{"e902c08baf3b883b738211276f135b9db68b4530":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"57c6c784f777a2cc8fa014507ea129526822714d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["e902c08baf3b883b738211276f135b9db68b4530"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d6f074e73200c07d54f242d3880a8da5a35ff97b","b6a6a9e301c12ab07b1d0428b5aad813fff317b3","8fd5be977c105554c6a7b68afcdbc511439723ab"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"a56958d7f71a28824f20031ffbb2e13502a0274e":["57c6c784f777a2cc8fa014507ea129526822714d","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}