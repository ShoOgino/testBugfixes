{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ckb/TestSoraniNormalizationFilter#testEmptyTerm().mjava","commits":[{"id":"4182da157d2684599ca46fec6e0ef59ff5277a70","date":1388851550,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ckb/TestSoraniNormalizationFilter#testEmptyTerm().mjava","pathOld":"/dev/null","sourceNew":"  public void testEmptyTerm() throws IOException {\n    checkOneTerm(a, \"\", \"\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75","date":1399205975,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ckb/TestSoraniNormalizationFilter#testEmptyTerm().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ckb/TestSoraniNormalizationFilter#testEmptyTerm().mjava","sourceNew":"  public void testEmptyTerm() throws IOException {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new KeywordTokenizer();\n        return new TokenStreamComponents(tokenizer, new SoraniNormalizationFilter(tokenizer));\n      }\n    };\n    checkOneTerm(a, \"\", \"\");\n  }\n\n","sourceOld":"  public void testEmptyTerm() throws IOException {\n    checkOneTerm(a, \"\", \"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ckb/TestSoraniNormalizationFilter#testEmptyTerm().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ckb/TestSoraniNormalizationFilter#testEmptyTerm().mjava","sourceNew":"  public void testEmptyTerm() throws IOException {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new KeywordTokenizer();\n        return new TokenStreamComponents(tokenizer, new SoraniNormalizationFilter(tokenizer));\n      }\n    };\n    checkOneTerm(a, \"\", \"\");\n    a.close();\n  }\n\n","sourceOld":"  public void testEmptyTerm() throws IOException {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new KeywordTokenizer();\n        return new TokenStreamComponents(tokenizer, new SoraniNormalizationFilter(tokenizer));\n      }\n    };\n    checkOneTerm(a, \"\", \"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ckb/TestSoraniNormalizationFilter#testEmptyTerm().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ckb/TestSoraniNormalizationFilter#testEmptyTerm().mjava","sourceNew":"  public void testEmptyTerm() throws IOException {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new KeywordTokenizer();\n        return new TokenStreamComponents(tokenizer, new SoraniNormalizationFilter(tokenizer));\n      }\n    };\n    checkOneTerm(a, \"\", \"\");\n    a.close();\n  }\n\n","sourceOld":"  public void testEmptyTerm() throws IOException {\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer tokenizer = new KeywordTokenizer();\n        return new TokenStreamComponents(tokenizer, new SoraniNormalizationFilter(tokenizer));\n      }\n    };\n    checkOneTerm(a, \"\", \"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4182da157d2684599ca46fec6e0ef59ff5277a70":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["923f36bb0db6f793cf62dbb68723ae3bfbaf1d75","a56958d7f71a28824f20031ffbb2e13502a0274e"],"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75":["4182da157d2684599ca46fec6e0ef59ff5277a70"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a56958d7f71a28824f20031ffbb2e13502a0274e":["923f36bb0db6f793cf62dbb68723ae3bfbaf1d75"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56958d7f71a28824f20031ffbb2e13502a0274e"]},"commit2Childs":{"4182da157d2684599ca46fec6e0ef59ff5277a70":["923f36bb0db6f793cf62dbb68723ae3bfbaf1d75"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4182da157d2684599ca46fec6e0ef59ff5277a70"],"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}