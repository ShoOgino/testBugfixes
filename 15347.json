{"path":"solr/core/src/java/org/apache/solr/handler/StreamHandler.DummyErrorStream#read().mjava","commits":[{"id":"a55bf71f91aeded06b44ad1abea6666ea168b697","date":1435941127,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler.DummyErrorStream#read().mjava","pathOld":"/dev/null","sourceNew":"    public Tuple read() {\n      String msg = e.getMessage();\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      m.put(\"_EXCEPTION_\", msg);\n      return new Tuple(m);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8da9a71da64ce12a97dcfcdd912893aeb1fa2981","date":1437510515,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler.DummyErrorStream#read().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/StreamHandler.DummyErrorStream#read().mjava","sourceNew":"    public Tuple read() {\n      String msg = e.getMessage();\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      m.put(\"EXCEPTION\", msg);\n      return new Tuple(m);\n    }\n\n","sourceOld":"    public Tuple read() {\n      String msg = e.getMessage();\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      m.put(\"_EXCEPTION_\", msg);\n      return new Tuple(m);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afdf6ff5b1319d8ae254212f1203a6233ed3e1dc","date":1461010196,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler.DummyErrorStream#read().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/StreamHandler.DummyErrorStream#read().mjava","sourceNew":"    public Tuple read() {\n      String msg = e.getMessage();\n\n      Throwable t = e.getCause();\n      while(t != null) {\n        msg = t.getMessage();\n        t = t.getCause();\n      }\n\n\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      m.put(\"EXCEPTION\", msg);\n      return new Tuple(m);\n    }\n\n","sourceOld":"    public Tuple read() {\n      String msg = e.getMessage();\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      m.put(\"EXCEPTION\", msg);\n      return new Tuple(m);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e15955b4980562a0c1c81d08654904f3fadb83b","date":1461068916,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler.DummyErrorStream#read().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/StreamHandler.DummyErrorStream#read().mjava","sourceNew":"    public Tuple read() {\n      String msg = e.getMessage();\n\n      Throwable t = e.getCause();\n      while(t != null) {\n        msg = t.getMessage();\n        t = t.getCause();\n      }\n\n\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      m.put(\"EXCEPTION\", msg);\n      return new Tuple(m);\n    }\n\n","sourceOld":"    public Tuple read() {\n      String msg = e.getMessage();\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      m.put(\"EXCEPTION\", msg);\n      return new Tuple(m);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2ca4206e5497c29b07a997ea7fc47d3bac0a352","date":1497801058,"type":3,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler.DummyErrorStream#read().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/StreamHandler.DummyErrorStream#read().mjava","sourceNew":"    public Tuple read() {\n      String msg = e.getMessage();\n\n      Throwable t = e.getCause();\n      while (t != null) {\n        msg = t.getMessage();\n        t = t.getCause();\n      }\n\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      m.put(\"EXCEPTION\", msg);\n      return new Tuple(m);\n    }\n\n","sourceOld":"    public Tuple read() {\n      String msg = e.getMessage();\n\n      Throwable t = e.getCause();\n      while(t != null) {\n        msg = t.getMessage();\n        t = t.getCause();\n      }\n\n\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      m.put(\"EXCEPTION\", msg);\n      return new Tuple(m);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler.DummyErrorStream#read().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/StreamHandler.DummyErrorStream#read().mjava","sourceNew":"    public Tuple read() {\n      String msg = e.getMessage();\n\n      Throwable t = e.getCause();\n      while (t != null) {\n        msg = t.getMessage();\n        t = t.getCause();\n      }\n\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      m.put(\"EXCEPTION\", msg);\n      return new Tuple(m);\n    }\n\n","sourceOld":"    public Tuple read() {\n      String msg = e.getMessage();\n\n      Throwable t = e.getCause();\n      while(t != null) {\n        msg = t.getMessage();\n        t = t.getCause();\n      }\n\n\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      m.put(\"EXCEPTION\", msg);\n      return new Tuple(m);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler.DummyErrorStream#read().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/StreamHandler.DummyErrorStream#read().mjava","sourceNew":"    public Tuple read() {\n      String msg = e.getMessage();\n\n      Throwable t = e.getCause();\n      while (t != null) {\n        msg = t.getMessage();\n        t = t.getCause();\n      }\n\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      m.put(\"EXCEPTION\", msg);\n      return new Tuple(m);\n    }\n\n","sourceOld":"    public Tuple read() {\n      String msg = e.getMessage();\n\n      Throwable t = e.getCause();\n      while(t != null) {\n        msg = t.getMessage();\n        t = t.getCause();\n      }\n\n\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      m.put(\"EXCEPTION\", msg);\n      return new Tuple(m);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5","date":1591384964,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler.DummyErrorStream#read().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/StreamHandler.DummyErrorStream#read().mjava","sourceNew":"    @SuppressWarnings({\"unchecked\"})\n    public Tuple read() {\n      String msg = e.getMessage();\n\n      Throwable t = e.getCause();\n      while (t != null) {\n        msg = t.getMessage();\n        t = t.getCause();\n      }\n\n      @SuppressWarnings({\"rawtypes\"})\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      m.put(\"EXCEPTION\", msg);\n      return new Tuple(m);\n    }\n\n","sourceOld":"    public Tuple read() {\n      String msg = e.getMessage();\n\n      Throwable t = e.getCause();\n      while (t != null) {\n        msg = t.getMessage();\n        t = t.getCause();\n      }\n\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      m.put(\"EXCEPTION\", msg);\n      return new Tuple(m);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"804a8d5358fe7b7563b85ee7838714d720b89272","date":1591624987,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/StreamHandler.DummyErrorStream#read().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/StreamHandler.DummyErrorStream#read().mjava","sourceNew":"    public Tuple read() {\n      String msg = e.getMessage();\n\n      Throwable t = e.getCause();\n      while (t != null) {\n        msg = t.getMessage();\n        t = t.getCause();\n      }\n      return Tuple.EXCEPTION(msg, true);\n    }\n\n","sourceOld":"    @SuppressWarnings({\"unchecked\"})\n    public Tuple read() {\n      String msg = e.getMessage();\n\n      Throwable t = e.getCause();\n      while (t != null) {\n        msg = t.getMessage();\n        t = t.getCause();\n      }\n\n      @SuppressWarnings({\"rawtypes\"})\n      Map m = new HashMap();\n      m.put(\"EOF\", true);\n      m.put(\"EXCEPTION\", msg);\n      return new Tuple(m);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"afdf6ff5b1319d8ae254212f1203a6233ed3e1dc":["8da9a71da64ce12a97dcfcdd912893aeb1fa2981"],"a55bf71f91aeded06b44ad1abea6666ea168b697":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5":["28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e15955b4980562a0c1c81d08654904f3fadb83b":["8da9a71da64ce12a97dcfcdd912893aeb1fa2981","afdf6ff5b1319d8ae254212f1203a6233ed3e1dc"],"8da9a71da64ce12a97dcfcdd912893aeb1fa2981":["a55bf71f91aeded06b44ad1abea6666ea168b697"],"804a8d5358fe7b7563b85ee7838714d720b89272":["2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5"],"28288370235ed02234a64753cdbf0c6ec096304a":["0e15955b4980562a0c1c81d08654904f3fadb83b","e2ca4206e5497c29b07a997ea7fc47d3bac0a352"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["0e15955b4980562a0c1c81d08654904f3fadb83b","e2ca4206e5497c29b07a997ea7fc47d3bac0a352"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["804a8d5358fe7b7563b85ee7838714d720b89272"],"e2ca4206e5497c29b07a997ea7fc47d3bac0a352":["0e15955b4980562a0c1c81d08654904f3fadb83b"]},"commit2Childs":{"afdf6ff5b1319d8ae254212f1203a6233ed3e1dc":["0e15955b4980562a0c1c81d08654904f3fadb83b"],"a55bf71f91aeded06b44ad1abea6666ea168b697":["8da9a71da64ce12a97dcfcdd912893aeb1fa2981"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a55bf71f91aeded06b44ad1abea6666ea168b697"],"2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5":["804a8d5358fe7b7563b85ee7838714d720b89272"],"0e15955b4980562a0c1c81d08654904f3fadb83b":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","e2ca4206e5497c29b07a997ea7fc47d3bac0a352"],"8da9a71da64ce12a97dcfcdd912893aeb1fa2981":["afdf6ff5b1319d8ae254212f1203a6233ed3e1dc","0e15955b4980562a0c1c81d08654904f3fadb83b"],"804a8d5358fe7b7563b85ee7838714d720b89272":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"28288370235ed02234a64753cdbf0c6ec096304a":["2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"e2ca4206e5497c29b07a997ea7fc47d3bac0a352":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}