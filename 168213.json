{"path":"solr/core/src/java/org/apache/solr/update/PeerSync.MissedUpdatesFinderBase#handleIndividualVersions(List[Long],boolean).mjava","commits":[{"id":"ce70cdb9511a671e0e15d4dc93b8334c86b6e681","date":1542017422,"type":1,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/PeerSync.MissedUpdatesFinderBase#handleIndividualVersions(List[Long],boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync.MissedUpdatesFinder#handleIndividualVersions(List[Long],boolean).mjava","sourceNew":"    MissedUpdatesRequest handleIndividualVersions(List<Long> otherVersions, boolean completeList) {\n      List<Long> toRequest = new ArrayList<>();\n      for (Long otherVersion : otherVersions) {\n        // stop when the entries get old enough that reorders may lead us to see updates we don't need\n        if (!completeList && Math.abs(otherVersion) < ourLowThreshold) break;\n\n        if (ourUpdateSet.contains(otherVersion) || requestedUpdateSet.contains(otherVersion)) {\n          // we either have this update, or already requested it\n          // TODO: what if the shard we previously requested this from returns failure (because it goes\n          // down)\n          continue;\n        }\n\n        toRequest.add(otherVersion);\n        requestedUpdateSet.add(otherVersion);\n      }\n\n      return MissedUpdatesRequest.of(StrUtils.join(toRequest, ','), toRequest.size());\n    }\n\n","sourceOld":"    private MissedUpdatesRequest handleIndividualVersions(List<Long> otherVersions, boolean completeList) {\n      List<Long> toRequest = new ArrayList<>();\n      for (Long otherVersion : otherVersions) {\n        // stop when the entries get old enough that reorders may lead us to see updates we don't need\n        if (!completeList && Math.abs(otherVersion) < ourLowThreshold) break;\n\n        if (ourUpdateSet.contains(otherVersion) || requestedUpdateSet.contains(otherVersion)) {\n          // we either have this update, or already requested it\n          // TODO: what if the shard we previously requested this from returns failure (because it goes\n          // down)\n          continue;\n        }\n\n        toRequest.add(otherVersion);\n        requestedUpdateSet.add(otherVersion);\n      }\n\n      return MissedUpdatesRequest.of(StrUtils.join(toRequest, ','), toRequest.size());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c38d3299f414132db022cec9d60b2dafc244a7c3","date":1597046674,"type":4,"author":"Cao Manh Dat","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/PeerSync.MissedUpdatesFinderBase#handleIndividualVersions(List[Long],boolean).mjava","sourceNew":null,"sourceOld":"    MissedUpdatesRequest handleIndividualVersions(List<Long> otherVersions, boolean completeList) {\n      List<Long> toRequest = new ArrayList<>();\n      for (Long otherVersion : otherVersions) {\n        // stop when the entries get old enough that reorders may lead us to see updates we don't need\n        if (!completeList && Math.abs(otherVersion) < ourLowThreshold) break;\n\n        if (ourUpdateSet.contains(otherVersion) || requestedUpdateSet.contains(otherVersion)) {\n          // we either have this update, or already requested it\n          // TODO: what if the shard we previously requested this from returns failure (because it goes\n          // down)\n          continue;\n        }\n\n        toRequest.add(otherVersion);\n        requestedUpdateSet.add(otherVersion);\n      }\n\n      return MissedUpdatesRequest.of(StrUtils.join(toRequest, ','), toRequest.size());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c38d3299f414132db022cec9d60b2dafc244a7c3":["ce70cdb9511a671e0e15d4dc93b8334c86b6e681"],"ce70cdb9511a671e0e15d4dc93b8334c86b6e681":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c38d3299f414132db022cec9d60b2dafc244a7c3"]},"commit2Childs":{"c38d3299f414132db022cec9d60b2dafc244a7c3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ce70cdb9511a671e0e15d4dc93b8334c86b6e681":["c38d3299f414132db022cec9d60b2dafc244a7c3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ce70cdb9511a671e0e15d4dc93b8334c86b6e681"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}