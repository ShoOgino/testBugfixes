{"path":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testInvalidFields().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testInvalidFields().mjava","pathOld":"lucene/src/test/org/apache/lucene/document/TestDocument#testInvalidFields().mjava","sourceNew":"  // LUCENE-3616\n  public void testInvalidFields() {\n    try {\n      new Field(\"foo\", new Tokenizer() {\n        @Override\n        public boolean incrementToken() {\n          return false;\n        }}, StringField.TYPE_STORED);\n      fail(\"did not hit expected exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n  }\n\n","sourceOld":"  // LUCENE-3616\n  public void testInvalidFields() {\n    try {\n      new Field(\"foo\", new Tokenizer() {\n        @Override\n        public boolean incrementToken() {\n          return false;\n        }}, StringField.TYPE_STORED);\n      fail(\"did not hit expected exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c2782fe88d18fedf3ef67402c9cb5a41978a8c7","date":1328901155,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testInvalidFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testInvalidFields().mjava","sourceNew":"  // LUCENE-3616\n  public void testInvalidFields() {\n    try {\n      new Field(\"foo\", new EmptyTokenizer(new StringReader(\"\")), StringField.TYPE_STORED);\n      fail(\"did not hit expected exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n  }\n\n","sourceOld":"  // LUCENE-3616\n  public void testInvalidFields() {\n    try {\n      new Field(\"foo\", new Tokenizer() {\n        @Override\n        public boolean incrementToken() {\n          return false;\n        }}, StringField.TYPE_STORED);\n      fail(\"did not hit expected exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":["a7c7a5405c388fd86e5962126be8ad09283eb5cc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a7c7a5405c388fd86e5962126be8ad09283eb5cc","date":1357256120,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testInvalidFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testInvalidFields().mjava","sourceNew":"  // LUCENE-3616\n  public void testInvalidFields() {\n    try {\n      new Field(\"foo\", new MockTokenizer(new StringReader(\"\")), StringField.TYPE_STORED);\n      fail(\"did not hit expected exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n  }\n\n","sourceOld":"  // LUCENE-3616\n  public void testInvalidFields() {\n    try {\n      new Field(\"foo\", new EmptyTokenizer(new StringReader(\"\")), StringField.TYPE_STORED);\n      fail(\"did not hit expected exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n  }\n\n","bugFix":["6c2782fe88d18fedf3ef67402c9cb5a41978a8c7"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testInvalidFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testInvalidFields().mjava","sourceNew":"  // LUCENE-3616\n  public void testInvalidFields() {\n    try {\n      new Field(\"foo\", new MockTokenizer(new StringReader(\"\")), StringField.TYPE_STORED);\n      fail(\"did not hit expected exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n  }\n\n","sourceOld":"  // LUCENE-3616\n  public void testInvalidFields() {\n    try {\n      new Field(\"foo\", new EmptyTokenizer(new StringReader(\"\")), StringField.TYPE_STORED);\n      fail(\"did not hit expected exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testInvalidFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testInvalidFields().mjava","sourceNew":"  // LUCENE-3616\n  public void testInvalidFields() {\n    try {\n      Tokenizer tok = new MockTokenizer();\n      tok.setReader(new StringReader(\"\"));\n      new Field(\"foo\", tok, StringField.TYPE_STORED);\n      fail(\"did not hit expected exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    } catch (IOException ioe) {\n      throw new RuntimeException(ioe);\n    }\n  }\n\n","sourceOld":"  // LUCENE-3616\n  public void testInvalidFields() {\n    try {\n      new Field(\"foo\", new MockTokenizer(new StringReader(\"\")), StringField.TYPE_STORED);\n      fail(\"did not hit expected exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e859719dc778fb66d3d21e7be08cd408fc2bde98","date":1446717611,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testInvalidFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testInvalidFields().mjava","sourceNew":"  // LUCENE-3616\n  public void testInvalidFields() {\n    try {\n      Tokenizer tok = new MockTokenizer();\n      tok.setReader(new StringReader(\"\"));\n      new Field(\"foo\", tok, StringField.TYPE_STORED);\n      fail(\"did not hit expected exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n  }\n\n","sourceOld":"  // LUCENE-3616\n  public void testInvalidFields() {\n    try {\n      Tokenizer tok = new MockTokenizer();\n      tok.setReader(new StringReader(\"\"));\n      new Field(\"foo\", tok, StringField.TYPE_STORED);\n      fail(\"did not hit expected exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    } catch (IOException ioe) {\n      throw new RuntimeException(ioe);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testInvalidFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/document/TestDocument#testInvalidFields().mjava","sourceNew":"  // LUCENE-3616\n  public void testInvalidFields() {\n    expectThrows(IllegalArgumentException.class, () -> {\n      Tokenizer tok = new MockTokenizer();\n      tok.setReader(new StringReader(\"\"));\n      new Field(\"foo\", tok, StringField.TYPE_STORED);\n    });\n  }\n\n","sourceOld":"  // LUCENE-3616\n  public void testInvalidFields() {\n    try {\n      Tokenizer tok = new MockTokenizer();\n      tok.setReader(new StringReader(\"\"));\n      new Field(\"foo\", tok, StringField.TYPE_STORED);\n      fail(\"did not hit expected exc\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n  }\n\n","bugFix":["fa0f44f887719e97183771e977cfc4bfb485b766"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["6c2782fe88d18fedf3ef67402c9cb5a41978a8c7","a7c7a5405c388fd86e5962126be8ad09283eb5cc"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["a7c7a5405c388fd86e5962126be8ad09283eb5cc"],"a7c7a5405c388fd86e5962126be8ad09283eb5cc":["6c2782fe88d18fedf3ef67402c9cb5a41978a8c7"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["e859719dc778fb66d3d21e7be08cd408fc2bde98"],"e859719dc778fb66d3d21e7be08cd408fc2bde98":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"6c2782fe88d18fedf3ef67402c9cb5a41978a8c7":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"a7c7a5405c388fd86e5962126be8ad09283eb5cc":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["e859719dc778fb66d3d21e7be08cd408fc2bde98"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["6c2782fe88d18fedf3ef67402c9cb5a41978a8c7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e859719dc778fb66d3d21e7be08cd408fc2bde98":["05fe562aa248790944d43cdd478f512572835ba0"],"6c2782fe88d18fedf3ef67402c9cb5a41978a8c7":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a7c7a5405c388fd86e5962126be8ad09283eb5cc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}