{"path":"src/java/org/apache/lucene/index/FieldInfos#add(String,boolean,boolean).mjava","commits":[{"id":"770281b8a8459cafcdd2354b6a06078fea2d83c9","date":1077308096,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#add(String,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** If the field is not yet known, adds it. If it is known, checks to make\n   *  sure that the isIndexed flag is the same as was given previously for this\n   *  field. If not - marks it as being indexed.  Same goes for storeTermVector\n   * \n   * @param name The name of the field\n   * @param isIndexed true if the field is indexed\n   * @param storeTermVector true if the term vector should be stored\n   */\n  public void add(String name, boolean isIndexed, boolean storeTermVector) {\n    FieldInfo fi = fieldInfo(name);\n    if (fi == null) {\n      addInternal(name, isIndexed, storeTermVector);\n    } else {\n      if (fi.isIndexed != isIndexed) {\n        fi.isIndexed = true;                      // once indexed, always index\n      }\n      if (fi.storeTermVector != storeTermVector) {\n        fi.storeTermVector = true;                // once vector, always vector\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0","date":1096997448,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#add(String,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#add(String,boolean,boolean).mjava","sourceNew":"  /**\n   * Calls 5 parameter add with false for term vector positions and offsets.\n   * \n   * @param name The name of the field\n   * @param isIndexed  true if the field is indexed\n   * @param storeTermVector true if the term vector should be stored\n   */\n  public void add(String name, boolean isIndexed, boolean storeTermVector){\n    add(name, isIndexed, storeTermVector, false, false);\n  }\n\n","sourceOld":"  /** If the field is not yet known, adds it. If it is known, checks to make\n   *  sure that the isIndexed flag is the same as was given previously for this\n   *  field. If not - marks it as being indexed.  Same goes for storeTermVector\n   * \n   * @param name The name of the field\n   * @param isIndexed true if the field is indexed\n   * @param storeTermVector true if the term vector should be stored\n   */\n  public void add(String name, boolean isIndexed, boolean storeTermVector) {\n    FieldInfo fi = fieldInfo(name);\n    if (fi == null) {\n      addInternal(name, isIndexed, storeTermVector);\n    } else {\n      if (fi.isIndexed != isIndexed) {\n        fi.isIndexed = true;                      // once indexed, always index\n      }\n      if (fi.storeTermVector != storeTermVector) {\n        fi.storeTermVector = true;                // once vector, always vector\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"950f3c7592cb559e2534e5089c78833250e156a3","date":1130557968,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#add(String,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#add(String,boolean,boolean).mjava","sourceNew":"  /**\n   * Calls 5 parameter add with false for term vector positions and offsets.\n   * \n   * @param name The name of the field\n   * @param isIndexed  true if the field is indexed\n   * @param storeTermVector true if the term vector should be stored\n   */\n  public void add(String name, boolean isIndexed, boolean storeTermVector){\n    add(name, isIndexed, storeTermVector, false, false, false);\n  }\n\n","sourceOld":"  /**\n   * Calls 5 parameter add with false for term vector positions and offsets.\n   * \n   * @param name The name of the field\n   * @param isIndexed  true if the field is indexed\n   * @param storeTermVector true if the term vector should be stored\n   */\n  public void add(String name, boolean isIndexed, boolean storeTermVector){\n    add(name, isIndexed, storeTermVector, false, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5350389bf83287111f7760b9e3db3af8e3648474","date":1216372812,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#add(String,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#add(String,boolean,boolean).mjava","sourceNew":"  /**\n   * Calls 5 parameter add with false for term vector positions and offsets.\n   * \n   * @param name The name of the field\n   * @param isIndexed  true if the field is indexed\n   * @param storeTermVector true if the term vector should be stored\n   */\n  synchronized public void add(String name, boolean isIndexed, boolean storeTermVector){\n    add(name, isIndexed, storeTermVector, false, false, false);\n  }\n\n","sourceOld":"  /**\n   * Calls 5 parameter add with false for term vector positions and offsets.\n   * \n   * @param name The name of the field\n   * @param isIndexed  true if the field is indexed\n   * @param storeTermVector true if the term vector should be stored\n   */\n  public void add(String name, boolean isIndexed, boolean storeTermVector){\n    add(name, isIndexed, storeTermVector, false, false, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfos#add(String,boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#add(String,boolean,boolean).mjava","sourceNew":"  /**\n   * Calls 5 parameter add with false for term vector positions and offsets.\n   * \n   * @param name The name of the field\n   * @param isIndexed  true if the field is indexed\n   * @param storeTermVector true if the term vector should be stored\n   */\n  synchronized public void add(String name, boolean isIndexed, boolean storeTermVector){\n    add(name, isIndexed, storeTermVector, false, false, false);\n  }\n\n","sourceOld":"  /**\n   * Calls 5 parameter add with false for term vector positions and offsets.\n   * \n   * @param name The name of the field\n   * @param isIndexed  true if the field is indexed\n   * @param storeTermVector true if the term vector should be stored\n   */\n  synchronized public void add(String name, boolean isIndexed, boolean storeTermVector){\n    add(name, isIndexed, storeTermVector, false, false, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"950f3c7592cb559e2534e5089c78833250e156a3":["6177f0f28ace66d1538b1e6ac5f1773e5449a0b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"5350389bf83287111f7760b9e3db3af8e3648474":["950f3c7592cb559e2534e5089c78833250e156a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5350389bf83287111f7760b9e3db3af8e3648474"]},"commit2Childs":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["6177f0f28ace66d1538b1e6ac5f1773e5449a0b0"],"950f3c7592cb559e2534e5089c78833250e156a3":["5350389bf83287111f7760b9e3db3af8e3648474"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0":["950f3c7592cb559e2534e5089c78833250e156a3"],"5350389bf83287111f7760b9e3db3af8e3648474":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}