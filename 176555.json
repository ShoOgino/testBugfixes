{"path":"src/java/org/apache/lucene/index/FieldInfos#read(InputStream).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#read(InputStream).mjava","pathOld":"/dev/null","sourceNew":"  private final void read(InputStream input) throws IOException {\n    int size = input.readVInt();\n    for (int i = 0; i < size; i++)\n      addInternal(input.readString().intern(),\n\t\t  input.readByte() != 0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770281b8a8459cafcdd2354b6a06078fea2d83c9","date":1077308096,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#read(InputStream).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#read(InputStream).mjava","sourceNew":"  private void read(InputStream input) throws IOException {\n    int size = input.readVInt();//read in the size\n    for (int i = 0; i < size; i++) {\n      String name = input.readString().intern();\n      byte bits = input.readByte();\n      boolean isIndexed = (bits & 0x1) != 0;\n      boolean storeTermVector = (bits & 0x2) != 0;\n      addInternal(name, isIndexed, storeTermVector);\n    }    \n  }\n\n","sourceOld":"  private final void read(InputStream input) throws IOException {\n    int size = input.readVInt();\n    for (int i = 0; i < size; i++)\n      addInternal(input.readString().intern(),\n\t\t  input.readByte() != 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e971ba25509e21a130fef61f0687be0446ca27a0","date":1095369217,"type":5,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldInfos#read(IndexInput).mjava","pathOld":"src/java/org/apache/lucene/index/FieldInfos#read(InputStream).mjava","sourceNew":"  private void read(IndexInput input) throws IOException {\n    int size = input.readVInt();//read in the size\n    for (int i = 0; i < size; i++) {\n      String name = input.readString().intern();\n      byte bits = input.readByte();\n      boolean isIndexed = (bits & 0x1) != 0;\n      boolean storeTermVector = (bits & 0x2) != 0;\n      addInternal(name, isIndexed, storeTermVector);\n    }    \n  }\n\n","sourceOld":"  private void read(InputStream input) throws IOException {\n    int size = input.readVInt();//read in the size\n    for (int i = 0; i < size; i++) {\n      String name = input.readString().intern();\n      byte bits = input.readByte();\n      boolean isIndexed = (bits & 0x1) != 0;\n      boolean storeTermVector = (bits & 0x2) != 0;\n      addInternal(name, isIndexed, storeTermVector);\n    }    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"e971ba25509e21a130fef61f0687be0446ca27a0":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e971ba25509e21a130fef61f0687be0446ca27a0"]},"commit2Childs":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["e971ba25509e21a130fef61f0687be0446ca27a0"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"e971ba25509e21a130fef61f0687be0446ca27a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}