{"path":"src/java/org/apache/solr/util/SolrDocument#getFieldValueMap().mjava","commits":[{"id":"2090964b44752cbb9eef4d981d8df1e2c13cec1f","date":1181757460,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/SolrDocument#getFieldValueMap().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Expose a Map interface to the solr fields.  This function is useful for JSTL\n   */\n  public Map<String,Object> getFieldValueMap() {\n    return new Map<String,Object>() {\n      /** Get the field Value */\n      public Object get(Object key) { \n        return getFieldValue( (String)key ); \n      }\n      \n      /** Set the field Value */\n      public Object put(String key, Object value) {\n        setField( key, value );\n        return null;\n      }\n\n      /** Remove the field Value */\n      public Object remove(Object key) {\n        removeFields( (String)key ); \n        return null;\n      }\n      \n      // Easily Supported methods\n      public boolean containsKey(Object key) { return _fields.containsKey( key ); }\n      public Set<String>  keySet()           { return _fields.keySet();  }\n      public int          size()             { return _fields.size();    }\n      public boolean      isEmpty()          { return _fields.isEmpty(); }\n\n      // Unsupported operations.  These are not necessary for JSTL\n      public void clear() { throw new UnsupportedOperationException(); }\n      public boolean containsValue(Object value) {throw new UnsupportedOperationException();}\n      public Set<java.util.Map.Entry<String, Object>> entrySet() {throw new UnsupportedOperationException();}\n      public void putAll(Map<? extends String, ? extends Object> t) {throw new UnsupportedOperationException();}\n      public Collection<Object> values() {throw new UnsupportedOperationException();}\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb","date":1181791578,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/common/SolrDocument#getFieldValueMap().mjava","pathOld":"src/java/org/apache/solr/util/SolrDocument#getFieldValueMap().mjava","sourceNew":"  /**\n   * Expose a Map interface to the solr fields.  This function is useful for JSTL\n   */\n  public Map<String,Object> getFieldValueMap() {\n    return new Map<String,Object>() {\n      /** Get the field Value */\n      public Object get(Object key) { \n        return getFieldValue( (String)key ); \n      }\n      \n      /** Set the field Value */\n      public Object put(String key, Object value) {\n        setField( key, value );\n        return null;\n      }\n\n      /** Remove the field Value */\n      public Object remove(Object key) {\n        removeFields( (String)key ); \n        return null;\n      }\n      \n      // Easily Supported methods\n      public boolean containsKey(Object key) { return _fields.containsKey( key ); }\n      public Set<String>  keySet()           { return _fields.keySet();  }\n      public int          size()             { return _fields.size();    }\n      public boolean      isEmpty()          { return _fields.isEmpty(); }\n\n      // Unsupported operations.  These are not necessary for JSTL\n      public void clear() { throw new UnsupportedOperationException(); }\n      public boolean containsValue(Object value) {throw new UnsupportedOperationException();}\n      public Set<java.util.Map.Entry<String, Object>> entrySet() {throw new UnsupportedOperationException();}\n      public void putAll(Map<? extends String, ? extends Object> t) {throw new UnsupportedOperationException();}\n      public Collection<Object> values() {throw new UnsupportedOperationException();}\n    };\n  }\n\n","sourceOld":"  /**\n   * Expose a Map interface to the solr fields.  This function is useful for JSTL\n   */\n  public Map<String,Object> getFieldValueMap() {\n    return new Map<String,Object>() {\n      /** Get the field Value */\n      public Object get(Object key) { \n        return getFieldValue( (String)key ); \n      }\n      \n      /** Set the field Value */\n      public Object put(String key, Object value) {\n        setField( key, value );\n        return null;\n      }\n\n      /** Remove the field Value */\n      public Object remove(Object key) {\n        removeFields( (String)key ); \n        return null;\n      }\n      \n      // Easily Supported methods\n      public boolean containsKey(Object key) { return _fields.containsKey( key ); }\n      public Set<String>  keySet()           { return _fields.keySet();  }\n      public int          size()             { return _fields.size();    }\n      public boolean      isEmpty()          { return _fields.isEmpty(); }\n\n      // Unsupported operations.  These are not necessary for JSTL\n      public void clear() { throw new UnsupportedOperationException(); }\n      public boolean containsValue(Object value) {throw new UnsupportedOperationException();}\n      public Set<java.util.Map.Entry<String, Object>> entrySet() {throw new UnsupportedOperationException();}\n      public void putAll(Map<? extends String, ? extends Object> t) {throw new UnsupportedOperationException();}\n      public Collection<Object> values() {throw new UnsupportedOperationException();}\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb":["2090964b44752cbb9eef4d981d8df1e2c13cec1f"],"2090964b44752cbb9eef4d981d8df1e2c13cec1f":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb":[],"2090964b44752cbb9eef4d981d8df1e2c13cec1f":["3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["2090964b44752cbb9eef4d981d8df1e2c13cec1f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3abdd666f12a1d3197de9c612ea8e83cfbb6e7bb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}