{"path":"solr/core/src/test/org/apache/solr/handler/TestSQLHandlerNonCloud#testSQLHandler().mjava","commits":[{"id":"3bb6141814b8d48be493c9aafd5dacf509f1054d","date":1476202427,"type":0,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandlerNonCloud#testSQLHandler().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSQLHandler() throws Exception {\n    String sql = \"select id, field_i, str_s from \" + DEFAULT_TEST_COLLECTION_NAME + \" limit 10\";\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"stmt\", sql);\n    String url = jetty.getBaseUrl() + \"/\" + DEFAULT_TEST_COLLECTION_NAME;\n\n    SolrStream solrStream = new SolrStream(url, sParams);\n    try {\n      getTuples(solrStream);\n      fail(SQLHandler.sqlNonCloudErrorMsg);\n    } catch (IOException e) {\n      assertTrue(e.getMessage().contains(SQLHandler.sqlNonCloudErrorMsg));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandlerNonCloud#testSQLHandler().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSQLHandler() throws Exception {\n    String sql = \"select id, field_i, str_s from \" + DEFAULT_TEST_COLLECTION_NAME + \" limit 10\";\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"stmt\", sql);\n    String url = jetty.getBaseUrl() + \"/\" + DEFAULT_TEST_COLLECTION_NAME;\n\n    SolrStream solrStream = new SolrStream(url, sParams);\n    try {\n      getTuples(solrStream);\n      fail(SQLHandler.sqlNonCloudErrorMsg);\n    } catch (IOException e) {\n      assertTrue(e.getMessage().contains(SQLHandler.sqlNonCloudErrorMsg));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandlerNonCloud#testSQLHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandlerNonCloud#testSQLHandler().mjava","sourceNew":"  @Test\n  public void testSQLHandler() throws Exception {\n    String sql = \"select id, field_i, str_s from \" + DEFAULT_TEST_COLLECTION_NAME + \" limit 10\";\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"stmt\", sql);\n    String url = jetty.getBaseUrl() + \"/\" + DEFAULT_TEST_COLLECTION_NAME;\n\n    SolrStream solrStream = new SolrStream(url, sParams);\n    IOException ex = expectThrows(IOException.class,  () -> getTuples(solrStream));\n    assertTrue(ex.getMessage().contains(SQLHandler.sqlNonCloudErrorMsg));\n  }\n\n","sourceOld":"  @Test\n  public void testSQLHandler() throws Exception {\n    String sql = \"select id, field_i, str_s from \" + DEFAULT_TEST_COLLECTION_NAME + \" limit 10\";\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"stmt\", sql);\n    String url = jetty.getBaseUrl() + \"/\" + DEFAULT_TEST_COLLECTION_NAME;\n\n    SolrStream solrStream = new SolrStream(url, sParams);\n    try {\n      getTuples(solrStream);\n      fail(SQLHandler.sqlNonCloudErrorMsg);\n    } catch (IOException e) {\n      assertTrue(e.getMessage().contains(SQLHandler.sqlNonCloudErrorMsg));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandlerNonCloud#testSQLHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandlerNonCloud#testSQLHandler().mjava","sourceNew":"  @Test\n  public void testSQLHandler() throws Exception {\n    String sql = \"select id, field_i, str_s from \" + DEFAULT_TEST_COLLECTION_NAME + \" limit 10\";\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"stmt\", sql);\n    String url = jetty.getBaseUrl() + \"/\" + DEFAULT_TEST_COLLECTION_NAME;\n\n    SolrStream solrStream = new SolrStream(url, sParams);\n    IOException ex = expectThrows(IOException.class,  () -> getTuples(solrStream));\n    assertTrue(ex.getMessage().contains(SQLHandler.sqlNonCloudErrorMsg));\n  }\n\n","sourceOld":"  @Test\n  public void testSQLHandler() throws Exception {\n    String sql = \"select id, field_i, str_s from \" + DEFAULT_TEST_COLLECTION_NAME + \" limit 10\";\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"stmt\", sql);\n    String url = jetty.getBaseUrl() + \"/\" + DEFAULT_TEST_COLLECTION_NAME;\n\n    SolrStream solrStream = new SolrStream(url, sParams);\n    try {\n      getTuples(solrStream);\n      fail(SQLHandler.sqlNonCloudErrorMsg);\n    } catch (IOException e) {\n      assertTrue(e.getMessage().contains(SQLHandler.sqlNonCloudErrorMsg));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan HÃ¸ydahl","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandlerNonCloud#testSQLHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandlerNonCloud#testSQLHandler().mjava","sourceNew":"  @Test\n  public void testSQLHandler() throws Exception {\n    String sql = \"select id, field_i, str_s from \" + DEFAULT_TEST_COLLECTION_NAME + \" limit 10\";\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"stmt\", sql);\n    String url = jetty.getBaseUrl() + \"/\" + DEFAULT_TEST_COLLECTION_NAME;\n\n    SolrStream solrStream = new SolrStream(url, sParams);\n    IOException ex = expectThrows(IOException.class,  () -> getTuples(solrStream));\n    assertTrue(ex.getMessage().contains(SQLHandler.sqlNonCloudErrorMsg));\n  }\n\n","sourceOld":"  @Test\n  public void testSQLHandler() throws Exception {\n    String sql = \"select id, field_i, str_s from \" + DEFAULT_TEST_COLLECTION_NAME + \" limit 10\";\n    SolrParams sParams = mapParams(CommonParams.QT, \"/sql\", \"stmt\", sql);\n    String url = jetty.getBaseUrl() + \"/\" + DEFAULT_TEST_COLLECTION_NAME;\n\n    SolrStream solrStream = new SolrStream(url, sParams);\n    try {\n      getTuples(solrStream);\n      fail(SQLHandler.sqlNonCloudErrorMsg);\n    } catch (IOException e) {\n      assertTrue(e.getMessage().contains(SQLHandler.sqlNonCloudErrorMsg));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["3bb6141814b8d48be493c9aafd5dacf509f1054d"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["3bb6141814b8d48be493c9aafd5dacf509f1054d","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"f8061ddd97f3352007d927dae445884a6f3d857b":["3bb6141814b8d48be493c9aafd5dacf509f1054d","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3bb6141814b8d48be493c9aafd5dacf509f1054d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1a307447328c95a00248512b40d7a5ff12ecd6a"],"3bb6141814b8d48be493c9aafd5dacf509f1054d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3bb6141814b8d48be493c9aafd5dacf509f1054d"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3bb6141814b8d48be493c9aafd5dacf509f1054d":["d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}