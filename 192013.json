{"path":"src/java/org/apache/solr/handler/component/StatsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","commits":[{"id":"758a0ba5e213f4d1fc89087ae6e4678f7879e450","date":1224361193,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/component/StatsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doStats || (sreq.purpose & ShardRequest.PURPOSE_GET_STATS)==0) return;\n\n    StatsInfo si = rb._statsInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      NamedList stats = (NamedList)srsp.getSolrResponse().getResponse().get(\"stats\");\n\n      NamedList stats_fields = (NamedList)stats.get(\"stats_fields\");\n      if (stats_fields != null) {\n        for (int i=0; i<stats_fields.size(); i++) {\n          String field = stats_fields.getName(i);\n          StatsValues stv = si.statsFields.get(field);\n          stv.accumulate( (NamedList)stats_fields.get(field) );\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["610c97b96420e614c67797fd43822ebc1d4b7ee2","610c97b96420e614c67797fd43822ebc1d4b7ee2","610c97b96420e614c67797fd43822ebc1d4b7ee2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c1c2dfb6aa7b4d342a493c0982be96b76f595add","date":1252705594,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/component/StatsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","pathOld":"src/java/org/apache/solr/handler/component/StatsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","sourceNew":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doStats || (sreq.purpose & ShardRequest.PURPOSE_GET_STATS) == 0) return;\n\n    StatsInfo si = rb._statsInfo;\n\n    for (ShardResponse srsp : sreq.responses) {\n      NamedList stats = (NamedList) srsp.getSolrResponse().getResponse().get(\"stats\");\n\n      NamedList stats_fields = (NamedList) stats.get(\"stats_fields\");\n      if (stats_fields != null) {\n        for (int i = 0; i < stats_fields.size(); i++) {\n          String field = stats_fields.getName(i);\n          StatsValues stv = si.statsFields.get(field);\n          NamedList shardStv = (NamedList) stats_fields.get(field);\n          stv.accumulate(shardStv);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doStats || (sreq.purpose & ShardRequest.PURPOSE_GET_STATS)==0) return;\n\n    StatsInfo si = rb._statsInfo;\n\n    for (ShardResponse srsp: sreq.responses) {\n      NamedList stats = (NamedList)srsp.getSolrResponse().getResponse().get(\"stats\");\n\n      NamedList stats_fields = (NamedList)stats.get(\"stats_fields\");\n      if (stats_fields != null) {\n        for (int i=0; i<stats_fields.size(); i++) {\n          String field = stats_fields.getName(i);\n          StatsValues stv = si.statsFields.get(field);\n          stv.accumulate( (NamedList)stats_fields.get(field) );\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["0d9835c6ddd23dd02eefd5adfc0e5d1e89075fbe","0d9835c6ddd23dd02eefd5adfc0e5d1e89075fbe","0d9835c6ddd23dd02eefd5adfc0e5d1e89075fbe","610c97b96420e614c67797fd43822ebc1d4b7ee2","610c97b96420e614c67797fd43822ebc1d4b7ee2","610c97b96420e614c67797fd43822ebc1d4b7ee2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/component/StatsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","pathOld":"src/java/org/apache/solr/handler/component/StatsComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","sourceNew":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doStats || (sreq.purpose & ShardRequest.PURPOSE_GET_STATS) == 0) return;\n\n    StatsInfo si = rb._statsInfo;\n\n    for (ShardResponse srsp : sreq.responses) {\n      NamedList stats = (NamedList) srsp.getSolrResponse().getResponse().get(\"stats\");\n\n      NamedList stats_fields = (NamedList) stats.get(\"stats_fields\");\n      if (stats_fields != null) {\n        for (int i = 0; i < stats_fields.size(); i++) {\n          String field = stats_fields.getName(i);\n          StatsValues stv = si.statsFields.get(field);\n          NamedList shardStv = (NamedList) stats_fields.get(field);\n          stv.accumulate(shardStv);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (!rb.doStats || (sreq.purpose & ShardRequest.PURPOSE_GET_STATS) == 0) return;\n\n    StatsInfo si = rb._statsInfo;\n\n    for (ShardResponse srsp : sreq.responses) {\n      NamedList stats = (NamedList) srsp.getSolrResponse().getResponse().get(\"stats\");\n\n      NamedList stats_fields = (NamedList) stats.get(\"stats_fields\");\n      if (stats_fields != null) {\n        for (int i = 0; i < stats_fields.size(); i++) {\n          String field = stats_fields.getName(i);\n          StatsValues stv = si.statsFields.get(field);\n          NamedList shardStv = (NamedList) stats_fields.get(field);\n          stv.accumulate(shardStv);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"c1c2dfb6aa7b4d342a493c0982be96b76f595add":["758a0ba5e213f4d1fc89087ae6e4678f7879e450"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"758a0ba5e213f4d1fc89087ae6e4678f7879e450":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["c1c2dfb6aa7b4d342a493c0982be96b76f595add"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c1c2dfb6aa7b4d342a493c0982be96b76f595add":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["758a0ba5e213f4d1fc89087ae6e4678f7879e450"],"758a0ba5e213f4d1fc89087ae6e4678f7879e450":["c1c2dfb6aa7b4d342a493c0982be96b76f595add"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}