{"path":"solr/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","commits":[{"id":"16654870c57d61d467833c7409f0102361ef758b","date":1282600576,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","pathOld":"/dev/null","sourceNew":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(adoc(\"id\", \"2\", \"id_s\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eab6257f88c57d52d7b938de0c10b5144cf1a9c5","date":1288030987,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","pathOld":"solr/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","sourceNew":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","sourceOld":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(adoc(\"id\", \"2\", \"id_s\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b12d3e81e0f95a4527b5703953c503f71120ffcc","date":1288080933,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","pathOld":"solr/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","sourceNew":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","sourceOld":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(adoc(\"id\", \"2\", \"id_s\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","pathOld":"/dev/null","sourceNew":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","pathOld":"solr/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","sourceNew":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","sourceOld":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","pathOld":"solr/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","sourceNew":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","sourceOld":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","pathOld":"solr/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","sourceNew":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","sourceOld":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["eab6257f88c57d52d7b938de0c10b5144cf1a9c5"],"c26f00b574427b55127e869b935845554afde1fa":["eab6257f88c57d52d7b938de0c10b5144cf1a9c5","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"16654870c57d61d467833c7409f0102361ef758b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"eab6257f88c57d52d7b938de0c10b5144cf1a9c5":["16654870c57d61d467833c7409f0102361ef758b"],"b12d3e81e0f95a4527b5703953c503f71120ffcc":["16654870c57d61d467833c7409f0102361ef758b","eab6257f88c57d52d7b938de0c10b5144cf1a9c5"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["eab6257f88c57d52d7b938de0c10b5144cf1a9c5"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","eab6257f88c57d52d7b938de0c10b5144cf1a9c5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"16654870c57d61d467833c7409f0102361ef758b":["eab6257f88c57d52d7b938de0c10b5144cf1a9c5","b12d3e81e0f95a4527b5703953c503f71120ffcc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["16654870c57d61d467833c7409f0102361ef758b","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"eab6257f88c57d52d7b938de0c10b5144cf1a9c5":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","b12d3e81e0f95a4527b5703953c503f71120ffcc","a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"b12d3e81e0f95a4527b5703953c503f71120ffcc":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b12d3e81e0f95a4527b5703953c503f71120ffcc","a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}