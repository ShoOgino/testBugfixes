{"path":"solr/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","pathOld":"/dev/null","sourceNew":"  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <b>vector</b> highlighter test']\"\n            );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","sourceNew":null,"sourceOld":"  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <b>vector</b> highlighter test']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","pathOld":"src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","sourceNew":"  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <b>vector</b> highlighter test']\"\n            );\n  }\n\n","sourceOld":"  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <b>vector</b> highlighter test']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","pathOld":"/dev/null","sourceNew":"  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <b>vector</b> highlighter test']\"\n            );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afeb033b2bd36d8ce9d82142b197da4dde13068b","date":1269115863,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","pathOld":"solr/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","sourceNew":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <b>vector</b> highlighter test']\"\n            );\n  }\n\n","sourceOld":"  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <b>vector</b> highlighter test']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1841754074f4862d96f05ff37613d2d5df43093","date":1281194333,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","pathOld":"solr/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","sourceNew":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <em>vector</em> highlighter test']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <b>vector</b> highlighter test']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":["0e4f44e6c290ae7afe1472adb49e9a743ec330e0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0e4f44e6c290ae7afe1472adb49e9a743ec330e0","date":1285628901,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","pathOld":"solr/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","sourceNew":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <em>vector</em> highlighter test ']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <em>vector</em> highlighter test']\"\n            );\n  }\n\n","bugFix":["f1841754074f4862d96f05ff37613d2d5df43093"],"bugIntro":["402cab02288e78c70a21b33b2a5b84bd62e2c0bc","402cab02288e78c70a21b33b2a5b84bd62e2c0bc","402cab02288e78c70a21b33b2a5b84bd62e2c0bc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","pathOld":"solr/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","sourceNew":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <em>vector</em> highlighter test ']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <b>vector</b> highlighter test']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","pathOld":"solr/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","sourceNew":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <em>vector</em> highlighter test ']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <em>vector</em> highlighter test ']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","pathOld":"solr/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","sourceNew":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <em>vector</em> highlighter test ']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <em>vector</em> highlighter test ']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","pathOld":"solr/src/test/org/apache/solr/highlight/FastVectorHighlighterTest#test().mjava","sourceNew":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <em>vector</em> highlighter test ']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void test() {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"tv_text\");\n    args.put(\"hl.snippets\", \"2\");\n    args.put(\"hl.useFastVectorHighlighter\", \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\",0,200,args);\n    \n    assertU(adoc(\"tv_text\", \"basic fast vector highlighter test\", \n                 \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"tv_text:vector\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='tv_text']/str[.=' fast <em>vector</em> highlighter test ']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["0e4f44e6c290ae7afe1472adb49e9a743ec330e0","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"f1841754074f4862d96f05ff37613d2d5df43093":["afeb033b2bd36d8ce9d82142b197da4dde13068b"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["afeb033b2bd36d8ce9d82142b197da4dde13068b","0e4f44e6c290ae7afe1472adb49e9a743ec330e0"],"0e4f44e6c290ae7afe1472adb49e9a743ec330e0":["f1841754074f4862d96f05ff37613d2d5df43093"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["0e4f44e6c290ae7afe1472adb49e9a743ec330e0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afeb033b2bd36d8ce9d82142b197da4dde13068b":["1da8d55113b689b06716246649de6f62430f15c0"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["0e4f44e6c290ae7afe1472adb49e9a743ec330e0"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"f1841754074f4862d96f05ff37613d2d5df43093":["0e4f44e6c290ae7afe1472adb49e9a743ec330e0"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"0e4f44e6c290ae7afe1472adb49e9a743ec330e0":["c26f00b574427b55127e869b935845554afde1fa","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"1da8d55113b689b06716246649de6f62430f15c0":["afeb033b2bd36d8ce9d82142b197da4dde13068b"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"afeb033b2bd36d8ce9d82142b197da4dde13068b":["f1841754074f4862d96f05ff37613d2d5df43093","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}