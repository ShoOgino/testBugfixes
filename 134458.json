{"path":"contrib/spatial/src/java/org/apache/lucene/spatial/tier/DistanceFieldComparatorSource.DistanceScoreDocLookupComparator#setNextReader(IndexReader,int).mjava","commits":[{"id":"e0ef2616973dc9a77f2ba89d78110ed14bda0631","date":1249477738,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/spatial/src/java/org/apache/lucene/spatial/tier/DistanceFieldComparatorSource.DistanceScoreDocLookupComparator#setNextReader(IndexReader,int).mjava","pathOld":"contrib/spatial/src/java/org/apache/lucene/spatial/tier/DistanceFieldComparatorSource.DistanceScoreDocLookupComparator#setNextReader(IndexReader,int,int).mjava","sourceNew":"\t\t@Override\n                  public void setNextReader(IndexReader reader, int docBase)\n                  throws IOException {\n\t\t\t\n\t\t\t// each reader in a segmented base\n\t\t\t// has an offset based on the maxDocs of previous readers\n\t\t\toffset = docBase;\n\t\t}\n\n","sourceOld":"\t\t@Override\n\t\tpublic void setNextReader(IndexReader reader, int docBase,\n\t\t\t\tint numSlotsFull) throws IOException {\n\t\t\t\n\t\t\t// each reader in a segmented base\n\t\t\t// has an offset based on the maxDocs of previous readers\n\t\t\toffset = docBase;\n\t\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/DistanceFieldComparatorSource.DistanceScoreDocLookupComparator#setNextReader(IndexReader,int).mjava","pathOld":"contrib/spatial/src/java/org/apache/lucene/spatial/tier/DistanceFieldComparatorSource.DistanceScoreDocLookupComparator#setNextReader(IndexReader,int).mjava","sourceNew":"\t\t@Override\n                  public void setNextReader(IndexReader reader, int docBase)\n                  throws IOException {\n\t\t\t\n\t\t\t// each reader in a segmented base\n\t\t\t// has an offset based on the maxDocs of previous readers\n\t\t\toffset = docBase;\n\t\t}\n\n","sourceOld":"\t\t@Override\n                  public void setNextReader(IndexReader reader, int docBase)\n                  throws IOException {\n\t\t\t\n\t\t\t// each reader in a segmented base\n\t\t\t// has an offset based on the maxDocs of previous readers\n\t\t\toffset = docBase;\n\t\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e0ef2616973dc9a77f2ba89d78110ed14bda0631":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e0ef2616973dc9a77f2ba89d78110ed14bda0631"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e0ef2616973dc9a77f2ba89d78110ed14bda0631"],"e0ef2616973dc9a77f2ba89d78110ed14bda0631":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}