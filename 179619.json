{"path":"lucene/queries/src/java/org/apache/lucene/queries/payloads/SpanPayloadCheckQuery.SpanPayloadCheckWeight#scorer(LeafReaderContext).mjava","commits":[{"id":"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4","date":1442407411,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/SpanPayloadCheckQuery.SpanPayloadCheckWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/SpanPayloadCheckQuery.SpanPayloadCheckWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      if (field == null)\n        return null;\n\n      Terms terms = context.reader().terms(field);\n      if (terms != null && terms.hasPositions() == false) {\n        throw new IllegalStateException(\"field \\\"\" + field + \"\\\" was indexed without position data; cannot run SpanQuery (query=\" + parentQuery + \")\");\n      }\n\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      Similarity.SimScorer simScorer = simWeight == null ? null : similarity.simScorer(simWeight, context);\n      return (spans == null) ? null : new SpanScorer(spans, this, simScorer);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      if (field == null)\n        return null;\n\n      Terms terms = context.reader().terms(field);\n      if (terms != null && terms.hasPositions() == false) {\n        throw new IllegalStateException(\"field \\\"\" + field + \"\\\" was indexed without position data; cannot run SpanQuery (query=\" + parentQuery + \")\");\n      }\n\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      Similarity.SimScorer simScorer = simWeight == null ? null : similarity.simScorer(simWeight, context);\n      return (spans == null) ? null : new SpanScorer(spans, this, simScorer);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"557b118fdfb9d28b6cfe38fac273af58c4d51135","date":1445505363,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/SpanPayloadCheckQuery.SpanPayloadCheckWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/SpanPayloadCheckQuery.SpanPayloadCheckWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      if (field == null)\n        return null;\n\n      Terms terms = context.reader().terms(field);\n      if (terms != null && terms.hasPositions() == false) {\n        throw new IllegalStateException(\"field \\\"\" + field + \"\\\" was indexed without position data; cannot run SpanQuery (query=\" + parentQuery + \")\");\n      }\n\n      return getSpans(context, Postings.PAYLOADS);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      if (field == null)\n        return null;\n\n      Terms terms = context.reader().terms(field);\n      if (terms != null && terms.hasPositions() == false) {\n        throw new IllegalStateException(\"field \\\"\" + field + \"\\\" was indexed without position data; cannot run SpanQuery (query=\" + parentQuery + \")\");\n      }\n\n      Spans spans = getSpans(context, Postings.PAYLOADS);\n      Similarity.SimScorer simScorer = simWeight == null ? null : similarity.simScorer(simWeight, context);\n      return (spans == null) ? null : new SpanScorer(spans, this, simScorer);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/SpanPayloadCheckQuery.SpanPayloadCheckWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/SpanPayloadCheckQuery.SpanPayloadCheckWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public SpanScorer scorer(LeafReaderContext context) throws IOException {\n      if (field == null)\n        return null;\n\n      Terms terms = context.reader().terms(field);\n      if (terms != null && terms.hasPositions() == false) {\n        throw new IllegalStateException(\"field \\\"\" + field + \"\\\" was indexed without position data; cannot run SpanQuery (query=\" + parentQuery + \")\");\n      }\n\n      final Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null) {\n        return null;\n      }\n      final Similarity.SimScorer docScorer = getSimScorer(context);\n      return new SpanScorer(this, spans, docScorer);\n    }\n\n","sourceOld":"    @Override\n    public Scorer scorer(LeafReaderContext context) throws IOException {\n      if (field == null)\n        return null;\n\n      Terms terms = context.reader().terms(field);\n      if (terms != null && terms.hasPositions() == false) {\n        throw new IllegalStateException(\"field \\\"\" + field + \"\\\" was indexed without position data; cannot run SpanQuery (query=\" + parentQuery + \")\");\n      }\n\n      return getSpans(context, Postings.PAYLOADS);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68d6cb7f0f019661a784bd0e5a21e85b5f812af6","date":1515075216,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/SpanPayloadCheckQuery.SpanPayloadCheckWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/SpanPayloadCheckQuery.SpanPayloadCheckWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public SpanScorer scorer(LeafReaderContext context) throws IOException {\n      if (field == null)\n        return null;\n\n      Terms terms = context.reader().terms(field);\n      if (terms != null && terms.hasPositions() == false) {\n        throw new IllegalStateException(\"field \\\"\" + field + \"\\\" was indexed without position data; cannot run SpanQuery (query=\" + parentQuery + \")\");\n      }\n\n      final Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null) {\n        return null;\n      }\n      final LeafSimScorer docScorer = getSimScorer(context);\n      return new SpanScorer(this, spans, docScorer);\n    }\n\n","sourceOld":"    @Override\n    public SpanScorer scorer(LeafReaderContext context) throws IOException {\n      if (field == null)\n        return null;\n\n      Terms terms = context.reader().terms(field);\n      if (terms != null && terms.hasPositions() == false) {\n        throw new IllegalStateException(\"field \\\"\" + field + \"\\\" was indexed without position data; cannot run SpanQuery (query=\" + parentQuery + \")\");\n      }\n\n      final Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null) {\n        return null;\n      }\n      final Similarity.SimScorer docScorer = getSimScorer(context);\n      return new SpanScorer(this, spans, docScorer);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/SpanPayloadCheckQuery.SpanPayloadCheckWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/payloads/SpanPayloadCheckQuery.SpanPayloadCheckWeight#scorer(LeafReaderContext).mjava","sourceNew":"    @Override\n    public SpanScorer scorer(LeafReaderContext context) throws IOException {\n      if (field == null)\n        return null;\n\n      Terms terms = context.reader().terms(field);\n      if (terms != null && terms.hasPositions() == false) {\n        throw new IllegalStateException(\"field \\\"\" + field + \"\\\" was indexed without position data; cannot run SpanQuery (query=\" + parentQuery + \")\");\n      }\n\n      final Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null) {\n        return null;\n      }\n      final LeafSimScorer docScorer = getSimScorer(context);\n      return new SpanScorer(this, spans, docScorer);\n    }\n\n","sourceOld":"    @Override\n    public SpanScorer scorer(LeafReaderContext context) throws IOException {\n      if (field == null)\n        return null;\n\n      Terms terms = context.reader().terms(field);\n      if (terms != null && terms.hasPositions() == false) {\n        throw new IllegalStateException(\"field \\\"\" + field + \"\\\" was indexed without position data; cannot run SpanQuery (query=\" + parentQuery + \")\");\n      }\n\n      final Spans spans = getSpans(context, Postings.PAYLOADS);\n      if (spans == null) {\n        return null;\n      }\n      final Similarity.SimScorer docScorer = getSimScorer(context);\n      return new SpanScorer(this, spans, docScorer);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b94236357aaa22b76c10629851fe4e376e0cea82":["7dd748bb245633a8195281556bb0e68a6ea97d18","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"557b118fdfb9d28b6cfe38fac273af58c4d51135":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["557b118fdfb9d28b6cfe38fac273af58c4d51135"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["557b118fdfb9d28b6cfe38fac273af58c4d51135"],"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"557b118fdfb9d28b6cfe38fac273af58c4d51135":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["b94236357aaa22b76c10629851fe4e376e0cea82","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}