{"path":"contrib/misc/src/java/org/apache/lucene/queryParser/ext/ExtendableQueryParser#getFieldQuery(String,String).mjava","commits":[{"id":"8d43be4aa22695313abd1d6ce020b0dce895caea","date":1260016199,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/queryParser/ext/ExtendableQueryParser#getFieldQuery(String,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected Query getFieldQuery(final String field, final String queryText)\n      throws ParseException {\n    final Pair<String,String> splitExtensionField = this.extensions\n        .splitExtensionField(defaultField, field);\n    final ParserExtension extension = this.extensions\n        .getExtension(splitExtensionField.cud);\n    if (extension != null) {\n      return extension.parse(new ExtensionQuery(splitExtensionField.cur,\n          queryText));\n    }\n    return super.getFieldQuery(field, queryText);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a9d5fdac4eb49e470635f9e83febcba6697b56d","date":1262010434,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/queryParser/ext/ExtendableQueryParser#getFieldQuery(String,String).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/queryParser/ext/ExtendableQueryParser#getFieldQuery(String,String).mjava","sourceNew":"  @Override\n  protected Query getFieldQuery(final String field, final String queryText)\n      throws ParseException {\n    final Pair<String,String> splitExtensionField = this.extensions\n        .splitExtensionField(defaultField, field);\n    final ParserExtension extension = this.extensions\n        .getExtension(splitExtensionField.cud);\n    if (extension != null) {\n      return extension.parse(new ExtensionQuery(this, splitExtensionField.cur,\n          queryText));\n    }\n    return super.getFieldQuery(field, queryText);\n  }\n\n","sourceOld":"  @Override\n  protected Query getFieldQuery(final String field, final String queryText)\n      throws ParseException {\n    final Pair<String,String> splitExtensionField = this.extensions\n        .splitExtensionField(defaultField, field);\n    final ParserExtension extension = this.extensions\n        .getExtension(splitExtensionField.cud);\n    if (extension != null) {\n      return extension.parse(new ExtensionQuery(splitExtensionField.cur,\n          queryText));\n    }\n    return super.getFieldQuery(field, queryText);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/queryParser/ext/ExtendableQueryParser#getFieldQuery(String,String).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/queryParser/ext/ExtendableQueryParser#getFieldQuery(String,String).mjava","sourceNew":"  @Override\n  protected Query getFieldQuery(final String field, final String queryText)\n      throws ParseException {\n    final Pair<String,String> splitExtensionField = this.extensions\n        .splitExtensionField(defaultField, field);\n    final ParserExtension extension = this.extensions\n        .getExtension(splitExtensionField.cud);\n    if (extension != null) {\n      return extension.parse(new ExtensionQuery(this, splitExtensionField.cur,\n          queryText));\n    }\n    return super.getFieldQuery(field, queryText);\n  }\n\n","sourceOld":"  @Override\n  protected Query getFieldQuery(final String field, final String queryText)\n      throws ParseException {\n    final Pair<String,String> splitExtensionField = this.extensions\n        .splitExtensionField(defaultField, field);\n    final ParserExtension extension = this.extensions\n        .getExtension(splitExtensionField.cud);\n    if (extension != null) {\n      return extension.parse(new ExtensionQuery(this, splitExtensionField.cur,\n          queryText));\n    }\n    return super.getFieldQuery(field, queryText);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5a9d5fdac4eb49e470635f9e83febcba6697b56d":["8d43be4aa22695313abd1d6ce020b0dce895caea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5a9d5fdac4eb49e470635f9e83febcba6697b56d"],"8d43be4aa22695313abd1d6ce020b0dce895caea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8d43be4aa22695313abd1d6ce020b0dce895caea"],"5a9d5fdac4eb49e470635f9e83febcba6697b56d":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"8d43be4aa22695313abd1d6ce020b0dce895caea":["5a9d5fdac4eb49e470635f9e83febcba6697b56d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}