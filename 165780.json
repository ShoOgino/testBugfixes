{"path":"solr/core/src/java/org/apache/solr/util/stats/Snapshot#getValue(double).mjava","commits":[{"id":"ce58244be71dcade436d9313669202ebc249466b","date":1357224775,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/Snapshot#getValue(double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the value at the given quantile.\n   *\n   * @param quantile    a given quantile, in {@code [0..1]}\n   * @return the value in the distribution at {@code quantile}\n   */\n  public double getValue(double quantile) {\n    if (quantile < 0.0 || quantile > 1.0) {\n      throw new IllegalArgumentException(quantile + \" is not in [0..1]\");\n    }\n\n    if (values.length == 0) {\n      return 0.0;\n    }\n\n    final double pos = quantile * (values.length + 1);\n\n    if (pos < 1) {\n      return values[0];\n    }\n\n    if (pos >= values.length) {\n      return values[values.length - 1];\n    }\n\n    final double lower = values[(int) pos - 1];\n    final double upper = values[(int) pos];\n    return lower + (pos - floor(pos)) * (upper - lower);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/stats/Snapshot#getValue(double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the value at the given quantile.\n   *\n   * @param quantile    a given quantile, in {@code [0..1]}\n   * @return the value in the distribution at {@code quantile}\n   */\n  public double getValue(double quantile) {\n    if (quantile < 0.0 || quantile > 1.0) {\n      throw new IllegalArgumentException(quantile + \" is not in [0..1]\");\n    }\n\n    if (values.length == 0) {\n      return 0.0;\n    }\n\n    final double pos = quantile * (values.length + 1);\n\n    if (pos < 1) {\n      return values[0];\n    }\n\n    if (pos >= values.length) {\n      return values[values.length - 1];\n    }\n\n    final double lower = values[(int) pos - 1];\n    final double upper = values[(int) pos];\n    return lower + (pos - floor(pos)) * (upper - lower);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f3e7752e8a5e963c6939aaa99c36134147a5ece","date":1479805653,"type":4,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/stats/Snapshot#getValue(double).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns the value at the given quantile.\n   *\n   * @param quantile    a given quantile, in {@code [0..1]}\n   * @return the value in the distribution at {@code quantile}\n   */\n  public double getValue(double quantile) {\n    if (quantile < 0.0 || quantile > 1.0) {\n      throw new IllegalArgumentException(quantile + \" is not in [0..1]\");\n    }\n\n    if (values.length == 0) {\n      return 0.0;\n    }\n\n    final double pos = quantile * (values.length + 1);\n\n    if (pos < 1) {\n      return values[0];\n    }\n\n    if (pos >= values.length) {\n      return values[values.length - 1];\n    }\n\n    final double lower = values[(int) pos - 1];\n    final double upper = values[(int) pos];\n    return lower + (pos - floor(pos)) * (upper - lower);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"727bb765ff2542275f6d31f67be18d7104bae148","date":1480353976,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/stats/Snapshot#getValue(double).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns the value at the given quantile.\n   *\n   * @param quantile    a given quantile, in {@code [0..1]}\n   * @return the value in the distribution at {@code quantile}\n   */\n  public double getValue(double quantile) {\n    if (quantile < 0.0 || quantile > 1.0) {\n      throw new IllegalArgumentException(quantile + \" is not in [0..1]\");\n    }\n\n    if (values.length == 0) {\n      return 0.0;\n    }\n\n    final double pos = quantile * (values.length + 1);\n\n    if (pos < 1) {\n      return values[0];\n    }\n\n    if (pos >= values.length) {\n      return values[values.length - 1];\n    }\n\n    final double lower = values[(int) pos - 1];\n    final double upper = values[(int) pos];\n    return lower + (pos - floor(pos)) * (upper - lower);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ce58244be71dcade436d9313669202ebc249466b"],"0f3e7752e8a5e963c6939aaa99c36134147a5ece":["ce58244be71dcade436d9313669202ebc249466b"],"727bb765ff2542275f6d31f67be18d7104bae148":["ce58244be71dcade436d9313669202ebc249466b","0f3e7752e8a5e963c6939aaa99c36134147a5ece"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ce58244be71dcade436d9313669202ebc249466b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f3e7752e8a5e963c6939aaa99c36134147a5ece"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"0f3e7752e8a5e963c6939aaa99c36134147a5ece":["727bb765ff2542275f6d31f67be18d7104bae148","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"727bb765ff2542275f6d31f67be18d7104bae148":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","ce58244be71dcade436d9313669202ebc249466b"],"ce58244be71dcade436d9313669202ebc249466b":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","0f3e7752e8a5e963c6939aaa99c36134147a5ece","727bb765ff2542275f6d31f67be18d7104bae148"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","727bb765ff2542275f6d31f67be18d7104bae148","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}