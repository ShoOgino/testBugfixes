{"path":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.EveryNOrDocFreqTermSelector#isIndexTerm(BytesRef,TermStats).mjava","commits":[{"id":"6ecd298fdc085e7eba27afa7fae58df1ba1a2808","date":1295102557,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.EveryNOrDocFreqTermSelector#isIndexTerm(BytesRef,TermStats).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.EveryNOrDocFreqTermSelector#isIndexTerm(BytesRef,int).mjava","sourceNew":"    @Override\n    public boolean isIndexTerm(BytesRef term, TermStats stats) {\n      if (stats.docFreq >= docFreqThresh || count >= interval) {\n        count = 0;\n        return true;\n      } else {\n        count++;\n        return false;\n      }\n    }\n\n","sourceOld":"    @Override\n    public boolean isIndexTerm(BytesRef term, int docFreq) {\n      if (docFreq >= docFreqThresh || count >= interval) {\n        count = 0;\n        return true;\n      } else {\n        count++;\n        return false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16843358872ed92ba92888ab99df297550b9a36a","date":1295144724,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.EveryNOrDocFreqTermSelector#isIndexTerm(BytesRef,TermStats).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.EveryNOrDocFreqTermSelector#isIndexTerm(BytesRef,int).mjava","sourceNew":"    @Override\n    public boolean isIndexTerm(BytesRef term, TermStats stats) {\n      if (stats.docFreq >= docFreqThresh || count >= interval) {\n        count = 0;\n        return true;\n      } else {\n        count++;\n        return false;\n      }\n    }\n\n","sourceOld":"    @Override\n    public boolean isIndexTerm(BytesRef term, int docFreq) {\n      if (docFreq >= docFreqThresh || count >= interval) {\n        count = 0;\n        return true;\n      } else {\n        count++;\n        return false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ead1ee00dcc99b6462be8e6efa3b127c54e39c1","date":1295523250,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.EveryNOrDocFreqTermSelector#isIndexTerm(BytesRef,TermStats).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.EveryNOrDocFreqTermSelector#isIndexTerm(BytesRef,TermStats).mjava","sourceNew":"    @Override\n    public boolean isIndexTerm(BytesRef term, TermStats stats) {\n      if (stats.docFreq >= docFreqThresh || count >= interval) {\n        count = 1;\n        return true;\n      } else {\n        count++;\n        return false;\n      }\n    }\n\n","sourceOld":"    @Override\n    public boolean isIndexTerm(BytesRef term, TermStats stats) {\n      if (stats.docFreq >= docFreqThresh || count >= interval) {\n        count = 0;\n        return true;\n      } else {\n        count++;\n        return false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.EveryNOrDocFreqTermSelector#isIndexTerm(BytesRef,TermStats).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.EveryNOrDocFreqTermSelector#isIndexTerm(BytesRef,TermStats).mjava","sourceNew":"    @Override\n    public boolean isIndexTerm(BytesRef term, TermStats stats) {\n      if (stats.docFreq >= docFreqThresh || count >= interval) {\n        count = 1;\n        return true;\n      } else {\n        count++;\n        return false;\n      }\n    }\n\n","sourceOld":"    @Override\n    public boolean isIndexTerm(BytesRef term, TermStats stats) {\n      if (stats.docFreq >= docFreqThresh || count >= interval) {\n        count = 0;\n        return true;\n      } else {\n        count++;\n        return false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.EveryNOrDocFreqTermSelector#isIndexTerm(BytesRef,TermStats).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public boolean isIndexTerm(BytesRef term, TermStats stats) {\n      if (stats.docFreq >= docFreqThresh || count >= interval) {\n        count = 1;\n        return true;\n      } else {\n        count++;\n        return false;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/VariableGapTermsIndexWriter.EveryNOrDocFreqTermSelector#isIndexTerm(BytesRef,TermStats).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/VariableGapTermsIndexWriter.EveryNOrDocFreqTermSelector#isIndexTerm(BytesRef,TermStats).mjava","sourceNew":"    @Override\n    public boolean isIndexTerm(BytesRef term, TermStats stats) {\n      if (stats.docFreq >= docFreqThresh || count >= interval) {\n        count = 1;\n        return true;\n      } else {\n        count++;\n        return false;\n      }\n    }\n\n","sourceOld":"    @Override\n    public boolean isIndexTerm(BytesRef term, TermStats stats) {\n      if (stats.docFreq >= docFreqThresh || count >= interval) {\n        count = 1;\n        return true;\n      } else {\n        count++;\n        return false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3ead1ee00dcc99b6462be8e6efa3b127c54e39c1":["6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3ead1ee00dcc99b6462be8e6efa3b127c54e39c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"16843358872ed92ba92888ab99df297550b9a36a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["3ead1ee00dcc99b6462be8e6efa3b127c54e39c1"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["16843358872ed92ba92888ab99df297550b9a36a","3ead1ee00dcc99b6462be8e6efa3b127c54e39c1"],"6ecd298fdc085e7eba27afa7fae58df1ba1a2808":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"3ead1ee00dcc99b6462be8e6efa3b127c54e39c1":["29ef99d61cda9641b6250bf9567329a6e65f901d","a0ae5e3ed1232483b7b8a014f175a5fe43595982","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","16843358872ed92ba92888ab99df297550b9a36a","6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"16843358872ed92ba92888ab99df297550b9a36a":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"6ecd298fdc085e7eba27afa7fae58df1ba1a2808":["3ead1ee00dcc99b6462be8e6efa3b127c54e39c1","16843358872ed92ba92888ab99df297550b9a36a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}