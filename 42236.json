{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestCoreFactories#testBogusArguments().mjava","commits":[{"id":"313c36388b6cae6118f75a1860ad0ba0af7e1344","date":1601279368,"type":2,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestCoreFactories#testBogusArguments().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestStandardFactories#testBogusArguments().mjava","sourceNew":"  /** Test that bogus arguments result in exception */\n  public void testBogusArguments() throws Exception {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      tokenizerFactory(\"Whitespace\", \"bogusArg\", \"bogusValue\");\n    });\n    assertTrue(expected.getMessage().contains(\"Unknown parameters\"));\n    \n    expected = expectThrows(IllegalArgumentException.class, () -> {\n      tokenizerFactory(\"Letter\", \"bogusArg\", \"bogusValue\");\n    });\n    assertTrue(expected.getMessage().contains(\"Unknown parameters\"));\n  }\n\n","sourceOld":"  /** Test that bogus arguments result in exception */\n  public void testBogusArguments() throws Exception {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      tokenizerFactory(\"Standard\", \"bogusArg\", \"bogusValue\");\n    });\n    assertTrue(expected.getMessage().contains(\"Unknown parameters\"));\n    \n    expected = expectThrows(IllegalArgumentException.class, () -> {\n      tokenizerFactory(\"Classic\", \"bogusArg\", \"bogusValue\");\n    });\n    assertTrue(expected.getMessage().contains(\"Unknown parameters\"));\n    \n    expected = expectThrows(IllegalArgumentException.class, () -> {\n      tokenizerFactory(\"Whitespace\", \"bogusArg\", \"bogusValue\");\n    });\n    assertTrue(expected.getMessage().contains(\"Unknown parameters\"));\n    \n    expected = expectThrows(IllegalArgumentException.class, () -> {\n      tokenizerFactory(\"Letter\", \"bogusArg\", \"bogusValue\");\n    });\n    assertTrue(expected.getMessage().contains(\"Unknown parameters\"));\n    \n    expected = expectThrows(IllegalArgumentException.class, () -> {\n      tokenFilterFactory(\"ASCIIFolding\", \"bogusArg\", \"bogusValue\");\n    });\n    assertTrue(expected.getMessage().contains(\"Unknown parameters\"));\n    \n    expected = expectThrows(IllegalArgumentException.class, () -> {\n      tokenFilterFactory(\"Classic\", \"bogusArg\", \"bogusValue\");\n    });\n    assertTrue(expected.getMessage().contains(\"Unknown parameters\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"313c36388b6cae6118f75a1860ad0ba0af7e1344":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["313c36388b6cae6118f75a1860ad0ba0af7e1344"]},"commit2Childs":{"313c36388b6cae6118f75a1860ad0ba0af7e1344":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["313c36388b6cae6118f75a1860ad0ba0af7e1344"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}