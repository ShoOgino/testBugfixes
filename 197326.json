{"path":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testSolrHomeDoesntExist().mjava","commits":[{"id":"429eefa8bf427c2fbc5d85905fea54b2f76081f5","date":1409938294,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testSolrHomeDoesntExist().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSolrHomeDoesntExist() throws Exception {\n    File homeDir = solrHomeDirectory;\n    Files.delete(homeDir.toPath());\n    CoreContainer cc = null;\n    try {\n      cc = init();\n    } catch (SolrException ex) {\n      assertTrue(\"Core init doesn't report if solr home directory doesn't exist \" + ex.getMessage(),\n          0 <= ex.getMessage().indexOf(\"solr.xml does not exist\"));\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22989c36ff05c657df26dd3377b37c9ad35859bc","date":1424477375,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testSolrHomeDoesntExist().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testSolrHomeDoesntExist().mjava","sourceNew":"  @Test\n  public void testSolrHomeDoesntExist() throws Exception {\n    File homeDir = solrHomeDirectory;\n    IOUtils.rm(homeDir.toPath());\n    CoreContainer cc = null;\n    try {\n      cc = init();\n    } catch (SolrException ex) {\n      assertTrue(\"Core init doesn't report if solr home directory doesn't exist \" + ex.getMessage(),\n          0 <= ex.getMessage().indexOf(\"solr.xml does not exist\"));\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSolrHomeDoesntExist() throws Exception {\n    File homeDir = solrHomeDirectory;\n    Files.delete(homeDir.toPath());\n    CoreContainer cc = null;\n    try {\n      cc = init();\n    } catch (SolrException ex) {\n      assertTrue(\"Core init doesn't report if solr home directory doesn't exist \" + ex.getMessage(),\n          0 <= ex.getMessage().indexOf(\"solr.xml does not exist\"));\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd7a2b4785d366164d3cd69f9948de6ff34d23a1","date":1500527874,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testSolrHomeDoesntExist().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testSolrHomeDoesntExist().mjava","sourceNew":"  @Test\n  public void testSolrHomeDoesntExist() throws Exception {\n    File homeDir = solrHomeDirectory.toFile();\n    IOUtils.rm(homeDir.toPath());\n    CoreContainer cc = null;\n    try {\n      cc = init();\n    } catch (SolrException ex) {\n      assertTrue(\"Core init doesn't report if solr home directory doesn't exist \" + ex.getMessage(),\n          0 <= ex.getMessage().indexOf(\"solr.xml does not exist\"));\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSolrHomeDoesntExist() throws Exception {\n    File homeDir = solrHomeDirectory;\n    IOUtils.rm(homeDir.toPath());\n    CoreContainer cc = null;\n    try {\n      cc = init();\n    } catch (SolrException ex) {\n      assertTrue(\"Core init doesn't report if solr home directory doesn't exist \" + ex.getMessage(),\n          0 <= ex.getMessage().indexOf(\"solr.xml does not exist\"));\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d301cb76d81de80d07b44735622a04d49ed938eb","date":1500536382,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testSolrHomeDoesntExist().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testSolrHomeDoesntExist().mjava","sourceNew":"  @Test\n  public void testSolrHomeDoesntExist() throws Exception {\n    File homeDir = solrHomeDirectory.toFile();\n    IOUtils.rm(homeDir.toPath());\n    CoreContainer cc = null;\n    try {\n      cc = init();\n    } catch (SolrException ex) {\n      assertTrue(\"Core init doesn't report if solr home directory doesn't exist \" + ex.getMessage(),\n          0 <= ex.getMessage().indexOf(\"solr.xml does not exist\"));\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSolrHomeDoesntExist() throws Exception {\n    File homeDir = solrHomeDirectory;\n    IOUtils.rm(homeDir.toPath());\n    CoreContainer cc = null;\n    try {\n      cc = init();\n    } catch (SolrException ex) {\n      assertTrue(\"Core init doesn't report if solr home directory doesn't exist \" + ex.getMessage(),\n          0 <= ex.getMessage().indexOf(\"solr.xml does not exist\"));\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testSolrHomeDoesntExist().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testSolrHomeDoesntExist().mjava","sourceNew":"  @Test\n  public void testSolrHomeDoesntExist() throws Exception {\n    File homeDir = solrHomeDirectory.toFile();\n    IOUtils.rm(homeDir.toPath());\n    CoreContainer cc = null;\n    try {\n      cc = init();\n    } catch (SolrException ex) {\n      assertTrue(\"Core init doesn't report if solr home directory doesn't exist \" + ex.getMessage(),\n          0 <= ex.getMessage().indexOf(\"solr.xml does not exist\"));\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSolrHomeDoesntExist() throws Exception {\n    File homeDir = solrHomeDirectory;\n    IOUtils.rm(homeDir.toPath());\n    CoreContainer cc = null;\n    try {\n      cc = init();\n    } catch (SolrException ex) {\n      assertTrue(\"Core init doesn't report if solr home directory doesn't exist \" + ex.getMessage(),\n          0 <= ex.getMessage().indexOf(\"solr.xml does not exist\"));\n    } finally {\n      if (cc != null) {\n        cc.shutdown();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d301cb76d81de80d07b44735622a04d49ed938eb":["22989c36ff05c657df26dd3377b37c9ad35859bc","bd7a2b4785d366164d3cd69f9948de6ff34d23a1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"936cdd5882761db3b844afd6f84ab81cbb011a75":["22989c36ff05c657df26dd3377b37c9ad35859bc","d301cb76d81de80d07b44735622a04d49ed938eb"],"22989c36ff05c657df26dd3377b37c9ad35859bc":["429eefa8bf427c2fbc5d85905fea54b2f76081f5"],"bd7a2b4785d366164d3cd69f9948de6ff34d23a1":["22989c36ff05c657df26dd3377b37c9ad35859bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d301cb76d81de80d07b44735622a04d49ed938eb"],"429eefa8bf427c2fbc5d85905fea54b2f76081f5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d301cb76d81de80d07b44735622a04d49ed938eb":["936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["429eefa8bf427c2fbc5d85905fea54b2f76081f5"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"22989c36ff05c657df26dd3377b37c9ad35859bc":["d301cb76d81de80d07b44735622a04d49ed938eb","936cdd5882761db3b844afd6f84ab81cbb011a75","bd7a2b4785d366164d3cd69f9948de6ff34d23a1"],"bd7a2b4785d366164d3cd69f9948de6ff34d23a1":["d301cb76d81de80d07b44735622a04d49ed938eb"],"429eefa8bf427c2fbc5d85905fea54b2f76081f5":["22989c36ff05c657df26dd3377b37c9ad35859bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}