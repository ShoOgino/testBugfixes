{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/SearchRateTrigger.SearchRateEvent#SearchRateEvent(String,long,Map[String,Double],Map[String,Double],Map[String,Map[String,Double]],List[ReplicaInfo]).mjava","commits":[{"id":"3955a9511098c96b652734b2f2d4160d07cc2d63","date":1504780677,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/SearchRateTrigger.SearchRateEvent#SearchRateEvent(String,long,Map[String,Double],Map[String,Double],Map[String,Map[String,Double]],List[ReplicaInfo]).mjava","pathOld":"/dev/null","sourceNew":"    public SearchRateEvent(String source, long eventTime, Map<String, Double> hotNodes,\n                           Map<String, Double> hotCollections,\n                           Map<String, Map<String, Double>> hotShards, List<ReplicaInfo> hotReplicas) {\n      super(TriggerEventType.SEARCHRATE, source, eventTime, null);\n      properties.put(AutoScalingParams.COLLECTION, hotCollections);\n      properties.put(AutoScalingParams.SHARD, hotShards);\n      properties.put(AutoScalingParams.REPLICA, hotReplicas);\n      properties.put(AutoScalingParams.NODE, hotNodes);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cc58dbf9573e66a3054c7c372862b8e5a77a9da","date":1504796681,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/SearchRateTrigger.SearchRateEvent#SearchRateEvent(String,long,Map[String,Double],Map[String,Double],Map[String,Map[String,Double]],List[ReplicaInfo],Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/SearchRateTrigger.SearchRateEvent#SearchRateEvent(String,long,Map[String,Double],Map[String,Double],Map[String,Map[String,Double]],List[ReplicaInfo]).mjava","sourceNew":"    public SearchRateEvent(String source, long eventTime, Map<String, Double> hotNodes,\n                           Map<String, Double> hotCollections,\n                           Map<String, Map<String, Double>> hotShards, List<ReplicaInfo> hotReplicas,\n                           Map<String, String> warmShards) {\n      super(TriggerEventType.SEARCHRATE, source, eventTime, null);\n      properties.put(AutoScalingParams.COLLECTION, hotCollections);\n      properties.put(AutoScalingParams.SHARD, hotShards);\n      properties.put(AutoScalingParams.REPLICA, hotReplicas);\n      properties.put(AutoScalingParams.NODE, hotNodes);\n      properties.put(AutoScalingParams.WARM_SHARD, warmShards);\n    }\n\n","sourceOld":"    public SearchRateEvent(String source, long eventTime, Map<String, Double> hotNodes,\n                           Map<String, Double> hotCollections,\n                           Map<String, Map<String, Double>> hotShards, List<ReplicaInfo> hotReplicas) {\n      super(TriggerEventType.SEARCHRATE, source, eventTime, null);\n      properties.put(AutoScalingParams.COLLECTION, hotCollections);\n      properties.put(AutoScalingParams.SHARD, hotShards);\n      properties.put(AutoScalingParams.REPLICA, hotReplicas);\n      properties.put(AutoScalingParams.NODE, hotNodes);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a4e412fed1b23292038553fbe85fe61cd7aa8472","date":1505751927,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/SearchRateTrigger.SearchRateEvent#SearchRateEvent(String,long,Map[String,Double],Map[String,Double],Map[String,Map[String,Double]],List[ReplicaInfo]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/SearchRateTrigger.SearchRateEvent#SearchRateEvent(String,long,Map[String,Double],Map[String,Double],Map[String,Map[String,Double]],List[ReplicaInfo],Map[String,String]).mjava","sourceNew":"    public SearchRateEvent(String source, long eventTime, Map<String, Double> hotNodes,\n                           Map<String, Double> hotCollections,\n                           Map<String, Map<String, Double>> hotShards, List<ReplicaInfo> hotReplicas) {\n      super(TriggerEventType.SEARCHRATE, source, eventTime, null);\n      properties.put(AutoScalingParams.COLLECTION, hotCollections);\n      properties.put(AutoScalingParams.SHARD, hotShards);\n      properties.put(AutoScalingParams.REPLICA, hotReplicas);\n      properties.put(AutoScalingParams.NODE, hotNodes);\n    }\n\n","sourceOld":"    public SearchRateEvent(String source, long eventTime, Map<String, Double> hotNodes,\n                           Map<String, Double> hotCollections,\n                           Map<String, Map<String, Double>> hotShards, List<ReplicaInfo> hotReplicas,\n                           Map<String, String> warmShards) {\n      super(TriggerEventType.SEARCHRATE, source, eventTime, null);\n      properties.put(AutoScalingParams.COLLECTION, hotCollections);\n      properties.put(AutoScalingParams.SHARD, hotShards);\n      properties.put(AutoScalingParams.REPLICA, hotReplicas);\n      properties.put(AutoScalingParams.NODE, hotNodes);\n      properties.put(AutoScalingParams.WARM_SHARD, warmShards);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f2ba631afa835c2dfd14555cf19ae7e73663c17","date":1505762504,"type":4,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/SearchRateTrigger.SearchRateEvent#SearchRateEvent(String,long,Map[String,Double],Map[String,Double],Map[String,Map[String,Double]],List[ReplicaInfo]).mjava","sourceNew":null,"sourceOld":"    public SearchRateEvent(String source, long eventTime, Map<String, Double> hotNodes,\n                           Map<String, Double> hotCollections,\n                           Map<String, Map<String, Double>> hotShards, List<ReplicaInfo> hotReplicas) {\n      super(TriggerEventType.SEARCHRATE, source, eventTime, null);\n      properties.put(AutoScalingParams.COLLECTION, hotCollections);\n      properties.put(AutoScalingParams.SHARD, hotShards);\n      properties.put(AutoScalingParams.REPLICA, hotReplicas);\n      properties.put(AutoScalingParams.NODE, hotNodes);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3f354f2175f861ee625bb3c9572d53b77cd8545","date":1508405819,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/SearchRateTrigger.SearchRateEvent#SearchRateEvent(String,long,Map[String,Double],Map[String,Double],Map[String,Map[String,Double]],List[ReplicaInfo]).mjava","pathOld":"/dev/null","sourceNew":"    public SearchRateEvent(String source, long eventTime, Map<String, Double> hotNodes,\n                           Map<String, Double> hotCollections,\n                           Map<String, Map<String, Double>> hotShards, List<ReplicaInfo> hotReplicas) {\n      super(TriggerEventType.SEARCHRATE, source, eventTime, null);\n      properties.put(AutoScalingParams.COLLECTION, hotCollections);\n      properties.put(AutoScalingParams.SHARD, hotShards);\n      properties.put(AutoScalingParams.REPLICA, hotReplicas);\n      properties.put(AutoScalingParams.NODE, hotNodes);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9ccfe45460d496c5e5e1b70396521dac842d966","date":1516798975,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/SearchRateTrigger.SearchRateEvent#SearchRateEvent(String,long,List[Op],Map[String,Double],Map[String,Double],Map[String,Map[String,Double]],List[ReplicaInfo]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/SearchRateTrigger.SearchRateEvent#SearchRateEvent(String,long,Map[String,Double],Map[String,Double],Map[String,Map[String,Double]],List[ReplicaInfo]).mjava","sourceNew":"    public SearchRateEvent(String source, long eventTime, List<Op> ops, Map<String, Double> hotNodes,\n                           Map<String, Double> hotCollections,\n                           Map<String, Map<String, Double>> hotShards, List<ReplicaInfo> hotReplicas) {\n      super(TriggerEventType.SEARCHRATE, source, eventTime, null);\n      properties.put(TriggerEvent.REQUESTED_OPS, ops);\n      properties.put(AutoScalingParams.COLLECTION, hotCollections);\n      properties.put(AutoScalingParams.SHARD, hotShards);\n      properties.put(AutoScalingParams.REPLICA, hotReplicas);\n      properties.put(AutoScalingParams.NODE, hotNodes);\n    }\n\n","sourceOld":"    public SearchRateEvent(String source, long eventTime, Map<String, Double> hotNodes,\n                           Map<String, Double> hotCollections,\n                           Map<String, Map<String, Double>> hotShards, List<ReplicaInfo> hotReplicas) {\n      super(TriggerEventType.SEARCHRATE, source, eventTime, null);\n      properties.put(AutoScalingParams.COLLECTION, hotCollections);\n      properties.put(AutoScalingParams.SHARD, hotShards);\n      properties.put(AutoScalingParams.REPLICA, hotReplicas);\n      properties.put(AutoScalingParams.NODE, hotNodes);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43a787a75ad72a9bf26e8ff714d8b6d01f9eb441","date":1516881857,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/SearchRateTrigger.SearchRateEvent#SearchRateEvent(String,long,List[Op],Map[String,Double],Map[String,Double],Map[String,Map[String,Double]],List[ReplicaInfo]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/SearchRateTrigger.SearchRateEvent#SearchRateEvent(String,long,Map[String,Double],Map[String,Double],Map[String,Map[String,Double]],List[ReplicaInfo]).mjava","sourceNew":"    public SearchRateEvent(String source, long eventTime, List<Op> ops, Map<String, Double> hotNodes,\n                           Map<String, Double> hotCollections,\n                           Map<String, Map<String, Double>> hotShards, List<ReplicaInfo> hotReplicas) {\n      super(TriggerEventType.SEARCHRATE, source, eventTime, null);\n      properties.put(TriggerEvent.REQUESTED_OPS, ops);\n      properties.put(AutoScalingParams.COLLECTION, hotCollections);\n      properties.put(AutoScalingParams.SHARD, hotShards);\n      properties.put(AutoScalingParams.REPLICA, hotReplicas);\n      properties.put(AutoScalingParams.NODE, hotNodes);\n    }\n\n","sourceOld":"    public SearchRateEvent(String source, long eventTime, Map<String, Double> hotNodes,\n                           Map<String, Double> hotCollections,\n                           Map<String, Map<String, Double>> hotShards, List<ReplicaInfo> hotReplicas) {\n      super(TriggerEventType.SEARCHRATE, source, eventTime, null);\n      properties.put(AutoScalingParams.COLLECTION, hotCollections);\n      properties.put(AutoScalingParams.SHARD, hotShards);\n      properties.put(AutoScalingParams.REPLICA, hotReplicas);\n      properties.put(AutoScalingParams.NODE, hotNodes);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c3f354f2175f861ee625bb3c9572d53b77cd8545":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3955a9511098c96b652734b2f2d4160d07cc2d63":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cc58dbf9573e66a3054c7c372862b8e5a77a9da":["3955a9511098c96b652734b2f2d4160d07cc2d63"],"a4e412fed1b23292038553fbe85fe61cd7aa8472":["1cc58dbf9573e66a3054c7c372862b8e5a77a9da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["43a787a75ad72a9bf26e8ff714d8b6d01f9eb441"],"43a787a75ad72a9bf26e8ff714d8b6d01f9eb441":["c3f354f2175f861ee625bb3c9572d53b77cd8545","d9ccfe45460d496c5e5e1b70396521dac842d966"],"d9ccfe45460d496c5e5e1b70396521dac842d966":["c3f354f2175f861ee625bb3c9572d53b77cd8545"],"4f2ba631afa835c2dfd14555cf19ae7e73663c17":["a4e412fed1b23292038553fbe85fe61cd7aa8472"]},"commit2Childs":{"c3f354f2175f861ee625bb3c9572d53b77cd8545":["43a787a75ad72a9bf26e8ff714d8b6d01f9eb441","d9ccfe45460d496c5e5e1b70396521dac842d966"],"3955a9511098c96b652734b2f2d4160d07cc2d63":["1cc58dbf9573e66a3054c7c372862b8e5a77a9da"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c3f354f2175f861ee625bb3c9572d53b77cd8545","3955a9511098c96b652734b2f2d4160d07cc2d63"],"1cc58dbf9573e66a3054c7c372862b8e5a77a9da":["a4e412fed1b23292038553fbe85fe61cd7aa8472"],"a4e412fed1b23292038553fbe85fe61cd7aa8472":["4f2ba631afa835c2dfd14555cf19ae7e73663c17"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"43a787a75ad72a9bf26e8ff714d8b6d01f9eb441":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d9ccfe45460d496c5e5e1b70396521dac842d966":["43a787a75ad72a9bf26e8ff714d8b6d01f9eb441"],"4f2ba631afa835c2dfd14555cf19ae7e73663c17":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","4f2ba631afa835c2dfd14555cf19ae7e73663c17"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}