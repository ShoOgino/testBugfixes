{"path":"solr/solrj/src/test/org/noggit/TestJSONParser#parse(JSONParser,String,Object[]).mjava","commits":[{"id":"980f4ef5a16664be88d82c37e6af5c49a3d57c9c","date":1557969027,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/noggit/TestJSONParser#parse(JSONParser,String,Object[]).mjava","pathOld":"/dev/null","sourceNew":"  // match parser states with the expected states\n  public static void parse(JSONParser p, String input, Object[] expected) throws IOException {\n    for (int i=0; i<expected.length; i++) {\n      int ev = p.nextEvent();\n      Object exp = expected[i];\n      Object got = null;\n\n      switch(ev) {\n        case JSONParser.ARRAY_START: got=a; break;\n        case JSONParser.ARRAY_END: got=A; break;\n        case JSONParser.OBJECT_START: got=m; break;\n        case JSONParser.OBJECT_END: got=M; break;\n        case JSONParser.LONG: got=o(p.getLong()); break;\n        case JSONParser.NUMBER:\n          if (exp instanceof Double) {\n            got = o(p.getDouble());\n          } else {\n            got = n(p.getNumberChars().toString());\n          }\n          break;\n        case JSONParser.BIGNUMBER: got=bn(p.getNumberChars().toString()); break;\n        case JSONParser.NULL: got=N; p.getNull(); break; // optional\n        case JSONParser.BOOLEAN: got=o(p.getBoolean()); break;\n        case JSONParser.EOF: got=e; break;\n        case JSONParser.STRING: got=p.getString(); break;\n        default: got=\"Unexpected Event Number \" + ev;\n      }\n\n      if (!(exp==got || exp.equals(got))) {\n        fail(\"Fail: String='\" + input + \"'\" + \"\\n\\tINPUT=\" + got + \"\\n\\tEXPECTED=\" + exp + \"\\n\\tAT RULE \" + i);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"980f4ef5a16664be88d82c37e6af5c49a3d57c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["980f4ef5a16664be88d82c37e6af5c49a3d57c9c"]},"commit2Childs":{"980f4ef5a16664be88d82c37e6af5c49a3d57c9c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["980f4ef5a16664be88d82c37e6af5c49a3d57c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}