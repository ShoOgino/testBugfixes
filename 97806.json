{"path":"solr/src/test/org/apache/solr/analysis/TestElisionFilterFactory#testDefaultArticles().mjava","commits":[{"id":"1af141314e4d46001066dd8f95c96914e8b4a362","date":1275593648,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/analysis/TestElisionFilterFactory#testDefaultArticles().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test creating an elision filter without specifying any articles\n   */\n  public void testDefaultArticles() throws Exception {\n    Reader reader = new StringReader(\"l'avion\");\n    Tokenizer tokenizer = new WhitespaceTokenizer(DEFAULT_VERSION, reader);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    ResourceLoader loader = new SolrResourceLoader(null, null);\n    factory.init(new HashMap<String,String>());\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestElisionFilterFactory#testDefaultArticles().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestElisionFilterFactory#testDefaultArticles().mjava","sourceNew":"  /**\n   * Test creating an elision filter without specifying any articles\n   */\n  public void testDefaultArticles() throws Exception {\n    Reader reader = new StringReader(\"l'avion\");\n    Tokenizer tokenizer = new WhitespaceTokenizer(DEFAULT_VERSION, reader);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    ResourceLoader loader = new SolrResourceLoader(null, null);\n    factory.init(new HashMap<String,String>());\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","sourceOld":"  /**\n   * Test creating an elision filter without specifying any articles\n   */\n  public void testDefaultArticles() throws Exception {\n    Reader reader = new StringReader(\"l'avion\");\n    Tokenizer tokenizer = new WhitespaceTokenizer(DEFAULT_VERSION, reader);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    ResourceLoader loader = new SolrResourceLoader(null, null);\n    factory.init(new HashMap<String,String>());\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestElisionFilterFactory#testDefaultArticles().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestElisionFilterFactory#testDefaultArticles().mjava","sourceNew":"  /**\n   * Test creating an elision filter without specifying any articles\n   */\n  public void testDefaultArticles() throws Exception {\n    Reader reader = new StringReader(\"l'avion\");\n    Tokenizer tokenizer = new WhitespaceTokenizer(DEFAULT_VERSION, reader);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    ResourceLoader loader = new SolrResourceLoader(null, null);\n    factory.init(new HashMap<String,String>());\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","sourceOld":"  /**\n   * Test creating an elision filter without specifying any articles\n   */\n  public void testDefaultArticles() throws Exception {\n    Reader reader = new StringReader(\"l'avion\");\n    Tokenizer tokenizer = new WhitespaceTokenizer(DEFAULT_VERSION, reader);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    ResourceLoader loader = new SolrResourceLoader(null, null);\n    factory.init(new HashMap<String,String>());\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestElisionFilterFactory#testDefaultArticles().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/TestElisionFilterFactory#testDefaultArticles().mjava","sourceNew":"  /**\n   * Test creating an elision filter without specifying any articles\n   */\n  public void testDefaultArticles() throws Exception {\n    Reader reader = new StringReader(\"l'avion\");\n    Tokenizer tokenizer = new WhitespaceTokenizer(DEFAULT_VERSION, reader);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    ResourceLoader loader = new SolrResourceLoader(null, null);\n    factory.init(new HashMap<String,String>());\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","sourceOld":"  /**\n   * Test creating an elision filter without specifying any articles\n   */\n  public void testDefaultArticles() throws Exception {\n    Reader reader = new StringReader(\"l'avion\");\n    Tokenizer tokenizer = new WhitespaceTokenizer(DEFAULT_VERSION, reader);\n    ElisionFilterFactory factory = new ElisionFilterFactory();\n    factory.init(DEFAULT_VERSION_PARAM);\n    ResourceLoader loader = new SolrResourceLoader(null, null);\n    factory.init(new HashMap<String,String>());\n    factory.inform(loader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"avion\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["1af141314e4d46001066dd8f95c96914e8b4a362"],"c26f00b574427b55127e869b935845554afde1fa":["1af141314e4d46001066dd8f95c96914e8b4a362","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["1af141314e4d46001066dd8f95c96914e8b4a362"],"1af141314e4d46001066dd8f95c96914e8b4a362":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1af141314e4d46001066dd8f95c96914e8b4a362"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"1af141314e4d46001066dd8f95c96914e8b4a362":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}