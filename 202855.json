{"path":"solr/solrj/src/java/org/apache/solr/common/util/RetryUtil#retryOnThrowable(Class,long,long,RetryCmd).mjava","commits":[{"id":"b954d1444134ef40d3fcea752c6aaaff4e7da056","date":1393720045,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/RetryUtil#retryOnThrowable(Class,long,long,RetryCmd).mjava","pathOld":"/dev/null","sourceNew":"  public static void retryOnThrowable(Class clazz, long timeoutms, long intervalms, RetryCmd cmd) throws InterruptedException {\n    long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(timeoutms, TimeUnit.MILLISECONDS);\n    while (true) {\n      try {\n        cmd.execute();\n      } catch (Throwable t) {\n        if (clazz.isInstance(t) && System.nanoTime() < timeout) {\n          Thread.sleep(intervalms);\n          continue;\n        }\n        throw t;\n      }\n      // success\n      break;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["6b18ef9cd3f6ff4f7733e6d43eebec259e0e9064"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"512e034509e1a4227616f910489a995d4ad813af","date":1393801753,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/RetryUtil#retryOnThrowable(Class,long,long,RetryCmd).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/RetryUtil#retryOnThrowable(Class,long,long,RetryCmd).mjava","sourceNew":"  public static void retryOnThrowable(Class clazz, long timeoutms, long intervalms, RetryCmd cmd) throws Throwable {\n    long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(timeoutms, TimeUnit.MILLISECONDS);\n    while (true) {\n      try {\n        cmd.execute();\n      } catch (Throwable t) {\n        if (clazz.isInstance(t) && System.nanoTime() < timeout) {\n          Thread.sleep(intervalms);\n          continue;\n        }\n        throw t;\n      }\n      // success\n      break;\n    }\n  }\n\n","sourceOld":"  public static void retryOnThrowable(Class clazz, long timeoutms, long intervalms, RetryCmd cmd) throws InterruptedException {\n    long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(timeoutms, TimeUnit.MILLISECONDS);\n    while (true) {\n      try {\n        cmd.execute();\n      } catch (Throwable t) {\n        if (clazz.isInstance(t) && System.nanoTime() < timeout) {\n          Thread.sleep(intervalms);\n          continue;\n        }\n        throw t;\n      }\n      // success\n      break;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6b18ef9cd3f6ff4f7733e6d43eebec259e0e9064","date":1441124018,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/RetryUtil#retryOnThrowable(Class,long,long,RetryCmd).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/RetryUtil#retryOnThrowable(Class,long,long,RetryCmd).mjava","sourceNew":"  public static void retryOnThrowable(Class clazz, long timeoutms, long intervalms, RetryCmd cmd) throws Throwable {\n    retryOnThrowable(Collections.singleton(clazz), timeoutms, intervalms, cmd);\n  }\n\n","sourceOld":"  public static void retryOnThrowable(Class clazz, long timeoutms, long intervalms, RetryCmd cmd) throws Throwable {\n    long timeout = System.nanoTime() + TimeUnit.NANOSECONDS.convert(timeoutms, TimeUnit.MILLISECONDS);\n    while (true) {\n      try {\n        cmd.execute();\n      } catch (Throwable t) {\n        if (clazz.isInstance(t) && System.nanoTime() < timeout) {\n          Thread.sleep(intervalms);\n          continue;\n        }\n        throw t;\n      }\n      // success\n      break;\n    }\n  }\n\n","bugFix":["b954d1444134ef40d3fcea752c6aaaff4e7da056"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7dfea4f7c80813344b0152e37fc18b31369e8ff","date":1592136683,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/RetryUtil#retryOnThrowable(Class,long,long,RetryCmd).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/RetryUtil#retryOnThrowable(Class,long,long,RetryCmd).mjava","sourceNew":"  public static void retryOnThrowable(@SuppressWarnings({\"rawtypes\"})Class clazz, long timeoutms, long intervalms, RetryCmd cmd) throws Throwable {\n    retryOnThrowable(Collections.singleton(clazz), timeoutms, intervalms, cmd);\n  }\n\n","sourceOld":"  public static void retryOnThrowable(Class clazz, long timeoutms, long intervalms, RetryCmd cmd) throws Throwable {\n    retryOnThrowable(Collections.singleton(clazz), timeoutms, intervalms, cmd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b954d1444134ef40d3fcea752c6aaaff4e7da056":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["6b18ef9cd3f6ff4f7733e6d43eebec259e0e9064"],"512e034509e1a4227616f910489a995d4ad813af":["b954d1444134ef40d3fcea752c6aaaff4e7da056"],"6b18ef9cd3f6ff4f7733e6d43eebec259e0e9064":["512e034509e1a4227616f910489a995d4ad813af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a7dfea4f7c80813344b0152e37fc18b31369e8ff"]},"commit2Childs":{"b954d1444134ef40d3fcea752c6aaaff4e7da056":["512e034509e1a4227616f910489a995d4ad813af"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b954d1444134ef40d3fcea752c6aaaff4e7da056"],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"512e034509e1a4227616f910489a995d4ad813af":["6b18ef9cd3f6ff4f7733e6d43eebec259e0e9064"],"6b18ef9cd3f6ff4f7733e6d43eebec259e0e9064":["a7dfea4f7c80813344b0152e37fc18b31369e8ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}