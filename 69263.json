{"path":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#score().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#score().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#score().mjava","sourceNew":"      /**\n       * \n       * @return {@link #getSpanScore()} * {@link #getPayloadScore()}\n       * @throws IOException\n       */\n      @Override\n      public float score() throws IOException {\n\n        return includeSpanScore ? getSpanScore() * getPayloadScore()\n            : getPayloadScore();\n      }\n\n","sourceOld":"      /**\n       * \n       * @return {@link #getSpanScore()} * {@link #getPayloadScore()}\n       * @throws IOException\n       */\n      @Override\n      public float score() throws IOException {\n\n        return includeSpanScore ? getSpanScore() * getPayloadScore()\n            : getPayloadScore();\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#score().mjava","sourceNew":"      /**\n       * \n       * @return {@link #getSpanScore()} * {@link #getPayloadScore()}\n       * @throws IOException if there is a low-level I/O error\n       */\n      @Override\n      public float score() throws IOException {\n\n        return includeSpanScore ? getSpanScore() * getPayloadScore()\n            : getPayloadScore();\n      }\n\n","sourceOld":"      /**\n       * \n       * @return {@link #getSpanScore()} * {@link #getPayloadScore()}\n       * @throws IOException\n       */\n      @Override\n      public float score() throws IOException {\n\n        return includeSpanScore ? getSpanScore() * getPayloadScore()\n            : getPayloadScore();\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4409879b1445c56c3834b823720d47c08c409c5","date":1428086307,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#scoreCurrentDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#score().mjava","sourceNew":"      /**\n       * \n       * @return {@link #getSpanScore()} * {@link #getPayloadScore()}\n       * @throws IOException if there is a low-level I/O error\n       */\n      @Override\n      public float scoreCurrentDoc() throws IOException {\n        return includeSpanScore ? getSpanScore() * getPayloadScore()\n            : getPayloadScore();\n      }\n\n","sourceOld":"      /**\n       * \n       * @return {@link #getSpanScore()} * {@link #getPayloadScore()}\n       * @throws IOException if there is a low-level I/O error\n       */\n      @Override\n      public float score() throws IOException {\n\n        return includeSpanScore ? getSpanScore() * getPayloadScore()\n            : getPayloadScore();\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","date":1428091986,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#scoreCurrentDoc().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadTermQuery.PayloadTermWeight.PayloadTermSpanScorer#score().mjava","sourceNew":"      /**\n       * \n       * @return {@link #getSpanScore()} * {@link #getPayloadScore()}\n       * @throws IOException if there is a low-level I/O error\n       */\n      @Override\n      public float scoreCurrentDoc() throws IOException {\n        return includeSpanScore ? getSpanScore() * getPayloadScore()\n            : getPayloadScore();\n      }\n\n","sourceOld":"      /**\n       * \n       * @return {@link #getSpanScore()} * {@link #getPayloadScore()}\n       * @throws IOException if there is a low-level I/O error\n       */\n      @Override\n      public float score() throws IOException {\n\n        return includeSpanScore ? getSpanScore() * getPayloadScore()\n            : getPayloadScore();\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4409879b1445c56c3834b823720d47c08c409c5":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","f4409879b1445c56c3834b823720d47c08c409c5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4409879b1445c56c3834b823720d47c08c409c5"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["f4409879b1445c56c3834b823720d47c08c409c5","6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f4409879b1445c56c3834b823720d47c08c409c5":["6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6c757ac42dd1f3f893db5c4d89c61cbe1a9fab6c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}