{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#setAliveCheckInterval(int).mjava","commits":[{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#setAliveCheckInterval(int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrServer#setAliveCheckInterval(int).mjava","sourceNew":"  /**\n   * LBHttpSolrServer keeps pinging the dead servers at fixed interval to find if it is alive. Use this to set that\n   * interval\n   *\n   * @param interval time in milliseconds\n   */\n  public void setAliveCheckInterval(int interval) {\n    if (interval <= 0) {\n      throw new IllegalArgumentException(\"Alive check interval must be \" +\n              \"positive, specified value = \" + interval);\n    }\n    this.interval = interval;\n  }\n\n","sourceOld":"  /**\n   * LBHttpSolrServer keeps pinging the dead servers at fixed interval to find if it is alive. Use this to set that\n   * interval\n   *\n   * @param interval time in milliseconds\n   */\n  public void setAliveCheckInterval(int interval) {\n    if (interval <= 0) {\n      throw new IllegalArgumentException(\"Alive check interval must be \" +\n              \"positive, specified value = \" + interval);\n    }\n    this.interval = interval;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a77e5e21cbd575a8240b0e3926164f15295f4e8","date":1544979500,"type":5,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBSolrClient#setAliveCheckInterval(int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#setAliveCheckInterval(int).mjava","sourceNew":"  /**\n   * LBHttpSolrServer keeps pinging the dead servers at fixed interval to find if it is alive. Use this to set that\n   * interval\n   *\n   * @param interval time in milliseconds\n   */\n  public void setAliveCheckInterval(int interval) {\n    if (interval <= 0) {\n      throw new IllegalArgumentException(\"Alive check interval must be \" +\n          \"positive, specified value = \" + interval);\n    }\n    this.interval = interval;\n  }\n\n","sourceOld":"  /**\n   * LBHttpSolrServer keeps pinging the dead servers at fixed interval to find if it is alive. Use this to set that\n   * interval\n   *\n   * @param interval time in milliseconds\n   */\n  public void setAliveCheckInterval(int interval) {\n    if (interval <= 0) {\n      throw new IllegalArgumentException(\"Alive check interval must be \" +\n              \"positive, specified value = \" + interval);\n    }\n    this.interval = interval;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["bafca15d8e408346a67f4282ad1143b88023893b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"]},"commit2Childs":{"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}