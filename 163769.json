{"path":"solr/core/src/test/org/apache/solr/analysis/TestMultiWordSynonyms#testMultiWordSynonymsOld().mjava","commits":[{"id":"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c","date":1310389132,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestMultiWordSynonyms#testMultiWordSynonymsOld().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @deprecated Remove this test in 5.0\n   */\n  @Deprecated\n  public void testMultiWordSynonymsOld() throws IOException {\n    List<String> rules = new ArrayList<String>();\n    rules.add(\"a b c,d\");\n    SlowSynonymMap synMap = new SlowSynonymMap(true);\n    SlowSynonymFilterFactory.parseRules(rules, synMap, \"=>\", \",\", true, null);\n\n    SlowSynonymFilter ts = new SlowSynonymFilter(new WhitespaceTokenizer(DEFAULT_VERSION, new StringReader(\"a e\")), synMap);\n    // This fails because [\"e\",\"e\"] is the value of the token stream\n    assertTokenStreamContents(ts, new String[] { \"a\", \"e\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2639ce99440b7a55fa879228f7e66c337443e77a","date":1317007442,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analysis/TestMultiWordSynonyms#testMultiWordSynonymsOld().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestMultiWordSynonyms#testMultiWordSynonymsOld().mjava","sourceNew":"  /**\n   * @deprecated Remove this test in 5.0\n   */\n  @Deprecated\n  public void testMultiWordSynonymsOld() throws IOException {\n    List<String> rules = new ArrayList<String>();\n    rules.add(\"a b c,d\");\n    SlowSynonymMap synMap = new SlowSynonymMap(true);\n    SlowSynonymFilterFactory.parseRules(rules, synMap, \"=>\", \",\", true, null);\n\n    SlowSynonymFilter ts = new SlowSynonymFilter(new MockTokenizer(new StringReader(\"a e\"), MockTokenizer.WHITESPACE, false), synMap);\n    // This fails because [\"e\",\"e\"] is the value of the token stream\n    assertTokenStreamContents(ts, new String[] { \"a\", \"e\" });\n  }\n\n","sourceOld":"  /**\n   * @deprecated Remove this test in 5.0\n   */\n  @Deprecated\n  public void testMultiWordSynonymsOld() throws IOException {\n    List<String> rules = new ArrayList<String>();\n    rules.add(\"a b c,d\");\n    SlowSynonymMap synMap = new SlowSynonymMap(true);\n    SlowSynonymFilterFactory.parseRules(rules, synMap, \"=>\", \",\", true, null);\n\n    SlowSynonymFilter ts = new SlowSynonymFilter(new WhitespaceTokenizer(DEFAULT_VERSION, new StringReader(\"a e\")), synMap);\n    // This fails because [\"e\",\"e\"] is the value of the token stream\n    assertTokenStreamContents(ts, new String[] { \"a\", \"e\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestMultiWordSynonyms#testMultiWordSynonymsOld().mjava","sourceNew":null,"sourceOld":"  /**\n   * @deprecated Remove this test in 5.0\n   */\n  @Deprecated\n  public void testMultiWordSynonymsOld() throws IOException {\n    List<String> rules = new ArrayList<String>();\n    rules.add(\"a b c,d\");\n    SlowSynonymMap synMap = new SlowSynonymMap(true);\n    SlowSynonymFilterFactory.parseRules(rules, synMap, \"=>\", \",\", true, null);\n\n    SlowSynonymFilter ts = new SlowSynonymFilter(new MockTokenizer(new StringReader(\"a e\"), MockTokenizer.WHITESPACE, false), synMap);\n    // This fails because [\"e\",\"e\"] is the value of the token stream\n    assertTokenStreamContents(ts, new String[] { \"a\", \"e\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2639ce99440b7a55fa879228f7e66c337443e77a":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["2639ce99440b7a55fa879228f7e66c337443e77a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"]},"commit2Childs":{"2639ce99440b7a55fa879228f7e66c337443e77a":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["2639ce99440b7a55fa879228f7e66c337443e77a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}