{"path":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager.LatchedIndexWriter#updateDocument(Term,IndexDocument,Analyzer).mjava","commits":[{"id":"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4","date":1341839195,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager.LatchedIndexWriter#updateDocument(Term,IndexDocument,Analyzer).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager.LatchedIndexWriter#updateDocument(Term,Iterable[#-extends-IndexableField],Analyzer).mjava","sourceNew":"    public void updateDocument(Term term,\n        IndexDocument doc, Analyzer analyzer)\n        throws IOException {\n      super.updateDocument(term, doc, analyzer);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","sourceOld":"    public void updateDocument(Term term,\n        Iterable<? extends IndexableField> doc, Analyzer analyzer)\n        throws IOException {\n      super.updateDocument(term, doc, analyzer);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager.LatchedIndexWriter#updateDocument(Term,IndexDocument,Analyzer).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager.LatchedIndexWriter#updateDocument(Term,Iterable[#-extends-IndexableField],Analyzer).mjava","sourceNew":"    public void updateDocument(Term term,\n        IndexDocument doc, Analyzer analyzer)\n        throws IOException {\n      super.updateDocument(term, doc, analyzer);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","sourceOld":"    public void updateDocument(Term term,\n        Iterable<? extends IndexableField> doc, Analyzer analyzer)\n        throws IOException {\n      super.updateDocument(term, doc, analyzer);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager.LatchedIndexWriter#updateDocument(Term,IndexDocument,Analyzer).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager.LatchedIndexWriter#updateDocument(Term,IndexDocument,Analyzer).mjava","sourceNew":"    @Override\n    public void updateDocument(Term term,\n        IndexDocument doc, Analyzer analyzer)\n        throws IOException {\n      super.updateDocument(term, doc, analyzer);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","sourceOld":"    public void updateDocument(Term term,\n        IndexDocument doc, Analyzer analyzer)\n        throws IOException {\n      super.updateDocument(term, doc, analyzer);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager.LatchedIndexWriter#updateDocument(Term,IndexDocument,Analyzer).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager.LatchedIndexWriter#updateDocument(Term,IndexDocument,Analyzer).mjava","sourceNew":"    @Override\n    public void updateDocument(Term term,\n        IndexDocument doc, Analyzer analyzer)\n        throws IOException {\n      super.updateDocument(term, doc, analyzer);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","sourceOld":"    public void updateDocument(Term term,\n        IndexDocument doc, Analyzer analyzer)\n        throws IOException {\n      super.updateDocument(term, doc, analyzer);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2045b132a2396bb23dff28d2d9f349a6907d36e","date":1367513076,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread.LatchedIndexWriter#updateDocument(Term,IndexDocument,Analyzer).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager.LatchedIndexWriter#updateDocument(Term,IndexDocument,Analyzer).mjava","sourceNew":"    @Override\n    public void updateDocument(Term term,\n        IndexDocument doc, Analyzer analyzer)\n        throws IOException {\n      super.updateDocument(term, doc, analyzer);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void updateDocument(Term term,\n        IndexDocument doc, Analyzer analyzer)\n        throws IOException {\n      super.updateDocument(term, doc, analyzer);\n      try {\n        if (waitAfterUpdate) {\n          signal.countDown();\n          latch.await();\n        }\n      } catch (InterruptedException e) {\n        throw new ThreadInterruptedException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["1d028314cced5858683a1bb4741423d0f934257b","7530de27b87b961b51f01bd1299b7004d46e8823"],"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1d028314cced5858683a1bb4741423d0f934257b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4"],"c2045b132a2396bb23dff28d2d9f349a6907d36e":["7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["1d028314cced5858683a1bb4741423d0f934257b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c2045b132a2396bb23dff28d2d9f349a6907d36e"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4":["1d028314cced5858683a1bb4741423d0f934257b"],"1d028314cced5858683a1bb4741423d0f934257b":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"c2045b132a2396bb23dff28d2d9f349a6907d36e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4","1d028314cced5858683a1bb4741423d0f934257b"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","c2045b132a2396bb23dff28d2d9f349a6907d36e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}