{"path":"contrib/misc/src/java/org/apache/lucene/misc/ChainedFilter#getDocIdSet(IndexReader).mjava","commits":[{"id":"48bedd31c61edafb8baaff4bcbcac19449fb7c3a","date":1251468037,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/misc/ChainedFilter#getDocIdSet(IndexReader).mjava","pathOld":"contrib/miscellaneous/src/java/org/apache/lucene/misc/ChainedFilter#getDocIdSet(IndexReader).mjava","sourceNew":"    /**\n     * {@link Filter#getDocIdSet}.\n     */\n    public DocIdSet getDocIdSet(IndexReader reader) throws IOException\n    {\n        int[] index = new int[1]; // use array as reference to modifiable int; \n        index[0] = 0;             // an object attribute would not be thread safe.\n        if (logic != -1)\n            return getDocIdSet(reader, logic, index);\n        else if (logicArray != null)\n            return getDocIdSet(reader, logicArray, index);\n        else\n            return getDocIdSet(reader, DEFAULT, index);\n    }\n\n","sourceOld":"    /**\n     * {@link Filter#getDocIdSet}.\n     */\n    public DocIdSet getDocIdSet(IndexReader reader) throws IOException\n    {\n        int[] index = new int[1]; // use array as reference to modifiable int; \n        index[0] = 0;             // an object attribute would not be thread safe.\n        if (logic != -1)\n            return getDocIdSet(reader, logic, index);\n        else if (logicArray != null)\n            return getDocIdSet(reader, logicArray, index);\n        else\n            return getDocIdSet(reader, DEFAULT, index);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/misc/ChainedFilter#getDocIdSet(IndexReader).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/misc/ChainedFilter#getDocIdSet(IndexReader).mjava","sourceNew":"    /**\n     * {@link Filter#getDocIdSet}.\n     */\n    @Override\n    public DocIdSet getDocIdSet(IndexReader reader) throws IOException\n    {\n        int[] index = new int[1]; // use array as reference to modifiable int; \n        index[0] = 0;             // an object attribute would not be thread safe.\n        if (logic != -1)\n            return getDocIdSet(reader, logic, index);\n        else if (logicArray != null)\n            return getDocIdSet(reader, logicArray, index);\n        else\n            return getDocIdSet(reader, DEFAULT, index);\n    }\n\n","sourceOld":"    /**\n     * {@link Filter#getDocIdSet}.\n     */\n    public DocIdSet getDocIdSet(IndexReader reader) throws IOException\n    {\n        int[] index = new int[1]; // use array as reference to modifiable int; \n        index[0] = 0;             // an object attribute would not be thread safe.\n        if (logic != -1)\n            return getDocIdSet(reader, logic, index);\n        else if (logicArray != null)\n            return getDocIdSet(reader, logicArray, index);\n        else\n            return getDocIdSet(reader, DEFAULT, index);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/misc/ChainedFilter#getDocIdSet(IndexReader).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/misc/ChainedFilter#getDocIdSet(IndexReader).mjava","sourceNew":"    /**\n     * {@link Filter#getDocIdSet}.\n     */\n    @Override\n    public DocIdSet getDocIdSet(IndexReader reader) throws IOException\n    {\n        int[] index = new int[1]; // use array as reference to modifiable int; \n        index[0] = 0;             // an object attribute would not be thread safe.\n        if (logic != -1)\n            return getDocIdSet(reader, logic, index);\n        else if (logicArray != null)\n            return getDocIdSet(reader, logicArray, index);\n        else\n            return getDocIdSet(reader, DEFAULT, index);\n    }\n\n","sourceOld":"    /**\n     * {@link Filter#getDocIdSet}.\n     */\n    @Override\n    public DocIdSet getDocIdSet(IndexReader reader) throws IOException\n    {\n        int[] index = new int[1]; // use array as reference to modifiable int; \n        index[0] = 0;             // an object attribute would not be thread safe.\n        if (logic != -1)\n            return getDocIdSet(reader, logic, index);\n        else if (logicArray != null)\n            return getDocIdSet(reader, logicArray, index);\n        else\n            return getDocIdSet(reader, DEFAULT, index);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"]},"commit2Childs":{"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}