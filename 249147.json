{"path":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery.SpanQueue#lessThan(Spans,Spans).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery.SpanQueue#lessThan(Spans,Spans).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanOrQuery.SpanQueue#lessThan(Spans,Spans).mjava","sourceNew":"    @Override\n    protected final boolean lessThan(Spans spans1, Spans spans2) {\n      if (spans1.doc() == spans2.doc()) {\n        if (spans1.start() == spans2.start()) {\n          return spans1.end() < spans2.end();\n        } else {\n          return spans1.start() < spans2.start();\n        }\n      } else {\n        return spans1.doc() < spans2.doc();\n      }\n    }\n\n","sourceOld":"    @Override\n    protected final boolean lessThan(Spans spans1, Spans spans2) {\n      if (spans1.doc() == spans2.doc()) {\n        if (spans1.start() == spans2.start()) {\n          return spans1.end() < spans2.end();\n        } else {\n          return spans1.start() < spans2.start();\n        }\n      } else {\n        return spans1.doc() < spans2.doc();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30de45e50bdc1a79a6797f34dca6271c8866cb6e","date":1427790465,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery.SpanQueue#lessThan(Spans,Spans).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery.SpanQueue#lessThan(Spans,Spans).mjava","sourceNew":"    @Override\n    protected final boolean lessThan(Spans spans1, Spans spans2) {\n      if (spans1.docID() == spans2.docID()) {\n        if (spans1.startPosition() == spans2.startPosition()) {\n          return spans1.endPosition() < spans2.endPosition();\n        } else {\n          return spans1.startPosition() < spans2.startPosition();\n        }\n      } else {\n        return spans1.docID() < spans2.docID();\n      }\n    }\n\n","sourceOld":"    @Override\n    protected final boolean lessThan(Spans spans1, Spans spans2) {\n      if (spans1.doc() == spans2.doc()) {\n        if (spans1.start() == spans2.start()) {\n          return spans1.end() < spans2.end();\n        } else {\n          return spans1.start() < spans2.start();\n        }\n      } else {\n        return spans1.doc() < spans2.doc();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fab172655716b96f7e42376116235017a922de3a","date":1427850611,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery.SpanQueue#lessThan(Spans,Spans).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery.SpanQueue#lessThan(Spans,Spans).mjava","sourceNew":"    @Override\n    protected final boolean lessThan(Spans spans1, Spans spans2) {\n      if (spans1.docID() == spans2.docID()) {\n        if (spans1.startPosition() == spans2.startPosition()) {\n          return spans1.endPosition() < spans2.endPosition();\n        } else {\n          return spans1.startPosition() < spans2.startPosition();\n        }\n      } else {\n        return spans1.docID() < spans2.docID();\n      }\n    }\n\n","sourceOld":"    @Override\n    protected final boolean lessThan(Spans spans1, Spans spans2) {\n      if (spans1.doc() == spans2.doc()) {\n        if (spans1.start() == spans2.start()) {\n          return spans1.end() < spans2.end();\n        } else {\n          return spans1.start() < spans2.start();\n        }\n      } else {\n        return spans1.doc() < spans2.doc();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7","date":1429852340,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanOrQuery.SpanQueue#lessThan(Spans,Spans).mjava","sourceNew":null,"sourceOld":"    @Override\n    protected final boolean lessThan(Spans spans1, Spans spans2) {\n      if (spans1.docID() == spans2.docID()) {\n        if (spans1.startPosition() == spans2.startPosition()) {\n          return spans1.endPosition() < spans2.endPosition();\n        } else {\n          return spans1.startPosition() < spans2.startPosition();\n        }\n      } else {\n        return spans1.docID() < spans2.docID();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7":["30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"fab172655716b96f7e42376116235017a922de3a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7"]},"commit2Childs":{"7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["30de45e50bdc1a79a6797f34dca6271c8866cb6e","fab172655716b96f7e42376116235017a922de3a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["7fd9a42c79cabbf7d82cc6081cf4dac1324c99e7","fab172655716b96f7e42376116235017a922de3a"],"fab172655716b96f7e42376116235017a922de3a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fab172655716b96f7e42376116235017a922de3a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}