{"path":"solr/core/src/java/org/apache/solr/schema/EnumField#init(IndexSchema,Map[String,String]).mjava","commits":[{"id":"567c8d957d62e7e7bcf2ac9e7fb9bacb03182656","date":1383680488,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/EnumField#init(IndexSchema,Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    super.init(schema, args);\n    enumsConfigFile = args.get(PARAM_ENUMS_CONFIG);\n    if (enumsConfigFile == null) {\n      throw new SolrException(SolrException.ErrorCode.NOT_FOUND, \"No enums config file was configured.\");\n    }\n    enumName = args.get(PARAM_ENUM_NAME);\n    if (enumName == null) {\n      throw new SolrException(SolrException.ErrorCode.NOT_FOUND, \"No enum name was configured.\");\n    }\n\n    InputStream is = null;\n\n    try {\n      is = schema.getResourceLoader().openResource(enumsConfigFile);\n      final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      try {\n        final Document doc = dbf.newDocumentBuilder().parse(is);\n        final XPathFactory xpathFactory = XPathFactory.newInstance();\n        final XPath xpath = xpathFactory.newXPath();\n        final String xpathStr = String.format(LOCALE, \"/enumsConfig/enum[@name='%s']\", enumName);\n        final NodeList nodes = (NodeList) xpath.evaluate(xpathStr, doc, XPathConstants.NODESET);\n        final int nodesLength = nodes.getLength();\n        if (nodesLength == 0) {\n          String exceptionMessage = String.format(LOCALE, \"No enum configuration found for enum '%s' in %s.\",\n                  enumName, enumsConfigFile);\n          throw new SolrException(SolrException.ErrorCode.NOT_FOUND, exceptionMessage);\n        }\n        if (nodesLength > 1) {\n          if (log.isWarnEnabled())\n            log.warn(\"More than one enum configuration found for enum '{}' in {}. The last one was taken.\", enumName, enumsConfigFile);\n        }\n        final Node enumNode = nodes.item(nodesLength - 1);\n        final NodeList valueNodes = (NodeList) xpath.evaluate(\"value\", enumNode, XPathConstants.NODESET);\n        for (int i = 0; i < valueNodes.getLength(); i++) {\n          final Node valueNode = valueNodes.item(i);\n          final String valueStr = valueNode.getTextContent();\n          if ((valueStr == null) || (valueStr.length() == 0)) {\n            final String exceptionMessage = String.format(LOCALE, \"A value was defined with an no value in enum '%s' in %s.\",\n                    enumName, enumsConfigFile);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, exceptionMessage);\n          }\n          if (enumStringToIntMap.containsKey(valueStr)) {\n            final String exceptionMessage = String.format(LOCALE, \"A duplicated definition was found for value '%s' in enum '%s' in %s.\",\n                    valueStr, enumName, enumsConfigFile);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, exceptionMessage);\n          }\n          enumIntToStringMap.put(i, valueStr);\n          enumStringToIntMap.put(valueStr, i);\n        }\n      }\n      catch (ParserConfigurationException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing enums config.\", e);\n      }\n      catch (SAXException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing enums config.\", e);\n      }\n      catch (XPathExpressionException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing enums config.\", e);\n      }\n    }\n    catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error while opening enums config.\", e);\n    } finally {\n      try {\n        if (is != null) {\n          is.close();\n        }\n      }\n      catch (IOException e) {\n        e.printStackTrace();\n      }\n    }\n\n    if ((enumStringToIntMap.size() == 0) || (enumIntToStringMap.size() == 0)) {\n      String exceptionMessage = String.format(LOCALE, \"Invalid configuration was defined for enum '%s' in %s.\",\n              enumName, enumsConfigFile);\n      throw new SolrException(SolrException.ErrorCode.NOT_FOUND, exceptionMessage);\n    }\n\n    args.remove(PARAM_ENUMS_CONFIG);\n    args.remove(PARAM_ENUM_NAME);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6e1dc1bb4254226c8d7151b596cc1be40671751","date":1421876355,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/EnumField#init(IndexSchema,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/EnumField#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    super.init(schema, args);\n    enumsConfigFile = args.get(PARAM_ENUMS_CONFIG);\n    if (enumsConfigFile == null) {\n      throw new SolrException(SolrException.ErrorCode.NOT_FOUND, \"No enums config file was configured.\");\n    }\n    enumName = args.get(PARAM_ENUM_NAME);\n    if (enumName == null) {\n      throw new SolrException(SolrException.ErrorCode.NOT_FOUND, \"No enum name was configured.\");\n    }\n\n    InputStream is = null;\n\n    try {\n      is = schema.getResourceLoader().openResource(enumsConfigFile);\n      final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      try {\n        final Document doc = dbf.newDocumentBuilder().parse(is);\n        final XPathFactory xpathFactory = XPathFactory.newInstance();\n        final XPath xpath = xpathFactory.newXPath();\n        final String xpathStr = String.format(LOCALE, \"/enumsConfig/enum[@name='%s']\", enumName);\n        final NodeList nodes = (NodeList) xpath.evaluate(xpathStr, doc, XPathConstants.NODESET);\n        final int nodesLength = nodes.getLength();\n        if (nodesLength == 0) {\n          String exceptionMessage = String.format(LOCALE, \"No enum configuration found for enum '%s' in %s.\",\n                  enumName, enumsConfigFile);\n          throw new SolrException(SolrException.ErrorCode.NOT_FOUND, exceptionMessage);\n        }\n        if (nodesLength > 1) {\n          if (log.isWarnEnabled())\n            log.warn(\"More than one enum configuration found for enum '{}' in {}. The last one was taken.\", enumName, enumsConfigFile);\n        }\n        final Node enumNode = nodes.item(nodesLength - 1);\n        final NodeList valueNodes = (NodeList) xpath.evaluate(\"value\", enumNode, XPathConstants.NODESET);\n        for (int i = 0; i < valueNodes.getLength(); i++) {\n          final Node valueNode = valueNodes.item(i);\n          final String valueStr = valueNode.getTextContent();\n          if ((valueStr == null) || (valueStr.length() == 0)) {\n            final String exceptionMessage = String.format(LOCALE, \"A value was defined with an no value in enum '%s' in %s.\",\n                    enumName, enumsConfigFile);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, exceptionMessage);\n          }\n          if (enumStringToIntMap.containsKey(valueStr)) {\n            final String exceptionMessage = String.format(LOCALE, \"A duplicated definition was found for value '%s' in enum '%s' in %s.\",\n                    valueStr, enumName, enumsConfigFile);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, exceptionMessage);\n          }\n          enumIntToStringMap.put(i, valueStr);\n          enumStringToIntMap.put(valueStr, i);\n        }\n      }\n      catch (ParserConfigurationException | XPathExpressionException | SAXException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing enums config.\", e);\n      }\n    }\n    catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error while opening enums config.\", e);\n    } finally {\n      try {\n        if (is != null) {\n          is.close();\n        }\n      }\n      catch (IOException e) {\n        e.printStackTrace();\n      }\n    }\n\n    if ((enumStringToIntMap.size() == 0) || (enumIntToStringMap.size() == 0)) {\n      String exceptionMessage = String.format(LOCALE, \"Invalid configuration was defined for enum '%s' in %s.\",\n              enumName, enumsConfigFile);\n      throw new SolrException(SolrException.ErrorCode.NOT_FOUND, exceptionMessage);\n    }\n\n    args.remove(PARAM_ENUMS_CONFIG);\n    args.remove(PARAM_ENUM_NAME);\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    super.init(schema, args);\n    enumsConfigFile = args.get(PARAM_ENUMS_CONFIG);\n    if (enumsConfigFile == null) {\n      throw new SolrException(SolrException.ErrorCode.NOT_FOUND, \"No enums config file was configured.\");\n    }\n    enumName = args.get(PARAM_ENUM_NAME);\n    if (enumName == null) {\n      throw new SolrException(SolrException.ErrorCode.NOT_FOUND, \"No enum name was configured.\");\n    }\n\n    InputStream is = null;\n\n    try {\n      is = schema.getResourceLoader().openResource(enumsConfigFile);\n      final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      try {\n        final Document doc = dbf.newDocumentBuilder().parse(is);\n        final XPathFactory xpathFactory = XPathFactory.newInstance();\n        final XPath xpath = xpathFactory.newXPath();\n        final String xpathStr = String.format(LOCALE, \"/enumsConfig/enum[@name='%s']\", enumName);\n        final NodeList nodes = (NodeList) xpath.evaluate(xpathStr, doc, XPathConstants.NODESET);\n        final int nodesLength = nodes.getLength();\n        if (nodesLength == 0) {\n          String exceptionMessage = String.format(LOCALE, \"No enum configuration found for enum '%s' in %s.\",\n                  enumName, enumsConfigFile);\n          throw new SolrException(SolrException.ErrorCode.NOT_FOUND, exceptionMessage);\n        }\n        if (nodesLength > 1) {\n          if (log.isWarnEnabled())\n            log.warn(\"More than one enum configuration found for enum '{}' in {}. The last one was taken.\", enumName, enumsConfigFile);\n        }\n        final Node enumNode = nodes.item(nodesLength - 1);\n        final NodeList valueNodes = (NodeList) xpath.evaluate(\"value\", enumNode, XPathConstants.NODESET);\n        for (int i = 0; i < valueNodes.getLength(); i++) {\n          final Node valueNode = valueNodes.item(i);\n          final String valueStr = valueNode.getTextContent();\n          if ((valueStr == null) || (valueStr.length() == 0)) {\n            final String exceptionMessage = String.format(LOCALE, \"A value was defined with an no value in enum '%s' in %s.\",\n                    enumName, enumsConfigFile);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, exceptionMessage);\n          }\n          if (enumStringToIntMap.containsKey(valueStr)) {\n            final String exceptionMessage = String.format(LOCALE, \"A duplicated definition was found for value '%s' in enum '%s' in %s.\",\n                    valueStr, enumName, enumsConfigFile);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, exceptionMessage);\n          }\n          enumIntToStringMap.put(i, valueStr);\n          enumStringToIntMap.put(valueStr, i);\n        }\n      }\n      catch (ParserConfigurationException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing enums config.\", e);\n      }\n      catch (SAXException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing enums config.\", e);\n      }\n      catch (XPathExpressionException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing enums config.\", e);\n      }\n    }\n    catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error while opening enums config.\", e);\n    } finally {\n      try {\n        if (is != null) {\n          is.close();\n        }\n      }\n      catch (IOException e) {\n        e.printStackTrace();\n      }\n    }\n\n    if ((enumStringToIntMap.size() == 0) || (enumIntToStringMap.size() == 0)) {\n      String exceptionMessage = String.format(LOCALE, \"Invalid configuration was defined for enum '%s' in %s.\",\n              enumName, enumsConfigFile);\n      throw new SolrException(SolrException.ErrorCode.NOT_FOUND, exceptionMessage);\n    }\n\n    args.remove(PARAM_ENUMS_CONFIG);\n    args.remove(PARAM_ENUM_NAME);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5abf437a93e71afe3983407a31fb34fa483414fd","date":1455004179,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/EnumField#init(IndexSchema,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/EnumField#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    super.init(schema, args);\n    enumsConfigFile = args.get(PARAM_ENUMS_CONFIG);\n    if (enumsConfigFile == null) {\n      throw new SolrException(SolrException.ErrorCode.NOT_FOUND, \"No enums config file was configured.\");\n    }\n    enumName = args.get(PARAM_ENUM_NAME);\n    if (enumName == null) {\n      throw new SolrException(SolrException.ErrorCode.NOT_FOUND, \"No enum name was configured.\");\n    }\n\n    InputStream is = null;\n\n    try {\n      is = schema.getResourceLoader().openResource(enumsConfigFile);\n      final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      try {\n        final Document doc = dbf.newDocumentBuilder().parse(is);\n        final XPathFactory xpathFactory = XPathFactory.newInstance();\n        final XPath xpath = xpathFactory.newXPath();\n        final String xpathStr = String.format(Locale.ROOT, \"/enumsConfig/enum[@name='%s']\", enumName);\n        final NodeList nodes = (NodeList) xpath.evaluate(xpathStr, doc, XPathConstants.NODESET);\n        final int nodesLength = nodes.getLength();\n        if (nodesLength == 0) {\n          String exceptionMessage = String.format(Locale.ENGLISH, \"No enum configuration found for enum '%s' in %s.\",\n                  enumName, enumsConfigFile);\n          throw new SolrException(SolrException.ErrorCode.NOT_FOUND, exceptionMessage);\n        }\n        if (nodesLength > 1) {\n          if (log.isWarnEnabled())\n            log.warn(\"More than one enum configuration found for enum '{}' in {}. The last one was taken.\", enumName, enumsConfigFile);\n        }\n        final Node enumNode = nodes.item(nodesLength - 1);\n        final NodeList valueNodes = (NodeList) xpath.evaluate(\"value\", enumNode, XPathConstants.NODESET);\n        for (int i = 0; i < valueNodes.getLength(); i++) {\n          final Node valueNode = valueNodes.item(i);\n          final String valueStr = valueNode.getTextContent();\n          if ((valueStr == null) || (valueStr.length() == 0)) {\n            final String exceptionMessage = String.format(Locale.ENGLISH, \"A value was defined with an no value in enum '%s' in %s.\",\n                    enumName, enumsConfigFile);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, exceptionMessage);\n          }\n          if (enumStringToIntMap.containsKey(valueStr)) {\n            final String exceptionMessage = String.format(Locale.ENGLISH, \"A duplicated definition was found for value '%s' in enum '%s' in %s.\",\n                    valueStr, enumName, enumsConfigFile);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, exceptionMessage);\n          }\n          enumIntToStringMap.put(i, valueStr);\n          enumStringToIntMap.put(valueStr, i);\n        }\n      }\n      catch (ParserConfigurationException | XPathExpressionException | SAXException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing enums config.\", e);\n      }\n    }\n    catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error while opening enums config.\", e);\n    } finally {\n      try {\n        if (is != null) {\n          is.close();\n        }\n      }\n      catch (IOException e) {\n        e.printStackTrace();\n      }\n    }\n\n    if ((enumStringToIntMap.size() == 0) || (enumIntToStringMap.size() == 0)) {\n      String exceptionMessage = String.format(Locale.ENGLISH, \"Invalid configuration was defined for enum '%s' in %s.\",\n              enumName, enumsConfigFile);\n      throw new SolrException(SolrException.ErrorCode.NOT_FOUND, exceptionMessage);\n    }\n\n    args.remove(PARAM_ENUMS_CONFIG);\n    args.remove(PARAM_ENUM_NAME);\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    super.init(schema, args);\n    enumsConfigFile = args.get(PARAM_ENUMS_CONFIG);\n    if (enumsConfigFile == null) {\n      throw new SolrException(SolrException.ErrorCode.NOT_FOUND, \"No enums config file was configured.\");\n    }\n    enumName = args.get(PARAM_ENUM_NAME);\n    if (enumName == null) {\n      throw new SolrException(SolrException.ErrorCode.NOT_FOUND, \"No enum name was configured.\");\n    }\n\n    InputStream is = null;\n\n    try {\n      is = schema.getResourceLoader().openResource(enumsConfigFile);\n      final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      try {\n        final Document doc = dbf.newDocumentBuilder().parse(is);\n        final XPathFactory xpathFactory = XPathFactory.newInstance();\n        final XPath xpath = xpathFactory.newXPath();\n        final String xpathStr = String.format(LOCALE, \"/enumsConfig/enum[@name='%s']\", enumName);\n        final NodeList nodes = (NodeList) xpath.evaluate(xpathStr, doc, XPathConstants.NODESET);\n        final int nodesLength = nodes.getLength();\n        if (nodesLength == 0) {\n          String exceptionMessage = String.format(LOCALE, \"No enum configuration found for enum '%s' in %s.\",\n                  enumName, enumsConfigFile);\n          throw new SolrException(SolrException.ErrorCode.NOT_FOUND, exceptionMessage);\n        }\n        if (nodesLength > 1) {\n          if (log.isWarnEnabled())\n            log.warn(\"More than one enum configuration found for enum '{}' in {}. The last one was taken.\", enumName, enumsConfigFile);\n        }\n        final Node enumNode = nodes.item(nodesLength - 1);\n        final NodeList valueNodes = (NodeList) xpath.evaluate(\"value\", enumNode, XPathConstants.NODESET);\n        for (int i = 0; i < valueNodes.getLength(); i++) {\n          final Node valueNode = valueNodes.item(i);\n          final String valueStr = valueNode.getTextContent();\n          if ((valueStr == null) || (valueStr.length() == 0)) {\n            final String exceptionMessage = String.format(LOCALE, \"A value was defined with an no value in enum '%s' in %s.\",\n                    enumName, enumsConfigFile);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, exceptionMessage);\n          }\n          if (enumStringToIntMap.containsKey(valueStr)) {\n            final String exceptionMessage = String.format(LOCALE, \"A duplicated definition was found for value '%s' in enum '%s' in %s.\",\n                    valueStr, enumName, enumsConfigFile);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, exceptionMessage);\n          }\n          enumIntToStringMap.put(i, valueStr);\n          enumStringToIntMap.put(valueStr, i);\n        }\n      }\n      catch (ParserConfigurationException | XPathExpressionException | SAXException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing enums config.\", e);\n      }\n    }\n    catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error while opening enums config.\", e);\n    } finally {\n      try {\n        if (is != null) {\n          is.close();\n        }\n      }\n      catch (IOException e) {\n        e.printStackTrace();\n      }\n    }\n\n    if ((enumStringToIntMap.size() == 0) || (enumIntToStringMap.size() == 0)) {\n      String exceptionMessage = String.format(LOCALE, \"Invalid configuration was defined for enum '%s' in %s.\",\n              enumName, enumsConfigFile);\n      throw new SolrException(SolrException.ErrorCode.NOT_FOUND, exceptionMessage);\n    }\n\n    args.remove(PARAM_ENUMS_CONFIG);\n    args.remove(PARAM_ENUM_NAME);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ad8c9e9210e008dc7b8ad5a037ff20879150ea","date":1501889566,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/schema/EnumField#init(IndexSchema,Map[String,String]).mjava","sourceNew":null,"sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    super.init(schema, args);\n    enumsConfigFile = args.get(PARAM_ENUMS_CONFIG);\n    if (enumsConfigFile == null) {\n      throw new SolrException(SolrException.ErrorCode.NOT_FOUND, \"No enums config file was configured.\");\n    }\n    enumName = args.get(PARAM_ENUM_NAME);\n    if (enumName == null) {\n      throw new SolrException(SolrException.ErrorCode.NOT_FOUND, \"No enum name was configured.\");\n    }\n\n    InputStream is = null;\n\n    try {\n      is = schema.getResourceLoader().openResource(enumsConfigFile);\n      final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      try {\n        final Document doc = dbf.newDocumentBuilder().parse(is);\n        final XPathFactory xpathFactory = XPathFactory.newInstance();\n        final XPath xpath = xpathFactory.newXPath();\n        final String xpathStr = String.format(Locale.ROOT, \"/enumsConfig/enum[@name='%s']\", enumName);\n        final NodeList nodes = (NodeList) xpath.evaluate(xpathStr, doc, XPathConstants.NODESET);\n        final int nodesLength = nodes.getLength();\n        if (nodesLength == 0) {\n          String exceptionMessage = String.format(Locale.ENGLISH, \"No enum configuration found for enum '%s' in %s.\",\n                  enumName, enumsConfigFile);\n          throw new SolrException(SolrException.ErrorCode.NOT_FOUND, exceptionMessage);\n        }\n        if (nodesLength > 1) {\n          if (log.isWarnEnabled())\n            log.warn(\"More than one enum configuration found for enum '{}' in {}. The last one was taken.\", enumName, enumsConfigFile);\n        }\n        final Node enumNode = nodes.item(nodesLength - 1);\n        final NodeList valueNodes = (NodeList) xpath.evaluate(\"value\", enumNode, XPathConstants.NODESET);\n        for (int i = 0; i < valueNodes.getLength(); i++) {\n          final Node valueNode = valueNodes.item(i);\n          final String valueStr = valueNode.getTextContent();\n          if ((valueStr == null) || (valueStr.length() == 0)) {\n            final String exceptionMessage = String.format(Locale.ENGLISH, \"A value was defined with an no value in enum '%s' in %s.\",\n                    enumName, enumsConfigFile);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, exceptionMessage);\n          }\n          if (enumStringToIntMap.containsKey(valueStr)) {\n            final String exceptionMessage = String.format(Locale.ENGLISH, \"A duplicated definition was found for value '%s' in enum '%s' in %s.\",\n                    valueStr, enumName, enumsConfigFile);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, exceptionMessage);\n          }\n          enumIntToStringMap.put(i, valueStr);\n          enumStringToIntMap.put(valueStr, i);\n        }\n      }\n      catch (ParserConfigurationException | XPathExpressionException | SAXException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing enums config.\", e);\n      }\n    }\n    catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error while opening enums config.\", e);\n    } finally {\n      try {\n        if (is != null) {\n          is.close();\n        }\n      }\n      catch (IOException e) {\n        e.printStackTrace();\n      }\n    }\n\n    if ((enumStringToIntMap.size() == 0) || (enumIntToStringMap.size() == 0)) {\n      String exceptionMessage = String.format(Locale.ENGLISH, \"Invalid configuration was defined for enum '%s' in %s.\",\n              enumName, enumsConfigFile);\n      throw new SolrException(SolrException.ErrorCode.NOT_FOUND, exceptionMessage);\n    }\n\n    args.remove(PARAM_ENUMS_CONFIG);\n    args.remove(PARAM_ENUM_NAME);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/schema/EnumField#init(IndexSchema,Map[String,String]).mjava","sourceNew":null,"sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  protected void init(IndexSchema schema, Map<String, String> args) {\n    super.init(schema, args);\n    enumsConfigFile = args.get(PARAM_ENUMS_CONFIG);\n    if (enumsConfigFile == null) {\n      throw new SolrException(SolrException.ErrorCode.NOT_FOUND, \"No enums config file was configured.\");\n    }\n    enumName = args.get(PARAM_ENUM_NAME);\n    if (enumName == null) {\n      throw new SolrException(SolrException.ErrorCode.NOT_FOUND, \"No enum name was configured.\");\n    }\n\n    InputStream is = null;\n\n    try {\n      is = schema.getResourceLoader().openResource(enumsConfigFile);\n      final DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n      try {\n        final Document doc = dbf.newDocumentBuilder().parse(is);\n        final XPathFactory xpathFactory = XPathFactory.newInstance();\n        final XPath xpath = xpathFactory.newXPath();\n        final String xpathStr = String.format(Locale.ROOT, \"/enumsConfig/enum[@name='%s']\", enumName);\n        final NodeList nodes = (NodeList) xpath.evaluate(xpathStr, doc, XPathConstants.NODESET);\n        final int nodesLength = nodes.getLength();\n        if (nodesLength == 0) {\n          String exceptionMessage = String.format(Locale.ENGLISH, \"No enum configuration found for enum '%s' in %s.\",\n                  enumName, enumsConfigFile);\n          throw new SolrException(SolrException.ErrorCode.NOT_FOUND, exceptionMessage);\n        }\n        if (nodesLength > 1) {\n          if (log.isWarnEnabled())\n            log.warn(\"More than one enum configuration found for enum '{}' in {}. The last one was taken.\", enumName, enumsConfigFile);\n        }\n        final Node enumNode = nodes.item(nodesLength - 1);\n        final NodeList valueNodes = (NodeList) xpath.evaluate(\"value\", enumNode, XPathConstants.NODESET);\n        for (int i = 0; i < valueNodes.getLength(); i++) {\n          final Node valueNode = valueNodes.item(i);\n          final String valueStr = valueNode.getTextContent();\n          if ((valueStr == null) || (valueStr.length() == 0)) {\n            final String exceptionMessage = String.format(Locale.ENGLISH, \"A value was defined with an no value in enum '%s' in %s.\",\n                    enumName, enumsConfigFile);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, exceptionMessage);\n          }\n          if (enumStringToIntMap.containsKey(valueStr)) {\n            final String exceptionMessage = String.format(Locale.ENGLISH, \"A duplicated definition was found for value '%s' in enum '%s' in %s.\",\n                    valueStr, enumName, enumsConfigFile);\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, exceptionMessage);\n          }\n          enumIntToStringMap.put(i, valueStr);\n          enumStringToIntMap.put(valueStr, i);\n        }\n      }\n      catch (ParserConfigurationException | XPathExpressionException | SAXException e) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing enums config.\", e);\n      }\n    }\n    catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error while opening enums config.\", e);\n    } finally {\n      try {\n        if (is != null) {\n          is.close();\n        }\n      }\n      catch (IOException e) {\n        e.printStackTrace();\n      }\n    }\n\n    if ((enumStringToIntMap.size() == 0) || (enumIntToStringMap.size() == 0)) {\n      String exceptionMessage = String.format(Locale.ENGLISH, \"Invalid configuration was defined for enum '%s' in %s.\",\n              enumName, enumsConfigFile);\n      throw new SolrException(SolrException.ErrorCode.NOT_FOUND, exceptionMessage);\n    }\n\n    args.remove(PARAM_ENUMS_CONFIG);\n    args.remove(PARAM_ENUM_NAME);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c6e1dc1bb4254226c8d7151b596cc1be40671751":["567c8d957d62e7e7bcf2ac9e7fb9bacb03182656"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["5abf437a93e71afe3983407a31fb34fa483414fd","54ad8c9e9210e008dc7b8ad5a037ff20879150ea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"567c8d957d62e7e7bcf2ac9e7fb9bacb03182656":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5abf437a93e71afe3983407a31fb34fa483414fd":["c6e1dc1bb4254226c8d7151b596cc1be40671751"],"54ad8c9e9210e008dc7b8ad5a037ff20879150ea":["5abf437a93e71afe3983407a31fb34fa483414fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54ad8c9e9210e008dc7b8ad5a037ff20879150ea"]},"commit2Childs":{"c6e1dc1bb4254226c8d7151b596cc1be40671751":["5abf437a93e71afe3983407a31fb34fa483414fd"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["567c8d957d62e7e7bcf2ac9e7fb9bacb03182656"],"567c8d957d62e7e7bcf2ac9e7fb9bacb03182656":["c6e1dc1bb4254226c8d7151b596cc1be40671751"],"5abf437a93e71afe3983407a31fb34fa483414fd":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","54ad8c9e9210e008dc7b8ad5a037ff20879150ea"],"54ad8c9e9210e008dc7b8ad5a037ff20879150ea":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}