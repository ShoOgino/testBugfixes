{"path":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#isExpandedTarget(Arc[T]).mjava","commits":[{"id":"66a31a416e3550794ff2e245570885b7193952b6","date":1298453724,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#isExpandedTarget(Arc[T]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Checks if <code>arc</code>'s target state is in expanded (or vector) format. \n   * \n   * @return Returns <code>true</code> if <code>arc</code> points to a state in an\n   * expanded array format.\n   */\n  boolean isExpandedTarget(Arc<T> follow) throws IOException {\n    if (follow.isFinal()) {\n      return false;\n    } else {\n      final BytesReader in = getBytesReader(follow.target);\n      final byte b = in.readByte();\n      \n      return (b & BIT_ARCS_AS_FIXED_ARRAY) != 0;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"692804e172a5810620fac3194db7b7616a21ad3d","date":1298513499,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#isExpandedTarget(Arc[T]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Checks if <code>arc</code>'s target state is in expanded (or vector) format. \n   * \n   * @return Returns <code>true</code> if <code>arc</code> points to a state in an\n   * expanded array format.\n   */\n  boolean isExpandedTarget(Arc<T> follow) throws IOException {\n    if (follow.isFinal()) {\n      return false;\n    } else {\n      final BytesReader in = getBytesReader(follow.target);\n      final byte b = in.readByte();\n      \n      return (b & BIT_ARCS_AS_FIXED_ARRAY) != 0;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#isExpandedTarget(Arc[T]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Checks if <code>arc</code>'s target state is in expanded (or vector) format. \n   * \n   * @return Returns <code>true</code> if <code>arc</code> points to a state in an\n   * expanded array format.\n   */\n  boolean isExpandedTarget(Arc<T> follow) throws IOException {\n    if (follow.isFinal()) {\n      return false;\n    } else {\n      final BytesReader in = getBytesReader(follow.target);\n      final byte b = in.readByte();\n      \n      return (b & BIT_ARCS_AS_FIXED_ARRAY) != 0;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41a7130051d507b3a37c0b9f41f5937dfed6a88e","date":1302628279,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#isExpandedTarget(Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#isExpandedTarget(Arc[T]).mjava","sourceNew":"  /**\n   * Checks if <code>arc</code>'s target state is in expanded (or vector) format. \n   * \n   * @return Returns <code>true</code> if <code>arc</code> points to a state in an\n   * expanded array format.\n   */\n  boolean isExpandedTarget(Arc<T> follow) throws IOException {\n    if (!targetHasArcs(follow)) {\n      return false;\n    } else {\n      final BytesReader in = getBytesReader(follow.target);\n      final byte b = in.readByte();\n      return (b & BIT_ARCS_AS_FIXED_ARRAY) != 0;\n    }\n  }\n\n","sourceOld":"  /**\n   * Checks if <code>arc</code>'s target state is in expanded (or vector) format. \n   * \n   * @return Returns <code>true</code> if <code>arc</code> points to a state in an\n   * expanded array format.\n   */\n  boolean isExpandedTarget(Arc<T> follow) throws IOException {\n    if (follow.isFinal()) {\n      return false;\n    } else {\n      final BytesReader in = getBytesReader(follow.target);\n      final byte b = in.readByte();\n      \n      return (b & BIT_ARCS_AS_FIXED_ARRAY) != 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#isExpandedTarget(Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#isExpandedTarget(Arc[T]).mjava","sourceNew":"  /**\n   * Checks if <code>arc</code>'s target state is in expanded (or vector) format. \n   * \n   * @return Returns <code>true</code> if <code>arc</code> points to a state in an\n   * expanded array format.\n   */\n  boolean isExpandedTarget(Arc<T> follow) throws IOException {\n    if (!targetHasArcs(follow)) {\n      return false;\n    } else {\n      final BytesReader in = getBytesReader(follow.target);\n      final byte b = in.readByte();\n      return (b & BIT_ARCS_AS_FIXED_ARRAY) != 0;\n    }\n  }\n\n","sourceOld":"  /**\n   * Checks if <code>arc</code>'s target state is in expanded (or vector) format. \n   * \n   * @return Returns <code>true</code> if <code>arc</code> points to a state in an\n   * expanded array format.\n   */\n  boolean isExpandedTarget(Arc<T> follow) throws IOException {\n    if (follow.isFinal()) {\n      return false;\n    } else {\n      final BytesReader in = getBytesReader(follow.target);\n      final byte b = in.readByte();\n      \n      return (b & BIT_ARCS_AS_FIXED_ARRAY) != 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#isExpandedTarget(Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#isExpandedTarget(Arc[T]).mjava","sourceNew":"  /**\n   * Checks if <code>arc</code>'s target state is in expanded (or vector) format. \n   * \n   * @return Returns <code>true</code> if <code>arc</code> points to a state in an\n   * expanded array format.\n   */\n  boolean isExpandedTarget(Arc<T> follow) throws IOException {\n    if (!targetHasArcs(follow)) {\n      return false;\n    } else {\n      final BytesReader in = getBytesReader(follow.target);\n      final byte b = in.readByte();\n      return (b & BIT_ARCS_AS_FIXED_ARRAY) != 0;\n    }\n  }\n\n","sourceOld":"  /**\n   * Checks if <code>arc</code>'s target state is in expanded (or vector) format. \n   * \n   * @return Returns <code>true</code> if <code>arc</code> points to a state in an\n   * expanded array format.\n   */\n  boolean isExpandedTarget(Arc<T> follow) throws IOException {\n    if (follow.isFinal()) {\n      return false;\n    } else {\n      final BytesReader in = getBytesReader(follow.target);\n      final byte b = in.readByte();\n      \n      return (b & BIT_ARCS_AS_FIXED_ARRAY) != 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#isExpandedTarget(Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#isExpandedTarget(Arc[T]).mjava","sourceNew":"  /**\n   * Checks if <code>arc</code>'s target state is in expanded (or vector) format. \n   * \n   * @return Returns <code>true</code> if <code>arc</code> points to a state in an\n   * expanded array format.\n   */\n  boolean isExpandedTarget(Arc<T> follow) throws IOException {\n    if (!targetHasArcs(follow)) {\n      return false;\n    } else {\n      final BytesReader in = getBytesReader(follow.target);\n      final byte b = in.readByte();\n      return (b & BIT_ARCS_AS_FIXED_ARRAY) != 0;\n    }\n  }\n\n","sourceOld":"  /**\n   * Checks if <code>arc</code>'s target state is in expanded (or vector) format. \n   * \n   * @return Returns <code>true</code> if <code>arc</code> points to a state in an\n   * expanded array format.\n   */\n  boolean isExpandedTarget(Arc<T> follow) throws IOException {\n    if (follow.isFinal()) {\n      return false;\n    } else {\n      final BytesReader in = getBytesReader(follow.target);\n      final byte b = in.readByte();\n      \n      return (b & BIT_ARCS_AS_FIXED_ARRAY) != 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8be6e1e4fbbc94d90b78f175c03ff389b6949373","date":1306674752,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#isExpandedTarget(Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#isExpandedTarget(Arc[T]).mjava","sourceNew":"  /**\n   * Checks if <code>arc</code>'s target state is in expanded (or vector) format. \n   * \n   * @return Returns <code>true</code> if <code>arc</code> points to a state in an\n   * expanded array format.\n   */\n  boolean isExpandedTarget(Arc<T> follow) throws IOException {\n    if (!targetHasArcs(follow)) {\n      return false;\n    } else {\n      final BytesReader in = getBytesReader(follow.target);\n      final byte b = in.readByte();\n      return (b & BIT_ARCS_AS_FIXED_ARRAY) != 0;\n    }\n  }\n\n","sourceOld":"  /**\n   * Checks if <code>arc</code>'s target state is in expanded (or vector) format. \n   * \n   * @return Returns <code>true</code> if <code>arc</code> points to a state in an\n   * expanded array format.\n   */\n  boolean isExpandedTarget(Arc<T> follow) throws IOException {\n    if (!targetHasArcs(follow)) {\n      return false;\n    } else {\n      final BytesReader in = getBytesReader(follow.target);\n      final byte b = in.readByte();\n      return (b & BIT_ARCS_AS_FIXED_ARRAY) != 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#isExpandedTarget(Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#isExpandedTarget(Arc[T]).mjava","sourceNew":"  /**\n   * Checks if <code>arc</code>'s target state is in expanded (or vector) format. \n   * \n   * @return Returns <code>true</code> if <code>arc</code> points to a state in an\n   * expanded array format.\n   */\n  boolean isExpandedTarget(Arc<T> follow) throws IOException {\n    if (!targetHasArcs(follow)) {\n      return false;\n    } else {\n      final BytesReader in = getBytesReader(follow.target);\n      final byte b = in.readByte();\n      return (b & BIT_ARCS_AS_FIXED_ARRAY) != 0;\n    }\n  }\n\n","sourceOld":"  /**\n   * Checks if <code>arc</code>'s target state is in expanded (or vector) format. \n   * \n   * @return Returns <code>true</code> if <code>arc</code> points to a state in an\n   * expanded array format.\n   */\n  boolean isExpandedTarget(Arc<T> follow) throws IOException {\n    if (!targetHasArcs(follow)) {\n      return false;\n    } else {\n      final BytesReader in = getBytesReader(follow.target);\n      final byte b = in.readByte();\n      return (b & BIT_ARCS_AS_FIXED_ARRAY) != 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/fst/FST#isExpandedTarget(Arc[T]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/fst/FST#isExpandedTarget(Arc[T]).mjava","sourceNew":"  /**\n   * Checks if <code>arc</code>'s target state is in expanded (or vector) format. \n   * \n   * @return Returns <code>true</code> if <code>arc</code> points to a state in an\n   * expanded array format.\n   */\n  boolean isExpandedTarget(Arc<T> follow) throws IOException {\n    if (!targetHasArcs(follow)) {\n      return false;\n    } else {\n      final BytesReader in = getBytesReader(follow.target);\n      final byte b = in.readByte();\n      return (b & BIT_ARCS_AS_FIXED_ARRAY) != 0;\n    }\n  }\n\n","sourceOld":"  /**\n   * Checks if <code>arc</code>'s target state is in expanded (or vector) format. \n   * \n   * @return Returns <code>true</code> if <code>arc</code> points to a state in an\n   * expanded array format.\n   */\n  boolean isExpandedTarget(Arc<T> follow) throws IOException {\n    if (!targetHasArcs(follow)) {\n      return false;\n    } else {\n      final BytesReader in = getBytesReader(follow.target);\n      final byte b = in.readByte();\n      return (b & BIT_ARCS_AS_FIXED_ARRAY) != 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"692804e172a5810620fac3194db7b7616a21ad3d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","66a31a416e3550794ff2e245570885b7193952b6"],"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["41a7130051d507b3a37c0b9f41f5937dfed6a88e"],"66a31a416e3550794ff2e245570885b7193952b6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","66a31a416e3550794ff2e245570885b7193952b6"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a3776dccca01c11e7046323cfad46a3b4a471233","8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"a3776dccca01c11e7046323cfad46a3b4a471233":["66a31a416e3550794ff2e245570885b7193952b6","41a7130051d507b3a37c0b9f41f5937dfed6a88e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["d619839baa8ce5503e496b94a9e42ad6f079293f","41a7130051d507b3a37c0b9f41f5937dfed6a88e"],"962d04139994fce5193143ef35615499a9a96d78":["692804e172a5810620fac3194db7b7616a21ad3d","41a7130051d507b3a37c0b9f41f5937dfed6a88e"],"41a7130051d507b3a37c0b9f41f5937dfed6a88e":["66a31a416e3550794ff2e245570885b7193952b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8be6e1e4fbbc94d90b78f175c03ff389b6949373"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["135621f3a0670a9394eb563224a3b76cc4dddc0f","8be6e1e4fbbc94d90b78f175c03ff389b6949373"]},"commit2Childs":{"692804e172a5810620fac3194db7b7616a21ad3d":["962d04139994fce5193143ef35615499a9a96d78"],"8be6e1e4fbbc94d90b78f175c03ff389b6949373":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"66a31a416e3550794ff2e245570885b7193952b6":["692804e172a5810620fac3194db7b7616a21ad3d","d619839baa8ce5503e496b94a9e42ad6f079293f","a3776dccca01c11e7046323cfad46a3b4a471233","41a7130051d507b3a37c0b9f41f5937dfed6a88e"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a3776dccca01c11e7046323cfad46a3b4a471233":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["692804e172a5810620fac3194db7b7616a21ad3d","66a31a416e3550794ff2e245570885b7193952b6","d619839baa8ce5503e496b94a9e42ad6f079293f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"962d04139994fce5193143ef35615499a9a96d78":[],"41a7130051d507b3a37c0b9f41f5937dfed6a88e":["8be6e1e4fbbc94d90b78f175c03ff389b6949373","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","962d04139994fce5193143ef35615499a9a96d78","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}