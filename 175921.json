{"path":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String,String,FieldType).mjava","commits":[{"id":"23aec8f6a0b5a11d050d784a13871261bef7c925","date":1465332514,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String,String,FieldType).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String,String).mjava","sourceNew":"  private void setupRPTField(String distanceUnits, String geo, String format, FieldType fieldType) throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); // Delete managed-schema so it won't block parsing a new schema\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-one-field-no-dynamic-field.xml\", tmpSolrHome.getPath());\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n    \n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n\n    if (fieldType == null) {\n      fieldType = new SpatialRecursivePrefixTreeFieldType();\n    }\n    Map<String, String> rptMap = new HashMap<String,String>();\n    if(distanceUnits!=null)\n      rptMap.put(\"distanceUnits\", distanceUnits);\n    if(geo!=null)\n      rptMap.put(\"geo\", geo);\n    if(format!=null) {\n      rptMap.put(\"format\", format);\n    }\n    fieldType.init(oldSchema, rptMap);\n    fieldType.setTypeName(\"location_rpt\");\n    SchemaField newField = new SchemaField(\"geo\", fieldType, SchemaField.STORED | SchemaField.INDEXED, null);\n    IndexSchema newSchema = oldSchema.addField(newField);\n\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(delQ(\"*:*\"));\n  }\n\n","sourceOld":"  private void setupRPTField(String distanceUnits, String geo, String format) throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); // Delete managed-schema so it won't block parsing a new schema\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-one-field-no-dynamic-field.xml\", tmpSolrHome.getPath());\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n    \n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n\n    SpatialRecursivePrefixTreeFieldType rptFieldType = new SpatialRecursivePrefixTreeFieldType();\n    Map<String, String> rptMap = new HashMap<String,String>();\n    if(distanceUnits!=null)\n      rptMap.put(\"distanceUnits\", distanceUnits);\n    if(geo!=null)\n      rptMap.put(\"geo\", geo);\n    if(format!=null) {\n      rptMap.put(\"format\", format);\n    }\n    rptFieldType.init(oldSchema, rptMap);\n    rptFieldType.setTypeName(\"location_rpt\");\n    SchemaField newField = new SchemaField(\"geo\", rptFieldType, SchemaField.STORED | SchemaField.INDEXED, null);\n    IndexSchema newSchema = oldSchema.addField(newField);\n\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(delQ(\"*:*\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String,String,FieldType).mjava","pathOld":"/dev/null","sourceNew":"  private void setupRPTField(String distanceUnits, String geo, String format, FieldType fieldType) throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); // Delete managed-schema so it won't block parsing a new schema\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-one-field-no-dynamic-field.xml\", tmpSolrHome.getPath());\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n    \n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n\n    if (fieldType == null) {\n      fieldType = new SpatialRecursivePrefixTreeFieldType();\n    }\n    Map<String, String> rptMap = new HashMap<String,String>();\n    if(distanceUnits!=null)\n      rptMap.put(\"distanceUnits\", distanceUnits);\n    if(geo!=null)\n      rptMap.put(\"geo\", geo);\n    if(format!=null) {\n      rptMap.put(\"format\", format);\n    }\n    fieldType.init(oldSchema, rptMap);\n    fieldType.setTypeName(\"location_rpt\");\n    SchemaField newField = new SchemaField(\"geo\", fieldType, SchemaField.STORED | SchemaField.INDEXED, null);\n    IndexSchema newSchema = oldSchema.addField(newField);\n\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(delQ(\"*:*\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"255b1d03d3daae9aaaade60819388695622237d8","date":1506179019,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String,String,FieldType).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String,String,FieldType).mjava","sourceNew":"  private void setupRPTField(String distanceUnits, String geo, String format, FieldType fieldType) throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); // Delete managed-schema so it won't block parsing a new schema\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-one-field-no-dynamic-field.xml\", tmpSolrHome.getPath());\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n    \n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n\n    if (fieldType == null) {\n      fieldType = new SpatialRecursivePrefixTreeFieldType();\n    }\n    Map<String, String> rptMap = new HashMap<String,String>();\n    if(distanceUnits!=null)\n      rptMap.put(\"distanceUnits\", distanceUnits);\n    if(geo!=null)\n      rptMap.put(\"geo\", geo);\n    if(format!=null) {\n      rptMap.put(\"format\", format);\n    }\n    if (random().nextBoolean()) {\n      // use Geo3D sometimes\n      rptMap.put(\"spatialContextFactory\", \"Geo3D\");\n    }\n    fieldType.init(oldSchema, rptMap);\n    fieldType.setTypeName(\"location_rpt\");\n    SchemaField newField = new SchemaField(\"geo\", fieldType, SchemaField.STORED | SchemaField.INDEXED, null);\n    IndexSchema newSchema = oldSchema.addField(newField);\n\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(delQ(\"*:*\"));\n  }\n\n","sourceOld":"  private void setupRPTField(String distanceUnits, String geo, String format, FieldType fieldType) throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); // Delete managed-schema so it won't block parsing a new schema\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-one-field-no-dynamic-field.xml\", tmpSolrHome.getPath());\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n    \n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n\n    if (fieldType == null) {\n      fieldType = new SpatialRecursivePrefixTreeFieldType();\n    }\n    Map<String, String> rptMap = new HashMap<String,String>();\n    if(distanceUnits!=null)\n      rptMap.put(\"distanceUnits\", distanceUnits);\n    if(geo!=null)\n      rptMap.put(\"geo\", geo);\n    if(format!=null) {\n      rptMap.put(\"format\", format);\n    }\n    fieldType.init(oldSchema, rptMap);\n    fieldType.setTypeName(\"location_rpt\");\n    SchemaField newField = new SchemaField(\"geo\", fieldType, SchemaField.STORED | SchemaField.INDEXED, null);\n    IndexSchema newSchema = oldSchema.addField(newField);\n\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(delQ(\"*:*\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b8557552f7ab8e381c4d1a941a269e14f11e779d","date":1506320429,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String,String,FieldType).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String,String,FieldType).mjava","sourceNew":"  private void setupRPTField(String distanceUnits, String geo, String format, FieldType fieldType) throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); // Delete managed-schema so it won't block parsing a new schema\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-one-field-no-dynamic-field.xml\", tmpSolrHome.getPath());\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n    \n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n\n    if (fieldType == null) {\n      fieldType = new SpatialRecursivePrefixTreeFieldType();\n    }\n    Map<String, String> rptMap = new HashMap<String,String>();\n    if(distanceUnits!=null)\n      rptMap.put(\"distanceUnits\", distanceUnits);\n    if(geo!=null)\n      rptMap.put(\"geo\", geo);\n    if(format!=null) {\n      rptMap.put(\"format\", format);\n    }\n    if (random().nextBoolean()) {\n      // use Geo3D sometimes\n      rptMap.put(\"spatialContextFactory\", \"Geo3D\");\n    }\n    fieldType.init(oldSchema, rptMap);\n    fieldType.setTypeName(\"location_rpt\");\n    SchemaField newField = new SchemaField(\"geo\", fieldType, SchemaField.STORED | SchemaField.INDEXED, null);\n    IndexSchema newSchema = oldSchema.addField(newField);\n\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(delQ(\"*:*\"));\n  }\n\n","sourceOld":"  private void setupRPTField(String distanceUnits, String geo, String format, FieldType fieldType) throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); // Delete managed-schema so it won't block parsing a new schema\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-one-field-no-dynamic-field.xml\", tmpSolrHome.getPath());\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n    \n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n\n    if (fieldType == null) {\n      fieldType = new SpatialRecursivePrefixTreeFieldType();\n    }\n    Map<String, String> rptMap = new HashMap<String,String>();\n    if(distanceUnits!=null)\n      rptMap.put(\"distanceUnits\", distanceUnits);\n    if(geo!=null)\n      rptMap.put(\"geo\", geo);\n    if(format!=null) {\n      rptMap.put(\"format\", format);\n    }\n    fieldType.init(oldSchema, rptMap);\n    fieldType.setTypeName(\"location_rpt\");\n    SchemaField newField = new SchemaField(\"geo\", fieldType, SchemaField.STORED | SchemaField.INDEXED, null);\n    IndexSchema newSchema = oldSchema.addField(newField);\n\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(delQ(\"*:*\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6240b74b884c5587f2a4062dd27d6c32bf228889","date":1507037235,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String,String,FieldType).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String,String,FieldType).mjava","sourceNew":"  private void setupRPTField(String distanceUnits, String geo, String format, FieldType fieldType) throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); // Delete managed-schema so it won't block parsing a new schema\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-one-field-no-dynamic-field.xml\", tmpSolrHome.getPath());\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n    \n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n\n    if (fieldType == null) {\n      fieldType = new SpatialRecursivePrefixTreeFieldType();\n    }\n    Map<String, String> rptMap = new HashMap<String,String>();\n    if(distanceUnits!=null)\n      rptMap.put(\"distanceUnits\", distanceUnits);\n    if(geo!=null)\n      rptMap.put(\"geo\", geo);\n    if(format!=null) {\n      rptMap.put(\"format\", format);\n    }\n    if (random().nextBoolean()) {\n      // use Geo3D sometimes\n      rptMap.put(\"spatialContextFactory\", \"Geo3D\");\n    }\n    fieldType.init(oldSchema, rptMap);\n    fieldType.setTypeName(\"location_rpt\");\n    SchemaField newField = new SchemaField(\"geo\", fieldType, SchemaField.STORED | SchemaField.INDEXED, null);\n    IndexSchema newSchema = oldSchema.addField(newField);\n\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(delQ(\"*:*\"));\n  }\n\n","sourceOld":"  private void setupRPTField(String distanceUnits, String geo, String format, FieldType fieldType) throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); // Delete managed-schema so it won't block parsing a new schema\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-one-field-no-dynamic-field.xml\", tmpSolrHome.getPath());\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n    \n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n\n    if (fieldType == null) {\n      fieldType = new SpatialRecursivePrefixTreeFieldType();\n    }\n    Map<String, String> rptMap = new HashMap<String,String>();\n    if(distanceUnits!=null)\n      rptMap.put(\"distanceUnits\", distanceUnits);\n    if(geo!=null)\n      rptMap.put(\"geo\", geo);\n    if(format!=null) {\n      rptMap.put(\"format\", format);\n    }\n    fieldType.init(oldSchema, rptMap);\n    fieldType.setTypeName(\"location_rpt\");\n    SchemaField newField = new SchemaField(\"geo\", fieldType, SchemaField.STORED | SchemaField.INDEXED, null);\n    IndexSchema newSchema = oldSchema.addField(newField);\n\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(delQ(\"*:*\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6023012e4b24619ad41b644a479b6ad4ad2a90c8","date":1600707428,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String,String,FieldType).mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#setupRPTField(String,String,String,FieldType).mjava","sourceNew":"  private void setupRPTField(String distanceUnits, String geo, String format, FieldType fieldType) throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); // Delete managed-schema so it won't block parsing a new schema\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-one-field-no-dynamic-field.xml\", tmpSolrHome.getPath());\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n    \n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n\n    if (fieldType == null) {\n      fieldType = new SpatialRecursivePrefixTreeFieldType();\n    }\n    Map<String, String> rptMap = new HashMap<String,String>();\n    if(distanceUnits!=null)\n      rptMap.put(\"distanceUnits\", distanceUnits);\n    if(geo!=null)\n      rptMap.put(\"geo\", geo);\n    if(format!=null) {\n      rptMap.put(\"format\", format);\n    }\n    if (random().nextBoolean()) {\n      // use Geo3D sometimes\n      rptMap.put(\"spatialContextFactory\", \"Geo3D\");\n    }\n    fieldType.init(oldSchema, rptMap);\n    fieldType.setTypeName(\"location_rpt\");\n    SchemaField newField = new SchemaField(\"geo\", fieldType, SchemaField.STORED | SchemaField.INDEXED | SchemaField.OMIT_NORMS | SchemaField.OMIT_TF_POSITIONS,\n            null);\n    IndexSchema newSchema = oldSchema.addField(newField);\n\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(delQ(\"*:*\"));\n  }\n\n","sourceOld":"  private void setupRPTField(String distanceUnits, String geo, String format, FieldType fieldType) throws Exception {\n    deleteCore();\n    File managedSchemaFile = new File(tmpConfDir, \"managed-schema\");\n    Files.delete(managedSchemaFile.toPath()); // Delete managed-schema so it won't block parsing a new schema\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-one-field-no-dynamic-field.xml\", tmpSolrHome.getPath());\n\n    String fieldName = \"new_text_field\";\n    assertNull(\"Field '\" + fieldName + \"' is present in the schema\",\n        h.getCore().getLatestSchema().getFieldOrNull(fieldName));\n    \n    IndexSchema oldSchema = h.getCore().getLatestSchema();\n\n    if (fieldType == null) {\n      fieldType = new SpatialRecursivePrefixTreeFieldType();\n    }\n    Map<String, String> rptMap = new HashMap<String,String>();\n    if(distanceUnits!=null)\n      rptMap.put(\"distanceUnits\", distanceUnits);\n    if(geo!=null)\n      rptMap.put(\"geo\", geo);\n    if(format!=null) {\n      rptMap.put(\"format\", format);\n    }\n    if (random().nextBoolean()) {\n      // use Geo3D sometimes\n      rptMap.put(\"spatialContextFactory\", \"Geo3D\");\n    }\n    fieldType.init(oldSchema, rptMap);\n    fieldType.setTypeName(\"location_rpt\");\n    SchemaField newField = new SchemaField(\"geo\", fieldType, SchemaField.STORED | SchemaField.INDEXED, null);\n    IndexSchema newSchema = oldSchema.addField(newField);\n\n    h.getCore().setLatestSchema(newSchema);\n\n    assertU(delQ(\"*:*\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6023012e4b24619ad41b644a479b6ad4ad2a90c8":["b8557552f7ab8e381c4d1a941a269e14f11e779d"],"255b1d03d3daae9aaaade60819388695622237d8":["23aec8f6a0b5a11d050d784a13871261bef7c925"],"b8557552f7ab8e381c4d1a941a269e14f11e779d":["23aec8f6a0b5a11d050d784a13871261bef7c925","255b1d03d3daae9aaaade60819388695622237d8"],"6240b74b884c5587f2a4062dd27d6c32bf228889":["23aec8f6a0b5a11d050d784a13871261bef7c925","b8557552f7ab8e381c4d1a941a269e14f11e779d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"23aec8f6a0b5a11d050d784a13871261bef7c925":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","23aec8f6a0b5a11d050d784a13871261bef7c925"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6023012e4b24619ad41b644a479b6ad4ad2a90c8"]},"commit2Childs":{"6023012e4b24619ad41b644a479b6ad4ad2a90c8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"255b1d03d3daae9aaaade60819388695622237d8":["b8557552f7ab8e381c4d1a941a269e14f11e779d"],"b8557552f7ab8e381c4d1a941a269e14f11e779d":["6023012e4b24619ad41b644a479b6ad4ad2a90c8","6240b74b884c5587f2a4062dd27d6c32bf228889"],"6240b74b884c5587f2a4062dd27d6c32bf228889":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["23aec8f6a0b5a11d050d784a13871261bef7c925","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"23aec8f6a0b5a11d050d784a13871261bef7c925":["255b1d03d3daae9aaaade60819388695622237d8","b8557552f7ab8e381c4d1a941a269e14f11e779d","6240b74b884c5587f2a4062dd27d6c32bf228889","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6240b74b884c5587f2a4062dd27d6c32bf228889","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}