{"path":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldReader.SegmentTermsEnum#seek(BytesRef,TermState).mjava","commits":[{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldReader.SegmentTermsEnum#seek(BytesRef,TermState).mjava","pathOld":"/dev/null","sourceNew":"      @Override\n      public void seek(BytesRef target, TermState otherState) throws IOException {\n        //System.out.println(\"BTR.seek termState target=\" + target.utf8ToString() + \" \" + target + \" this=\" + this);\n        assert otherState != null && otherState instanceof BlockTermState;\n        assert !doOrd || ((BlockTermState) otherState).ord < numTerms;\n        state.copyFrom(otherState);\n        seekPending = true;\n        indexIsCurrent = false;\n        term.copy(target);\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd1bfe3cedf815c14939d170d53031c88eb5c444","date":1295896578,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldReader.SegmentTermsEnum#seek(BytesRef,TermState).mjava","pathOld":"/dev/null","sourceNew":"      @Override\n      public void seek(BytesRef target, TermState otherState) throws IOException {\n        //System.out.println(\"BTR.seek termState target=\" + target.utf8ToString() + \" \" + target + \" this=\" + this);\n        assert otherState != null && otherState instanceof BlockTermState;\n        assert !doOrd || ((BlockTermState) otherState).ord < numTerms;\n        state.copyFrom(otherState);\n        seekPending = true;\n        indexIsCurrent = false;\n        term.copy(target);\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldReader.SegmentTermsEnum#seek(BytesRef,TermState).mjava","pathOld":"/dev/null","sourceNew":"      @Override\n      public void seek(BytesRef target, TermState otherState) throws IOException {\n        //System.out.println(\"BTR.seek termState target=\" + target.utf8ToString() + \" \" + target + \" this=\" + this);\n        assert otherState != null && otherState instanceof BlockTermState;\n        assert !doOrd || ((BlockTermState) otherState).ord < numTerms;\n        state.copyFrom(otherState);\n        seekPending = true;\n        indexIsCurrent = false;\n        term.copy(target);\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd9cc9d77712aba3662f24632df7539ab75e3667","date":1309095238,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldReader.SegmentTermsEnum#seekExact(BytesRef,TermState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldReader.SegmentTermsEnum#seek(BytesRef,TermState).mjava","sourceNew":"      @Override\n      public void seekExact(BytesRef target, TermState otherState) throws IOException {\n        //System.out.println(\"BTR.seek termState target=\" + target.utf8ToString() + \" \" + target + \" this=\" + this);\n        assert otherState != null && otherState instanceof BlockTermState;\n        assert !doOrd || ((BlockTermState) otherState).ord < numTerms;\n        state.copyFrom(otherState);\n        seekPending = true;\n        indexIsCurrent = false;\n        term.copy(target);\n      }\n\n","sourceOld":"      @Override\n      public void seek(BytesRef target, TermState otherState) throws IOException {\n        //System.out.println(\"BTR.seek termState target=\" + target.utf8ToString() + \" \" + target + \" this=\" + this);\n        assert otherState != null && otherState instanceof BlockTermState;\n        assert !doOrd || ((BlockTermState) otherState).ord < numTerms;\n        state.copyFrom(otherState);\n        seekPending = true;\n        indexIsCurrent = false;\n        term.copy(target);\n      }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldReader.SegmentTermsEnum#seekExact(BytesRef,TermState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldReader.SegmentTermsEnum#seek(BytesRef,TermState).mjava","sourceNew":"      @Override\n      public void seekExact(BytesRef target, TermState otherState) throws IOException {\n        //System.out.println(\"BTR.seek termState target=\" + target.utf8ToString() + \" \" + target + \" this=\" + this);\n        assert otherState != null && otherState instanceof BlockTermState;\n        assert !doOrd || ((BlockTermState) otherState).ord < numTerms;\n        state.copyFrom(otherState);\n        seekPending = true;\n        indexIsCurrent = false;\n        term.copy(target);\n      }\n\n","sourceOld":"      @Override\n      public void seek(BytesRef target, TermState otherState) throws IOException {\n        //System.out.println(\"BTR.seek termState target=\" + target.utf8ToString() + \" \" + target + \" this=\" + this);\n        assert otherState != null && otherState instanceof BlockTermState;\n        assert !doOrd || ((BlockTermState) otherState).ord < numTerms;\n        state.copyFrom(otherState);\n        seekPending = true;\n        indexIsCurrent = false;\n        term.copy(target);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldReader.SegmentTermsEnum#seek(BytesRef,TermState).mjava","sourceNew":null,"sourceOld":"      @Override\n      public void seek(BytesRef target, TermState otherState) throws IOException {\n        //System.out.println(\"BTR.seek termState target=\" + target.utf8ToString() + \" \" + target + \" this=\" + this);\n        assert otherState != null && otherState instanceof BlockTermState;\n        assert !doOrd || ((BlockTermState) otherState).ord < numTerms;\n        state.copyFrom(otherState);\n        seekPending = true;\n        indexIsCurrent = false;\n        term.copy(target);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fd1bfe3cedf815c14939d170d53031c88eb5c444":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b1add9ddc0005b07550d4350720aac22dc9886b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b1add9ddc0005b07550d4350720aac22dc9886b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2553b00f699380c64959ccb27991289aae87be2e":["b1add9ddc0005b07550d4350720aac22dc9886b3","fd9cc9d77712aba3662f24632df7539ab75e3667"],"fd9cc9d77712aba3662f24632df7539ab75e3667":["b1add9ddc0005b07550d4350720aac22dc9886b3"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["b1add9ddc0005b07550d4350720aac22dc9886b3","fd9cc9d77712aba3662f24632df7539ab75e3667"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fd9cc9d77712aba3662f24632df7539ab75e3667"]},"commit2Childs":{"fd1bfe3cedf815c14939d170d53031c88eb5c444":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fd1bfe3cedf815c14939d170d53031c88eb5c444","29ef99d61cda9641b6250bf9567329a6e65f901d","b1add9ddc0005b07550d4350720aac22dc9886b3"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["29ef99d61cda9641b6250bf9567329a6e65f901d","2553b00f699380c64959ccb27991289aae87be2e","fd9cc9d77712aba3662f24632df7539ab75e3667","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"2553b00f699380c64959ccb27991289aae87be2e":[],"fd9cc9d77712aba3662f24632df7539ab75e3667":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fd1bfe3cedf815c14939d170d53031c88eb5c444","29ef99d61cda9641b6250bf9567329a6e65f901d","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}