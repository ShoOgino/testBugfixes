{"path":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","commits":[{"id":"e475642767c688ede5728d7918326f70b4e0bf3a","date":1366072489,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n    File alt = new File(TEMP_DIR, \"alternateCoreDir\");\n    if (alt.exists()) FileUtils.deleteDirectory(alt);\n    alt.mkdirs();\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + ConfigSolr.CORE_PROP_FILE));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + ConfigSolr.CORE_PROP_FILE));\n    CoreContainer cc = init();\n    try {\n      SolrCore core1 = cc.getCore(\"core1\");\n      SolrCore core2 = cc.getCore(\"core2\");\n      assertNotNull(core1);\n      assertNotNull(core2);\n      core1.close();\n      core2.close();\n    } finally {\n      cc.shutdown();\n      if (alt.exists()) FileUtils.deleteDirectory(alt);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b29abed5661c7911e4b45d5a3d79a186268e28c4","date":1366675770,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","sourceNew":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n    File alt = new File(TEMP_DIR, \"alternateCoreDir\");\n    if (alt.exists()) FileUtils.deleteDirectory(alt);\n    alt.mkdirs();\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + SolrCoreDiscoverer.CORE_PROP_FILE));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + SolrCoreDiscoverer.CORE_PROP_FILE));\n    CoreContainer cc = init();\n    try {\n      SolrCore core1 = cc.getCore(\"core1\");\n      SolrCore core2 = cc.getCore(\"core2\");\n      assertNotNull(core1);\n      assertNotNull(core2);\n      core1.close();\n      core2.close();\n    } finally {\n      cc.shutdown();\n      if (alt.exists()) FileUtils.deleteDirectory(alt);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n    File alt = new File(TEMP_DIR, \"alternateCoreDir\");\n    if (alt.exists()) FileUtils.deleteDirectory(alt);\n    alt.mkdirs();\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + ConfigSolr.CORE_PROP_FILE));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + ConfigSolr.CORE_PROP_FILE));\n    CoreContainer cc = init();\n    try {\n      SolrCore core1 = cc.getCore(\"core1\");\n      SolrCore core2 = cc.getCore(\"core2\");\n      assertNotNull(core1);\n      assertNotNull(core2);\n      core1.close();\n      core2.close();\n    } finally {\n      cc.shutdown();\n      if (alt.exists()) FileUtils.deleteDirectory(alt);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","sourceNew":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n    File alt = new File(TEMP_DIR, \"alternateCoreDir\");\n    if (alt.exists()) FileUtils.deleteDirectory(alt);\n    alt.mkdirs();\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    CoreContainer cc = init();\n    try {\n      SolrCore core1 = cc.getCore(\"core1\");\n      SolrCore core2 = cc.getCore(\"core2\");\n      assertNotNull(core1);\n      assertNotNull(core2);\n      core1.close();\n      core2.close();\n    } finally {\n      cc.shutdown();\n      if (alt.exists()) FileUtils.deleteDirectory(alt);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n    File alt = new File(TEMP_DIR, \"alternateCoreDir\");\n    if (alt.exists()) FileUtils.deleteDirectory(alt);\n    alt.mkdirs();\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + SolrCoreDiscoverer.CORE_PROP_FILE));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + SolrCoreDiscoverer.CORE_PROP_FILE));\n    CoreContainer cc = init();\n    try {\n      SolrCore core1 = cc.getCore(\"core1\");\n      SolrCore core2 = cc.getCore(\"core2\");\n      assertNotNull(core1);\n      assertNotNull(core2);\n      core1.close();\n      core2.close();\n    } finally {\n      cc.shutdown();\n      if (alt.exists()) FileUtils.deleteDirectory(alt);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","sourceNew":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n    File alt = new File(TEMP_DIR, \"alternateCoreDir\");\n    if (alt.exists()) FileUtils.deleteDirectory(alt);\n    alt.mkdirs();\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    CoreContainer cc = init();\n    try {\n      SolrCore core1 = cc.getCore(\"core1\");\n      SolrCore core2 = cc.getCore(\"core2\");\n      assertNotNull(core1);\n      assertNotNull(core2);\n      core1.close();\n      core2.close();\n    } finally {\n      cc.shutdown();\n      if (alt.exists()) FileUtils.deleteDirectory(alt);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n    File alt = new File(TEMP_DIR, \"alternateCoreDir\");\n    if (alt.exists()) FileUtils.deleteDirectory(alt);\n    alt.mkdirs();\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + SolrCoreDiscoverer.CORE_PROP_FILE));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + SolrCoreDiscoverer.CORE_PROP_FILE));\n    CoreContainer cc = init();\n    try {\n      SolrCore core1 = cc.getCore(\"core1\");\n      SolrCore core2 = cc.getCore(\"core2\");\n      assertNotNull(core1);\n      assertNotNull(core2);\n      core1.close();\n      core2.close();\n    } finally {\n      cc.shutdown();\n      if (alt.exists()) FileUtils.deleteDirectory(alt);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e332392bbbdd01cb69ad6a89051f483cda38e15e","date":1395758779,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","sourceNew":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n    File alt = new File(TEMP_DIR, \"alternateCoreDir\");\n    if (alt.exists()) FileUtils.deleteDirectory(alt);\n    alt.mkdirs();\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n      if (alt.exists()) FileUtils.deleteDirectory(alt);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n    File alt = new File(TEMP_DIR, \"alternateCoreDir\");\n    if (alt.exists()) FileUtils.deleteDirectory(alt);\n    alt.mkdirs();\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    CoreContainer cc = init();\n    try {\n      SolrCore core1 = cc.getCore(\"core1\");\n      SolrCore core2 = cc.getCore(\"core2\");\n      assertNotNull(core1);\n      assertNotNull(core2);\n      core1.close();\n      core2.close();\n    } finally {\n      cc.shutdown();\n      if (alt.exists()) FileUtils.deleteDirectory(alt);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","sourceNew":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n    File alt = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n      if (alt.exists()) FileUtils.deleteDirectory(alt);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n    File alt = new File(TEMP_DIR, \"alternateCoreDir\");\n    if (alt.exists()) FileUtils.deleteDirectory(alt);\n    alt.mkdirs();\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n      if (alt.exists()) FileUtils.deleteDirectory(alt);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1416f9d09d016a6894cd17e1caac137dad2bba59","date":1395941020,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","sourceNew":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n    File alt = new File(dataDir, \"alternateCoreDir\");\n    if (alt.exists()) FileUtils.deleteDirectory(alt);\n    alt.mkdirs();\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n      if (alt.exists()) FileUtils.deleteDirectory(alt);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n    File alt = new File(TEMP_DIR, \"alternateCoreDir\");\n    if (alt.exists()) FileUtils.deleteDirectory(alt);\n    alt.mkdirs();\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n      if (alt.exists()) FileUtils.deleteDirectory(alt);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","sourceNew":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n\n    File alt = createTempDir();\n\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n      if (alt.exists()) FileUtils.deleteDirectory(alt);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n    File alt = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n      if (alt.exists()) FileUtils.deleteDirectory(alt);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e9ce820cd3ed9efb959c181daaafd22f0c70143","date":1396201051,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","sourceNew":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n\n    File alt = createTempDir();\n\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n\n    File alt = createTempDir();\n\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n      if (alt.exists()) FileUtils.deleteDirectory(alt);\n    }\n  }\n\n","bugFix":["e475642767c688ede5728d7918326f70b4e0bf3a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","sourceNew":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n\n    File alt = createTempDir();\n\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n    File alt = new File(dataDir, \"alternateCoreDir\");\n    if (alt.exists()) FileUtils.deleteDirectory(alt);\n    alt.mkdirs();\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n      if (alt.exists()) FileUtils.deleteDirectory(alt);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","sourceNew":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n\n    File alt = createTempDir().toFile();\n\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n\n    File alt = createTempDir();\n\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd7a2b4785d366164d3cd69f9948de6ff34d23a1","date":1500527874,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","sourceNew":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n\n    File alt = createTempDir().toFile();\n\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCoreProperties(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    addCoreWithProps(makeCoreProperties(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n\n    File alt = createTempDir().toFile();\n\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d301cb76d81de80d07b44735622a04d49ed938eb","date":1500536382,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","sourceNew":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n\n    File alt = createTempDir().toFile();\n\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCoreProperties(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    addCoreWithProps(makeCoreProperties(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n\n    File alt = createTempDir().toFile();\n\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testAlternateCoreDir().mjava","sourceNew":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n\n    File alt = createTempDir().toFile();\n\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCoreProperties(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    addCoreWithProps(makeCoreProperties(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testAlternateCoreDir() throws Exception {\n\n    File alt = createTempDir().toFile();\n\n    setMeUp(alt.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true, \"dataDir=core1\"),\n        new File(alt, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(alt, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNotNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["d0d579490a72f2e6297eaa648940611234c57cf1"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["1416f9d09d016a6894cd17e1caac137dad2bba59","1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["b29abed5661c7911e4b45d5a3d79a186268e28c4","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"e475642767c688ede5728d7918326f70b4e0bf3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"936cdd5882761db3b844afd6f84ab81cbb011a75":["f4abec28b874149a7223e32cc7a01704c27790de","d301cb76d81de80d07b44735622a04d49ed938eb"],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"d0d579490a72f2e6297eaa648940611234c57cf1":["e332392bbbdd01cb69ad6a89051f483cda38e15e"],"d301cb76d81de80d07b44735622a04d49ed938eb":["f4abec28b874149a7223e32cc7a01704c27790de","bd7a2b4785d366164d3cd69f9948de6ff34d23a1"],"b29abed5661c7911e4b45d5a3d79a186268e28c4":["e475642767c688ede5728d7918326f70b4e0bf3a"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["e332392bbbdd01cb69ad6a89051f483cda38e15e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e332392bbbdd01cb69ad6a89051f483cda38e15e":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["b29abed5661c7911e4b45d5a3d79a186268e28c4"],"bd7a2b4785d366164d3cd69f9948de6ff34d23a1":["f4abec28b874149a7223e32cc7a01704c27790de"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d301cb76d81de80d07b44735622a04d49ed938eb"]},"commit2Childs":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"e475642767c688ede5728d7918326f70b4e0bf3a":["b29abed5661c7911e4b45d5a3d79a186268e28c4"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"d0d579490a72f2e6297eaa648940611234c57cf1":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"f4abec28b874149a7223e32cc7a01704c27790de":["936cdd5882761db3b844afd6f84ab81cbb011a75","d301cb76d81de80d07b44735622a04d49ed938eb","bd7a2b4785d366164d3cd69f9948de6ff34d23a1"],"d301cb76d81de80d07b44735622a04d49ed938eb":["936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b29abed5661c7911e4b45d5a3d79a186268e28c4":["37a0f60745e53927c4c876cfe5b5a58170f0646c","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e475642767c688ede5728d7918326f70b4e0bf3a"],"e332392bbbdd01cb69ad6a89051f483cda38e15e":["d0d579490a72f2e6297eaa648940611234c57cf1","1416f9d09d016a6894cd17e1caac137dad2bba59"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","e332392bbbdd01cb69ad6a89051f483cda38e15e"],"bd7a2b4785d366164d3cd69f9948de6ff34d23a1":["d301cb76d81de80d07b44735622a04d49ed938eb"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}