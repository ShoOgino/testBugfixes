{"path":"src/test/org/apache/solr/update/DirectUpdateHandlerOptimizeTest#assertNumSegments(String,int).mjava","commits":[{"id":"61af939f4c10286fd8beaa0124064437b7ac44c5","date":1214514846,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/test/org/apache/solr/update/DirectUpdateHandlerOptimizeTest#assertNumSegments(String,int).mjava","pathOld":"/dev/null","sourceNew":"  private void assertNumSegments(String indexDir, int numSegs) {\n    File file = new File(indexDir);\n    File[] segs = file.listFiles(new FileFilter() {\n      public boolean accept(File file) {\n        return file.getName().endsWith(\"tii\");\n      }\n    });\n    assertTrue(\"Wrong number of segments: \" + segs.length + \" does not equal: \" + numSegs, segs.length == numSegs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a8d95bab1c392c8727cca27ed8799faa8c960b6e","date":1217362317,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/update/DirectUpdateHandlerOptimizeTest#assertNumSegments(String,int).mjava","pathOld":"src/test/org/apache/solr/update/DirectUpdateHandlerOptimizeTest#assertNumSegments(String,int).mjava","sourceNew":"  private void assertNumSegments(String indexDir, int numSegs) {\n    File file = new File(indexDir);\n    File[] segs = file.listFiles(new FileFilter() {\n      public boolean accept(File file) {\n        return file.getName().endsWith(\"cfs\");\n      }\n    });\n    assertTrue(\"Wrong number of segments: \" + segs.length + \" does not equal: \" + numSegs, segs.length == numSegs);\n  }\n\n","sourceOld":"  private void assertNumSegments(String indexDir, int numSegs) {\n    File file = new File(indexDir);\n    File[] segs = file.listFiles(new FileFilter() {\n      public boolean accept(File file) {\n        return file.getName().endsWith(\"tii\");\n      }\n    });\n    assertTrue(\"Wrong number of segments: \" + segs.length + \" does not equal: \" + numSegs, segs.length == numSegs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"72ec6c7587d2da4bfac762c58d0d6b8552d2102d","date":1221688171,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/update/DirectUpdateHandlerOptimizeTest#assertNumSegments(String,int).mjava","pathOld":"src/test/org/apache/solr/update/DirectUpdateHandlerOptimizeTest#assertNumSegments(String,int).mjava","sourceNew":"  private void assertNumSegments(String indexDir, int numSegs) {\n    File file = new File(indexDir);\n    File[] segs = file.listFiles(new FileFilter() {\n      public boolean accept(File file) {\n        return file.getName().endsWith(\"cfs\");\n      }\n    });\n\n    //\n    // TODO: we need a method that does not rely on physical inspection of the directory.\n    //\n    // assertTrue(\"Wrong number of segments: \" + segs.length + \" does not equal: \" + numSegs, segs.length == numSegs);\n  }\n\n","sourceOld":"  private void assertNumSegments(String indexDir, int numSegs) {\n    File file = new File(indexDir);\n    File[] segs = file.listFiles(new FileFilter() {\n      public boolean accept(File file) {\n        return file.getName().endsWith(\"cfs\");\n      }\n    });\n    assertTrue(\"Wrong number of segments: \" + segs.length + \" does not equal: \" + numSegs, segs.length == numSegs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/update/DirectUpdateHandlerOptimizeTest#assertNumSegments(String,int).mjava","pathOld":"src/test/org/apache/solr/update/DirectUpdateHandlerOptimizeTest#assertNumSegments(String,int).mjava","sourceNew":"  private void assertNumSegments(String indexDir, int numSegs) {\n    File file = new File(indexDir);\n    File[] segs = file.listFiles(new FileFilter() {\n      public boolean accept(File file) {\n        return file.getName().endsWith(\"cfs\");\n      }\n    });\n\n    //\n    // TODO: we need a method that does not rely on physical inspection of the directory.\n    //\n    // assertTrue(\"Wrong number of segments: \" + segs.length + \" does not equal: \" + numSegs, segs.length == numSegs);\n  }\n\n","sourceOld":"  private void assertNumSegments(String indexDir, int numSegs) {\n    File file = new File(indexDir);\n    File[] segs = file.listFiles(new FileFilter() {\n      public boolean accept(File file) {\n        return file.getName().endsWith(\"cfs\");\n      }\n    });\n\n    //\n    // TODO: we need a method that does not rely on physical inspection of the directory.\n    //\n    // assertTrue(\"Wrong number of segments: \" + segs.length + \" does not equal: \" + numSegs, segs.length == numSegs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["72ec6c7587d2da4bfac762c58d0d6b8552d2102d"],"72ec6c7587d2da4bfac762c58d0d6b8552d2102d":["a8d95bab1c392c8727cca27ed8799faa8c960b6e"],"a8d95bab1c392c8727cca27ed8799faa8c960b6e":["61af939f4c10286fd8beaa0124064437b7ac44c5"],"61af939f4c10286fd8beaa0124064437b7ac44c5":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["61af939f4c10286fd8beaa0124064437b7ac44c5"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"72ec6c7587d2da4bfac762c58d0d6b8552d2102d":["ad94625fb8d088209f46650c8097196fec67f00c"],"a8d95bab1c392c8727cca27ed8799faa8c960b6e":["72ec6c7587d2da4bfac762c58d0d6b8552d2102d"],"61af939f4c10286fd8beaa0124064437b7ac44c5":["a8d95bab1c392c8727cca27ed8799faa8c960b6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}