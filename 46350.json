{"path":"solr/core/src/java/org/apache/solr/metrics/SolrMetricManager#overridableRegistryName(String).mjava","commits":[{"id":"0265144286422ad99682a00904cc2536b79c8535","date":1482222684,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricManager#overridableRegistryName(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Allows named registries to be renamed using System properties.\n   * This would be mostly be useful if you want to combine the metrics from a few registries for a single\n   * reporter.\n   * <p>For example, in order to collect metrics from related cores in a single registry you could specify\n   * the following system properties:</p>\n   * <pre>\n   *   ... -Dsolr.core.collection1=solr.core.allCollections -Dsolr.core.collection2=solr.core.allCollections\n   * </pre>\n   * <b>NOTE:</b> Once a registry is renamed in a way that its metrics are combined with another repository\n   * it is no longer possible to retrieve the original metrics until this renaming is removed and the Solr\n   * {@link org.apache.solr.core.SolrInfoMBean.Group} of components that reported to that name is restarted.\n   * @param registry The name of the registry\n   * @return A potentially overridden (via System properties) registry name\n   */\n  public static String overridableRegistryName(String registry) {\n    String fqRegistry = enforcePrefix(registry);\n    return enforcePrefix(System.getProperty(fqRegistry,fqRegistry));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricManager#overridableRegistryName(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Allows named registries to be renamed using System properties.\n   * This would be mostly be useful if you want to combine the metrics from a few registries for a single\n   * reporter.\n   * <p>For example, in order to collect metrics from related cores in a single registry you could specify\n   * the following system properties:</p>\n   * <pre>\n   *   ... -Dsolr.core.collection1=solr.core.allCollections -Dsolr.core.collection2=solr.core.allCollections\n   * </pre>\n   * <b>NOTE:</b> Once a registry is renamed in a way that its metrics are combined with another repository\n   * it is no longer possible to retrieve the original metrics until this renaming is removed and the Solr\n   * {@link org.apache.solr.core.SolrInfoMBean.Group} of components that reported to that name is restarted.\n   * @param registry The name of the registry\n   * @return A potentially overridden (via System properties) registry name\n   */\n  public static String overridableRegistryName(String registry) {\n    String fqRegistry = enforcePrefix(registry);\n    return enforcePrefix(System.getProperty(fqRegistry,fqRegistry));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricManager#overridableRegistryName(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricManager#overridableRegistryName(String).mjava","sourceNew":"  /**\n   * Allows named registries to be renamed using System properties.\n   * This would be mostly be useful if you want to combine the metrics from a few registries for a single\n   * reporter.\n   * <p>For example, in order to collect metrics from related cores in a single registry you could specify\n   * the following system properties:</p>\n   * <pre>\n   *   ... -Dsolr.core.collection1=solr.core.allCollections -Dsolr.core.collection2=solr.core.allCollections\n   * </pre>\n   * <b>NOTE:</b> Once a registry is renamed in a way that its metrics are combined with another repository\n   * it is no longer possible to retrieve the original metrics until this renaming is removed and the Solr\n   * {@link org.apache.solr.core.SolrInfoBean.Group} of components that reported to that name is restarted.\n   * @param registry The name of the registry\n   * @return A potentially overridden (via System properties) registry name\n   */\n  public static String overridableRegistryName(String registry) {\n    String fqRegistry = enforcePrefix(registry);\n    return enforcePrefix(System.getProperty(fqRegistry,fqRegistry));\n  }\n\n","sourceOld":"  /**\n   * Allows named registries to be renamed using System properties.\n   * This would be mostly be useful if you want to combine the metrics from a few registries for a single\n   * reporter.\n   * <p>For example, in order to collect metrics from related cores in a single registry you could specify\n   * the following system properties:</p>\n   * <pre>\n   *   ... -Dsolr.core.collection1=solr.core.allCollections -Dsolr.core.collection2=solr.core.allCollections\n   * </pre>\n   * <b>NOTE:</b> Once a registry is renamed in a way that its metrics are combined with another repository\n   * it is no longer possible to retrieve the original metrics until this renaming is removed and the Solr\n   * {@link org.apache.solr.core.SolrInfoMBean.Group} of components that reported to that name is restarted.\n   * @param registry The name of the registry\n   * @return A potentially overridden (via System properties) registry name\n   */\n  public static String overridableRegistryName(String registry) {\n    String fqRegistry = enforcePrefix(registry);\n    return enforcePrefix(System.getProperty(fqRegistry,fqRegistry));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricManager#overridableRegistryName(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricManager#overridableRegistryName(String).mjava","sourceNew":"  /**\n   * Allows named registries to be renamed using System properties.\n   * This would be mostly be useful if you want to combine the metrics from a few registries for a single\n   * reporter.\n   * <p>For example, in order to collect metrics from related cores in a single registry you could specify\n   * the following system properties:</p>\n   * <pre>\n   *   ... -Dsolr.core.collection1=solr.core.allCollections -Dsolr.core.collection2=solr.core.allCollections\n   * </pre>\n   * <b>NOTE:</b> Once a registry is renamed in a way that its metrics are combined with another repository\n   * it is no longer possible to retrieve the original metrics until this renaming is removed and the Solr\n   * {@link org.apache.solr.core.SolrInfoBean.Group} of components that reported to that name is restarted.\n   * @param registry The name of the registry\n   * @return A potentially overridden (via System properties) registry name\n   */\n  public static String overridableRegistryName(String registry) {\n    String fqRegistry = enforcePrefix(registry);\n    return enforcePrefix(System.getProperty(fqRegistry,fqRegistry));\n  }\n\n","sourceOld":"  /**\n   * Allows named registries to be renamed using System properties.\n   * This would be mostly be useful if you want to combine the metrics from a few registries for a single\n   * reporter.\n   * <p>For example, in order to collect metrics from related cores in a single registry you could specify\n   * the following system properties:</p>\n   * <pre>\n   *   ... -Dsolr.core.collection1=solr.core.allCollections -Dsolr.core.collection2=solr.core.allCollections\n   * </pre>\n   * <b>NOTE:</b> Once a registry is renamed in a way that its metrics are combined with another repository\n   * it is no longer possible to retrieve the original metrics until this renaming is removed and the Solr\n   * {@link org.apache.solr.core.SolrInfoMBean.Group} of components that reported to that name is restarted.\n   * @param registry The name of the registry\n   * @return A potentially overridden (via System properties) registry name\n   */\n  public static String overridableRegistryName(String registry) {\n    String fqRegistry = enforcePrefix(registry);\n    return enforcePrefix(System.getProperty(fqRegistry,fqRegistry));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"427b4ac9dcf2bb77dc0b79aba1ff396a4236f65c","date":1538077195,"type":4,"author":"Peter Somogyi","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricManager#overridableRegistryName(String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Allows named registries to be renamed using System properties.\n   * This would be mostly be useful if you want to combine the metrics from a few registries for a single\n   * reporter.\n   * <p>For example, in order to collect metrics from related cores in a single registry you could specify\n   * the following system properties:</p>\n   * <pre>\n   *   ... -Dsolr.core.collection1=solr.core.allCollections -Dsolr.core.collection2=solr.core.allCollections\n   * </pre>\n   * <b>NOTE:</b> Once a registry is renamed in a way that its metrics are combined with another repository\n   * it is no longer possible to retrieve the original metrics until this renaming is removed and the Solr\n   * {@link org.apache.solr.core.SolrInfoBean.Group} of components that reported to that name is restarted.\n   * @param registry The name of the registry\n   * @return A potentially overridden (via System properties) registry name\n   */\n  public static String overridableRegistryName(String registry) {\n    String fqRegistry = enforcePrefix(registry);\n    return enforcePrefix(System.getProperty(fqRegistry,fqRegistry));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["0265144286422ad99682a00904cc2536b79c8535"],"0265144286422ad99682a00904cc2536b79c8535":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0265144286422ad99682a00904cc2536b79c8535"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"427b4ac9dcf2bb77dc0b79aba1ff396a4236f65c":["816521ebaad5add9cb96bb88c577394e2938c40b"],"816521ebaad5add9cb96bb88c577394e2938c40b":["0265144286422ad99682a00904cc2536b79c8535"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["427b4ac9dcf2bb77dc0b79aba1ff396a4236f65c"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"0265144286422ad99682a00904cc2536b79c8535":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","816521ebaad5add9cb96bb88c577394e2938c40b"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0265144286422ad99682a00904cc2536b79c8535","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"427b4ac9dcf2bb77dc0b79aba1ff396a4236f65c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"816521ebaad5add9cb96bb88c577394e2938c40b":["427b4ac9dcf2bb77dc0b79aba1ff396a4236f65c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}