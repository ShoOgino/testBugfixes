{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSource#setUp().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSource#setUp().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestJdbcDataSource#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    System.setProperty(\"java.naming.factory.initial\",\n            MockInitialContextFactory.class.getName());\n    \n    mockControl = EasyMock.createStrictControl();\n    driver = mockControl.createMock(Driver.class);\n    dataSource = mockControl.createMock(DataSource.class);\n    connection = mockControl.createMock(Connection.class);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    System.setProperty(\"java.naming.factory.initial\",\n            MockInitialContextFactory.class.getName());\n    \n    mockControl = EasyMock.createStrictControl();\n    driver = mockControl.createMock(Driver.class);\n    dataSource = mockControl.createMock(DataSource.class);\n    connection = mockControl.createMock(Connection.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSource#setUp().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestJdbcDataSource#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    System.setProperty(\"java.naming.factory.initial\",\n            MockInitialContextFactory.class.getName());\n    \n    mockControl = EasyMock.createStrictControl();\n    driver = mockControl.createMock(Driver.class);\n    dataSource = mockControl.createMock(DataSource.class);\n    connection = mockControl.createMock(Connection.class);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    System.setProperty(\"java.naming.factory.initial\",\n            MockInitialContextFactory.class.getName());\n    \n    mockControl = EasyMock.createStrictControl();\n    driver = mockControl.createMock(Driver.class);\n    dataSource = mockControl.createMock(DataSource.class);\n    connection = mockControl.createMock(Connection.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0957b9b8725b7ad93845495d2512df18cd240731","date":1482658887,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSource#setUp().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSource#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    System.setProperty(\"java.naming.factory.initial\",\n            MockInitialContextFactory.class.getName());\n    \n    mockControl = EasyMock.createStrictControl();\n    driver = mockControl.createMock(Driver.class);\n    dataSource = mockControl.createMock(DataSource.class);\n    connection = mockControl.createMock(Connection.class);\n    props.clear();\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    System.setProperty(\"java.naming.factory.initial\",\n            MockInitialContextFactory.class.getName());\n    \n    mockControl = EasyMock.createStrictControl();\n    driver = mockControl.createMock(Driver.class);\n    dataSource = mockControl.createMock(DataSource.class);\n    connection = mockControl.createMock(Connection.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSource#setUp().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSource#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    System.setProperty(\"java.naming.factory.initial\",\n            MockInitialContextFactory.class.getName());\n    \n    mockControl = EasyMock.createStrictControl();\n    driver = mockControl.createMock(Driver.class);\n    dataSource = mockControl.createMock(DataSource.class);\n    connection = mockControl.createMock(Connection.class);\n    props.clear();\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    System.setProperty(\"java.naming.factory.initial\",\n            MockInitialContextFactory.class.getName());\n    \n    mockControl = EasyMock.createStrictControl();\n    driver = mockControl.createMock(Driver.class);\n    dataSource = mockControl.createMock(DataSource.class);\n    connection = mockControl.createMock(Connection.class);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7a0f6f6b8a4cc8b82386e74e45ab3c097f2453e","date":1487462440,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSource#setUp().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSource#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    System.setProperty(\"java.naming.factory.initial\",\n            MockInitialContextFactory.class.getName());\n    \n    driver = mock(Driver.class);\n    dataSource = mock(DataSource.class);\n    connection = mock(Connection.class);\n    props.clear();\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    System.setProperty(\"java.naming.factory.initial\",\n            MockInitialContextFactory.class.getName());\n    \n    mockControl = EasyMock.createStrictControl();\n    driver = mockControl.createMock(Driver.class);\n    dataSource = mockControl.createMock(DataSource.class);\n    connection = mockControl.createMock(Connection.class);\n    props.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSource#setUp().mjava","sourceNew":null,"sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    System.setProperty(\"java.naming.factory.initial\",\n            MockInitialContextFactory.class.getName());\n    \n    driver = mock(Driver.class);\n    dataSource = mock(DataSource.class);\n    connection = mock(Connection.class);\n    props.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["f7a0f6f6b8a4cc8b82386e74e45ab3c097f2453e"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7a0f6f6b8a4cc8b82386e74e45ab3c097f2453e":["0957b9b8725b7ad93845495d2512df18cd240731"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"0957b9b8725b7ad93845495d2512df18cd240731":["c26f00b574427b55127e869b935845554afde1fa"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["c26f00b574427b55127e869b935845554afde1fa","0957b9b8725b7ad93845495d2512df18cd240731"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["0957b9b8725b7ad93845495d2512df18cd240731","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"f7a0f6f6b8a4cc8b82386e74e45ab3c097f2453e":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"0957b9b8725b7ad93845495d2512df18cd240731":["f7a0f6f6b8a4cc8b82386e74e45ab3c097f2453e","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}