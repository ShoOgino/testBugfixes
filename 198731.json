{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/HttpTriggerListener#init(ClusterDataProvider,AutoScalingConfig.TriggerListenerConfig).mjava","commits":[{"id":"c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac","date":1503580177,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/HttpTriggerListener#init(ClusterDataProvider,AutoScalingConfig.TriggerListenerConfig).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/HttpTriggerListener#init(CoreContainer,AutoScalingConfig.TriggerListenerConfig).mjava","sourceNew":"  @Override\n  public void init(ClusterDataProvider clusterDataProvider, AutoScalingConfig.TriggerListenerConfig config) {\n    super.init(clusterDataProvider, config);\n    httpClient = clusterDataProvider.getHttpClient();\n    urlTemplate = (String)config.properties.get(\"url\");\n    payloadTemplate = (String)config.properties.get(\"payload\");\n    contentType = (String)config.properties.get(\"contentType\");\n    config.properties.forEach((k, v) -> {\n      if (k.startsWith(\"header.\")) {\n        headerTemplates.put(k.substring(7), String.valueOf(v));\n      }\n    });\n    timeout = PropertiesUtil.toInteger(String.valueOf(config.properties.get(\"timeout\")), HttpClientUtil.DEFAULT_CONNECT_TIMEOUT);\n    followRedirects = PropertiesUtil.toBoolean(String.valueOf(config.properties.get(\"followRedirects\")));\n  }\n\n","sourceOld":"  @Override\n  public void init(CoreContainer coreContainer, AutoScalingConfig.TriggerListenerConfig config) {\n    super.init(coreContainer, config);\n    httpClient = coreContainer.getUpdateShardHandler().getHttpClient();\n    urlTemplate = (String)config.properties.get(\"url\");\n    payloadTemplate = (String)config.properties.get(\"payload\");\n    contentType = (String)config.properties.get(\"contentType\");\n    config.properties.forEach((k, v) -> {\n      if (k.startsWith(\"header.\")) {\n        headerTemplates.put(k.substring(7), String.valueOf(v));\n      }\n    });\n    timeout = PropertiesUtil.toInteger(String.valueOf(config.properties.get(\"timeout\")), HttpClientUtil.DEFAULT_CONNECT_TIMEOUT);\n    followRedirects = PropertiesUtil.toBoolean(String.valueOf(config.properties.get(\"followRedirects\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b869898f50ca80263bac2e3ae0949f7700e5c977","date":1503580229,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/HttpTriggerListener#init(CoreContainer,AutoScalingConfig.TriggerListenerConfig).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/HttpTriggerListener#init(ClusterDataProvider,AutoScalingConfig.TriggerListenerConfig).mjava","sourceNew":"  @Override\n  public void init(CoreContainer coreContainer, AutoScalingConfig.TriggerListenerConfig config) {\n    super.init(coreContainer, config);\n    httpClient = coreContainer.getUpdateShardHandler().getHttpClient();\n    urlTemplate = (String)config.properties.get(\"url\");\n    payloadTemplate = (String)config.properties.get(\"payload\");\n    contentType = (String)config.properties.get(\"contentType\");\n    config.properties.forEach((k, v) -> {\n      if (k.startsWith(\"header.\")) {\n        headerTemplates.put(k.substring(7), String.valueOf(v));\n      }\n    });\n    timeout = PropertiesUtil.toInteger(String.valueOf(config.properties.get(\"timeout\")), HttpClientUtil.DEFAULT_CONNECT_TIMEOUT);\n    followRedirects = PropertiesUtil.toBoolean(String.valueOf(config.properties.get(\"followRedirects\")));\n  }\n\n","sourceOld":"  @Override\n  public void init(ClusterDataProvider clusterDataProvider, AutoScalingConfig.TriggerListenerConfig config) {\n    super.init(clusterDataProvider, config);\n    httpClient = clusterDataProvider.getHttpClient();\n    urlTemplate = (String)config.properties.get(\"url\");\n    payloadTemplate = (String)config.properties.get(\"payload\");\n    contentType = (String)config.properties.get(\"contentType\");\n    config.properties.forEach((k, v) -> {\n      if (k.startsWith(\"header.\")) {\n        headerTemplates.put(k.substring(7), String.valueOf(v));\n      }\n    });\n    timeout = PropertiesUtil.toInteger(String.valueOf(config.properties.get(\"timeout\")), HttpClientUtil.DEFAULT_CONNECT_TIMEOUT);\n    followRedirects = PropertiesUtil.toBoolean(String.valueOf(config.properties.get(\"followRedirects\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b869898f50ca80263bac2e3ae0949f7700e5c977":["c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac":["b869898f50ca80263bac2e3ae0949f7700e5c977"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b869898f50ca80263bac2e3ae0949f7700e5c977":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b869898f50ca80263bac2e3ae0949f7700e5c977","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}