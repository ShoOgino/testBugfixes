{"path":"solr/core/src/java/org/apache/solr/handler/SnapShooter#SnapShooter(SolrCore,String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#SnapShooter(SolrCore,String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/SnapShooter#SnapShooter(SolrCore,String).mjava","sourceNew":"  public SnapShooter(SolrCore core, String location) throws IOException {\n    solrCore = core;\n    if (location == null) snapDir = core.getDataDir();\n    else  {\n      File base = new File(core.getCoreDescriptor().getInstanceDir());\n      snapDir = org.apache.solr.common.util.FileUtils.resolvePath(base, location).getAbsolutePath();\n      File dir = new File(snapDir);\n      if (!dir.exists())  dir.mkdirs();\n    }\n    lockFactory = new SimpleFSLockFactory(snapDir);\n  }\n\n","sourceOld":"  public SnapShooter(SolrCore core, String location) throws IOException {\n    solrCore = core;\n    if (location == null) snapDir = core.getDataDir();\n    else  {\n      File base = new File(core.getCoreDescriptor().getInstanceDir());\n      snapDir = org.apache.solr.common.util.FileUtils.resolvePath(base, location).getAbsolutePath();\n      File dir = new File(snapDir);\n      if (!dir.exists())  dir.mkdirs();\n    }\n    lockFactory = new SimpleFSLockFactory(snapDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#SnapShooter(SolrCore,String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/SnapShooter#SnapShooter(SolrCore,String).mjava","sourceNew":"  public SnapShooter(SolrCore core, String location) throws IOException {\n    solrCore = core;\n    if (location == null) snapDir = core.getDataDir();\n    else  {\n      File base = new File(core.getCoreDescriptor().getInstanceDir());\n      snapDir = org.apache.solr.common.util.FileUtils.resolvePath(base, location).getAbsolutePath();\n      File dir = new File(snapDir);\n      if (!dir.exists())  dir.mkdirs();\n    }\n    lockFactory = new SimpleFSLockFactory(snapDir);\n  }\n\n","sourceOld":"  public SnapShooter(SolrCore core, String location) throws IOException {\n    solrCore = core;\n    if (location == null) snapDir = core.getDataDir();\n    else  {\n      File base = new File(core.getCoreDescriptor().getInstanceDir());\n      snapDir = org.apache.solr.common.util.FileUtils.resolvePath(base, location).getAbsolutePath();\n      File dir = new File(snapDir);\n      if (!dir.exists())  dir.mkdirs();\n    }\n    lockFactory = new SimpleFSLockFactory(snapDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#SnapShooter(SolrCore,String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/SnapShooter#SnapShooter(SolrCore,String).mjava","sourceNew":"  public SnapShooter(SolrCore core, String location) throws IOException {\n    solrCore = core;\n    if (location == null) snapDir = core.getDataDir();\n    else  {\n      File base = new File(core.getCoreDescriptor().getInstanceDir());\n      snapDir = org.apache.solr.common.util.FileUtils.resolvePath(base, location).getAbsolutePath();\n      File dir = new File(snapDir);\n      if (!dir.exists())  dir.mkdirs();\n    }\n    lockFactory = new SimpleFSLockFactory(snapDir);\n  }\n\n","sourceOld":"  public SnapShooter(SolrCore core, String location) throws IOException {\n    solrCore = core;\n    if (location == null) snapDir = core.getDataDir();\n    else  {\n      File base = new File(core.getCoreDescriptor().getInstanceDir());\n      snapDir = org.apache.solr.common.util.FileUtils.resolvePath(base, location).getAbsolutePath();\n      File dir = new File(snapDir);\n      if (!dir.exists())  dir.mkdirs();\n    }\n    lockFactory = new SimpleFSLockFactory(snapDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6a2315ba749856e5787b2ad962fa124bc3ed121","date":1334194349,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#SnapShooter(SolrCore,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#SnapShooter(SolrCore,String).mjava","sourceNew":"  public SnapShooter(SolrCore core, String location) throws IOException {\n    solrCore = core;\n    if (location == null) snapDir = core.getDataDir();\n    else  {\n      File base = new File(core.getCoreDescriptor().getInstanceDir());\n      snapDir = org.apache.solr.util.FileUtils.resolvePath(base, location).getAbsolutePath();\n      File dir = new File(snapDir);\n      if (!dir.exists())  dir.mkdirs();\n    }\n    lockFactory = new SimpleFSLockFactory(snapDir);\n  }\n\n","sourceOld":"  public SnapShooter(SolrCore core, String location) throws IOException {\n    solrCore = core;\n    if (location == null) snapDir = core.getDataDir();\n    else  {\n      File base = new File(core.getCoreDescriptor().getInstanceDir());\n      snapDir = org.apache.solr.common.util.FileUtils.resolvePath(base, location).getAbsolutePath();\n      File dir = new File(snapDir);\n      if (!dir.exists())  dir.mkdirs();\n    }\n    lockFactory = new SimpleFSLockFactory(snapDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#SnapShooter(SolrCore,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#SnapShooter(SolrCore,String).mjava","sourceNew":"  public SnapShooter(SolrCore core, String location) {\n    solrCore = core;\n    if (location == null) snapDir = core.getDataDir();\n    else  {\n      File base = new File(core.getCoreDescriptor().getInstanceDir());\n      snapDir = org.apache.solr.util.FileUtils.resolvePath(base, location).getAbsolutePath();\n      File dir = new File(snapDir);\n      if (!dir.exists())  dir.mkdirs();\n    }\n    lockFactory = new SimpleFSLockFactory(snapDir);\n  }\n\n","sourceOld":"  public SnapShooter(SolrCore core, String location) throws IOException {\n    solrCore = core;\n    if (location == null) snapDir = core.getDataDir();\n    else  {\n      File base = new File(core.getCoreDescriptor().getInstanceDir());\n      snapDir = org.apache.solr.util.FileUtils.resolvePath(base, location).getAbsolutePath();\n      File dir = new File(snapDir);\n      if (!dir.exists())  dir.mkdirs();\n    }\n    lockFactory = new SimpleFSLockFactory(snapDir);\n  }\n\n","bugFix":["4623d61231036b71956ea057612b3d78d440508a"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#SnapShooter(SolrCore,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#SnapShooter(SolrCore,String).mjava","sourceNew":"  public SnapShooter(SolrCore core, String location) {\n    solrCore = core;\n    if (location == null) snapDir = core.getDataDir();\n    else  {\n      File base = new File(core.getCoreDescriptor().getInstanceDir());\n      snapDir = org.apache.solr.util.FileUtils.resolvePath(base, location).getAbsolutePath();\n      File dir = new File(snapDir);\n      if (!dir.exists())  dir.mkdirs();\n    }\n    lockFactory = new SimpleFSLockFactory(snapDir);\n  }\n\n","sourceOld":"  public SnapShooter(SolrCore core, String location) throws IOException {\n    solrCore = core;\n    if (location == null) snapDir = core.getDataDir();\n    else  {\n      File base = new File(core.getCoreDescriptor().getInstanceDir());\n      snapDir = org.apache.solr.util.FileUtils.resolvePath(base, location).getAbsolutePath();\n      File dir = new File(snapDir);\n      if (!dir.exists())  dir.mkdirs();\n    }\n    lockFactory = new SimpleFSLockFactory(snapDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46083459332303d872db23d62e641cc6165fe93c","date":1351189543,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#SnapShooter(SolrCore,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#SnapShooter(SolrCore,String).mjava","sourceNew":"  public SnapShooter(SolrCore core, String location) {\n    solrCore = core;\n    if (location == null) snapDir = core.getDataDir();\n    else  {\n      File base = new File(core.getCoreDescriptor().getRawInstanceDir());\n      snapDir = org.apache.solr.util.FileUtils.resolvePath(base, location).getAbsolutePath();\n      File dir = new File(snapDir);\n      if (!dir.exists())  dir.mkdirs();\n    }\n    lockFactory = new SimpleFSLockFactory(snapDir);\n  }\n\n","sourceOld":"  public SnapShooter(SolrCore core, String location) {\n    solrCore = core;\n    if (location == null) snapDir = core.getDataDir();\n    else  {\n      File base = new File(core.getCoreDescriptor().getInstanceDir());\n      snapDir = org.apache.solr.util.FileUtils.resolvePath(base, location).getAbsolutePath();\n      File dir = new File(snapDir);\n      if (!dir.exists())  dir.mkdirs();\n    }\n    lockFactory = new SimpleFSLockFactory(snapDir);\n  }\n\n","bugFix":["4623d61231036b71956ea057612b3d78d440508a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#SnapShooter(SolrCore,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#SnapShooter(SolrCore,String).mjava","sourceNew":"  public SnapShooter(SolrCore core, String location) {\n    solrCore = core;\n    if (location == null) snapDir = core.getDataDir();\n    else  {\n      File base = new File(core.getCoreDescriptor().getRawInstanceDir());\n      snapDir = org.apache.solr.util.FileUtils.resolvePath(base, location).getAbsolutePath();\n      File dir = new File(snapDir);\n      if (!dir.exists())  dir.mkdirs();\n    }\n    lockFactory = new SimpleFSLockFactory(snapDir);\n  }\n\n","sourceOld":"  public SnapShooter(SolrCore core, String location) {\n    solrCore = core;\n    if (location == null) snapDir = core.getDataDir();\n    else  {\n      File base = new File(core.getCoreDescriptor().getInstanceDir());\n      snapDir = org.apache.solr.util.FileUtils.resolvePath(base, location).getAbsolutePath();\n      File dir = new File(snapDir);\n      if (!dir.exists())  dir.mkdirs();\n    }\n    lockFactory = new SimpleFSLockFactory(snapDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5bb2e653b3f6992c26fe4cc0f3fbdce37b21c3c","date":1399457549,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#SnapShooter(SolrCore,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#SnapShooter(SolrCore,String).mjava","sourceNew":"  public SnapShooter(SolrCore core, String location, String snapshotName) {\n    solrCore = core;\n    if (location == null) snapDir = core.getDataDir();\n    else  {\n      File base = new File(core.getCoreDescriptor().getRawInstanceDir());\n      snapDir = org.apache.solr.util.FileUtils.resolvePath(base, location).getAbsolutePath();\n      File dir = new File(snapDir);\n      if (!dir.exists())  dir.mkdirs();\n    }\n    lockFactory = new SimpleFSLockFactory(snapDir);\n    this.snapshotName = snapshotName;\n\n    if(snapshotName != null) {\n      directoryName = \"snapshot.\" + snapshotName;\n    } else {\n      SimpleDateFormat fmt = new SimpleDateFormat(DATE_FMT, Locale.ROOT);\n      directoryName = \"snapshot.\" + fmt.format(new Date());\n    }\n  }\n\n","sourceOld":"  public SnapShooter(SolrCore core, String location) {\n    solrCore = core;\n    if (location == null) snapDir = core.getDataDir();\n    else  {\n      File base = new File(core.getCoreDescriptor().getRawInstanceDir());\n      snapDir = org.apache.solr.util.FileUtils.resolvePath(base, location).getAbsolutePath();\n      File dir = new File(snapDir);\n      if (!dir.exists())  dir.mkdirs();\n    }\n    lockFactory = new SimpleFSLockFactory(snapDir);\n  }\n\n","bugFix":null,"bugIntro":["63029ffae00834539bab8996772b0c75f0810d9b"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e6a2315ba749856e5787b2ad962fa124bc3ed121":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["e6a2315ba749856e5787b2ad962fa124bc3ed121","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a5bb2e653b3f6992c26fe4cc0f3fbdce37b21c3c":["46083459332303d872db23d62e641cc6165fe93c"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"46083459332303d872db23d62e641cc6165fe93c":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["e6a2315ba749856e5787b2ad962fa124bc3ed121"],"f2126b84bd093fa3d921582a109a0ee578c28126":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","46083459332303d872db23d62e641cc6165fe93c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a5bb2e653b3f6992c26fe4cc0f3fbdce37b21c3c"]},"commit2Childs":{"e6a2315ba749856e5787b2ad962fa124bc3ed121":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["e6a2315ba749856e5787b2ad962fa124bc3ed121"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a5bb2e653b3f6992c26fe4cc0f3fbdce37b21c3c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","46083459332303d872db23d62e641cc6165fe93c","f2126b84bd093fa3d921582a109a0ee578c28126"],"46083459332303d872db23d62e641cc6165fe93c":["a5bb2e653b3f6992c26fe4cc0f3fbdce37b21c3c","f2126b84bd093fa3d921582a109a0ee578c28126"],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","a258fbb26824fd104ed795e5d9033d2d040049ee","f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}