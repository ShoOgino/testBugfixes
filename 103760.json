{"path":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#extractTerms(Set[Term]).mjava","commits":[{"id":"05c52ac194342b760b830342ee8423fcf00e54d0","date":1429197275,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#extractTerms(Set[Term]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void extractTerms(Set<Term> terms) {\n    int i = 0;\n    for (BooleanClause clause : query.clauses()) {\n      if (clause.isScoring() || (needsScores == false && clause.isProhibited() == false)) {\n        weights.get(i).extractTerms(terms);\n      }\n      i++;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#extractTerms(Set[Term]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#extractTerms(Set[Term]).mjava","sourceNew":"  @Override\n  public void extractTerms(Set<Term> terms) {\n    int i = 0;\n    for (BooleanClause clause : query) {\n      if (clause.isScoring() || (needsScores == false && clause.isProhibited() == false)) {\n        weights.get(i).extractTerms(terms);\n      }\n      i++;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void extractTerms(Set<Term> terms) {\n    int i = 0;\n    for (BooleanClause clause : query.clauses()) {\n      if (clause.isScoring() || (needsScores == false && clause.isProhibited() == false)) {\n        weights.get(i).extractTerms(terms);\n      }\n      i++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#extractTerms(Set[Term]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#extractTerms(Set[Term]).mjava","sourceNew":"  @Override\n  public void extractTerms(Set<Term> terms) {\n    int i = 0;\n    for (BooleanClause clause : query) {\n      if (clause.isScoring() || (scoreMode.needsScores() == false && clause.isProhibited() == false)) {\n        weights.get(i).extractTerms(terms);\n      }\n      i++;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void extractTerms(Set<Term> terms) {\n    int i = 0;\n    for (BooleanClause clause : query) {\n      if (clause.isScoring() || (needsScores == false && clause.isProhibited() == false)) {\n        weights.get(i).extractTerms(terms);\n      }\n      i++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#extractTerms(Set[Term]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#extractTerms(Set[Term]).mjava","sourceNew":"  @Override\n  public void extractTerms(Set<Term> terms) {\n    int i = 0;\n    for (BooleanClause clause : query) {\n      if (clause.isScoring() || (scoreMode.needsScores() == false && clause.isProhibited() == false)) {\n        weights.get(i).extractTerms(terms);\n      }\n      i++;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void extractTerms(Set<Term> terms) {\n    int i = 0;\n    for (BooleanClause clause : query) {\n      if (clause.isScoring() || (needsScores == false && clause.isProhibited() == false)) {\n        weights.get(i).extractTerms(terms);\n      }\n      i++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7","date":1552575873,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanWeight#extractTerms(Set[Term]).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void extractTerms(Set<Term> terms) {\n    int i = 0;\n    for (BooleanClause clause : query) {\n      if (clause.isScoring() || (scoreMode.needsScores() == false && clause.isProhibited() == false)) {\n        weights.get(i).extractTerms(terms);\n      }\n      i++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["05c52ac194342b760b830342ee8423fcf00e54d0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9fc47cb7b4346802411bb432f501ed0673d7119e":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"05c52ac194342b760b830342ee8423fcf00e54d0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7"],"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7":["417142ff08fda9cf0b72d5133e63097a166c6458"],"417142ff08fda9cf0b72d5133e63097a166c6458":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747","9fc47cb7b4346802411bb432f501ed0673d7119e"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["9fc47cb7b4346802411bb432f501ed0673d7119e","417142ff08fda9cf0b72d5133e63097a166c6458"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05c52ac194342b760b830342ee8423fcf00e54d0"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"05c52ac194342b760b830342ee8423fcf00e54d0":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"417142ff08fda9cf0b72d5133e63097a166c6458":["5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}