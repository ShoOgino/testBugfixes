{"path":"solr/core/src/java/org/apache/solr/pkg/PackageAPI#readPkgsFromZk(byte[],Stat).mjava","commits":[{"id":"954ae83b7dfacaa33d48ea056448ae11f7745a93","date":1571867711,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/pkg/PackageAPI#readPkgsFromZk(byte[],Stat).mjava","pathOld":"/dev/null","sourceNew":"  private Packages readPkgsFromZk(byte[] data, Stat stat) throws KeeperException, InterruptedException {\n\n    if (data == null || stat == null) {\n      stat = new Stat();\n      data = coreContainer.getZkController().getZkClient()\n          .getData(ZkStateReader.CLUSTER_PROPS, null, stat, true);\n\n    }\n    Packages packages = null;\n    if (data == null || data.length == 0) {\n      packages = new Packages();\n    } else {\n      try {\n        packages = mapper.readValue(data, Packages.class);\n        packages.znodeVersion = stat.getVersion();\n      } catch (IOException e) {\n        //invalid data in packages\n        //TODO handle properly;\n        return new Packages();\n      }\n    }\n    return packages;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a6448412ce640b28861f4c00f899484a9adac1","date":1573627357,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/pkg/PackageAPI#readPkgsFromZk(byte[],Stat).mjava","pathOld":"solr/core/src/java/org/apache/solr/pkg/PackageAPI#readPkgsFromZk(byte[],Stat).mjava","sourceNew":"  private Packages readPkgsFromZk(byte[] data, Stat stat) throws KeeperException, InterruptedException {\n\n    if (data == null || stat == null) {\n      stat = new Stat();\n      data = coreContainer.getZkController().getZkClient()\n          .getData(SOLR_PKGS_PATH, null, stat, true);\n\n    }\n    Packages packages = null;\n    if (data == null || data.length == 0) {\n      packages = new Packages();\n    } else {\n      try {\n        packages = mapper.readValue(data, Packages.class);\n        packages.znodeVersion = stat.getVersion();\n      } catch (IOException e) {\n        //invalid data in packages\n        //TODO handle properly;\n        return new Packages();\n      }\n    }\n    return packages;\n  }\n\n","sourceOld":"  private Packages readPkgsFromZk(byte[] data, Stat stat) throws KeeperException, InterruptedException {\n\n    if (data == null || stat == null) {\n      stat = new Stat();\n      data = coreContainer.getZkController().getZkClient()\n          .getData(ZkStateReader.CLUSTER_PROPS, null, stat, true);\n\n    }\n    Packages packages = null;\n    if (data == null || data.length == 0) {\n      packages = new Packages();\n    } else {\n      try {\n        packages = mapper.readValue(data, Packages.class);\n        packages.znodeVersion = stat.getVersion();\n      } catch (IOException e) {\n        //invalid data in packages\n        //TODO handle properly;\n        return new Packages();\n      }\n    }\n    return packages;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"954ae83b7dfacaa33d48ea056448ae11f7745a93":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d1a6448412ce640b28861f4c00f899484a9adac1":["954ae83b7dfacaa33d48ea056448ae11f7745a93"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1a6448412ce640b28861f4c00f899484a9adac1"]},"commit2Childs":{"954ae83b7dfacaa33d48ea056448ae11f7745a93":["d1a6448412ce640b28861f4c00f899484a9adac1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["954ae83b7dfacaa33d48ea056448ae11f7745a93"],"d1a6448412ce640b28861f4c00f899484a9adac1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}