{"path":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader#parseArrayFieldValue(int,JSONParser,MethodFrameWrapper).mjava","commits":[{"id":"caf7f9acfdff984e59be68054cc1e0048b8ee030","date":1407766058,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader#parseArrayFieldValue(int,JSONParser,MethodFrameWrapper).mjava","pathOld":"/dev/null","sourceNew":"  public static List<Object> parseArrayFieldValue(int ev, JSONParser parser, MethodFrameWrapper runnable) throws IOException {\n    assert ev == ARRAY_START;\n\n    ArrayList lst = new ArrayList(2);\n    for (; ; ) {\n      ev = parser.nextEvent();\n      if (ev == ARRAY_END) {\n        if(lst.isEmpty()) return null;\n        return lst;\n      }\n      Object val = parseSingleFieldValue(ev, parser, runnable);\n      if(val != null) lst.add(val);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2330174b38007b9942205a2679db9ddffe35af89","date":1423653924,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader#parseArrayFieldValue(int,JSONParser,MethodFrameWrapper).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader#parseArrayFieldValue(int,JSONParser,MethodFrameWrapper).mjava","sourceNew":"  public static List<Object> parseArrayFieldValue(int ev, JSONParser parser, MethodFrameWrapper runnable) throws IOException {\n    assert ev == ARRAY_START;\n\n    ArrayList lst = new ArrayList(2);\n    for (; ; ) {\n      ev = parser.nextEvent();\n      if (ev == ARRAY_END) {\n        if (lst.isEmpty()) return null;\n        return lst;\n      }\n      Object val = parseSingleFieldValue(ev, parser, runnable);\n      if (val != null) lst.add(val);\n    }\n  }\n\n","sourceOld":"  public static List<Object> parseArrayFieldValue(int ev, JSONParser parser, MethodFrameWrapper runnable) throws IOException {\n    assert ev == ARRAY_START;\n\n    ArrayList lst = new ArrayList(2);\n    for (; ; ) {\n      ev = parser.nextEvent();\n      if (ev == ARRAY_END) {\n        if(lst.isEmpty()) return null;\n        return lst;\n      }\n      Object val = parseSingleFieldValue(ev, parser, runnable);\n      if(val != null) lst.add(val);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7dfea4f7c80813344b0152e37fc18b31369e8ff","date":1592136683,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader#parseArrayFieldValue(int,JSONParser,MethodFrameWrapper).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader#parseArrayFieldValue(int,JSONParser,MethodFrameWrapper).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  public static List<Object> parseArrayFieldValue(int ev, JSONParser parser, MethodFrameWrapper runnable) throws IOException {\n    assert ev == ARRAY_START;\n\n    @SuppressWarnings({\"rawtypes\"})\n    ArrayList lst = new ArrayList(2);\n    for (; ; ) {\n      ev = parser.nextEvent();\n      if (ev == ARRAY_END) {\n        if (lst.isEmpty()) return null;\n        return lst;\n      }\n      Object val = parseSingleFieldValue(ev, parser, runnable);\n      if (val != null) lst.add(val);\n    }\n  }\n\n","sourceOld":"  public static List<Object> parseArrayFieldValue(int ev, JSONParser parser, MethodFrameWrapper runnable) throws IOException {\n    assert ev == ARRAY_START;\n\n    ArrayList lst = new ArrayList(2);\n    for (; ; ) {\n      ev = parser.nextEvent();\n      if (ev == ARRAY_END) {\n        if (lst.isEmpty()) return null;\n        return lst;\n      }\n      Object val = parseSingleFieldValue(ev, parser, runnable);\n      if (val != null) lst.add(val);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2330174b38007b9942205a2679db9ddffe35af89":["caf7f9acfdff984e59be68054cc1e0048b8ee030"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["2330174b38007b9942205a2679db9ddffe35af89"],"caf7f9acfdff984e59be68054cc1e0048b8ee030":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a7dfea4f7c80813344b0152e37fc18b31369e8ff"]},"commit2Childs":{"2330174b38007b9942205a2679db9ddffe35af89":["a7dfea4f7c80813344b0152e37fc18b31369e8ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["caf7f9acfdff984e59be68054cc1e0048b8ee030"],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"caf7f9acfdff984e59be68054cc1e0048b8ee030":["2330174b38007b9942205a2679db9ddffe35af89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}