{"path":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParserTokenManager#jjMoveNfa_2(int,int).mjava","commits":[{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParserTokenManager#jjMoveNfa_2(int,int).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParserTokenManager#jjMoveNfa_2(int,int).mjava","sourceNew":"private int jjMoveNfa_2(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 5;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0xfffffffeffffffffL & l) != 0L)\n                  {\n                     if (kind > 27)\n                        kind = 27;\n                     jjCheckNAdd(4);\n                  }\n                  if ((0x100002600L & l) != 0L)\n                  {\n                     if (kind > 6)\n                        kind = 6;\n                  }\n                  else if (curChar == 34)\n                     jjCheckNAdd(2);\n                  break;\n               case 1:\n                  if (curChar == 34)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0xfffffffbffffffffL & l) != 0L)\n                     jjCheckNAddTwoStates(2, 3);\n                  break;\n               case 3:\n                  if (curChar == 34 && kind > 26)\n                     kind = 26;\n                  break;\n               case 4:\n                  if ((0xfffffffeffffffffL & l) == 0L)\n                     break;\n                  if (kind > 27)\n                     kind = 27;\n                  jjCheckNAdd(4);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n               case 4:\n                  if ((0xffffffffdfffffffL & l) == 0L)\n                     break;\n                  if (kind > 27)\n                     kind = 27;\n                  jjCheckNAdd(4);\n                  break;\n               case 2:\n                  jjAddStates(17, 18);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n               case 4:\n                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))\n                     break;\n                  if (kind > 27)\n                     kind = 27;\n                  jjCheckNAdd(4);\n                  break;\n               case 2:\n                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                     jjAddStates(17, 18);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","sourceOld":"private int jjMoveNfa_2(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 5;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0xfffffffeffffffffL & l) != 0L)\n                  {\n                     if (kind > 27)\n                        kind = 27;\n                     jjCheckNAdd(4);\n                  }\n                  if ((0x100002600L & l) != 0L)\n                  {\n                     if (kind > 6)\n                        kind = 6;\n                  }\n                  else if (curChar == 34)\n                     jjCheckNAdd(2);\n                  break;\n               case 1:\n                  if (curChar == 34)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0xfffffffbffffffffL & l) != 0L)\n                     jjCheckNAddTwoStates(2, 3);\n                  break;\n               case 3:\n                  if (curChar == 34 && kind > 26)\n                     kind = 26;\n                  break;\n               case 4:\n                  if ((0xfffffffeffffffffL & l) == 0L)\n                     break;\n                  if (kind > 27)\n                     kind = 27;\n                  jjCheckNAdd(4);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n               case 4:\n                  if ((0xffffffffdfffffffL & l) == 0L)\n                     break;\n                  if (kind > 27)\n                     kind = 27;\n                  jjCheckNAdd(4);\n                  break;\n               case 2:\n                  jjAddStates(17, 18);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n               case 4:\n                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))\n                     break;\n                  if (kind > 27)\n                     kind = 27;\n                  jjCheckNAdd(4);\n                  break;\n               case 2:\n                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                     jjAddStates(17, 18);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d94d6afa51157e490fc169e192a154ffc4cdad0b","date":1283184289,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParserTokenManager#jjMoveNfa_2(int,int).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParserTokenManager#jjMoveNfa_2(int,int).mjava","sourceNew":"private int jjMoveNfa_2(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 5;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0xfffffffeffffffffL & l) != 0L)\n                  {\n                     if (kind > 28)\n                        kind = 28;\n                     jjCheckNAdd(4);\n                  }\n                  if ((0x100002600L & l) != 0L)\n                  {\n                     if (kind > 6)\n                        kind = 6;\n                  }\n                  else if (curChar == 34)\n                     jjCheckNAdd(2);\n                  break;\n               case 1:\n                  if (curChar == 34)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0xfffffffbffffffffL & l) != 0L)\n                     jjCheckNAddTwoStates(2, 3);\n                  break;\n               case 3:\n                  if (curChar == 34 && kind > 27)\n                     kind = 27;\n                  break;\n               case 4:\n                  if ((0xfffffffeffffffffL & l) == 0L)\n                     break;\n                  if (kind > 28)\n                     kind = 28;\n                  jjCheckNAdd(4);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n               case 4:\n                  if ((0xffffffffdfffffffL & l) == 0L)\n                     break;\n                  if (kind > 28)\n                     kind = 28;\n                  jjCheckNAdd(4);\n                  break;\n               case 2:\n                  jjAddStates(20, 21);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n               case 4:\n                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))\n                     break;\n                  if (kind > 28)\n                     kind = 28;\n                  jjCheckNAdd(4);\n                  break;\n               case 2:\n                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                     jjAddStates(20, 21);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","sourceOld":"private int jjMoveNfa_2(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 5;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0xfffffffeffffffffL & l) != 0L)\n                  {\n                     if (kind > 27)\n                        kind = 27;\n                     jjCheckNAdd(4);\n                  }\n                  if ((0x100002600L & l) != 0L)\n                  {\n                     if (kind > 6)\n                        kind = 6;\n                  }\n                  else if (curChar == 34)\n                     jjCheckNAdd(2);\n                  break;\n               case 1:\n                  if (curChar == 34)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0xfffffffbffffffffL & l) != 0L)\n                     jjCheckNAddTwoStates(2, 3);\n                  break;\n               case 3:\n                  if (curChar == 34 && kind > 26)\n                     kind = 26;\n                  break;\n               case 4:\n                  if ((0xfffffffeffffffffL & l) == 0L)\n                     break;\n                  if (kind > 27)\n                     kind = 27;\n                  jjCheckNAdd(4);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n               case 4:\n                  if ((0xffffffffdfffffffL & l) == 0L)\n                     break;\n                  if (kind > 27)\n                     kind = 27;\n                  jjCheckNAdd(4);\n                  break;\n               case 2:\n                  jjAddStates(17, 18);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n               case 4:\n                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))\n                     break;\n                  if (kind > 27)\n                     kind = 27;\n                  jjCheckNAdd(4);\n                  break;\n               case 2:\n                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                     jjAddStates(17, 18);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecaea79e307d83311c31273b0ea89b9fdb0c5a32","date":1287584790,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParserTokenManager#jjMoveNfa_2(int,int).mjava","sourceNew":null,"sourceOld":"private int jjMoveNfa_2(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 5;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0xfffffffeffffffffL & l) != 0L)\n                  {\n                     if (kind > 28)\n                        kind = 28;\n                     jjCheckNAdd(4);\n                  }\n                  if ((0x100002600L & l) != 0L)\n                  {\n                     if (kind > 6)\n                        kind = 6;\n                  }\n                  else if (curChar == 34)\n                     jjCheckNAdd(2);\n                  break;\n               case 1:\n                  if (curChar == 34)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0xfffffffbffffffffL & l) != 0L)\n                     jjCheckNAddTwoStates(2, 3);\n                  break;\n               case 3:\n                  if (curChar == 34 && kind > 27)\n                     kind = 27;\n                  break;\n               case 4:\n                  if ((0xfffffffeffffffffL & l) == 0L)\n                     break;\n                  if (kind > 28)\n                     kind = 28;\n                  jjCheckNAdd(4);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n               case 4:\n                  if ((0xffffffffdfffffffL & l) == 0L)\n                     break;\n                  if (kind > 28)\n                     kind = 28;\n                  jjCheckNAdd(4);\n                  break;\n               case 2:\n                  jjAddStates(20, 21);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n               case 4:\n                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))\n                     break;\n                  if (kind > 28)\n                     kind = 28;\n                  jjCheckNAdd(4);\n                  break;\n               case 2:\n                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                     jjAddStates(20, 21);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8017ab6544f30f93b106e419e7298173bad77f69","date":1287608126,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParserTokenManager#jjMoveNfa_2(int,int).mjava","sourceNew":null,"sourceOld":"private int jjMoveNfa_2(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 5;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0xfffffffeffffffffL & l) != 0L)\n                  {\n                     if (kind > 28)\n                        kind = 28;\n                     jjCheckNAdd(4);\n                  }\n                  if ((0x100002600L & l) != 0L)\n                  {\n                     if (kind > 6)\n                        kind = 6;\n                  }\n                  else if (curChar == 34)\n                     jjCheckNAdd(2);\n                  break;\n               case 1:\n                  if (curChar == 34)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0xfffffffbffffffffL & l) != 0L)\n                     jjCheckNAddTwoStates(2, 3);\n                  break;\n               case 3:\n                  if (curChar == 34 && kind > 27)\n                     kind = 27;\n                  break;\n               case 4:\n                  if ((0xfffffffeffffffffL & l) == 0L)\n                     break;\n                  if (kind > 28)\n                     kind = 28;\n                  jjCheckNAdd(4);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n               case 4:\n                  if ((0xffffffffdfffffffL & l) == 0L)\n                     break;\n                  if (kind > 28)\n                     kind = 28;\n                  jjCheckNAdd(4);\n                  break;\n               case 2:\n                  jjAddStates(20, 21);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n               case 4:\n                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))\n                     break;\n                  if (kind > 28)\n                     kind = 28;\n                  jjCheckNAdd(4);\n                  break;\n               case 2:\n                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                     jjAddStates(20, 21);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParserTokenManager#jjMoveNfa_2(int,int).mjava","sourceNew":null,"sourceOld":"private int jjMoveNfa_2(int startState, int curPos)\n{\n   int startsAt = 0;\n   jjnewStateCnt = 5;\n   int i = 1;\n   jjstateSet[0] = startState;\n   int kind = 0x7fffffff;\n   for (;;)\n   {\n      if (++jjround == 0x7fffffff)\n         ReInitRounds();\n      if (curChar < 64)\n      {\n         long l = 1L << curChar;\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n                  if ((0xfffffffeffffffffL & l) != 0L)\n                  {\n                     if (kind > 27)\n                        kind = 27;\n                     jjCheckNAdd(4);\n                  }\n                  if ((0x100002600L & l) != 0L)\n                  {\n                     if (kind > 6)\n                        kind = 6;\n                  }\n                  else if (curChar == 34)\n                     jjCheckNAdd(2);\n                  break;\n               case 1:\n                  if (curChar == 34)\n                     jjCheckNAdd(2);\n                  break;\n               case 2:\n                  if ((0xfffffffbffffffffL & l) != 0L)\n                     jjCheckNAddTwoStates(2, 3);\n                  break;\n               case 3:\n                  if (curChar == 34 && kind > 26)\n                     kind = 26;\n                  break;\n               case 4:\n                  if ((0xfffffffeffffffffL & l) == 0L)\n                     break;\n                  if (kind > 27)\n                     kind = 27;\n                  jjCheckNAdd(4);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else if (curChar < 128)\n      {\n         long l = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n               case 4:\n                  if ((0xffffffffdfffffffL & l) == 0L)\n                     break;\n                  if (kind > 27)\n                     kind = 27;\n                  jjCheckNAdd(4);\n                  break;\n               case 2:\n                  jjAddStates(17, 18);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      else\n      {\n         int hiByte = (int)(curChar >> 8);\n         int i1 = hiByte >> 6;\n         long l1 = 1L << (hiByte & 077);\n         int i2 = (curChar & 0xff) >> 6;\n         long l2 = 1L << (curChar & 077);\n         do\n         {\n            switch(jjstateSet[--i])\n            {\n               case 0:\n               case 4:\n                  if (!jjCanMove_0(hiByte, i1, i2, l1, l2))\n                     break;\n                  if (kind > 27)\n                     kind = 27;\n                  jjCheckNAdd(4);\n                  break;\n               case 2:\n                  if (jjCanMove_0(hiByte, i1, i2, l1, l2))\n                     jjAddStates(17, 18);\n                  break;\n               default : break;\n            }\n         } while(i != startsAt);\n      }\n      if (kind != 0x7fffffff)\n      {\n         jjmatchedKind = kind;\n         jjmatchedPos = curPos;\n         kind = 0x7fffffff;\n      }\n      ++curPos;\n      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))\n         return curPos;\n      try { curChar = input_stream.readChar(); }\n      catch(java.io.IOException e) { return curPos; }\n   }\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ecaea79e307d83311c31273b0ea89b9fdb0c5a32":["d94d6afa51157e490fc169e192a154ffc4cdad0b"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d94d6afa51157e490fc169e192a154ffc4cdad0b":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8017ab6544f30f93b106e419e7298173bad77f69":["d94d6afa51157e490fc169e192a154ffc4cdad0b","ecaea79e307d83311c31273b0ea89b9fdb0c5a32"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af","ecaea79e307d83311c31273b0ea89b9fdb0c5a32"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ecaea79e307d83311c31273b0ea89b9fdb0c5a32"]},"commit2Childs":{"ecaea79e307d83311c31273b0ea89b9fdb0c5a32":["8017ab6544f30f93b106e419e7298173bad77f69","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["d94d6afa51157e490fc169e192a154ffc4cdad0b","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"d94d6afa51157e490fc169e192a154ffc4cdad0b":["ecaea79e307d83311c31273b0ea89b9fdb0c5a32","8017ab6544f30f93b106e419e7298173bad77f69"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"8017ab6544f30f93b106e419e7298173bad77f69":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8017ab6544f30f93b106e419e7298173bad77f69","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}