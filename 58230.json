{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getCoreCacheKey().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getCoreCacheKey().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentReader#getCoreCacheKey().mjava","sourceNew":"  // This is necessary so that cloned SegmentReaders (which\n  // share the underlying postings data) will map to the\n  // same entry in the FieldCache.  See LUCENE-1579.\n  @Override\n  public Object getCoreCacheKey() {\n    return core;\n  }\n\n","sourceOld":"  // This is necessary so that cloned SegmentReaders (which\n  // share the underlying postings data) will map to the\n  // same entry in the FieldCache.  See LUCENE-1579.\n  @Override\n  public Object getCoreCacheKey() {\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2dcffe8fc78b093a5f4207f492bbae185740f6a","date":1380887572,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getCoreCacheKey().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getCoreCacheKey().mjava","sourceNew":"  // This is necessary so that cloned SegmentReaders (which\n  // share the underlying postings data) will map to the\n  // same entry in the FieldCache.  See LUCENE-1579.\n  @Override\n  public Object getCoreCacheKey() {\n    // NOTE: if this every changes, be sure to fix\n    // SegmentCoreReader's ownerCoreCacheKey to match!\n    return core;\n  }\n\n","sourceOld":"  // This is necessary so that cloned SegmentReaders (which\n  // share the underlying postings data) will map to the\n  // same entry in the FieldCache.  See LUCENE-1579.\n  @Override\n  public Object getCoreCacheKey() {\n    return core;\n  }\n\n","bugFix":null,"bugIntro":["e088904f43a479ba66abab8576fc76f8e080583d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e088904f43a479ba66abab8576fc76f8e080583d","date":1380889210,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getCoreCacheKey().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getCoreCacheKey().mjava","sourceNew":"  // This is necessary so that cloned SegmentReaders (which\n  // share the underlying postings data) will map to the\n  // same entry in the FieldCache.  See LUCENE-1579.\n  @Override\n  public Object getCoreCacheKey() {\n    // NOTE: if this ever changes, be sure to fix\n    // SegmentCoreReader.notifyCoreClosedListeners to match!\n    // Today it passes \"this\" as its coreCacheKey:\n    return core;\n  }\n\n","sourceOld":"  // This is necessary so that cloned SegmentReaders (which\n  // share the underlying postings data) will map to the\n  // same entry in the FieldCache.  See LUCENE-1579.\n  @Override\n  public Object getCoreCacheKey() {\n    // NOTE: if this every changes, be sure to fix\n    // SegmentCoreReader's ownerCoreCacheKey to match!\n    return core;\n  }\n\n","bugFix":["d2dcffe8fc78b093a5f4207f492bbae185740f6a"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9274621789ce990dbfef455dabdf026bb3184821","date":1400046684,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getCoreCacheKey().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getCoreCacheKey().mjava","sourceNew":"  // This is necessary so that cloned SegmentReaders (which\n  // share the underlying postings data) will map to the\n  // same entry for CachingWrapperFilter.  See LUCENE-1579.\n  @Override\n  public Object getCoreCacheKey() {\n    // NOTE: if this ever changes, be sure to fix\n    // SegmentCoreReader.notifyCoreClosedListeners to match!\n    // Today it passes \"this\" as its coreCacheKey:\n    return core;\n  }\n\n","sourceOld":"  // This is necessary so that cloned SegmentReaders (which\n  // share the underlying postings data) will map to the\n  // same entry in the FieldCache.  See LUCENE-1579.\n  @Override\n  public Object getCoreCacheKey() {\n    // NOTE: if this ever changes, be sure to fix\n    // SegmentCoreReader.notifyCoreClosedListeners to match!\n    // Today it passes \"this\" as its coreCacheKey:\n    return core;\n  }\n\n","bugFix":["c302627a03bb83cf186ac5d7d3239e0c764f4432"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getCoreCacheKey().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getCoreCacheKey().mjava","sourceNew":"  // This is necessary so that cloned SegmentReaders (which\n  // share the underlying postings data) will map to the\n  // same entry for CachingWrapperFilter.  See LUCENE-1579.\n  @Override\n  public Object getCoreCacheKey() {\n    // NOTE: if this ever changes, be sure to fix\n    // SegmentCoreReader.notifyCoreClosedListeners to match!\n    // Today it passes \"this\" as its coreCacheKey:\n    return core;\n  }\n\n","sourceOld":"  // This is necessary so that cloned SegmentReaders (which\n  // share the underlying postings data) will map to the\n  // same entry in the FieldCache.  See LUCENE-1579.\n  @Override\n  public Object getCoreCacheKey() {\n    // NOTE: if this ever changes, be sure to fix\n    // SegmentCoreReader.notifyCoreClosedListeners to match!\n    // Today it passes \"this\" as its coreCacheKey:\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getCoreCacheKey().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getCoreCacheKey().mjava","sourceNew":"  // This is necessary so that cloned SegmentReaders (which\n  // share the underlying postings data) will map to the\n  // same entry for CachingWrapperFilter.  See LUCENE-1579.\n  @Override\n  public Object getCoreCacheKey() {\n    // NOTE: if this ever changes, be sure to fix\n    // SegmentCoreReader.notifyCoreClosedListeners to match!\n    // Today it passes \"this\" as its coreCacheKey:\n    return core;\n  }\n\n","sourceOld":"  // This is necessary so that cloned SegmentReaders (which\n  // share the underlying postings data) will map to the\n  // same entry in the FieldCache.  See LUCENE-1579.\n  @Override\n  public Object getCoreCacheKey() {\n    // NOTE: if this ever changes, be sure to fix\n    // SegmentCoreReader.notifyCoreClosedListeners to match!\n    // Today it passes \"this\" as its coreCacheKey:\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d211216c83f01894810543d1c107160a9ae3650b","date":1488289605,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#getCoreCacheKey().mjava","sourceNew":null,"sourceOld":"  // This is necessary so that cloned SegmentReaders (which\n  // share the underlying postings data) will map to the\n  // same entry for CachingWrapperFilter.  See LUCENE-1579.\n  @Override\n  public Object getCoreCacheKey() {\n    // NOTE: if this ever changes, be sure to fix\n    // SegmentCoreReader.notifyCoreClosedListeners to match!\n    // Today it passes \"this\" as its coreCacheKey:\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9274621789ce990dbfef455dabdf026bb3184821":["e088904f43a479ba66abab8576fc76f8e080583d"],"e088904f43a479ba66abab8576fc76f8e080583d":["d2dcffe8fc78b093a5f4207f492bbae185740f6a"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["e088904f43a479ba66abab8576fc76f8e080583d","9274621789ce990dbfef455dabdf026bb3184821"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d211216c83f01894810543d1c107160a9ae3650b":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"d2dcffe8fc78b093a5f4207f492bbae185740f6a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"56572ec06f1407c066d6b7399413178b33176cd8":["e088904f43a479ba66abab8576fc76f8e080583d","93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d211216c83f01894810543d1c107160a9ae3650b"]},"commit2Childs":{"9274621789ce990dbfef455dabdf026bb3184821":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"e088904f43a479ba66abab8576fc76f8e080583d":["9274621789ce990dbfef455dabdf026bb3184821","93dd449115a9247533e44bab47e8429e5dccbc6d","56572ec06f1407c066d6b7399413178b33176cd8"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["d211216c83f01894810543d1c107160a9ae3650b","56572ec06f1407c066d6b7399413178b33176cd8"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d2dcffe8fc78b093a5f4207f492bbae185740f6a"],"d2dcffe8fc78b093a5f4207f492bbae185740f6a":["e088904f43a479ba66abab8576fc76f8e080583d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d211216c83f01894810543d1c107160a9ae3650b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}