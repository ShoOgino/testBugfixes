{"path":"lucene/src/java/org/apache/lucene/store/IndexInput#clone().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/IndexInput#clone().mjava","pathOld":"src/java/org/apache/lucene/store/IndexInput#clone().mjava","sourceNew":"  /** Returns a clone of this stream.\n   *\n   * <p>Clones of a stream access the same data, and are positioned at the same\n   * point as the stream they were cloned from.\n   *\n   * <p>Expert: Subclasses must ensure that clones may be positioned at\n   * different points in the input from each other and from the stream they\n   * were cloned from.\n   */\n  @Override\n  public Object clone() {\n    IndexInput clone = null;\n    try {\n      clone = (IndexInput)super.clone();\n    } catch (CloneNotSupportedException e) {}\n\n    clone.bytes = null;\n    clone.chars = null;\n\n    return clone;\n  }\n\n","sourceOld":"  /** Returns a clone of this stream.\n   *\n   * <p>Clones of a stream access the same data, and are positioned at the same\n   * point as the stream they were cloned from.\n   *\n   * <p>Expert: Subclasses must ensure that clones may be positioned at\n   * different points in the input from each other and from the stream they\n   * were cloned from.\n   */\n  @Override\n  public Object clone() {\n    IndexInput clone = null;\n    try {\n      clone = (IndexInput)super.clone();\n    } catch (CloneNotSupportedException e) {}\n\n    clone.bytes = null;\n    clone.chars = null;\n\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/store/IndexInput#clone().mjava","sourceNew":null,"sourceOld":"  /** Returns a clone of this stream.\n   *\n   * <p>Clones of a stream access the same data, and are positioned at the same\n   * point as the stream they were cloned from.\n   *\n   * <p>Expert: Subclasses must ensure that clones may be positioned at\n   * different points in the input from each other and from the stream they\n   * were cloned from.\n   */\n  @Override\n  public Object clone() {\n    IndexInput clone = null;\n    try {\n      clone = (IndexInput)super.clone();\n    } catch (CloneNotSupportedException e) {}\n\n    clone.bytes = null;\n    clone.chars = null;\n\n    return clone;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}