{"path":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchWithSortTask#getType(String).mjava","commits":[{"id":"ecc11368dc265bfdad90214f8bf5da99016ab1e2","date":1294144090,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchWithSortTask#getType(String).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchWithSortTask#getType(String).mjava","sourceNew":"  private int getType(String typeString) {\n    int type;\n    if (typeString.equals(\"float\")) {\n      type = SortField.FLOAT;\n    } else if (typeString.equals(\"double\")) {\n      type = SortField.DOUBLE;\n    } else if (typeString.equals(\"byte\")) {\n      type = SortField.BYTE;\n    } else if (typeString.equals(\"short\")) {\n      type = SortField.SHORT;\n    } else if (typeString.equals(\"int\")) {\n      type = SortField.INT;\n    } else if (typeString.equals(\"long\")) {\n      type = SortField.LONG;\n    } else if (typeString.equals(\"string\")) {\n      type = SortField.STRING;\n    } else if (typeString.equals(\"string_val\")) {\n      type = SortField.STRING_VAL;\n    } else {\n      throw new RuntimeException(\"Unrecognized sort field type \" + typeString);\n    }\n    return type;\n  }\n\n","sourceOld":"  private int getType(String typeString) {\n    int type;\n    if (typeString.equals(\"float\")) {\n      type = SortField.FLOAT;\n    } else if (typeString.equals(\"double\")) {\n      type = SortField.DOUBLE;\n    } else if (typeString.equals(\"byte\")) {\n      type = SortField.BYTE;\n    } else if (typeString.equals(\"short\")) {\n      type = SortField.SHORT;\n    } else if (typeString.equals(\"int\")) {\n      type = SortField.INT;\n    } else if (typeString.equals(\"long\")) {\n      type = SortField.LONG;\n    } else if (typeString.equals(\"string\")) {\n      type = SortField.STRING;\n    } else if (typeString.equals(\"string_val\")) {\n      type = SortField.STRING_VAL;\n    } else {\n      throw new RuntimeException(\"Unrecognized sort field type \" + typeString);\n    }\n    return type;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchWithSortTask#getType(String).mjava","pathOld":"/dev/null","sourceNew":"  private int getType(String typeString) {\n    int type;\n    if (typeString.equals(\"float\")) {\n      type = SortField.FLOAT;\n    } else if (typeString.equals(\"double\")) {\n      type = SortField.DOUBLE;\n    } else if (typeString.equals(\"byte\")) {\n      type = SortField.BYTE;\n    } else if (typeString.equals(\"short\")) {\n      type = SortField.SHORT;\n    } else if (typeString.equals(\"int\")) {\n      type = SortField.INT;\n    } else if (typeString.equals(\"long\")) {\n      type = SortField.LONG;\n    } else if (typeString.equals(\"string\")) {\n      type = SortField.STRING;\n    } else if (typeString.equals(\"string_val\")) {\n      type = SortField.STRING_VAL;\n    } else {\n      throw new RuntimeException(\"Unrecognized sort field type \" + typeString);\n    }\n    return type;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchWithSortTask#getType(String).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchWithSortTask#getType(String).mjava","sourceNew":"  private int getType(String typeString) {\n    int type;\n    if (typeString.equals(\"float\")) {\n      type = SortField.FLOAT;\n    } else if (typeString.equals(\"double\")) {\n      type = SortField.DOUBLE;\n    } else if (typeString.equals(\"byte\")) {\n      type = SortField.BYTE;\n    } else if (typeString.equals(\"short\")) {\n      type = SortField.SHORT;\n    } else if (typeString.equals(\"int\")) {\n      type = SortField.INT;\n    } else if (typeString.equals(\"long\")) {\n      type = SortField.LONG;\n    } else if (typeString.equals(\"string\")) {\n      type = SortField.STRING;\n    } else if (typeString.equals(\"string_val\")) {\n      type = SortField.STRING_VAL;\n    } else {\n      throw new RuntimeException(\"Unrecognized sort field type \" + typeString);\n    }\n    return type;\n  }\n\n","sourceOld":"  private int getType(String typeString) {\n    int type;\n    if (typeString.equals(\"float\")) {\n      type = SortField.FLOAT;\n    } else if (typeString.equals(\"double\")) {\n      type = SortField.DOUBLE;\n    } else if (typeString.equals(\"byte\")) {\n      type = SortField.BYTE;\n    } else if (typeString.equals(\"short\")) {\n      type = SortField.SHORT;\n    } else if (typeString.equals(\"int\")) {\n      type = SortField.INT;\n    } else if (typeString.equals(\"long\")) {\n      type = SortField.LONG;\n    } else if (typeString.equals(\"string\")) {\n      type = SortField.STRING;\n    } else if (typeString.equals(\"string_val\")) {\n      type = SortField.STRING_VAL;\n    } else {\n      throw new RuntimeException(\"Unrecognized sort field type \" + typeString);\n    }\n    return type;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"090a0320e4de4a3674376aef96b9701f47564f86","date":1308707325,"type":4,"author":"Christopher John Male","isMerge":false,"pathNew":"/dev/null","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchWithSortTask#getType(String).mjava","sourceNew":null,"sourceOld":"  private int getType(String typeString) {\n    int type;\n    if (typeString.equals(\"float\")) {\n      type = SortField.FLOAT;\n    } else if (typeString.equals(\"double\")) {\n      type = SortField.DOUBLE;\n    } else if (typeString.equals(\"byte\")) {\n      type = SortField.BYTE;\n    } else if (typeString.equals(\"short\")) {\n      type = SortField.SHORT;\n    } else if (typeString.equals(\"int\")) {\n      type = SortField.INT;\n    } else if (typeString.equals(\"long\")) {\n      type = SortField.LONG;\n    } else if (typeString.equals(\"string\")) {\n      type = SortField.STRING;\n    } else if (typeString.equals(\"string_val\")) {\n      type = SortField.STRING_VAL;\n    } else {\n      throw new RuntimeException(\"Unrecognized sort field type \" + typeString);\n    }\n    return type;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchWithSortTask#getType(String).mjava","sourceNew":null,"sourceOld":"  private int getType(String typeString) {\n    int type;\n    if (typeString.equals(\"float\")) {\n      type = SortField.FLOAT;\n    } else if (typeString.equals(\"double\")) {\n      type = SortField.DOUBLE;\n    } else if (typeString.equals(\"byte\")) {\n      type = SortField.BYTE;\n    } else if (typeString.equals(\"short\")) {\n      type = SortField.SHORT;\n    } else if (typeString.equals(\"int\")) {\n      type = SortField.INT;\n    } else if (typeString.equals(\"long\")) {\n      type = SortField.LONG;\n    } else if (typeString.equals(\"string\")) {\n      type = SortField.STRING;\n    } else if (typeString.equals(\"string_val\")) {\n      type = SortField.STRING_VAL;\n    } else {\n      throw new RuntimeException(\"Unrecognized sort field type \" + typeString);\n    }\n    return type;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchWithSortTask#getType(String).mjava","sourceNew":null,"sourceOld":"  private int getType(String typeString) {\n    int type;\n    if (typeString.equals(\"float\")) {\n      type = SortField.FLOAT;\n    } else if (typeString.equals(\"double\")) {\n      type = SortField.DOUBLE;\n    } else if (typeString.equals(\"byte\")) {\n      type = SortField.BYTE;\n    } else if (typeString.equals(\"short\")) {\n      type = SortField.SHORT;\n    } else if (typeString.equals(\"int\")) {\n      type = SortField.INT;\n    } else if (typeString.equals(\"long\")) {\n      type = SortField.LONG;\n    } else if (typeString.equals(\"string\")) {\n      type = SortField.STRING;\n    } else if (typeString.equals(\"string_val\")) {\n      type = SortField.STRING_VAL;\n    } else {\n      throw new RuntimeException(\"Unrecognized sort field type \" + typeString);\n    }\n    return type;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2553b00f699380c64959ccb27991289aae87be2e":["ecc11368dc265bfdad90214f8bf5da99016ab1e2","090a0320e4de4a3674376aef96b9701f47564f86"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["ecc11368dc265bfdad90214f8bf5da99016ab1e2","090a0320e4de4a3674376aef96b9701f47564f86"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"090a0320e4de4a3674376aef96b9701f47564f86":["ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["090a0320e4de4a3674376aef96b9701f47564f86"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["70ad682703b8585f5d0a637efec044d57ec05efb","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","868da859b43505d9d2a023bfeae6dd0c795f5295","090a0320e4de4a3674376aef96b9701f47564f86"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","ecc11368dc265bfdad90214f8bf5da99016ab1e2","868da859b43505d9d2a023bfeae6dd0c795f5295"],"2553b00f699380c64959ccb27991289aae87be2e":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"090a0320e4de4a3674376aef96b9701f47564f86":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}