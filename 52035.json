{"path":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessor#DocBasedVersionConstraintsProcessor(List[String],boolean,List[String],boolean,boolean,SolrQueryRequest,UpdateRequestProcessor).mjava","commits":[{"id":"d0f4b03a7701ad6256c4b8946243ae1981931a28","date":1527108277,"type":1,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessor#DocBasedVersionConstraintsProcessor(List[String],boolean,List[String],boolean,boolean,SolrQueryRequest,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessor#DocBasedVersionConstraintsProcessor(List[String],boolean,List[String],boolean,SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  public DocBasedVersionConstraintsProcessor(List<String> versionFields,\n                                             boolean ignoreOldUpdates,\n                                             List<String> deleteVersionParamNames,\n                                             boolean supportMissingVersionOnOldDocs,\n                                             boolean useFieldCache,\n                                             SolrQueryRequest req,\n                                             UpdateRequestProcessor next ) {\n    super(next);\n    this.ignoreOldUpdates = ignoreOldUpdates;\n    this.deleteVersionParamNames = deleteVersionParamNames.toArray(EMPTY_STR_ARR);\n    this.supportMissingVersionOnOldDocs = supportMissingVersionOnOldDocs;\n    this.core = req.getCore();\n    this.versionFieldNames = versionFields.toArray(EMPTY_STR_ARR);\n    IndexSchema schema = core.getLatestSchema();\n    userVersionFields = new SchemaField[versionFieldNames.length];\n    for (int i = 0; i < versionFieldNames.length; i++) {\n      userVersionFields[i] = schema.getField(versionFieldNames[i]);\n    }\n    this.solrVersionField = schema.getField(CommonParams.VERSION_FIELD);\n    this.useFieldCache = useFieldCache;\n\n    this.distribProc = getDistributedUpdateProcessor(next);\n\n    this.phase = DistributedUpdateProcessor.DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));\n  }\n\n","sourceOld":"  public DocBasedVersionConstraintsProcessor(List<String> versionFields,\n                                             boolean ignoreOldUpdates,\n                                             List<String> deleteVersionParamNames,\n                                             boolean useFieldCache,\n                                             SolrQueryRequest req,\n                                             SolrQueryResponse rsp,\n                                             UpdateRequestProcessor next ) {\n    super(next);\n    this.ignoreOldUpdates = ignoreOldUpdates;\n    this.deleteVersionParamNames = deleteVersionParamNames.toArray(EMPTY_STR_ARR);\n    this.core = req.getCore();\n    this.versionFieldNames = versionFields.toArray(EMPTY_STR_ARR);\n    IndexSchema schema = core.getLatestSchema();\n    userVersionFields = new SchemaField[versionFieldNames.length];\n    for (int i = 0; i < versionFieldNames.length; i++) {\n      userVersionFields[i] = schema.getField(versionFieldNames[i]);\n    }\n    this.solrVersionField = schema.getField(CommonParams.VERSION_FIELD);\n    this.useFieldCache = useFieldCache;\n\n    this.distribProc = getDistributedUpdateProcessor(next);\n\n    this.phase = DistributedUpdateProcessor.DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"667eea18b7ca87af38d05d81d479f943a717a6b1","date":1548452298,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessor#DocBasedVersionConstraintsProcessor(List[String],boolean,List[String],boolean,boolean,SolrQueryRequest,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessor#DocBasedVersionConstraintsProcessor(List[String],boolean,List[String],boolean,boolean,SolrQueryRequest,UpdateRequestProcessor).mjava","sourceNew":"  /**\n   * @deprecated Use {@link #DocBasedVersionConstraintsProcessor(List, boolean, List, boolean, boolean, NamedList, SolrQueryRequest, UpdateRequestProcessor)}\n   */\n  @Deprecated\n  public DocBasedVersionConstraintsProcessor(List<String> versionFields,\n      boolean ignoreOldUpdates,\n      List<String> deleteVersionParamNames,\n      boolean supportMissingVersionOnOldDocs,\n      boolean useFieldCache,\n      SolrQueryRequest req,\n      UpdateRequestProcessor next ) {\n    this(versionFields,\n        ignoreOldUpdates,\n        deleteVersionParamNames,\n        supportMissingVersionOnOldDocs,\n        useFieldCache,\n        null,\n        req,\n        next);\n  }\n\n","sourceOld":"  public DocBasedVersionConstraintsProcessor(List<String> versionFields,\n                                             boolean ignoreOldUpdates,\n                                             List<String> deleteVersionParamNames,\n                                             boolean supportMissingVersionOnOldDocs,\n                                             boolean useFieldCache,\n                                             SolrQueryRequest req,\n                                             UpdateRequestProcessor next ) {\n    super(next);\n    this.ignoreOldUpdates = ignoreOldUpdates;\n    this.deleteVersionParamNames = deleteVersionParamNames.toArray(EMPTY_STR_ARR);\n    this.supportMissingVersionOnOldDocs = supportMissingVersionOnOldDocs;\n    this.core = req.getCore();\n    this.versionFieldNames = versionFields.toArray(EMPTY_STR_ARR);\n    IndexSchema schema = core.getLatestSchema();\n    userVersionFields = new SchemaField[versionFieldNames.length];\n    for (int i = 0; i < versionFieldNames.length; i++) {\n      userVersionFields[i] = schema.getField(versionFieldNames[i]);\n    }\n    this.solrVersionField = schema.getField(CommonParams.VERSION_FIELD);\n    this.useFieldCache = useFieldCache;\n\n    this.distribProc = getDistributedUpdateProcessor(next);\n\n    this.phase = DistributedUpdateProcessor.DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42f84436dea2e1d53dc6d77efb5bfee5881c04c3","date":1548452920,"type":4,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessor#DocBasedVersionConstraintsProcessor(List[String],boolean,List[String],boolean,boolean,SolrQueryRequest,UpdateRequestProcessor).mjava","sourceNew":null,"sourceOld":"  /**\n   * @deprecated Use {@link #DocBasedVersionConstraintsProcessor(List, boolean, List, boolean, boolean, NamedList, SolrQueryRequest, UpdateRequestProcessor)}\n   */\n  @Deprecated\n  public DocBasedVersionConstraintsProcessor(List<String> versionFields,\n      boolean ignoreOldUpdates,\n      List<String> deleteVersionParamNames,\n      boolean supportMissingVersionOnOldDocs,\n      boolean useFieldCache,\n      SolrQueryRequest req,\n      UpdateRequestProcessor next ) {\n    this(versionFields,\n        ignoreOldUpdates,\n        deleteVersionParamNames,\n        supportMissingVersionOnOldDocs,\n        useFieldCache,\n        null,\n        req,\n        next);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d0f4b03a7701ad6256c4b8946243ae1981931a28":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"667eea18b7ca87af38d05d81d479f943a717a6b1":["d0f4b03a7701ad6256c4b8946243ae1981931a28"],"42f84436dea2e1d53dc6d77efb5bfee5881c04c3":["667eea18b7ca87af38d05d81d479f943a717a6b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["42f84436dea2e1d53dc6d77efb5bfee5881c04c3"]},"commit2Childs":{"d0f4b03a7701ad6256c4b8946243ae1981931a28":["667eea18b7ca87af38d05d81d479f943a717a6b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d0f4b03a7701ad6256c4b8946243ae1981931a28"],"667eea18b7ca87af38d05d81d479f943a717a6b1":["42f84436dea2e1d53dc6d77efb5bfee5881c04c3"],"42f84436dea2e1d53dc6d77efb5bfee5881c04c3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}