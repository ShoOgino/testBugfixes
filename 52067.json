{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat#fieldsProducer(SegmentReadState).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState readState)\n    throws IOException {\n\n    // Load our ID:\n    final String idFileName = IndexFileNames.segmentFileName(readState.segmentInfo.name, readState.segmentSuffix, ID_EXTENSION);\n    IndexInput in = readState.dir.openInput(idFileName, readState.context);\n    boolean success = false;\n    final int id;\n    try {\n      CodecUtil.checkHeader(in, RAM_ONLY_NAME, VERSION_START, VERSION_LATEST);\n      id = in.readVInt();\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(in);\n      } else {\n        IOUtils.close(in);\n      }\n    }\n    \n    synchronized(state) {\n      return state.get(id);\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState readState)\n    throws IOException {\n\n    // Load our ID:\n    final String idFileName = IndexFileNames.segmentFileName(readState.segmentInfo.name, readState.segmentSuffix, ID_EXTENSION);\n    IndexInput in = readState.dir.openInput(idFileName, readState.context);\n    boolean success = false;\n    final int id;\n    try {\n      CodecUtil.checkHeader(in, RAM_ONLY_NAME, VERSION_START, VERSION_LATEST);\n      id = in.readVInt();\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(in);\n      } else {\n        IOUtils.close(in);\n      }\n    }\n    \n    synchronized(state) {\n      return state.get(id);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d08eba3d52b63561ebf936481ce73e6b6a14aa03","date":1333879759,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public InvertedFieldsProducer fieldsProducer(SegmentReadState readState)\n    throws IOException {\n\n    // Load our ID:\n    final String idFileName = IndexFileNames.segmentFileName(readState.segmentInfo.name, readState.segmentSuffix, ID_EXTENSION);\n    IndexInput in = readState.dir.openInput(idFileName, readState.context);\n    boolean success = false;\n    final int id;\n    try {\n      CodecUtil.checkHeader(in, RAM_ONLY_NAME, VERSION_START, VERSION_LATEST);\n      id = in.readVInt();\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(in);\n      } else {\n        IOUtils.close(in);\n      }\n    }\n    \n    synchronized(state) {\n      return state.get(id);\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState readState)\n    throws IOException {\n\n    // Load our ID:\n    final String idFileName = IndexFileNames.segmentFileName(readState.segmentInfo.name, readState.segmentSuffix, ID_EXTENSION);\n    IndexInput in = readState.dir.openInput(idFileName, readState.context);\n    boolean success = false;\n    final int id;\n    try {\n      CodecUtil.checkHeader(in, RAM_ONLY_NAME, VERSION_START, VERSION_LATEST);\n      id = in.readVInt();\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(in);\n      } else {\n        IOUtils.close(in);\n      }\n    }\n    \n    synchronized(state) {\n      return state.get(id);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf","date":1333892281,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState readState)\n    throws IOException {\n\n    // Load our ID:\n    final String idFileName = IndexFileNames.segmentFileName(readState.segmentInfo.name, readState.segmentSuffix, ID_EXTENSION);\n    IndexInput in = readState.dir.openInput(idFileName, readState.context);\n    boolean success = false;\n    final int id;\n    try {\n      CodecUtil.checkHeader(in, RAM_ONLY_NAME, VERSION_START, VERSION_LATEST);\n      id = in.readVInt();\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(in);\n      } else {\n        IOUtils.close(in);\n      }\n    }\n    \n    synchronized(state) {\n      return state.get(id);\n    }\n  }\n\n","sourceOld":"  @Override\n  public InvertedFieldsProducer fieldsProducer(SegmentReadState readState)\n    throws IOException {\n\n    // Load our ID:\n    final String idFileName = IndexFileNames.segmentFileName(readState.segmentInfo.name, readState.segmentSuffix, ID_EXTENSION);\n    IndexInput in = readState.dir.openInput(idFileName, readState.context);\n    boolean success = false;\n    final int id;\n    try {\n      CodecUtil.checkHeader(in, RAM_ONLY_NAME, VERSION_START, VERSION_LATEST);\n      id = in.readVInt();\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(in);\n      } else {\n        IOUtils.close(in);\n      }\n    }\n    \n    synchronized(state) {\n      return state.get(id);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ede45a461a2dcb573505ed9b6a5182dfebd3688f","date":1353338494,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState readState)\n    throws IOException {\n\n    // Load our ID:\n    final String idFileName = IndexFileNames.segmentFileName(readState.segmentInfo.name, readState.segmentSuffix, ID_EXTENSION);\n    IndexInput in = readState.directory.openInput(idFileName, readState.context);\n    boolean success = false;\n    final int id;\n    try {\n      CodecUtil.checkHeader(in, RAM_ONLY_NAME, VERSION_START, VERSION_LATEST);\n      id = in.readVInt();\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(in);\n      } else {\n        IOUtils.close(in);\n      }\n    }\n    \n    synchronized(state) {\n      return state.get(id);\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState readState)\n    throws IOException {\n\n    // Load our ID:\n    final String idFileName = IndexFileNames.segmentFileName(readState.segmentInfo.name, readState.segmentSuffix, ID_EXTENSION);\n    IndexInput in = readState.dir.openInput(idFileName, readState.context);\n    boolean success = false;\n    final int id;\n    try {\n      CodecUtil.checkHeader(in, RAM_ONLY_NAME, VERSION_START, VERSION_LATEST);\n      id = in.readVInt();\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(in);\n      } else {\n        IOUtils.close(in);\n      }\n    }\n    \n    synchronized(state) {\n      return state.get(id);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState readState)\n    throws IOException {\n\n    // Load our ID:\n    final String idFileName = IndexFileNames.segmentFileName(readState.segmentInfo.name, readState.segmentSuffix, ID_EXTENSION);\n    IndexInput in = readState.directory.openInput(idFileName, readState.context);\n    boolean success = false;\n    final int id;\n    try {\n      CodecUtil.checkHeader(in, RAM_ONLY_NAME, VERSION_START, VERSION_LATEST);\n      id = in.readVInt();\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(in);\n      } else {\n        IOUtils.close(in);\n      }\n    }\n    \n    synchronized(state) {\n      return state.get(id);\n    }\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState readState)\n    throws IOException {\n\n    // Load our ID:\n    final String idFileName = IndexFileNames.segmentFileName(readState.segmentInfo.name, readState.segmentSuffix, ID_EXTENSION);\n    IndexInput in = readState.dir.openInput(idFileName, readState.context);\n    boolean success = false;\n    final int id;\n    try {\n      CodecUtil.checkHeader(in, RAM_ONLY_NAME, VERSION_START, VERSION_LATEST);\n      id = in.readVInt();\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(in);\n      } else {\n        IOUtils.close(in);\n      }\n    }\n    \n    synchronized(state) {\n      return state.get(id);\n    }\n  }\n\n","bugFix":["7b91922b55d15444d554721b352861d028eb8278"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ede45a461a2dcb573505ed9b6a5182dfebd3688f":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf","ede45a461a2dcb573505ed9b6a5182dfebd3688f"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"ede45a461a2dcb573505ed9b6a5182dfebd3688f":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["ede45a461a2dcb573505ed9b6a5182dfebd3688f","d4d69c535930b5cce125cff868d40f6373dc27d4"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}