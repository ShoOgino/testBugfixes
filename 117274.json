{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeField(IndexOutput,IndexOutput,IndexOutput,String,MutablePointValues).mjava","commits":[{"id":"78e689a3b60e84c75dc6dd7b181a71fc19ef8482","date":1591689554,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeField(IndexOutput,IndexOutput,IndexOutput,String,MutablePointValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeField(IndexOutput,String,MutablePointValues).mjava","sourceNew":"  /** Write a field from a {@link MutablePointValues}. This way of writing\n   *  points is faster than regular writes with {@link BKDWriter#add} since\n   *  there is opportunity for reordering points before writing them to\n   *  disk. This method does not use transient disk in order to reorder points.\n   */\n  public Runnable writeField(IndexOutput metaOut, IndexOutput indexOut, IndexOutput dataOut, String fieldName, MutablePointValues reader) throws IOException {\n    if (numDataDims == 1) {\n      return writeField1Dim(metaOut, indexOut, dataOut, fieldName, reader);\n    } else {\n      return writeFieldNDims(metaOut, indexOut, dataOut, fieldName, reader);\n    }\n  }\n\n","sourceOld":"  /** Write a field from a {@link MutablePointValues}. This way of writing\n   *  points is faster than regular writes with {@link BKDWriter#add} since\n   *  there is opportunity for reordering points before writing them to\n   *  disk. This method does not use transient disk in order to reorder points.\n   */\n  public long writeField(IndexOutput out, String fieldName, MutablePointValues reader) throws IOException {\n    if (numDataDims == 1) {\n      return writeField1Dim(out, fieldName, reader);\n    } else {\n      return writeFieldNDims(out, fieldName, reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb94bf667d51f9c390c99d97afb36b7caab6b6e9","date":1599548621,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeField(IndexOutput,IndexOutput,IndexOutput,String,MutablePointValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDWriter#writeField(IndexOutput,IndexOutput,IndexOutput,String,MutablePointValues).mjava","sourceNew":"  /** Write a field from a {@link MutablePointValues}. This way of writing\n   *  points is faster than regular writes with {@link BKDWriter#add} since\n   *  there is opportunity for reordering points before writing them to\n   *  disk. This method does not use transient disk in order to reorder points.\n   */\n  public Runnable writeField(IndexOutput metaOut, IndexOutput indexOut, IndexOutput dataOut, String fieldName, MutablePointValues reader) throws IOException {\n    if (config.numDims == 1) {\n      return writeField1Dim(metaOut, indexOut, dataOut, fieldName, reader);\n    } else {\n      return writeFieldNDims(metaOut, indexOut, dataOut, fieldName, reader);\n    }\n  }\n\n","sourceOld":"  /** Write a field from a {@link MutablePointValues}. This way of writing\n   *  points is faster than regular writes with {@link BKDWriter#add} since\n   *  there is opportunity for reordering points before writing them to\n   *  disk. This method does not use transient disk in order to reorder points.\n   */\n  public Runnable writeField(IndexOutput metaOut, IndexOutput indexOut, IndexOutput dataOut, String fieldName, MutablePointValues reader) throws IOException {\n    if (numDataDims == 1) {\n      return writeField1Dim(metaOut, indexOut, dataOut, fieldName, reader);\n    } else {\n      return writeFieldNDims(metaOut, indexOut, dataOut, fieldName, reader);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["78e689a3b60e84c75dc6dd7b181a71fc19ef8482"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78e689a3b60e84c75dc6dd7b181a71fc19ef8482":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"]},"commit2Childs":{"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["78e689a3b60e84c75dc6dd7b181a71fc19ef8482"],"78e689a3b60e84c75dc6dd7b181a71fc19ef8482":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}