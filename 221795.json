{"path":"lucene/sandbox/src/java/org/apache/lucene/geo/Rectangle2D#queryContainsPoint(int,int).mjava","commits":[{"id":"9feee35369998c08f5168e0808e67e09857d5bac","date":1544618795,"type":1,"author":"iverase","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/geo/Rectangle2D#queryContainsPoint(int,int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryContainsPoint(int,int).mjava","sourceNew":"  /** Checks if the rectangle contains the provided point **/\n  public boolean queryContainsPoint(int x, int y) {\n    if (this.crossesDateline() == true) {\n      return bboxContainsPoint(x, y, MIN_LON_ENCODED, this.maxX, this.minY, this.maxY)\n          || bboxContainsPoint(x, y, this.minX, MAX_LON_ENCODED, this.minY, this.maxY);\n    }\n    return bboxContainsPoint(x, y, this.minX, this.maxX, this.minY, this.maxY);\n  }\n\n","sourceOld":"  /** instance method to check if query box contains point */\n  private boolean queryContainsPoint(int x, int y) {\n    if (this.crossesDateline() == true) {\n      return bboxContainsPoint(x, y, MIN_LON_ENCODED, this.maxX, this.minY, this.maxY)\n          || bboxContainsPoint(x, y, this.minX, MAX_LON_ENCODED, this.minY, this.maxY);\n    }\n    return bboxContainsPoint(x, y, this.minX, this.maxX, this.minY, this.maxY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/Rectangle2D#queryContainsPoint(int,int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/geo/Rectangle2D#queryContainsPoint(int,int).mjava","sourceNew":"  /** Checks if the rectangle contains the provided point **/\n  public boolean queryContainsPoint(int x, int y) {\n    if (this.crossesDateline() == true) {\n      return bboxContainsPoint(x, y, MIN_LON_ENCODED, this.maxX, this.minY, this.maxY)\n          || bboxContainsPoint(x, y, this.minX, MAX_LON_ENCODED, this.minY, this.maxY);\n    }\n    return bboxContainsPoint(x, y, this.minX, this.maxX, this.minY, this.maxY);\n  }\n\n","sourceOld":"  /** Checks if the rectangle contains the provided point **/\n  public boolean queryContainsPoint(int x, int y) {\n    if (this.crossesDateline() == true) {\n      return bboxContainsPoint(x, y, MIN_LON_ENCODED, this.maxX, this.minY, this.maxY)\n          || bboxContainsPoint(x, y, this.minX, MAX_LON_ENCODED, this.minY, this.maxY);\n    }\n    return bboxContainsPoint(x, y, this.minX, this.maxX, this.minY, this.maxY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9feee35369998c08f5168e0808e67e09857d5bac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["9feee35369998c08f5168e0808e67e09857d5bac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c1e6d465800c73af60624bf9d4459a19f7940c"]},"commit2Childs":{"9feee35369998c08f5168e0808e67e09857d5bac":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9feee35369998c08f5168e0808e67e09857d5bac"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}