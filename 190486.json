{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#fetchNextRow().mjava","commits":[{"id":"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","date":1217446558,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#fetchNextRow().mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private Map<String, Object> fetchNextRow() {\n    Map<String, Object> r = null;\n    while (true) {\n      if (rowcache != null)\n        return getFromRowCache();\n      if (rowIterator == null)\n        initQuery(resolver.replaceTokens(context.getEntityAttribute(URL)));\n      r = getNext();\n      if (r == null) {\n        Object hasMore = getSessionAttribute(HAS_MORE);\n        if (\"true\".equals(hasMore) || Boolean.TRUE.equals(hasMore)) {\n          String url = (String) getSessionAttribute(NEXT_URL);\n          if (url == null)\n            url = context.getEntityAttribute(URL);\n          Map namespace = (Map) getSessionAttribute(entityName);\n          if (namespace != null)\n            resolver.addNamespace(entityName, namespace);\n          clearSession();\n          initQuery(resolver.replaceTokens(url));\n          r = getNext();\n          if (r == null)\n            return null;\n        } else {\n          return null;\n        }\n      }\n      r = applyTransformer(r);\n      if (r != null)\n        return readUsefulVars(r);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["b00e0aa06008186097fa58226457033d5b6cee0d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d183f54b5c7a1c64bd2935a5d5bd71091ebe4198","date":1235539651,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#fetchNextRow().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#fetchNextRow().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private Map<String, Object> fetchNextRow() {\n    Map<String, Object> r = null;\n    while (true) {\n      if (rowcache != null)\n        return getFromRowCache();\n      if (rowIterator == null)\n        initQuery(resolver.replaceTokens(context.getEntityAttribute(URL)));\n      r = getNext();\n      if (r == null) {\n        Object hasMore = context.getSessionAttribute(HAS_MORE, Context.SCOPE_ENTITY);\n        if (\"true\".equals(hasMore) || Boolean.TRUE.equals(hasMore)) {\n          String url = (String) context.getSessionAttribute(NEXT_URL, Context.SCOPE_ENTITY);\n          if (url == null)\n            url = context.getEntityAttribute(URL);\n          addNamespace();\n          initQuery(resolver.replaceTokens(url));\n          r = getNext();\n          if (r == null)\n            return null;\n        } else {\n          return null;\n        }\n      }\n      addCommonFields(r);\n      r = applyTransformer(r);\n      if (r != null)\n        return readUsefulVars(r);\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private Map<String, Object> fetchNextRow() {\n    Map<String, Object> r = null;\n    while (true) {\n      if (rowcache != null)\n        return getFromRowCache();\n      if (rowIterator == null)\n        initQuery(resolver.replaceTokens(context.getEntityAttribute(URL)));\n      r = getNext();\n      if (r == null) {\n        Object hasMore = getSessionAttribute(HAS_MORE);\n        if (\"true\".equals(hasMore) || Boolean.TRUE.equals(hasMore)) {\n          String url = (String) getSessionAttribute(NEXT_URL);\n          if (url == null)\n            url = context.getEntityAttribute(URL);\n          Map namespace = (Map) getSessionAttribute(entityName);\n          if (namespace != null)\n            resolver.addNamespace(entityName, namespace);\n          clearSession();\n          initQuery(resolver.replaceTokens(url));\n          r = getNext();\n          if (r == null)\n            return null;\n        } else {\n          return null;\n        }\n      }\n      r = applyTransformer(r);\n      if (r != null)\n        return readUsefulVars(r);\n    }\n  }\n\n","bugFix":null,"bugIntro":["b00e0aa06008186097fa58226457033d5b6cee0d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"758fdd153bb361b47f22db79ace6af6f6b7b9330","date":1240213015,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#fetchNextRow().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#fetchNextRow().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private Map<String, Object> fetchNextRow() {\n    Map<String, Object> r = null;\n    while (true) {\n      if (rowIterator == null)\n        initQuery(resolver.replaceTokens(context.getEntityAttribute(URL)));\n      r = getNext();\n      if (r == null) {\n        Object hasMore = context.getSessionAttribute(HAS_MORE, Context.SCOPE_ENTITY);\n        if (\"true\".equals(hasMore) || Boolean.TRUE.equals(hasMore)) {\n          String url = (String) context.getSessionAttribute(NEXT_URL, Context.SCOPE_ENTITY);\n          if (url == null)\n            url = context.getEntityAttribute(URL);\n          addNamespace();\n          initQuery(resolver.replaceTokens(url));\n          r = getNext();\n          if (r == null)\n            return null;\n        } else {\n          return null;\n        }\n      }\n      addCommonFields(r);\n      return r;\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private Map<String, Object> fetchNextRow() {\n    Map<String, Object> r = null;\n    while (true) {\n      if (rowcache != null)\n        return getFromRowCache();\n      if (rowIterator == null)\n        initQuery(resolver.replaceTokens(context.getEntityAttribute(URL)));\n      r = getNext();\n      if (r == null) {\n        Object hasMore = context.getSessionAttribute(HAS_MORE, Context.SCOPE_ENTITY);\n        if (\"true\".equals(hasMore) || Boolean.TRUE.equals(hasMore)) {\n          String url = (String) context.getSessionAttribute(NEXT_URL, Context.SCOPE_ENTITY);\n          if (url == null)\n            url = context.getEntityAttribute(URL);\n          addNamespace();\n          initQuery(resolver.replaceTokens(url));\n          r = getNext();\n          if (r == null)\n            return null;\n        } else {\n          return null;\n        }\n      }\n      addCommonFields(r);\n      r = applyTransformer(r);\n      if (r != null)\n        return readUsefulVars(r);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b00e0aa06008186097fa58226457033d5b6cee0d","date":1249293286,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#fetchNextRow().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#fetchNextRow().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private Map<String, Object> fetchNextRow() {\n    Map<String, Object> r = null;\n    while (true) {\n      if (rowIterator == null)\n        initQuery(resolver.replaceTokens(context.getEntityAttribute(URL)));\n      r = getNext();\n      if (r == null) {\n        Object hasMore = context.getSessionAttribute(HAS_MORE, Context.SCOPE_ENTITY);\n        try {\n          if (\"true\".equals(hasMore) || Boolean.TRUE.equals(hasMore)) {\n            String url = (String) context.getSessionAttribute(NEXT_URL, Context.SCOPE_ENTITY);\n            if (url == null)\n              url = context.getEntityAttribute(URL);\n            addNamespace();\n            initQuery(resolver.replaceTokens(url));\n            r = getNext();\n            if (r == null)\n              return null;\n          } else {\n            return null;\n          }\n        } finally {\n          context.setSessionAttribute(HAS_MORE,null,Context.SCOPE_ENTITY);\n          context.setSessionAttribute(NEXT_URL,null,Context.SCOPE_ENTITY);\n        }\n      }\n      addCommonFields(r);\n      return r;\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private Map<String, Object> fetchNextRow() {\n    Map<String, Object> r = null;\n    while (true) {\n      if (rowIterator == null)\n        initQuery(resolver.replaceTokens(context.getEntityAttribute(URL)));\n      r = getNext();\n      if (r == null) {\n        Object hasMore = context.getSessionAttribute(HAS_MORE, Context.SCOPE_ENTITY);\n        if (\"true\".equals(hasMore) || Boolean.TRUE.equals(hasMore)) {\n          String url = (String) context.getSessionAttribute(NEXT_URL, Context.SCOPE_ENTITY);\n          if (url == null)\n            url = context.getEntityAttribute(URL);\n          addNamespace();\n          initQuery(resolver.replaceTokens(url));\n          r = getNext();\n          if (r == null)\n            return null;\n        } else {\n          return null;\n        }\n      }\n      addCommonFields(r);\n      return r;\n    }\n  }\n\n","bugFix":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","d183f54b5c7a1c64bd2935a5d5bd71091ebe4198"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"153cc06382fdc94d0ea3db127eab860ae4310525","date":1260181667,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#fetchNextRow().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#fetchNextRow().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private Map<String, Object> fetchNextRow() {\n    Map<String, Object> r = null;\n    while (true) {\n      if (rowIterator == null)\n        initQuery(context.replaceTokens(context.getEntityAttribute(URL)));\n      r = getNext();\n      if (r == null) {\n        Object hasMore = context.getSessionAttribute(HAS_MORE, Context.SCOPE_ENTITY);\n        try {\n          if (\"true\".equals(hasMore) || Boolean.TRUE.equals(hasMore)) {\n            String url = (String) context.getSessionAttribute(NEXT_URL, Context.SCOPE_ENTITY);\n            if (url == null)\n              url = context.getEntityAttribute(URL);\n            addNamespace();\n            initQuery(context.replaceTokens(url));\n            r = getNext();\n            if (r == null)\n              return null;\n          } else {\n            return null;\n          }\n        } finally {\n          context.setSessionAttribute(HAS_MORE,null,Context.SCOPE_ENTITY);\n          context.setSessionAttribute(NEXT_URL,null,Context.SCOPE_ENTITY);\n        }\n      }\n      addCommonFields(r);\n      return r;\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private Map<String, Object> fetchNextRow() {\n    Map<String, Object> r = null;\n    while (true) {\n      if (rowIterator == null)\n        initQuery(resolver.replaceTokens(context.getEntityAttribute(URL)));\n      r = getNext();\n      if (r == null) {\n        Object hasMore = context.getSessionAttribute(HAS_MORE, Context.SCOPE_ENTITY);\n        try {\n          if (\"true\".equals(hasMore) || Boolean.TRUE.equals(hasMore)) {\n            String url = (String) context.getSessionAttribute(NEXT_URL, Context.SCOPE_ENTITY);\n            if (url == null)\n              url = context.getEntityAttribute(URL);\n            addNamespace();\n            initQuery(resolver.replaceTokens(url));\n            r = getNext();\n            if (r == null)\n              return null;\n          } else {\n            return null;\n          }\n        } finally {\n          context.setSessionAttribute(HAS_MORE,null,Context.SCOPE_ENTITY);\n          context.setSessionAttribute(NEXT_URL,null,Context.SCOPE_ENTITY);\n        }\n      }\n      addCommonFields(r);\n      return r;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#fetchNextRow().mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathEntityProcessor#fetchNextRow().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private Map<String, Object> fetchNextRow() {\n    Map<String, Object> r = null;\n    while (true) {\n      if (rowIterator == null)\n        initQuery(context.replaceTokens(context.getEntityAttribute(URL)));\n      r = getNext();\n      if (r == null) {\n        Object hasMore = context.getSessionAttribute(HAS_MORE, Context.SCOPE_ENTITY);\n        try {\n          if (\"true\".equals(hasMore) || Boolean.TRUE.equals(hasMore)) {\n            String url = (String) context.getSessionAttribute(NEXT_URL, Context.SCOPE_ENTITY);\n            if (url == null)\n              url = context.getEntityAttribute(URL);\n            addNamespace();\n            initQuery(context.replaceTokens(url));\n            r = getNext();\n            if (r == null)\n              return null;\n          } else {\n            return null;\n          }\n        } finally {\n          context.setSessionAttribute(HAS_MORE,null,Context.SCOPE_ENTITY);\n          context.setSessionAttribute(NEXT_URL,null,Context.SCOPE_ENTITY);\n        }\n      }\n      addCommonFields(r);\n      return r;\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private Map<String, Object> fetchNextRow() {\n    Map<String, Object> r = null;\n    while (true) {\n      if (rowIterator == null)\n        initQuery(context.replaceTokens(context.getEntityAttribute(URL)));\n      r = getNext();\n      if (r == null) {\n        Object hasMore = context.getSessionAttribute(HAS_MORE, Context.SCOPE_ENTITY);\n        try {\n          if (\"true\".equals(hasMore) || Boolean.TRUE.equals(hasMore)) {\n            String url = (String) context.getSessionAttribute(NEXT_URL, Context.SCOPE_ENTITY);\n            if (url == null)\n              url = context.getEntityAttribute(URL);\n            addNamespace();\n            initQuery(context.replaceTokens(url));\n            r = getNext();\n            if (r == null)\n              return null;\n          } else {\n            return null;\n          }\n        } finally {\n          context.setSessionAttribute(HAS_MORE,null,Context.SCOPE_ENTITY);\n          context.setSessionAttribute(NEXT_URL,null,Context.SCOPE_ENTITY);\n        }\n      }\n      addCommonFields(r);\n      return r;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"d183f54b5c7a1c64bd2935a5d5bd71091ebe4198":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"758fdd153bb361b47f22db79ace6af6f6b7b9330":["d183f54b5c7a1c64bd2935a5d5bd71091ebe4198"],"b00e0aa06008186097fa58226457033d5b6cee0d":["758fdd153bb361b47f22db79ace6af6f6b7b9330"],"ad94625fb8d088209f46650c8097196fec67f00c":["153cc06382fdc94d0ea3db127eab860ae4310525"],"153cc06382fdc94d0ea3db127eab860ae4310525":["b00e0aa06008186097fa58226457033d5b6cee0d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["d183f54b5c7a1c64bd2935a5d5bd71091ebe4198"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d183f54b5c7a1c64bd2935a5d5bd71091ebe4198":["758fdd153bb361b47f22db79ace6af6f6b7b9330"],"758fdd153bb361b47f22db79ace6af6f6b7b9330":["b00e0aa06008186097fa58226457033d5b6cee0d"],"b00e0aa06008186097fa58226457033d5b6cee0d":["153cc06382fdc94d0ea3db127eab860ae4310525"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"153cc06382fdc94d0ea3db127eab860ae4310525":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}