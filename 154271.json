{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter#reverseUnicode3(char[],int,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter#reverseUnicode3(char[],int,int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter#reverseUnicode3(char[],int,int).mjava","sourceNew":"  /**\n   * @deprecated (3.1) Remove this when support for 3.0 indexes is no longer needed.\n   */\n  @Deprecated\n  private static void reverseUnicode3( char[] buffer, int start, int len ){\n    if( len <= 1 ) return;\n    int num = len>>1;\n    for( int i = start; i < ( start + num ); i++ ){\n      char c = buffer[i];\n      buffer[i] = buffer[start * 2 + len - i - 1];\n      buffer[start * 2 + len - i - 1] = c;\n    }\n  }\n\n","sourceOld":"  /**\n   * @deprecated (3.1) Remove this when support for 3.0 indexes is no longer needed.\n   */\n  @Deprecated\n  private static void reverseUnicode3( char[] buffer, int start, int len ){\n    if( len <= 1 ) return;\n    int num = len>>1;\n    for( int i = start; i < ( start + num ); i++ ){\n      char c = buffer[i];\n      buffer[i] = buffer[start * 2 + len - i - 1];\n      buffer[start * 2 + len - i - 1] = c;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter#reverseUnicode3(char[],int,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * @deprecated (3.1) Remove this when support for 3.0 indexes is no longer needed.\n   */\n  @Deprecated\n  private static void reverseUnicode3( char[] buffer, int start, int len ){\n    if( len <= 1 ) return;\n    int num = len>>1;\n    for( int i = start; i < ( start + num ); i++ ){\n      char c = buffer[i];\n      buffer[i] = buffer[start * 2 + len - i - 1];\n      buffer[start * 2 + len - i - 1] = c;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}