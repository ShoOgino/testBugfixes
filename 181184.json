{"path":"src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuffer).mjava","commits":[{"id":"2cf2d6a8aa527ae2d11b26630eee5c9296d8d74e","date":1027293369,"type":0,"author":"gschwarz","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuffer).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Does some optimizations on the term. This optimisations are\n\t * contextual.\n\t *\n\t * @return  The term with the optimizations applied.\n\t */\n\tprivate void optimize( StringBuffer buffer ) {\n\t\t// Additional step for female plurals of professions and inhabitants.\n\t\tif ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n\t\t\tbuffer.deleteCharAt( buffer.length() -1 );\n\t\t\tstrip( buffer );\n\t\t}\n\t\t// Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n\t\tif ( buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n\t\t\tbuffer.setCharAt( buffer.length() - 1, 'x' );\n\t\t}\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1b51af49aa8e1c86a2453fc1d1b618effb6ec8e","date":1029691996,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuffer).mjava","pathOld":"src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuffer).mjava","sourceNew":"    /**\n     * Does some optimizations on the term. This optimisations are\n     * contextual.\n     *\n     * @return  The term with the optimizations applied.\n     */\n    private void optimize( StringBuffer buffer )\n    {\n\t// Additional step for female plurals of professions and inhabitants.\n\tif ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n\t    buffer.deleteCharAt( buffer.length() -1 );\n\t    strip( buffer );\n\t}\n\t// Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n\tif ( buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n\t    buffer.setCharAt( buffer.length() - 1, 'x' );\n\t}\n    }\n\n","sourceOld":"\t/**\n\t * Does some optimizations on the term. This optimisations are\n\t * contextual.\n\t *\n\t * @return  The term with the optimizations applied.\n\t */\n\tprivate void optimize( StringBuffer buffer ) {\n\t\t// Additional step for female plurals of professions and inhabitants.\n\t\tif ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n\t\t\tbuffer.deleteCharAt( buffer.length() -1 );\n\t\t\tstrip( buffer );\n\t\t}\n\t\t// Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n\t\tif ( buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n\t\t\tbuffer.setCharAt( buffer.length() - 1, 'x' );\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"add40802dfe0640e177eeb8b42c2c8c928ec85cc","date":1065658132,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuffer).mjava","pathOld":"src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuffer).mjava","sourceNew":"    /**\n     * Does some optimizations on the term. This optimisations are\n     * contextual.\n     */\n    private void optimize( StringBuffer buffer )\n    {\n\t// Additional step for female plurals of professions and inhabitants.\n\tif ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n\t    buffer.deleteCharAt( buffer.length() -1 );\n\t    strip( buffer );\n\t}\n\t// Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n\tif ( buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n\t    buffer.setCharAt( buffer.length() - 1, 'x' );\n\t}\n    }\n\n","sourceOld":"    /**\n     * Does some optimizations on the term. This optimisations are\n     * contextual.\n     *\n     * @return  The term with the optimizations applied.\n     */\n    private void optimize( StringBuffer buffer )\n    {\n\t// Additional step for female plurals of professions and inhabitants.\n\tif ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n\t    buffer.deleteCharAt( buffer.length() -1 );\n\t    strip( buffer );\n\t}\n\t// Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n\tif ( buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n\t    buffer.setCharAt( buffer.length() - 1, 'x' );\n\t}\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d195ac4f5f0fd16249e88707973706feb1214df0","date":1080662088,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuffer).mjava","pathOld":"src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuffer).mjava","sourceNew":"    /**\n     * Does some optimizations on the term. This optimisations are\n     * contextual.\n     */\n    private void optimize( StringBuffer buffer )\n    {\n      // Additional step for female plurals of professions and inhabitants.\n      if ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n        buffer.deleteCharAt( buffer.length() -1 );\n        strip( buffer );\n      }\n      // Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n      if ( buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n        buffer.setCharAt( buffer.length() - 1, 'x' );\n      }\n    }\n\n","sourceOld":"    /**\n     * Does some optimizations on the term. This optimisations are\n     * contextual.\n     */\n    private void optimize( StringBuffer buffer )\n    {\n\t// Additional step for female plurals of professions and inhabitants.\n\tif ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n\t    buffer.deleteCharAt( buffer.length() -1 );\n\t    strip( buffer );\n\t}\n\t// Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n\tif ( buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n\t    buffer.setCharAt( buffer.length() - 1, 'x' );\n\t}\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2","date":1092688309,"type":4,"author":"Daniel Naber","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuffer).mjava","sourceNew":null,"sourceOld":"    /**\n     * Does some optimizations on the term. This optimisations are\n     * contextual.\n     */\n    private void optimize( StringBuffer buffer )\n    {\n      // Additional step for female plurals of professions and inhabitants.\n      if ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n        buffer.deleteCharAt( buffer.length() -1 );\n        strip( buffer );\n      }\n      // Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n      if ( buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n        buffer.setCharAt( buffer.length() - 1, 'x' );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"add40802dfe0640e177eeb8b42c2c8c928ec85cc":["f1b51af49aa8e1c86a2453fc1d1b618effb6ec8e"],"eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2":["d195ac4f5f0fd16249e88707973706feb1214df0"],"d195ac4f5f0fd16249e88707973706feb1214df0":["add40802dfe0640e177eeb8b42c2c8c928ec85cc"],"f1b51af49aa8e1c86a2453fc1d1b618effb6ec8e":["2cf2d6a8aa527ae2d11b26630eee5c9296d8d74e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2cf2d6a8aa527ae2d11b26630eee5c9296d8d74e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2"]},"commit2Childs":{"add40802dfe0640e177eeb8b42c2c8c928ec85cc":["d195ac4f5f0fd16249e88707973706feb1214df0"],"eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f1b51af49aa8e1c86a2453fc1d1b618effb6ec8e":["add40802dfe0640e177eeb8b42c2c8c928ec85cc"],"d195ac4f5f0fd16249e88707973706feb1214df0":["eb502dc71e908fb2c30e64b73e1f7e7b6238f5a2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2cf2d6a8aa527ae2d11b26630eee5c9296d8d74e"],"2cf2d6a8aa527ae2d11b26630eee5c9296d8d74e":["f1b51af49aa8e1c86a2453fc1d1b618effb6ec8e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}