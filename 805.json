{"path":"lucene/src/java/org/apache/lucene/index/FrozenBufferedDeletes#queriesIterable().mjava","commits":[{"id":"69a6d2d525aeab53c867ed26934185e5bb627d0e","date":1296516902,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FrozenBufferedDeletes#queriesIterable().mjava","pathOld":"/dev/null","sourceNew":"  public Iterable<QueryAndLimit> queriesIterable() {\n    return new Iterable<QueryAndLimit>() {\n      // @Override -- not until Java 1.6\n      public Iterator<QueryAndLimit> iterator() {\n        return new Iterator<QueryAndLimit>() {\n          private int upto;\n\n          // @Override -- not until Java 1.6\n          public boolean hasNext() {\n            return upto < queries.length;\n          }\n\n          // @Override -- not until Java 1.6\n          public QueryAndLimit next() {\n            QueryAndLimit ret = new QueryAndLimit(queries[upto], queryLimits[upto]);\n            upto++;\n            return ret;\n          }\n\n          // @Override -- not until Java 1.6\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FrozenBufferedDeletes#queriesIterable().mjava","pathOld":"/dev/null","sourceNew":"  public Iterable<QueryAndLimit> queriesIterable() {\n    return new Iterable<QueryAndLimit>() {\n      // @Override -- not until Java 1.6\n      public Iterator<QueryAndLimit> iterator() {\n        return new Iterator<QueryAndLimit>() {\n          private int upto;\n\n          // @Override -- not until Java 1.6\n          public boolean hasNext() {\n            return upto < queries.length;\n          }\n\n          // @Override -- not until Java 1.6\n          public QueryAndLimit next() {\n            QueryAndLimit ret = new QueryAndLimit(queries[upto], queryLimits[upto]);\n            upto++;\n            return ret;\n          }\n\n          // @Override -- not until Java 1.6\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FrozenBufferedDeletes#queriesIterable().mjava","pathOld":"/dev/null","sourceNew":"  public Iterable<QueryAndLimit> queriesIterable() {\n    return new Iterable<QueryAndLimit>() {\n      // @Override -- not until Java 1.6\n      public Iterator<QueryAndLimit> iterator() {\n        return new Iterator<QueryAndLimit>() {\n          private int upto;\n\n          // @Override -- not until Java 1.6\n          public boolean hasNext() {\n            return upto < queries.length;\n          }\n\n          // @Override -- not until Java 1.6\n          public QueryAndLimit next() {\n            QueryAndLimit ret = new QueryAndLimit(queries[upto], queryLimits[upto]);\n            upto++;\n            return ret;\n          }\n\n          // @Override -- not until Java 1.6\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9b7b579125f96af579b1c85930f519dee4f32c3","date":1309436076,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FrozenBufferedDeletes#queriesIterable().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FrozenBufferedDeletes#queriesIterable().mjava","sourceNew":"  public Iterable<QueryAndLimit> queriesIterable() {\n    return new Iterable<QueryAndLimit>() {\n      @Override\n      public Iterator<QueryAndLimit> iterator() {\n        return new Iterator<QueryAndLimit>() {\n          private int upto;\n\n          @Override\n          public boolean hasNext() {\n            return upto < queries.length;\n          }\n\n          @Override\n          public QueryAndLimit next() {\n            QueryAndLimit ret = new QueryAndLimit(queries[upto], queryLimits[upto]);\n            upto++;\n            return ret;\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":"  public Iterable<QueryAndLimit> queriesIterable() {\n    return new Iterable<QueryAndLimit>() {\n      // @Override -- not until Java 1.6\n      public Iterator<QueryAndLimit> iterator() {\n        return new Iterator<QueryAndLimit>() {\n          private int upto;\n\n          // @Override -- not until Java 1.6\n          public boolean hasNext() {\n            return upto < queries.length;\n          }\n\n          // @Override -- not until Java 1.6\n          public QueryAndLimit next() {\n            QueryAndLimit ret = new QueryAndLimit(queries[upto], queryLimits[upto]);\n            upto++;\n            return ret;\n          }\n\n          // @Override -- not until Java 1.6\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FrozenBufferedDeletes#queriesIterable().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FrozenBufferedDeletes#queriesIterable().mjava","sourceNew":"  public Iterable<QueryAndLimit> queriesIterable() {\n    return new Iterable<QueryAndLimit>() {\n      @Override\n      public Iterator<QueryAndLimit> iterator() {\n        return new Iterator<QueryAndLimit>() {\n          private int upto;\n\n          @Override\n          public boolean hasNext() {\n            return upto < queries.length;\n          }\n\n          @Override\n          public QueryAndLimit next() {\n            QueryAndLimit ret = new QueryAndLimit(queries[upto], queryLimits[upto]);\n            upto++;\n            return ret;\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":"  public Iterable<QueryAndLimit> queriesIterable() {\n    return new Iterable<QueryAndLimit>() {\n      // @Override -- not until Java 1.6\n      public Iterator<QueryAndLimit> iterator() {\n        return new Iterator<QueryAndLimit>() {\n          private int upto;\n\n          // @Override -- not until Java 1.6\n          public boolean hasNext() {\n            return upto < queries.length;\n          }\n\n          // @Override -- not until Java 1.6\n          public QueryAndLimit next() {\n            QueryAndLimit ret = new QueryAndLimit(queries[upto], queryLimits[upto]);\n            upto++;\n            return ret;\n          }\n\n          // @Override -- not until Java 1.6\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FrozenBufferedDeletes#queriesIterable().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FrozenBufferedDeletes#queriesIterable().mjava","sourceNew":"  public Iterable<QueryAndLimit> queriesIterable() {\n    return new Iterable<QueryAndLimit>() {\n      @Override\n      public Iterator<QueryAndLimit> iterator() {\n        return new Iterator<QueryAndLimit>() {\n          private int upto;\n\n          @Override\n          public boolean hasNext() {\n            return upto < queries.length;\n          }\n\n          @Override\n          public QueryAndLimit next() {\n            QueryAndLimit ret = new QueryAndLimit(queries[upto], queryLimits[upto]);\n            upto++;\n            return ret;\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":"  public Iterable<QueryAndLimit> queriesIterable() {\n    return new Iterable<QueryAndLimit>() {\n      // @Override -- not until Java 1.6\n      public Iterator<QueryAndLimit> iterator() {\n        return new Iterator<QueryAndLimit>() {\n          private int upto;\n\n          // @Override -- not until Java 1.6\n          public boolean hasNext() {\n            return upto < queries.length;\n          }\n\n          // @Override -- not until Java 1.6\n          public QueryAndLimit next() {\n            QueryAndLimit ret = new QueryAndLimit(queries[upto], queryLimits[upto]);\n            upto++;\n            return ret;\n          }\n\n          // @Override -- not until Java 1.6\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedDeletes#queriesIterable().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FrozenBufferedDeletes#queriesIterable().mjava","sourceNew":"  public Iterable<QueryAndLimit> queriesIterable() {\n    return new Iterable<QueryAndLimit>() {\n      @Override\n      public Iterator<QueryAndLimit> iterator() {\n        return new Iterator<QueryAndLimit>() {\n          private int upto;\n\n          @Override\n          public boolean hasNext() {\n            return upto < queries.length;\n          }\n\n          @Override\n          public QueryAndLimit next() {\n            QueryAndLimit ret = new QueryAndLimit(queries[upto], queryLimits[upto]);\n            upto++;\n            return ret;\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":"  public Iterable<QueryAndLimit> queriesIterable() {\n    return new Iterable<QueryAndLimit>() {\n      @Override\n      public Iterator<QueryAndLimit> iterator() {\n        return new Iterator<QueryAndLimit>() {\n          private int upto;\n\n          @Override\n          public boolean hasNext() {\n            return upto < queries.length;\n          }\n\n          @Override\n          public QueryAndLimit next() {\n            QueryAndLimit ret = new QueryAndLimit(queries[upto], queryLimits[upto]);\n            upto++;\n            return ret;\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d9b7b579125f96af579b1c85930f519dee4f32c3":["69a6d2d525aeab53c867ed26934185e5bb627d0e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d9b7b579125f96af579b1c85930f519dee4f32c3"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","69a6d2d525aeab53c867ed26934185e5bb627d0e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"69a6d2d525aeab53c867ed26934185e5bb627d0e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["69a6d2d525aeab53c867ed26934185e5bb627d0e","d9b7b579125f96af579b1c85930f519dee4f32c3"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["69a6d2d525aeab53c867ed26934185e5bb627d0e","d9b7b579125f96af579b1c85930f519dee4f32c3"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","69a6d2d525aeab53c867ed26934185e5bb627d0e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"d9b7b579125f96af579b1c85930f519dee4f32c3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","69a6d2d525aeab53c867ed26934185e5bb627d0e","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"69a6d2d525aeab53c867ed26934185e5bb627d0e":["d9b7b579125f96af579b1c85930f519dee4f32c3","29ef99d61cda9641b6250bf9567329a6e65f901d","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}