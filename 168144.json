{"path":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#validateControlData(QueryResponse).mjava","commits":[{"id":"3a207aeb3e27baa146de0bead73cf0fd8883111c","date":1329321152,"type":0,"author":"James Dyer","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#validateControlData(QueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Implementations can pre-test the control data for basic correctness before using it\n   * as a check for the shard data.  This is useful, for instance, if a test bug is introduced\n   * causing a spelling index not to get built:  both control & shard data would have no results\n   * but because they match the test would pass.  This method gives us a chance to ensure something\n   * exists in the control data.\n   * \n   * @throws Exception\n   */\n  public void validateControlData(QueryResponse control) throws Exception {\n    /* no-op */\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#validateControlData(QueryResponse).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#validateControlData(QueryResponse).mjava","sourceNew":"  /**\n   * Implementations can pre-test the control data for basic correctness before using it\n   * as a check for the shard data.  This is useful, for instance, if a test bug is introduced\n   * causing a spelling index not to get built:  both control & shard data would have no results\n   * but because they match the test would pass.  This method gives us a chance to ensure something\n   * exists in the control data.\n   */\n  public void validateControlData(QueryResponse control) throws Exception {\n    /* no-op */\n  }\n\n","sourceOld":"  /**\n   * Implementations can pre-test the control data for basic correctness before using it\n   * as a check for the shard data.  This is useful, for instance, if a test bug is introduced\n   * causing a spelling index not to get built:  both control & shard data would have no results\n   * but because they match the test would pass.  This method gives us a chance to ensure something\n   * exists in the control data.\n   * \n   * @throws Exception\n   */\n  public void validateControlData(QueryResponse control) throws Exception {\n    /* no-op */\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","date":1423508552,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#validateControlData(QueryResponse).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/BaseDistributedSearchTestCase#validateControlData(QueryResponse).mjava","sourceNew":"  /**\n   * Implementations can pre-test the control data for basic correctness before using it\n   * as a check for the shard data.  This is useful, for instance, if a test bug is introduced\n   * causing a spelling index not to get built:  both control &amp; shard data would have no results\n   * but because they match the test would pass.  This method gives us a chance to ensure something\n   * exists in the control data.\n   */\n  public void validateControlData(QueryResponse control) throws Exception {\n    /* no-op */\n  }\n\n","sourceOld":"  /**\n   * Implementations can pre-test the control data for basic correctness before using it\n   * as a check for the shard data.  This is useful, for instance, if a test bug is introduced\n   * causing a spelling index not to get built:  both control & shard data would have no results\n   * but because they match the test would pass.  This method gives us a chance to ensure something\n   * exists in the control data.\n   */\n  public void validateControlData(QueryResponse control) throws Exception {\n    /* no-op */\n  }\n\n","bugFix":["3a207aeb3e27baa146de0bead73cf0fd8883111c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["3a207aeb3e27baa146de0bead73cf0fd8883111c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"3a207aeb3e27baa146de0bead73cf0fd8883111c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a207aeb3e27baa146de0bead73cf0fd8883111c"],"3a207aeb3e27baa146de0bead73cf0fd8883111c":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}