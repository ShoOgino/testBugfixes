{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParser#setSplitOnWhitespace(boolean).mjava","commits":[{"id":"138a352a6d4e54824d0275bc7aa1b784e78c81fe","date":1467756222,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParser#setSplitOnWhitespace(boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Whether query text should be split on whitespace prior to analysis.\n   * Default is <code>{@value #DEFAULT_SPLIT_ON_WHITESPACE}</code>.\n   */\n  public void setSplitOnWhitespace(boolean splitOnWhitespace) {\n    this.splitOnWhitespace = splitOnWhitespace;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParser#setSplitOnWhitespace(boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Whether query text should be split on whitespace prior to analysis.\n   * Default is <code>{@value #DEFAULT_SPLIT_ON_WHITESPACE}</code>.\n   */\n  public void setSplitOnWhitespace(boolean splitOnWhitespace) {\n    this.splitOnWhitespace = splitOnWhitespace;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d610f871e456a170bec00f4e3cb584769c6b9ec","date":1479428298,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParser#setSplitOnWhitespace(boolean).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParser#setSplitOnWhitespace(boolean).mjava","sourceNew":"  /**\n   * Whether query text should be split on whitespace prior to analysis.\n   * Default is <code>{@value #DEFAULT_SPLIT_ON_WHITESPACE}</code>.\n   * <p>\n   * The combination splitOnWhitespace=false and autoGeneratePhraseQueries=true\n   * is disallowed.  See <a href=\"https://issues.apache.org/jira/browse/LUCENE-7533\">LUCENE-7533</a>.\n   */\n  public void setSplitOnWhitespace(boolean splitOnWhitespace) {\n    if (splitOnWhitespace == false && getAutoGeneratePhraseQueries() == true) {\n      throw new IllegalArgumentException\n          (\"setSplitOnWhitespace(false) is disallowed when getAutoGeneratePhraseQueries() == true\");\n    }\n    this.splitOnWhitespace = splitOnWhitespace;\n  }\n\n","sourceOld":"  /**\n   * Whether query text should be split on whitespace prior to analysis.\n   * Default is <code>{@value #DEFAULT_SPLIT_ON_WHITESPACE}</code>.\n   */\n  public void setSplitOnWhitespace(boolean splitOnWhitespace) {\n    this.splitOnWhitespace = splitOnWhitespace;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e859e664a65796dadf8aaf65db6f66f3a885368","date":1479487334,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParser#setSplitOnWhitespace(boolean).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParser#setSplitOnWhitespace(boolean).mjava","sourceNew":"  /**\n   * Whether query text should be split on whitespace prior to analysis.\n   * Default is <code>{@value #DEFAULT_SPLIT_ON_WHITESPACE}</code>.\n   * <p>\n   * The combination splitOnWhitespace=false and autoGeneratePhraseQueries=true\n   * is disallowed.  See <a href=\"https://issues.apache.org/jira/browse/LUCENE-7533\">LUCENE-7533</a>.\n   */\n  public void setSplitOnWhitespace(boolean splitOnWhitespace) {\n    if (splitOnWhitespace == false && getAutoGeneratePhraseQueries() == true) {\n      throw new IllegalArgumentException\n          (\"setSplitOnWhitespace(false) is disallowed when getAutoGeneratePhraseQueries() == true\");\n    }\n    this.splitOnWhitespace = splitOnWhitespace;\n  }\n\n","sourceOld":"  /**\n   * Whether query text should be split on whitespace prior to analysis.\n   * Default is <code>{@value #DEFAULT_SPLIT_ON_WHITESPACE}</code>.\n   */\n  public void setSplitOnWhitespace(boolean splitOnWhitespace) {\n    this.splitOnWhitespace = splitOnWhitespace;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"138a352a6d4e54824d0275bc7aa1b784e78c81fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8d610f871e456a170bec00f4e3cb584769c6b9ec":["138a352a6d4e54824d0275bc7aa1b784e78c81fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2e859e664a65796dadf8aaf65db6f66f3a885368":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","8d610f871e456a170bec00f4e3cb584769c6b9ec"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","138a352a6d4e54824d0275bc7aa1b784e78c81fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8d610f871e456a170bec00f4e3cb584769c6b9ec"]},"commit2Childs":{"138a352a6d4e54824d0275bc7aa1b784e78c81fe":["8d610f871e456a170bec00f4e3cb584769c6b9ec","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"8d610f871e456a170bec00f4e3cb584769c6b9ec":["2e859e664a65796dadf8aaf65db6f66f3a885368","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["138a352a6d4e54824d0275bc7aa1b784e78c81fe","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"2e859e664a65796dadf8aaf65db6f66f3a885368":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["2e859e664a65796dadf8aaf65db6f66f3a885368"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2e859e664a65796dadf8aaf65db6f66f3a885368","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}