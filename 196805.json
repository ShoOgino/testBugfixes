{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrClient.Builder#withZkHost(Collection[String]).mjava","commits":[{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrClient.Builder#withZkHost(Collection[String]).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Provide a series of ZooKeeper client endpoints for the builder to use when creating clients.\n     * \n     * Method may be called multiple times.  All provided values will be used.\n     * \n     * @param zkHosts\n     *          A Java Collection (List, Set, etc) of HOST:PORT strings, one for\n     *          each host in the ZooKeeper ensemble. Note that with certain\n     *          Collection types like HashSet, the order of hosts in the final\n     *          connect string may not be in the same order you added them.\n     */\n    public Builder withZkHost(Collection<String> zkHosts) {\n      this.zkHosts.addAll(zkHosts);\n      return this;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrClient.Builder#withZkHost(Collection[String]).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Provide a series of ZooKeeper client endpoints for the builder to use when creating clients.\n     * \n     * Method may be called multiple times.  All provided values will be used.\n     * \n     * @param zkHosts\n     *          A Java Collection (List, Set, etc) of HOST:PORT strings, one for\n     *          each host in the ZooKeeper ensemble. Note that with certain\n     *          Collection types like HashSet, the order of hosts in the final\n     *          connect string may not be in the same order you added them.\n     */\n    public Builder withZkHost(Collection<String> zkHosts) {\n      this.zkHosts.addAll(zkHosts);\n      return this;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7d763eff38c4e1702b60d626f9c8d39f9ad8af8","date":1520696743,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrClient.Builder#withZkHost(Collection[String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/CloudSolrClient.Builder#withZkHost(Collection[String]).mjava","sourceNew":"    /**\n     * Provide a series of ZooKeeper client endpoints for the builder to use when creating clients.\n     * \n     * Method may be called multiple times.  All provided values will be used.\n     * \n     * @param zkHosts\n     *          A Java Collection (List, Set, etc) of HOST:PORT strings, one for\n     *          each host in the ZooKeeper ensemble. Note that with certain\n     *          Collection types like HashSet, the order of hosts in the final\n     *          connect string may not be in the same order you added them.\n     *          \n     * @deprecated use Zk-host constructor instead\n     */\n    @Deprecated\n    public Builder withZkHost(Collection<String> zkHosts) {\n      this.zkHosts.addAll(zkHosts);\n      return this;\n    }\n\n","sourceOld":"    /**\n     * Provide a series of ZooKeeper client endpoints for the builder to use when creating clients.\n     * \n     * Method may be called multiple times.  All provided values will be used.\n     * \n     * @param zkHosts\n     *          A Java Collection (List, Set, etc) of HOST:PORT strings, one for\n     *          each host in the ZooKeeper ensemble. Note that with certain\n     *          Collection types like HashSet, the order of hosts in the final\n     *          connect string may not be in the same order you added them.\n     */\n    public Builder withZkHost(Collection<String> zkHosts) {\n      this.zkHosts.addAll(zkHosts);\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7d763eff38c4e1702b60d626f9c8d39f9ad8af8":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c7d763eff38c4e1702b60d626f9c8d39f9ad8af8"]},"commit2Childs":{"c7d763eff38c4e1702b60d626f9c8d39f9ad8af8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["c7d763eff38c4e1702b60d626f9c8d39f9ad8af8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}