{"path":"solr/core/src/java/org/apache/solr/core/DirectoryFactory#getDataHome(CoreDescriptor).mjava","commits":[{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/DirectoryFactory#getDataHome(CoreDescriptor).mjava","pathOld":"/dev/null","sourceNew":"  public String getDataHome(CoreDescriptor cd) throws IOException {\n    // by default, we go off the instance directory\n    return normalize(SolrResourceLoader.normalizeDir(cd.getInstanceDir()) + cd.getDataDir());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/DirectoryFactory#getDataHome(CoreDescriptor).mjava","pathOld":"/dev/null","sourceNew":"  public String getDataHome(CoreDescriptor cd) throws IOException {\n    // by default, we go off the instance directory\n    return normalize(SolrResourceLoader.normalizeDir(cd.getInstanceDir()) + cd.getDataDir());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19","date":1400739326,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/DirectoryFactory#getDataHome(CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/DirectoryFactory#getDataHome(CoreDescriptor).mjava","sourceNew":"  public String getDataHome(CoreDescriptor cd) throws IOException {\n    // by default, we go off the instance directory\n    String instanceDir = new File(cd.getInstanceDir()).getAbsolutePath();\n    return normalize(SolrResourceLoader.normalizeDir(instanceDir) + cd.getDataDir());\n  }\n\n","sourceOld":"  public String getDataHome(CoreDescriptor cd) throws IOException {\n    // by default, we go off the instance directory\n    return normalize(SolrResourceLoader.normalizeDir(cd.getInstanceDir()) + cd.getDataDir());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/DirectoryFactory#getDataHome(CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/DirectoryFactory#getDataHome(CoreDescriptor).mjava","sourceNew":"  public String getDataHome(CoreDescriptor cd) throws IOException {\n    // by default, we go off the instance directory\n    String instanceDir = new File(cd.getInstanceDir()).getAbsolutePath();\n    return normalize(SolrResourceLoader.normalizeDir(instanceDir) + cd.getDataDir());\n  }\n\n","sourceOld":"  public String getDataHome(CoreDescriptor cd) throws IOException {\n    // by default, we go off the instance directory\n    return normalize(SolrResourceLoader.normalizeDir(cd.getInstanceDir()) + cd.getDataDir());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","date":1448892165,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/DirectoryFactory#getDataHome(CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/DirectoryFactory#getDataHome(CoreDescriptor).mjava","sourceNew":"  public String getDataHome(CoreDescriptor cd) throws IOException {\n    // by default, we go off the instance directory\n    return cd.getInstanceDir().resolve(cd.getDataDir()).toAbsolutePath().toString();\n  }\n\n","sourceOld":"  public String getDataHome(CoreDescriptor cd) throws IOException {\n    // by default, we go off the instance directory\n    String instanceDir = new File(cd.getInstanceDir()).getAbsolutePath();\n    return normalize(SolrResourceLoader.normalizeDir(instanceDir) + cd.getDataDir());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3a5de1f264cc577bcb0bbb6fa6577df667974ca","date":1497957674,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/DirectoryFactory#getDataHome(CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/DirectoryFactory#getDataHome(CoreDescriptor).mjava","sourceNew":"  /**\n   * Get the data home folder. If solr.data.home is set, that is used, else base on instanceDir\n   * @param cd core descriptor instance\n   * @return a String with absolute path to data direcotry\n   */\n  public String getDataHome(CoreDescriptor cd) throws IOException {\n    String dataDir;\n    if (dataHomePath != null) {\n      String instanceDirLastPath = cd.getInstanceDir().getName(cd.getInstanceDir().getNameCount()-1).toString();\n      dataDir = Paths.get(coreContainer.getSolrHome()).resolve(dataHomePath)\n          .resolve(instanceDirLastPath).resolve(cd.getDataDir()).toAbsolutePath().toString();\n    } else {\n      // by default, we go off the instance directory\n      dataDir = cd.getInstanceDir().resolve(cd.getDataDir()).toAbsolutePath().toString();\n    }\n    return dataDir;\n  }\n\n","sourceOld":"  public String getDataHome(CoreDescriptor cd) throws IOException {\n    // by default, we go off the instance directory\n    return cd.getInstanceDir().resolve(cd.getDataDir()).toAbsolutePath().toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/DirectoryFactory#getDataHome(CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/DirectoryFactory#getDataHome(CoreDescriptor).mjava","sourceNew":"  /**\n   * Get the data home folder. If solr.data.home is set, that is used, else base on instanceDir\n   * @param cd core descriptor instance\n   * @return a String with absolute path to data direcotry\n   */\n  public String getDataHome(CoreDescriptor cd) throws IOException {\n    String dataDir;\n    if (dataHomePath != null) {\n      String instanceDirLastPath = cd.getInstanceDir().getName(cd.getInstanceDir().getNameCount()-1).toString();\n      dataDir = Paths.get(coreContainer.getSolrHome()).resolve(dataHomePath)\n          .resolve(instanceDirLastPath).resolve(cd.getDataDir()).toAbsolutePath().toString();\n    } else {\n      // by default, we go off the instance directory\n      dataDir = cd.getInstanceDir().resolve(cd.getDataDir()).toAbsolutePath().toString();\n    }\n    return dataDir;\n  }\n\n","sourceOld":"  public String getDataHome(CoreDescriptor cd) throws IOException {\n    // by default, we go off the instance directory\n    return cd.getInstanceDir().resolve(cd.getDataDir()).toAbsolutePath().toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/DirectoryFactory#getDataHome(CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/DirectoryFactory#getDataHome(CoreDescriptor).mjava","sourceNew":"  /**\n   * Get the data home folder. If solr.data.home is set, that is used, else base on instanceDir\n   * @param cd core descriptor instance\n   * @return a String with absolute path to data direcotry\n   */\n  public String getDataHome(CoreDescriptor cd) throws IOException {\n    String dataDir;\n    if (dataHomePath != null) {\n      String instanceDirLastPath = cd.getInstanceDir().getName(cd.getInstanceDir().getNameCount()-1).toString();\n      dataDir = Paths.get(coreContainer.getSolrHome()).resolve(dataHomePath)\n          .resolve(instanceDirLastPath).resolve(cd.getDataDir()).toAbsolutePath().toString();\n    } else {\n      // by default, we go off the instance directory\n      dataDir = cd.getInstanceDir().resolve(cd.getDataDir()).toAbsolutePath().toString();\n    }\n    return dataDir;\n  }\n\n","sourceOld":"  public String getDataHome(CoreDescriptor cd) throws IOException {\n    // by default, we go off the instance directory\n    return cd.getInstanceDir().resolve(cd.getDataDir()).toAbsolutePath().toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"078208fb22390fe404cc26e34a439c51e6318ed4","date":1591151812,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/DirectoryFactory#getDataHome(CoreDescriptor).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/DirectoryFactory#getDataHome(CoreDescriptor).mjava","sourceNew":"  /**\n   * Get the data home folder. If solr.data.home is set, that is used, else base on instanceDir\n   * @param cd core descriptor instance\n   * @return a String with absolute path to data direcotry\n   */\n  public String getDataHome(CoreDescriptor cd) throws IOException {\n    Path dataDir;\n    if (dataHomePath != null) {\n      Path instanceDirLastPath = cd.getInstanceDir().getName(cd.getInstanceDir().getNameCount()-1);\n      dataDir = dataHomePath.resolve(instanceDirLastPath).resolve(cd.getDataDir());\n    } else {\n      // by default, we go off the instance directory\n      dataDir = cd.getInstanceDir().resolve(cd.getDataDir());\n    }\n    assert dataDir.isAbsolute();\n    return dataDir.toString();\n  }\n\n","sourceOld":"  /**\n   * Get the data home folder. If solr.data.home is set, that is used, else base on instanceDir\n   * @param cd core descriptor instance\n   * @return a String with absolute path to data direcotry\n   */\n  public String getDataHome(CoreDescriptor cd) throws IOException {\n    String dataDir;\n    if (dataHomePath != null) {\n      String instanceDirLastPath = cd.getInstanceDir().getName(cd.getInstanceDir().getNameCount()-1).toString();\n      dataDir = Paths.get(coreContainer.getSolrHome()).resolve(dataHomePath)\n          .resolve(instanceDirLastPath).resolve(cd.getDataDir()).toAbsolutePath().toString();\n    } else {\n      // by default, we go off the instance directory\n      dataDir = cd.getInstanceDir().resolve(cd.getDataDir()).toAbsolutePath().toString();\n    }\n    return dataDir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b3a5de1f264cc577bcb0bbb6fa6577df667974ca":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"078208fb22390fe404cc26e34a439c51e6318ed4":["28288370235ed02234a64753cdbf0c6ec096304a"],"b7605579001505896d48b07160075a5c8b8e128e":["849494cf2f3a96af5c8c84995108ddd8456fcd04","4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"28288370235ed02234a64753cdbf0c6ec096304a":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","b3a5de1f264cc577bcb0bbb6fa6577df667974ca"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","b3a5de1f264cc577bcb0bbb6fa6577df667974ca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["078208fb22390fe404cc26e34a439c51e6318ed4"],"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19":["849494cf2f3a96af5c8c84995108ddd8456fcd04"]},"commit2Childs":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["37a0f60745e53927c4c876cfe5b5a58170f0646c","b7605579001505896d48b07160075a5c8b8e128e","4a9c941a7004ea2e95b10aa67dafa319ff8d8c19"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["b3a5de1f264cc577bcb0bbb6fa6577df667974ca","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["849494cf2f3a96af5c8c84995108ddd8456fcd04","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"b3a5de1f264cc577bcb0bbb6fa6577df667974ca":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"078208fb22390fe404cc26e34a439c51e6318ed4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b7605579001505896d48b07160075a5c8b8e128e":[],"28288370235ed02234a64753cdbf0c6ec096304a":["078208fb22390fe404cc26e34a439c51e6318ed4"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"4a9c941a7004ea2e95b10aa67dafa319ff8d8c19":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","b7605579001505896d48b07160075a5c8b8e128e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","b7605579001505896d48b07160075a5c8b8e128e","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}