{"path":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#checkIfDiffIsLegal(SolrDocumentList,SolrDocumentList,String,String,Set[String],Set[String]).mjava","commits":[{"id":"35b47293d52729d80d78492b2aeda6e45d5a42f1","date":1397788632,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#checkIfDiffIsLegal(SolrDocumentList,SolrDocumentList,String,String,Set[String],Set[String]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#checkForLegalDiff(SolrDocumentList,SolrDocumentList,String,String,Set[String],Set[String]).mjava","sourceNew":"  boolean checkIfDiffIsLegal(SolrDocumentList a, SolrDocumentList b, String aName, String bName, Set<String> addFails, Set<String> deleteFails) {\n    boolean legal = true;\n    Set<SolrDocument> setA = new HashSet<>();\n    for (SolrDocument sdoc : a) {\n      setA.add(sdoc);\n    }\n\n    Set<SolrDocument> setB = new HashSet<>();\n    for (SolrDocument sdoc : b) {\n      setB.add(sdoc);\n    }\n\n    Set<SolrDocument> onlyInA = new HashSet<>(setA);\n    onlyInA.removeAll(setB);\n    Set<SolrDocument> onlyInB = new HashSet<>(setB);\n    onlyInB.removeAll(setA);\n\n    for (SolrDocument doc : onlyInA) {\n      if (!addFails.contains(doc.getFirstValue(\"id\"))) {\n        legal = false;\n      } else {\n        System.err.println(\"###### Only in \" + aName + \": \" + onlyInA\n            + \", but this is expected because we found an add fail for \"\n            + doc.getFirstValue(\"id\"));\n      }\n    }\n      \n    for (SolrDocument doc : onlyInB) {\n      if (!deleteFails.contains(doc.getFirstValue(\"id\"))) {\n        legal = false;\n      } else {\n        System.err.println(\"###### Only in \" + bName + \": \" + onlyInB\n            + \", but this is expected because we found a delete fail for \"\n            + doc.getFirstValue(\"id\"));\n      }\n    }\n    \n    return legal;\n  }\n\n","sourceOld":"  boolean checkForLegalDiff(SolrDocumentList a, SolrDocumentList b, String aName, String bName, Set<String> addFails, Set<String> deleteFails) {\n    // System.err.println(\"######\"+aName+ \": \" + toStr(a,10));\n    //  System.err.println(\"######\"+bName+ \": \" + toStr(b,10));\n    //System.err.println(\"###### sizes=\" + a.size() + \",\" + b.size());\n    boolean legal = true;\n    Set<SolrDocument> setA = new HashSet<>();\n    for (SolrDocument sdoc : a) {\n      setA.add(sdoc);\n    }\n\n    Set<SolrDocument> setB = new HashSet<>();\n    for (SolrDocument sdoc : b) {\n      setB.add(sdoc);\n    }\n\n    Set<SolrDocument> onlyInA = new HashSet<>(setA);\n    onlyInA.removeAll(setB);\n    Set<SolrDocument> onlyInB = new HashSet<>(setB);\n    onlyInB.removeAll(setA);\n\n    for (SolrDocument doc : onlyInA) {\n      if (!addFails.contains(doc.getFirstValue(\"id\"))) {\n        legal = false;\n      } else {\n        System.err.println(\"###### Only in \" + aName + \": \" + onlyInA\n            + \", but this is expected because we found an add fail for \"\n            + doc.getFirstValue(\"id\"));\n      }\n    }\n      \n    for (SolrDocument doc : onlyInB) {\n      if (!deleteFails.contains(doc.getFirstValue(\"id\"))) {\n        legal = false;\n      } else {\n        System.err.println(\"###### Only in \" + bName + \": \" + onlyInB\n            + \", but this is expected because we found a delete fail for \"\n            + doc.getFirstValue(\"id\"));\n      }\n    }\n    \n    return legal;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4339eef0c1b12030c8590187e652cd1cd0a1f3cb","date":1397833225,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#checkIfDiffIsLegal(SolrDocumentList,SolrDocumentList,String,String,Set[String],Set[String]).mjava","sourceNew":null,"sourceOld":"  boolean checkIfDiffIsLegal(SolrDocumentList a, SolrDocumentList b, String aName, String bName, Set<String> addFails, Set<String> deleteFails) {\n    boolean legal = true;\n    Set<SolrDocument> setA = new HashSet<>();\n    for (SolrDocument sdoc : a) {\n      setA.add(sdoc);\n    }\n\n    Set<SolrDocument> setB = new HashSet<>();\n    for (SolrDocument sdoc : b) {\n      setB.add(sdoc);\n    }\n\n    Set<SolrDocument> onlyInA = new HashSet<>(setA);\n    onlyInA.removeAll(setB);\n    Set<SolrDocument> onlyInB = new HashSet<>(setB);\n    onlyInB.removeAll(setA);\n\n    for (SolrDocument doc : onlyInA) {\n      if (!addFails.contains(doc.getFirstValue(\"id\"))) {\n        legal = false;\n      } else {\n        System.err.println(\"###### Only in \" + aName + \": \" + onlyInA\n            + \", but this is expected because we found an add fail for \"\n            + doc.getFirstValue(\"id\"));\n      }\n    }\n      \n    for (SolrDocument doc : onlyInB) {\n      if (!deleteFails.contains(doc.getFirstValue(\"id\"))) {\n        legal = false;\n      } else {\n        System.err.println(\"###### Only in \" + bName + \": \" + onlyInB\n            + \", but this is expected because we found a delete fail for \"\n            + doc.getFirstValue(\"id\"));\n      }\n    }\n    \n    return legal;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4339eef0c1b12030c8590187e652cd1cd0a1f3cb":["35b47293d52729d80d78492b2aeda6e45d5a42f1"],"35b47293d52729d80d78492b2aeda6e45d5a42f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4339eef0c1b12030c8590187e652cd1cd0a1f3cb"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["35b47293d52729d80d78492b2aeda6e45d5a42f1"],"4339eef0c1b12030c8590187e652cd1cd0a1f3cb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"35b47293d52729d80d78492b2aeda6e45d5a42f1":["4339eef0c1b12030c8590187e652cd1cd0a1f3cb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}