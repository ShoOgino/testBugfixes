{"path":"lucene/src/test/org/apache/lucene/index/TestIndexableField.MyField#tokenStream(Analyzer).mjava","commits":[{"id":"8b3bdb938a073ccc28d7ed813f6e8c4cb58e04c5","date":1316747797,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexableField.MyField#tokenStream(Analyzer).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexableField.MyField#tokenStreamValue().mjava","sourceNew":"    @Override\n    public TokenStream tokenStream(Analyzer analyzer) throws IOException {\n      if (numeric()) {\n        return new NumericField(name()).setIntValue(counter).tokenStream(analyzer);\n      }\n      return readerValue() != null ? analyzer.reusableTokenStream(name(), readerValue()) :\n          analyzer.reusableTokenStream(name(), new StringReader(stringValue()));\n    }\n\n","sourceOld":"    @Override\n    public TokenStream tokenStreamValue() {\n      if (numeric()) {\n        return new NumericField(name()).setIntValue(counter).tokenStreamValue();\n      } else {\n        return null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"69e043c521d4e8db770cc140c63f5ef51f03426a","date":1317187614,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexableField.MyField#tokenStream(Analyzer).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexableField.MyField#tokenStream(Analyzer).mjava","sourceNew":"    @Override\n    public TokenStream tokenStream(Analyzer analyzer) throws IOException {\n      if (numeric()) {\n        return new NumericField(name()).setIntValue(counter).tokenStream(analyzer);\n      }\n      return readerValue() != null ? analyzer.tokenStream(name(), readerValue()) :\n          analyzer.tokenStream(name(), new StringReader(stringValue()));\n    }\n\n","sourceOld":"    @Override\n    public TokenStream tokenStream(Analyzer analyzer) throws IOException {\n      if (numeric()) {\n        return new NumericField(name()).setIntValue(counter).tokenStream(analyzer);\n      }\n      return readerValue() != null ? analyzer.reusableTokenStream(name(), readerValue()) :\n          analyzer.reusableTokenStream(name(), new StringReader(stringValue()));\n    }\n\n","bugFix":null,"bugIntro":["fa0f44f887719e97183771e977cfc4bfb485b766"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fa0f44f887719e97183771e977cfc4bfb485b766","date":1326668713,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexableField.MyField#tokenStream(Analyzer).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexableField.MyField#tokenStream(Analyzer).mjava","sourceNew":"    @Override\n    public TokenStream tokenStream(Analyzer analyzer) throws IOException {\n      return readerValue() != null ? analyzer.tokenStream(name(), readerValue()) :\n        analyzer.tokenStream(name(), new StringReader(stringValue()));\n    }\n\n","sourceOld":"    @Override\n    public TokenStream tokenStream(Analyzer analyzer) throws IOException {\n      if (numeric()) {\n        return new NumericField(name()).setIntValue(counter).tokenStream(analyzer);\n      }\n      return readerValue() != null ? analyzer.tokenStream(name(), readerValue()) :\n          analyzer.tokenStream(name(), new StringReader(stringValue()));\n    }\n\n","bugFix":["8b3bdb938a073ccc28d7ed813f6e8c4cb58e04c5","69e043c521d4e8db770cc140c63f5ef51f03426a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexableField.MyField#tokenStream(Analyzer).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexableField.MyField#tokenStream(Analyzer).mjava","sourceNew":"    @Override\n    public TokenStream tokenStream(Analyzer analyzer) throws IOException {\n      return readerValue() != null ? analyzer.tokenStream(name(), readerValue()) :\n        analyzer.tokenStream(name(), new StringReader(stringValue()));\n    }\n\n","sourceOld":"    @Override\n    public TokenStream tokenStream(Analyzer analyzer) throws IOException {\n      return readerValue() != null ? analyzer.tokenStream(name(), readerValue()) :\n        analyzer.tokenStream(name(), new StringReader(stringValue()));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fa0f44f887719e97183771e977cfc4bfb485b766"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa0f44f887719e97183771e977cfc4bfb485b766":["69e043c521d4e8db770cc140c63f5ef51f03426a"],"8b3bdb938a073ccc28d7ed813f6e8c4cb58e04c5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"69e043c521d4e8db770cc140c63f5ef51f03426a":["8b3bdb938a073ccc28d7ed813f6e8c4cb58e04c5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8b3bdb938a073ccc28d7ed813f6e8c4cb58e04c5"],"fa0f44f887719e97183771e977cfc4bfb485b766":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8b3bdb938a073ccc28d7ed813f6e8c4cb58e04c5":["69e043c521d4e8db770cc140c63f5ef51f03426a"],"69e043c521d4e8db770cc140c63f5ef51f03426a":["fa0f44f887719e97183771e977cfc4bfb485b766"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}