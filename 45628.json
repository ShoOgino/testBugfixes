{"path":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,StoredDocument,String).mjava","commits":[{"id":"a7e4907084808af8fdb14b9809e6dceaccf6867b","date":1343473006,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,StoredDocument,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","sourceNew":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, StoredDocument doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","sourceOld":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,StoredDocument,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,Document,String).mjava","sourceNew":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, StoredDocument doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","sourceOld":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, Document doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cad4d876350c7790594c78dc3c3fb1718bf06dc7","date":1417321437,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,StoredDocument,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,StoredDocument,String).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, StoredDocument doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","sourceOld":"  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, StoredDocument doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12aef50f649e6f5f9689970748f96e3f1ca6104e","date":1428932135,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,StoredDocument,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,StoredDocument,String).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  protected void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n                                                        SolrQueryRequest req, NamedList docSummaries, int docId, StoredDocument doc,\n                                                        String fieldName ) throws IOException {\n    SolrParams params = req.getParams();\n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder(fieldName, params);\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n      SolrQueryRequest req, NamedList docSummaries, int docId, StoredDocument doc,\n      String fieldName ) throws IOException {\n    SolrParams params = req.getParams(); \n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder( fieldName, params );\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ba83a7997a13459d756c436cc76ee2570d2128f","date":1432215022,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(StoredDocument,int,SchemaField,FastVectorHighlighter,FieldQuery,IndexReader,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/DefaultSolrHighlighter#doHighlightingByFastVectorHighlighter(FastVectorHighlighter,FieldQuery,SolrQueryRequest,NamedList,int,StoredDocument,String).mjava","sourceNew":"  /** Highlights and returns the highlight object for this field -- a String[] by default.  Null if none. */\n  @SuppressWarnings(\"unchecked\")\n  protected Object doHighlightingByFastVectorHighlighter(StoredDocument doc, int docId,\n                                                         SchemaField schemaField, FastVectorHighlighter highlighter,\n                                                         FieldQuery fieldQuery,\n                                                         IndexReader reader, SolrQueryRequest req) throws IOException {\n    SolrParams params = req.getParams();\n    String fieldName = schemaField.getName();\n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder(fieldName, params);\n\n    String[] snippets = highlighter.getBestFragments( fieldQuery, reader, docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if (snippets != null && snippets.length > 0 )\n      return snippets;\n    return null;\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  protected void doHighlightingByFastVectorHighlighter( FastVectorHighlighter highlighter, FieldQuery fieldQuery,\n                                                        SolrQueryRequest req, NamedList docSummaries, int docId, StoredDocument doc,\n                                                        String fieldName ) throws IOException {\n    SolrParams params = req.getParams();\n    SolrFragmentsBuilder solrFb = getSolrFragmentsBuilder(fieldName, params);\n    String[] snippets = highlighter.getBestFragments( fieldQuery, req.getSearcher().getIndexReader(), docId, fieldName,\n        params.getFieldInt( fieldName, HighlightParams.FRAGSIZE, 100 ),\n        params.getFieldInt( fieldName, HighlightParams.SNIPPETS, 1 ),\n        getFragListBuilder( fieldName, params ),\n        getFragmentsBuilder( fieldName, params ),\n        solrFb.getPreTags( params, fieldName ),\n        solrFb.getPostTags( params, fieldName ),\n        getEncoder( fieldName, params ) );\n    if( snippets != null && snippets.length > 0 )\n      docSummaries.add( fieldName, snippets );\n    else\n      alternateField( docSummaries, params, doc, fieldName );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1d028314cced5858683a1bb4741423d0f934257b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a7e4907084808af8fdb14b9809e6dceaccf6867b"],"cad4d876350c7790594c78dc3c3fb1718bf06dc7":["1d028314cced5858683a1bb4741423d0f934257b"],"1ba83a7997a13459d756c436cc76ee2570d2128f":["12aef50f649e6f5f9689970748f96e3f1ca6104e"],"12aef50f649e6f5f9689970748f96e3f1ca6104e":["cad4d876350c7790594c78dc3c3fb1718bf06dc7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a7e4907084808af8fdb14b9809e6dceaccf6867b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1ba83a7997a13459d756c436cc76ee2570d2128f"]},"commit2Childs":{"1d028314cced5858683a1bb4741423d0f934257b":["cad4d876350c7790594c78dc3c3fb1718bf06dc7"],"cad4d876350c7790594c78dc3c3fb1718bf06dc7":["12aef50f649e6f5f9689970748f96e3f1ca6104e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d028314cced5858683a1bb4741423d0f934257b","a7e4907084808af8fdb14b9809e6dceaccf6867b"],"1ba83a7997a13459d756c436cc76ee2570d2128f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"12aef50f649e6f5f9689970748f96e3f1ca6104e":["1ba83a7997a13459d756c436cc76ee2570d2128f"],"a7e4907084808af8fdb14b9809e6dceaccf6867b":["1d028314cced5858683a1bb4741423d0f934257b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}