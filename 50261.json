{"path":"solr/core/src/java/org/apache/solr/handler/component/IterativeMergeStrategy#merge(ResponseBuilder,ShardRequest).mjava","commits":[{"id":"918eb732e5f2f2e5e908dd4c94e07d63f3915eab","date":1450295083,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/IterativeMergeStrategy#merge(ResponseBuilder,ShardRequest).mjava","pathOld":"/dev/null","sourceNew":"  public void merge(ResponseBuilder rb, ShardRequest sreq) {\n    rb._responseDocs = new SolrDocumentList(); // Null pointers will occur otherwise.\n    rb.onePassDistributedQuery = true;   // Turn off the second pass distributed.\n    executorService =     ExecutorUtil.newMDCAwareCachedThreadPool(new SolrjNamedThreadFactory(\"IterativeMergeStrategy\"));\n    try {\n      process(rb, sreq);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    } finally {\n      executorService.shutdownNow();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/IterativeMergeStrategy#merge(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/IterativeMergeStrategy#merge(ResponseBuilder,ShardRequest).mjava","sourceNew":"  public void merge(ResponseBuilder rb, ShardRequest sreq) {\n    rb._responseDocs = new SolrDocumentList(); // Null pointers will occur otherwise.\n    rb.onePassDistributedQuery = true;   // Turn off the second pass distributed.\n    executorService = ExecutorUtil.newMDCAwareCachedThreadPool(new SolrjNamedThreadFactory(\"IterativeMergeStrategy\"));\n    httpClient = getHttpClient();\n    try {\n      process(rb, sreq);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    } finally {\n      HttpClientUtil.close(httpClient);\n      executorService.shutdownNow();\n    }\n  }\n\n","sourceOld":"  public void merge(ResponseBuilder rb, ShardRequest sreq) {\n    rb._responseDocs = new SolrDocumentList(); // Null pointers will occur otherwise.\n    rb.onePassDistributedQuery = true;   // Turn off the second pass distributed.\n    executorService =     ExecutorUtil.newMDCAwareCachedThreadPool(new SolrjNamedThreadFactory(\"IterativeMergeStrategy\"));\n    try {\n      process(rb, sreq);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    } finally {\n      executorService.shutdownNow();\n    }\n  }\n\n","bugFix":["918eb732e5f2f2e5e908dd4c94e07d63f3915eab"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb03700c9690d16b15fb4f56f6ec36b128fd894e","date":1586745995,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/IterativeMergeStrategy#merge(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/IterativeMergeStrategy#merge(ResponseBuilder,ShardRequest).mjava","sourceNew":"  public void merge(ResponseBuilder rb, ShardRequest sreq) {\n    rb._responseDocs = new SolrDocumentList(); // Null pointers will occur otherwise.\n    rb.onePassDistributedQuery = true;   // Turn off the second pass distributed.\n    executorService = ExecutorUtil.newMDCAwareCachedThreadPool(new SolrNamedThreadFactory(\"IterativeMergeStrategy\"));\n    httpClient = getHttpClient();\n    try {\n      process(rb, sreq);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    } finally {\n      HttpClientUtil.close(httpClient);\n      executorService.shutdownNow();\n    }\n  }\n\n","sourceOld":"  public void merge(ResponseBuilder rb, ShardRequest sreq) {\n    rb._responseDocs = new SolrDocumentList(); // Null pointers will occur otherwise.\n    rb.onePassDistributedQuery = true;   // Turn off the second pass distributed.\n    executorService = ExecutorUtil.newMDCAwareCachedThreadPool(new SolrjNamedThreadFactory(\"IterativeMergeStrategy\"));\n    httpClient = getHttpClient();\n    try {\n      process(rb, sreq);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    } finally {\n      HttpClientUtil.close(httpClient);\n      executorService.shutdownNow();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["918eb732e5f2f2e5e908dd4c94e07d63f3915eab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fb03700c9690d16b15fb4f56f6ec36b128fd894e":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"918eb732e5f2f2e5e908dd4c94e07d63f3915eab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fb03700c9690d16b15fb4f56f6ec36b128fd894e"]},"commit2Childs":{"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["fb03700c9690d16b15fb4f56f6ec36b128fd894e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["918eb732e5f2f2e5e908dd4c94e07d63f3915eab"],"fb03700c9690d16b15fb4f56f6ec36b128fd894e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"918eb732e5f2f2e5e908dd4c94e07d63f3915eab":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}