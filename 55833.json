{"path":"lucene/core/src/test/org/apache/lucene/search/TestConstantScoreQuery#checkHits(IndexSearcher,Query,float,Class[#-extends-Scorable]).mjava","commits":[{"id":"6dbd758f2776b0129f6b3641b6490ddc68d7b0f3","date":1536316907,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestConstantScoreQuery#checkHits(IndexSearcher,Query,float,Class[#-extends-Scorable]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestConstantScoreQuery#checkHits(IndexSearcher,Query,float,Class[#-extends-Scorer]).mjava","sourceNew":"  private void checkHits(IndexSearcher searcher, Query q, final float expectedScore, final Class<? extends Scorable> innerScorerClass) throws IOException {\n    final int[] count = new int[1];\n    searcher.search(q, new SimpleCollector() {\n      private Scorable scorer;\n    \n      @Override\n      public void setScorer(Scorable scorer) {\n        this.scorer = scorer;\n        if (innerScorerClass != null) {\n          Scorable innerScorer = rootScorer(scorer);\n          assertEquals(\"inner Scorer is implemented by wrong class\", innerScorerClass, innerScorer.getClass());\n        }\n      }\n      \n      @Override\n      public void collect(int doc) throws IOException {\n        assertEquals(\"Score differs from expected\", expectedScore, this.scorer.score(), 0);\n        count[0]++;\n      }\n      \n      @Override\n      public ScoreMode scoreMode() {\n        return ScoreMode.COMPLETE;\n      }\n    });\n    assertEquals(\"invalid number of results\", 1, count[0]);\n  }\n\n","sourceOld":"  private void checkHits(IndexSearcher searcher, Query q, final float expectedScore, final Class<? extends Scorer> innerScorerClass) throws IOException {\n    final int[] count = new int[1];\n    searcher.search(q, new SimpleCollector() {\n      private Scorable scorer;\n    \n      @Override\n      public void setScorer(Scorable scorer) {\n        this.scorer = scorer;\n        if (innerScorerClass != null) {\n          Scorable innerScorer = rootScorer(scorer);\n          assertEquals(\"inner Scorer is implemented by wrong class\", innerScorerClass, innerScorer.getClass());\n        }\n      }\n      \n      @Override\n      public void collect(int doc) throws IOException {\n        assertEquals(\"Score differs from expected\", expectedScore, this.scorer.score(), 0);\n        count[0]++;\n      }\n      \n      @Override\n      public ScoreMode scoreMode() {\n        return ScoreMode.COMPLETE;\n      }\n    });\n    assertEquals(\"invalid number of results\", 1, count[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6dbd758f2776b0129f6b3641b6490ddc68d7b0f3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6dbd758f2776b0129f6b3641b6490ddc68d7b0f3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6dbd758f2776b0129f6b3641b6490ddc68d7b0f3"],"6dbd758f2776b0129f6b3641b6490ddc68d7b0f3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}