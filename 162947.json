{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/DocValuesWriterBase#DocValuesWriterBase(PerDocWriteState,boolean).mjava","commits":[{"id":"e0f5e4b06eda9c2996435d90659faa1a8601d196","date":1329255071,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/DocValuesWriterBase#DocValuesWriterBase(PerDocWriteState,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/DocValuesWriterBase#DocValuesWriterBase(PerDocWriteState,boolean).mjava","sourceNew":"  /**\n   * @param state The state to initiate a {@link PerDocConsumer} instance\n   * @param fasterButMoreRam whether packed ints for docvalues should be optimized for speed by rounding up the bytes\n   *                         used for a value to either 8, 16, 32 or 64 bytes. This option is only applicable for\n   *                         docvalues of type {@link Type#BYTES_FIXED_SORTED} and {@link Type#BYTES_VAR_SORTED}.\n   */\n  protected DocValuesWriterBase(PerDocWriteState state, boolean fasterButMoreRam) {\n    this.segmentName = state.segmentName;\n    this.bytesUsed = state.bytesUsed;\n    this.context = state.context;\n    this.fasterButMoreRam = fasterButMoreRam;\n  }\n\n","sourceOld":"  /**\n   * @param state The state to initiate a {@link PerDocConsumer} instance\n   * @param fasterButMoreRam whether packed ints for docvalues should be optimized for speed by rounding up the bytes\n   *                         used for a value to either 8, 16, 32 or 64 bytes. This option is only applicable for\n   *                         docvalues of type {@link Type#BYTES_FIXED_SORTED} and {@link Type#BYTES_VAR_SORTED}.\n   */\n  protected DocValuesWriterBase(PerDocWriteState state, boolean fasterButMoreRam) {\n    this.segmentName = state.segmentName;\n    this.bytesUsed = state.bytesUsed;\n    this.context = state.context;\n    this.fasterButMoreRam = fasterButMoreRam;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"129c6e8ac0c0d9a110ba29e4b5f1889374f30076","date":1337725510,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/DocValuesWriterBase#DocValuesWriterBase(PerDocWriteState,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/DocValuesWriterBase#DocValuesWriterBase(PerDocWriteState,boolean).mjava","sourceNew":"  /**\n   * @param state The state to initiate a {@link PerDocConsumer} instance\n   * @param fasterButMoreRam whether packed ints for docvalues should be optimized for speed by rounding up the bytes\n   *                         used for a value to either 8, 16, 32 or 64 bytes. This option is only applicable for\n   *                         docvalues of type {@link Type#BYTES_FIXED_SORTED} and {@link Type#BYTES_VAR_SORTED}.\n   */\n  protected DocValuesWriterBase(PerDocWriteState state, boolean fasterButMoreRam) {\n    // nocommit save away SegmentInfo instead?\n    this.segmentName = state.segmentInfo.name;\n    this.bytesUsed = state.bytesUsed;\n    this.context = state.context;\n    this.fasterButMoreRam = fasterButMoreRam;\n  }\n\n","sourceOld":"  /**\n   * @param state The state to initiate a {@link PerDocConsumer} instance\n   * @param fasterButMoreRam whether packed ints for docvalues should be optimized for speed by rounding up the bytes\n   *                         used for a value to either 8, 16, 32 or 64 bytes. This option is only applicable for\n   *                         docvalues of type {@link Type#BYTES_FIXED_SORTED} and {@link Type#BYTES_VAR_SORTED}.\n   */\n  protected DocValuesWriterBase(PerDocWriteState state, boolean fasterButMoreRam) {\n    this.segmentName = state.segmentName;\n    this.bytesUsed = state.bytesUsed;\n    this.context = state.context;\n    this.fasterButMoreRam = fasterButMoreRam;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb5728b83dbb3e002cdd22adfe6caf103a96ef15","date":1337791289,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/DocValuesWriterBase#DocValuesWriterBase(PerDocWriteState,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/DocValuesWriterBase#DocValuesWriterBase(PerDocWriteState,boolean).mjava","sourceNew":"  /**\n   * @param state The state to initiate a {@link PerDocConsumer} instance\n   * @param fasterButMoreRam whether packed ints for docvalues should be optimized for speed by rounding up the bytes\n   *                         used for a value to either 8, 16, 32 or 64 bytes. This option is only applicable for\n   *                         docvalues of type {@link Type#BYTES_FIXED_SORTED} and {@link Type#BYTES_VAR_SORTED}.\n   */\n  protected DocValuesWriterBase(PerDocWriteState state, boolean fasterButMoreRam) {\n    this.segmentName = state.segmentInfo.name;\n    this.bytesUsed = state.bytesUsed;\n    this.context = state.context;\n    this.fasterButMoreRam = fasterButMoreRam;\n  }\n\n","sourceOld":"  /**\n   * @param state The state to initiate a {@link PerDocConsumer} instance\n   * @param fasterButMoreRam whether packed ints for docvalues should be optimized for speed by rounding up the bytes\n   *                         used for a value to either 8, 16, 32 or 64 bytes. This option is only applicable for\n   *                         docvalues of type {@link Type#BYTES_FIXED_SORTED} and {@link Type#BYTES_VAR_SORTED}.\n   */\n  protected DocValuesWriterBase(PerDocWriteState state, boolean fasterButMoreRam) {\n    // nocommit save away SegmentInfo instead?\n    this.segmentName = state.segmentInfo.name;\n    this.bytesUsed = state.bytesUsed;\n    this.context = state.context;\n    this.fasterButMoreRam = fasterButMoreRam;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a470c93b2b0f8f51241f52705fc110a01f27ad2","date":1337969379,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/DocValuesWriterBase#DocValuesWriterBase(PerDocWriteState,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/DocValuesWriterBase#DocValuesWriterBase(PerDocWriteState,boolean).mjava","sourceNew":"  /**\n   * @param state The state to initiate a {@link PerDocConsumer} instance\n   * @param acceptableOverheadRatio\n   *          how to trade space for speed. This option is only applicable for\n   *          docvalues of type {@link Type#BYTES_FIXED_SORTED} and\n   *          {@link Type#BYTES_VAR_SORTED}.\n   * @see PackedInts#getReader(org.apache.lucene.store.DataInput)\n   */\n  protected DocValuesWriterBase(PerDocWriteState state, float acceptableOverheadRatio) {\n    this.segmentName = state.segmentName;\n    this.bytesUsed = state.bytesUsed;\n    this.context = state.context;\n    this.acceptableOverheadRatio = acceptableOverheadRatio;\n  }\n\n","sourceOld":"  /**\n   * @param state The state to initiate a {@link PerDocConsumer} instance\n   * @param fasterButMoreRam whether packed ints for docvalues should be optimized for speed by rounding up the bytes\n   *                         used for a value to either 8, 16, 32 or 64 bytes. This option is only applicable for\n   *                         docvalues of type {@link Type#BYTES_FIXED_SORTED} and {@link Type#BYTES_VAR_SORTED}.\n   */\n  protected DocValuesWriterBase(PerDocWriteState state, boolean fasterButMoreRam) {\n    this.segmentName = state.segmentName;\n    this.bytesUsed = state.bytesUsed;\n    this.context = state.context;\n    this.fasterButMoreRam = fasterButMoreRam;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb5728b83dbb3e002cdd22adfe6caf103a96ef15":["129c6e8ac0c0d9a110ba29e4b5f1889374f30076"],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["e0f5e4b06eda9c2996435d90659faa1a8601d196"],"e0f5e4b06eda9c2996435d90659faa1a8601d196":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4a470c93b2b0f8f51241f52705fc110a01f27ad2":["e0f5e4b06eda9c2996435d90659faa1a8601d196"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a470c93b2b0f8f51241f52705fc110a01f27ad2"]},"commit2Childs":{"fb5728b83dbb3e002cdd22adfe6caf103a96ef15":[],"129c6e8ac0c0d9a110ba29e4b5f1889374f30076":["fb5728b83dbb3e002cdd22adfe6caf103a96ef15"],"e0f5e4b06eda9c2996435d90659faa1a8601d196":["129c6e8ac0c0d9a110ba29e4b5f1889374f30076","4a470c93b2b0f8f51241f52705fc110a01f27ad2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e0f5e4b06eda9c2996435d90659faa1a8601d196"],"4a470c93b2b0f8f51241f52705fc110a01f27ad2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fb5728b83dbb3e002cdd22adfe6caf103a96ef15","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}