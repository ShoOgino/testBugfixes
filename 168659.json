{"path":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageCoreController#close().mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageCoreController#close().mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/storage/lucenestorage/StorageCoreController#close().mjava","sourceNew":"    private void close() throws IOException {\n    \tif(this.isClosed.get())\n    \t\tthrow new IllegalStateException(\"StorageController is already closed -- server is shutting down\");\n    \t\n        this.storageControllerLock.lock();\n        try{\n        \tif(this.isClosed.get())\n        \t\tthrow new IllegalStateException(\"StorageController is already closed -- server is shutting down\");\n        \tthis.isClosed.set(true);\n        \twhile(this.storageControllerLock.getQueueLength()>0)\n        \t\ttry{\n        \t\tthis.closeCondition.await();\n        \t\t}catch (Exception e) {\n\t\t\t\t\t//\n\t\t\t\t}\n            if (LOG.isInfoEnabled())\n                LOG.info(\"StorageController has been closed -- server is shutting down -- release all resources\");\n            if (this.storageQuery != null)\n                this.storageQuery.decrementRef();\n            if(this.recoverController != null)\n                this.recoverController.destroy();\n            this.storageLock.close();\n            this.modifier.close();\n            this.idGenerator.stopIDGenerator();\n\t\t}finally{\n        \tthis.storageControllerLock.unlock();\n        }\n    }\n\n","sourceOld":"    private void close() throws IOException {\n    \tif(this.isClosed.get())\n    \t\tthrow new IllegalStateException(\"StorageController is already closed -- server is shutting down\");\n    \t\n        this.storageControllerLock.lock();\n        try{\n        \tif(this.isClosed.get())\n        \t\tthrow new IllegalStateException(\"StorageController is already closed -- server is shutting down\");\n        \tthis.isClosed.set(true);\n        \twhile(this.storageControllerLock.getQueueLength()>0)\n        \t\ttry{\n        \t\tthis.closeCondition.await();\n        \t\t}catch (Exception e) {\n\t\t\t\t\t//\n\t\t\t\t}\n            if (LOG.isInfoEnabled())\n                LOG.info(\"StorageController has been closed -- server is shutting down -- release all resources\");\n            if (this.storageQuery != null)\n                this.storageQuery.decrementRef();\n            if(this.recoverController != null)\n                this.recoverController.destroy();\n            this.storageLock.close();\n            this.modifier.close();\n            this.idGenerator.stopIDGenerator();\n\t\t}finally{\n        \tthis.storageControllerLock.unlock();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageCoreController#close().mjava","sourceNew":null,"sourceOld":"    private void close() throws IOException {\n    \tif(this.isClosed.get())\n    \t\tthrow new IllegalStateException(\"StorageController is already closed -- server is shutting down\");\n    \t\n        this.storageControllerLock.lock();\n        try{\n        \tif(this.isClosed.get())\n        \t\tthrow new IllegalStateException(\"StorageController is already closed -- server is shutting down\");\n        \tthis.isClosed.set(true);\n        \twhile(this.storageControllerLock.getQueueLength()>0)\n        \t\ttry{\n        \t\tthis.closeCondition.await();\n        \t\t}catch (Exception e) {\n\t\t\t\t\t//\n\t\t\t\t}\n            if (LOG.isInfoEnabled())\n                LOG.info(\"StorageController has been closed -- server is shutting down -- release all resources\");\n            if (this.storageQuery != null)\n                this.storageQuery.decrementRef();\n            if(this.recoverController != null)\n                this.recoverController.destroy();\n            this.storageLock.close();\n            this.modifier.close();\n            this.idGenerator.stopIDGenerator();\n\t\t}finally{\n        \tthis.storageControllerLock.unlock();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}