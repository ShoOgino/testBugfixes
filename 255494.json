{"path":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeNamedListAsArrMap(String,NamedList).mjava","commits":[{"id":"434ff4225627b937a533128f8746eb1e9009fc95","date":1153247240,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeNamedListAsArrMap(String,NamedList).mjava","pathOld":"/dev/null","sourceNew":"  // Represents a NamedList directly as an array of JSON objects...\r\n  // NamedList(\"a\"=1,\"b\"=2,null=3) => [{\"a\":1},{\"b\":2},3]\r\n  protected void writeNamedListAsArrMap(String name, NamedList val) throws IOException {\r\n    int sz = val.size();\r\n    indent();\r\n    writer.write('[');\r\n    incLevel();\r\n\r\n    boolean first=true;\r\n    for (int i=0; i<sz; i++) {\r\n      String key = val.getName(i);\r\n\r\n      if (first) {\r\n        first=false;\r\n      } else {\r\n        writer.write(',');\r\n      }\r\n\r\n      indent();\r\n\r\n      if (key==null) {\r\n        writeVal(null,val.getVal(i));\r\n      } else {\r\n        writer.write('{');\r\n        writeKey(key, true);\r\n        writeVal(key,val.getVal(i));\r\n        writer.write('}');\r\n      }\r\n\r\n    }\r\n\r\n    decLevel();\r\n    writer.write(']');\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c0e301b711811c6aaee90440cc1a7925fdd1a1e","date":1153259525,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeNamedListAsArrMap(String,NamedList).mjava","pathOld":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeNamedListAsArrMap(String,NamedList).mjava","sourceNew":"  // Represents a NamedList directly as an array of JSON objects...\n  // NamedList(\"a\"=1,\"b\"=2,null=3) => [{\"a\":1},{\"b\":2},3]\n  protected void writeNamedListAsArrMap(String name, NamedList val) throws IOException {\n    int sz = val.size();\n    indent();\n    writer.write('[');\n    incLevel();\n\n    boolean first=true;\n    for (int i=0; i<sz; i++) {\n      String key = val.getName(i);\n\n      if (first) {\n        first=false;\n      } else {\n        writer.write(',');\n      }\n\n      indent();\n\n      if (key==null) {\n        writeVal(null,val.getVal(i));\n      } else {\n        writer.write('{');\n        writeKey(key, true);\n        writeVal(key,val.getVal(i));\n        writer.write('}');\n      }\n\n    }\n\n    decLevel();\n    writer.write(']');\n  }\n\n","sourceOld":"  // Represents a NamedList directly as an array of JSON objects...\r\n  // NamedList(\"a\"=1,\"b\"=2,null=3) => [{\"a\":1},{\"b\":2},3]\r\n  protected void writeNamedListAsArrMap(String name, NamedList val) throws IOException {\r\n    int sz = val.size();\r\n    indent();\r\n    writer.write('[');\r\n    incLevel();\r\n\r\n    boolean first=true;\r\n    for (int i=0; i<sz; i++) {\r\n      String key = val.getName(i);\r\n\r\n      if (first) {\r\n        first=false;\r\n      } else {\r\n        writer.write(',');\r\n      }\r\n\r\n      indent();\r\n\r\n      if (key==null) {\r\n        writeVal(null,val.getVal(i));\r\n      } else {\r\n        writer.write('{');\r\n        writeKey(key, true);\r\n        writeVal(key,val.getVal(i));\r\n        writer.write('}');\r\n      }\r\n\r\n    }\r\n\r\n    decLevel();\r\n    writer.write(']');\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13baf5514709a27de4ff67151d35b715138d158d","date":1186803122,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeNamedListAsArrMap(String,NamedList).mjava","pathOld":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeNamedListAsArrMap(String,NamedList).mjava","sourceNew":"  // Represents a NamedList directly as an array of JSON objects...\n  // NamedList(\"a\"=1,\"b\"=2,null=3) => [{\"a\":1},{\"b\":2},3]\n  protected void writeNamedListAsArrMap(String name, NamedList val) throws IOException {\n    int sz = val.size();\n    indent();\n    writeArrayOpener(sz);\n    incLevel();\n\n    boolean first=true;\n    for (int i=0; i<sz; i++) {\n      String key = val.getName(i);\n\n      if (first) {\n        first=false;\n      } else {\n        writeArraySeparator();\n      }\n\n      indent();\n\n      if (key==null) {\n        writeVal(null,val.getVal(i));\n      } else {\n        writeMapOpener(1);\n        writeKey(key, true);\n        writeVal(key,val.getVal(i));\n        writeMapCloser();\n      }\n\n    }\n\n    decLevel();\n    writeArrayCloser();\n  }\n\n","sourceOld":"  // Represents a NamedList directly as an array of JSON objects...\n  // NamedList(\"a\"=1,\"b\"=2,null=3) => [{\"a\":1},{\"b\":2},3]\n  protected void writeNamedListAsArrMap(String name, NamedList val) throws IOException {\n    int sz = val.size();\n    indent();\n    writer.write('[');\n    incLevel();\n\n    boolean first=true;\n    for (int i=0; i<sz; i++) {\n      String key = val.getName(i);\n\n      if (first) {\n        first=false;\n      } else {\n        writer.write(',');\n      }\n\n      indent();\n\n      if (key==null) {\n        writeVal(null,val.getVal(i));\n      } else {\n        writer.write('{');\n        writeKey(key, true);\n        writeVal(key,val.getVal(i));\n        writer.write('}');\n      }\n\n    }\n\n    decLevel();\n    writer.write(']');\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10b17ff7ad534c3b34a34944d80a87d217011d9c","date":1263262796,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/response/JSONWriter[JSONResponseWriter]#writeNamedListAsArrMap(String,NamedList).mjava","pathOld":"src/java/org/apache/solr/request/JSONWriter[JSONResponseWriter]#writeNamedListAsArrMap(String,NamedList).mjava","sourceNew":"  // Represents a NamedList directly as an array of JSON objects...\n  // NamedList(\"a\"=1,\"b\"=2,null=3) => [{\"a\":1},{\"b\":2},3]\n  protected void writeNamedListAsArrMap(String name, NamedList val) throws IOException {\n    int sz = val.size();\n    indent();\n    writeArrayOpener(sz);\n    incLevel();\n\n    boolean first=true;\n    for (int i=0; i<sz; i++) {\n      String key = val.getName(i);\n\n      if (first) {\n        first=false;\n      } else {\n        writeArraySeparator();\n      }\n\n      indent();\n\n      if (key==null) {\n        writeVal(null,val.getVal(i));\n      } else {\n        writeMapOpener(1);\n        writeKey(key, true);\n        writeVal(key,val.getVal(i));\n        writeMapCloser();\n      }\n\n    }\n\n    decLevel();\n    writeArrayCloser();\n  }\n\n","sourceOld":"  // Represents a NamedList directly as an array of JSON objects...\n  // NamedList(\"a\"=1,\"b\"=2,null=3) => [{\"a\":1},{\"b\":2},3]\n  protected void writeNamedListAsArrMap(String name, NamedList val) throws IOException {\n    int sz = val.size();\n    indent();\n    writeArrayOpener(sz);\n    incLevel();\n\n    boolean first=true;\n    for (int i=0; i<sz; i++) {\n      String key = val.getName(i);\n\n      if (first) {\n        first=false;\n      } else {\n        writeArraySeparator();\n      }\n\n      indent();\n\n      if (key==null) {\n        writeVal(null,val.getVal(i));\n      } else {\n        writeMapOpener(1);\n        writeKey(key, true);\n        writeVal(key,val.getVal(i));\n        writeMapCloser();\n      }\n\n    }\n\n    decLevel();\n    writeArrayCloser();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0c0e301b711811c6aaee90440cc1a7925fdd1a1e":["434ff4225627b937a533128f8746eb1e9009fc95"],"434ff4225627b937a533128f8746eb1e9009fc95":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"13baf5514709a27de4ff67151d35b715138d158d":["0c0e301b711811c6aaee90440cc1a7925fdd1a1e"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"10b17ff7ad534c3b34a34944d80a87d217011d9c":["13baf5514709a27de4ff67151d35b715138d158d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0c0e301b711811c6aaee90440cc1a7925fdd1a1e":["13baf5514709a27de4ff67151d35b715138d158d"],"434ff4225627b937a533128f8746eb1e9009fc95":["0c0e301b711811c6aaee90440cc1a7925fdd1a1e"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["434ff4225627b937a533128f8746eb1e9009fc95"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"13baf5514709a27de4ff67151d35b715138d158d":["10b17ff7ad534c3b34a34944d80a87d217011d9c"],"10b17ff7ad534c3b34a34944d80a87d217011d9c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["10b17ff7ad534c3b34a34944d80a87d217011d9c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}