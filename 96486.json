{"path":"lucene/src/java/org/apache/lucene/search/TermScorer#nextDoc().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TermScorer#nextDoc().mjava","pathOld":"src/java/org/apache/lucene/search/TermScorer#nextDoc().mjava","sourceNew":"  /**\n   * Advances to the next document matching the query. <br>\n   * The iterator over the matching documents is buffered using\n   * {@link TermDocs#read(int[],int[])}.\n   * \n   * @return the document matching the query or -1 if there are no more documents.\n   */\n  @Override\n  public int nextDoc() throws IOException {\n    pointer++;\n    if (pointer >= pointerMax) {\n      pointerMax = termDocs.read(docs, freqs);    // refill buffer\n      if (pointerMax != 0) {\n        pointer = 0;\n      } else {\n        termDocs.close();                         // close stream\n        return doc = NO_MORE_DOCS;\n      }\n    } \n    doc = docs[pointer];\n    return doc;\n  }\n\n","sourceOld":"  /**\n   * Advances to the next document matching the query. <br>\n   * The iterator over the matching documents is buffered using\n   * {@link TermDocs#read(int[],int[])}.\n   * \n   * @return the document matching the query or -1 if there are no more documents.\n   */\n  @Override\n  public int nextDoc() throws IOException {\n    pointer++;\n    if (pointer >= pointerMax) {\n      pointerMax = termDocs.read(docs, freqs);    // refill buffer\n      if (pointerMax != 0) {\n        pointer = 0;\n      } else {\n        termDocs.close();                         // close stream\n        return doc = NO_MORE_DOCS;\n      }\n    } \n    doc = docs[pointer];\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TermScorer#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TermScorer#nextDoc().mjava","sourceNew":"  /**\n   * Advances to the next document matching the query. <br>\n   * The iterator over the matching documents is buffered using\n   * {@link TermDocs#read(int[],int[])}.\n   * \n   * @return the document matching the query or NO_MORE_DOCS if there are no more documents.\n   */\n  @Override\n  public int nextDoc() throws IOException {\n    pointer++;\n    if (pointer >= pointerMax) {\n      refillBuffer();\n      if (pointerMax != 0) {\n        pointer = 0;\n      } else {\n        return doc = NO_MORE_DOCS;\n      }\n    } \n    doc = docs[pointer];\n    freq = freqs[pointer];\n    assert doc != NO_MORE_DOCS;\n    return doc;\n  }\n\n","sourceOld":"  /**\n   * Advances to the next document matching the query. <br>\n   * The iterator over the matching documents is buffered using\n   * {@link TermDocs#read(int[],int[])}.\n   * \n   * @return the document matching the query or -1 if there are no more documents.\n   */\n  @Override\n  public int nextDoc() throws IOException {\n    pointer++;\n    if (pointer >= pointerMax) {\n      pointerMax = termDocs.read(docs, freqs);    // refill buffer\n      if (pointerMax != 0) {\n        pointer = 0;\n      } else {\n        termDocs.close();                         // close stream\n        return doc = NO_MORE_DOCS;\n      }\n    } \n    doc = docs[pointer];\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e765231acfcd7799726d3b89c8ad84c426eee475","date":1318454615,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TermScorer#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TermScorer#nextDoc().mjava","sourceNew":"  /**\n   * Advances to the next document matching the query. <br>\n   * The iterator over the matching documents is buffered using\n   * {@link TermDocs#read(int[],int[])}.\n   * \n   * @return the document matching the query or NO_MORE_DOCS if there are no more documents.\n   */\n  @Override\n  public int nextDoc() throws IOException {\n    pointer++;\n    if (pointer >= pointerMax) {\n      pointerMax = docsEnum.read();  // refill\n      if (pointerMax != 0) {\n        pointer = 0;\n      } else {\n        return doc = NO_MORE_DOCS;\n      }\n    } \n    doc = docs[pointer];\n    freq = freqs[pointer];\n    assert doc != NO_MORE_DOCS;\n    return doc;\n  }\n\n","sourceOld":"  /**\n   * Advances to the next document matching the query. <br>\n   * The iterator over the matching documents is buffered using\n   * {@link TermDocs#read(int[],int[])}.\n   * \n   * @return the document matching the query or NO_MORE_DOCS if there are no more documents.\n   */\n  @Override\n  public int nextDoc() throws IOException {\n    pointer++;\n    if (pointer >= pointerMax) {\n      refillBuffer();\n      if (pointerMax != 0) {\n        pointer = 0;\n      } else {\n        return doc = NO_MORE_DOCS;\n      }\n    } \n    doc = docs[pointer];\n    freq = freqs[pointer];\n    assert doc != NO_MORE_DOCS;\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0445bcd8433e331f296f5502fc089b336cbac3a6","date":1322630375,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/TermScorer#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TermScorer#nextDoc().mjava","sourceNew":"  /**\n   * Advances to the next document matching the query. <br>\n   * \n   * @return the document matching the query or NO_MORE_DOCS if there are no more documents.\n   */\n  @Override\n  public int nextDoc() throws IOException {\n    return docsEnum.nextDoc();\n  }\n\n","sourceOld":"  /**\n   * Advances to the next document matching the query. <br>\n   * The iterator over the matching documents is buffered using\n   * {@link TermDocs#read(int[],int[])}.\n   * \n   * @return the document matching the query or NO_MORE_DOCS if there are no more documents.\n   */\n  @Override\n  public int nextDoc() throws IOException {\n    pointer++;\n    if (pointer >= pointerMax) {\n      pointerMax = docsEnum.read();  // refill\n      if (pointerMax != 0) {\n        pointer = 0;\n      } else {\n        return doc = NO_MORE_DOCS;\n      }\n    } \n    doc = docs[pointer];\n    freq = freqs[pointer];\n    assert doc != NO_MORE_DOCS;\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermScorer#nextDoc().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TermScorer#nextDoc().mjava","sourceNew":"  /**\n   * Advances to the next document matching the query. <br>\n   * \n   * @return the document matching the query or NO_MORE_DOCS if there are no more documents.\n   */\n  @Override\n  public int nextDoc() throws IOException {\n    return docsEnum.nextDoc();\n  }\n\n","sourceOld":"  /**\n   * Advances to the next document matching the query. <br>\n   * \n   * @return the document matching the query or NO_MORE_DOCS if there are no more documents.\n   */\n  @Override\n  public int nextDoc() throws IOException {\n    return docsEnum.nextDoc();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e765231acfcd7799726d3b89c8ad84c426eee475":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"0445bcd8433e331f296f5502fc089b336cbac3a6":["e765231acfcd7799726d3b89c8ad84c426eee475"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["0445bcd8433e331f296f5502fc089b336cbac3a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e765231acfcd7799726d3b89c8ad84c426eee475":["0445bcd8433e331f296f5502fc089b336cbac3a6"],"0445bcd8433e331f296f5502fc089b336cbac3a6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["e765231acfcd7799726d3b89c8ad84c426eee475"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}