{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsFieldCache().mjava","commits":[{"id":"0ad01348544f9eb6ee985c300245013a75addfc6","date":1376095061,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsFieldCache().mjava","pathOld":"/dev/null","sourceNew":"  public void testSortedFixedLengthVsFieldCache() throws Exception {\n    int numIterations = atLeast(1);\n    for (int i = 0; i < numIterations; i++) {\n      int fixedLength = _TestUtil.nextInt(random(), 1, 10);\n      doTestSortedVsFieldCache(fixedLength, fixedLength);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsFieldCache().mjava","pathOld":"/dev/null","sourceNew":"  public void testSortedFixedLengthVsFieldCache() throws Exception {\n    int numIterations = atLeast(1);\n    for (int i = 0; i < numIterations; i++) {\n      int fixedLength = _TestUtil.nextInt(random(), 1, 10);\n      doTestSortedVsFieldCache(fixedLength, fixedLength);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsFieldCache().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsFieldCache().mjava","sourceNew":"  public void testSortedFixedLengthVsFieldCache() throws Exception {\n    int numIterations = atLeast(1);\n    for (int i = 0; i < numIterations; i++) {\n      int fixedLength = TestUtil.nextInt(random(), 1, 10);\n      doTestSortedVsFieldCache(fixedLength, fixedLength);\n    }\n  }\n\n","sourceOld":"  public void testSortedFixedLengthVsFieldCache() throws Exception {\n    int numIterations = atLeast(1);\n    for (int i = 0; i < numIterations; i++) {\n      int fixedLength = _TestUtil.nextInt(random(), 1, 10);\n      doTestSortedVsFieldCache(fixedLength, fixedLength);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#testSortedFixedLengthVsFieldCache().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsFieldCache().mjava","sourceNew":"  public void testSortedFixedLengthVsFieldCache() throws Exception {\n    int numIterations = atLeast(1);\n    for (int i = 0; i < numIterations; i++) {\n      int fixedLength = TestUtil.nextInt(random(), 1, 10);\n      doTestSortedVsFieldCache(fixedLength, fixedLength);\n    }\n  }\n\n","sourceOld":"  public void testSortedFixedLengthVsFieldCache() throws Exception {\n    int numIterations = atLeast(1);\n    for (int i = 0; i < numIterations; i++) {\n      int fixedLength = TestUtil.nextInt(random(), 1, 10);\n      doTestSortedVsFieldCache(fixedLength, fixedLength);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#testSortedFixedLengthVsFieldCache().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsFieldCache().mjava","sourceNew":"  public void testSortedFixedLengthVsFieldCache() throws Exception {\n    int numIterations = atLeast(1);\n    for (int i = 0; i < numIterations; i++) {\n      int fixedLength = TestUtil.nextInt(random(), 1, 10);\n      doTestSortedVsFieldCache(fixedLength, fixedLength);\n    }\n  }\n\n","sourceOld":"  public void testSortedFixedLengthVsFieldCache() throws Exception {\n    int numIterations = atLeast(1);\n    for (int i = 0; i < numIterations; i++) {\n      int fixedLength = TestUtil.nextInt(random(), 1, 10);\n      doTestSortedVsFieldCache(fixedLength, fixedLength);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#testSortedFixedLengthVsFieldCache().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedFixedLengthVsFieldCache().mjava","sourceNew":"  public void testSortedFixedLengthVsFieldCache() throws Exception {\n    int numIterations = atLeast(1);\n    for (int i = 0; i < numIterations; i++) {\n      int fixedLength = TestUtil.nextInt(random(), 1, 10);\n      doTestSortedVsFieldCache(fixedLength, fixedLength);\n    }\n  }\n\n","sourceOld":"  public void testSortedFixedLengthVsFieldCache() throws Exception {\n    int numIterations = atLeast(1);\n    for (int i = 0; i < numIterations; i++) {\n      int fixedLength = TestUtil.nextInt(random(), 1, 10);\n      doTestSortedVsFieldCache(fixedLength, fixedLength);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"93dd449115a9247533e44bab47e8429e5dccbc6d":["6613659748fe4411a7dcf85266e55db1f95f7315","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"6613659748fe4411a7dcf85266e55db1f95f7315":["0ad01348544f9eb6ee985c300245013a75addfc6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["6613659748fe4411a7dcf85266e55db1f95f7315"],"0ad01348544f9eb6ee985c300245013a75addfc6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"56572ec06f1407c066d6b7399413178b33176cd8":["6613659748fe4411a7dcf85266e55db1f95f7315","93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["93dd449115a9247533e44bab47e8429e5dccbc6d"]},"commit2Childs":{"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6613659748fe4411a7dcf85266e55db1f95f7315":["93dd449115a9247533e44bab47e8429e5dccbc6d","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","0ad01348544f9eb6ee985c300245013a75addfc6"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"0ad01348544f9eb6ee985c300245013a75addfc6":["6613659748fe4411a7dcf85266e55db1f95f7315"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}