{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/Uncompressor#uncompress(DataInput,int,int,BytesRef).mjava","commits":[{"id":"7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa","date":1349450075,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/Uncompressor#uncompress(DataInput,int,int,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Method to use if you are only interested into <code>length</code>\n   * uncompressed bytes starting at offset <code>offset</code>. Some compression\n   * codecs might have optimizations for this special case.\n   */\n  public void uncompress(DataInput in, int offset, int length, BytesRef bytes) throws IOException {\n    uncompress(in, bytes);\n    if (bytes.length < offset + length) {\n      throw new IndexOutOfBoundsException((offset + length) + \" > \" + bytes.length);\n    }\n    bytes.offset += offset;\n    bytes.length = length;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5af6a67fb827380f7fe2fdf3baa34b10b783f2f1","date":1351696336,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/Decompressor#decompress(DataInput,int,int,BytesRef).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/compressing/Uncompressor#uncompress(DataInput,int,int,BytesRef).mjava","sourceNew":"  /**\n   * Method to use if you are only interested into <code>length</code>\n   * decompressed bytes starting at offset <code>offset</code>. Some compression\n   * codecs might have optimizations for this special case.\n   */\n  public void decompress(DataInput in, int offset, int length, BytesRef bytes) throws IOException {\n    decompress(in, bytes);\n    if (bytes.length < offset + length) {\n      throw new IndexOutOfBoundsException((offset + length) + \" > \" + bytes.length);\n    }\n    bytes.offset += offset;\n    bytes.length = length;\n  }\n\n","sourceOld":"  /**\n   * Method to use if you are only interested into <code>length</code>\n   * uncompressed bytes starting at offset <code>offset</code>. Some compression\n   * codecs might have optimizations for this special case.\n   */\n  public void uncompress(DataInput in, int offset, int length, BytesRef bytes) throws IOException {\n    uncompress(in, bytes);\n    if (bytes.length < offset + length) {\n      throw new IndexOutOfBoundsException((offset + length) + \" > \" + bytes.length);\n    }\n    bytes.offset += offset;\n    bytes.length = length;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5af6a67fb827380f7fe2fdf3baa34b10b783f2f1":["7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa"],"7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5af6a67fb827380f7fe2fdf3baa34b10b783f2f1"]},"commit2Childs":{"5af6a67fb827380f7fe2fdf3baa34b10b783f2f1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa":["5af6a67fb827380f7fe2fdf3baa34b10b783f2f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7d1467e0527cb2aeb9d7a05c26948ac9d82d81fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}