{"path":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/storage/db4o/TestDb4oStorage#testDeleteFeed().mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/storage/db4o/TestDb4oStorage#testDeleteFeed().mjava","pathOld":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/storage/db4o/TestDb4oStorage#testDeleteFeed().mjava","sourceNew":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.storage.db4o.DB4oStorage.deleteFeed(String)'\n     */\n    public void testDeleteFeed() throws StorageException {\n\n        ServerBaseFeed feed = new ServerBaseFeed();\n        feed.setId(FEEDID);\n        GDataAccount account = new GDataAccount();\n        account.setName(ACCOUNTNAME);\n        account.setPassword(\"somePass\");\n        ObjectContainer container = getContainer();\n        container.set(account);\n        container.commit();\n        container.close();\n        Storage storage = this.controller.getStorage();\n        ProvidedServiceConfig conf = new ProvidedServiceConfig();\n        conf.setName(SERVICENAME);\n        feed.setServiceConfig(conf);\n        storage.storeFeed(feed, ACCOUNTNAME);\n\n        storage.deleteFeed(FEEDID);\n        container = getContainer();\n        Query query = container.query();\n        query.constrain(ServerBaseFeed.class);\n        query.descend(\"feed\").descend(\"id\").constrain(FEEDID);\n        ObjectSet set = query.execute();\n        assertEquals(0, set.size());\n\n        query = getContainer().query();\n        query.constrain(BaseFeed.class);\n        query.descend(\"id\").constrain(FEEDID);\n        set = query.execute();\n        assertEquals(0, set.size());\n        container.close();\n    }\n\n","sourceOld":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.storage.db4o.DB4oStorage.deleteFeed(String)'\n     */\n    public void testDeleteFeed() throws StorageException {\n\n        ServerBaseFeed feed = new ServerBaseFeed();\n        feed.setId(FEEDID);\n        GDataAccount account = new GDataAccount();\n        account.setName(ACCOUNTNAME);\n        account.setPassword(\"somePass\");\n        ObjectContainer container = getContainer();\n        container.set(account);\n        container.commit();\n        container.close();\n        Storage storage = this.controller.getStorage();\n        ProvidedServiceConfig conf = new ProvidedServiceConfig();\n        conf.setName(SERVICENAME);\n        feed.setServiceConfig(conf);\n        storage.storeFeed(feed, ACCOUNTNAME);\n\n        storage.deleteFeed(FEEDID);\n        container = getContainer();\n        Query query = container.query();\n        query.constrain(ServerBaseFeed.class);\n        query.descend(\"feed\").descend(\"id\").constrain(FEEDID);\n        ObjectSet set = query.execute();\n        assertEquals(0, set.size());\n\n        query = getContainer().query();\n        query.constrain(BaseFeed.class);\n        query.descend(\"id\").constrain(FEEDID);\n        set = query.execute();\n        assertEquals(0, set.size());\n        container.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/storage/db4o/TestDb4oStorage#testDeleteFeed().mjava","sourceNew":null,"sourceOld":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.storage.db4o.DB4oStorage.deleteFeed(String)'\n     */\n    public void testDeleteFeed() throws StorageException {\n\n        ServerBaseFeed feed = new ServerBaseFeed();\n        feed.setId(FEEDID);\n        GDataAccount account = new GDataAccount();\n        account.setName(ACCOUNTNAME);\n        account.setPassword(\"somePass\");\n        ObjectContainer container = getContainer();\n        container.set(account);\n        container.commit();\n        container.close();\n        Storage storage = this.controller.getStorage();\n        ProvidedServiceConfig conf = new ProvidedServiceConfig();\n        conf.setName(SERVICENAME);\n        feed.setServiceConfig(conf);\n        storage.storeFeed(feed, ACCOUNTNAME);\n\n        storage.deleteFeed(FEEDID);\n        container = getContainer();\n        Query query = container.query();\n        query.constrain(ServerBaseFeed.class);\n        query.descend(\"feed\").descend(\"id\").constrain(FEEDID);\n        ObjectSet set = query.execute();\n        assertEquals(0, set.size());\n\n        query = getContainer().query();\n        query.constrain(BaseFeed.class);\n        query.descend(\"id\").constrain(FEEDID);\n        set = query.execute();\n        assertEquals(0, set.size());\n        container.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}