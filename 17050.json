{"path":"solr/src/test/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","commits":[{"id":"d272632e612b90b4a624b54b5a8db565bca8d6d8","date":1279057531,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","pathOld":"solr/src/java/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","date":1296400215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","pathOld":"solr/src/test/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","pathOld":"solr/src/test/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","pathOld":"solr/src/test/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d20d5e40789b1c42f4f926e3174b271256c43657","date":1301641092,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test-framework/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","pathOld":"solr/src/test/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b09c7419b92e982a901698cb401ce22ac35e4b04","date":1301668869,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/src/test-framework/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","pathOld":"solr/src/test/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test-framework/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","pathOld":"solr/src/test/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test-framework/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","pathOld":"solr/src/test/org/apache/solr/util/AbstractSolrTestCase#tearDown().mjava","sourceNew":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","sourceOld":"  /**\n   * Shuts down the test harness, and makes the best attempt possible\n   * to delete dataDir, unless the system property \"solr.test.leavedatadir\"\n   * is set.\n   */\n  @Override\n  public void tearDown() throws Exception {\n    log.info(\"####TEARDOWN_START \" + getName());\n    if (factoryProp == null) {\n      System.clearProperty(\"solr.directoryFactory\");\n    }\n\n    if (h != null) { h.close(); }\n    String skip = System.getProperty(\"solr.test.leavedatadir\");\n    if (null != skip && 0 != skip.trim().length()) {\n      System.err.println(\"NOTE: per solr.test.leavedatadir, dataDir will not be removed: \" + dataDir.getAbsolutePath());\n    } else {\n      if (!recurseDelete(dataDir)) {\n        System.err.println(\"!!!! WARNING: best effort to remove \" + dataDir.getAbsolutePath() + \" FAILED !!!!!\");\n      }\n    }\n\n    resetExceptionIgnores();  \n    super.tearDown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["d272632e612b90b4a624b54b5a8db565bca8d6d8"],"d272632e612b90b4a624b54b5a8db565bca8d6d8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["d272632e612b90b4a624b54b5a8db565bca8d6d8","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","b09c7419b92e982a901698cb401ce22ac35e4b04"],"b09c7419b92e982a901698cb401ce22ac35e4b04":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"d20d5e40789b1c42f4f926e3174b271256c43657":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d272632e612b90b4a624b54b5a8db565bca8d6d8"],"45669a651c970812a680841b97a77cce06af559f":["bde51b089eb7f86171eb3406e38a274743f9b7ac","b09c7419b92e982a901698cb401ce22ac35e4b04"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["5f4e87790277826a2aea119328600dfb07761f32","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b09c7419b92e982a901698cb401ce22ac35e4b04"]},"commit2Childs":{"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["29ef99d61cda9641b6250bf9567329a6e65f901d","b09c7419b92e982a901698cb401ce22ac35e4b04","d20d5e40789b1c42f4f926e3174b271256c43657","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"d272632e612b90b4a624b54b5a8db565bca8d6d8":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","29ef99d61cda9641b6250bf9567329a6e65f901d","5f4e87790277826a2aea119328600dfb07761f32"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d272632e612b90b4a624b54b5a8db565bca8d6d8","5f4e87790277826a2aea119328600dfb07761f32"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"b09c7419b92e982a901698cb401ce22ac35e4b04":["135621f3a0670a9394eb563224a3b76cc4dddc0f","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d20d5e40789b1c42f4f926e3174b271256c43657":[],"5f4e87790277826a2aea119328600dfb07761f32":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"45669a651c970812a680841b97a77cce06af559f":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["45669a651c970812a680841b97a77cce06af559f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","d20d5e40789b1c42f4f926e3174b271256c43657","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}