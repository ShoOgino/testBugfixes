{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolver#getVariables(String).mjava","commits":[{"id":"7c7b0ae5716b6c2044195a818e9ae58205175659","date":1353342230,"type":0,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolver#getVariables(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Get a list of variables embedded in the template string.\n   */\n  public List<String> getVariables(String template) {\n    Resolved r = getResolved(template);\n    if (r == null) {\n      return Collections.emptyList();\n    }\n    return new ArrayList<String>(r.variables);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolver#getVariables(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Get a list of variables embedded in the template string.\n   */\n  public List<String> getVariables(String template) {\n    Resolved r = getResolved(template);\n    if (r == null) {\n      return Collections.emptyList();\n    }\n    return new ArrayList<String>(r.variables);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolver#getVariables(String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolver#getVariables(String).mjava","sourceNew":"  /**\n   * Get a list of variables embedded in the template string.\n   */\n  public List<String> getVariables(String template) {\n    Resolved r = getResolved(template);\n    if (r == null) {\n      return Collections.emptyList();\n    }\n    return new ArrayList<>(r.variables);\n  }\n\n","sourceOld":"  /**\n   * Get a list of variables embedded in the template string.\n   */\n  public List<String> getVariables(String template) {\n    Resolved r = getResolved(template);\n    if (r == null) {\n      return Collections.emptyList();\n    }\n    return new ArrayList<String>(r.variables);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89ae495191648c27a6ed94d2ace7e34b763a535c","date":1476855250,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolver#getVariables(String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolver#getVariables(String).mjava","sourceNew":"  public List<String> getVariables(String expr) {\n    return TemplateUpdateProcessorFactory.getVariables(expr, cache);\n  }\n\n","sourceOld":"  /**\n   * Get a list of variables embedded in the template string.\n   */\n  public List<String> getVariables(String template) {\n    Resolved r = getResolved(template);\n    if (r == null) {\n      return Collections.emptyList();\n    }\n    return new ArrayList<>(r.variables);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolver#getVariables(String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolver#getVariables(String).mjava","sourceNew":"  public List<String> getVariables(String expr) {\n    return TemplateUpdateProcessorFactory.getVariables(expr, cache);\n  }\n\n","sourceOld":"  /**\n   * Get a list of variables embedded in the template string.\n   */\n  public List<String> getVariables(String template) {\n    Resolved r = getResolved(template);\n    if (r == null) {\n      return Collections.emptyList();\n    }\n    return new ArrayList<>(r.variables);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ed1b270b5ea6e1859f4b77233891fbb991898dba","date":1497429460,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolver#getVariables(String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolver#getVariables(String).mjava","sourceNew":"  public List<String> getVariables(String expr) {\n    return TemplateUpdateProcessorFactory.getVariables(expr, cache, TemplateUpdateProcessorFactory.DOLLAR_BRACES_PLACEHOLDER_PATTERN);\n  }\n\n","sourceOld":"  public List<String> getVariables(String expr) {\n    return TemplateUpdateProcessorFactory.getVariables(expr, cache);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolver#getVariables(String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolver#getVariables(String).mjava","sourceNew":"  public List<String> getVariables(String expr) {\n    return TemplateUpdateProcessorFactory.getVariables(expr, cache, TemplateUpdateProcessorFactory.DOLLAR_BRACES_PLACEHOLDER_PATTERN);\n  }\n\n","sourceOld":"  public List<String> getVariables(String expr) {\n    return TemplateUpdateProcessorFactory.getVariables(expr, cache);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolver#getVariables(String).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolver#getVariables(String).mjava","sourceNew":"  public List<String> getVariables(String expr) {\n    return TemplateUpdateProcessorFactory.getVariables(expr, cache, TemplateUpdateProcessorFactory.DOLLAR_BRACES_PLACEHOLDER_PATTERN);\n  }\n\n","sourceOld":"  public List<String> getVariables(String expr) {\n    return TemplateUpdateProcessorFactory.getVariables(expr, cache);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/VariableResolver#getVariables(String).mjava","sourceNew":null,"sourceOld":"  public List<String> getVariables(String expr) {\n    return TemplateUpdateProcessorFactory.getVariables(expr, cache, TemplateUpdateProcessorFactory.DOLLAR_BRACES_PLACEHOLDER_PATTERN);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["7c7b0ae5716b6c2044195a818e9ae58205175659"],"ed1b270b5ea6e1859f4b77233891fbb991898dba":["89ae495191648c27a6ed94d2ace7e34b763a535c"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["28288370235ed02234a64753cdbf0c6ec096304a"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7c7b0ae5716b6c2044195a818e9ae58205175659"],"89ae495191648c27a6ed94d2ace7e34b763a535c":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"28288370235ed02234a64753cdbf0c6ec096304a":["89ae495191648c27a6ed94d2ace7e34b763a535c","ed1b270b5ea6e1859f4b77233891fbb991898dba"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["89ae495191648c27a6ed94d2ace7e34b763a535c","ed1b270b5ea6e1859f4b77233891fbb991898dba"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","89ae495191648c27a6ed94d2ace7e34b763a535c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["89ae495191648c27a6ed94d2ace7e34b763a535c","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"ed1b270b5ea6e1859f4b77233891fbb991898dba":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c7b0ae5716b6c2044195a818e9ae58205175659","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"89ae495191648c27a6ed94d2ace7e34b763a535c":["ed1b270b5ea6e1859f4b77233891fbb991898dba","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"28288370235ed02234a64753cdbf0c6ec096304a":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}