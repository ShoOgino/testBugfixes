{"path":"lucene/core/src/java/org/apache/lucene/search/FilteredDocIdSet#iterator().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FilteredDocIdSet#iterator().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FilteredDocIdSet#iterator().mjava","sourceNew":"  /**\n   * Implementation of the contract to build a DocIdSetIterator.\n   * @see DocIdSetIterator\n   * @see FilteredDocIdSetIterator\n   */\n  @Override\n  public DocIdSetIterator iterator() throws IOException {\n    return new FilteredDocIdSetIterator(_innerSet.iterator()) {\n      @Override\n      protected boolean match(int docid) {\n        return FilteredDocIdSet.this.match(docid);\n      }\n    };\n  }\n\n","sourceOld":"  /**\n   * Implementation of the contract to build a DocIdSetIterator.\n   * @see DocIdSetIterator\n   * @see FilteredDocIdSetIterator\n   */\n  @Override\n  public DocIdSetIterator iterator() throws IOException {\n    return new FilteredDocIdSetIterator(_innerSet.iterator()) {\n      @Override\n      protected boolean match(int docid) {\n        return FilteredDocIdSet.this.match(docid);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63d5e77dc0c22fbe4ab2445099a883b7218cb1f5","date":1329917688,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FilteredDocIdSet#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FilteredDocIdSet#iterator().mjava","sourceNew":"  /**\n   * Implementation of the contract to build a DocIdSetIterator.\n   * @see DocIdSetIterator\n   * @see FilteredDocIdSetIterator\n   */\n  @Override\n  public DocIdSetIterator iterator() throws IOException {\n    final DocIdSetIterator iterator = _innerSet.iterator();\n    if (iterator == null) {\n      return null;\n    }\n    return new FilteredDocIdSetIterator(iterator) {\n      @Override\n      protected boolean match(int docid) {\n        return FilteredDocIdSet.this.match(docid);\n      }\n    };\n  }\n\n","sourceOld":"  /**\n   * Implementation of the contract to build a DocIdSetIterator.\n   * @see DocIdSetIterator\n   * @see FilteredDocIdSetIterator\n   */\n  @Override\n  public DocIdSetIterator iterator() throws IOException {\n    return new FilteredDocIdSetIterator(_innerSet.iterator()) {\n      @Override\n      protected boolean match(int docid) {\n        return FilteredDocIdSet.this.match(docid);\n      }\n    };\n  }\n\n","bugFix":["a924e8b2b6557c341c7bce03c5355159059dd7fa"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FilteredDocIdSet#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FilteredDocIdSet#iterator().mjava","sourceNew":"  /**\n   * Implementation of the contract to build a DocIdSetIterator.\n   * @see DocIdSetIterator\n   * @see FilteredDocIdSetIterator\n   */\n  @Override\n  public DocIdSetIterator iterator() throws IOException {\n    final DocIdSetIterator iterator = _innerSet.iterator();\n    if (iterator == null) {\n      return null;\n    }\n    return new FilteredDocIdSetIterator(iterator) {\n      @Override\n      protected boolean match(int docid) {\n        return FilteredDocIdSet.this.match(docid);\n      }\n    };\n  }\n\n","sourceOld":"  /**\n   * Implementation of the contract to build a DocIdSetIterator.\n   * @see DocIdSetIterator\n   * @see FilteredDocIdSetIterator\n   */\n  @Override\n  public DocIdSetIterator iterator() throws IOException {\n    return new FilteredDocIdSetIterator(_innerSet.iterator()) {\n      @Override\n      protected boolean match(int docid) {\n        return FilteredDocIdSet.this.match(docid);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d52e48927ca4ef3655a261f2230b968b6fdf3608","date":1444652107,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/FilteredDocIdSet#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FilteredDocIdSet#iterator().mjava","sourceNew":"  /**\n   * Implementation of the contract to build a DocIdSetIterator.\n   * @see DocIdSetIterator\n   * @see FilteredDocIdSetIterator\n   */\n  @Override\n  public DocIdSetIterator iterator() throws IOException {\n    final DocIdSetIterator iterator = _innerSet.iterator();\n    if (iterator == null) {\n      return null;\n    }\n    return new FilteredDocIdSetIterator(iterator) {\n      @Override\n      protected boolean match(int docid) {\n        return FilteredDocIdSet.this.match(docid);\n      }\n    };\n  }\n\n","sourceOld":"  /**\n   * Implementation of the contract to build a DocIdSetIterator.\n   * @see DocIdSetIterator\n   * @see FilteredDocIdSetIterator\n   */\n  @Override\n  public DocIdSetIterator iterator() throws IOException {\n    final DocIdSetIterator iterator = _innerSet.iterator();\n    if (iterator == null) {\n      return null;\n    }\n    return new FilteredDocIdSetIterator(iterator) {\n      @Override\n      protected boolean match(int docid) {\n        return FilteredDocIdSet.this.match(docid);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"63d5e77dc0c22fbe4ab2445099a883b7218cb1f5":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","63d5e77dc0c22fbe4ab2445099a883b7218cb1f5"],"d52e48927ca4ef3655a261f2230b968b6fdf3608":["63d5e77dc0c22fbe4ab2445099a883b7218cb1f5"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d52e48927ca4ef3655a261f2230b968b6fdf3608"]},"commit2Childs":{"63d5e77dc0c22fbe4ab2445099a883b7218cb1f5":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","d52e48927ca4ef3655a261f2230b968b6fdf3608"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"d52e48927ca4ef3655a261f2230b968b6fdf3608":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["63d5e77dc0c22fbe4ab2445099a883b7218cb1f5","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}