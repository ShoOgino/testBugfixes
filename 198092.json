{"path":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#testBasic().mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#testBasic().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    LeaderElector elector = new LeaderElector(zkClient);\n    ZkNodeProps props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP,\n        \"http://127.0.0.1/solr/\", ZkStateReader.CORE_NAME_PROP, \"\");\n    ElectionContext context = new ShardLeaderElectionContextBase(elector,\n        \"shard2\", \"collection1\", \"dummynode1\", props, zkStateReader);\n    elector.setup(context);\n    elector.joinElection(context);\n    assertEquals(\"http://127.0.0.1/solr/\",\n        getLeaderUrl(\"collection1\", \"shard2\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#testBasic().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    LeaderElector elector = new LeaderElector(zkClient);\n    ZkNodeProps props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP,\n        \"http://127.0.0.1/solr/\", ZkStateReader.CORE_NAME_PROP, \"\");\n    ElectionContext context = new ShardLeaderElectionContextBase(elector,\n        \"shard2\", \"collection1\", \"dummynode1\", props, zkStateReader);\n    elector.setup(context);\n    elector.joinElection(context);\n    assertEquals(\"http://127.0.0.1/solr/\",\n        getLeaderUrl(\"collection1\", \"shard2\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#testBasic().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    LeaderElector elector = new LeaderElector(zkClient);\n    ZkNodeProps props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP,\n        \"http://127.0.0.1/solr/\", ZkStateReader.CORE_NAME_PROP, \"\");\n    ElectionContext context = new ShardLeaderElectionContextBase(elector,\n        \"shard2\", \"collection1\", \"dummynode1\", props, zkStateReader);\n    elector.setup(context);\n    elector.joinElection(context);\n    assertEquals(\"http://127.0.0.1/solr/\",\n        getLeaderUrl(\"collection1\", \"shard2\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a80994db3380cd78c6f65b84515e2e931b6b3da","date":1329530403,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#testBasic().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    LeaderElector elector = new LeaderElector(zkClient);\n    ZkNodeProps props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP,\n        \"http://127.0.0.1/solr/\", ZkStateReader.CORE_NAME_PROP, \"\");\n    ElectionContext context = new ShardLeaderElectionContextBase(elector,\n        \"shard2\", \"collection1\", \"dummynode1\", props, zkStateReader);\n    elector.setup(context);\n    elector.joinElection(context, null);\n    assertEquals(\"http://127.0.0.1/solr/\",\n        getLeaderUrl(\"collection1\", \"shard2\"));\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws Exception {\n    LeaderElector elector = new LeaderElector(zkClient);\n    ZkNodeProps props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP,\n        \"http://127.0.0.1/solr/\", ZkStateReader.CORE_NAME_PROP, \"\");\n    ElectionContext context = new ShardLeaderElectionContextBase(elector,\n        \"shard2\", \"collection1\", \"dummynode1\", props, zkStateReader);\n    elector.setup(context);\n    elector.joinElection(context);\n    assertEquals(\"http://127.0.0.1/solr/\",\n        getLeaderUrl(\"collection1\", \"shard2\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9813dd0748537c429b7c0a9b4723ea1ba496c047","date":1330304954,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#testBasic().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    LeaderElector elector = new LeaderElector(zkClient);\n    ZkNodeProps props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP,\n        \"http://127.0.0.1/solr/\", ZkStateReader.CORE_NAME_PROP, \"\");\n    ElectionContext context = new ShardLeaderElectionContextBase(elector,\n        \"shard2\", \"collection1\", \"dummynode1\", props, zkStateReader);\n    elector.setup(context);\n    elector.joinElection(context);\n    assertEquals(\"http://127.0.0.1/solr/\",\n        getLeaderUrl(\"collection1\", \"shard2\"));\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws Exception {\n    LeaderElector elector = new LeaderElector(zkClient);\n    ZkNodeProps props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP,\n        \"http://127.0.0.1/solr/\", ZkStateReader.CORE_NAME_PROP, \"\");\n    ElectionContext context = new ShardLeaderElectionContextBase(elector,\n        \"shard2\", \"collection1\", \"dummynode1\", props, zkStateReader);\n    elector.setup(context);\n    elector.joinElection(context, null);\n    assertEquals(\"http://127.0.0.1/solr/\",\n        getLeaderUrl(\"collection1\", \"shard2\"));\n  }\n\n","bugFix":null,"bugIntro":["88f39c3b3a16aebc5a91335341c7ad5b560e2277"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#testBasic().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    LeaderElector elector = new LeaderElector(zkClient);\n    ZkNodeProps props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP,\n        \"http://127.0.0.1/solr/\", ZkStateReader.CORE_NAME_PROP, \"\");\n    ElectionContext context = new ShardLeaderElectionContextBase(elector,\n        \"shard2\", \"collection1\", \"dummynode1\", props, zkStateReader);\n    elector.setup(context);\n    elector.joinElection(context);\n    assertEquals(\"http://127.0.0.1/solr/\",\n        getLeaderUrl(\"collection1\", \"shard2\"));\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws Exception {\n    LeaderElector elector = new LeaderElector(zkClient);\n    ZkNodeProps props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP,\n        \"http://127.0.0.1/solr/\", ZkStateReader.CORE_NAME_PROP, \"\");\n    ElectionContext context = new ShardLeaderElectionContextBase(elector,\n        \"shard2\", \"collection1\", \"dummynode1\", props, zkStateReader);\n    elector.setup(context);\n    elector.joinElection(context, null);\n    assertEquals(\"http://127.0.0.1/solr/\",\n        getLeaderUrl(\"collection1\", \"shard2\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"88f39c3b3a16aebc5a91335341c7ad5b560e2277","date":1350066344,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#testBasic().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    LeaderElector elector = new LeaderElector(zkClient);\n    ZkNodeProps props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP,\n        \"http://127.0.0.1/solr/\", ZkStateReader.CORE_NAME_PROP, \"\");\n    ElectionContext context = new ShardLeaderElectionContextBase(elector,\n        \"shard2\", \"collection1\", \"dummynode1\", props, zkStateReader);\n    elector.setup(context);\n    elector.joinElection(context, false);\n    assertEquals(\"http://127.0.0.1/solr/\",\n        getLeaderUrl(\"collection1\", \"shard2\"));\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws Exception {\n    LeaderElector elector = new LeaderElector(zkClient);\n    ZkNodeProps props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP,\n        \"http://127.0.0.1/solr/\", ZkStateReader.CORE_NAME_PROP, \"\");\n    ElectionContext context = new ShardLeaderElectionContextBase(elector,\n        \"shard2\", \"collection1\", \"dummynode1\", props, zkStateReader);\n    elector.setup(context);\n    elector.joinElection(context);\n    assertEquals(\"http://127.0.0.1/solr/\",\n        getLeaderUrl(\"collection1\", \"shard2\"));\n  }\n\n","bugFix":["9813dd0748537c429b7c0a9b4723ea1ba496c047"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d82832af39f94dbb58a3130fd216ff1d49435589","date":1350147242,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#testBasic().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    LeaderElector elector = new LeaderElector(zkClient);\n    ZkNodeProps props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP,\n        \"http://127.0.0.1/solr/\", ZkStateReader.CORE_NAME_PROP, \"\");\n    ElectionContext context = new ShardLeaderElectionContextBase(elector,\n        \"shard2\", \"collection1\", \"dummynode1\", props, zkStateReader);\n    elector.setup(context);\n    elector.joinElection(context, false);\n    assertEquals(\"http://127.0.0.1/solr/\",\n        getLeaderUrl(\"collection1\", \"shard2\"));\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws Exception {\n    LeaderElector elector = new LeaderElector(zkClient);\n    ZkNodeProps props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP,\n        \"http://127.0.0.1/solr/\", ZkStateReader.CORE_NAME_PROP, \"\");\n    ElectionContext context = new ShardLeaderElectionContextBase(elector,\n        \"shard2\", \"collection1\", \"dummynode1\", props, zkStateReader);\n    elector.setup(context);\n    elector.joinElection(context);\n    assertEquals(\"http://127.0.0.1/solr/\",\n        getLeaderUrl(\"collection1\", \"shard2\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db4fdbf3d262768eabc027cd8321edca0cd11fa8","date":1350574784,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#testBasic().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    LeaderElector elector = new LeaderElector(zkClient);\n    ZkNodeProps props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP,\n        \"http://127.0.0.1/solr/\", ZkStateReader.CORE_NAME_PROP, \"\");\n    ElectionContext context = new ShardLeaderElectionContextBase(elector,\n        \"shard2\", \"collection1\", \"dummynode1\", props, zkStateReader);\n    elector.setup(context);\n    elector.joinElection(context, false);\n    assertEquals(\"http://127.0.0.1/solr/\",\n        getLeaderUrl(\"collection1\", \"shard2\"));\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws Exception {\n    LeaderElector elector = new LeaderElector(zkClient);\n    ZkNodeProps props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP,\n        \"http://127.0.0.1/solr/\", ZkStateReader.CORE_NAME_PROP, \"\");\n    ElectionContext context = new ShardLeaderElectionContextBase(elector,\n        \"shard2\", \"collection1\", \"dummynode1\", props, zkStateReader);\n    elector.setup(context);\n    elector.joinElection(context);\n    assertEquals(\"http://127.0.0.1/solr/\",\n        getLeaderUrl(\"collection1\", \"shard2\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#testBasic().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/LeaderElectionTest#testBasic().mjava","sourceNew":"  @Test\n  public void testBasic() throws Exception {\n    LeaderElector elector = new LeaderElector(zkClient);\n    ZkNodeProps props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP,\n        \"http://127.0.0.1/solr/\", ZkStateReader.CORE_NAME_PROP, \"\");\n    ZkController zkController = MockSolrSource.makeSimpleMock(null, null, zkClient);\n    ElectionContext context = new ShardLeaderElectionContextBase(elector,\n        \"shard2\", \"collection1\", \"dummynode1\", props, zkController);\n    elector.setup(context);\n    elector.joinElection(context, false);\n    assertEquals(\"http://127.0.0.1/solr/\",\n        getLeaderUrl(\"collection1\", \"shard2\"));\n  }\n\n","sourceOld":"  @Test\n  public void testBasic() throws Exception {\n    LeaderElector elector = new LeaderElector(zkClient);\n    ZkNodeProps props = new ZkNodeProps(ZkStateReader.BASE_URL_PROP,\n        \"http://127.0.0.1/solr/\", ZkStateReader.CORE_NAME_PROP, \"\");\n    ElectionContext context = new ShardLeaderElectionContextBase(elector,\n        \"shard2\", \"collection1\", \"dummynode1\", props, zkStateReader);\n    elector.setup(context);\n    elector.joinElection(context, false);\n    assertEquals(\"http://127.0.0.1/solr/\",\n        getLeaderUrl(\"collection1\", \"shard2\"));\n  }\n\n","bugFix":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9813dd0748537c429b7c0a9b4723ea1ba496c047":["3a80994db3380cd78c6f65b84515e2e931b6b3da"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["3a80994db3380cd78c6f65b84515e2e931b6b3da","9813dd0748537c429b7c0a9b4723ea1ba496c047"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["88f39c3b3a16aebc5a91335341c7ad5b560e2277"],"d82832af39f94dbb58a3130fd216ff1d49435589":["9813dd0748537c429b7c0a9b4723ea1ba496c047","88f39c3b3a16aebc5a91335341c7ad5b560e2277"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":["9813dd0748537c429b7c0a9b4723ea1ba496c047","88f39c3b3a16aebc5a91335341c7ad5b560e2277"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"88f39c3b3a16aebc5a91335341c7ad5b560e2277":["9813dd0748537c429b7c0a9b4723ea1ba496c047"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a80994db3380cd78c6f65b84515e2e931b6b3da":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"]},"commit2Childs":{"9813dd0748537c429b7c0a9b4723ea1ba496c047":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","d82832af39f94dbb58a3130fd216ff1d49435589","db4fdbf3d262768eabc027cd8321edca0cd11fa8","88f39c3b3a16aebc5a91335341c7ad5b560e2277"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d82832af39f94dbb58a3130fd216ff1d49435589":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","3a80994db3380cd78c6f65b84515e2e931b6b3da"],"88f39c3b3a16aebc5a91335341c7ad5b560e2277":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","d82832af39f94dbb58a3130fd216ff1d49435589","db4fdbf3d262768eabc027cd8321edca0cd11fa8"],"3a80994db3380cd78c6f65b84515e2e931b6b3da":["9813dd0748537c429b7c0a9b4723ea1ba496c047","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0d22ac6a4146774c1bc8400160fc0b6150294e92","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","d82832af39f94dbb58a3130fd216ff1d49435589","db4fdbf3d262768eabc027cd8321edca0cd11fa8","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}