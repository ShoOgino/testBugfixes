{"path":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40NormsWriter#Lucene40NormsWriter(Directory,String,IOContext).mjava","commits":[{"id":"143d45d6fe43d56d1f541059577c929fc0ad27a1","date":1323026648,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40NormsWriter#Lucene40NormsWriter(Directory,String,IOContext).mjava","pathOld":"/dev/null","sourceNew":"  public Lucene40NormsWriter(Directory directory, String segment, IOContext context) throws IOException {\n    final String normsFileName = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.NORMS_EXTENSION);\n    boolean success = false;\n    try {\n      out = directory.createOutput(normsFileName, context);\n      out.writeBytes(NORMS_HEADER, 0, NORMS_HEADER.length);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"091eda9854cc9e0ece4516ce6bc0bcac3a10226a","date":1323046561,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40NormsWriter#Lucene40NormsWriter(Directory,String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40NormsWriter#Lucene40NormsWriter(Directory,String,IOContext).mjava","sourceNew":"  public Lucene40NormsWriter(Directory directory, String segment, IOContext context) throws IOException {\n    final String normsFileName = IndexFileNames.segmentFileName(segment, \"\", NORMS_EXTENSION);\n    boolean success = false;\n    try {\n      out = directory.createOutput(normsFileName, context);\n      out.writeBytes(NORMS_HEADER, 0, NORMS_HEADER.length);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":"  public Lucene40NormsWriter(Directory directory, String segment, IOContext context) throws IOException {\n    final String normsFileName = IndexFileNames.segmentFileName(segment, \"\", IndexFileNames.NORMS_EXTENSION);\n    boolean success = false;\n    try {\n      out = directory.createOutput(normsFileName, context);\n      out.writeBytes(NORMS_HEADER, 0, NORMS_HEADER.length);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40NormsWriter#Lucene40NormsWriter(Directory,String,IOContext).mjava","pathOld":"/dev/null","sourceNew":"  public Lucene40NormsWriter(Directory directory, String segment, IOContext context) throws IOException {\n    final String normsFileName = IndexFileNames.segmentFileName(segment, \"\", NORMS_EXTENSION);\n    boolean success = false;\n    try {\n      out = directory.createOutput(normsFileName, context);\n      out.writeBytes(NORMS_HEADER, 0, NORMS_HEADER.length);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40NormsWriter#Lucene40NormsWriter(Directory,String,IOContext).mjava","pathOld":"/dev/null","sourceNew":"  public Lucene40NormsWriter(Directory directory, String segment, IOContext context) throws IOException {\n    final String normsFileName = IndexFileNames.segmentFileName(segment, \"\", NORMS_EXTENSION);\n    boolean success = false;\n    try {\n      out = directory.createOutput(normsFileName, context);\n      out.writeBytes(NORMS_HEADER, 0, NORMS_HEADER.length);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40NormsWriter#Lucene40NormsWriter(Directory,String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40NormsWriter#Lucene40NormsWriter(Directory,String,IOContext).mjava","sourceNew":"  public Lucene40NormsWriter(Directory directory, String segment, IOContext context) throws IOException {\n    final String normsFileName = IndexFileNames.segmentFileName(segment, \"\", NORMS_EXTENSION);\n    boolean success = false;\n    try {\n      out = directory.createOutput(normsFileName, context);\n      out.writeBytes(NORMS_HEADER, 0, NORMS_HEADER.length);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":"  public Lucene40NormsWriter(Directory directory, String segment, IOContext context) throws IOException {\n    final String normsFileName = IndexFileNames.segmentFileName(segment, \"\", NORMS_EXTENSION);\n    boolean success = false;\n    try {\n      out = directory.createOutput(normsFileName, context);\n      out.writeBytes(NORMS_HEADER, 0, NORMS_HEADER.length);\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"143d45d6fe43d56d1f541059577c929fc0ad27a1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","091eda9854cc9e0ece4516ce6bc0bcac3a10226a"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"091eda9854cc9e0ece4516ce6bc0bcac3a10226a":["143d45d6fe43d56d1f541059577c929fc0ad27a1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"143d45d6fe43d56d1f541059577c929fc0ad27a1":["091eda9854cc9e0ece4516ce6bc0bcac3a10226a"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["143d45d6fe43d56d1f541059577c929fc0ad27a1","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"091eda9854cc9e0ece4516ce6bc0bcac3a10226a":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}