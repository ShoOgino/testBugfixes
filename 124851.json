{"path":"lucene/src/test/org/apache/lucene/index/TestLazyProxSkipping.SeekCountingDirectory#openInput(String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestLazyProxSkipping.SeekCountingDirectory#openInput(String).mjava","pathOld":"src/test/org/apache/lucene/index/TestLazyProxSkipping.SeekCountingDirectory#openInput(String).mjava","sourceNew":"      @Override\n      public IndexInput openInput(String name) throws IOException {\n        IndexInput ii = super.openInput(name);\n        if (name.endsWith(\".prx\")) {\n          // we decorate the proxStream with a wrapper class that allows to count the number of calls of seek()\n          ii = new SeeksCountingStream(ii);\n        }\n        return ii;\n      }\n\n","sourceOld":"      @Override\n      public IndexInput openInput(String name) throws IOException {\n        IndexInput ii = super.openInput(name);\n        if (name.endsWith(\".prx\")) {\n          // we decorate the proxStream with a wrapper class that allows to count the number of calls of seek()\n          ii = new SeeksCountingStream(ii);\n        }\n        return ii;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestLazyProxSkipping.SeekCountingDirectory#openInput(String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestLazyProxSkipping.SeekCountingDirectory#openInput(String).mjava","sourceNew":"      @Override\n      public IndexInput openInput(String name) throws IOException {\n        IndexInput ii = super.openInput(name);\n        if (name.endsWith(\".prx\") || name.endsWith(\".pos\") ) {\n          // we decorate the proxStream with a wrapper class that allows to count the number of calls of seek()\n          ii = new SeeksCountingStream(ii);\n        }\n        return ii;\n      }\n\n","sourceOld":"      @Override\n      public IndexInput openInput(String name) throws IOException {\n        IndexInput ii = super.openInput(name);\n        if (name.endsWith(\".prx\")) {\n          // we decorate the proxStream with a wrapper class that allows to count the number of calls of seek()\n          ii = new SeeksCountingStream(ii);\n        }\n        return ii;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestLazyProxSkipping.SeekCountingDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestLazyProxSkipping.SeekCountingDirectory#openInput(String).mjava","sourceNew":"      @Override\n      public IndexInput openInput(String name, IOContext context) throws IOException {\n        IndexInput ii = super.openInput(name, context);\n        if (name.endsWith(\".prx\") || name.endsWith(\".pos\") ) {\n          // we decorate the proxStream with a wrapper class that allows to count the number of calls of seek()\n          ii = new SeeksCountingStream(ii);\n        }\n        return ii;\n      }\n\n","sourceOld":"      @Override\n      public IndexInput openInput(String name) throws IOException {\n        IndexInput ii = super.openInput(name);\n        if (name.endsWith(\".prx\") || name.endsWith(\".pos\") ) {\n          // we decorate the proxStream with a wrapper class that allows to count the number of calls of seek()\n          ii = new SeeksCountingStream(ii);\n        }\n        return ii;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestLazyProxSkipping.SeekCountingDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestLazyProxSkipping.SeekCountingDirectory#openInput(String).mjava","sourceNew":"      @Override\n      public IndexInput openInput(String name, IOContext context) throws IOException {\n        IndexInput ii = super.openInput(name, context);\n        if (name.endsWith(\".prx\") || name.endsWith(\".pos\") ) {\n          // we decorate the proxStream with a wrapper class that allows to count the number of calls of seek()\n          ii = new SeeksCountingStream(ii);\n        }\n        return ii;\n      }\n\n","sourceOld":"      @Override\n      public IndexInput openInput(String name) throws IOException {\n        IndexInput ii = super.openInput(name);\n        if (name.endsWith(\".prx\") || name.endsWith(\".pos\") ) {\n          // we decorate the proxStream with a wrapper class that allows to count the number of calls of seek()\n          ii = new SeeksCountingStream(ii);\n        }\n        return ii;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestLazyProxSkipping.SeekCountingDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestLazyProxSkipping.SeekCountingDirectory#openInput(String).mjava","sourceNew":"      @Override\n      public IndexInput openInput(String name, IOContext context) throws IOException {\n        IndexInput ii = super.openInput(name, context);\n        if (name.endsWith(\".prx\") || name.endsWith(\".pos\") ) {\n          // we decorate the proxStream with a wrapper class that allows to count the number of calls of seek()\n          ii = new SeeksCountingStream(ii);\n        }\n        return ii;\n      }\n\n","sourceOld":"      @Override\n      public IndexInput openInput(String name) throws IOException {\n        IndexInput ii = super.openInput(name);\n        if (name.endsWith(\".prx\") || name.endsWith(\".pos\") ) {\n          // we decorate the proxStream with a wrapper class that allows to count the number of calls of seek()\n          ii = new SeeksCountingStream(ii);\n        }\n        return ii;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd","5d004d0e0b3f65bb40da76d476d659d7888270e8","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}