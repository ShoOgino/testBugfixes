{"path":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#FSTCompletionLookup(int,boolean).mjava","commits":[{"id":"7bf07f4ebadc7539de83a531e64678350d78ca26","date":1322776167,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#FSTCompletionLookup(int,boolean).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTLookup#FSTLookup(int,boolean).mjava","sourceNew":"  /*\n   * \n   */\n  public FSTCompletionLookup(int buckets, boolean exactMatchFirst) {\n    this.buckets = buckets;\n    this.exactMatchFirst = exactMatchFirst;\n  }\n\n","sourceOld":"  public FSTLookup(int buckets, boolean exactMatchFirst) {\n    this.buckets = buckets;\n    this.exactMatchFirst = exactMatchFirst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05f061ece1572b8f04f70788c9e08aedb357c953","date":1323023912,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#FSTCompletionLookup(int,boolean).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#FSTCompletionLookup(int,boolean).mjava","sourceNew":"  /**\n   * This constructor prepares for creating a suggested FST using the\n   * {@link #build(TermFreqIterator)} method.\n   * \n   * @param buckets\n   *          The number of weight discretization buckets (see\n   *          {@link FSTCompletion} for details).\n   * \n   * @param exactMatchFirst\n   *          If <code>true</code> exact matches are promoted to the top of the\n   *          suggestions list. Otherwise they appear in the order of\n   *          discretized weight and alphabetical within the bucket.\n   */\n  public FSTCompletionLookup(int buckets, boolean exactMatchFirst) {\n    this.buckets = buckets;\n    this.exactMatchFirst = exactMatchFirst;\n  }\n\n","sourceOld":"  /*\n   * \n   */\n  public FSTCompletionLookup(int buckets, boolean exactMatchFirst) {\n    this.buckets = buckets;\n    this.exactMatchFirst = exactMatchFirst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b65b350ca9588f9fc76ce7d6804160d06c45ff42","date":1323026297,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#FSTCompletionLookup(int,boolean).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#FSTCompletionLookup(int,boolean).mjava","sourceNew":"  /**\n   * This constructor prepares for creating a suggested FST using the\n   * {@link #build(TermFreqIterator)} method.\n   * \n   * @param buckets\n   *          The number of weight discretization buckets (see\n   *          {@link FSTCompletion} for details).\n   * \n   * @param exactMatchFirst\n   *          If <code>true</code> exact matches are promoted to the top of the\n   *          suggestions list. Otherwise they appear in the order of\n   *          discretized weight and alphabetical within the bucket.\n   */\n  public FSTCompletionLookup(int buckets, boolean exactMatchFirst) {\n    this.buckets = buckets;\n    this.exactMatchFirst = exactMatchFirst;\n  }\n\n","sourceOld":"  /*\n   * \n   */\n  public FSTCompletionLookup(int buckets, boolean exactMatchFirst) {\n    this.buckets = buckets;\n    this.exactMatchFirst = exactMatchFirst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#FSTCompletionLookup(int,boolean).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#FSTCompletionLookup(int,boolean).mjava","sourceNew":"  /**\n   * This constructor prepares for creating a suggested FST using the\n   * {@link #build(TermFreqIterator)} method.\n   * \n   * @param buckets\n   *          The number of weight discretization buckets (see\n   *          {@link FSTCompletion} for details).\n   * \n   * @param exactMatchFirst\n   *          If <code>true</code> exact matches are promoted to the top of the\n   *          suggestions list. Otherwise they appear in the order of\n   *          discretized weight and alphabetical within the bucket.\n   */\n  public FSTCompletionLookup(int buckets, boolean exactMatchFirst) {\n    this.buckets = buckets;\n    this.exactMatchFirst = exactMatchFirst;\n  }\n\n","sourceOld":"  /**\n   * This constructor prepares for creating a suggested FST using the\n   * {@link #build(TermFreqIterator)} method.\n   * \n   * @param buckets\n   *          The number of weight discretization buckets (see\n   *          {@link FSTCompletion} for details).\n   * \n   * @param exactMatchFirst\n   *          If <code>true</code> exact matches are promoted to the top of the\n   *          suggestions list. Otherwise they appear in the order of\n   *          discretized weight and alphabetical within the bucket.\n   */\n  public FSTCompletionLookup(int buckets, boolean exactMatchFirst) {\n    this.buckets = buckets;\n    this.exactMatchFirst = exactMatchFirst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["05f061ece1572b8f04f70788c9e08aedb357c953"],"7bf07f4ebadc7539de83a531e64678350d78ca26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":["7bf07f4ebadc7539de83a531e64678350d78ca26","05f061ece1572b8f04f70788c9e08aedb357c953"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05f061ece1572b8f04f70788c9e08aedb357c953":["7bf07f4ebadc7539de83a531e64678350d78ca26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7bf07f4ebadc7539de83a531e64678350d78ca26":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","05f061ece1572b8f04f70788c9e08aedb357c953"],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7bf07f4ebadc7539de83a531e64678350d78ca26"],"05f061ece1572b8f04f70788c9e08aedb357c953":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b65b350ca9588f9fc76ce7d6804160d06c45ff42"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}