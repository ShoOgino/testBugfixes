{"path":"backwards/src/test/org/apache/lucene/queryParser/TestQueryParser#testLocalDateFormat().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/queryParser/TestQueryParser#testLocalDateFormat().mjava","pathOld":"/dev/null","sourceNew":"  public void testLocalDateFormat() throws IOException, ParseException {\n    RAMDirectory ramDir = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    addDateDoc(\"a\", 2005, 12, 2, 10, 15, 33, iw);\n    addDateDoc(\"b\", 2005, 12, 4, 22, 15, 00, iw);\n    iw.close();\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    assertHits(1, \"[12/1/2005 TO 12/3/2005]\", is);\n    assertHits(2, \"[12/1/2005 TO 12/4/2005]\", is);\n    assertHits(1, \"[12/3/2005 TO 12/4/2005]\", is);\n    assertHits(1, \"{12/1/2005 TO 12/3/2005}\", is);\n    assertHits(1, \"{12/1/2005 TO 12/4/2005}\", is);\n    assertHits(0, \"{12/3/2005 TO 12/4/2005}\", is);\n    is.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/queryParser/TestQueryParser#testLocalDateFormat().mjava","pathOld":"backwards/src/test/org/apache/lucene/queryParser/TestQueryParser#testLocalDateFormat().mjava","sourceNew":"  public void testLocalDateFormat() throws IOException, ParseException {\n    RAMDirectory ramDir = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    addDateDoc(\"a\", 2005, 12, 2, 10, 15, 33, iw);\n    addDateDoc(\"b\", 2005, 12, 4, 22, 15, 00, iw);\n    iw.close();\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    assertHits(1, \"[12/1/2005 TO 12/3/2005]\", is);\n    assertHits(2, \"[12/1/2005 TO 12/4/2005]\", is);\n    assertHits(1, \"[12/3/2005 TO 12/4/2005]\", is);\n    assertHits(1, \"{12/1/2005 TO 12/3/2005}\", is);\n    assertHits(1, \"{12/1/2005 TO 12/4/2005}\", is);\n    assertHits(0, \"{12/3/2005 TO 12/4/2005}\", is);\n    is.close();\n  }\n\n","sourceOld":"  public void testLocalDateFormat() throws IOException, ParseException {\n    RAMDirectory ramDir = new RAMDirectory();\n    IndexWriter iw = new IndexWriter(ramDir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    addDateDoc(\"a\", 2005, 12, 2, 10, 15, 33, iw);\n    addDateDoc(\"b\", 2005, 12, 4, 22, 15, 00, iw);\n    iw.close();\n    IndexSearcher is = new IndexSearcher(ramDir, true);\n    assertHits(1, \"[12/1/2005 TO 12/3/2005]\", is);\n    assertHits(2, \"[12/1/2005 TO 12/4/2005]\", is);\n    assertHits(1, \"[12/3/2005 TO 12/4/2005]\", is);\n    assertHits(1, \"{12/1/2005 TO 12/3/2005}\", is);\n    assertHits(1, \"{12/1/2005 TO 12/4/2005}\", is);\n    assertHits(0, \"{12/3/2005 TO 12/4/2005}\", is);\n    is.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}