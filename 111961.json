{"path":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40TermVectorsWriter#startTerm(BytesRef,int).mjava","commits":[{"id":"cfd7f00f3dbc4c50d336540f063493fc0f7d830f","date":1322850565,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40TermVectorsWriter#startTerm(BytesRef,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultTermVectorsWriter#startTerm(BytesRef,int).mjava","sourceNew":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    final int prefix = StringHelper.bytesDifference(lastTerm, term);\n    final int suffix = term.length - prefix;\n    tvf.writeVInt(prefix);\n    tvf.writeVInt(suffix);\n    tvf.writeBytes(term.bytes, term.offset + prefix, suffix);\n    tvf.writeVInt(freq);\n    lastTerm.copyBytes(term);\n    lastPosition = lastOffset = 0;\n    \n    if (offsets && positions) {\n      // we might need to buffer if its a non-bulk merge\n      offsetStartBuffer = ArrayUtil.grow(offsetStartBuffer, freq);\n      offsetEndBuffer = ArrayUtil.grow(offsetEndBuffer, freq);\n      offsetIndex = 0;\n      offsetFreq = freq;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    final int prefix = StringHelper.bytesDifference(lastTerm, term);\n    final int suffix = term.length - prefix;\n    tvf.writeVInt(prefix);\n    tvf.writeVInt(suffix);\n    tvf.writeBytes(term.bytes, term.offset + prefix, suffix);\n    tvf.writeVInt(freq);\n    lastTerm.copyBytes(term);\n    lastPosition = lastOffset = 0;\n    \n    if (offsets && positions) {\n      // we might need to buffer if its a non-bulk merge\n      offsetStartBuffer = ArrayUtil.grow(offsetStartBuffer, freq);\n      offsetEndBuffer = ArrayUtil.grow(offsetEndBuffer, freq);\n      offsetIndex = 0;\n      offsetFreq = freq;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsWriter#startTerm(BytesRef,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40TermVectorsWriter#startTerm(BytesRef,int).mjava","sourceNew":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    final int prefix = StringHelper.bytesDifference(lastTerm, term);\n    final int suffix = term.length - prefix;\n    tvf.writeVInt(prefix);\n    tvf.writeVInt(suffix);\n    tvf.writeBytes(term.bytes, term.offset + prefix, suffix);\n    tvf.writeVInt(freq);\n    lastTerm.copyBytes(term);\n    lastPosition = lastOffset = 0;\n    \n    if (offsets && positions) {\n      // we might need to buffer if its a non-bulk merge\n      offsetStartBuffer = ArrayUtil.grow(offsetStartBuffer, freq);\n      offsetEndBuffer = ArrayUtil.grow(offsetEndBuffer, freq);\n      offsetIndex = 0;\n      offsetFreq = freq;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    final int prefix = StringHelper.bytesDifference(lastTerm, term);\n    final int suffix = term.length - prefix;\n    tvf.writeVInt(prefix);\n    tvf.writeVInt(suffix);\n    tvf.writeBytes(term.bytes, term.offset + prefix, suffix);\n    tvf.writeVInt(freq);\n    lastTerm.copyBytes(term);\n    lastPosition = lastOffset = 0;\n    \n    if (offsets && positions) {\n      // we might need to buffer if its a non-bulk merge\n      offsetStartBuffer = ArrayUtil.grow(offsetStartBuffer, freq);\n      offsetEndBuffer = ArrayUtil.grow(offsetEndBuffer, freq);\n      offsetIndex = 0;\n      offsetFreq = freq;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"cfd7f00f3dbc4c50d336540f063493fc0f7d830f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cfd7f00f3dbc4c50d336540f063493fc0f7d830f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"cfd7f00f3dbc4c50d336540f063493fc0f7d830f":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cfd7f00f3dbc4c50d336540f063493fc0f7d830f"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}