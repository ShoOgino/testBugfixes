{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTruncateTokenFilterFactory#testNonPositivePrefixLengthArgument().mjava","commits":[{"id":"2a4c41753eab4c1c6b176d164e7a7bc90ac5ed21","date":1396325114,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTruncateTokenFilterFactory#testNonPositivePrefixLengthArgument().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test that negative prefix length result in exception\n   */\n  public void testNonPositivePrefixLengthArgument() throws Exception {\n    try {\n      tokenFilterFactory(\"Truncate\",\n          TruncateTokenFilterFactory.PREFIX_LENGTH_KEY, \"-5\"\n      );\n      fail();\n    } catch (IllegalArgumentException expected) {\n      assertTrue(expected.getMessage().contains(TruncateTokenFilterFactory.PREFIX_LENGTH_KEY + \" parameter must be a positive number: -5\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTruncateTokenFilterFactory#testNonPositivePrefixLengthArgument().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test that negative prefix length result in exception\n   */\n  public void testNonPositivePrefixLengthArgument() throws Exception {\n    try {\n      tokenFilterFactory(\"Truncate\",\n          TruncateTokenFilterFactory.PREFIX_LENGTH_KEY, \"-5\"\n      );\n      fail();\n    } catch (IllegalArgumentException expected) {\n      assertTrue(expected.getMessage().contains(TruncateTokenFilterFactory.PREFIX_LENGTH_KEY + \" parameter must be a positive number: -5\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTruncateTokenFilterFactory#testNonPositivePrefixLengthArgument().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestTruncateTokenFilterFactory#testNonPositivePrefixLengthArgument().mjava","sourceNew":"  /**\n   * Test that negative prefix length result in exception\n   */\n  public void testNonPositivePrefixLengthArgument() throws Exception {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      tokenFilterFactory(\"Truncate\",\n          TruncateTokenFilterFactory.PREFIX_LENGTH_KEY, \"-5\"\n      );\n    });\n    assertTrue(expected.getMessage().contains(TruncateTokenFilterFactory.PREFIX_LENGTH_KEY + \" parameter must be a positive number: -5\"));\n  }\n\n","sourceOld":"  /**\n   * Test that negative prefix length result in exception\n   */\n  public void testNonPositivePrefixLengthArgument() throws Exception {\n    try {\n      tokenFilterFactory(\"Truncate\",\n          TruncateTokenFilterFactory.PREFIX_LENGTH_KEY, \"-5\"\n      );\n      fail();\n    } catch (IllegalArgumentException expected) {\n      assertTrue(expected.getMessage().contains(TruncateTokenFilterFactory.PREFIX_LENGTH_KEY + \" parameter must be a positive number: -5\"));\n    }\n  }\n\n","bugFix":["2a4c41753eab4c1c6b176d164e7a7bc90ac5ed21"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2a4c41753eab4c1c6b176d164e7a7bc90ac5ed21"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["2a4c41753eab4c1c6b176d164e7a7bc90ac5ed21"],"2a4c41753eab4c1c6b176d164e7a7bc90ac5ed21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5eb2511ababf862ea11e10761c70ee560cd84510","2a4c41753eab4c1c6b176d164e7a7bc90ac5ed21"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a4c41753eab4c1c6b176d164e7a7bc90ac5ed21":["5eb2511ababf862ea11e10761c70ee560cd84510","05fe562aa248790944d43cdd478f512572835ba0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}