{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/FSTTermsReader.TermsReader#TermsReader(FieldInfo,IndexInput,long,long,long,int,int).mjava","commits":[{"id":"1f3b037cd083286b2af89f96e768f85dcd8072d6","date":1396337805,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/FSTTermsReader.TermsReader#TermsReader(FieldInfo,IndexInput,long,long,long,int,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/FSTTermsReader.TermsReader#TermsReader(FieldInfo,long,long,long,int,int).mjava","sourceNew":"    TermsReader(FieldInfo fieldInfo, IndexInput in, long numTerms, long sumTotalTermFreq, long sumDocFreq, int docCount, int longsSize) throws IOException {\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      this.longsSize = longsSize;\n      this.dict = new FST<>(in, new FSTTermOutputs(fieldInfo, longsSize));\n    }\n\n","sourceOld":"    TermsReader(FieldInfo fieldInfo, long numTerms, long sumTotalTermFreq, long sumDocFreq, int docCount, int longsSize) throws IOException {\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      this.longsSize = longsSize;\n      this.dict = new FST<>(in, new FSTTermOutputs(fieldInfo, longsSize));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":1,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/FSTTermsReader.TermsReader#TermsReader(FieldInfo,IndexInput,long,long,long,int,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/FSTTermsReader.TermsReader#TermsReader(FieldInfo,long,long,long,int,int).mjava","sourceNew":"    TermsReader(FieldInfo fieldInfo, IndexInput in, long numTerms, long sumTotalTermFreq, long sumDocFreq, int docCount, int longsSize) throws IOException {\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      this.longsSize = longsSize;\n      this.dict = new FST<>(in, new FSTTermOutputs(fieldInfo, longsSize));\n    }\n\n","sourceOld":"    TermsReader(FieldInfo fieldInfo, long numTerms, long sumTotalTermFreq, long sumDocFreq, int docCount, int longsSize) throws IOException {\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      this.longsSize = longsSize;\n      this.dict = new FST<>(in, new FSTTermOutputs(fieldInfo, longsSize));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb77022ef17ff655c519a3f6ecd393747ac88bcf","date":1578579386,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/FSTTermsReader.TermsReader#TermsReader(FieldInfo,IndexInput,long,long,long,int,int).mjava","sourceNew":null,"sourceOld":"    TermsReader(FieldInfo fieldInfo, IndexInput in, long numTerms, long sumTotalTermFreq, long sumDocFreq, int docCount, int longsSize) throws IOException {\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      this.longsSize = longsSize;\n      this.dict = new FST<>(in, new FSTTermOutputs(fieldInfo, longsSize));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06ab276a5660cb79daae8c5ede063531c700a03a","date":1578587874,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/FSTTermsReader.TermsReader#TermsReader(FieldInfo,IndexInput,long,long,long,int,int).mjava","pathOld":"/dev/null","sourceNew":"    TermsReader(FieldInfo fieldInfo, IndexInput in, long numTerms, long sumTotalTermFreq, long sumDocFreq, int docCount, int longsSize) throws IOException {\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      this.longsSize = longsSize;\n      this.dict = new FST<>(in, new FSTTermOutputs(fieldInfo, longsSize));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08a5168e06e037794c0aba7f94f76ff3c09704d2","date":1579264785,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/FSTTermsReader.TermsReader#TermsReader(FieldInfo,IndexInput,long,long,long,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/FSTTermsReader.TermsReader#TermsReader(FieldInfo,IndexInput,long,long,long,int,int).mjava","sourceNew":"    TermsReader(FieldInfo fieldInfo, IndexInput in, long numTerms, long sumTotalTermFreq, long sumDocFreq, int docCount) throws IOException {\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      this.dict = new FST<>(in, new FSTTermOutputs(fieldInfo));\n    }\n\n","sourceOld":"    TermsReader(FieldInfo fieldInfo, IndexInput in, long numTerms, long sumTotalTermFreq, long sumDocFreq, int docCount, int longsSize) throws IOException {\n      this.fieldInfo = fieldInfo;\n      this.numTerms = numTerms;\n      this.sumTotalTermFreq = sumTotalTermFreq;\n      this.sumDocFreq = sumDocFreq;\n      this.docCount = docCount;\n      this.longsSize = longsSize;\n      this.dict = new FST<>(in, new FSTTermOutputs(fieldInfo, longsSize));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cb77022ef17ff655c519a3f6ecd393747ac88bcf":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"08a5168e06e037794c0aba7f94f76ff3c09704d2":["06ab276a5660cb79daae8c5ede063531c700a03a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["08a5168e06e037794c0aba7f94f76ff3c09704d2"],"06ab276a5660cb79daae8c5ede063531c700a03a":["cb77022ef17ff655c519a3f6ecd393747ac88bcf"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5eb2511ababf862ea11e10761c70ee560cd84510","cb77022ef17ff655c519a3f6ecd393747ac88bcf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5eb2511ababf862ea11e10761c70ee560cd84510","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"cb77022ef17ff655c519a3f6ecd393747ac88bcf":["06ab276a5660cb79daae8c5ede063531c700a03a"],"08a5168e06e037794c0aba7f94f76ff3c09704d2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"06ab276a5660cb79daae8c5ede063531c700a03a":["08a5168e06e037794c0aba7f94f76ff3c09704d2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}