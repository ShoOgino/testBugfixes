{"path":"solr/solrj/src/java/org/noggit/JSONParser#readStringChars().mjava","commits":[{"id":"980f4ef5a16664be88d82c37e6af5c49a3d57c9c","date":1557969027,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/noggit/JSONParser#readStringChars().mjava","pathOld":"/dev/null","sourceNew":"  private CharArr readStringChars() throws IOException {\n    if (stringTerm == 0) {\n      // \"out\" will already contain the first part of the bare string, so don't reset it\n      readStringBare(out);\n      return out;\n    }\n\n    char terminator = (char) stringTerm;\n    int i;\n    for (i = start; i < end; i++) {\n      char c = buf[i];\n      if (c == terminator) {\n        tmp.set(buf, start, i);  // directly use input buffer\n        start = i + 1; // advance past last '\"'\n        return tmp;\n      } else if (c == '\\\\') {\n        break;\n      }\n    }\n    out.reset();\n    readStringChars2(out, i);\n    return out;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"980f4ef5a16664be88d82c37e6af5c49a3d57c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["980f4ef5a16664be88d82c37e6af5c49a3d57c9c"]},"commit2Childs":{"980f4ef5a16664be88d82c37e6af5c49a3d57c9c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["980f4ef5a16664be88d82c37e6af5c49a3d57c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}