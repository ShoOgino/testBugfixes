{"path":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#newIndexWriter(SolrCore).mjava","commits":[{"id":"e22ffe8cc51a892ae103df018822d7873e901c2a","date":1313696790,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#newIndexWriter(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultIndexWriterProvider#newIndexWriter(SolrCore).mjava","sourceNew":"  @Override\n  public synchronized void newIndexWriter(SolrCore core) throws IOException {\n    if (indexWriter != null) {\n      indexWriter.close();\n    }\n    indexWriter = createMainIndexWriter(core, \"DirectUpdateHandler2\",\n        false, true);\n  }\n\n","sourceOld":"  @Override\n  public synchronized void newIndexWriter(SolrCore core) throws IOException {\n    if (indexWriter != null) {\n      indexWriter.close();\n    }\n    indexWriter = createMainIndexWriter(core, \"DirectUpdateHandler2\",\n        false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08bcaef9e931052e4ca24133a89cc6aefaf61829","date":1342469326,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#newIndexWriter(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#newIndexWriter(SolrCore).mjava","sourceNew":"  @Override\n  public synchronized void newIndexWriter(SolrCore core) throws IOException {\n    // we need to wait for the Writer to fall out of use\n    // first lets stop it from being lent out\n    pauseWriter = true;\n    // then lets wait until its out of use\n    while(!writerFree) {\n      try {\n        wait();\n      } catch (InterruptedException e) {}\n    }\n    \n    if (indexWriter != null) {\n      indexWriter.close();\n    }\n    indexWriter = createMainIndexWriter(core, \"DirectUpdateHandler2\",\n        false, true);\n    // we need to null this so it picks up the new writer next get call\n    refCntWriter = null;\n    pauseWriter = false;\n    notifyAll();\n  }\n\n","sourceOld":"  @Override\n  public synchronized void newIndexWriter(SolrCore core) throws IOException {\n    if (indexWriter != null) {\n      indexWriter.close();\n    }\n    indexWriter = createMainIndexWriter(core, \"DirectUpdateHandler2\",\n        false, true);\n  }\n\n","bugFix":null,"bugIntro":["effc39e03d3151752006de9aab4fc6d77bcf6f82"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"effc39e03d3151752006de9aab4fc6d77bcf6f82","date":1342533820,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#newIndexWriter(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#newIndexWriter(SolrCore).mjava","sourceNew":"  @Override\n  public synchronized void newIndexWriter(SolrCore core) throws IOException {\n    // we need to wait for the Writer to fall out of use\n    // first lets stop it from being lent out\n    pauseWriter = true;\n    // then lets wait until its out of use\n    while(!writerFree) {\n      try {\n        wait();\n      } catch (InterruptedException e) {}\n    }\n    try {\n      if (indexWriter != null) {\n        indexWriter.close();\n      }\n      indexWriter = createMainIndexWriter(core, \"DirectUpdateHandler2\", false,\n          true);\n      // we need to null this so it picks up the new writer next get call\n      refCntWriter = null;\n    } finally {\n      pauseWriter = false;\n      notifyAll();\n    }\n  }\n\n","sourceOld":"  @Override\n  public synchronized void newIndexWriter(SolrCore core) throws IOException {\n    // we need to wait for the Writer to fall out of use\n    // first lets stop it from being lent out\n    pauseWriter = true;\n    // then lets wait until its out of use\n    while(!writerFree) {\n      try {\n        wait();\n      } catch (InterruptedException e) {}\n    }\n    \n    if (indexWriter != null) {\n      indexWriter.close();\n    }\n    indexWriter = createMainIndexWriter(core, \"DirectUpdateHandler2\",\n        false, true);\n    // we need to null this so it picks up the new writer next get call\n    refCntWriter = null;\n    pauseWriter = false;\n    notifyAll();\n  }\n\n","bugFix":["e22ffe8cc51a892ae103df018822d7873e901c2a","0e8cb6e9df9d6fc873383924f02d9aacfffebf4e","08bcaef9e931052e4ca24133a89cc6aefaf61829"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4897c5b415f476d84ec970a19c41510645887526","date":1342627582,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#newIndexWriter(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#newIndexWriter(SolrCore).mjava","sourceNew":"  @Override\n  public synchronized void newIndexWriter(SolrCore core) throws IOException {\n    // we need to wait for the Writer to fall out of use\n    // first lets stop it from being lent out\n    pauseWriter = true;\n    // then lets wait until its out of use\n    while(!writerFree) {\n      try {\n        wait();\n      } catch (InterruptedException e) {}\n    }\n    \n    if (indexWriter != null) {\n      try {\n        indexWriter.close();\n      } catch (Exception e) {\n        SolrException.log(log, \"Error closing old IndexWriter\", e);\n      }\n    }\n    \n    try {\n      indexWriter = createMainIndexWriter(core, \"DirectUpdateHandler2\", false,\n          true);\n      // we need to null this so it picks up the new writer next get call\n      refCntWriter = null;\n    } finally {\n      pauseWriter = false;\n      notifyAll();\n    }\n  }\n\n","sourceOld":"  @Override\n  public synchronized void newIndexWriter(SolrCore core) throws IOException {\n    // we need to wait for the Writer to fall out of use\n    // first lets stop it from being lent out\n    pauseWriter = true;\n    // then lets wait until its out of use\n    while(!writerFree) {\n      try {\n        wait();\n      } catch (InterruptedException e) {}\n    }\n    try {\n      if (indexWriter != null) {\n        indexWriter.close();\n      }\n      indexWriter = createMainIndexWriter(core, \"DirectUpdateHandler2\", false,\n          true);\n      // we need to null this so it picks up the new writer next get call\n      refCntWriter = null;\n    } finally {\n      pauseWriter = false;\n      notifyAll();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d55d7dd66af5f3a67881f4c44c8c7b7d9d585d15","date":1342705832,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#newIndexWriter(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#newIndexWriter(SolrCore).mjava","sourceNew":"  @Override\n  public synchronized void newIndexWriter(SolrCore core) throws IOException {\n    // we need to wait for the Writer to fall out of use\n    // first lets stop it from being lent out\n    pauseWriter = true;\n    // then lets wait until its out of use\n    while(!writerFree) {\n      try {\n        wait();\n      } catch (InterruptedException e) {}\n    }\n    \n    try {\n      if (indexWriter != null) {\n        try {\n          indexWriter.close();\n        } catch (Throwable t) {\n          SolrException.log(log, \"Error closing old IndexWriter\", t);\n        }\n      }\n      \n      indexWriter = createMainIndexWriter(core, \"DirectUpdateHandler2\", false,\n          true);\n      // we need to null this so it picks up the new writer next get call\n      refCntWriter = null;\n    } finally {\n      pauseWriter = false;\n      notifyAll();\n    }\n  }\n\n","sourceOld":"  @Override\n  public synchronized void newIndexWriter(SolrCore core) throws IOException {\n    // we need to wait for the Writer to fall out of use\n    // first lets stop it from being lent out\n    pauseWriter = true;\n    // then lets wait until its out of use\n    while(!writerFree) {\n      try {\n        wait();\n      } catch (InterruptedException e) {}\n    }\n    \n    if (indexWriter != null) {\n      try {\n        indexWriter.close();\n      } catch (Exception e) {\n        SolrException.log(log, \"Error closing old IndexWriter\", e);\n      }\n    }\n    \n    try {\n      indexWriter = createMainIndexWriter(core, \"DirectUpdateHandler2\", false,\n          true);\n      // we need to null this so it picks up the new writer next get call\n      refCntWriter = null;\n    } finally {\n      pauseWriter = false;\n      notifyAll();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#newIndexWriter(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#newIndexWriter(SolrCore).mjava","sourceNew":"  @Override\n  public synchronized void newIndexWriter(SolrCore core) throws IOException {\n    // we need to wait for the Writer to fall out of use\n    // first lets stop it from being lent out\n    pauseWriter = true;\n    // then lets wait until its out of use\n    while(!writerFree) {\n      try {\n        wait();\n      } catch (InterruptedException e) {}\n    }\n    \n    try {\n      if (indexWriter != null) {\n        try {\n          indexWriter.close();\n        } catch (Throwable t) {\n          SolrException.log(log, \"Error closing old IndexWriter\", t);\n        }\n      }\n      \n      indexWriter = createMainIndexWriter(core, \"DirectUpdateHandler2\", false,\n          true);\n      // we need to null this so it picks up the new writer next get call\n      refCntWriter = null;\n    } finally {\n      pauseWriter = false;\n      notifyAll();\n    }\n  }\n\n","sourceOld":"  @Override\n  public synchronized void newIndexWriter(SolrCore core) throws IOException {\n    if (indexWriter != null) {\n      indexWriter.close();\n    }\n    indexWriter = createMainIndexWriter(core, \"DirectUpdateHandler2\",\n        false, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#newIndexWriter(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#newIndexWriter(SolrCore).mjava","sourceNew":"  @Override\n  public synchronized void newIndexWriter(SolrCore core) throws IOException {\n    // we need to wait for the Writer to fall out of use\n    // first lets stop it from being lent out\n    pauseWriter = true;\n    // then lets wait until its out of use\n    while(!writerFree) {\n      try {\n        wait();\n      } catch (InterruptedException e) {}\n    }\n    \n    try {\n      if (indexWriter != null) {\n        try {\n          indexWriter.close();\n        } catch (Throwable t) {\n          SolrException.log(log, \"Error closing old IndexWriter\", t);\n        }\n      }\n      \n      indexWriter = createMainIndexWriter(core, \"DirectUpdateHandler2\", false,\n          true);\n      // we need to null this so it picks up the new writer next get call\n      refCntWriter = null;\n    } finally {\n      pauseWriter = false;\n      notifyAll();\n    }\n  }\n\n","sourceOld":"  @Override\n  public synchronized void newIndexWriter(SolrCore core) throws IOException {\n    if (indexWriter != null) {\n      indexWriter.close();\n    }\n    indexWriter = createMainIndexWriter(core, \"DirectUpdateHandler2\",\n        false, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1381b91b03f7409d8d548c7070dbc615931a0f50","date":1343667369,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#newIndexWriter(SolrCore).mjava","sourceNew":null,"sourceOld":"  @Override\n  public synchronized void newIndexWriter(SolrCore core) throws IOException {\n    // we need to wait for the Writer to fall out of use\n    // first lets stop it from being lent out\n    pauseWriter = true;\n    // then lets wait until its out of use\n    while(!writerFree) {\n      try {\n        wait();\n      } catch (InterruptedException e) {}\n    }\n    \n    try {\n      if (indexWriter != null) {\n        try {\n          indexWriter.close();\n        } catch (Throwable t) {\n          SolrException.log(log, \"Error closing old IndexWriter\", t);\n        }\n      }\n      \n      indexWriter = createMainIndexWriter(core, \"DirectUpdateHandler2\", false,\n          true);\n      // we need to null this so it picks up the new writer next get call\n      refCntWriter = null;\n    } finally {\n      pauseWriter = false;\n      notifyAll();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#newIndexWriter(SolrCore).mjava","sourceNew":null,"sourceOld":"  @Override\n  public synchronized void newIndexWriter(SolrCore core) throws IOException {\n    // we need to wait for the Writer to fall out of use\n    // first lets stop it from being lent out\n    pauseWriter = true;\n    // then lets wait until its out of use\n    while(!writerFree) {\n      try {\n        wait();\n      } catch (InterruptedException e) {}\n    }\n    \n    try {\n      if (indexWriter != null) {\n        try {\n          indexWriter.close();\n        } catch (Throwable t) {\n          SolrException.log(log, \"Error closing old IndexWriter\", t);\n        }\n      }\n      \n      indexWriter = createMainIndexWriter(core, \"DirectUpdateHandler2\", false,\n          true);\n      // we need to null this so it picks up the new writer next get call\n      refCntWriter = null;\n    } finally {\n      pauseWriter = false;\n      notifyAll();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#newIndexWriter(SolrCore).mjava","sourceNew":null,"sourceOld":"  @Override\n  public synchronized void newIndexWriter(SolrCore core) throws IOException {\n    // we need to wait for the Writer to fall out of use\n    // first lets stop it from being lent out\n    pauseWriter = true;\n    // then lets wait until its out of use\n    while(!writerFree) {\n      try {\n        wait();\n      } catch (InterruptedException e) {}\n    }\n    \n    try {\n      if (indexWriter != null) {\n        try {\n          indexWriter.close();\n        } catch (Throwable t) {\n          SolrException.log(log, \"Error closing old IndexWriter\", t);\n        }\n      }\n      \n      indexWriter = createMainIndexWriter(core, \"DirectUpdateHandler2\", false,\n          true);\n      // we need to null this so it picks up the new writer next get call\n      refCntWriter = null;\n    } finally {\n      pauseWriter = false;\n      notifyAll();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["e22ffe8cc51a892ae103df018822d7873e901c2a","d55d7dd66af5f3a67881f4c44c8c7b7d9d585d15"],"effc39e03d3151752006de9aab4fc6d77bcf6f82":["08bcaef9e931052e4ca24133a89cc6aefaf61829"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["e22ffe8cc51a892ae103df018822d7873e901c2a","d55d7dd66af5f3a67881f4c44c8c7b7d9d585d15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["fe33227f6805edab2036cbb80645cc4e2d1fa424","1381b91b03f7409d8d548c7070dbc615931a0f50"],"4897c5b415f476d84ec970a19c41510645887526":["effc39e03d3151752006de9aab4fc6d77bcf6f82"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["aba371508186796cc6151d8223a5b4e16d02e26e","1381b91b03f7409d8d548c7070dbc615931a0f50"],"1381b91b03f7409d8d548c7070dbc615931a0f50":["d55d7dd66af5f3a67881f4c44c8c7b7d9d585d15"],"08bcaef9e931052e4ca24133a89cc6aefaf61829":["e22ffe8cc51a892ae103df018822d7873e901c2a"],"e22ffe8cc51a892ae103df018822d7873e901c2a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1381b91b03f7409d8d548c7070dbc615931a0f50"],"d55d7dd66af5f3a67881f4c44c8c7b7d9d585d15":["4897c5b415f476d84ec970a19c41510645887526"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":["d6f074e73200c07d54f242d3880a8da5a35ff97b"],"effc39e03d3151752006de9aab4fc6d77bcf6f82":["4897c5b415f476d84ec970a19c41510645887526"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e22ffe8cc51a892ae103df018822d7873e901c2a"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"4897c5b415f476d84ec970a19c41510645887526":["d55d7dd66af5f3a67881f4c44c8c7b7d9d585d15"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"1381b91b03f7409d8d548c7070dbc615931a0f50":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"08bcaef9e931052e4ca24133a89cc6aefaf61829":["effc39e03d3151752006de9aab4fc6d77bcf6f82"],"e22ffe8cc51a892ae103df018822d7873e901c2a":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","08bcaef9e931052e4ca24133a89cc6aefaf61829"],"d55d7dd66af5f3a67881f4c44c8c7b7d9d585d15":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","1381b91b03f7409d8d548c7070dbc615931a0f50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}