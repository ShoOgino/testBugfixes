{"path":"lucene/core/src/test/org/apache/lucene/search/TestQueryRescorer.FixedScoreQuery#hashCode().mjava","commits":[{"id":"222ff577a0e1b2399d3151966bf561ecd7a0b7d0","date":1395575041,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestQueryRescorer.FixedScoreQuery#hashCode().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int hashCode() {\n      int PRIME = 31;\n      int hash = super.hashCode();\n      if (reverse) {\n        hash = PRIME * hash + 3623;\n      }\n      hash = PRIME * hash + Arrays.hashCode(idToNum);\n      return hash;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestQueryRescorer.FixedScoreQuery#hashCode().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestQueryRescorer.FixedScoreQuery#hashCode().mjava","sourceNew":"    @Override\n    public int hashCode() {\n      int hash = classHash();\n      hash = 31 * hash + (reverse ? 0 : 1);\n      hash = 31 * hash + Arrays.hashCode(idToNum);\n      return hash;\n    }\n\n","sourceOld":"    @Override\n    public int hashCode() {\n      int PRIME = 31;\n      int hash = super.hashCode();\n      if (reverse) {\n        hash = PRIME * hash + 3623;\n      }\n      hash = PRIME * hash + Arrays.hashCode(idToNum);\n      return hash;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestQueryRescorer.FixedScoreQuery#hashCode().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestQueryRescorer.FixedScoreQuery#hashCode().mjava","sourceNew":"    @Override\n    public int hashCode() {\n      int hash = classHash();\n      hash = 31 * hash + (reverse ? 0 : 1);\n      hash = 31 * hash + Arrays.hashCode(idToNum);\n      return hash;\n    }\n\n","sourceOld":"    @Override\n    public int hashCode() {\n      int PRIME = 31;\n      int hash = super.hashCode();\n      if (reverse) {\n        hash = PRIME * hash + 3623;\n      }\n      hash = PRIME * hash + Arrays.hashCode(idToNum);\n      return hash;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"222ff577a0e1b2399d3151966bf561ecd7a0b7d0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["222ff577a0e1b2399d3151966bf561ecd7a0b7d0"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["222ff577a0e1b2399d3151966bf561ecd7a0b7d0","0e7bc21595222ae4f75509300fbb7726691f387f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e7bc21595222ae4f75509300fbb7726691f387f"]},"commit2Childs":{"222ff577a0e1b2399d3151966bf561ecd7a0b7d0":["0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["222ff577a0e1b2399d3151966bf561ecd7a0b7d0"],"0e7bc21595222ae4f75509300fbb7726691f387f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}