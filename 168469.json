{"path":"src/java/org/apache/lucene/search/DocIdSet#isCacheable().mjava","commits":[{"id":"3a0b8ae4ac997de7adea27f34c380588fa28d646","date":1253188966,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/DocIdSet#isCacheable().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * This method is a hint for {@link CachingWrapperFilter}, if this <code>DocIdSet</code>\n   * should be cached without copying it into a BitSet. The default is to return\n   * <code>false</code>. If you have an own <code>DocIdSet</code> implementation\n   * that does its iteration very effective and fast without doing disk I/O,\n   * override this method and return <code>true</here>.\n   */\n  public boolean isCacheable() {\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/DocIdSet#isCacheable().mjava","pathOld":"src/java/org/apache/lucene/search/DocIdSet#isCacheable().mjava","sourceNew":"  /**\n   * This method is a hint for {@link CachingWrapperFilter}, if this <code>DocIdSet</code>\n   * should be cached without copying it into a BitSet. The default is to return\n   * <code>false</code>. If you have an own <code>DocIdSet</code> implementation\n   * that does its iteration very effective and fast without doing disk I/O,\n   * override this method and return <code>true</here>.\n   */\n  public boolean isCacheable() {\n    return false;\n  }\n\n","sourceOld":"  /**\n   * This method is a hint for {@link CachingWrapperFilter}, if this <code>DocIdSet</code>\n   * should be cached without copying it into a BitSet. The default is to return\n   * <code>false</code>. If you have an own <code>DocIdSet</code> implementation\n   * that does its iteration very effective and fast without doing disk I/O,\n   * override this method and return <code>true</here>.\n   */\n  public boolean isCacheable() {\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3a0b8ae4ac997de7adea27f34c380588fa28d646"],"3a0b8ae4ac997de7adea27f34c380588fa28d646":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a0b8ae4ac997de7adea27f34c380588fa28d646"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a0b8ae4ac997de7adea27f34c380588fa28d646":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}