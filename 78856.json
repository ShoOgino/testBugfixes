{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingBinaryTest#createNewSolrServer().mjava","commits":[{"id":"020841d13e26cb8a592671f1fc6faafeb69bda4a","date":1322041194,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingBinaryTest#createNewSolrServer().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;\n      // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          ex.printStackTrace();\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      s.setParser(new BinaryResponseParser());\n      s.setRequestWriter(new BinaryRequestWriter());\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["b07da04837dda68434fe9bba384d3c4faaa21235"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7321b77a7bc3edfebd637ef273e9dfaa9969eba6","date":1333023097,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingBinaryTest#createNewSolrServer().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingBinaryTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;\n      // smaller queue size hits locks more often\n      ConcurrentUpdateSolrServer s = new ConcurrentUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          ex.printStackTrace();\n        }\n      };\n      s.setParser(new BinaryResponseParser());\n      s.setRequestWriter(new BinaryRequestWriter());\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;\n      // smaller queue size hits locks more often\n      CommonsHttpSolrServer s = new StreamingUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          ex.printStackTrace();\n        }\n      };\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      s.setParser(new BinaryResponseParser());\n      s.setRequestWriter(new BinaryRequestWriter());\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":["b07da04837dda68434fe9bba384d3c4faaa21235"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b07da04837dda68434fe9bba384d3c4faaa21235","date":1339673862,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingBinaryTest#createNewSolrServer().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingBinaryTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer() {\n    ConcurrentUpdateSolrServer s = (ConcurrentUpdateSolrServer)super.createNewSolrServer();\n    s.setParser(new BinaryResponseParser());\n    s.setRequestWriter(new BinaryRequestWriter());\n    return s;\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer()\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context;\n      // smaller queue size hits locks more often\n      ConcurrentUpdateSolrServer s = new ConcurrentUpdateSolrServer( url, 2, 5 ) {\n        @Override\n        public void handleError(Throwable ex) {\n          ex.printStackTrace();\n        }\n      };\n      s.setParser(new BinaryResponseParser());\n      s.setRequestWriter(new BinaryRequestWriter());\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":["020841d13e26cb8a592671f1fc6faafeb69bda4a","7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/SolrExampleStreamingBinaryTest#createNewSolrServer().mjava","sourceNew":null,"sourceOld":"  @Override\n  public SolrServer createNewSolrServer() {\n    ConcurrentUpdateSolrServer s = (ConcurrentUpdateSolrServer)super.createNewSolrServer();\n    s.setParser(new BinaryResponseParser());\n    s.setRequestWriter(new BinaryRequestWriter());\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b07da04837dda68434fe9bba384d3c4faaa21235":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"020841d13e26cb8a592671f1fc6faafeb69bda4a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["020841d13e26cb8a592671f1fc6faafeb69bda4a"],"bafca15d8e408346a67f4282ad1143b88023893b":["b07da04837dda68434fe9bba384d3c4faaa21235"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"b07da04837dda68434fe9bba384d3c4faaa21235":["bafca15d8e408346a67f4282ad1143b88023893b"],"020841d13e26cb8a592671f1fc6faafeb69bda4a":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["020841d13e26cb8a592671f1fc6faafeb69bda4a"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["b07da04837dda68434fe9bba384d3c4faaa21235"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}