{"path":"solr/core/src/java/org/apache/solr/security/SolrLogAuditLoggerPlugin#audit(AuditEvent).mjava","commits":[{"id":"12ddd922ea96c1d0ea68a68506b6984a246cfb22","date":1554385731,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/SolrLogAuditLoggerPlugin#audit(AuditEvent).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Audit logs an event to Solr log. The event should be a {@link AuditEvent} to be able to pull context info\n   * @param event the event to log\n   */\n  @Override\n  public void audit(AuditEvent event) {\n    switch (event.getLevel()) {\n      case INFO:\n        log.info(formatter.formatEvent(event));\n        break;\n\n      case WARN:\n        log.warn(formatter.formatEvent(event));\n        break;\n\n      case ERROR:\n        log.error(formatter.formatEvent(event));\n        break;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54faedfb0e03479a38f5ee82f2dfaeea536e9404","date":1587251295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/SolrLogAuditLoggerPlugin#audit(AuditEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/SolrLogAuditLoggerPlugin#audit(AuditEvent).mjava","sourceNew":"  /**\n   * Audit logs an event to Solr log. The event should be a {@link AuditEvent} to be able to pull context info\n   * @param event the event to log\n   */\n  @Override\n  public void audit(AuditEvent event) {\n    switch (event.getLevel()) {\n      case INFO:\n        if (log.isInfoEnabled()) {\n          log.info(formatter.formatEvent(event));\n        }\n        break;\n\n      case WARN:\n        if (log.isWarnEnabled()) {\n          log.warn(formatter.formatEvent(event));\n        }\n        break;\n\n      case ERROR:\n        log.error(formatter.formatEvent(event));\n        break;\n    }\n  }\n\n","sourceOld":"  /**\n   * Audit logs an event to Solr log. The event should be a {@link AuditEvent} to be able to pull context info\n   * @param event the event to log\n   */\n  @Override\n  public void audit(AuditEvent event) {\n    switch (event.getLevel()) {\n      case INFO:\n        log.info(formatter.formatEvent(event));\n        break;\n\n      case WARN:\n        log.warn(formatter.formatEvent(event));\n        break;\n\n      case ERROR:\n        log.error(formatter.formatEvent(event));\n        break;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"575e66bd4b2349209027f6801184da7fc3cba13f","date":1587609169,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/SolrLogAuditLoggerPlugin#audit(AuditEvent).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/SolrLogAuditLoggerPlugin#audit(AuditEvent).mjava","sourceNew":"  /**\n   * Audit logs an event to Solr log. The event should be a {@link AuditEvent} to be able to pull context info\n   * @param event the event to log\n   */\n  @Override\n  public void audit(AuditEvent event) {\n    switch (event.getLevel()) {\n      case INFO:\n        if (log.isInfoEnabled()) {\n          log.info(formatter.formatEvent(event));\n        }\n        break;\n\n      case WARN:\n        log.warn(formatter.formatEvent(event));\n        break;\n\n      case ERROR:\n        log.error(formatter.formatEvent(event));\n        break;\n    }\n  }\n\n","sourceOld":"  /**\n   * Audit logs an event to Solr log. The event should be a {@link AuditEvent} to be able to pull context info\n   * @param event the event to log\n   */\n  @Override\n  public void audit(AuditEvent event) {\n    switch (event.getLevel()) {\n      case INFO:\n        if (log.isInfoEnabled()) {\n          log.info(formatter.formatEvent(event));\n        }\n        break;\n\n      case WARN:\n        if (log.isWarnEnabled()) {\n          log.warn(formatter.formatEvent(event));\n        }\n        break;\n\n      case ERROR:\n        log.error(formatter.formatEvent(event));\n        break;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54faedfb0e03479a38f5ee82f2dfaeea536e9404":["12ddd922ea96c1d0ea68a68506b6984a246cfb22"],"12ddd922ea96c1d0ea68a68506b6984a246cfb22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"575e66bd4b2349209027f6801184da7fc3cba13f":["54faedfb0e03479a38f5ee82f2dfaeea536e9404"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["575e66bd4b2349209027f6801184da7fc3cba13f"]},"commit2Childs":{"54faedfb0e03479a38f5ee82f2dfaeea536e9404":["575e66bd4b2349209027f6801184da7fc3cba13f"],"12ddd922ea96c1d0ea68a68506b6984a246cfb22":["54faedfb0e03479a38f5ee82f2dfaeea536e9404"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["12ddd922ea96c1d0ea68a68506b6984a246cfb22"],"575e66bd4b2349209027f6801184da7fc3cba13f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}