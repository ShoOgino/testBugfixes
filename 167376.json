{"path":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","pathOld":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","sourceNew":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n    \n  }\n\n","sourceOld":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","sourceNew":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n    r.close();\n  }\n\n","sourceOld":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7006f130a90f88aaa52ca7c0bfe4a204efef6b3","date":1282077658,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","sourceNew":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n    r.close();\n  }\n\n","sourceOld":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d76ab9983349b199b0e6f65776c0087b0c08a10d","date":1282230089,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","sourceNew":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","sourceOld":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","sourceNew":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","sourceOld":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e230a61047bc041516c811baa08a7174d6f8322a","date":1306175633,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","sourceNew":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","sourceOld":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","sourceNew":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","sourceOld":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/suggest/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","pathOld":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#testBuild().mjava","sourceNew":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","sourceOld":"  public void testBuild() throws CorruptIndexException, IOException {\n    IndexReader r = IndexReader.open(userindex, true);\n\n    spellChecker.clearIndex();\n\n    addwords(r, spellChecker, \"field1\");\n    int num_field1 = this.numdoc();\n\n    addwords(r, spellChecker, \"field2\");\n    int num_field2 = this.numdoc();\n\n    assertEquals(num_field2, num_field1 + 1);\n    \n    assertLastSearcherOpen(4);\n    \n    checkCommonSuggestions(r);\n    checkLevenshteinSuggestions(r);\n    \n    spellChecker.setStringDistance(new JaroWinklerDistance());\n    spellChecker.setAccuracy(0.8f);\n    checkCommonSuggestions(r);\n    checkJaroWinklerSuggestions();\n    // the accuracy is set to 0.8 by default, but the best result has a score of 0.925\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.93f);\n    assertTrue(similar.length == 0);\n    similar = spellChecker.suggestSimilar(\"fvie\", 2, 0.92f);\n    assertTrue(similar.length == 1);\n\n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    spellChecker.setStringDistance(new NGramDistance(2));\n    spellChecker.setAccuracy(0.5f);\n    checkCommonSuggestions(r);\n    checkNGramSuggestions();\n\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d76ab9983349b199b0e6f65776c0087b0c08a10d":["c7006f130a90f88aaa52ca7c0bfe4a204efef6b3"],"c7006f130a90f88aaa52ca7c0bfe4a204efef6b3":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"e230a61047bc041516c811baa08a7174d6f8322a":["d76ab9983349b199b0e6f65776c0087b0c08a10d"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["d76ab9983349b199b0e6f65776c0087b0c08a10d","e230a61047bc041516c811baa08a7174d6f8322a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","d76ab9983349b199b0e6f65776c0087b0c08a10d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e230a61047bc041516c811baa08a7174d6f8322a"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["d76ab9983349b199b0e6f65776c0087b0c08a10d","e230a61047bc041516c811baa08a7174d6f8322a"]},"commit2Childs":{"d76ab9983349b199b0e6f65776c0087b0c08a10d":["e230a61047bc041516c811baa08a7174d6f8322a","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"c7006f130a90f88aaa52ca7c0bfe4a204efef6b3":["d76ab9983349b199b0e6f65776c0087b0c08a10d"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["c7006f130a90f88aaa52ca7c0bfe4a204efef6b3"],"e230a61047bc041516c811baa08a7174d6f8322a":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}