{"path":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#createRandomCollector(String,Sort).mjava","commits":[{"id":"97d4692d0c601ff773f0a2231967312428a904e4","date":1366026608,"type":1,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#createRandomCollector(String,Sort).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#createRandomCollector(String,Sort,boolean,DocValuesType).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  private AbstractAllGroupHeadsCollector<?> createRandomCollector(String groupField, Sort sortWithinGroup) {\n    AbstractAllGroupHeadsCollector<? extends AbstractAllGroupHeadsCollector.GroupHead> collector;\n    if (random().nextBoolean()) {\n      ValueSource vs = new BytesRefFieldSource(groupField);\n      collector =  new FunctionAllGroupHeadsCollector(vs, new HashMap<>(), sortWithinGroup);\n    } else {\n      collector =  TermAllGroupHeadsCollector.create(groupField, sortWithinGroup);\n    }\n\n    if (VERBOSE) {\n      System.out.println(\"Selected implementation: \" + collector.getClass().getSimpleName());\n    }\n\n    return collector;\n  }\n\n","sourceOld":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  private AbstractAllGroupHeadsCollector<?> createRandomCollector(String groupField, Sort sortWithinGroup, boolean canUseIDV, DocValuesType valueType) {\n    AbstractAllGroupHeadsCollector<? extends AbstractAllGroupHeadsCollector.GroupHead> collector;\n    if (random().nextBoolean()) {\n      ValueSource vs = new BytesRefFieldSource(groupField);\n      collector =  new FunctionAllGroupHeadsCollector(vs, new HashMap<Object, Object>(), sortWithinGroup);\n    } else {\n      collector =  TermAllGroupHeadsCollector.create(groupField, sortWithinGroup);\n    }\n\n    if (VERBOSE) {\n      System.out.println(\"Selected implementation: \" + collector.getClass().getSimpleName());\n    }\n\n    return collector;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20e94e61fe5291647346b70437617e6b6c370408","date":1483783127,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#createRandomCollector(String,Sort).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#createRandomCollector(String,Sort).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  private AllGroupHeadsCollector<?> createRandomCollector(String groupField, Sort sortWithinGroup) {\n    AllGroupHeadsCollector<?> collector;\n    if (random().nextBoolean()) {\n      ValueSource vs = new BytesRefFieldSource(groupField);\n      collector =  new FunctionAllGroupHeadsCollector(vs, new HashMap<>(), sortWithinGroup);\n    } else {\n      collector =  TermAllGroupHeadsCollector.create(groupField, sortWithinGroup);\n    }\n\n    if (VERBOSE) {\n      System.out.println(\"Selected implementation: \" + collector.getClass().getSimpleName());\n    }\n\n    return collector;\n  }\n\n","sourceOld":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  private AbstractAllGroupHeadsCollector<?> createRandomCollector(String groupField, Sort sortWithinGroup) {\n    AbstractAllGroupHeadsCollector<? extends AbstractAllGroupHeadsCollector.GroupHead> collector;\n    if (random().nextBoolean()) {\n      ValueSource vs = new BytesRefFieldSource(groupField);\n      collector =  new FunctionAllGroupHeadsCollector(vs, new HashMap<>(), sortWithinGroup);\n    } else {\n      collector =  TermAllGroupHeadsCollector.create(groupField, sortWithinGroup);\n    }\n\n    if (VERBOSE) {\n      System.out.println(\"Selected implementation: \" + collector.getClass().getSimpleName());\n    }\n\n    return collector;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#createRandomCollector(String,Sort).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#createRandomCollector(String,Sort).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  private AllGroupHeadsCollector<?> createRandomCollector(String groupField, Sort sortWithinGroup) {\n    AllGroupHeadsCollector<?> collector;\n    if (random().nextBoolean()) {\n      ValueSource vs = new BytesRefFieldSource(groupField);\n      collector =  new FunctionAllGroupHeadsCollector(vs, new HashMap<>(), sortWithinGroup);\n    } else {\n      collector =  TermAllGroupHeadsCollector.create(groupField, sortWithinGroup);\n    }\n\n    if (VERBOSE) {\n      System.out.println(\"Selected implementation: \" + collector.getClass().getSimpleName());\n    }\n\n    return collector;\n  }\n\n","sourceOld":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  private AbstractAllGroupHeadsCollector<?> createRandomCollector(String groupField, Sort sortWithinGroup) {\n    AbstractAllGroupHeadsCollector<? extends AbstractAllGroupHeadsCollector.GroupHead> collector;\n    if (random().nextBoolean()) {\n      ValueSource vs = new BytesRefFieldSource(groupField);\n      collector =  new FunctionAllGroupHeadsCollector(vs, new HashMap<>(), sortWithinGroup);\n    } else {\n      collector =  TermAllGroupHeadsCollector.create(groupField, sortWithinGroup);\n    }\n\n    if (VERBOSE) {\n      System.out.println(\"Selected implementation: \" + collector.getClass().getSimpleName());\n    }\n\n    return collector;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ae958a739da1866696f442384393ba2f13e33e5","date":1491819018,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#createRandomCollector(String,Sort).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#createRandomCollector(String,Sort).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  private AllGroupHeadsCollector<?> createRandomCollector(String groupField, Sort sortWithinGroup) {\n    if (random().nextBoolean()) {\n      ValueSource vs = new BytesRefFieldSource(groupField);\n      return AllGroupHeadsCollector.newCollector(new ValueSourceGroupSelector(vs, new HashMap<>()), sortWithinGroup);\n    } else {\n      return AllGroupHeadsCollector.newCollector(new TermGroupSelector(groupField), sortWithinGroup);\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  private AllGroupHeadsCollector<?> createRandomCollector(String groupField, Sort sortWithinGroup) {\n    AllGroupHeadsCollector<?> collector;\n    if (random().nextBoolean()) {\n      ValueSource vs = new BytesRefFieldSource(groupField);\n      collector =  new FunctionAllGroupHeadsCollector(vs, new HashMap<>(), sortWithinGroup);\n    } else {\n      collector =  TermAllGroupHeadsCollector.create(groupField, sortWithinGroup);\n    }\n\n    if (VERBOSE) {\n      System.out.println(\"Selected implementation: \" + collector.getClass().getSimpleName());\n    }\n\n    return collector;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#createRandomCollector(String,Sort).mjava","pathOld":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#createRandomCollector(String,Sort).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  private AllGroupHeadsCollector<?> createRandomCollector(String groupField, Sort sortWithinGroup) {\n    if (random().nextBoolean()) {\n      ValueSource vs = new BytesRefFieldSource(groupField);\n      return AllGroupHeadsCollector.newCollector(new ValueSourceGroupSelector(vs, new HashMap<>()), sortWithinGroup);\n    } else {\n      return AllGroupHeadsCollector.newCollector(new TermGroupSelector(groupField), sortWithinGroup);\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings({\"unchecked\",\"rawtypes\"})\n  private AllGroupHeadsCollector<?> createRandomCollector(String groupField, Sort sortWithinGroup) {\n    AllGroupHeadsCollector<?> collector;\n    if (random().nextBoolean()) {\n      ValueSource vs = new BytesRefFieldSource(groupField);\n      collector =  new FunctionAllGroupHeadsCollector(vs, new HashMap<>(), sortWithinGroup);\n    } else {\n      collector =  TermAllGroupHeadsCollector.create(groupField, sortWithinGroup);\n    }\n\n    if (VERBOSE) {\n      System.out.println(\"Selected implementation: \" + collector.getClass().getSimpleName());\n    }\n\n    return collector;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["20e94e61fe5291647346b70437617e6b6c370408"],"20e94e61fe5291647346b70437617e6b6c370408":["97d4692d0c601ff773f0a2231967312428a904e4"],"97d4692d0c601ff773f0a2231967312428a904e4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["97d4692d0c601ff773f0a2231967312428a904e4","20e94e61fe5291647346b70437617e6b6c370408"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7ae958a739da1866696f442384393ba2f13e33e5"],"7ae958a739da1866696f442384393ba2f13e33e5":["20e94e61fe5291647346b70437617e6b6c370408"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"20e94e61fe5291647346b70437617e6b6c370408":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","7ae958a739da1866696f442384393ba2f13e33e5"],"97d4692d0c601ff773f0a2231967312428a904e4":["20e94e61fe5291647346b70437617e6b6c370408","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["97d4692d0c601ff773f0a2231967312428a904e4"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7ae958a739da1866696f442384393ba2f13e33e5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}