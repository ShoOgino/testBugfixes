{"path":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpanMultiTermQueryWrapper#testWrappedQueryIsNotModified().mjava","commits":[{"id":"94a9716ed3ae95f79ad234a576d7c7dd34ce7769","date":1453297016,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/spans/TestSpanMultiTermQueryWrapper#testWrappedQueryIsNotModified().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testWrappedQueryIsNotModified() {\n    final PrefixQuery pq = new PrefixQuery(new Term(\"field\", \"test\"));\n    int pqHash = pq.hashCode();\n    SpanMultiTermQueryWrapper<PrefixQuery> wrapper = new SpanMultiTermQueryWrapper<>(pq);\n    assertEquals(pqHash, pq.hashCode());\n    wrapper.setRewriteMethod(new SpanMultiTermQueryWrapper.SpanRewriteMethod() {\n      @Override\n      public SpanQuery rewrite(IndexReader reader, MultiTermQuery query) throws IOException {\n        return null;\n      }\n    });\n    assertEquals(pqHash, pq.hashCode());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"94a9716ed3ae95f79ad234a576d7c7dd34ce7769":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["94a9716ed3ae95f79ad234a576d7c7dd34ce7769"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["94a9716ed3ae95f79ad234a576d7c7dd34ce7769"],"94a9716ed3ae95f79ad234a576d7c7dd34ce7769":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}