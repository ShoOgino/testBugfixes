{"path":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#testNumericExpand().mjava","commits":[{"id":"8ced52befdc8d88d90766aadbaac496f3fd0e4ee","date":1421070034,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#testNumericExpand().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testNumericExpand() throws Exception {\n    List<String> groups = new ArrayList();\n    groups.add(\"group_i\");\n    groups.add(\"group_ti_dv\");\n    groups.add(\"group_f\");\n    groups.add(\"group_tf_dv\");\n    Collections.shuffle(groups, random());\n    String floatAppend = \"\";\n    if(groups.get(0).indexOf(\"f\") > -1) {\n      floatAppend = \".\"+random().nextInt(100);  //Append the float\n    }\n\n    String hint = \"\";\n\n      _testExpand(groups.get(0), floatAppend, hint);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["97473b7232d88686879e8d72210e5e2ad71bfcd1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cca23c5b56c19b85dda9a06be0959a0d9bdacc2e","date":1421246103,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#testNumericExpand().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#testNumericExpand().mjava","sourceNew":"  @Test\n  public void testNumericExpand() throws Exception {\n    List<String> groups = new ArrayList();\n    groups.add(\"group_i\");\n    groups.add(\"group_ti_dv\");\n    groups.add(\"group_f\");\n    groups.add(\"group_tf_dv\");\n    Collections.shuffle(groups, random());\n    String floatAppend = \"\";\n    if(groups.get(0).indexOf(\"f\") > -1) {\n      floatAppend = \".\"+random().nextInt(100);  //Append the float\n      floatAppend = Float.toString(Float.parseFloat(floatAppend)); //Create a proper float out of the string.\n      floatAppend = floatAppend.substring(1);  //Drop off the leading 0, leaving just the decimal\n    }\n\n    String hint = \"\";\n\n      _testExpand(groups.get(0), floatAppend, hint);\n  }\n\n","sourceOld":"  @Test\n  public void testNumericExpand() throws Exception {\n    List<String> groups = new ArrayList();\n    groups.add(\"group_i\");\n    groups.add(\"group_ti_dv\");\n    groups.add(\"group_f\");\n    groups.add(\"group_tf_dv\");\n    Collections.shuffle(groups, random());\n    String floatAppend = \"\";\n    if(groups.get(0).indexOf(\"f\") > -1) {\n      floatAppend = \".\"+random().nextInt(100);  //Append the float\n    }\n\n    String hint = \"\";\n\n      _testExpand(groups.get(0), floatAppend, hint);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d048016075a0b8589fcfc77fdf8e2a29fc80964","date":1494631326,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#testNumericExpand().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#testNumericExpand().mjava","sourceNew":"  @Test\n  public void testNumericExpand() throws Exception {\n    List<String> groups = new ArrayList<>();\n    groups.add(\"group_i\");\n    groups.add(\"group_ti_dv\");\n    groups.add(\"group_f\");\n    groups.add(\"group_tf_dv\");\n    Collections.shuffle(groups, random());\n    String floatAppend = \"\";\n    if(groups.get(0).indexOf(\"f\") > -1) {\n      floatAppend = \".\"+random().nextInt(100);  //Append the float\n      floatAppend = Float.toString(Float.parseFloat(floatAppend)); //Create a proper float out of the string.\n      floatAppend = floatAppend.substring(1);  //Drop off the leading 0, leaving just the decimal\n    }\n\n    String hint = \"\";\n\n      _testExpand(groups.get(0), floatAppend, hint);\n  }\n\n","sourceOld":"  @Test\n  public void testNumericExpand() throws Exception {\n    List<String> groups = new ArrayList();\n    groups.add(\"group_i\");\n    groups.add(\"group_ti_dv\");\n    groups.add(\"group_f\");\n    groups.add(\"group_tf_dv\");\n    Collections.shuffle(groups, random());\n    String floatAppend = \"\";\n    if(groups.get(0).indexOf(\"f\") > -1) {\n      floatAppend = \".\"+random().nextInt(100);  //Append the float\n      floatAppend = Float.toString(Float.parseFloat(floatAppend)); //Create a proper float out of the string.\n      floatAppend = floatAppend.substring(1);  //Drop off the leading 0, leaving just the decimal\n    }\n\n    String hint = \"\";\n\n      _testExpand(groups.get(0), floatAppend, hint);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#testNumericExpand().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#testNumericExpand().mjava","sourceNew":"  @Test\n  public void testNumericExpand() throws Exception {\n    List<String> groups = new ArrayList<>();\n    groups.add(\"group_i\");\n    groups.add(\"group_ti_dv\");\n    groups.add(\"group_f\");\n    groups.add(\"group_tf_dv\");\n    Collections.shuffle(groups, random());\n    String floatAppend = \"\";\n    if(groups.get(0).indexOf(\"f\") > -1) {\n      floatAppend = \".\"+random().nextInt(100);  //Append the float\n      floatAppend = Float.toString(Float.parseFloat(floatAppend)); //Create a proper float out of the string.\n      floatAppend = floatAppend.substring(1);  //Drop off the leading 0, leaving just the decimal\n    }\n\n    String hint = \"\";\n\n      _testExpand(groups.get(0), floatAppend, hint);\n  }\n\n","sourceOld":"  @Test\n  public void testNumericExpand() throws Exception {\n    List<String> groups = new ArrayList();\n    groups.add(\"group_i\");\n    groups.add(\"group_ti_dv\");\n    groups.add(\"group_f\");\n    groups.add(\"group_tf_dv\");\n    Collections.shuffle(groups, random());\n    String floatAppend = \"\";\n    if(groups.get(0).indexOf(\"f\") > -1) {\n      floatAppend = \".\"+random().nextInt(100);  //Append the float\n      floatAppend = Float.toString(Float.parseFloat(floatAppend)); //Create a proper float out of the string.\n      floatAppend = floatAppend.substring(1);  //Drop off the leading 0, leaving just the decimal\n    }\n\n    String hint = \"\";\n\n      _testExpand(groups.get(0), floatAppend, hint);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97473b7232d88686879e8d72210e5e2ad71bfcd1","date":1566274445,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#testNumericExpand().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/TestExpandComponent#testNumericExpand().mjava","sourceNew":"  @Test\n  public void testNumericExpand() throws Exception {\n    List<String> groups = new ArrayList<>();\n    groups.add(\"group_i\");\n    groups.add(\"group_ti_dv\");\n    groups.add(\"group_f\");\n    groups.add(\"group_tf_dv\");\n    Collections.shuffle(groups, random());\n    String floatAppend = \"\";\n    if(groups.get(0).indexOf(\"f\") > -1) {\n      floatAppend = \".\"+random().nextInt(100);  //Append the float\n      floatAppend = Float.toString(Float.parseFloat(floatAppend)); //Create a proper float out of the string.\n      floatAppend = floatAppend.substring(1);  //Drop off the leading 0, leaving just the decimal\n    }\n\n    String hint = \"\";\n\n    _testExpand(groups.get(0), floatAppend, hint);\n  }\n\n","sourceOld":"  @Test\n  public void testNumericExpand() throws Exception {\n    List<String> groups = new ArrayList<>();\n    groups.add(\"group_i\");\n    groups.add(\"group_ti_dv\");\n    groups.add(\"group_f\");\n    groups.add(\"group_tf_dv\");\n    Collections.shuffle(groups, random());\n    String floatAppend = \"\";\n    if(groups.get(0).indexOf(\"f\") > -1) {\n      floatAppend = \".\"+random().nextInt(100);  //Append the float\n      floatAppend = Float.toString(Float.parseFloat(floatAppend)); //Create a proper float out of the string.\n      floatAppend = floatAppend.substring(1);  //Drop off the leading 0, leaving just the decimal\n    }\n\n    String hint = \"\";\n\n      _testExpand(groups.get(0), floatAppend, hint);\n  }\n\n","bugFix":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["cca23c5b56c19b85dda9a06be0959a0d9bdacc2e","4d048016075a0b8589fcfc77fdf8e2a29fc80964"],"97473b7232d88686879e8d72210e5e2ad71bfcd1":["4d048016075a0b8589fcfc77fdf8e2a29fc80964"],"cca23c5b56c19b85dda9a06be0959a0d9bdacc2e":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4d048016075a0b8589fcfc77fdf8e2a29fc80964":["cca23c5b56c19b85dda9a06be0959a0d9bdacc2e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97473b7232d88686879e8d72210e5e2ad71bfcd1"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"97473b7232d88686879e8d72210e5e2ad71bfcd1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cca23c5b56c19b85dda9a06be0959a0d9bdacc2e":["e9017cf144952056066919f1ebc7897ff9bd71b1","4d048016075a0b8589fcfc77fdf8e2a29fc80964"],"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["cca23c5b56c19b85dda9a06be0959a0d9bdacc2e"],"4d048016075a0b8589fcfc77fdf8e2a29fc80964":["e9017cf144952056066919f1ebc7897ff9bd71b1","97473b7232d88686879e8d72210e5e2ad71bfcd1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}