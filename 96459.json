{"path":"lucene/core/src/java/org/apache/lucene/store/BufferedIndexInput#bufferSize(IOContext).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/BufferedIndexInput#bufferSize(IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/BufferedIndexInput#bufferSize(IOContext).mjava","sourceNew":"  /**\n   * Returns default buffer sizes for the given {@link IOContext}\n   */\n  public static int bufferSize(IOContext context) {\n    switch (context.context) {\n    case DEFAULT:\n    case FLUSH:\n    case READ:\n      return BUFFER_SIZE;\n    case MERGE:\n      return MERGE_BUFFER_SIZE;\n    default:\n      assert false : \"unknown IOContext \" + context.context;\n      return BUFFER_SIZE;\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns default buffer sizes for the given {@link IOContext}\n   */\n  public static int bufferSize(IOContext context) {\n    switch (context.context) {\n    case DEFAULT:\n    case FLUSH:\n    case READ:\n      return BUFFER_SIZE;\n    case MERGE:\n      return MERGE_BUFFER_SIZE;\n    default:\n      assert false : \"unknown IOContext \" + context.context;\n      return BUFFER_SIZE;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a92d88a85748af0cb6a68706f8ac3ba6bd686fa6","date":1346421325,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/BufferedIndexInput#bufferSize(IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/BufferedIndexInput#bufferSize(IOContext).mjava","sourceNew":"  /**\n   * Returns default buffer sizes for the given {@link IOContext}\n   */\n  public static int bufferSize(IOContext context) {\n    switch (context.context) {\n    case DEFAULT:\n    case FLUSH:\n    case READ:\n      return BUFFER_SIZE;\n    case MERGE:\n      return MERGE_BUFFER_SIZE;\n    default:\n      throw new AssertionError(\"unknown IOContext \" + context.context);\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns default buffer sizes for the given {@link IOContext}\n   */\n  public static int bufferSize(IOContext context) {\n    switch (context.context) {\n    case DEFAULT:\n    case FLUSH:\n    case READ:\n      return BUFFER_SIZE;\n    case MERGE:\n      return MERGE_BUFFER_SIZE;\n    default:\n      assert false : \"unknown IOContext \" + context.context;\n      return BUFFER_SIZE;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d168b5da1152279176b0be8194d3c8f1da5a2e60","date":1346421968,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/BufferedIndexInput#bufferSize(IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/BufferedIndexInput#bufferSize(IOContext).mjava","sourceNew":"  /**\n   * Returns default buffer sizes for the given {@link IOContext}\n   */\n  public static int bufferSize(IOContext context) {\n    switch (context.context) {\n    case MERGE:\n      return MERGE_BUFFER_SIZE;\n    default:\n      return BUFFER_SIZE;\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns default buffer sizes for the given {@link IOContext}\n   */\n  public static int bufferSize(IOContext context) {\n    switch (context.context) {\n    case DEFAULT:\n    case FLUSH:\n    case READ:\n      return BUFFER_SIZE;\n    case MERGE:\n      return MERGE_BUFFER_SIZE;\n    default:\n      throw new AssertionError(\"unknown IOContext \" + context.context);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d1f90e969803cc84174589b5e4a39b7935fecd","date":1346584861,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/BufferedIndexInput#bufferSize(IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/BufferedIndexInput#bufferSize(IOContext).mjava","sourceNew":"  /**\n   * Returns default buffer sizes for the given {@link IOContext}\n   */\n  public static int bufferSize(IOContext context) {\n    switch (context.context) {\n    case MERGE:\n      return MERGE_BUFFER_SIZE;\n    default:\n      return BUFFER_SIZE;\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns default buffer sizes for the given {@link IOContext}\n   */\n  public static int bufferSize(IOContext context) {\n    switch (context.context) {\n    case DEFAULT:\n    case FLUSH:\n    case READ:\n      return BUFFER_SIZE;\n    case MERGE:\n      return MERGE_BUFFER_SIZE;\n    default:\n      assert false : \"unknown IOContext \" + context.context;\n      return BUFFER_SIZE;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d0d1f90e969803cc84174589b5e4a39b7935fecd":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","d168b5da1152279176b0be8194d3c8f1da5a2e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d168b5da1152279176b0be8194d3c8f1da5a2e60":["a92d88a85748af0cb6a68706f8ac3ba6bd686fa6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d168b5da1152279176b0be8194d3c8f1da5a2e60"],"a92d88a85748af0cb6a68706f8ac3ba6bd686fa6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"d0d1f90e969803cc84174589b5e4a39b7935fecd":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d0d1f90e969803cc84174589b5e4a39b7935fecd","a92d88a85748af0cb6a68706f8ac3ba6bd686fa6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d168b5da1152279176b0be8194d3c8f1da5a2e60":["d0d1f90e969803cc84174589b5e4a39b7935fecd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a92d88a85748af0cb6a68706f8ac3ba6bd686fa6":["d168b5da1152279176b0be8194d3c8f1da5a2e60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d0d1f90e969803cc84174589b5e4a39b7935fecd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}