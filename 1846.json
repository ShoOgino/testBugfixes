{"path":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#setDocValuesType(DocValues.Type,boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#setDocValuesType(DocValues.Type,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfo#setDocValuesType(DocValues.Type,boolean).mjava","sourceNew":"  void setDocValuesType(DocValues.Type type, boolean force) {\n    if (docValueType == null || force) {\n      docValueType = type;\n    } else if (type != docValueType) {\n      throw new IllegalArgumentException(\"DocValues type already set to \" + docValueType + \" but was: \" + type);\n    }\n  }\n\n","sourceOld":"  void setDocValuesType(DocValues.Type type, boolean force) {\n    if (docValueType == null || force) {\n      docValueType = type;\n    } else if (type != docValueType) {\n      throw new IllegalArgumentException(\"DocValues type already set to \" + docValueType + \" but was: \" + type);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ada808d1fd6b1afb13af55a1dee4c15527af578","date":1337156389,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#setDocValuesType(DocValues.Type,boolean).mjava","sourceNew":null,"sourceOld":"  void setDocValuesType(DocValues.Type type, boolean force) {\n    if (docValueType == null || force) {\n      docValueType = type;\n    } else if (type != docValueType) {\n      throw new IllegalArgumentException(\"DocValues type already set to \" + docValueType + \" but was: \" + type);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#setDocValuesType(DocValues.Type,boolean).mjava","sourceNew":null,"sourceOld":"  void setDocValuesType(DocValues.Type type, boolean force) {\n    if (docValueType == null || force) {\n      docValueType = type;\n    } else if (type != docValueType) {\n      throw new IllegalArgumentException(\"DocValues type already set to \" + docValueType + \" but was: \" + type);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","2ada808d1fd6b1afb13af55a1dee4c15527af578"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2ada808d1fd6b1afb13af55a1dee4c15527af578":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"]},"commit2Childs":{"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","2ada808d1fd6b1afb13af55a1dee4c15527af578"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2ada808d1fd6b1afb13af55a1dee4c15527af578":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}