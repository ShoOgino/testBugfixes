{"path":"lucene/backwards/src/java/org/apache/lucene/util/AttributeSource#equals(Object).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/util/AttributeSource#equals(Object).mjava","pathOld":"backwards/src/java/org/apache/lucene/util/AttributeSource#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == this) {\n      return true;\n    }\n\n    if (obj instanceof AttributeSource) {\n      AttributeSource other = (AttributeSource) obj;  \n    \n      if (hasAttributes()) {\n        if (!other.hasAttributes()) {\n          return false;\n        }\n        \n        if (this.attributeImpls.size() != other.attributeImpls.size()) {\n          return false;\n        }\n  \n        // it is only equal if all attribute impls are the same in the same order\n        if (this.currentState == null) {\n          this.computeCurrentState();\n        }\n        State thisState = this.currentState;\n        if (other.currentState == null) {\n          other.computeCurrentState();\n        }\n        State otherState = other.currentState;\n        while (thisState != null && otherState != null) {\n          if (otherState.attribute.getClass() != thisState.attribute.getClass() || !otherState.attribute.equals(thisState.attribute)) {\n            return false;\n          }\n          thisState = thisState.next;\n          otherState = otherState.next;\n        }\n        return true;\n      } else {\n        return !other.hasAttributes();\n      }\n    } else\n      return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == this) {\n      return true;\n    }\n\n    if (obj instanceof AttributeSource) {\n      AttributeSource other = (AttributeSource) obj;  \n    \n      if (hasAttributes()) {\n        if (!other.hasAttributes()) {\n          return false;\n        }\n        \n        if (this.attributeImpls.size() != other.attributeImpls.size()) {\n          return false;\n        }\n  \n        // it is only equal if all attribute impls are the same in the same order\n        if (this.currentState == null) {\n          this.computeCurrentState();\n        }\n        State thisState = this.currentState;\n        if (other.currentState == null) {\n          other.computeCurrentState();\n        }\n        State otherState = other.currentState;\n        while (thisState != null && otherState != null) {\n          if (otherState.attribute.getClass() != thisState.attribute.getClass() || !otherState.attribute.equals(thisState.attribute)) {\n            return false;\n          }\n          thisState = thisState.next;\n          otherState = otherState.next;\n        }\n        return true;\n      } else {\n        return !other.hasAttributes();\n      }\n    } else\n      return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/util/AttributeSource#equals(Object).mjava","sourceNew":null,"sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (obj == this) {\n      return true;\n    }\n\n    if (obj instanceof AttributeSource) {\n      AttributeSource other = (AttributeSource) obj;  \n    \n      if (hasAttributes()) {\n        if (!other.hasAttributes()) {\n          return false;\n        }\n        \n        if (this.attributeImpls.size() != other.attributeImpls.size()) {\n          return false;\n        }\n  \n        // it is only equal if all attribute impls are the same in the same order\n        if (this.currentState == null) {\n          this.computeCurrentState();\n        }\n        State thisState = this.currentState;\n        if (other.currentState == null) {\n          other.computeCurrentState();\n        }\n        State otherState = other.currentState;\n        while (thisState != null && otherState != null) {\n          if (otherState.attribute.getClass() != thisState.attribute.getClass() || !otherState.attribute.equals(thisState.attribute)) {\n            return false;\n          }\n          thisState = thisState.next;\n          otherState = otherState.next;\n        }\n        return true;\n      } else {\n        return !other.hasAttributes();\n      }\n    } else\n      return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}