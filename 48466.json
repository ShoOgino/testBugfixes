{"path":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/dict/BinaryDictionary#getInflectionIndex(int).mjava","commits":[{"id":"6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2","date":1326399048,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/dict/BinaryDictionary#getInflectionIndex(int).mjava","pathOld":"/dev/null","sourceNew":"  private int getInflectionIndex(int wordId) {\n    if (!hasInflectionData(wordId)) {\n      return -1; // common case: no inflection data\n    }\n    \n    // skip past reading/pronunciation at the end\n    int offset = hasPronunciationData(wordId) ? pronunciationOffset(wordId) : readingOffset(wordId);\n    int endData = buffer.get(offset++) & 0xff;\n    \n    final int endLength;\n    if ((endData & 1) == 0) {\n      endLength = endData & 0xfe; // UTF-16: mask off kana bit\n    } else {\n      endLength = endData >>> 1;\n    }\n    \n    offset += endLength;\n    \n    byte b = buffer.get(offset++);\n    int i = b & 0x7F;\n    if ((b & 0x80) == 0) return i;\n    b = buffer.get(offset++);\n    i |= (b & 0x7F) << 7;\n    assert ((b & 0x80) == 0);\n    return i;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a904819476fbc333a72b5914d82b948e7dab0205","date":1326741588,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/dict/BinaryDictionary#getInflectionIndex(int).mjava","sourceNew":null,"sourceOld":"  private int getInflectionIndex(int wordId) {\n    if (!hasInflectionData(wordId)) {\n      return -1; // common case: no inflection data\n    }\n    \n    // skip past reading/pronunciation at the end\n    int offset = hasPronunciationData(wordId) ? pronunciationOffset(wordId) : readingOffset(wordId);\n    int endData = buffer.get(offset++) & 0xff;\n    \n    final int endLength;\n    if ((endData & 1) == 0) {\n      endLength = endData & 0xfe; // UTF-16: mask off kana bit\n    } else {\n      endLength = endData >>> 1;\n    }\n    \n    offset += endLength;\n    \n    byte b = buffer.get(offset++);\n    int i = b & 0x7F;\n    if ((b & 0x80) == 0) return i;\n    b = buffer.get(offset++);\n    i |= (b & 0x7F) << 7;\n    assert ((b & 0x80) == 0);\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a904819476fbc333a72b5914d82b948e7dab0205":["6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a904819476fbc333a72b5914d82b948e7dab0205"]},"commit2Childs":{"a904819476fbc333a72b5914d82b948e7dab0205":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2"],"6ae8b8ec55786d06eb9b03fc7bc86a907e1a3ae2":["a904819476fbc333a72b5914d82b948e7dab0205"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}