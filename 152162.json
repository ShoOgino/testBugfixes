{"path":"solr/core/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws ParseException {\n    QParser parser = QParser.getParser(groupByStr, null, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws ParseException {\n    QParser parser = QParser.getParser(groupByStr, null, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws ParseException {\n    QParser parser = QParser.getParser(groupByStr, null, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws ParseException {\n    QParser parser = QParser.getParser(groupByStr, null, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws ParseException {\n    QParser parser = QParser.getParser(groupByStr, null, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws ParseException {\n    QParser parser = QParser.getParser(groupByStr, null, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cdb67100dc016748799a77218aa409478372d79","date":1353699950,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, null, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws ParseException {\n    QParser parser = QParser.getParser(groupByStr, null, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, null, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws ParseException {\n    QParser parser = QParser.getParser(groupByStr, null, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, null, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, null, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, null, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, null, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de65fb6e86ba37c5409efafefe587d0c897c2764","date":1445143934,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, null, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.withinGroupSort = withinGroupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, null, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.groupSort = groupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc5ee54a993d26579e3fe1f8f2a696b46b61c48f","date":1470751445,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.withinGroupSort = withinGroupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, null, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.withinGroupSort = withinGroupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8bca25eefa1f2205e2b0ef713701dc3a0fecd702","date":1470810578,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.withinGroupSort = withinGroupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, null, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.withinGroupSort = withinGroupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.withinGroupSort = withinGroupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, null, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.withinGroupSort = withinGroupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping#addQueryCommand(String,SolrQueryRequest).mjava","sourceNew":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.withinGroupSort = withinGroupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","sourceOld":"  public void addQueryCommand(String groupByStr, SolrQueryRequest request) throws SyntaxError {\n    QParser parser = QParser.getParser(groupByStr, null, request);\n    Query gq = parser.getQuery();\n    Grouping.CommandQuery gc = new CommandQuery();\n    gc.query = gq;\n    gc.withinGroupSort = withinGroupSort;\n    gc.key = groupByStr;\n    gc.numGroups = limitDefault;\n    gc.docsPerGroup = docsPerGroupDefault;\n    gc.groupOffset = groupOffsetDefault;\n\n    // these two params will only be used if this is for the main result set\n    gc.offset = cmd.getOffset();\n    gc.numGroups = limitDefault;\n    gc.format = defaultFormat;\n\n    if (main) {\n      gc.main = true;\n      gc.format = Grouping.Format.simple;\n    }\n    if (gc.format == Grouping.Format.simple) {\n      gc.docsPerGroup = gc.numGroups;  // doesn't make sense to limit to one\n      gc.groupOffset = gc.offset;\n    }\n\n    commands.add(gc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"de65fb6e86ba37c5409efafefe587d0c897c2764":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["3cdb67100dc016748799a77218aa409478372d79","19275ba31e621f6da1b83bf13af75233876fd3d4"],"3cdb67100dc016748799a77218aa409478372d79":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"407687e67faf6e1f02a211ca078d8e3eed631027":["c26f00b574427b55127e869b935845554afde1fa","3cdb67100dc016748799a77218aa409478372d79"],"cc5ee54a993d26579e3fe1f8f2a696b46b61c48f":["de65fb6e86ba37c5409efafefe587d0c897c2764"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["3cdb67100dc016748799a77218aa409478372d79"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["de65fb6e86ba37c5409efafefe587d0c897c2764","8bca25eefa1f2205e2b0ef713701dc3a0fecd702"],"8bca25eefa1f2205e2b0ef713701dc3a0fecd702":["de65fb6e86ba37c5409efafefe587d0c897c2764","cc5ee54a993d26579e3fe1f8f2a696b46b61c48f"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["de65fb6e86ba37c5409efafefe587d0c897c2764","8bca25eefa1f2205e2b0ef713701dc3a0fecd702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8bca25eefa1f2205e2b0ef713701dc3a0fecd702"]},"commit2Childs":{"de65fb6e86ba37c5409efafefe587d0c897c2764":["cc5ee54a993d26579e3fe1f8f2a696b46b61c48f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","8bca25eefa1f2205e2b0ef713701dc3a0fecd702","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"3cdb67100dc016748799a77218aa409478372d79":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","407687e67faf6e1f02a211ca078d8e3eed631027","19275ba31e621f6da1b83bf13af75233876fd3d4"],"c26f00b574427b55127e869b935845554afde1fa":["3cdb67100dc016748799a77218aa409478372d79","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"cc5ee54a993d26579e3fe1f8f2a696b46b61c48f":["8bca25eefa1f2205e2b0ef713701dc3a0fecd702"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["de65fb6e86ba37c5409efafefe587d0c897c2764","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"8bca25eefa1f2205e2b0ef713701dc3a0fecd702":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","407687e67faf6e1f02a211ca078d8e3eed631027","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a258fbb26824fd104ed795e5d9033d2d040049ee","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}