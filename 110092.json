{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/RegExp#toCaseInsensitiveChar(int,int).mjava","commits":[{"id":"0785d1d3506a0f4d8fd4adc2efe29f0e1a9c2601","date":1594220892,"type":0,"author":"markharwood","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/RegExp#toCaseInsensitiveChar(int,int).mjava","pathOld":"/dev/null","sourceNew":"  private Automaton toCaseInsensitiveChar(int codepoint, int maxDeterminizedStates) {\n    Automaton case1 = Automata.makeChar(codepoint);\n    // For now we only work with ASCII characters\n    if (codepoint > 128) {\n      return case1;\n    }\n    int altCase = Character.isLowerCase(codepoint) ? Character.toUpperCase(codepoint) : Character.toLowerCase(codepoint);\n    Automaton result;\n    if (altCase != codepoint) {\n      result = Operations.union(case1, Automata.makeChar(altCase));\n      result = MinimizationOperations.minimize(result, maxDeterminizedStates);          \n    } else {\n      result = case1;                      \n    }          \n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0785d1d3506a0f4d8fd4adc2efe29f0e1a9c2601":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0785d1d3506a0f4d8fd4adc2efe29f0e1a9c2601"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0785d1d3506a0f4d8fd4adc2efe29f0e1a9c2601"],"0785d1d3506a0f4d8fd4adc2efe29f0e1a9c2601":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}