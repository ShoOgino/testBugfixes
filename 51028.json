{"path":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testEmptyCFS().mjava","commits":[{"id":"64d8c4b572c9d5e49a6f831e8d4ebc203b770272","date":1310038257,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testEmptyCFS().mjava","pathOld":"/dev/null","sourceNew":"  public void testEmptyCFS() throws IOException {\n    Directory newDir = newDirectory();\n    CompoundFileDirectory csw = newDir.createCompoundOutput(\"d.cfs\");\n    csw.close();\n\n    CompoundFileDirectory csr = newDir.openCompoundInput(\"d.cfs\", 1024);\n    assertEquals(0, csr.listAll().length);\n    csr.close();\n\n    newDir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testEmptyCFS().mjava","pathOld":"/dev/null","sourceNew":"  public void testEmptyCFS() throws IOException {\n    Directory newDir = newDirectory();\n    CompoundFileDirectory csw = newDir.createCompoundOutput(\"d.cfs\");\n    csw.close();\n\n    CompoundFileDirectory csr = newDir.openCompoundInput(\"d.cfs\", 1024);\n    assertEquals(0, csr.listAll().length);\n    csr.close();\n\n    newDir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testEmptyCFS().mjava","pathOld":"/dev/null","sourceNew":"  public void testEmptyCFS() throws IOException {\n    Directory newDir = newDirectory();\n    CompoundFileDirectory csw = newDir.createCompoundOutput(\"d.cfs\", newIOContext(random));\n    csw.close();\n\n    CompoundFileDirectory csr = newDir.openCompoundInput(\"d.cfs\", newIOContext(random));\n    assertEquals(0, csr.listAll().length);\n    csr.close();\n\n    newDir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testEmptyCFS().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testEmptyCFS().mjava","sourceNew":"  public void testEmptyCFS() throws IOException {\n    Directory newDir = newDirectory();\n    CompoundFileDirectory csw = newDir.createCompoundOutput(\"d.cfs\", newIOContext(random));\n    csw.close();\n\n    CompoundFileDirectory csr = newDir.openCompoundInput(\"d.cfs\", newIOContext(random));\n    assertEquals(0, csr.listAll().length);\n    csr.close();\n\n    newDir.close();\n  }\n\n","sourceOld":"  public void testEmptyCFS() throws IOException {\n    Directory newDir = newDirectory();\n    CompoundFileDirectory csw = newDir.createCompoundOutput(\"d.cfs\");\n    csw.close();\n\n    CompoundFileDirectory csr = newDir.openCompoundInput(\"d.cfs\", 1024);\n    assertEquals(0, csr.listAll().length);\n    csr.close();\n\n    newDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testEmptyCFS().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testEmptyCFS().mjava","sourceNew":"  public void testEmptyCFS() throws IOException {\n    Directory newDir = newDirectory();\n    CompoundFileDirectory csw = newDir.createCompoundOutput(\"d.cfs\", newIOContext(random));\n    csw.close();\n\n    CompoundFileDirectory csr = newDir.openCompoundInput(\"d.cfs\", newIOContext(random));\n    assertEquals(0, csr.listAll().length);\n    csr.close();\n\n    newDir.close();\n  }\n\n","sourceOld":"  public void testEmptyCFS() throws IOException {\n    Directory newDir = newDirectory();\n    CompoundFileDirectory csw = newDir.createCompoundOutput(\"d.cfs\");\n    csw.close();\n\n    CompoundFileDirectory csr = newDir.openCompoundInput(\"d.cfs\", 1024);\n    assertEquals(0, csr.listAll().length);\n    csr.close();\n\n    newDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"67aadace85f701c87a4e0721eedcda25d8415a70","date":1314201925,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testEmptyCFS().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testEmptyCFS().mjava","sourceNew":"  public void testEmptyCFS() throws IOException {\n    Directory newDir = newDirectory();\n    CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), true);\n    csw.close();\n\n    CompoundFileDirectory csr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), false);\n    assertEquals(0, csr.listAll().length);\n    csr.close();\n\n    newDir.close();\n  }\n\n","sourceOld":"  public void testEmptyCFS() throws IOException {\n    Directory newDir = newDirectory();\n    CompoundFileDirectory csw = newDir.createCompoundOutput(\"d.cfs\", newIOContext(random));\n    csw.close();\n\n    CompoundFileDirectory csr = newDir.openCompoundInput(\"d.cfs\", newIOContext(random));\n    assertEquals(0, csr.listAll().length);\n    csr.close();\n\n    newDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCompoundFile#testEmptyCFS().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#testEmptyCFS().mjava","sourceNew":"  public void testEmptyCFS() throws IOException {\n    Directory newDir = newDirectory();\n    CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), true);\n    csw.close();\n\n    CompoundFileDirectory csr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), false);\n    assertEquals(0, csr.listAll().length);\n    csr.close();\n\n    newDir.close();\n  }\n\n","sourceOld":"  public void testEmptyCFS() throws IOException {\n    Directory newDir = newDirectory();\n    CompoundFileDirectory csw = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), true);\n    csw.close();\n\n    CompoundFileDirectory csr = new CompoundFileDirectory(newDir, \"d.cfs\", newIOContext(random), false);\n    assertEquals(0, csr.listAll().length);\n    csr.close();\n\n    newDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1291e4568eb7d9463d751627596ef14baf4c1603":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","64d8c4b572c9d5e49a6f831e8d4ebc203b770272"],"67aadace85f701c87a4e0721eedcda25d8415a70":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"64d8c4b572c9d5e49a6f831e8d4ebc203b770272":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","64d8c4b572c9d5e49a6f831e8d4ebc203b770272"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["67aadace85f701c87a4e0721eedcda25d8415a70"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["f0b9507caf22f292ac0e5e59f62db4275adf4511","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["64d8c4b572c9d5e49a6f831e8d4ebc203b770272","1291e4568eb7d9463d751627596ef14baf4c1603"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"1291e4568eb7d9463d751627596ef14baf4c1603":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"64d8c4b572c9d5e49a6f831e8d4ebc203b770272":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"67aadace85f701c87a4e0721eedcda25d8415a70":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1291e4568eb7d9463d751627596ef14baf4c1603","64d8c4b572c9d5e49a6f831e8d4ebc203b770272","f0b9507caf22f292ac0e5e59f62db4275adf4511"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["67aadace85f701c87a4e0721eedcda25d8415a70","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}