{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#buildDocument(VariableResolverImpl,DocWrapper,Map[String,Object],DataConfig.Entity,boolean,ContextImpl).mjava","commits":[{"id":"18b5e8b70d18c7d8fb665bb1abd1154166882745","date":1240851346,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#buildDocument(VariableResolverImpl,DocWrapper,Map[String,Object],DataConfig.Entity,boolean,ContextImpl).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#buildDocument(VariableResolverImpl,SolrInputDocument,Map[String,Object],DataConfig.Entity,boolean,ContextImpl).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void buildDocument(VariableResolverImpl vr, DocWrapper doc,\n                             Map<String, Object> pk, DataConfig.Entity entity, boolean isRoot,\n                             ContextImpl parentCtx) {\n\n    EntityProcessorWrapper entityProcessor = getEntityProcessor(entity);\n\n    ContextImpl ctx = new ContextImpl(entity, vr, null,\n            pk == null ? Context.FULL_DUMP : Context.DELTA_DUMP,\n            session, parentCtx, this);\n    vr.context = ctx;\n    entityProcessor.init(ctx);\n\n    if (requestParameters.start > 0) {\n      writer.log(SolrWriter.DISABLE_LOGGING, null, null);\n    }\n\n    if (verboseDebug) {\n      writer.log(SolrWriter.START_ENTITY, entity.name, null);\n    }\n\n    int seenDocCount = 0;\n\n    try {\n      while (true) {\n        if (stop.get())\n          return;\n        try {\n          seenDocCount++;\n\n          if (seenDocCount > requestParameters.start) {\n            writer.log(SolrWriter.ENABLE_LOGGING, null, null);\n          }\n\n          if (verboseDebug && entity.isDocRoot) {\n            writer.log(SolrWriter.START_DOC, entity.name, null);\n          }\n          if (doc == null && entity.isDocRoot) {\n            doc = new DocWrapper();\n            ctx.setDoc(doc);\n            DataConfig.Entity e = entity;\n            while (e.parentEntity != null) {\n              addFields(e.parentEntity, doc, (Map<String, Object>) vr\n                      .resolve(e.parentEntity.name));\n              e = e.parentEntity;\n            }\n          }\n\n          Map<String, Object> arow = entityProcessor.nextRow();\n          if (arow == null) {\n            entityProcessor.destroy();\n            break;            \n          }\n\n          // Support for start parameter in debug mode\n          if (entity.isDocRoot) {\n            if (seenDocCount <= requestParameters.start)\n              continue;\n            if (seenDocCount > requestParameters.start + requestParameters.rows) {\n              LOG.info(\"Indexing stopped at docCount = \" + importStatistics.docCount);\n              break;\n            }\n          }\n\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_OUT, entity.name, arow);\n          }\n          importStatistics.rowsCount.incrementAndGet();\n          if (doc != null) {\n            handleSpecialCommands(arow, doc);\n            addFields(entity, doc, arow);\n          }\n          if (isRoot)\n            vr.removeNamespace(null);\n          if (entity.entities != null) {\n            vr.addNamespace(entity.name, arow);\n            for (DataConfig.Entity child : entity.entities) {\n              buildDocument(vr, doc, null, child, false, ctx);\n            }\n            vr.removeNamespace(entity.name);\n          }\n\n          if (entity.isDocRoot) {\n            if (stop.get())\n              return;\n            if (!doc.isEmpty()) {\n              boolean result = writer.upload(doc);\n              doc = null;\n              if (result)\n                importStatistics.docCount.incrementAndGet();\n            }\n          }\n\n        } catch (DataImportHandlerException e) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, e);\n          }\n          if(e.getErrCode() == DataImportHandlerException.SKIP_ROW){\n            continue;\n          }\n          if (isRoot) {\n            if (e.getErrCode() == DataImportHandlerException.SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n            } else {\n              LOG.error(\"Exception while processing: \"\n                      + entity.name + \" document : \" + doc, e);\n            }\n            if (e.getErrCode() == DataImportHandlerException.SEVERE)\n              throw e;\n          } else\n            throw e;\n        } catch (Throwable t) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, t);\n          }\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE, t);\n        } finally {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ROW_END, entity.name, null);\n            if (entity.isDocRoot)\n              writer.log(SolrWriter.END_DOC, null, null);\n          }\n        }\n      }\n    } finally {\n      if (verboseDebug) {\n        writer.log(SolrWriter.END_ENTITY, null, null);\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void buildDocument(VariableResolverImpl vr, SolrInputDocument doc,\n                             Map<String, Object> pk, DataConfig.Entity entity, boolean isRoot,\n                             ContextImpl parentCtx) {\n\n    EntityProcessor entityProcessor = getEntityProcessor(entity);\n\n    ContextImpl ctx = new ContextImpl(entity, vr, null,\n            pk == null ? Context.FULL_DUMP : Context.DELTA_DUMP,\n            session, parentCtx, this);\n    vr.context = ctx;\n    entityProcessor.init(ctx);\n\n    if (requestParameters.start > 0) {\n      writer.log(SolrWriter.DISABLE_LOGGING, null, null);\n    }\n\n    if (verboseDebug) {\n      writer.log(SolrWriter.START_ENTITY, entity.name, null);\n    }\n\n    int seenDocCount = 0;\n\n    try {\n      while (true) {\n        if (stop.get())\n          return;\n        try {\n          seenDocCount++;\n\n          if (seenDocCount > requestParameters.start) {\n            writer.log(SolrWriter.ENABLE_LOGGING, null, null);\n          }\n\n          if (verboseDebug && entity.isDocRoot) {\n            writer.log(SolrWriter.START_DOC, entity.name, null);\n          }\n          if (doc == null && entity.isDocRoot) {\n            if (ctx.getDocSession() != null)\n              ctx.getDocSession().clear();\n            else\n              ctx.setDocSession(new HashMap<String, Object>());\n            doc = new SolrInputDocument();\n            DataConfig.Entity e = entity;\n            while (e.parentEntity != null) {\n              addFields(e.parentEntity, doc, (Map<String, Object>) vr\n                      .resolve(e.parentEntity.name));\n              e = e.parentEntity;\n            }\n          }\n\n          Map<String, Object> arow = entityProcessor.nextRow();\n          if (arow == null) {\n            entityProcessor.destroy();\n            break;            \n          }\n\n          if (arow.containsKey(DOC_BOOST)) {\n            setDocumentBoost(doc, arow);\n          }\n\n          // Support for start parameter in debug mode\n          if (entity.isDocRoot) {\n            if (seenDocCount <= requestParameters.start)\n              continue;\n            if (seenDocCount > requestParameters.start + requestParameters.rows) {\n              LOG.info(\"Indexing stopped at docCount = \" + importStatistics.docCount);\n              break;\n            }\n          }\n\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_OUT, entity.name, arow);\n          }\n          importStatistics.rowsCount.incrementAndGet();\n          if (doc != null) {\n            handleSpecialCommands(arow);\n            addFields(entity, doc, arow);\n          }\n          if (isRoot)\n            vr.removeNamespace(null);\n          if (entity.entities != null) {\n            vr.addNamespace(entity.name, arow);\n            for (DataConfig.Entity child : entity.entities) {\n              buildDocument(vr, doc, null, child, false, ctx);\n            }\n            vr.removeNamespace(entity.name);\n          }\n\n          if (entity.isDocRoot) {\n            if (stop.get())\n              return;\n            if (!doc.isEmpty()) {\n              boolean result = writer.upload(doc);\n              doc = null;\n              if (result)\n                importStatistics.docCount.incrementAndGet();\n            }\n          }\n\n        } catch (DataImportHandlerException e) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, e);\n          }\n          if(e.getErrCode() == DataImportHandlerException.SKIP_ROW){\n            continue;\n          }\n          if (isRoot) {\n            if (e.getErrCode() == DataImportHandlerException.SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n            } else {\n              LOG.error(\"Exception while processing: \"\n                      + entity.name + \" document : \" + doc, e);\n            }\n            if (e.getErrCode() == DataImportHandlerException.SEVERE)\n              throw e;\n          } else\n            throw e;\n        } catch (Throwable t) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, t);\n          }\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE, t);\n        } finally {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ROW_END, entity.name, null);\n            if (entity.isDocRoot)\n              writer.log(SolrWriter.END_DOC, null, null);\n          }\n        }\n      }\n    } finally {\n      if (verboseDebug) {\n        writer.log(SolrWriter.END_ENTITY, null, null);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e0691086ff7220752f6abac58cff6e81eeb1ba68","date":1241004208,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#buildDocument(VariableResolverImpl,DocWrapper,Map[String,Object],DataConfig.Entity,boolean,ContextImpl).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#buildDocument(VariableResolverImpl,DocWrapper,Map[String,Object],DataConfig.Entity,boolean,ContextImpl).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void buildDocument(VariableResolverImpl vr, DocWrapper doc,\n                             Map<String, Object> pk, DataConfig.Entity entity, boolean isRoot,\n                             ContextImpl parentCtx) {\n\n    EntityProcessorWrapper entityProcessor = getEntityProcessor(entity);\n\n    ContextImpl ctx = new ContextImpl(entity, vr, null,\n            pk == null ? Context.FULL_DUMP : Context.DELTA_DUMP,\n            session, parentCtx, this);\n    vr.context = ctx;\n    entityProcessor.init(ctx);\n\n    if (requestParameters.start > 0) {\n      writer.log(SolrWriter.DISABLE_LOGGING, null, null);\n    }\n\n    if (verboseDebug) {\n      writer.log(SolrWriter.START_ENTITY, entity.name, null);\n    }\n\n    int seenDocCount = 0;\n\n    try {\n      while (true) {\n        if (stop.get())\n          return;\n        try {\n          seenDocCount++;\n\n          if (seenDocCount > requestParameters.start) {\n            writer.log(SolrWriter.ENABLE_LOGGING, null, null);\n          }\n\n          if (verboseDebug && entity.isDocRoot) {\n            writer.log(SolrWriter.START_DOC, entity.name, null);\n          }\n          if (doc == null && entity.isDocRoot) {\n            doc = new DocWrapper();\n            ctx.setDoc(doc);\n            DataConfig.Entity e = entity;\n            while (e.parentEntity != null) {\n              addFields(e.parentEntity, doc, (Map<String, Object>) vr\n                      .resolve(e.parentEntity.name), vr);\n              e = e.parentEntity;\n            }\n          }\n\n          Map<String, Object> arow = entityProcessor.nextRow();\n          if (arow == null) {\n            entityProcessor.destroy();\n            break;\n          }\n\n          // Support for start parameter in debug mode\n          if (entity.isDocRoot) {\n            if (seenDocCount <= requestParameters.start)\n              continue;\n            if (seenDocCount > requestParameters.start + requestParameters.rows) {\n              LOG.info(\"Indexing stopped at docCount = \" + importStatistics.docCount);\n              break;\n            }\n          }\n\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_OUT, entity.name, arow);\n          }\n          importStatistics.rowsCount.incrementAndGet();\n          if (doc != null) {\n            handleSpecialCommands(arow, doc);\n            addFields(entity, doc, arow, vr);\n          }\n          if (isRoot)\n            vr.removeNamespace(null);\n          if (entity.entities != null) {\n            vr.addNamespace(entity.name, arow);\n            for (DataConfig.Entity child : entity.entities) {\n              buildDocument(vr, doc, null, child, false, ctx);\n            }\n            vr.removeNamespace(entity.name);\n          }\n\n          if (entity.isDocRoot) {\n            if (stop.get())\n              return;\n            if (!doc.isEmpty()) {\n              boolean result = writer.upload(doc);\n              doc = null;\n              if (result)\n                importStatistics.docCount.incrementAndGet();\n            }\n          }\n\n        } catch (DataImportHandlerException e) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, e);\n          }\n          if(e.getErrCode() == DataImportHandlerException.SKIP_ROW){\n            continue;\n          }\n          if (isRoot) {\n            if (e.getErrCode() == DataImportHandlerException.SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n            } else {\n              LOG.error(\"Exception while processing: \"\n                      + entity.name + \" document : \" + doc, e);\n            }\n            if (e.getErrCode() == DataImportHandlerException.SEVERE)\n              throw e;\n          } else\n            throw e;\n        } catch (Throwable t) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, t);\n          }\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE, t);\n        } finally {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ROW_END, entity.name, null);\n            if (entity.isDocRoot)\n              writer.log(SolrWriter.END_DOC, null, null);\n          }\n        }\n      }\n    } finally {\n      if (verboseDebug) {\n        writer.log(SolrWriter.END_ENTITY, null, null);\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void buildDocument(VariableResolverImpl vr, DocWrapper doc,\n                             Map<String, Object> pk, DataConfig.Entity entity, boolean isRoot,\n                             ContextImpl parentCtx) {\n\n    EntityProcessorWrapper entityProcessor = getEntityProcessor(entity);\n\n    ContextImpl ctx = new ContextImpl(entity, vr, null,\n            pk == null ? Context.FULL_DUMP : Context.DELTA_DUMP,\n            session, parentCtx, this);\n    vr.context = ctx;\n    entityProcessor.init(ctx);\n\n    if (requestParameters.start > 0) {\n      writer.log(SolrWriter.DISABLE_LOGGING, null, null);\n    }\n\n    if (verboseDebug) {\n      writer.log(SolrWriter.START_ENTITY, entity.name, null);\n    }\n\n    int seenDocCount = 0;\n\n    try {\n      while (true) {\n        if (stop.get())\n          return;\n        try {\n          seenDocCount++;\n\n          if (seenDocCount > requestParameters.start) {\n            writer.log(SolrWriter.ENABLE_LOGGING, null, null);\n          }\n\n          if (verboseDebug && entity.isDocRoot) {\n            writer.log(SolrWriter.START_DOC, entity.name, null);\n          }\n          if (doc == null && entity.isDocRoot) {\n            doc = new DocWrapper();\n            ctx.setDoc(doc);\n            DataConfig.Entity e = entity;\n            while (e.parentEntity != null) {\n              addFields(e.parentEntity, doc, (Map<String, Object>) vr\n                      .resolve(e.parentEntity.name));\n              e = e.parentEntity;\n            }\n          }\n\n          Map<String, Object> arow = entityProcessor.nextRow();\n          if (arow == null) {\n            entityProcessor.destroy();\n            break;            \n          }\n\n          // Support for start parameter in debug mode\n          if (entity.isDocRoot) {\n            if (seenDocCount <= requestParameters.start)\n              continue;\n            if (seenDocCount > requestParameters.start + requestParameters.rows) {\n              LOG.info(\"Indexing stopped at docCount = \" + importStatistics.docCount);\n              break;\n            }\n          }\n\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_OUT, entity.name, arow);\n          }\n          importStatistics.rowsCount.incrementAndGet();\n          if (doc != null) {\n            handleSpecialCommands(arow, doc);\n            addFields(entity, doc, arow);\n          }\n          if (isRoot)\n            vr.removeNamespace(null);\n          if (entity.entities != null) {\n            vr.addNamespace(entity.name, arow);\n            for (DataConfig.Entity child : entity.entities) {\n              buildDocument(vr, doc, null, child, false, ctx);\n            }\n            vr.removeNamespace(entity.name);\n          }\n\n          if (entity.isDocRoot) {\n            if (stop.get())\n              return;\n            if (!doc.isEmpty()) {\n              boolean result = writer.upload(doc);\n              doc = null;\n              if (result)\n                importStatistics.docCount.incrementAndGet();\n            }\n          }\n\n        } catch (DataImportHandlerException e) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, e);\n          }\n          if(e.getErrCode() == DataImportHandlerException.SKIP_ROW){\n            continue;\n          }\n          if (isRoot) {\n            if (e.getErrCode() == DataImportHandlerException.SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n            } else {\n              LOG.error(\"Exception while processing: \"\n                      + entity.name + \" document : \" + doc, e);\n            }\n            if (e.getErrCode() == DataImportHandlerException.SEVERE)\n              throw e;\n          } else\n            throw e;\n        } catch (Throwable t) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, t);\n          }\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE, t);\n        } finally {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ROW_END, entity.name, null);\n            if (entity.isDocRoot)\n              writer.log(SolrWriter.END_DOC, null, null);\n          }\n        }\n      }\n    } finally {\n      if (verboseDebug) {\n        writer.log(SolrWriter.END_ENTITY, null, null);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"210e60bfae7c0585fc04cfe0f50c2b14a841e4e2","date":1245919165,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#buildDocument(VariableResolverImpl,DocWrapper,Map[String,Object],DataConfig.Entity,boolean,ContextImpl).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#buildDocument(VariableResolverImpl,DocWrapper,Map[String,Object],DataConfig.Entity,boolean,ContextImpl).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void buildDocument(VariableResolverImpl vr, DocWrapper doc,\n                             Map<String, Object> pk, DataConfig.Entity entity, boolean isRoot,\n                             ContextImpl parentCtx) {\n\n    EntityProcessorWrapper entityProcessor = getEntityProcessor(entity);\n\n    ContextImpl ctx = new ContextImpl(entity, vr, null,\n            pk == null ? Context.FULL_DUMP : Context.DELTA_DUMP,\n            session, parentCtx, this);\n    entityProcessor.init(ctx);\n\n    if (requestParameters.start > 0) {\n      writer.log(SolrWriter.DISABLE_LOGGING, null, null);\n    }\n\n    if (verboseDebug) {\n      writer.log(SolrWriter.START_ENTITY, entity.name, null);\n    }\n\n    int seenDocCount = 0;\n\n    try {\n      while (true) {\n        if (stop.get())\n          return;\n        try {\n          seenDocCount++;\n\n          if (seenDocCount > requestParameters.start) {\n            writer.log(SolrWriter.ENABLE_LOGGING, null, null);\n          }\n\n          if (verboseDebug && entity.isDocRoot) {\n            writer.log(SolrWriter.START_DOC, entity.name, null);\n          }\n          if (doc == null && entity.isDocRoot) {\n            doc = new DocWrapper();\n            ctx.setDoc(doc);\n            DataConfig.Entity e = entity;\n            while (e.parentEntity != null) {\n              addFields(e.parentEntity, doc, (Map<String, Object>) vr\n                      .resolve(e.parentEntity.name), vr);\n              e = e.parentEntity;\n            }\n          }\n\n          Map<String, Object> arow = entityProcessor.nextRow();\n          if (arow == null) {\n            break;\n          }\n\n          // Support for start parameter in debug mode\n          if (entity.isDocRoot) {\n            if (seenDocCount <= requestParameters.start)\n              continue;\n            if (seenDocCount > requestParameters.start + requestParameters.rows) {\n              LOG.info(\"Indexing stopped at docCount = \" + importStatistics.docCount);\n              break;\n            }\n          }\n\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_OUT, entity.name, arow);\n          }\n          importStatistics.rowsCount.incrementAndGet();\n          if (doc != null) {\n            handleSpecialCommands(arow, doc);\n            addFields(entity, doc, arow, vr);\n          }\n          if (isRoot)\n            vr.removeNamespace(null);\n          if (entity.entities != null) {\n            vr.addNamespace(entity.name, arow);\n            for (DataConfig.Entity child : entity.entities) {\n              buildDocument(vr, doc, null, child, false, ctx);\n            }\n            vr.removeNamespace(entity.name);\n          }\n\n          if (entity.isDocRoot) {\n            if (stop.get())\n              return;\n            if (!doc.isEmpty()) {\n              boolean result = writer.upload(doc);\n              doc = null;\n              if (result)\n                importStatistics.docCount.incrementAndGet();\n            }\n          }\n\n        } catch (DataImportHandlerException e) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, e);\n          }\n          if(e.getErrCode() == DataImportHandlerException.SKIP_ROW){\n            continue;\n          }\n          if (isRoot) {\n            if (e.getErrCode() == DataImportHandlerException.SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n            } else {\n              LOG.error(\"Exception while processing: \"\n                      + entity.name + \" document : \" + doc, e);\n            }\n            if (e.getErrCode() == DataImportHandlerException.SEVERE)\n              throw e;\n          } else\n            throw e;\n        } catch (Throwable t) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, t);\n          }\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE, t);\n        } finally {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ROW_END, entity.name, null);\n            if (entity.isDocRoot)\n              writer.log(SolrWriter.END_DOC, null, null);\n          }\n        }\n      }\n    } finally {\n      if (verboseDebug) {\n        writer.log(SolrWriter.END_ENTITY, null, null);\n      }\n      entityProcessor.destroy();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void buildDocument(VariableResolverImpl vr, DocWrapper doc,\n                             Map<String, Object> pk, DataConfig.Entity entity, boolean isRoot,\n                             ContextImpl parentCtx) {\n\n    EntityProcessorWrapper entityProcessor = getEntityProcessor(entity);\n\n    ContextImpl ctx = new ContextImpl(entity, vr, null,\n            pk == null ? Context.FULL_DUMP : Context.DELTA_DUMP,\n            session, parentCtx, this);\n    vr.context = ctx;\n    entityProcessor.init(ctx);\n\n    if (requestParameters.start > 0) {\n      writer.log(SolrWriter.DISABLE_LOGGING, null, null);\n    }\n\n    if (verboseDebug) {\n      writer.log(SolrWriter.START_ENTITY, entity.name, null);\n    }\n\n    int seenDocCount = 0;\n\n    try {\n      while (true) {\n        if (stop.get())\n          return;\n        try {\n          seenDocCount++;\n\n          if (seenDocCount > requestParameters.start) {\n            writer.log(SolrWriter.ENABLE_LOGGING, null, null);\n          }\n\n          if (verboseDebug && entity.isDocRoot) {\n            writer.log(SolrWriter.START_DOC, entity.name, null);\n          }\n          if (doc == null && entity.isDocRoot) {\n            doc = new DocWrapper();\n            ctx.setDoc(doc);\n            DataConfig.Entity e = entity;\n            while (e.parentEntity != null) {\n              addFields(e.parentEntity, doc, (Map<String, Object>) vr\n                      .resolve(e.parentEntity.name), vr);\n              e = e.parentEntity;\n            }\n          }\n\n          Map<String, Object> arow = entityProcessor.nextRow();\n          if (arow == null) {\n            entityProcessor.destroy();\n            break;\n          }\n\n          // Support for start parameter in debug mode\n          if (entity.isDocRoot) {\n            if (seenDocCount <= requestParameters.start)\n              continue;\n            if (seenDocCount > requestParameters.start + requestParameters.rows) {\n              LOG.info(\"Indexing stopped at docCount = \" + importStatistics.docCount);\n              break;\n            }\n          }\n\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_OUT, entity.name, arow);\n          }\n          importStatistics.rowsCount.incrementAndGet();\n          if (doc != null) {\n            handleSpecialCommands(arow, doc);\n            addFields(entity, doc, arow, vr);\n          }\n          if (isRoot)\n            vr.removeNamespace(null);\n          if (entity.entities != null) {\n            vr.addNamespace(entity.name, arow);\n            for (DataConfig.Entity child : entity.entities) {\n              buildDocument(vr, doc, null, child, false, ctx);\n            }\n            vr.removeNamespace(entity.name);\n          }\n\n          if (entity.isDocRoot) {\n            if (stop.get())\n              return;\n            if (!doc.isEmpty()) {\n              boolean result = writer.upload(doc);\n              doc = null;\n              if (result)\n                importStatistics.docCount.incrementAndGet();\n            }\n          }\n\n        } catch (DataImportHandlerException e) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, e);\n          }\n          if(e.getErrCode() == DataImportHandlerException.SKIP_ROW){\n            continue;\n          }\n          if (isRoot) {\n            if (e.getErrCode() == DataImportHandlerException.SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n            } else {\n              LOG.error(\"Exception while processing: \"\n                      + entity.name + \" document : \" + doc, e);\n            }\n            if (e.getErrCode() == DataImportHandlerException.SEVERE)\n              throw e;\n          } else\n            throw e;\n        } catch (Throwable t) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, t);\n          }\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE, t);\n        } finally {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ROW_END, entity.name, null);\n            if (entity.isDocRoot)\n              writer.log(SolrWriter.END_DOC, null, null);\n          }\n        }\n      }\n    } finally {\n      if (verboseDebug) {\n        writer.log(SolrWriter.END_ENTITY, null, null);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b097cdb384e8773ba40e9bf1b8b3e34a260b6885","date":1249278148,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#buildDocument(VariableResolverImpl,DocWrapper,Map[String,Object],DataConfig.Entity,boolean,ContextImpl).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#buildDocument(VariableResolverImpl,DocWrapper,Map[String,Object],DataConfig.Entity,boolean,ContextImpl).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void buildDocument(VariableResolverImpl vr, DocWrapper doc,\n                             Map<String, Object> pk, DataConfig.Entity entity, boolean isRoot,\n                             ContextImpl parentCtx) {\n\n    EntityProcessorWrapper entityProcessor = getEntityProcessor(entity);\n\n    ContextImpl ctx = new ContextImpl(entity, vr, null,\n            pk == null ? Context.FULL_DUMP : Context.DELTA_DUMP,\n            session, parentCtx, this);\n    entityProcessor.init(ctx);\n\n    if (requestParameters.start > 0) {\n      writer.log(SolrWriter.DISABLE_LOGGING, null, null);\n    }\n\n    if (verboseDebug) {\n      writer.log(SolrWriter.START_ENTITY, entity.name, null);\n    }\n\n    int seenDocCount = 0;\n\n    try {\n      while (true) {\n        if (stop.get())\n          return;\n        try {\n          seenDocCount++;\n\n          if (seenDocCount > requestParameters.start) {\n            writer.log(SolrWriter.ENABLE_LOGGING, null, null);\n          }\n\n          if (verboseDebug && entity.isDocRoot) {\n            writer.log(SolrWriter.START_DOC, entity.name, null);\n          }\n          if (doc == null && entity.isDocRoot) {\n            doc = new DocWrapper();\n            ctx.setDoc(doc);\n            DataConfig.Entity e = entity;\n            while (e.parentEntity != null) {\n              addFields(e.parentEntity, doc, (Map<String, Object>) vr\n                      .resolve(e.parentEntity.name), vr);\n              e = e.parentEntity;\n            }\n          }\n\n          Map<String, Object> arow = entityProcessor.nextRow();\n          if (arow == null) {\n            break;\n          }\n\n          // Support for start parameter in debug mode\n          if (entity.isDocRoot) {\n            if (seenDocCount <= requestParameters.start)\n              continue;\n            if (seenDocCount > requestParameters.start + requestParameters.rows) {\n              LOG.info(\"Indexing stopped at docCount = \" + importStatistics.docCount);\n              break;\n            }\n          }\n\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_OUT, entity.name, arow);\n          }\n          importStatistics.rowsCount.incrementAndGet();\n          if (doc != null) {\n            handleSpecialCommands(arow, doc);\n            addFields(entity, doc, arow, vr);\n          }\n          if (entity.entities != null) {\n            vr.addNamespace(entity.name, arow);\n            for (DataConfig.Entity child : entity.entities) {\n              buildDocument(vr, doc, null, child, false, ctx);\n            }\n            vr.removeNamespace(entity.name);\n          }\n\n          if (entity.isDocRoot) {\n            if (stop.get())\n              return;\n            if (!doc.isEmpty()) {\n              boolean result = writer.upload(doc);\n              doc = null;\n              if (result)\n                importStatistics.docCount.incrementAndGet();\n            }\n          }\n\n        } catch (DataImportHandlerException e) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, e);\n          }\n          if(e.getErrCode() == DataImportHandlerException.SKIP_ROW){\n            continue;\n          }\n          if (isRoot) {\n            if (e.getErrCode() == DataImportHandlerException.SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n            } else {\n              LOG.error(\"Exception while processing: \"\n                      + entity.name + \" document : \" + doc, e);\n            }\n            if (e.getErrCode() == DataImportHandlerException.SEVERE)\n              throw e;\n          } else\n            throw e;\n        } catch (Throwable t) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, t);\n          }\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE, t);\n        } finally {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ROW_END, entity.name, null);\n            if (entity.isDocRoot)\n              writer.log(SolrWriter.END_DOC, null, null);\n          }\n        }\n      }\n    } finally {\n      if (verboseDebug) {\n        writer.log(SolrWriter.END_ENTITY, null, null);\n      }\n      entityProcessor.destroy();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void buildDocument(VariableResolverImpl vr, DocWrapper doc,\n                             Map<String, Object> pk, DataConfig.Entity entity, boolean isRoot,\n                             ContextImpl parentCtx) {\n\n    EntityProcessorWrapper entityProcessor = getEntityProcessor(entity);\n\n    ContextImpl ctx = new ContextImpl(entity, vr, null,\n            pk == null ? Context.FULL_DUMP : Context.DELTA_DUMP,\n            session, parentCtx, this);\n    entityProcessor.init(ctx);\n\n    if (requestParameters.start > 0) {\n      writer.log(SolrWriter.DISABLE_LOGGING, null, null);\n    }\n\n    if (verboseDebug) {\n      writer.log(SolrWriter.START_ENTITY, entity.name, null);\n    }\n\n    int seenDocCount = 0;\n\n    try {\n      while (true) {\n        if (stop.get())\n          return;\n        try {\n          seenDocCount++;\n\n          if (seenDocCount > requestParameters.start) {\n            writer.log(SolrWriter.ENABLE_LOGGING, null, null);\n          }\n\n          if (verboseDebug && entity.isDocRoot) {\n            writer.log(SolrWriter.START_DOC, entity.name, null);\n          }\n          if (doc == null && entity.isDocRoot) {\n            doc = new DocWrapper();\n            ctx.setDoc(doc);\n            DataConfig.Entity e = entity;\n            while (e.parentEntity != null) {\n              addFields(e.parentEntity, doc, (Map<String, Object>) vr\n                      .resolve(e.parentEntity.name), vr);\n              e = e.parentEntity;\n            }\n          }\n\n          Map<String, Object> arow = entityProcessor.nextRow();\n          if (arow == null) {\n            break;\n          }\n\n          // Support for start parameter in debug mode\n          if (entity.isDocRoot) {\n            if (seenDocCount <= requestParameters.start)\n              continue;\n            if (seenDocCount > requestParameters.start + requestParameters.rows) {\n              LOG.info(\"Indexing stopped at docCount = \" + importStatistics.docCount);\n              break;\n            }\n          }\n\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_OUT, entity.name, arow);\n          }\n          importStatistics.rowsCount.incrementAndGet();\n          if (doc != null) {\n            handleSpecialCommands(arow, doc);\n            addFields(entity, doc, arow, vr);\n          }\n          if (isRoot)\n            vr.removeNamespace(null);\n          if (entity.entities != null) {\n            vr.addNamespace(entity.name, arow);\n            for (DataConfig.Entity child : entity.entities) {\n              buildDocument(vr, doc, null, child, false, ctx);\n            }\n            vr.removeNamespace(entity.name);\n          }\n\n          if (entity.isDocRoot) {\n            if (stop.get())\n              return;\n            if (!doc.isEmpty()) {\n              boolean result = writer.upload(doc);\n              doc = null;\n              if (result)\n                importStatistics.docCount.incrementAndGet();\n            }\n          }\n\n        } catch (DataImportHandlerException e) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, e);\n          }\n          if(e.getErrCode() == DataImportHandlerException.SKIP_ROW){\n            continue;\n          }\n          if (isRoot) {\n            if (e.getErrCode() == DataImportHandlerException.SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n            } else {\n              LOG.error(\"Exception while processing: \"\n                      + entity.name + \" document : \" + doc, e);\n            }\n            if (e.getErrCode() == DataImportHandlerException.SEVERE)\n              throw e;\n          } else\n            throw e;\n        } catch (Throwable t) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, t);\n          }\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE, t);\n        } finally {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ROW_END, entity.name, null);\n            if (entity.isDocRoot)\n              writer.log(SolrWriter.END_DOC, null, null);\n          }\n        }\n      }\n    } finally {\n      if (verboseDebug) {\n        writer.log(SolrWriter.END_ENTITY, null, null);\n      }\n      entityProcessor.destroy();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7b5db3b8a7775d857a35cc9b2add1be359fa7648","date":1253186595,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#buildDocument(VariableResolverImpl,DocWrapper,Map[String,Object],DataConfig.Entity,boolean,ContextImpl).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#buildDocument(VariableResolverImpl,DocWrapper,Map[String,Object],DataConfig.Entity,boolean,ContextImpl).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void buildDocument(VariableResolverImpl vr, DocWrapper doc,\n                             Map<String, Object> pk, DataConfig.Entity entity, boolean isRoot,\n                             ContextImpl parentCtx) {\n\n    EntityProcessorWrapper entityProcessor = getEntityProcessor(entity);\n\n    ContextImpl ctx = new ContextImpl(entity, vr, null,\n            pk == null ? Context.FULL_DUMP : Context.DELTA_DUMP,\n            session, parentCtx, this);\n    entityProcessor.init(ctx);\n\n    if (requestParameters.start > 0) {\n      writer.log(SolrWriter.DISABLE_LOGGING, null, null);\n    }\n\n    if (verboseDebug) {\n      writer.log(SolrWriter.START_ENTITY, entity.name, null);\n    }\n\n    int seenDocCount = 0;\n\n    try {\n      while (true) {\n        if (stop.get())\n          return;\n        try {\n          seenDocCount++;\n\n          if (seenDocCount > requestParameters.start) {\n            writer.log(SolrWriter.ENABLE_LOGGING, null, null);\n          }\n\n          if (verboseDebug && entity.isDocRoot) {\n            writer.log(SolrWriter.START_DOC, entity.name, null);\n          }\n          if (doc == null && entity.isDocRoot) {\n            doc = new DocWrapper();\n            ctx.setDoc(doc);\n            DataConfig.Entity e = entity;\n            while (e.parentEntity != null) {\n              addFields(e.parentEntity, doc, (Map<String, Object>) vr\n                      .resolve(e.parentEntity.name), vr);\n              e = e.parentEntity;\n            }\n          }\n\n          Map<String, Object> arow = entityProcessor.nextRow();\n          if (arow == null) {\n            break;\n          }\n\n          // Support for start parameter in debug mode\n          if (entity.isDocRoot) {\n            if (seenDocCount <= requestParameters.start)\n              continue;\n            if (seenDocCount > requestParameters.start + requestParameters.rows) {\n              LOG.info(\"Indexing stopped at docCount = \" + importStatistics.docCount);\n              break;\n            }\n          }\n\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_OUT, entity.name, arow);\n          }\n          importStatistics.rowsCount.incrementAndGet();\n          if (doc != null) {\n            handleSpecialCommands(arow, doc);\n            addFields(entity, doc, arow, vr);\n          }\n          if (entity.entities != null) {\n            vr.addNamespace(entity.name, arow);\n            for (DataConfig.Entity child : entity.entities) {\n              buildDocument(vr, doc, null, child, false, ctx);\n            }\n            vr.removeNamespace(entity.name);\n          }\n\n          if (entity.isDocRoot) {\n            if (stop.get())\n              return;\n            if (!doc.isEmpty()) {\n              boolean result = writer.upload(doc);\n              doc = null;\n              if (result){\n                importStatistics.docCount.incrementAndGet();\n              } else {\n                importStatistics.failedDocCount.incrementAndGet(); \n              }\n            }\n          }\n\n        } catch (DataImportHandlerException e) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, e);\n          }\n          if(e.getErrCode() == DataImportHandlerException.SKIP_ROW){\n            continue;\n          }\n          if (isRoot) {\n            if (e.getErrCode() == DataImportHandlerException.SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n            } else {\n              LOG.error(\"Exception while processing: \"\n                      + entity.name + \" document : \" + doc, e);\n            }\n            if (e.getErrCode() == DataImportHandlerException.SEVERE)\n              throw e;\n          } else\n            throw e;\n        } catch (Throwable t) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, t);\n          }\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE, t);\n        } finally {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ROW_END, entity.name, null);\n            if (entity.isDocRoot)\n              writer.log(SolrWriter.END_DOC, null, null);\n          }\n        }\n      }\n    } finally {\n      if (verboseDebug) {\n        writer.log(SolrWriter.END_ENTITY, null, null);\n      }\n      entityProcessor.destroy();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void buildDocument(VariableResolverImpl vr, DocWrapper doc,\n                             Map<String, Object> pk, DataConfig.Entity entity, boolean isRoot,\n                             ContextImpl parentCtx) {\n\n    EntityProcessorWrapper entityProcessor = getEntityProcessor(entity);\n\n    ContextImpl ctx = new ContextImpl(entity, vr, null,\n            pk == null ? Context.FULL_DUMP : Context.DELTA_DUMP,\n            session, parentCtx, this);\n    entityProcessor.init(ctx);\n\n    if (requestParameters.start > 0) {\n      writer.log(SolrWriter.DISABLE_LOGGING, null, null);\n    }\n\n    if (verboseDebug) {\n      writer.log(SolrWriter.START_ENTITY, entity.name, null);\n    }\n\n    int seenDocCount = 0;\n\n    try {\n      while (true) {\n        if (stop.get())\n          return;\n        try {\n          seenDocCount++;\n\n          if (seenDocCount > requestParameters.start) {\n            writer.log(SolrWriter.ENABLE_LOGGING, null, null);\n          }\n\n          if (verboseDebug && entity.isDocRoot) {\n            writer.log(SolrWriter.START_DOC, entity.name, null);\n          }\n          if (doc == null && entity.isDocRoot) {\n            doc = new DocWrapper();\n            ctx.setDoc(doc);\n            DataConfig.Entity e = entity;\n            while (e.parentEntity != null) {\n              addFields(e.parentEntity, doc, (Map<String, Object>) vr\n                      .resolve(e.parentEntity.name), vr);\n              e = e.parentEntity;\n            }\n          }\n\n          Map<String, Object> arow = entityProcessor.nextRow();\n          if (arow == null) {\n            break;\n          }\n\n          // Support for start parameter in debug mode\n          if (entity.isDocRoot) {\n            if (seenDocCount <= requestParameters.start)\n              continue;\n            if (seenDocCount > requestParameters.start + requestParameters.rows) {\n              LOG.info(\"Indexing stopped at docCount = \" + importStatistics.docCount);\n              break;\n            }\n          }\n\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_OUT, entity.name, arow);\n          }\n          importStatistics.rowsCount.incrementAndGet();\n          if (doc != null) {\n            handleSpecialCommands(arow, doc);\n            addFields(entity, doc, arow, vr);\n          }\n          if (entity.entities != null) {\n            vr.addNamespace(entity.name, arow);\n            for (DataConfig.Entity child : entity.entities) {\n              buildDocument(vr, doc, null, child, false, ctx);\n            }\n            vr.removeNamespace(entity.name);\n          }\n\n          if (entity.isDocRoot) {\n            if (stop.get())\n              return;\n            if (!doc.isEmpty()) {\n              boolean result = writer.upload(doc);\n              doc = null;\n              if (result)\n                importStatistics.docCount.incrementAndGet();\n            }\n          }\n\n        } catch (DataImportHandlerException e) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, e);\n          }\n          if(e.getErrCode() == DataImportHandlerException.SKIP_ROW){\n            continue;\n          }\n          if (isRoot) {\n            if (e.getErrCode() == DataImportHandlerException.SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n            } else {\n              LOG.error(\"Exception while processing: \"\n                      + entity.name + \" document : \" + doc, e);\n            }\n            if (e.getErrCode() == DataImportHandlerException.SEVERE)\n              throw e;\n          } else\n            throw e;\n        } catch (Throwable t) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, t);\n          }\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE, t);\n        } finally {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ROW_END, entity.name, null);\n            if (entity.isDocRoot)\n              writer.log(SolrWriter.END_DOC, null, null);\n          }\n        }\n      }\n    } finally {\n      if (verboseDebug) {\n        writer.log(SolrWriter.END_ENTITY, null, null);\n      }\n      entityProcessor.destroy();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a8cde625d0c34ed380fd8fd8b62408bf9ebc28f9","date":1255075537,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#buildDocument(VariableResolverImpl,DocWrapper,Map[String,Object],DataConfig.Entity,boolean,ContextImpl).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#buildDocument(VariableResolverImpl,DocWrapper,Map[String,Object],DataConfig.Entity,boolean,ContextImpl).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void buildDocument(VariableResolverImpl vr, DocWrapper doc,\n                             Map<String, Object> pk, DataConfig.Entity entity, boolean isRoot,\n                             ContextImpl parentCtx) {\n\n    EntityProcessorWrapper entityProcessor = getEntityProcessor(entity);\n\n    ContextImpl ctx = new ContextImpl(entity, vr, null,\n            pk == null ? Context.FULL_DUMP : Context.DELTA_DUMP,\n            session, parentCtx, this);\n    entityProcessor.init(ctx);\n\n    if (requestParameters.start > 0) {\n      writer.log(SolrWriter.DISABLE_LOGGING, null, null);\n    }\n\n    if (verboseDebug) {\n      writer.log(SolrWriter.START_ENTITY, entity.name, null);\n    }\n\n    int seenDocCount = 0;\n\n    try {\n      while (true) {\n        if (stop.get())\n          return;\n        if(importStatistics.docCount.get() > (requestParameters.start + requestParameters.rows)) break;\n        try {\n          seenDocCount++;\n\n          if (seenDocCount > requestParameters.start) {\n            writer.log(SolrWriter.ENABLE_LOGGING, null, null);\n          }\n\n          if (verboseDebug && entity.isDocRoot) {\n            writer.log(SolrWriter.START_DOC, entity.name, null);\n          }\n          if (doc == null && entity.isDocRoot) {\n            doc = new DocWrapper();\n            ctx.setDoc(doc);\n            DataConfig.Entity e = entity;\n            while (e.parentEntity != null) {\n              addFields(e.parentEntity, doc, (Map<String, Object>) vr\n                      .resolve(e.parentEntity.name), vr);\n              e = e.parentEntity;\n            }\n          }\n\n          Map<String, Object> arow = entityProcessor.nextRow();\n          if (arow == null) {\n            break;\n          }\n\n          // Support for start parameter in debug mode\n          if (entity.isDocRoot) {\n            if (seenDocCount <= requestParameters.start)\n              continue;\n            if (seenDocCount > requestParameters.start + requestParameters.rows) {\n              LOG.info(\"Indexing stopped at docCount = \" + importStatistics.docCount);\n              break;\n            }\n          }\n\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_OUT, entity.name, arow);\n          }\n          importStatistics.rowsCount.incrementAndGet();\n          if (doc != null) {\n            handleSpecialCommands(arow, doc);\n            addFields(entity, doc, arow, vr);\n          }\n          if (entity.entities != null) {\n            vr.addNamespace(entity.name, arow);\n            for (DataConfig.Entity child : entity.entities) {\n              buildDocument(vr, doc, null, child, false, ctx);\n            }\n            vr.removeNamespace(entity.name);\n          }\n\n          if (entity.isDocRoot) {\n            if (stop.get())\n              return;\n            if (!doc.isEmpty()) {\n              boolean result = writer.upload(doc);\n              doc = null;\n              if (result){\n                importStatistics.docCount.incrementAndGet();\n              } else {\n                importStatistics.failedDocCount.incrementAndGet(); \n              }\n            }\n          }\n\n        } catch (DataImportHandlerException e) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, e);\n          }\n          if(e.getErrCode() == DataImportHandlerException.SKIP_ROW){\n            continue;\n          }\n          if (isRoot) {\n            if (e.getErrCode() == DataImportHandlerException.SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n            } else {\n              LOG.error(\"Exception while processing: \"\n                      + entity.name + \" document : \" + doc, e);\n            }\n            if (e.getErrCode() == DataImportHandlerException.SEVERE)\n              throw e;\n          } else\n            throw e;\n        } catch (Throwable t) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, t);\n          }\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE, t);\n        } finally {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ROW_END, entity.name, null);\n            if (entity.isDocRoot)\n              writer.log(SolrWriter.END_DOC, null, null);\n          }\n        }\n      }\n    } finally {\n      if (verboseDebug) {\n        writer.log(SolrWriter.END_ENTITY, null, null);\n      }\n      entityProcessor.destroy();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void buildDocument(VariableResolverImpl vr, DocWrapper doc,\n                             Map<String, Object> pk, DataConfig.Entity entity, boolean isRoot,\n                             ContextImpl parentCtx) {\n\n    EntityProcessorWrapper entityProcessor = getEntityProcessor(entity);\n\n    ContextImpl ctx = new ContextImpl(entity, vr, null,\n            pk == null ? Context.FULL_DUMP : Context.DELTA_DUMP,\n            session, parentCtx, this);\n    entityProcessor.init(ctx);\n\n    if (requestParameters.start > 0) {\n      writer.log(SolrWriter.DISABLE_LOGGING, null, null);\n    }\n\n    if (verboseDebug) {\n      writer.log(SolrWriter.START_ENTITY, entity.name, null);\n    }\n\n    int seenDocCount = 0;\n\n    try {\n      while (true) {\n        if (stop.get())\n          return;\n        try {\n          seenDocCount++;\n\n          if (seenDocCount > requestParameters.start) {\n            writer.log(SolrWriter.ENABLE_LOGGING, null, null);\n          }\n\n          if (verboseDebug && entity.isDocRoot) {\n            writer.log(SolrWriter.START_DOC, entity.name, null);\n          }\n          if (doc == null && entity.isDocRoot) {\n            doc = new DocWrapper();\n            ctx.setDoc(doc);\n            DataConfig.Entity e = entity;\n            while (e.parentEntity != null) {\n              addFields(e.parentEntity, doc, (Map<String, Object>) vr\n                      .resolve(e.parentEntity.name), vr);\n              e = e.parentEntity;\n            }\n          }\n\n          Map<String, Object> arow = entityProcessor.nextRow();\n          if (arow == null) {\n            break;\n          }\n\n          // Support for start parameter in debug mode\n          if (entity.isDocRoot) {\n            if (seenDocCount <= requestParameters.start)\n              continue;\n            if (seenDocCount > requestParameters.start + requestParameters.rows) {\n              LOG.info(\"Indexing stopped at docCount = \" + importStatistics.docCount);\n              break;\n            }\n          }\n\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_OUT, entity.name, arow);\n          }\n          importStatistics.rowsCount.incrementAndGet();\n          if (doc != null) {\n            handleSpecialCommands(arow, doc);\n            addFields(entity, doc, arow, vr);\n          }\n          if (entity.entities != null) {\n            vr.addNamespace(entity.name, arow);\n            for (DataConfig.Entity child : entity.entities) {\n              buildDocument(vr, doc, null, child, false, ctx);\n            }\n            vr.removeNamespace(entity.name);\n          }\n\n          if (entity.isDocRoot) {\n            if (stop.get())\n              return;\n            if (!doc.isEmpty()) {\n              boolean result = writer.upload(doc);\n              doc = null;\n              if (result){\n                importStatistics.docCount.incrementAndGet();\n              } else {\n                importStatistics.failedDocCount.incrementAndGet(); \n              }\n            }\n          }\n\n        } catch (DataImportHandlerException e) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, e);\n          }\n          if(e.getErrCode() == DataImportHandlerException.SKIP_ROW){\n            continue;\n          }\n          if (isRoot) {\n            if (e.getErrCode() == DataImportHandlerException.SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n            } else {\n              LOG.error(\"Exception while processing: \"\n                      + entity.name + \" document : \" + doc, e);\n            }\n            if (e.getErrCode() == DataImportHandlerException.SEVERE)\n              throw e;\n          } else\n            throw e;\n        } catch (Throwable t) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, t);\n          }\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE, t);\n        } finally {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ROW_END, entity.name, null);\n            if (entity.isDocRoot)\n              writer.log(SolrWriter.END_DOC, null, null);\n          }\n        }\n      }\n    } finally {\n      if (verboseDebug) {\n        writer.log(SolrWriter.END_ENTITY, null, null);\n      }\n      entityProcessor.destroy();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"65f4e997b946a4eadce22b758749046a63ba2eff","date":1263282580,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#buildDocument(VariableResolverImpl,DocWrapper,Map[String,Object],DataConfig.Entity,boolean,ContextImpl).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#buildDocument(VariableResolverImpl,DocWrapper,Map[String,Object],DataConfig.Entity,boolean,ContextImpl).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void buildDocument(VariableResolverImpl vr, DocWrapper doc,\n                             Map<String, Object> pk, DataConfig.Entity entity, boolean isRoot,\n                             ContextImpl parentCtx) {\n\n    EntityProcessorWrapper entityProcessor = getEntityProcessor(entity);\n\n    ContextImpl ctx = new ContextImpl(entity, vr, null,\n            pk == null ? Context.FULL_DUMP : Context.DELTA_DUMP,\n            session, parentCtx, this);\n    entityProcessor.init(ctx);\n    Context.CURRENT_CONTEXT.set(ctx);\n    \n    if (requestParameters.start > 0) {\n      writer.log(SolrWriter.DISABLE_LOGGING, null, null);\n    }\n\n    if (verboseDebug) {\n      writer.log(SolrWriter.START_ENTITY, entity.name, null);\n    }\n\n    int seenDocCount = 0;\n\n    try {\n      while (true) {\n        if (stop.get())\n          return;\n        if(importStatistics.docCount.get() > (requestParameters.start + requestParameters.rows)) break;\n        try {\n          seenDocCount++;\n\n          if (seenDocCount > requestParameters.start) {\n            writer.log(SolrWriter.ENABLE_LOGGING, null, null);\n          }\n\n          if (verboseDebug && entity.isDocRoot) {\n            writer.log(SolrWriter.START_DOC, entity.name, null);\n          }\n          if (doc == null && entity.isDocRoot) {\n            doc = new DocWrapper();\n            ctx.setDoc(doc);\n            DataConfig.Entity e = entity;\n            while (e.parentEntity != null) {\n              addFields(e.parentEntity, doc, (Map<String, Object>) vr\n                      .resolve(e.parentEntity.name), vr);\n              e = e.parentEntity;\n            }\n          }\n\n          Map<String, Object> arow = entityProcessor.nextRow();\n          if (arow == null) {\n            break;\n          }\n\n          // Support for start parameter in debug mode\n          if (entity.isDocRoot) {\n            if (seenDocCount <= requestParameters.start)\n              continue;\n            if (seenDocCount > requestParameters.start + requestParameters.rows) {\n              LOG.info(\"Indexing stopped at docCount = \" + importStatistics.docCount);\n              break;\n            }\n          }\n\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_OUT, entity.name, arow);\n          }\n          importStatistics.rowsCount.incrementAndGet();\n          if (doc != null) {\n            handleSpecialCommands(arow, doc);\n            addFields(entity, doc, arow, vr);\n          }\n          if (entity.entities != null) {\n            vr.addNamespace(entity.name, arow);\n            for (DataConfig.Entity child : entity.entities) {\n              buildDocument(vr, doc, null, child, false, ctx);\n            }\n            vr.removeNamespace(entity.name);\n          }\n          /*The child entities would have changed the CURRENT_CONTEXT. So when they are done, set it back to the old.\n           *\n           */\n          Context.CURRENT_CONTEXT.set(ctx);\n\n          if (entity.isDocRoot) {\n            if (stop.get())\n              return;\n            if (!doc.isEmpty()) {\n              boolean result = writer.upload(doc);\n              doc = null;\n              if (result){\n                importStatistics.docCount.incrementAndGet();\n              } else {\n                importStatistics.failedDocCount.incrementAndGet();\n              }\n            }\n          }\n\n        } catch (DataImportHandlerException e) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, e);\n          }\n          if(e.getErrCode() == DataImportHandlerException.SKIP_ROW){\n            continue;\n          }\n          if (isRoot) {\n            if (e.getErrCode() == DataImportHandlerException.SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n            } else {\n              LOG.error(\"Exception while processing: \"\n                      + entity.name + \" document : \" + doc, e);\n            }\n            if (e.getErrCode() == DataImportHandlerException.SEVERE)\n              throw e;\n          } else\n            throw e;\n        } catch (Throwable t) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, t);\n          }\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE, t);\n        } finally {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ROW_END, entity.name, null);\n            if (entity.isDocRoot)\n              writer.log(SolrWriter.END_DOC, null, null);\n            Context.CURRENT_CONTEXT.remove();\n          }\n        }\n      }\n    } finally {\n      if (verboseDebug) {\n        writer.log(SolrWriter.END_ENTITY, null, null);\n      }\n      entityProcessor.destroy();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void buildDocument(VariableResolverImpl vr, DocWrapper doc,\n                             Map<String, Object> pk, DataConfig.Entity entity, boolean isRoot,\n                             ContextImpl parentCtx) {\n\n    EntityProcessorWrapper entityProcessor = getEntityProcessor(entity);\n\n    ContextImpl ctx = new ContextImpl(entity, vr, null,\n            pk == null ? Context.FULL_DUMP : Context.DELTA_DUMP,\n            session, parentCtx, this);\n    entityProcessor.init(ctx);\n\n    if (requestParameters.start > 0) {\n      writer.log(SolrWriter.DISABLE_LOGGING, null, null);\n    }\n\n    if (verboseDebug) {\n      writer.log(SolrWriter.START_ENTITY, entity.name, null);\n    }\n\n    int seenDocCount = 0;\n\n    try {\n      while (true) {\n        if (stop.get())\n          return;\n        if(importStatistics.docCount.get() > (requestParameters.start + requestParameters.rows)) break;\n        try {\n          seenDocCount++;\n\n          if (seenDocCount > requestParameters.start) {\n            writer.log(SolrWriter.ENABLE_LOGGING, null, null);\n          }\n\n          if (verboseDebug && entity.isDocRoot) {\n            writer.log(SolrWriter.START_DOC, entity.name, null);\n          }\n          if (doc == null && entity.isDocRoot) {\n            doc = new DocWrapper();\n            ctx.setDoc(doc);\n            DataConfig.Entity e = entity;\n            while (e.parentEntity != null) {\n              addFields(e.parentEntity, doc, (Map<String, Object>) vr\n                      .resolve(e.parentEntity.name), vr);\n              e = e.parentEntity;\n            }\n          }\n\n          Map<String, Object> arow = entityProcessor.nextRow();\n          if (arow == null) {\n            break;\n          }\n\n          // Support for start parameter in debug mode\n          if (entity.isDocRoot) {\n            if (seenDocCount <= requestParameters.start)\n              continue;\n            if (seenDocCount > requestParameters.start + requestParameters.rows) {\n              LOG.info(\"Indexing stopped at docCount = \" + importStatistics.docCount);\n              break;\n            }\n          }\n\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_OUT, entity.name, arow);\n          }\n          importStatistics.rowsCount.incrementAndGet();\n          if (doc != null) {\n            handleSpecialCommands(arow, doc);\n            addFields(entity, doc, arow, vr);\n          }\n          if (entity.entities != null) {\n            vr.addNamespace(entity.name, arow);\n            for (DataConfig.Entity child : entity.entities) {\n              buildDocument(vr, doc, null, child, false, ctx);\n            }\n            vr.removeNamespace(entity.name);\n          }\n\n          if (entity.isDocRoot) {\n            if (stop.get())\n              return;\n            if (!doc.isEmpty()) {\n              boolean result = writer.upload(doc);\n              doc = null;\n              if (result){\n                importStatistics.docCount.incrementAndGet();\n              } else {\n                importStatistics.failedDocCount.incrementAndGet(); \n              }\n            }\n          }\n\n        } catch (DataImportHandlerException e) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, e);\n          }\n          if(e.getErrCode() == DataImportHandlerException.SKIP_ROW){\n            continue;\n          }\n          if (isRoot) {\n            if (e.getErrCode() == DataImportHandlerException.SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n            } else {\n              LOG.error(\"Exception while processing: \"\n                      + entity.name + \" document : \" + doc, e);\n            }\n            if (e.getErrCode() == DataImportHandlerException.SEVERE)\n              throw e;\n          } else\n            throw e;\n        } catch (Throwable t) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, t);\n          }\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE, t);\n        } finally {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ROW_END, entity.name, null);\n            if (entity.isDocRoot)\n              writer.log(SolrWriter.END_DOC, null, null);\n          }\n        }\n      }\n    } finally {\n      if (verboseDebug) {\n        writer.log(SolrWriter.END_ENTITY, null, null);\n      }\n      entityProcessor.destroy();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9a115c9f2726f7f1a4c1ee87cf3ba7a66e4c0d4f","date":1265370637,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#buildDocument(VariableResolverImpl,DocWrapper,Map[String,Object],DataConfig.Entity,boolean,ContextImpl).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#buildDocument(VariableResolverImpl,DocWrapper,Map[String,Object],DataConfig.Entity,boolean,ContextImpl).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void buildDocument(VariableResolverImpl vr, DocWrapper doc,\n                             Map<String, Object> pk, DataConfig.Entity entity, boolean isRoot,\n                             ContextImpl parentCtx) {\n\n    EntityProcessorWrapper entityProcessor = getEntityProcessor(entity);\n\n    ContextImpl ctx = new ContextImpl(entity, vr, null,\n            pk == null ? Context.FULL_DUMP : Context.DELTA_DUMP,\n            session, parentCtx, this);\n    entityProcessor.init(ctx);\n    Context.CURRENT_CONTEXT.set(ctx);\n    \n    if (requestParameters.start > 0) {\n      writer.log(SolrWriter.DISABLE_LOGGING, null, null);\n    }\n\n    if (verboseDebug) {\n      writer.log(SolrWriter.START_ENTITY, entity.name, null);\n    }\n\n    int seenDocCount = 0;\n\n    try {\n      while (true) {\n        if (stop.get())\n          return;\n        if(importStatistics.docCount.get() > (requestParameters.start + requestParameters.rows)) break;\n        try {\n          seenDocCount++;\n\n          if (seenDocCount > requestParameters.start) {\n            writer.log(SolrWriter.ENABLE_LOGGING, null, null);\n          }\n\n          if (verboseDebug && entity.isDocRoot) {\n            writer.log(SolrWriter.START_DOC, entity.name, null);\n          }\n          if (doc == null && entity.isDocRoot) {\n            doc = new DocWrapper();\n            ctx.setDoc(doc);\n            DataConfig.Entity e = entity;\n            while (e.parentEntity != null) {\n              addFields(e.parentEntity, doc, (Map<String, Object>) vr\n                      .resolve(e.parentEntity.name), vr);\n              e = e.parentEntity;\n            }\n          }\n\n          Map<String, Object> arow = entityProcessor.nextRow();\n          if (arow == null) {\n            break;\n          }\n\n          // Support for start parameter in debug mode\n          if (entity.isDocRoot) {\n            if (seenDocCount <= requestParameters.start)\n              continue;\n            if (seenDocCount > requestParameters.start + requestParameters.rows) {\n              LOG.info(\"Indexing stopped at docCount = \" + importStatistics.docCount);\n              break;\n            }\n          }\n\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_OUT, entity.name, arow);\n          }\n          importStatistics.rowsCount.incrementAndGet();\n          if (doc != null) {\n            handleSpecialCommands(arow, doc);\n            addFields(entity, doc, arow, vr);\n          }\n          if (entity.entities != null) {\n            vr.addNamespace(entity.name, arow);\n            for (DataConfig.Entity child : entity.entities) {\n              buildDocument(vr, doc, null, child, false, ctx);\n            }\n            vr.removeNamespace(entity.name);\n          }\n          /*The child entities would have changed the CURRENT_CONTEXT. So when they are done, set it back to the old.\n           *\n           */\n          Context.CURRENT_CONTEXT.set(ctx);\n\n          if (entity.isDocRoot) {\n            if (stop.get())\n              return;\n            if (!doc.isEmpty()) {\n              boolean result = writer.upload(doc);\n              doc = null;\n              if (result){\n                importStatistics.docCount.incrementAndGet();\n              } else {\n                importStatistics.failedDocCount.incrementAndGet();\n              }\n            }\n          }\n\n        } catch (DataImportHandlerException e) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, e);\n          }\n          if(e.getErrCode() == DataImportHandlerException.SKIP_ROW){\n            continue;\n          }\n          if (isRoot) {\n            if (e.getErrCode() == DataImportHandlerException.SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              doc = null;\n            } else {\n              LOG.error(\"Exception while processing: \"\n                      + entity.name + \" document : \" + doc, e);\n            }\n            if (e.getErrCode() == DataImportHandlerException.SEVERE)\n              throw e;\n          } else\n            throw e;\n        } catch (Throwable t) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, t);\n          }\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE, t);\n        } finally {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ROW_END, entity.name, null);\n            if (entity.isDocRoot)\n              writer.log(SolrWriter.END_DOC, null, null);\n            Context.CURRENT_CONTEXT.remove();\n          }\n        }\n      }\n    } finally {\n      if (verboseDebug) {\n        writer.log(SolrWriter.END_ENTITY, null, null);\n      }\n      entityProcessor.destroy();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void buildDocument(VariableResolverImpl vr, DocWrapper doc,\n                             Map<String, Object> pk, DataConfig.Entity entity, boolean isRoot,\n                             ContextImpl parentCtx) {\n\n    EntityProcessorWrapper entityProcessor = getEntityProcessor(entity);\n\n    ContextImpl ctx = new ContextImpl(entity, vr, null,\n            pk == null ? Context.FULL_DUMP : Context.DELTA_DUMP,\n            session, parentCtx, this);\n    entityProcessor.init(ctx);\n    Context.CURRENT_CONTEXT.set(ctx);\n    \n    if (requestParameters.start > 0) {\n      writer.log(SolrWriter.DISABLE_LOGGING, null, null);\n    }\n\n    if (verboseDebug) {\n      writer.log(SolrWriter.START_ENTITY, entity.name, null);\n    }\n\n    int seenDocCount = 0;\n\n    try {\n      while (true) {\n        if (stop.get())\n          return;\n        if(importStatistics.docCount.get() > (requestParameters.start + requestParameters.rows)) break;\n        try {\n          seenDocCount++;\n\n          if (seenDocCount > requestParameters.start) {\n            writer.log(SolrWriter.ENABLE_LOGGING, null, null);\n          }\n\n          if (verboseDebug && entity.isDocRoot) {\n            writer.log(SolrWriter.START_DOC, entity.name, null);\n          }\n          if (doc == null && entity.isDocRoot) {\n            doc = new DocWrapper();\n            ctx.setDoc(doc);\n            DataConfig.Entity e = entity;\n            while (e.parentEntity != null) {\n              addFields(e.parentEntity, doc, (Map<String, Object>) vr\n                      .resolve(e.parentEntity.name), vr);\n              e = e.parentEntity;\n            }\n          }\n\n          Map<String, Object> arow = entityProcessor.nextRow();\n          if (arow == null) {\n            break;\n          }\n\n          // Support for start parameter in debug mode\n          if (entity.isDocRoot) {\n            if (seenDocCount <= requestParameters.start)\n              continue;\n            if (seenDocCount > requestParameters.start + requestParameters.rows) {\n              LOG.info(\"Indexing stopped at docCount = \" + importStatistics.docCount);\n              break;\n            }\n          }\n\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_OUT, entity.name, arow);\n          }\n          importStatistics.rowsCount.incrementAndGet();\n          if (doc != null) {\n            handleSpecialCommands(arow, doc);\n            addFields(entity, doc, arow, vr);\n          }\n          if (entity.entities != null) {\n            vr.addNamespace(entity.name, arow);\n            for (DataConfig.Entity child : entity.entities) {\n              buildDocument(vr, doc, null, child, false, ctx);\n            }\n            vr.removeNamespace(entity.name);\n          }\n          /*The child entities would have changed the CURRENT_CONTEXT. So when they are done, set it back to the old.\n           *\n           */\n          Context.CURRENT_CONTEXT.set(ctx);\n\n          if (entity.isDocRoot) {\n            if (stop.get())\n              return;\n            if (!doc.isEmpty()) {\n              boolean result = writer.upload(doc);\n              doc = null;\n              if (result){\n                importStatistics.docCount.incrementAndGet();\n              } else {\n                importStatistics.failedDocCount.incrementAndGet();\n              }\n            }\n          }\n\n        } catch (DataImportHandlerException e) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, e);\n          }\n          if(e.getErrCode() == DataImportHandlerException.SKIP_ROW){\n            continue;\n          }\n          if (isRoot) {\n            if (e.getErrCode() == DataImportHandlerException.SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n            } else {\n              LOG.error(\"Exception while processing: \"\n                      + entity.name + \" document : \" + doc, e);\n            }\n            if (e.getErrCode() == DataImportHandlerException.SEVERE)\n              throw e;\n          } else\n            throw e;\n        } catch (Throwable t) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, t);\n          }\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE, t);\n        } finally {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ROW_END, entity.name, null);\n            if (entity.isDocRoot)\n              writer.log(SolrWriter.END_DOC, null, null);\n            Context.CURRENT_CONTEXT.remove();\n          }\n        }\n      }\n    } finally {\n      if (verboseDebug) {\n        writer.log(SolrWriter.END_ENTITY, null, null);\n      }\n      entityProcessor.destroy();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#buildDocument(VariableResolverImpl,DocWrapper,Map[String,Object],DataConfig.Entity,boolean,ContextImpl).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DocBuilder#buildDocument(VariableResolverImpl,DocWrapper,Map[String,Object],DataConfig.Entity,boolean,ContextImpl).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void buildDocument(VariableResolverImpl vr, DocWrapper doc,\n                             Map<String, Object> pk, DataConfig.Entity entity, boolean isRoot,\n                             ContextImpl parentCtx) {\n\n    EntityProcessorWrapper entityProcessor = getEntityProcessor(entity);\n\n    ContextImpl ctx = new ContextImpl(entity, vr, null,\n            pk == null ? Context.FULL_DUMP : Context.DELTA_DUMP,\n            session, parentCtx, this);\n    entityProcessor.init(ctx);\n    Context.CURRENT_CONTEXT.set(ctx);\n    \n    if (requestParameters.start > 0) {\n      writer.log(SolrWriter.DISABLE_LOGGING, null, null);\n    }\n\n    if (verboseDebug) {\n      writer.log(SolrWriter.START_ENTITY, entity.name, null);\n    }\n\n    int seenDocCount = 0;\n\n    try {\n      while (true) {\n        if (stop.get())\n          return;\n        if(importStatistics.docCount.get() > (requestParameters.start + requestParameters.rows)) break;\n        try {\n          seenDocCount++;\n\n          if (seenDocCount > requestParameters.start) {\n            writer.log(SolrWriter.ENABLE_LOGGING, null, null);\n          }\n\n          if (verboseDebug && entity.isDocRoot) {\n            writer.log(SolrWriter.START_DOC, entity.name, null);\n          }\n          if (doc == null && entity.isDocRoot) {\n            doc = new DocWrapper();\n            ctx.setDoc(doc);\n            DataConfig.Entity e = entity;\n            while (e.parentEntity != null) {\n              addFields(e.parentEntity, doc, (Map<String, Object>) vr\n                      .resolve(e.parentEntity.name), vr);\n              e = e.parentEntity;\n            }\n          }\n\n          Map<String, Object> arow = entityProcessor.nextRow();\n          if (arow == null) {\n            break;\n          }\n\n          // Support for start parameter in debug mode\n          if (entity.isDocRoot) {\n            if (seenDocCount <= requestParameters.start)\n              continue;\n            if (seenDocCount > requestParameters.start + requestParameters.rows) {\n              LOG.info(\"Indexing stopped at docCount = \" + importStatistics.docCount);\n              break;\n            }\n          }\n\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_OUT, entity.name, arow);\n          }\n          importStatistics.rowsCount.incrementAndGet();\n          if (doc != null) {\n            handleSpecialCommands(arow, doc);\n            addFields(entity, doc, arow, vr);\n          }\n          if (entity.entities != null) {\n            vr.addNamespace(entity.name, arow);\n            for (DataConfig.Entity child : entity.entities) {\n              buildDocument(vr, doc, null, child, false, ctx);\n            }\n            vr.removeNamespace(entity.name);\n          }\n          /*The child entities would have changed the CURRENT_CONTEXT. So when they are done, set it back to the old.\n           *\n           */\n          Context.CURRENT_CONTEXT.set(ctx);\n\n          if (entity.isDocRoot) {\n            if (stop.get())\n              return;\n            if (!doc.isEmpty()) {\n              boolean result = writer.upload(doc);\n              doc = null;\n              if (result){\n                importStatistics.docCount.incrementAndGet();\n              } else {\n                importStatistics.failedDocCount.incrementAndGet();\n              }\n            }\n          }\n\n        } catch (DataImportHandlerException e) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, e);\n          }\n          if(e.getErrCode() == DataImportHandlerException.SKIP_ROW){\n            continue;\n          }\n          if (isRoot) {\n            if (e.getErrCode() == DataImportHandlerException.SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              doc = null;\n            } else {\n              LOG.error(\"Exception while processing: \"\n                      + entity.name + \" document : \" + doc, e);\n            }\n            if (e.getErrCode() == DataImportHandlerException.SEVERE)\n              throw e;\n          } else\n            throw e;\n        } catch (Throwable t) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, t);\n          }\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE, t);\n        } finally {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ROW_END, entity.name, null);\n            if (entity.isDocRoot)\n              writer.log(SolrWriter.END_DOC, null, null);\n            Context.CURRENT_CONTEXT.remove();\n          }\n        }\n      }\n    } finally {\n      if (verboseDebug) {\n        writer.log(SolrWriter.END_ENTITY, null, null);\n      }\n      entityProcessor.destroy();\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void buildDocument(VariableResolverImpl vr, DocWrapper doc,\n                             Map<String, Object> pk, DataConfig.Entity entity, boolean isRoot,\n                             ContextImpl parentCtx) {\n\n    EntityProcessorWrapper entityProcessor = getEntityProcessor(entity);\n\n    ContextImpl ctx = new ContextImpl(entity, vr, null,\n            pk == null ? Context.FULL_DUMP : Context.DELTA_DUMP,\n            session, parentCtx, this);\n    entityProcessor.init(ctx);\n    Context.CURRENT_CONTEXT.set(ctx);\n    \n    if (requestParameters.start > 0) {\n      writer.log(SolrWriter.DISABLE_LOGGING, null, null);\n    }\n\n    if (verboseDebug) {\n      writer.log(SolrWriter.START_ENTITY, entity.name, null);\n    }\n\n    int seenDocCount = 0;\n\n    try {\n      while (true) {\n        if (stop.get())\n          return;\n        if(importStatistics.docCount.get() > (requestParameters.start + requestParameters.rows)) break;\n        try {\n          seenDocCount++;\n\n          if (seenDocCount > requestParameters.start) {\n            writer.log(SolrWriter.ENABLE_LOGGING, null, null);\n          }\n\n          if (verboseDebug && entity.isDocRoot) {\n            writer.log(SolrWriter.START_DOC, entity.name, null);\n          }\n          if (doc == null && entity.isDocRoot) {\n            doc = new DocWrapper();\n            ctx.setDoc(doc);\n            DataConfig.Entity e = entity;\n            while (e.parentEntity != null) {\n              addFields(e.parentEntity, doc, (Map<String, Object>) vr\n                      .resolve(e.parentEntity.name), vr);\n              e = e.parentEntity;\n            }\n          }\n\n          Map<String, Object> arow = entityProcessor.nextRow();\n          if (arow == null) {\n            break;\n          }\n\n          // Support for start parameter in debug mode\n          if (entity.isDocRoot) {\n            if (seenDocCount <= requestParameters.start)\n              continue;\n            if (seenDocCount > requestParameters.start + requestParameters.rows) {\n              LOG.info(\"Indexing stopped at docCount = \" + importStatistics.docCount);\n              break;\n            }\n          }\n\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_OUT, entity.name, arow);\n          }\n          importStatistics.rowsCount.incrementAndGet();\n          if (doc != null) {\n            handleSpecialCommands(arow, doc);\n            addFields(entity, doc, arow, vr);\n          }\n          if (entity.entities != null) {\n            vr.addNamespace(entity.name, arow);\n            for (DataConfig.Entity child : entity.entities) {\n              buildDocument(vr, doc, null, child, false, ctx);\n            }\n            vr.removeNamespace(entity.name);\n          }\n          /*The child entities would have changed the CURRENT_CONTEXT. So when they are done, set it back to the old.\n           *\n           */\n          Context.CURRENT_CONTEXT.set(ctx);\n\n          if (entity.isDocRoot) {\n            if (stop.get())\n              return;\n            if (!doc.isEmpty()) {\n              boolean result = writer.upload(doc);\n              doc = null;\n              if (result){\n                importStatistics.docCount.incrementAndGet();\n              } else {\n                importStatistics.failedDocCount.incrementAndGet();\n              }\n            }\n          }\n\n        } catch (DataImportHandlerException e) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, e);\n          }\n          if(e.getErrCode() == DataImportHandlerException.SKIP_ROW){\n            continue;\n          }\n          if (isRoot) {\n            if (e.getErrCode() == DataImportHandlerException.SKIP) {\n              importStatistics.skipDocCount.getAndIncrement();\n              doc = null;\n            } else {\n              LOG.error(\"Exception while processing: \"\n                      + entity.name + \" document : \" + doc, e);\n            }\n            if (e.getErrCode() == DataImportHandlerException.SEVERE)\n              throw e;\n          } else\n            throw e;\n        } catch (Throwable t) {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ENTITY_EXCEPTION, entity.name, t);\n          }\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE, t);\n        } finally {\n          if (verboseDebug) {\n            writer.log(SolrWriter.ROW_END, entity.name, null);\n            if (entity.isDocRoot)\n              writer.log(SolrWriter.END_DOC, null, null);\n            Context.CURRENT_CONTEXT.remove();\n          }\n        }\n      }\n    } finally {\n      if (verboseDebug) {\n        writer.log(SolrWriter.END_ENTITY, null, null);\n      }\n      entityProcessor.destroy();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a8cde625d0c34ed380fd8fd8b62408bf9ebc28f9":["7b5db3b8a7775d857a35cc9b2add1be359fa7648"],"65f4e997b946a4eadce22b758749046a63ba2eff":["a8cde625d0c34ed380fd8fd8b62408bf9ebc28f9"],"b097cdb384e8773ba40e9bf1b8b3e34a260b6885":["210e60bfae7c0585fc04cfe0f50c2b14a841e4e2"],"18b5e8b70d18c7d8fb665bb1abd1154166882745":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7b5db3b8a7775d857a35cc9b2add1be359fa7648":["b097cdb384e8773ba40e9bf1b8b3e34a260b6885"],"ad94625fb8d088209f46650c8097196fec67f00c":["9a115c9f2726f7f1a4c1ee87cf3ba7a66e4c0d4f"],"e0691086ff7220752f6abac58cff6e81eeb1ba68":["18b5e8b70d18c7d8fb665bb1abd1154166882745"],"9a115c9f2726f7f1a4c1ee87cf3ba7a66e4c0d4f":["65f4e997b946a4eadce22b758749046a63ba2eff"],"210e60bfae7c0585fc04cfe0f50c2b14a841e4e2":["e0691086ff7220752f6abac58cff6e81eeb1ba68"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a8cde625d0c34ed380fd8fd8b62408bf9ebc28f9":["65f4e997b946a4eadce22b758749046a63ba2eff"],"65f4e997b946a4eadce22b758749046a63ba2eff":["9a115c9f2726f7f1a4c1ee87cf3ba7a66e4c0d4f"],"b097cdb384e8773ba40e9bf1b8b3e34a260b6885":["7b5db3b8a7775d857a35cc9b2add1be359fa7648"],"18b5e8b70d18c7d8fb665bb1abd1154166882745":["e0691086ff7220752f6abac58cff6e81eeb1ba68"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["18b5e8b70d18c7d8fb665bb1abd1154166882745"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7b5db3b8a7775d857a35cc9b2add1be359fa7648":["a8cde625d0c34ed380fd8fd8b62408bf9ebc28f9"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"e0691086ff7220752f6abac58cff6e81eeb1ba68":["210e60bfae7c0585fc04cfe0f50c2b14a841e4e2"],"210e60bfae7c0585fc04cfe0f50c2b14a841e4e2":["b097cdb384e8773ba40e9bf1b8b3e34a260b6885"],"9a115c9f2726f7f1a4c1ee87cf3ba7a66e4c0d4f":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}