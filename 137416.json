{"path":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","sourceNew":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    if ((Constants.WINDOWS || Constants.SUN_OS || Constants.LINUX)\n          && Constants.JRE_IS_64BIT && MMapDirectory.UNMAP_SUPPORTED) {\n      return new MMapDirectory(path, lockFactory);\n    } else if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","sourceOld":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    if ((Constants.WINDOWS || Constants.SUN_OS || Constants.LINUX)\n          && Constants.JRE_IS_64BIT && MMapDirectory.UNMAP_SUPPORTED) {\n      return new MMapDirectory(path, lockFactory);\n    } else if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4bb64a1a51beb2cb2deb197c0b38e684c5f210ef","date":1401819742,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","sourceNew":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    if (Constants.JRE_IS_64BIT && MMapDirectory.UNMAP_SUPPORTED) {\n      return new MMapDirectory(path, lockFactory);\n    } else if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","sourceOld":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    if ((Constants.WINDOWS || Constants.SUN_OS || Constants.LINUX)\n          && Constants.JRE_IS_64BIT && MMapDirectory.UNMAP_SUPPORTED) {\n      return new MMapDirectory(path, lockFactory);\n    } else if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#open(Path,LockFactory).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","sourceNew":"  /** Just like {@link #open(Path)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(Path path, LockFactory lockFactory) throws IOException {\n    if (Constants.JRE_IS_64BIT && MMapDirectory.UNMAP_SUPPORTED) {\n      return new MMapDirectory(path, lockFactory);\n    } else if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","sourceOld":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    if (Constants.JRE_IS_64BIT && MMapDirectory.UNMAP_SUPPORTED) {\n      return new MMapDirectory(path, lockFactory);\n    } else if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4bb64a1a51beb2cb2deb197c0b38e684c5f210ef":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4abec28b874149a7223e32cc7a01704c27790de":["4bb64a1a51beb2cb2deb197c0b38e684c5f210ef"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4abec28b874149a7223e32cc7a01704c27790de"]},"commit2Childs":{"4bb64a1a51beb2cb2deb197c0b38e684c5f210ef":["f4abec28b874149a7223e32cc7a01704c27790de"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["4bb64a1a51beb2cb2deb197c0b38e684c5f210ef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f4abec28b874149a7223e32cc7a01704c27790de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}