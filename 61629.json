{"path":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#testBufferOverflow().mjava","commits":[{"id":"9b31138e7b06f84b96de212b2102103cb629ee68","date":1272962032,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#testBufferOverflow().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/HTMLStripCharFilterTest#testBufferOverflow().mjava","sourceNew":"  public void testBufferOverflow() throws Exception {\n    StringBuilder testBuilder = new StringBuilder(HTMLStripCharFilter.DEFAULT_READ_AHEAD + 50);\n    testBuilder.append(\"ah<?> \");\n    appendChars(testBuilder, HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    processBuffer(testBuilder.toString(), \"Failed on pseudo proc. instr.\");//processing instructions\n\n    testBuilder.setLength(0);\n    testBuilder.append(\"<!--\");//comments\n    appendChars(testBuilder, 3*HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);//comments have two lookaheads\n\n    testBuilder.append(\"-->foo\");\n    processBuffer(testBuilder.toString(), \"Failed w/ comment\");\n\n    testBuilder.setLength(0);\n    testBuilder.append(\"<?\");\n    appendChars(testBuilder, HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    testBuilder.append(\"?>\");\n    processBuffer(testBuilder.toString(), \"Failed with proc. instr.\");\n    \n    testBuilder.setLength(0);\n    testBuilder.append(\"<b \");\n    appendChars(testBuilder, HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    testBuilder.append(\"/>\");\n    processBuffer(testBuilder.toString(), \"Failed on tag\");\n\n  }\n\n","sourceOld":"  public void testBufferOverflow() throws Exception {\n    StringBuilder testBuilder = new StringBuilder(HTMLStripCharFilter.DEFAULT_READ_AHEAD + 50);\n    testBuilder.append(\"ah<?> \");\n    appendChars(testBuilder, HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    processBuffer(testBuilder.toString(), \"Failed on pseudo proc. instr.\");//processing instructions\n\n    testBuilder.setLength(0);\n    testBuilder.append(\"<!--\");//comments\n    appendChars(testBuilder, 3*HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);//comments have two lookaheads\n\n    testBuilder.append(\"-->foo\");\n    processBuffer(testBuilder.toString(), \"Failed w/ comment\");\n\n    testBuilder.setLength(0);\n    testBuilder.append(\"<?\");\n    appendChars(testBuilder, HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    testBuilder.append(\"?>\");\n    processBuffer(testBuilder.toString(), \"Failed with proc. instr.\");\n    \n    testBuilder.setLength(0);\n    testBuilder.append(\"<b \");\n    appendChars(testBuilder, HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    testBuilder.append(\"/>\");\n    processBuffer(testBuilder.toString(), \"Failed on tag\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#testBufferOverflow().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/charfilter/HTMLStripCharFilterTest#testBufferOverflow().mjava","sourceNew":"  public void testBufferOverflow() throws Exception {\n    StringBuilder testBuilder = new StringBuilder(HTMLStripCharFilter.DEFAULT_READ_AHEAD + 50);\n    testBuilder.append(\"ah<?> \");\n    appendChars(testBuilder, HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    processBuffer(testBuilder.toString(), \"Failed on pseudo proc. instr.\");//processing instructions\n\n    testBuilder.setLength(0);\n    testBuilder.append(\"<!--\");//comments\n    appendChars(testBuilder, 3*HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);//comments have two lookaheads\n\n    testBuilder.append(\"-->foo\");\n    processBuffer(testBuilder.toString(), \"Failed w/ comment\");\n\n    testBuilder.setLength(0);\n    testBuilder.append(\"<?\");\n    appendChars(testBuilder, HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    testBuilder.append(\"?>\");\n    processBuffer(testBuilder.toString(), \"Failed with proc. instr.\");\n    \n    testBuilder.setLength(0);\n    testBuilder.append(\"<b \");\n    appendChars(testBuilder, HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    testBuilder.append(\"/>\");\n    processBuffer(testBuilder.toString(), \"Failed on tag\");\n\n  }\n\n","sourceOld":"  public void testBufferOverflow() throws Exception {\n    StringBuilder testBuilder = new StringBuilder(HTMLStripCharFilter.DEFAULT_READ_AHEAD + 50);\n    testBuilder.append(\"ah<?> \");\n    appendChars(testBuilder, HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    processBuffer(testBuilder.toString(), \"Failed on pseudo proc. instr.\");//processing instructions\n\n    testBuilder.setLength(0);\n    testBuilder.append(\"<!--\");//comments\n    appendChars(testBuilder, 3*HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);//comments have two lookaheads\n\n    testBuilder.append(\"-->foo\");\n    processBuffer(testBuilder.toString(), \"Failed w/ comment\");\n\n    testBuilder.setLength(0);\n    testBuilder.append(\"<?\");\n    appendChars(testBuilder, HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    testBuilder.append(\"?>\");\n    processBuffer(testBuilder.toString(), \"Failed with proc. instr.\");\n    \n    testBuilder.setLength(0);\n    testBuilder.append(\"<b \");\n    appendChars(testBuilder, HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    testBuilder.append(\"/>\");\n    processBuffer(testBuilder.toString(), \"Failed on tag\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"9b31138e7b06f84b96de212b2102103cb629ee68":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9b31138e7b06f84b96de212b2102103cb629ee68"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"]},"commit2Childs":{"9b31138e7b06f84b96de212b2102103cb629ee68":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9b31138e7b06f84b96de212b2102103cb629ee68"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}