{"path":"contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#testMany().mjava","commits":[{"id":"50e7972fe4865715af8951d4ba15555e3426fc5d","date":1115024647,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#testMany().mjava","pathOld":"/dev/null","sourceNew":"\tpublic void testMany() throws Throwable {\n\t\tString[] files = listFiles(new String[] {\n\t\t\t\"*.txt\", \"*.html\", \"*.xml\", \"xdocs/*.xml\", \n\t\t\t\"src/java/test/org/apache/lucene/queryParser/*.java\",\n\t\t\t\"src/java/org/apache/lucene/index/memory/*.java\",\n\t\t});\n\t\tSystem.out.println(\"files = \" + java.util.Arrays.asList(files));\n\t\tString[] xargs = new String[] {\n\t\t\t\"1\", \"1\", \"memram\", \n\t\t\t\"@src/test/org/apache/lucene/index/memory/testqueries.txt\",\n\t\t};\n\t\tString[] args = new String[xargs.length + files.length];\n\t\tSystem.arraycopy(xargs, 0, args, 0, xargs.length);\n\t\tSystem.arraycopy(files, 0, args, xargs.length, files.length);\n\t\trun(args);\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f68e24227d5556d33ee6d586fd9010cd9ff8bec","date":1150091176,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#testMany().mjava","pathOld":"contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#testMany().mjava","sourceNew":"  public void testMany() throws Throwable {\n    String[] files = listFiles(new String[] {\n      \"*.txt\", \"*.html\", \"*.xml\", \"xdocs/*.xml\", \n      \"src/java/test/org/apache/lucene/queryParser/*.java\",\n      \"src/java/org/apache/lucene/index/memory/*.java\",\n    });\n    System.out.println(\"files = \" + java.util.Arrays.asList(files));\n    String[] xargs = new String[] {\n      \"1\", \"1\", \"memram\", \n      \"@src/test/org/apache/lucene/index/memory/testqueries.txt\",\n    };\n    String[] args = new String[xargs.length + files.length];\n    System.arraycopy(xargs, 0, args, 0, xargs.length);\n    System.arraycopy(files, 0, args, xargs.length, files.length);\n    run(args);\n  }\n\n","sourceOld":"\tpublic void testMany() throws Throwable {\n\t\tString[] files = listFiles(new String[] {\n\t\t\t\"*.txt\", \"*.html\", \"*.xml\", \"xdocs/*.xml\", \n\t\t\t\"src/java/test/org/apache/lucene/queryParser/*.java\",\n\t\t\t\"src/java/org/apache/lucene/index/memory/*.java\",\n\t\t});\n\t\tSystem.out.println(\"files = \" + java.util.Arrays.asList(files));\n\t\tString[] xargs = new String[] {\n\t\t\t\"1\", \"1\", \"memram\", \n\t\t\t\"@src/test/org/apache/lucene/index/memory/testqueries.txt\",\n\t\t};\n\t\tString[] args = new String[xargs.length + files.length];\n\t\tSystem.arraycopy(xargs, 0, args, 0, xargs.length);\n\t\tSystem.arraycopy(files, 0, args, xargs.length, files.length);\n\t\trun(args);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43034241652edbe337a2a852ee9127b3b222c2e9","date":1180509509,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#testMany().mjava","pathOld":"contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#testMany().mjava","sourceNew":"  public void testMany() throws Throwable {\n    String[] files = listFiles(new String[] {\n      \"*.txt\", \"*.html\", \"*.xml\", \"xdocs/*.xml\", \n      \"src/java/test/org/apache/lucene/queryParser/*.java\",\n      \"contrib/memory/src/java/org/apache/lucene/index/memory/*.java\",\n    });\n    System.out.println(\"files = \" + java.util.Arrays.asList(files));\n    String[] xargs = new String[] {\n      \"1\", \"1\", \"memram\", \n      \"@contrib/memory/src/test/org/apache/lucene/index/memory/testqueries.txt\",\n    };\n    String[] args = new String[xargs.length + files.length];\n    System.arraycopy(xargs, 0, args, 0, xargs.length);\n    System.arraycopy(files, 0, args, xargs.length, files.length);\n    run(args);\n  }\n\n","sourceOld":"  public void testMany() throws Throwable {\n    String[] files = listFiles(new String[] {\n      \"*.txt\", \"*.html\", \"*.xml\", \"xdocs/*.xml\", \n      \"src/java/test/org/apache/lucene/queryParser/*.java\",\n      \"src/java/org/apache/lucene/index/memory/*.java\",\n    });\n    System.out.println(\"files = \" + java.util.Arrays.asList(files));\n    String[] xargs = new String[] {\n      \"1\", \"1\", \"memram\", \n      \"@src/test/org/apache/lucene/index/memory/testqueries.txt\",\n    };\n    String[] args = new String[xargs.length + files.length];\n    System.arraycopy(xargs, 0, args, 0, xargs.length);\n    System.arraycopy(files, 0, args, xargs.length, files.length);\n    run(args);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42607aa380c892dc1ec0ab26e86a575c28e13618","date":1268641604,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#testMany().mjava","pathOld":"contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#testMany().mjava","sourceNew":"  public void testMany() throws Throwable {\n    String[] files = listFiles(new String[] {\n      \"*.txt\", \"*.html\", \"*.xml\", \"xdocs/*.xml\", \n      \"src/java/test/org/apache/lucene/queryParser/*.java\",\n      \"contrib/memory/src/java/org/apache/lucene/index/memory/*.java\",\n    });\n    if (VERBOSE) System.out.println(\"files = \" + java.util.Arrays.asList(files));\n    String[] xargs = new String[] {\n      \"1\", \"1\", \"memram\", \n      \"@contrib/memory/src/test/org/apache/lucene/index/memory/testqueries.txt\",\n    };\n    String[] args = new String[xargs.length + files.length];\n    System.arraycopy(xargs, 0, args, 0, xargs.length);\n    System.arraycopy(files, 0, args, xargs.length, files.length);\n    run(args);\n  }\n\n","sourceOld":"  public void testMany() throws Throwable {\n    String[] files = listFiles(new String[] {\n      \"*.txt\", \"*.html\", \"*.xml\", \"xdocs/*.xml\", \n      \"src/java/test/org/apache/lucene/queryParser/*.java\",\n      \"contrib/memory/src/java/org/apache/lucene/index/memory/*.java\",\n    });\n    System.out.println(\"files = \" + java.util.Arrays.asList(files));\n    String[] xargs = new String[] {\n      \"1\", \"1\", \"memram\", \n      \"@contrib/memory/src/test/org/apache/lucene/index/memory/testqueries.txt\",\n    };\n    String[] args = new String[xargs.length + files.length];\n    System.arraycopy(xargs, 0, args, 0, xargs.length);\n    System.arraycopy(files, 0, args, xargs.length, files.length);\n    run(args);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#testMany().mjava","pathOld":"contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#testMany().mjava","sourceNew":"  public void testMany() throws Throwable {\n    String[] files = listFiles(new String[] {\n      \"*.txt\", \"*.html\", \"*.xml\", \"xdocs/*.xml\", \n      \"src/java/test/org/apache/lucene/queryParser/*.java\",\n      \"contrib/memory/src/java/org/apache/lucene/index/memory/*.java\",\n    });\n    if (VERBOSE) System.out.println(\"files = \" + java.util.Arrays.asList(files));\n    String[] xargs = new String[] {\n      \"1\", \"1\", \"memram\", \n      \"@contrib/memory/src/test/org/apache/lucene/index/memory/testqueries.txt\",\n    };\n    String[] args = new String[xargs.length + files.length];\n    System.arraycopy(xargs, 0, args, 0, xargs.length);\n    System.arraycopy(files, 0, args, xargs.length, files.length);\n    run(args);\n  }\n\n","sourceOld":"  public void testMany() throws Throwable {\n    String[] files = listFiles(new String[] {\n      \"*.txt\", \"*.html\", \"*.xml\", \"xdocs/*.xml\", \n      \"src/java/test/org/apache/lucene/queryParser/*.java\",\n      \"contrib/memory/src/java/org/apache/lucene/index/memory/*.java\",\n    });\n    if (VERBOSE) System.out.println(\"files = \" + java.util.Arrays.asList(files));\n    String[] xargs = new String[] {\n      \"1\", \"1\", \"memram\", \n      \"@contrib/memory/src/test/org/apache/lucene/index/memory/testqueries.txt\",\n    };\n    String[] args = new String[xargs.length + files.length];\n    System.arraycopy(xargs, 0, args, 0, xargs.length);\n    System.arraycopy(files, 0, args, xargs.length, files.length);\n    run(args);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"43034241652edbe337a2a852ee9127b3b222c2e9":["7f68e24227d5556d33ee6d586fd9010cd9ff8bec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7f68e24227d5556d33ee6d586fd9010cd9ff8bec":["50e7972fe4865715af8951d4ba15555e3426fc5d"],"50e7972fe4865715af8951d4ba15555e3426fc5d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"42607aa380c892dc1ec0ab26e86a575c28e13618":["43034241652edbe337a2a852ee9127b3b222c2e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["42607aa380c892dc1ec0ab26e86a575c28e13618"]},"commit2Childs":{"43034241652edbe337a2a852ee9127b3b222c2e9":["42607aa380c892dc1ec0ab26e86a575c28e13618"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["50e7972fe4865715af8951d4ba15555e3426fc5d"],"7f68e24227d5556d33ee6d586fd9010cd9ff8bec":["43034241652edbe337a2a852ee9127b3b222c2e9"],"50e7972fe4865715af8951d4ba15555e3426fc5d":["7f68e24227d5556d33ee6d586fd9010cd9ff8bec"],"42607aa380c892dc1ec0ab26e86a575c28e13618":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}