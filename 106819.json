{"path":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.CacheTest#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"15f9a498a407241cefcbd00ca7fc84d5e7fa573e","date":1470840868,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.CacheTest#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n      super.handleRequestBody(req, rsp);\n      String[] caches = req.getParams().getParams(\"cacheNames\");\n      if(caches != null && caches.length>0){\n        HashMap m = new HashMap();\n        rsp.add(\"caches\", m);\n        for (String c : caches) {\n          SolrCache cache = req.getSearcher().getCache(c);\n          if(cache != null) m.put(c, cache.getClass().getName());\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.CacheTest#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n      super.handleRequestBody(req, rsp);\n      String[] caches = req.getParams().getParams(\"cacheNames\");\n      if(caches != null && caches.length>0){\n        HashMap m = new HashMap();\n        rsp.add(\"caches\", m);\n        for (String c : caches) {\n          SolrCache cache = req.getSearcher().getCache(c);\n          if(cache != null) m.put(c, cache.getClass().getName());\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.CacheTest#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n      super.handleRequestBody(req, rsp);\n      String[] caches = req.getParams().getParams(\"cacheNames\");\n      if(caches != null && caches.length>0){\n        HashMap m = new HashMap();\n        rsp.add(\"caches\", m);\n        for (String c : caches) {\n          SolrCache cache = req.getSearcher().getCache(c);\n          if(cache != null) m.put(c, cache.getClass().getName());\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.CacheTest#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n      super.handleRequestBody(req, rsp);\n      String[] caches = req.getParams().getParams(\"cacheNames\");\n      if(caches != null && caches.length>0){\n        HashMap m = new HashMap();\n        rsp.add(\"caches\", m);\n        for (String c : caches) {\n          SolrCache cache = req.getSearcher().getCache(c);\n          if(cache != null) m.put(c, cache.getClass().getName());\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"053c4cbd30d228154839dc536ca5a15a5f0c48bf","date":1564559417,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.CacheTest#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.CacheTest#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"    @Override\n    public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n      super.handleRequestBody(req, rsp);\n      String[] caches = req.getParams().getParams(\"cacheNames\");\n      if(caches != null && caches.length>0){\n        HashMap m = new HashMap();\n        rsp.add(\"caches\", m);\n        for (String c : caches) {\n          SolrCacheHolder cache = (SolrCacheHolder) req.getSearcher().getCache(c);\n          if(cache != null) m.put(c, cache.get().getClass().getName());\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n      super.handleRequestBody(req, rsp);\n      String[] caches = req.getParams().getParams(\"cacheNames\");\n      if(caches != null && caches.length>0){\n        HashMap m = new HashMap();\n        rsp.add(\"caches\", m);\n        for (String c : caches) {\n          SolrCache cache = req.getSearcher().getCache(c);\n          if(cache != null) m.put(c, cache.getClass().getName());\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.CacheTest#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.CacheTest#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"    @Override\n    public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n      super.handleRequestBody(req, rsp);\n      String[] caches = req.getParams().getParams(\"cacheNames\");\n      if(caches != null && caches.length>0){\n        HashMap m = new HashMap();\n        rsp.add(\"caches\", m);\n        for (String c : caches) {\n          SolrCacheHolder cache = (SolrCacheHolder) req.getSearcher().getCache(c);\n          if(cache != null) m.put(c, cache.get().getClass().getName());\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n      super.handleRequestBody(req, rsp);\n      String[] caches = req.getParams().getParams(\"cacheNames\");\n      if(caches != null && caches.length>0){\n        HashMap m = new HashMap();\n        rsp.add(\"caches\", m);\n        for (String c : caches) {\n          SolrCache cache = req.getSearcher().getCache(c);\n          if(cache != null) m.put(c, cache.getClass().getName());\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.CacheTest#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.CacheTest#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"    @Override\n    public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n      super.handleRequestBody(req, rsp);\n      String[] caches = req.getParams().getParams(\"cacheNames\");\n      if(caches != null && caches.length>0){\n        HashMap m = new HashMap();\n        rsp.add(\"caches\", m);\n        for (String c : caches) {\n          SolrCache cache = req.getSearcher().getCache(c);\n          if(cache != null) m.put(c, cache.getClass().getName());\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n      super.handleRequestBody(req, rsp);\n      String[] caches = req.getParams().getParams(\"cacheNames\");\n      if(caches != null && caches.length>0){\n        HashMap m = new HashMap();\n        rsp.add(\"caches\", m);\n        for (String c : caches) {\n          SolrCacheHolder cache = (SolrCacheHolder) req.getSearcher().getCache(c);\n          if(cache != null) m.put(c, cache.get().getClass().getName());\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.CacheTest#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.CacheTest#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"    @Override\n    public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n      super.handleRequestBody(req, rsp);\n      String[] caches = req.getParams().getParams(\"cacheNames\");\n      if(caches != null && caches.length>0){\n        HashMap m = new HashMap();\n        rsp.add(\"caches\", m);\n        for (String c : caches) {\n          SolrCache cache = req.getSearcher().getCache(c);\n          if(cache != null) m.put(c, cache.getClass().getName());\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n      super.handleRequestBody(req, rsp);\n      String[] caches = req.getParams().getParams(\"cacheNames\");\n      if(caches != null && caches.length>0){\n        HashMap m = new HashMap();\n        rsp.add(\"caches\", m);\n        for (String c : caches) {\n          SolrCacheHolder cache = (SolrCacheHolder) req.getSearcher().getCache(c);\n          if(cache != null) m.put(c, cache.get().getClass().getName());\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.CacheTest#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrConfigHandler.CacheTest#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"    @Override\n    @SuppressWarnings({\"unchecked\"})\n    public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n      super.handleRequestBody(req, rsp);\n      String[] caches = req.getParams().getParams(\"cacheNames\");\n      if(caches != null && caches.length>0){\n        @SuppressWarnings({\"rawtypes\"})\n        HashMap m = new HashMap();\n        rsp.add(\"caches\", m);\n        for (String c : caches) {\n          @SuppressWarnings({\"rawtypes\"})\n          SolrCache cache = req.getSearcher().getCache(c);\n          if(cache != null) m.put(c, cache.getClass().getName());\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws IOException {\n      super.handleRequestBody(req, rsp);\n      String[] caches = req.getParams().getParams(\"cacheNames\");\n      if(caches != null && caches.length>0){\n        HashMap m = new HashMap();\n        rsp.add(\"caches\", m);\n        for (String c : caches) {\n          SolrCache cache = req.getSearcher().getCache(c);\n          if(cache != null) m.put(c, cache.getClass().getName());\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"15f9a498a407241cefcbd00ca7fc84d5e7fa573e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"053c4cbd30d228154839dc536ca5a15a5f0c48bf":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c44cc06c26e456fe9c215072b79fce30babe3975":["053c4cbd30d228154839dc536ca5a15a5f0c48bf"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","15f9a498a407241cefcbd00ca7fc84d5e7fa573e"],"f8061ddd97f3352007d927dae445884a6f3d857b":["403d05f7f8d69b65659157eff1bc1d2717f04c66","053c4cbd30d228154839dc536ca5a15a5f0c48bf"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["c44cc06c26e456fe9c215072b79fce30babe3975"],"b0b597c65628ca9e73913a07e81691f8229bae35":["053c4cbd30d228154839dc536ca5a15a5f0c48bf","c44cc06c26e456fe9c215072b79fce30babe3975"]},"commit2Childs":{"15f9a498a407241cefcbd00ca7fc84d5e7fa573e":["3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["053c4cbd30d228154839dc536ca5a15a5f0c48bf","f8061ddd97f3352007d927dae445884a6f3d857b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"053c4cbd30d228154839dc536ca5a15a5f0c48bf":["c44cc06c26e456fe9c215072b79fce30babe3975","f8061ddd97f3352007d927dae445884a6f3d857b","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["15f9a498a407241cefcbd00ca7fc84d5e7fa573e","403d05f7f8d69b65659157eff1bc1d2717f04c66","3b013574eedcdbac35dc7e35b0ee616ffc38895d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"c44cc06c26e456fe9c215072b79fce30babe3975":["e98520789adb1d5ad05afb4956eca0944a929688","b0b597c65628ca9e73913a07e81691f8229bae35"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}