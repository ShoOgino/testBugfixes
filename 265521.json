{"path":"lucene/analysis/stempel/src/test/org/apache/lucene/analysis/stempel/ResourceAsStreamResourceLoader#getLines(String).mjava","commits":[{"id":"72cd13950cb77f98f9b5fe46dd0906a1d6902238","date":1343110129,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/stempel/src/test/org/apache/lucene/analysis/stempel/ResourceAsStreamResourceLoader#getLines(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public List<String> getLines(String resource) throws IOException {\n    BufferedReader input = null;\n    ArrayList<String> lines;\n    try {\n      input = new BufferedReader(new InputStreamReader(openResource(resource),\n          IOUtils.CHARSET_UTF_8.newDecoder()\n          .onMalformedInput(CodingErrorAction.REPORT)\n          .onUnmappableCharacter(CodingErrorAction.REPORT)));\n\n      lines = new ArrayList<String>();\n      for (String word=null; (word=input.readLine())!=null;) {\n        // skip initial bom marker\n        if (lines.isEmpty() && word.length() > 0 && word.charAt(0) == '\\uFEFF')\n          word = word.substring(1);\n        // skip comments\n        if (word.startsWith(\"#\")) continue;\n        word=word.trim();\n        // skip blank lines\n        if (word.length()==0) continue;\n        lines.add(word);\n      }\n    } catch (CharacterCodingException ex) {\n      throw new RuntimeException(\"Error loading resource (wrong encoding?): \" + resource, ex);\n    } finally {\n      if (input != null)\n        input.close();\n    }\n    return lines;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/stempel/src/test/org/apache/lucene/analysis/stempel/ResourceAsStreamResourceLoader#getLines(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public List<String> getLines(String resource) throws IOException {\n    BufferedReader input = null;\n    ArrayList<String> lines;\n    try {\n      input = new BufferedReader(new InputStreamReader(openResource(resource),\n          IOUtils.CHARSET_UTF_8.newDecoder()\n          .onMalformedInput(CodingErrorAction.REPORT)\n          .onUnmappableCharacter(CodingErrorAction.REPORT)));\n\n      lines = new ArrayList<String>();\n      for (String word=null; (word=input.readLine())!=null;) {\n        // skip initial bom marker\n        if (lines.isEmpty() && word.length() > 0 && word.charAt(0) == '\\uFEFF')\n          word = word.substring(1);\n        // skip comments\n        if (word.startsWith(\"#\")) continue;\n        word=word.trim();\n        // skip blank lines\n        if (word.length()==0) continue;\n        lines.add(word);\n      }\n    } catch (CharacterCodingException ex) {\n      throw new RuntimeException(\"Error loading resource (wrong encoding?): \" + resource, ex);\n    } finally {\n      if (input != null)\n        input.close();\n    }\n    return lines;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de6b1e414481e1c25c32f310b02a6d192f7f9faa","date":1343310208,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/stempel/src/test/org/apache/lucene/analysis/stempel/ResourceAsStreamResourceLoader#getLines(String).mjava","sourceNew":null,"sourceOld":"  @Override\n  public List<String> getLines(String resource) throws IOException {\n    BufferedReader input = null;\n    ArrayList<String> lines;\n    try {\n      input = new BufferedReader(new InputStreamReader(openResource(resource),\n          IOUtils.CHARSET_UTF_8.newDecoder()\n          .onMalformedInput(CodingErrorAction.REPORT)\n          .onUnmappableCharacter(CodingErrorAction.REPORT)));\n\n      lines = new ArrayList<String>();\n      for (String word=null; (word=input.readLine())!=null;) {\n        // skip initial bom marker\n        if (lines.isEmpty() && word.length() > 0 && word.charAt(0) == '\\uFEFF')\n          word = word.substring(1);\n        // skip comments\n        if (word.startsWith(\"#\")) continue;\n        word=word.trim();\n        // skip blank lines\n        if (word.length()==0) continue;\n        lines.add(word);\n      }\n    } catch (CharacterCodingException ex) {\n      throw new RuntimeException(\"Error loading resource (wrong encoding?): \" + resource, ex);\n    } finally {\n      if (input != null)\n        input.close();\n    }\n    return lines;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"72cd13950cb77f98f9b5fe46dd0906a1d6902238":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"de6b1e414481e1c25c32f310b02a6d192f7f9faa":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","72cd13950cb77f98f9b5fe46dd0906a1d6902238"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["de6b1e414481e1c25c32f310b02a6d192f7f9faa"]},"commit2Childs":{"72cd13950cb77f98f9b5fe46dd0906a1d6902238":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["72cd13950cb77f98f9b5fe46dd0906a1d6902238","5a1a22b1ad88b436661458df567f3fdb446392a4"],"de6b1e414481e1c25c32f310b02a6d192f7f9faa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["de6b1e414481e1c25c32f310b02a6d192f7f9faa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}