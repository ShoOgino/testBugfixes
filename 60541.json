{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat.RAMPostingsWriterImpl#addPosition(int,BytesRef,int,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat.RAMPostingsWriterImpl#addPosition(int,BytesRef,int,int).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat.RAMPostingsWriterImpl#addPosition(int,BytesRef,int,int).mjava","sourceNew":"    @Override\n    public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) {\n      assert startOffset == -1;\n      assert endOffset == -1;\n      current.positions[posUpto] = position;\n      if (payload != null && payload.length > 0) {\n        if (current.payloads == null) {\n          current.payloads = new byte[current.positions.length][];\n        }\n        byte[] bytes = current.payloads[posUpto] = new byte[payload.length];\n        System.arraycopy(payload.bytes, payload.offset, bytes, 0, payload.length);\n      }\n      posUpto++;\n    }\n\n","sourceOld":"    @Override\n    public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) {\n      assert startOffset == -1;\n      assert endOffset == -1;\n      current.positions[posUpto] = position;\n      if (payload != null && payload.length > 0) {\n        if (current.payloads == null) {\n          current.payloads = new byte[current.positions.length][];\n        }\n        byte[] bytes = current.payloads[posUpto] = new byte[payload.length];\n        System.arraycopy(payload.bytes, payload.offset, bytes, 0, payload.length);\n      }\n      posUpto++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa80a35d7c4b2b1e83082b275e3e8328ab93db52","date":1381766157,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat.RAMPostingsWriterImpl#addPosition(int,BytesRef,int,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/ramonly/RAMOnlyPostingsFormat.RAMPostingsWriterImpl#addPosition(int,BytesRef,int,int).mjava","sourceNew":"    public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) {\n      assert startOffset == -1;\n      assert endOffset == -1;\n      current.positions[posUpto] = position;\n      if (payload != null && payload.length > 0) {\n        if (current.payloads == null) {\n          current.payloads = new byte[current.positions.length][];\n        }\n        byte[] bytes = current.payloads[posUpto] = new byte[payload.length];\n        System.arraycopy(payload.bytes, payload.offset, bytes, 0, payload.length);\n      }\n      posUpto++;\n    }\n\n","sourceOld":"    @Override\n    public void addPosition(int position, BytesRef payload, int startOffset, int endOffset) {\n      assert startOffset == -1;\n      assert endOffset == -1;\n      current.positions[posUpto] = position;\n      if (payload != null && payload.length > 0) {\n        if (current.payloads == null) {\n          current.payloads = new byte[current.positions.length][];\n        }\n        byte[] bytes = current.payloads[posUpto] = new byte[payload.length];\n        System.arraycopy(payload.bytes, payload.offset, bytes, 0, payload.length);\n      }\n      posUpto++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa80a35d7c4b2b1e83082b275e3e8328ab93db52":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"fa80a35d7c4b2b1e83082b275e3e8328ab93db52":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}