{"path":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsStringFieldAlwaysMissing().mjava","commits":[{"id":"8c082d9f687a1fe8a543c5a6f092bc9be9dbff4a","date":1330094200,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsStringFieldAlwaysMissing().mjava","pathOld":"/dev/null","sourceNew":"  public void testFieldStatisticsResultsStringFieldAlwaysMissing() throws Exception {\n    SolrCore core = h.getCore();\n    assertU(adoc(\"id\", \"1\"));\n    assertU(adoc(\"id\", \"2\"));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_s\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test string statistics values\", req,\n        \"//null[@name='active_s'][.='']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsStringFieldAlwaysMissing().mjava","pathOld":"/dev/null","sourceNew":"  public void testFieldStatisticsResultsStringFieldAlwaysMissing() throws Exception {\n    SolrCore core = h.getCore();\n    assertU(adoc(\"id\", \"1\"));\n    assertU(adoc(\"id\", \"2\"));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_s\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test string statistics values\", req,\n        \"//null[@name='active_s'][.='']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73bb5a57dc75b54a39494f99986599cae7dff417","date":1361040620,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsStringFieldAlwaysMissing().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsStringFieldAlwaysMissing().mjava","sourceNew":"  public void testFieldStatisticsResultsStringFieldAlwaysMissing() throws Exception {\n    SolrCore core = h.getCore();\n    assertU(adoc(\"id\", \"1\"));\n    assertU(adoc(\"id\", \"2\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_s\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test string statistics values\", req,\n        \"//null[@name='active_s'][.='']\");\n  }\n\n","sourceOld":"  public void testFieldStatisticsResultsStringFieldAlwaysMissing() throws Exception {\n    SolrCore core = h.getCore();\n    assertU(adoc(\"id\", \"1\"));\n    assertU(adoc(\"id\", \"2\"));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_s\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test string statistics values\", req,\n        \"//null[@name='active_s'][.='']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95303ff3749680c743b9425f9cf99e6e4065e8a8","date":1361061922,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsStringFieldAlwaysMissing().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsStringFieldAlwaysMissing().mjava","sourceNew":"  public void testFieldStatisticsResultsStringFieldAlwaysMissing() throws Exception {\n    SolrCore core = h.getCore();\n    assertU(adoc(\"id\", \"1\"));\n    assertU(adoc(\"id\", \"2\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_s\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test string statistics values\", req,\n        \"//null[@name='active_s'][.='']\");\n  }\n\n","sourceOld":"  public void testFieldStatisticsResultsStringFieldAlwaysMissing() throws Exception {\n    SolrCore core = h.getCore();\n    assertU(adoc(\"id\", \"1\"));\n    assertU(adoc(\"id\", \"2\"));\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_s\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test string statistics values\", req,\n        \"//null[@name='active_s'][.='']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsStringFieldAlwaysMissing().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsStringFieldAlwaysMissing().mjava","sourceNew":"  public void testFieldStatisticsResultsStringFieldAlwaysMissing() throws Exception {\n    SolrCore core = h.getCore();\n    assertU(adoc(\"id\", \"1\"));\n    assertU(adoc(\"id\", \"2\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_s\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test string statistics values\", req,\n        \"//null[@name='active_s'][.='']\");\n  }\n\n","sourceOld":"  public void testFieldStatisticsResultsStringFieldAlwaysMissing() throws Exception {\n    SolrCore core = h.getCore();\n    assertU(adoc(\"id\", \"1\"));\n    assertU(adoc(\"id\", \"2\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<String, String>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_s\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test string statistics values\", req,\n        \"//null[@name='active_s'][.='']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d12bbc45d641864ffe03291bc30f178eb34e434c","date":1426001646,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsStringFieldAlwaysMissing().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsStringFieldAlwaysMissing().mjava","sourceNew":"  public void testFieldStatisticsResultsStringFieldAlwaysMissing() throws Exception {\n    SolrCore core = h.getCore();\n    assertU(adoc(\"id\", \"1\"));\n    assertU(adoc(\"id\", \"2\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_s\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test string statistics values\", req\n            ,\"//lst[@name='active_s']/long[@name='count'][.='0']\"\n            ,\"//lst[@name='active_s']/long[@name='missing'][.='4']\"\n\n            ,\"//lst[@name='active_s']/null[@name='min']\"\n            ,\"//lst[@name='active_s']/null[@name='max']\"\n            // if new stats are supported, this will break - update test to assert values for each\n            ,\"count(//lst[@name='active_s']/*)=4\"\n         );\n  }\n\n","sourceOld":"  public void testFieldStatisticsResultsStringFieldAlwaysMissing() throws Exception {\n    SolrCore core = h.getCore();\n    assertU(adoc(\"id\", \"1\"));\n    assertU(adoc(\"id\", \"2\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_s\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test string statistics values\", req,\n        \"//null[@name='active_s'][.='']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsStringFieldAlwaysMissing().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsStringFieldAlwaysMissing().mjava","sourceNew":"  public void testFieldStatisticsResultsStringFieldAlwaysMissing() throws Exception {\n    SolrCore core = h.getCore();\n    assertU(adoc(\"id\", \"1\"));\n    assertU(adoc(\"id\", \"2\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_s\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test string statistics values\", req\n            ,\"//lst[@name='active_s']/long[@name='count'][.='0']\"\n            ,\"//lst[@name='active_s']/long[@name='missing'][.='4']\"\n\n            ,\"//lst[@name='active_s']/null[@name='min']\"\n            ,\"//lst[@name='active_s']/null[@name='max']\"\n            // if new stats are supported, this will break - update test to assert values for each\n            ,\"count(//lst[@name='active_s']/*)=4\"\n         );\n  }\n\n","sourceOld":"  public void testFieldStatisticsResultsStringFieldAlwaysMissing() throws Exception {\n    SolrCore core = h.getCore();\n    assertU(adoc(\"id\", \"1\"));\n    assertU(adoc(\"id\", \"2\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_s\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test string statistics values\", req,\n        \"//null[@name='active_s'][.='']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a4e2c829188fb99886a64558664d79c9ac0fdf1","date":1431021538,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsStringFieldAlwaysMissing().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testFieldStatisticsResultsStringFieldAlwaysMissing().mjava","sourceNew":"  public void testFieldStatisticsResultsStringFieldAlwaysMissing() throws Exception {\n    SolrCore core = h.getCore();\n    assertU(adoc(\"id\", \"1\"));\n    assertU(adoc(\"id\", \"2\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_s\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test string statistics values\", req\n            ,\"//lst[@name='active_s']/long[@name='count'][.='0']\"\n            ,\"//lst[@name='active_s']/long[@name='missing'][.='4']\"\n\n            ,\"//lst[@name='active_s']/null[@name='min']\"\n            ,\"//lst[@name='active_s']/null[@name='max']\"\n            // if new stats are supported, this will break - update test to assert values for each\n            ,\"count(//lst[@name='active_s']/*)=4\"\n            );\n\n    assertQ(\"test string statistics values\"\n            , req(\"q\", \"*:*\", \"stats\", \"true\", \"stats.field\", \"{!cardinality=true}active_s\")\n            ,\"//lst[@name='active_s']/long[@name='cardinality'][.='0']\"\n            );\n\n  }\n\n","sourceOld":"  public void testFieldStatisticsResultsStringFieldAlwaysMissing() throws Exception {\n    SolrCore core = h.getCore();\n    assertU(adoc(\"id\", \"1\"));\n    assertU(adoc(\"id\", \"2\"));\n    assertU(commit());\n    assertU(adoc(\"id\", \"3\"));\n    assertU(adoc(\"id\", \"4\"));\n    assertU(commit());\n\n    Map<String, String> args = new HashMap<>();\n    args.put(CommonParams.Q, \"*:*\");\n    args.put(StatsParams.STATS, \"true\");\n    args.put(StatsParams.STATS_FIELD, \"active_s\");\n    args.put(\"indent\", \"true\");\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new MapSolrParams(args));\n\n    assertQ(\"test string statistics values\", req\n            ,\"//lst[@name='active_s']/long[@name='count'][.='0']\"\n            ,\"//lst[@name='active_s']/long[@name='missing'][.='4']\"\n\n            ,\"//lst[@name='active_s']/null[@name='min']\"\n            ,\"//lst[@name='active_s']/null[@name='max']\"\n            // if new stats are supported, this will break - update test to assert values for each\n            ,\"count(//lst[@name='active_s']/*)=4\"\n         );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["73bb5a57dc75b54a39494f99986599cae7dff417"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","d12bbc45d641864ffe03291bc30f178eb34e434c"],"4a4e2c829188fb99886a64558664d79c9ac0fdf1":["d12bbc45d641864ffe03291bc30f178eb34e434c"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":["8c082d9f687a1fe8a543c5a6f092bc9be9dbff4a","73bb5a57dc75b54a39494f99986599cae7dff417"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8c082d9f687a1fe8a543c5a6f092bc9be9dbff4a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8c082d9f687a1fe8a543c5a6f092bc9be9dbff4a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d12bbc45d641864ffe03291bc30f178eb34e434c":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a4e2c829188fb99886a64558664d79c9ac0fdf1"],"73bb5a57dc75b54a39494f99986599cae7dff417":["8c082d9f687a1fe8a543c5a6f092bc9be9dbff4a"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","d12bbc45d641864ffe03291bc30f178eb34e434c"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"4a4e2c829188fb99886a64558664d79c9ac0fdf1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":[],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","8c082d9f687a1fe8a543c5a6f092bc9be9dbff4a"],"8c082d9f687a1fe8a543c5a6f092bc9be9dbff4a":["95303ff3749680c743b9425f9cf99e6e4065e8a8","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","73bb5a57dc75b54a39494f99986599cae7dff417"],"d12bbc45d641864ffe03291bc30f178eb34e434c":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","4a4e2c829188fb99886a64558664d79c9ac0fdf1"],"73bb5a57dc75b54a39494f99986599cae7dff417":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","95303ff3749680c743b9425f9cf99e6e4065e8a8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","95303ff3749680c743b9425f9cf99e6e4065e8a8","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}