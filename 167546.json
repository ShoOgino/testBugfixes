{"path":"lucene/monitor/src/test/org/apache/lucene/monitor/TestConcurrentQueryLoader#testLoading().mjava","commits":[{"id":"7c529b189e09de25455d82ebd7260748cf11ee14","date":1560415257,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/monitor/src/test/org/apache/lucene/monitor/TestConcurrentQueryLoader#testLoading().mjava","pathOld":"/dev/null","sourceNew":"  public void testLoading() throws Exception {\n    try (Monitor monitor = newMonitor()) {\n      try (ConcurrentQueryLoader loader = new ConcurrentQueryLoader(monitor)) {\n        for (int i = 0; i < 2000; i++) {\n          loader.add(new MonitorQuery(Integer.toString(i), parse(\"\\\"test \" + i + \"\\\"\")));\n        }\n      }\n      assertEquals(2000, monitor.getQueryCount());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acb8730dbbbb0f88bb8db80769aa6e9b29d817b","date":1583461779,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/monitor/src/test/org/apache/lucene/monitor/TestConcurrentQueryLoader#testLoading().mjava","pathOld":"lucene/monitor/src/test/org/apache/lucene/monitor/TestConcurrentQueryLoader#testLoading().mjava","sourceNew":"  public void testLoading() throws Exception {\n    // TODO: there are problems if this thing hits OOM (it hides it)\n    int numQueries = TEST_NIGHTLY ? 2000 : 200;\n    try (Monitor monitor = newMonitor()) {\n      try (ConcurrentQueryLoader loader = new ConcurrentQueryLoader(monitor)) {\n        for (int i = 0; i < numQueries; i++) {\n          loader.add(new MonitorQuery(Integer.toString(i), parse(\"\\\"test \" + i + \"\\\"\")));\n        }\n      }\n      assertEquals(numQueries, monitor.getQueryCount());\n    }\n  }\n\n","sourceOld":"  public void testLoading() throws Exception {\n    try (Monitor monitor = newMonitor()) {\n      try (ConcurrentQueryLoader loader = new ConcurrentQueryLoader(monitor)) {\n        for (int i = 0; i < 2000; i++) {\n          loader.add(new MonitorQuery(Integer.toString(i), parse(\"\\\"test \" + i + \"\\\"\")));\n        }\n      }\n      assertEquals(2000, monitor.getQueryCount());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c529b189e09de25455d82ebd7260748cf11ee14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5acb8730dbbbb0f88bb8db80769aa6e9b29d817b":["7c529b189e09de25455d82ebd7260748cf11ee14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5acb8730dbbbb0f88bb8db80769aa6e9b29d817b"]},"commit2Childs":{"7c529b189e09de25455d82ebd7260748cf11ee14":["5acb8730dbbbb0f88bb8db80769aa6e9b29d817b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c529b189e09de25455d82ebd7260748cf11ee14"],"5acb8730dbbbb0f88bb8db80769aa6e9b29d817b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}