{"path":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.RawTransformer#transform(SolrDocument,int).mjava","commits":[{"id":"555fcbaea39f68bc5c24b8a94fb024bb5dea3655","date":1429078520,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.RawTransformer#transform(SolrDocument,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      Object val = doc.remove(field);\n      if(val==null) {\n        return;\n      }\n      if(val instanceof Collection) {\n        Collection current = (Collection)val;\n        ArrayList<WriteableStringValue> vals = new ArrayList<RawValueTransformerFactory.WriteableStringValue>();\n        for(Object v : current) {\n          vals.add(new WriteableStringValue(v));\n        }\n        doc.setField(display, vals);\n      }\n      else {\n        doc.setField(display, new WriteableStringValue(val));\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc","date":1440797084,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.RawTransformer#transform(SolrDocument,int,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.RawTransformer#transform(SolrDocument,int).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid, float score) {\n      Object val = doc.remove(field);\n      if(val==null) {\n        return;\n      }\n      if(val instanceof Collection) {\n        Collection current = (Collection)val;\n        ArrayList<WriteableStringValue> vals = new ArrayList<RawValueTransformerFactory.WriteableStringValue>();\n        for(Object v : current) {\n          vals.add(new WriteableStringValue(v));\n        }\n        doc.setField(display, vals);\n      }\n      else {\n        doc.setField(display, new WriteableStringValue(val));\n      }\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      Object val = doc.remove(field);\n      if(val==null) {\n        return;\n      }\n      if(val instanceof Collection) {\n        Collection current = (Collection)val;\n        ArrayList<WriteableStringValue> vals = new ArrayList<RawValueTransformerFactory.WriteableStringValue>();\n        for(Object v : current) {\n          vals.add(new WriteableStringValue(v));\n        }\n        doc.setField(display, vals);\n      }\n      else {\n        doc.setField(display, new WriteableStringValue(val));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"320eec6599df6f97f2461a5d1ad49cd93b324a14","date":1503502574,"type":1,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.RawTransformer#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.RawTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      Object val = doc.remove(field);\n      if(val==null) {\n        return;\n      }\n      if(val instanceof Collection) {\n        Collection current = (Collection)val;\n        ArrayList<WriteableStringValue> vals = new ArrayList<RawValueTransformerFactory.WriteableStringValue>();\n        for(Object v : current) {\n          vals.add(new WriteableStringValue(v));\n        }\n        doc.setField(display, vals);\n      }\n      else {\n        doc.setField(display, new WriteableStringValue(val));\n      }\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid, float score) {\n      Object val = doc.remove(field);\n      if(val==null) {\n        return;\n      }\n      if(val instanceof Collection) {\n        Collection current = (Collection)val;\n        ArrayList<WriteableStringValue> vals = new ArrayList<RawValueTransformerFactory.WriteableStringValue>();\n        for(Object v : current) {\n          vals.add(new WriteableStringValue(v));\n        }\n        doc.setField(display, vals);\n      }\n      else {\n        doc.setField(display, new WriteableStringValue(val));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"182384b20c064aa16998ddebe9f36e649279c5a6","date":1503596494,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.RawTransformer#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.RawTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      Object val = doc.remove(field);\n      if(val==null) {\n        return;\n      }\n      if(val instanceof Collection) {\n        Collection current = (Collection)val;\n        ArrayList<WriteableStringValue> vals = new ArrayList<RawValueTransformerFactory.WriteableStringValue>();\n        for(Object v : current) {\n          vals.add(new WriteableStringValue(v));\n        }\n        doc.setField(display, vals);\n      }\n      else {\n        doc.setField(display, new WriteableStringValue(val));\n      }\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid, float score) {\n      Object val = doc.remove(field);\n      if(val==null) {\n        return;\n      }\n      if(val instanceof Collection) {\n        Collection current = (Collection)val;\n        ArrayList<WriteableStringValue> vals = new ArrayList<RawValueTransformerFactory.WriteableStringValue>();\n        for(Object v : current) {\n          vals.add(new WriteableStringValue(v));\n        }\n        doc.setField(display, vals);\n      }\n      else {\n        doc.setField(display, new WriteableStringValue(val));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":1,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.RawTransformer#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.RawTransformer#transform(SolrDocument,int,float).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      Object val = doc.remove(field);\n      if(val==null) {\n        return;\n      }\n      if(val instanceof Collection) {\n        Collection current = (Collection)val;\n        ArrayList<WriteableStringValue> vals = new ArrayList<RawValueTransformerFactory.WriteableStringValue>();\n        for(Object v : current) {\n          vals.add(new WriteableStringValue(v));\n        }\n        doc.setField(display, vals);\n      }\n      else {\n        doc.setField(display, new WriteableStringValue(val));\n      }\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid, float score) {\n      Object val = doc.remove(field);\n      if(val==null) {\n        return;\n      }\n      if(val instanceof Collection) {\n        Collection current = (Collection)val;\n        ArrayList<WriteableStringValue> vals = new ArrayList<RawValueTransformerFactory.WriteableStringValue>();\n        for(Object v : current) {\n          vals.add(new WriteableStringValue(v));\n        }\n        doc.setField(display, vals);\n      }\n      else {\n        doc.setField(display, new WriteableStringValue(val));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06a8891f085f71282bb3ece1b1732b68f07813a3","date":1591912889,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.RawTransformer#transform(SolrDocument,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/transform/RawValueTransformerFactory.RawTransformer#transform(SolrDocument,int).mjava","sourceNew":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      Object val = doc.remove(field);\n      if(val==null) {\n        return;\n      }\n      if(val instanceof Collection) {\n        @SuppressWarnings({\"rawtypes\"})\n        Collection current = (Collection)val;\n        ArrayList<WriteableStringValue> vals = new ArrayList<RawValueTransformerFactory.WriteableStringValue>();\n        for(Object v : current) {\n          vals.add(new WriteableStringValue(v));\n        }\n        doc.setField(display, vals);\n      }\n      else {\n        doc.setField(display, new WriteableStringValue(val));\n      }\n    }\n\n","sourceOld":"    @Override\n    public void transform(SolrDocument doc, int docid) {\n      Object val = doc.remove(field);\n      if(val==null) {\n        return;\n      }\n      if(val instanceof Collection) {\n        Collection current = (Collection)val;\n        ArrayList<WriteableStringValue> vals = new ArrayList<RawValueTransformerFactory.WriteableStringValue>();\n        for(Object v : current) {\n          vals.add(new WriteableStringValue(v));\n        }\n        doc.setField(display, vals);\n      }\n      else {\n        doc.setField(display, new WriteableStringValue(val));\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc","182384b20c064aa16998ddebe9f36e649279c5a6"],"320eec6599df6f97f2461a5d1ad49cd93b324a14":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"182384b20c064aa16998ddebe9f36e649279c5a6":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc","320eec6599df6f97f2461a5d1ad49cd93b324a14"],"06a8891f085f71282bb3ece1b1732b68f07813a3":["182384b20c064aa16998ddebe9f36e649279c5a6"],"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc":["555fcbaea39f68bc5c24b8a94fb024bb5dea3655"],"555fcbaea39f68bc5c24b8a94fb024bb5dea3655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06a8891f085f71282bb3ece1b1732b68f07813a3"]},"commit2Childs":{"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"320eec6599df6f97f2461a5d1ad49cd93b324a14":["182384b20c064aa16998ddebe9f36e649279c5a6"],"182384b20c064aa16998ddebe9f36e649279c5a6":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","06a8891f085f71282bb3ece1b1732b68f07813a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["555fcbaea39f68bc5c24b8a94fb024bb5dea3655"],"06a8891f085f71282bb3ece1b1732b68f07813a3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","320eec6599df6f97f2461a5d1ad49cd93b324a14","182384b20c064aa16998ddebe9f36e649279c5a6"],"555fcbaea39f68bc5c24b8a94fb024bb5dea3655":["7b8f0dc1dfedc7fda86aefc0cdabde0efae2d1dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}