{"path":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#initializeMetrics(SolrMetricManager,String,String,String).mjava","commits":[{"id":"bfc52860e6d13d034226a760813c59d984c6817a","date":1522229027,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, String scope) {\n    this.registryName = registryName;\n    this.metricManager = manager;\n    registry = manager.registry(registryName);\n    manager.registerGauge(this, registryName, () -> ramBytesUsed(), tag, true, \"totalSizeInBytes\", getCategory().toString(), scope);\n    MetricsMap suggestersMap = new MetricsMap((detailed, map) -> {\n      for (Map.Entry<String, SolrSuggester> entry : suggesters.entrySet()) {\n        SolrSuggester suggester = entry.getValue();\n        map.put(entry.getKey(), suggester.toString());\n      }\n    });\n    manager.registerGauge(this, registryName, suggestersMap, tag, true, \"suggesters\", getCategory().toString(), scope);\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String scope) {\n    registry = manager.registry(registryName);\n    manager.registerGauge(this, registryName, () -> ramBytesUsed(), true, \"totalSizeInBytes\", getCategory().toString(), scope);\n    MetricsMap suggestersMap = new MetricsMap((detailed, map) -> {\n      for (Map.Entry<String, SolrSuggester> entry : suggesters.entrySet()) {\n        SolrSuggester suggester = entry.getValue();\n        map.put(entry.getKey(), suggester.toString());\n      }\n    });\n    manager.registerGauge(this, registryName, suggestersMap, true, \"suggesters\", getCategory().toString(), scope);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43564cbb30b064675027cfb569564e8531096e97","date":1522334265,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, String scope) {\n    this.registryName = registryName;\n    this.metricManager = manager;\n    registry = manager.registry(registryName);\n    manager.registerGauge(this, registryName, () -> ramBytesUsed(), tag, true, \"totalSizeInBytes\", getCategory().toString(), scope);\n    MetricsMap suggestersMap = new MetricsMap((detailed, map) -> {\n      for (Map.Entry<String, SolrSuggester> entry : suggesters.entrySet()) {\n        SolrSuggester suggester = entry.getValue();\n        map.put(entry.getKey(), suggester.toString());\n      }\n    });\n    manager.registerGauge(this, registryName, suggestersMap, tag, true, \"suggesters\", getCategory().toString(), scope);\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String scope) {\n    registry = manager.registry(registryName);\n    manager.registerGauge(this, registryName, () -> ramBytesUsed(), true, \"totalSizeInBytes\", getCategory().toString(), scope);\n    MetricsMap suggestersMap = new MetricsMap((detailed, map) -> {\n      for (Map.Entry<String, SolrSuggester> entry : suggesters.entrySet()) {\n        SolrSuggester suggester = entry.getValue();\n        map.put(entry.getKey(), suggester.toString());\n      }\n    });\n    manager.registerGauge(this, registryName, suggestersMap, true, \"suggesters\", getCategory().toString(), scope);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a117d95183986014a31f25bb04e5464ca06d6068","date":1566208086,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#initializeMetrics(SolrMetrics).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#initializeMetrics(SolrMetricManager,String,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetrics info) {\n    this.metricsInfo = info.getChildInfo(this);\n\n    metricsInfo.metricManager.registerGauge(this, info.registry, () -> ramBytesUsed(), metricsInfo.tag, true, \"totalSizeInBytes\", getCategory().toString(), metricsInfo.scope);\n    MetricsMap suggestersMap = new MetricsMap((detailed, map) -> {\n      for (Map.Entry<String, SolrSuggester> entry : suggesters.entrySet()) {\n        SolrSuggester suggester = entry.getValue();\n        map.put(entry.getKey(), suggester.toString());\n      }\n    });\n    metricsInfo.metricManager.registerGauge(this, metricsInfo.registry, suggestersMap, metricsInfo.tag, true, \"suggesters\", getCategory().toString(), metricsInfo.scope);\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, String scope) {\n    this.registryName = registryName;\n    this.metricManager = manager;\n    registry = manager.registry(registryName);\n    manager.registerGauge(this, registryName, () -> ramBytesUsed(), tag, true, \"totalSizeInBytes\", getCategory().toString(), scope);\n    MetricsMap suggestersMap = new MetricsMap((detailed, map) -> {\n      for (Map.Entry<String, SolrSuggester> entry : suggesters.entrySet()) {\n        SolrSuggester suggester = entry.getValue();\n        map.put(entry.getKey(), suggester.toString());\n      }\n    });\n    manager.registerGauge(this, registryName, suggestersMap, tag, true, \"suggesters\", getCategory().toString(), scope);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17c468812fc0c60f3d66b176339dc70564d8c3cb","date":1567918667,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#initializeMetrics(SolrMetrics).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, String scope) {\n    this.registryName = registryName;\n    this.metricManager = manager;\n    registry = manager.registry(registryName);\n    manager.registerGauge(this, registryName, () -> ramBytesUsed(), tag, true, \"totalSizeInBytes\", getCategory().toString(), scope);\n    MetricsMap suggestersMap = new MetricsMap((detailed, map) -> {\n      for (Map.Entry<String, SolrSuggester> entry : suggesters.entrySet()) {\n        SolrSuggester suggester = entry.getValue();\n        map.put(entry.getKey(), suggester.toString());\n      }\n    });\n    manager.registerGauge(this, registryName, suggestersMap, tag, true, \"suggesters\", getCategory().toString(), scope);\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetrics info) {\n    this.metricsInfo = info.getChildInfo(this);\n\n    metricsInfo.metricManager.registerGauge(this, info.registry, () -> ramBytesUsed(), metricsInfo.tag, true, \"totalSizeInBytes\", getCategory().toString(), metricsInfo.scope);\n    MetricsMap suggestersMap = new MetricsMap((detailed, map) -> {\n      for (Map.Entry<String, SolrSuggester> entry : suggesters.entrySet()) {\n        SolrSuggester suggester = entry.getValue();\n        map.put(entry.getKey(), suggester.toString());\n      }\n    });\n    metricsInfo.metricManager.registerGauge(this, metricsInfo.registry, suggestersMap, metricsInfo.tag, true, \"suggesters\", getCategory().toString(), metricsInfo.scope);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52275555c0ae3b55430cef26ad7fca3f02440944","date":1568033329,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#initializeMetrics(SolrMetrics).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, String scope) {\n    this.registryName = registryName;\n    this.metricManager = manager;\n    registry = manager.registry(registryName);\n    manager.registerGauge(this, registryName, () -> ramBytesUsed(), tag, true, \"totalSizeInBytes\", getCategory().toString(), scope);\n    MetricsMap suggestersMap = new MetricsMap((detailed, map) -> {\n      for (Map.Entry<String, SolrSuggester> entry : suggesters.entrySet()) {\n        SolrSuggester suggester = entry.getValue();\n        map.put(entry.getKey(), suggester.toString());\n      }\n    });\n    manager.registerGauge(this, registryName, suggestersMap, tag, true, \"suggesters\", getCategory().toString(), scope);\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetrics info) {\n    this.metricsInfo = info.getChildInfo(this);\n\n    metricsInfo.metricManager.registerGauge(this, info.registry, () -> ramBytesUsed(), metricsInfo.tag, true, \"totalSizeInBytes\", getCategory().toString(), metricsInfo.scope);\n    MetricsMap suggestersMap = new MetricsMap((detailed, map) -> {\n      for (Map.Entry<String, SolrSuggester> entry : suggesters.entrySet()) {\n        SolrSuggester suggester = entry.getValue();\n        map.put(entry.getKey(), suggester.toString());\n      }\n    });\n    metricsInfo.metricManager.registerGauge(this, metricsInfo.registry, suggestersMap, metricsInfo.tag, true, \"suggesters\", getCategory().toString(), metricsInfo.scope);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa","date":1571411704,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#initializeMetrics(SolrMetricsContext,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/SuggestComponent#initializeMetrics(SolrMetricManager,String,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricsContext parentContext, String scope) {\n    this.metricsContext = parentContext.getChildContext(this);\n\n    this.metricsContext.gauge(this, () -> ramBytesUsed(), true, \"totalSizeInBytes\", getCategory().toString());\n    MetricsMap suggestersMap = new MetricsMap((detailed, map) -> {\n      for (Map.Entry<String, SolrSuggester> entry : suggesters.entrySet()) {\n        SolrSuggester suggester = entry.getValue();\n        map.put(entry.getKey(), suggester.toString());\n      }\n    });\n    this.metricsContext.gauge(this, suggestersMap, true, \"suggesters\", getCategory().toString(), scope);\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registryName, String tag, String scope) {\n    this.registryName = registryName;\n    this.metricManager = manager;\n    registry = manager.registry(registryName);\n    manager.registerGauge(this, registryName, () -> ramBytesUsed(), tag, true, \"totalSizeInBytes\", getCategory().toString(), scope);\n    MetricsMap suggestersMap = new MetricsMap((detailed, map) -> {\n      for (Map.Entry<String, SolrSuggester> entry : suggesters.entrySet()) {\n        SolrSuggester suggester = entry.getValue();\n        map.put(entry.getKey(), suggester.toString());\n      }\n    });\n    manager.registerGauge(this, registryName, suggestersMap, tag, true, \"suggesters\", getCategory().toString(), scope);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bfc52860e6d13d034226a760813c59d984c6817a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"52275555c0ae3b55430cef26ad7fca3f02440944":["a117d95183986014a31f25bb04e5464ca06d6068","17c468812fc0c60f3d66b176339dc70564d8c3cb"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["52275555c0ae3b55430cef26ad7fca3f02440944"],"43564cbb30b064675027cfb569564e8531096e97":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bfc52860e6d13d034226a760813c59d984c6817a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a117d95183986014a31f25bb04e5464ca06d6068":["43564cbb30b064675027cfb569564e8531096e97"],"17c468812fc0c60f3d66b176339dc70564d8c3cb":["a117d95183986014a31f25bb04e5464ca06d6068"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"]},"commit2Childs":{"bfc52860e6d13d034226a760813c59d984c6817a":["43564cbb30b064675027cfb569564e8531096e97"],"52275555c0ae3b55430cef26ad7fca3f02440944":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"43564cbb30b064675027cfb569564e8531096e97":["a117d95183986014a31f25bb04e5464ca06d6068"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bfc52860e6d13d034226a760813c59d984c6817a","43564cbb30b064675027cfb569564e8531096e97"],"a117d95183986014a31f25bb04e5464ca06d6068":["52275555c0ae3b55430cef26ad7fca3f02440944","17c468812fc0c60f3d66b176339dc70564d8c3cb"],"17c468812fc0c60f3d66b176339dc70564d8c3cb":["52275555c0ae3b55430cef26ad7fca3f02440944"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}