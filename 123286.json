{"path":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldQuery#getKey(Query).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldQuery#getKey(Query).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldQuery#getKey(Query).mjava","sourceNew":"  /*\n   * Return 'key' string. 'key' is the field name of the Query.\n   * If not fieldMatch, 'key' will be null.\n   */\n  private String getKey( Query query ){\n    if( !fieldMatch ) return null;\n    if( query instanceof TermQuery )\n      return ((TermQuery)query).getTerm().field();\n    else if ( query instanceof PhraseQuery ){\n      PhraseQuery pq = (PhraseQuery)query;\n      Term[] terms = pq.getTerms();\n      return terms[0].field();\n    }\n    else if (query instanceof MultiTermQuery) {\n      return ((MultiTermQuery)query).getField();\n    }\n    else\n      throw new RuntimeException( \"query \\\"\" + query.toString() + \"\\\" must be flatten first.\" );\n  }\n\n","sourceOld":"  /*\n   * Return 'key' string. 'key' is the field name of the Query.\n   * If not fieldMatch, 'key' will be null.\n   */\n  private String getKey( Query query ){\n    if( !fieldMatch ) return null;\n    if( query instanceof TermQuery )\n      return ((TermQuery)query).getTerm().field();\n    else if ( query instanceof PhraseQuery ){\n      PhraseQuery pq = (PhraseQuery)query;\n      Term[] terms = pq.getTerms();\n      return terms[0].field();\n    }\n    else if (query instanceof MultiTermQuery) {\n      return ((MultiTermQuery)query).getField();\n    }\n    else\n      throw new RuntimeException( \"query \\\"\" + query.toString() + \"\\\" must be flatten first.\" );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldQuery#getKey(Query).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/FieldQuery#getKey(Query).mjava","sourceNew":"  /*\n   * Return 'key' string. 'key' is the field name of the Query.\n   * If not fieldMatch, 'key' will be null.\n   */\n  private String getKey( Query query ){\n    if( !fieldMatch ) return null;\n    while (query instanceof BoostQuery) {\n      query = ((BoostQuery) query).getQuery();\n    }\n    if( query instanceof TermQuery )\n      return ((TermQuery)query).getTerm().field();\n    else if ( query instanceof PhraseQuery ){\n      PhraseQuery pq = (PhraseQuery)query;\n      Term[] terms = pq.getTerms();\n      return terms[0].field();\n    }\n    else if (query instanceof MultiTermQuery) {\n      return ((MultiTermQuery)query).getField();\n    }\n    else\n      throw new RuntimeException( \"query \\\"\" + query.toString() + \"\\\" must be flatten first.\" );\n  }\n\n","sourceOld":"  /*\n   * Return 'key' string. 'key' is the field name of the Query.\n   * If not fieldMatch, 'key' will be null.\n   */\n  private String getKey( Query query ){\n    if( !fieldMatch ) return null;\n    if( query instanceof TermQuery )\n      return ((TermQuery)query).getTerm().field();\n    else if ( query instanceof PhraseQuery ){\n      PhraseQuery pq = (PhraseQuery)query;\n      Term[] terms = pq.getTerms();\n      return terms[0].field();\n    }\n    else if (query instanceof MultiTermQuery) {\n      return ((MultiTermQuery)query).getField();\n    }\n    else\n      throw new RuntimeException( \"query \\\"\" + query.toString() + \"\\\" must be flatten first.\" );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2dfdf766e55e943d942055d7de53c7ad6bc45283"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}