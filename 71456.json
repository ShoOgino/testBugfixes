{"path":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#getMetricsConfig(Config).mjava","commits":[{"id":"195fcfcffd8f9047ac27ac642ee9da64f4e6c4fa","date":1494330459,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#getMetricsConfig(Config).mjava","pathOld":"/dev/null","sourceNew":"  private static MetricsConfig getMetricsConfig(Config config) {\n    MetricsConfig.MetricsConfigBuilder builder = new MetricsConfig.MetricsConfigBuilder();\n    Node node = config.getNode(\"solr/metrics/suppliers/counter\", false);\n    if (node != null) {\n      builder = builder.setCounterSupplier(new PluginInfo(node, \"counterSupplier\", false, false));\n    }\n    node = config.getNode(\"solr/metrics/suppliers/meter\", false);\n    if (node != null) {\n      builder = builder.setMeterSupplier(new PluginInfo(node, \"meterSupplier\", false, false));\n    }\n    node = config.getNode(\"solr/metrics/suppliers/timer\", false);\n    if (node != null) {\n      builder = builder.setTimerSupplier(new PluginInfo(node, \"timerSupplier\", false, false));\n    }\n    node = config.getNode(\"solr/metrics/suppliers/histogram\", false);\n    if (node != null) {\n      builder = builder.setHistogramSupplier(new PluginInfo(node, \"histogramSupplier\", false, false));\n    }\n    PluginInfo[] reporterPlugins = getMetricReporterPluginInfos(config);\n    Set<String> hiddenSysProps = getHiddenSysProps(config);\n    return builder\n        .setMetricReporterPlugins(reporterPlugins)\n        .setHiddenSysProps(hiddenSysProps)\n        .build();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#getMetricsConfig(Config).mjava","pathOld":"/dev/null","sourceNew":"  private static MetricsConfig getMetricsConfig(Config config) {\n    MetricsConfig.MetricsConfigBuilder builder = new MetricsConfig.MetricsConfigBuilder();\n    Node node = config.getNode(\"solr/metrics/suppliers/counter\", false);\n    if (node != null) {\n      builder = builder.setCounterSupplier(new PluginInfo(node, \"counterSupplier\", false, false));\n    }\n    node = config.getNode(\"solr/metrics/suppliers/meter\", false);\n    if (node != null) {\n      builder = builder.setMeterSupplier(new PluginInfo(node, \"meterSupplier\", false, false));\n    }\n    node = config.getNode(\"solr/metrics/suppliers/timer\", false);\n    if (node != null) {\n      builder = builder.setTimerSupplier(new PluginInfo(node, \"timerSupplier\", false, false));\n    }\n    node = config.getNode(\"solr/metrics/suppliers/histogram\", false);\n    if (node != null) {\n      builder = builder.setHistogramSupplier(new PluginInfo(node, \"histogramSupplier\", false, false));\n    }\n    PluginInfo[] reporterPlugins = getMetricReporterPluginInfos(config);\n    Set<String> hiddenSysProps = getHiddenSysProps(config);\n    return builder\n        .setMetricReporterPlugins(reporterPlugins)\n        .setHiddenSysProps(hiddenSysProps)\n        .build();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a","date":1527582939,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#getMetricsConfig(Config).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#getMetricsConfig(Config).mjava","sourceNew":"  private static MetricsConfig getMetricsConfig(Config config) {\n    MetricsConfig.MetricsConfigBuilder builder = new MetricsConfig.MetricsConfigBuilder();\n    Node node = config.getNode(\"solr/metrics/suppliers/counter\", false);\n    if (node != null) {\n      builder = builder.setCounterSupplier(new PluginInfo(node, \"counterSupplier\", false, false));\n    }\n    node = config.getNode(\"solr/metrics/suppliers/meter\", false);\n    if (node != null) {\n      builder = builder.setMeterSupplier(new PluginInfo(node, \"meterSupplier\", false, false));\n    }\n    node = config.getNode(\"solr/metrics/suppliers/timer\", false);\n    if (node != null) {\n      builder = builder.setTimerSupplier(new PluginInfo(node, \"timerSupplier\", false, false));\n    }\n    node = config.getNode(\"solr/metrics/suppliers/histogram\", false);\n    if (node != null) {\n      builder = builder.setHistogramSupplier(new PluginInfo(node, \"histogramSupplier\", false, false));\n    }\n    node = config.getNode(\"solr/metrics/history\", false);\n    if (node != null) {\n      builder = builder.setHistoryHandler(new PluginInfo(node, \"history\", false, false));\n    }\n    PluginInfo[] reporterPlugins = getMetricReporterPluginInfos(config);\n    Set<String> hiddenSysProps = getHiddenSysProps(config);\n    return builder\n        .setMetricReporterPlugins(reporterPlugins)\n        .setHiddenSysProps(hiddenSysProps)\n        .build();\n  }\n\n","sourceOld":"  private static MetricsConfig getMetricsConfig(Config config) {\n    MetricsConfig.MetricsConfigBuilder builder = new MetricsConfig.MetricsConfigBuilder();\n    Node node = config.getNode(\"solr/metrics/suppliers/counter\", false);\n    if (node != null) {\n      builder = builder.setCounterSupplier(new PluginInfo(node, \"counterSupplier\", false, false));\n    }\n    node = config.getNode(\"solr/metrics/suppliers/meter\", false);\n    if (node != null) {\n      builder = builder.setMeterSupplier(new PluginInfo(node, \"meterSupplier\", false, false));\n    }\n    node = config.getNode(\"solr/metrics/suppliers/timer\", false);\n    if (node != null) {\n      builder = builder.setTimerSupplier(new PluginInfo(node, \"timerSupplier\", false, false));\n    }\n    node = config.getNode(\"solr/metrics/suppliers/histogram\", false);\n    if (node != null) {\n      builder = builder.setHistogramSupplier(new PluginInfo(node, \"histogramSupplier\", false, false));\n    }\n    PluginInfo[] reporterPlugins = getMetricReporterPluginInfos(config);\n    Set<String> hiddenSysProps = getHiddenSysProps(config);\n    return builder\n        .setMetricReporterPlugins(reporterPlugins)\n        .setHiddenSysProps(hiddenSysProps)\n        .build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee622110ba6021d0390037e77574743c1e55348c","date":1546700916,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#getMetricsConfig(XmlConfigFile).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#getMetricsConfig(Config).mjava","sourceNew":"  private static MetricsConfig getMetricsConfig(XmlConfigFile config) {\n    MetricsConfig.MetricsConfigBuilder builder = new MetricsConfig.MetricsConfigBuilder();\n    Node node = config.getNode(\"solr/metrics/suppliers/counter\", false);\n    if (node != null) {\n      builder = builder.setCounterSupplier(new PluginInfo(node, \"counterSupplier\", false, false));\n    }\n    node = config.getNode(\"solr/metrics/suppliers/meter\", false);\n    if (node != null) {\n      builder = builder.setMeterSupplier(new PluginInfo(node, \"meterSupplier\", false, false));\n    }\n    node = config.getNode(\"solr/metrics/suppliers/timer\", false);\n    if (node != null) {\n      builder = builder.setTimerSupplier(new PluginInfo(node, \"timerSupplier\", false, false));\n    }\n    node = config.getNode(\"solr/metrics/suppliers/histogram\", false);\n    if (node != null) {\n      builder = builder.setHistogramSupplier(new PluginInfo(node, \"histogramSupplier\", false, false));\n    }\n    node = config.getNode(\"solr/metrics/history\", false);\n    if (node != null) {\n      builder = builder.setHistoryHandler(new PluginInfo(node, \"history\", false, false));\n    }\n    PluginInfo[] reporterPlugins = getMetricReporterPluginInfos(config);\n    Set<String> hiddenSysProps = getHiddenSysProps(config);\n    return builder\n        .setMetricReporterPlugins(reporterPlugins)\n        .setHiddenSysProps(hiddenSysProps)\n        .build();\n  }\n\n","sourceOld":"  private static MetricsConfig getMetricsConfig(Config config) {\n    MetricsConfig.MetricsConfigBuilder builder = new MetricsConfig.MetricsConfigBuilder();\n    Node node = config.getNode(\"solr/metrics/suppliers/counter\", false);\n    if (node != null) {\n      builder = builder.setCounterSupplier(new PluginInfo(node, \"counterSupplier\", false, false));\n    }\n    node = config.getNode(\"solr/metrics/suppliers/meter\", false);\n    if (node != null) {\n      builder = builder.setMeterSupplier(new PluginInfo(node, \"meterSupplier\", false, false));\n    }\n    node = config.getNode(\"solr/metrics/suppliers/timer\", false);\n    if (node != null) {\n      builder = builder.setTimerSupplier(new PluginInfo(node, \"timerSupplier\", false, false));\n    }\n    node = config.getNode(\"solr/metrics/suppliers/histogram\", false);\n    if (node != null) {\n      builder = builder.setHistogramSupplier(new PluginInfo(node, \"histogramSupplier\", false, false));\n    }\n    node = config.getNode(\"solr/metrics/history\", false);\n    if (node != null) {\n      builder = builder.setHistoryHandler(new PluginInfo(node, \"history\", false, false));\n    }\n    PluginInfo[] reporterPlugins = getMetricReporterPluginInfos(config);\n    Set<String> hiddenSysProps = getHiddenSysProps(config);\n    return builder\n        .setMetricReporterPlugins(reporterPlugins)\n        .setHiddenSysProps(hiddenSysProps)\n        .build();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ee622110ba6021d0390037e77574743c1e55348c":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","195fcfcffd8f9047ac27ac642ee9da64f4e6c4fa"],"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["195fcfcffd8f9047ac27ac642ee9da64f4e6c4fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"195fcfcffd8f9047ac27ac642ee9da64f4e6c4fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ee622110ba6021d0390037e77574743c1e55348c"]},"commit2Childs":{"ee622110ba6021d0390037e77574743c1e55348c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["ee622110ba6021d0390037e77574743c1e55348c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","195fcfcffd8f9047ac27ac642ee9da64f4e6c4fa"],"195fcfcffd8f9047ac27ac642ee9da64f4e6c4fa":["e9017cf144952056066919f1ebc7897ff9bd71b1","4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}