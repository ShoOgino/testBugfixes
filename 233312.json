{"path":"lucene/core/src/java/org/apache/lucene/util/RoaringDocIdSet.Builder#add(int).mjava","commits":[{"id":"9cd756794a4a9e33f786119818f9d56162965cf8","date":1412591300,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/RoaringDocIdSet.Builder#add(int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Add a new doc-id to this builder.\n     * NOTE: doc ids must be added in order.\n     */\n    public Builder add(int docId) {\n      if (docId <= lastDocId) {\n        throw new IllegalArgumentException(\"Doc ids must be added in-order, got \" + docId + \" which is <= lastDocID=\" + lastDocId);\n      }\n      final int block = docId >>> 16;\n      if (block != currentBlock) {\n        // we went to a different block, let's flush what we buffered and start from fresh\n        flush();\n        currentBlock = block;\n      }\n\n      if (currentBlockCardinality < MAX_ARRAY_LENGTH) {\n        buffer[currentBlockCardinality] = (short) docId;\n      } else {\n        if (denseBuffer == null) {\n          // the buffer is full, let's move to a fixed bit set\n          final int numBits = Math.min(1 << 16, maxDoc - (block << 16));\n          denseBuffer = new FixedBitSet(numBits);\n          for (short doc : buffer) {\n            denseBuffer.set(doc & 0xFFFF);\n          }\n        }\n        denseBuffer.set(docId & 0xFFFF);\n      }\n\n      lastDocId = docId;\n      currentBlockCardinality += 1;\n      return this;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/RoaringDocIdSet.Builder#add(int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Add a new doc-id to this builder.\n     * NOTE: doc ids must be added in order.\n     */\n    public Builder add(int docId) {\n      if (docId <= lastDocId) {\n        throw new IllegalArgumentException(\"Doc ids must be added in-order, got \" + docId + \" which is <= lastDocID=\" + lastDocId);\n      }\n      final int block = docId >>> 16;\n      if (block != currentBlock) {\n        // we went to a different block, let's flush what we buffered and start from fresh\n        flush();\n        currentBlock = block;\n      }\n\n      if (currentBlockCardinality < MAX_ARRAY_LENGTH) {\n        buffer[currentBlockCardinality] = (short) docId;\n      } else {\n        if (denseBuffer == null) {\n          // the buffer is full, let's move to a fixed bit set\n          final int numBits = Math.min(1 << 16, maxDoc - (block << 16));\n          denseBuffer = new FixedBitSet(numBits);\n          for (short doc : buffer) {\n            denseBuffer.set(doc & 0xFFFF);\n          }\n        }\n        denseBuffer.set(docId & 0xFFFF);\n      }\n\n      lastDocId = docId;\n      currentBlockCardinality += 1;\n      return this;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9cd756794a4a9e33f786119818f9d56162965cf8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"55980207f1977bd1463465de1659b821347e2fa8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9cd756794a4a9e33f786119818f9d56162965cf8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9cd756794a4a9e33f786119818f9d56162965cf8"]},"commit2Childs":{"9cd756794a4a9e33f786119818f9d56162965cf8":["55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"55980207f1977bd1463465de1659b821347e2fa8":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9cd756794a4a9e33f786119818f9d56162965cf8","55980207f1977bd1463465de1659b821347e2fa8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}