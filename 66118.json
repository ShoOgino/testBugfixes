{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/email/TestUAX29URLEmailTokenizer#testLongEMAILatomText().mjava","commits":[{"id":"313c36388b6cae6118f75a1860ad0ba0af7e1344","date":1601279368,"type":1,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/email/TestUAX29URLEmailTokenizer#testLongEMAILatomText().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/standard/TestUAX29URLEmailTokenizer#testLongEMAILatomText().mjava","sourceNew":"  // LUCENE-5440: extremely slow tokenization of text matching email <local-part> (before the '@')\n  @Nightly\n  public void testLongEMAILatomText() throws Exception {\n    // EMAILatomText = [A-Za-z0-9!#$%&'*+-/=?\\^_`{|}~]\n    char[] emailAtomChars\n        = \"!#$%&'*+,-./0123456789=?ABCDEFGHIJKLMNOPQRSTUVWXYZ^_`abcdefghijklmnopqrstuvwxyz{|}~\".toCharArray();\n    StringBuilder builder = new StringBuilder();\n    int numChars = TestUtil.nextInt(random(), 100 * 1024, 3 * 1024 * 1024);\n    for (int i = 0 ; i < numChars ; ++i) {\n      builder.append(emailAtomChars[random().nextInt(emailAtomChars.length)]);\n    }\n    int tokenCount = 0;\n    UAX29URLEmailTokenizer ts = new UAX29URLEmailTokenizer();\n    String text = builder.toString();\n    ts.setReader(new StringReader(text));\n    ts.reset();\n    while (ts.incrementToken()) {\n      tokenCount++;\n    }\n    ts.end();\n    ts.close();\n    assertTrue(tokenCount > 0);\n\n    tokenCount = 0;\n    int newBufferSize = TestUtil.nextInt(random(), 200, 8192);\n    ts.setMaxTokenLength(newBufferSize);\n    ts.setReader(new StringReader(text));\n    ts.reset();\n    while (ts.incrementToken()) {\n      tokenCount++;\n    }\n    ts.end();\n    ts.close();\n    assertTrue(tokenCount > 0);\n  }\n\n","sourceOld":"  // LUCENE-5440: extremely slow tokenization of text matching email <local-part> (before the '@')\n  @Nightly\n  public void testLongEMAILatomText() throws Exception {\n    // EMAILatomText = [A-Za-z0-9!#$%&'*+-/=?\\^_`{|}~]\n    char[] emailAtomChars\n        = \"!#$%&'*+,-./0123456789=?ABCDEFGHIJKLMNOPQRSTUVWXYZ^_`abcdefghijklmnopqrstuvwxyz{|}~\".toCharArray();\n    StringBuilder builder = new StringBuilder();\n    int numChars = TestUtil.nextInt(random(), 100 * 1024, 3 * 1024 * 1024);\n    for (int i = 0 ; i < numChars ; ++i) {\n      builder.append(emailAtomChars[random().nextInt(emailAtomChars.length)]);\n    }\n    int tokenCount = 0;\n    UAX29URLEmailTokenizer ts = new UAX29URLEmailTokenizer();\n    String text = builder.toString();\n    ts.setReader(new StringReader(text));\n    ts.reset();\n    while (ts.incrementToken()) {\n      tokenCount++;\n    }\n    ts.end();\n    ts.close();\n    assertTrue(tokenCount > 0);\n\n    tokenCount = 0;\n    int newBufferSize = TestUtil.nextInt(random(), 200, 8192);\n    ts.setMaxTokenLength(newBufferSize);\n    ts.setReader(new StringReader(text));\n    ts.reset();\n    while (ts.incrementToken()) {\n      tokenCount++;\n    }\n    ts.end();\n    ts.close();\n    assertTrue(tokenCount > 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"313c36388b6cae6118f75a1860ad0ba0af7e1344":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["313c36388b6cae6118f75a1860ad0ba0af7e1344"]},"commit2Childs":{"313c36388b6cae6118f75a1860ad0ba0af7e1344":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["313c36388b6cae6118f75a1860ad0ba0af7e1344"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}