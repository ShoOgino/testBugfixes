{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.KillNodes#execute(SimScenario).mjava","commits":[{"id":"a7aeb53916301ea6a5fedff4fdc9617b257cbc7d","date":1571856490,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.KillNodes#execute(SimScenario).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void execute(SimScenario scenario) throws Exception {\n      if (params.get(\"numNodes\") != null) {\n        int numNodes = Integer.parseInt(params.get(\"numNodes\"));\n        scenario.cluster.simRemoveRandomNodes(numNodes, false, scenario.cluster.getRandom());\n      } else if (params.get(\"nodes\") != null || params.get(\"node\") != null) {\n        Set<String> nodes = new HashSet<>();\n        String[] nodesValues = params.getParams(\"nodes\");\n        if (nodesValues != null) {\n          for (String nodesValue : nodesValues) {\n            String[] vals = nodesValue.split(\",\");\n            nodes.addAll(Arrays.asList(vals));\n          }\n        }\n        nodesValues = params.getParams(\"node\");\n        if (nodesValues != null) {\n          nodes.addAll(Arrays.asList(nodesValues));\n        }\n        for (String node : nodes) {\n          scenario.cluster.simRemoveNode(node, false);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimScenario.KillNodes#execute(SimScenario).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void execute(SimScenario scenario) throws Exception {\n      if (params.get(\"numNodes\") != null) {\n        int numNodes = Integer.parseInt(params.get(\"numNodes\"));\n        scenario.cluster.simRemoveRandomNodes(numNodes, false, scenario.cluster.getRandom());\n      } else if (params.get(\"nodes\") != null || params.get(\"node\") != null) {\n        Set<String> nodes = new HashSet<>();\n        String[] nodesValues = params.getParams(\"nodes\");\n        if (nodesValues != null) {\n          for (String nodesValue : nodesValues) {\n            String[] vals = nodesValue.split(\",\");\n            nodes.addAll(Arrays.asList(vals));\n          }\n        }\n        nodesValues = params.getParams(\"node\");\n        if (nodesValues != null) {\n          nodes.addAll(Arrays.asList(nodesValues));\n        }\n        for (String node : nodes) {\n          scenario.cluster.simRemoveNode(node, false);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["a7aeb53916301ea6a5fedff4fdc9617b257cbc7d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"],"a7aeb53916301ea6a5fedff4fdc9617b257cbc7d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a7aeb53916301ea6a5fedff4fdc9617b257cbc7d"],"a7aeb53916301ea6a5fedff4fdc9617b257cbc7d":["3f504512a03d978990cbff30db0522b354e846db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}