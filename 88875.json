{"path":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomRealisticUnicodeString(Random,int).mjava","commits":[{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomRealisticUnicodeString(Random,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#randomRealisticUnicodeString(Random,int).mjava","sourceNew":"  /** Returns random string, all codepoints within the same unicode block. */\n  public static String randomRealisticUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    final int block = r.nextInt(blockStarts.length);\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < end; i++)\n      sb.appendCodePoint(nextInt(r, blockStarts[block], blockEnds[block]));\n    return sb.toString();\n  }\n\n","sourceOld":"  /** Returns random string, all codepoints within the same unicode block. */\n  public static String randomRealisticUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    final int block = r.nextInt(blockStarts.length);\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < end; i++)\n      sb.appendCodePoint(nextInt(r, blockStarts[block], blockEnds[block]));\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomRealisticUnicodeString(Random,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#randomRealisticUnicodeString(Random,int).mjava","sourceNew":"  /** Returns random string, all codepoints within the same unicode block. */\n  public static String randomRealisticUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    final int block = r.nextInt(blockStarts.length);\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < end; i++)\n      sb.appendCodePoint(nextInt(r, blockStarts[block], blockEnds[block]));\n    return sb.toString();\n  }\n\n","sourceOld":"  /** Returns random string, all codepoints within the same unicode block. */\n  public static String randomRealisticUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    final int block = r.nextInt(blockStarts.length);\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < end; i++)\n      sb.appendCodePoint(nextInt(r, blockStarts[block], blockEnds[block]));\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomRealisticUnicodeString(Random,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#randomRealisticUnicodeString(Random,int).mjava","sourceNew":"  /** Returns random string, all codepoints within the same unicode block. */\n  public static String randomRealisticUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    final int block = r.nextInt(blockStarts.length);\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < end; i++)\n      sb.appendCodePoint(nextInt(r, blockStarts[block], blockEnds[block]));\n    return sb.toString();\n  }\n\n","sourceOld":"  /** Returns random string, all codepoints within the same unicode block. */\n  public static String randomRealisticUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    final int block = r.nextInt(blockStarts.length);\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < end; i++)\n      sb.appendCodePoint(nextInt(r, blockStarts[block], blockEnds[block]));\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a66bd69cd26cbc71647b0971089f240b2ea82edc","date":1312150123,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomRealisticUnicodeString(Random,int).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomRealisticUnicodeString(Random,int).mjava","sourceNew":"  /** Returns random string of length up to maxLength codepoints , all codepoints within the same unicode block. */\n  public static String randomRealisticUnicodeString(Random r, int maxLength) {\n    return randomRealisticUnicodeString(r, 0, 20);\n  }\n\n","sourceOld":"  /** Returns random string, all codepoints within the same unicode block. */\n  public static String randomRealisticUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    final int block = r.nextInt(blockStarts.length);\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < end; i++)\n      sb.appendCodePoint(nextInt(r, blockStarts[block], blockEnds[block]));\n    return sb.toString();\n  }\n\n","bugFix":["c7db68e73be7bb17f9056ec43a60c676b2cf70cb"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil#randomRealisticUnicodeString(Random,int).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomRealisticUnicodeString(Random,int).mjava","sourceNew":"  /** Returns random string of length up to maxLength codepoints , all codepoints within the same unicode block. */\n  public static String randomRealisticUnicodeString(Random r, int maxLength) {\n    return randomRealisticUnicodeString(r, 0, 20);\n  }\n\n","sourceOld":"  /** Returns random string of length up to maxLength codepoints , all codepoints within the same unicode block. */\n  public static String randomRealisticUnicodeString(Random r, int maxLength) {\n    return randomRealisticUnicodeString(r, 0, 20);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a66bd69cd26cbc71647b0971089f240b2ea82edc"],"a66bd69cd26cbc71647b0971089f240b2ea82edc":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a66bd69cd26cbc71647b0971089f240b2ea82edc":["7b91922b55d15444d554721b352861d028eb8278"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a66bd69cd26cbc71647b0971089f240b2ea82edc","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}