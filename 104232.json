{"path":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","commits":[{"id":"c9f9f3353941a7e1d1addbd7f9f901a292f6a4d1","date":1423220905,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","pathOld":"/dev/null","sourceNew":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info , CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = op.getStr(CLASS_NAME);\n      op.getMap(PluginInfo.DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (overlay.getNamedPlugins(info.tag).containsKey(name)) {\n        if (isCeate) {\n          op.addError(MessageFormat.format(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.tag.toLowerCase(Locale.ROOT)));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.tag);\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.tag);\n        } else {\n          op.addError(MessageFormat.format(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.tag.toLowerCase(Locale.ROOT)));\n          return overlay;\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be214850f18c80408bcfafd463ec155ab0515aee","date":1423651203,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","sourceNew":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = op.getStr(CLASS_NAME);\n      op.getMap(PluginInfo.DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (overlay.getNamedPlugins(info.tag).containsKey(name)) {\n        if (isCeate) {\n          op.addError(MessageFormat.format(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.tag.toLowerCase(Locale.ROOT)));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.tag);\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.tag);\n        } else {\n          op.addError(MessageFormat.format(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.tag.toLowerCase(Locale.ROOT)));\n          return overlay;\n        }\n      }\n    }\n\n","sourceOld":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info , CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = op.getStr(CLASS_NAME);\n      op.getMap(PluginInfo.DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (overlay.getNamedPlugins(info.tag).containsKey(name)) {\n        if (isCeate) {\n          op.addError(MessageFormat.format(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.tag.toLowerCase(Locale.ROOT)));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.tag);\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.tag);\n        } else {\n          op.addError(MessageFormat.format(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.tag.toLowerCase(Locale.ROOT)));\n          return overlay;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9aea0485ecacb6734c17da2d02569816c23a69c1","date":1425707735,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","sourceNew":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(PluginInfo.DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (overlay.getNamedPlugins(info.tag).containsKey(name)) {\n        if (isCeate) {\n          op.addError(MessageFormat.format(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.tag.toLowerCase(Locale.ROOT)));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.tag);\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.tag);\n        } else {\n          op.addError(MessageFormat.format(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.tag.toLowerCase(Locale.ROOT)));\n          return overlay;\n        }\n      }\n    }\n\n","sourceOld":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = op.getStr(CLASS_NAME);\n      op.getMap(PluginInfo.DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (overlay.getNamedPlugins(info.tag).containsKey(name)) {\n        if (isCeate) {\n          op.addError(MessageFormat.format(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.tag.toLowerCase(Locale.ROOT)));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.tag);\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.tag);\n        } else {\n          op.addError(MessageFormat.format(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.tag.toLowerCase(Locale.ROOT)));\n          return overlay;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bdb19206b4aeab66b9fb393c53969f44bdd48be","date":1426629125,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","sourceNew":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(PluginInfo.DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (overlay.getNamedPlugins(info.tag).containsKey(name)) {\n        if (isCeate) {\n          op.addError(StrUtils.formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.tag.toLowerCase(Locale.ROOT)));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.tag);\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.tag);\n        } else {\n          op.addError(StrUtils.formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.tag.toLowerCase(Locale.ROOT)));\n          return overlay;\n        }\n      }\n    }\n\n","sourceOld":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(PluginInfo.DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (overlay.getNamedPlugins(info.tag).containsKey(name)) {\n        if (isCeate) {\n          op.addError(MessageFormat.format(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.tag.toLowerCase(Locale.ROOT)));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.tag);\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.tag);\n        } else {\n          op.addError(MessageFormat.format(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.tag.toLowerCase(Locale.ROOT)));\n          return overlay;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae2f5be890d26585d438eba0b9cc7d3c0a9775be","date":1427387954,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","sourceNew":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(PluginInfo.DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (overlay.getNamedPlugins(info.getCleanTag()).containsKey(name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","sourceOld":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(PluginInfo.DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (overlay.getNamedPlugins(info.tag).containsKey(name)) {\n        if (isCeate) {\n          op.addError(StrUtils.formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.tag.toLowerCase(Locale.ROOT)));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.tag);\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.tag);\n        } else {\n          op.addError(StrUtils.formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.tag.toLowerCase(Locale.ROOT)));\n          return overlay;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":["93f558d9f0b5a234a28dcc95036e388fcbbadaf7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","sourceNew":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(PluginInfo.DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (overlay.getNamedPlugins(info.getCleanTag()).containsKey(name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","sourceOld":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = op.getStr(CLASS_NAME);\n      op.getMap(PluginInfo.DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (overlay.getNamedPlugins(info.tag).containsKey(name)) {\n        if (isCeate) {\n          op.addError(MessageFormat.format(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.tag.toLowerCase(Locale.ROOT)));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.tag);\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.tag);\n        } else {\n          op.addError(MessageFormat.format(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.tag.toLowerCase(Locale.ROOT)));\n          return overlay;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93f558d9f0b5a234a28dcc95036e388fcbbadaf7","date":1446466934,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","sourceNew":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(PluginInfo.DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","sourceOld":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(PluginInfo.DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (overlay.getNamedPlugins(info.getCleanTag()).containsKey(name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","bugFix":["ae2f5be890d26585d438eba0b9cc7d3c0a9775be"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5e8661269ebb23269662a2826882f11611e91d5a","date":1475042403,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","sourceNew":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","sourceOld":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(PluginInfo.DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","sourceNew":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","sourceOld":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(PluginInfo.DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","sourceNew":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","sourceOld":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(PluginInfo.DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"627e70d5711ab39d080a080f089685268525f54d","date":1560754171,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","sourceNew":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if(info.clazz == PluginBag.RuntimeLib.class) {\n        if(!PluginBag.RuntimeLib.isEnabled()){\n          op.addError(\"Solr not started with -Denable.runtime.lib=true\");\n          return overlay;\n        }\n        try {\n          new PluginBag.RuntimeLib(req.getCore()).init(new PluginInfo(info.tag, op.getDataMap()));\n        } catch (Exception e) {\n          op.addError(e.getMessage());\n          log.error(\"can't load this plugin \", e);\n          return overlay;\n        }\n      }\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","sourceOld":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb50877dc038c021eba3a70999fd1f6ed85001c1","date":1563596432,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","sourceNew":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (info.clazz == RuntimeLib.class) {\n        if (!RuntimeLib.isEnabled()) {\n          op.addError(\"Solr not started with -Denable.runtime.lib=true\");\n          return overlay;\n        }\n        try {\n          new RuntimeLib(req.getCore().getCoreContainer()).init(new PluginInfo(info.tag, op.getDataMap()));\n        } catch (Exception e) {\n          op.addError(e.getMessage());\n          log.error(\"can't load this plugin \", e);\n          return overlay;\n        }\n      }\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","sourceOld":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if(info.clazz == PluginBag.RuntimeLib.class) {\n        if(!PluginBag.RuntimeLib.isEnabled()){\n          op.addError(\"Solr not started with -Denable.runtime.lib=true\");\n          return overlay;\n        }\n        try {\n          new PluginBag.RuntimeLib(req.getCore()).init(new PluginInfo(info.tag, op.getDataMap()));\n        } catch (Exception e) {\n          op.addError(e.getMessage());\n          log.error(\"can't load this plugin \", e);\n          return overlay;\n        }\n      }\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d52ea0bca71d3b5f5fd37c12585ccd9309f8ea74","date":1563736916,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","sourceNew":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (info.clazz == RuntimeLib.class) {\n        if (!RuntimeLib.isEnabled()) {\n          op.addError(\"Solr not started with -Denable.runtime.lib=true\");\n          return overlay;\n        }\n        try {\n          new RuntimeLib(req.getCore().getCoreContainer()).init(new PluginInfo(info.tag, op.getDataMap()));\n        } catch (Exception e) {\n          op.addError(e.getMessage());\n          log.error(\"can't load this plugin \", e);\n          return overlay;\n        }\n      }\n      if (!verifyClass(op, clz, info)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","sourceOld":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (info.clazz == RuntimeLib.class) {\n        if (!RuntimeLib.isEnabled()) {\n          op.addError(\"Solr not started with -Denable.runtime.lib=true\");\n          return overlay;\n        }\n        try {\n          new RuntimeLib(req.getCore().getCoreContainer()).init(new PluginInfo(info.tag, op.getDataMap()));\n        } catch (Exception e) {\n          op.addError(e.getMessage());\n          log.error(\"can't load this plugin \", e);\n          return overlay;\n        }\n      }\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","sourceNew":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if(info.clazz == PluginBag.RuntimeLib.class) {\n        if(!PluginBag.RuntimeLib.isEnabled()){\n          op.addError(\"Solr not started with -Denable.runtime.lib=true\");\n          return overlay;\n        }\n        try {\n          new PluginBag.RuntimeLib(req.getCore()).init(new PluginInfo(info.tag, op.getDataMap()));\n        } catch (Exception e) {\n          op.addError(e.getMessage());\n          log.error(\"can't load this plugin \", e);\n          return overlay;\n        }\n      }\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","sourceOld":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (info.clazz == RuntimeLib.class) {\n        if (!RuntimeLib.isEnabled()) {\n          op.addError(\"Solr not started with -Denable.runtime.lib=true\");\n          return overlay;\n        }\n        try {\n          new RuntimeLib(req.getCore().getCoreContainer()).init(new PluginInfo(info.tag, op.getDataMap()));\n        } catch (Exception e) {\n          op.addError(e.getMessage());\n          log.error(\"can't load this plugin \", e);\n          return overlay;\n        }\n      }\n      if (!verifyClass(op, clz, info)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","sourceNew":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if(info.clazz == PluginBag.RuntimeLib.class) {\n        if(!PluginBag.RuntimeLib.isEnabled()){\n          op.addError(\"Solr not started with -Denable.runtime.lib=true\");\n          return overlay;\n        }\n        try {\n          new PluginBag.RuntimeLib(req.getCore()).init(new PluginInfo(info.tag, op.getDataMap()));\n        } catch (Exception e) {\n          op.addError(e.getMessage());\n          log.error(\"can't load this plugin \", e);\n          return overlay;\n        }\n      }\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","sourceOld":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (info.clazz == RuntimeLib.class) {\n        if (!RuntimeLib.isEnabled()) {\n          op.addError(\"Solr not started with -Denable.runtime.lib=true\");\n          return overlay;\n        }\n        try {\n          new RuntimeLib(req.getCore().getCoreContainer()).init(new PluginInfo(info.tag, op.getDataMap()));\n        } catch (Exception e) {\n          op.addError(e.getMessage());\n          log.error(\"can't load this plugin \", e);\n          return overlay;\n        }\n      }\n      if (!verifyClass(op, clz, info)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"954ae83b7dfacaa33d48ea056448ae11f7745a93","date":1571867711,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","sourceNew":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (info.clazz == PluginBag.RuntimeLib.class) {\n        if (!PluginBag.RuntimeLib.isEnabled()) {\n          op.addError(\"Solr not started with -Denable.runtime.lib=true\");\n          return overlay;\n        }\n        try {\n          new PluginBag.RuntimeLib(req.getCore()).init(new PluginInfo(info.tag, op.getDataMap()));\n        } catch (Exception e) {\n          op.addError(e.getMessage());\n          log.error(\"can't load this plugin \", e);\n          return overlay;\n        }\n      }\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","sourceOld":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if(info.clazz == PluginBag.RuntimeLib.class) {\n        if(!PluginBag.RuntimeLib.isEnabled()){\n          op.addError(\"Solr not started with -Denable.runtime.lib=true\");\n          return overlay;\n        }\n        try {\n          new PluginBag.RuntimeLib(req.getCore()).init(new PluginInfo(info.tag, op.getDataMap()));\n        } catch (Exception e) {\n          op.addError(e.getMessage());\n          log.error(\"can't load this plugin \", e);\n          return overlay;\n        }\n      }\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba055e19afc289adcb5bedaf68513793a7254012","date":1591268575,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","sourceNew":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (info.clazz == PluginBag.RuntimeLib.class) {\n        if (!PluginBag.RuntimeLib.isEnabled()) {\n          op.addError(\"Solr not started with -Denable.runtime.lib=true\");\n          return overlay;\n        }\n        try {\n          try (PluginBag.RuntimeLib rtl = new PluginBag.RuntimeLib(req.getCore())) {\n            rtl.init(new PluginInfo(info.tag, op.getDataMap()));\n          }\n        } catch (Exception e) {\n          op.addError(e.getMessage());\n          log.error(\"can't load this plugin \", e);\n          return overlay;\n        }\n      }\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","sourceOld":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (info.clazz == PluginBag.RuntimeLib.class) {\n        if (!PluginBag.RuntimeLib.isEnabled()) {\n          op.addError(\"Solr not started with -Denable.runtime.lib=true\");\n          return overlay;\n        }\n        try {\n          new PluginBag.RuntimeLib(req.getCore()).init(new PluginInfo(info.tag, op.getDataMap()));\n        } catch (Exception e) {\n          op.addError(e.getMessage());\n          log.error(\"can't load this plugin \", e);\n          return overlay;\n        }\n      }\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d16198391f70a4ee52a8c8792c91eb87a30f1d6","date":1596695552,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SolrConfigHandler.Command#updateNamedPlugin(SolrConfig.SolrPluginInfo,CommandOperation,ConfigOverlay,boolean).mjava","sourceNew":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","sourceOld":"    private ConfigOverlay updateNamedPlugin(SolrConfig.SolrPluginInfo info, CommandOperation op, ConfigOverlay overlay, boolean isCeate) {\n      String name = op.getStr(NAME);\n      String clz = info.options.contains(REQUIRE_CLASS) ? op.getStr(CLASS_NAME) : op.getStr(CLASS_NAME, null);\n      op.getMap(DEFAULTS, null);\n      op.getMap(PluginInfo.INVARIANTS, null);\n      op.getMap(PluginInfo.APPENDS, null);\n      if (op.hasError()) return overlay;\n      if (info.clazz == PluginBag.RuntimeLib.class) {\n        if (!PluginBag.RuntimeLib.isEnabled()) {\n          op.addError(\"Solr not started with -Denable.runtime.lib=true\");\n          return overlay;\n        }\n        try {\n          try (PluginBag.RuntimeLib rtl = new PluginBag.RuntimeLib(req.getCore())) {\n            rtl.init(new PluginInfo(info.tag, op.getDataMap()));\n          }\n        } catch (Exception e) {\n          op.addError(e.getMessage());\n          log.error(\"can't load this plugin \", e);\n          return overlay;\n        }\n      }\n      if (!verifyClass(op, clz, info.clazz)) return overlay;\n      if (pluginExists(info, overlay, name)) {\n        if (isCeate) {\n          op.addError(formatString(\" ''{0}'' already exists . Do an ''{1}'' , if you want to change it \", name, \"update-\" + info.getTagCleanLower()));\n          return overlay;\n        } else {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        }\n      } else {\n        if (isCeate) {\n          return overlay.addNamedPlugin(op.getDataMap(), info.getCleanTag());\n        } else {\n          op.addError(formatString(\" ''{0}'' does not exist . Do an ''{1}'' , if you want to create it \", name, \"create-\" + info.getTagCleanLower()));\n          return overlay;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"627e70d5711ab39d080a080f089685268525f54d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"d52ea0bca71d3b5f5fd37c12585ccd9309f8ea74":["fb50877dc038c021eba3a70999fd1f6ed85001c1"],"c44cc06c26e456fe9c215072b79fce30babe3975":["d52ea0bca71d3b5f5fd37c12585ccd9309f8ea74"],"be214850f18c80408bcfafd463ec155ab0515aee":["c9f9f3353941a7e1d1addbd7f9f901a292f6a4d1"],"ae2f5be890d26585d438eba0b9cc7d3c0a9775be":["9bdb19206b4aeab66b9fb393c53969f44bdd48be"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["93f558d9f0b5a234a28dcc95036e388fcbbadaf7","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["be214850f18c80408bcfafd463ec155ab0515aee","ae2f5be890d26585d438eba0b9cc7d3c0a9775be"],"954ae83b7dfacaa33d48ea056448ae11f7745a93":["c44cc06c26e456fe9c215072b79fce30babe3975"],"fb50877dc038c021eba3a70999fd1f6ed85001c1":["627e70d5711ab39d080a080f089685268525f54d"],"ba055e19afc289adcb5bedaf68513793a7254012":["954ae83b7dfacaa33d48ea056448ae11f7745a93"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["93f558d9f0b5a234a28dcc95036e388fcbbadaf7","5e8661269ebb23269662a2826882f11611e91d5a"],"5e8661269ebb23269662a2826882f11611e91d5a":["93f558d9f0b5a234a28dcc95036e388fcbbadaf7"],"0d16198391f70a4ee52a8c8792c91eb87a30f1d6":["ba055e19afc289adcb5bedaf68513793a7254012"],"c9f9f3353941a7e1d1addbd7f9f901a292f6a4d1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9bdb19206b4aeab66b9fb393c53969f44bdd48be":["9aea0485ecacb6734c17da2d02569816c23a69c1"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["be214850f18c80408bcfafd463ec155ab0515aee"],"93f558d9f0b5a234a28dcc95036e388fcbbadaf7":["ae2f5be890d26585d438eba0b9cc7d3c0a9775be"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d16198391f70a4ee52a8c8792c91eb87a30f1d6"],"b0b597c65628ca9e73913a07e81691f8229bae35":["d52ea0bca71d3b5f5fd37c12585ccd9309f8ea74","c44cc06c26e456fe9c215072b79fce30babe3975"]},"commit2Childs":{"627e70d5711ab39d080a080f089685268525f54d":["fb50877dc038c021eba3a70999fd1f6ed85001c1"],"d52ea0bca71d3b5f5fd37c12585ccd9309f8ea74":["c44cc06c26e456fe9c215072b79fce30babe3975","b0b597c65628ca9e73913a07e81691f8229bae35"],"c44cc06c26e456fe9c215072b79fce30babe3975":["954ae83b7dfacaa33d48ea056448ae11f7745a93","b0b597c65628ca9e73913a07e81691f8229bae35"],"be214850f18c80408bcfafd463ec155ab0515aee":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","9aea0485ecacb6734c17da2d02569816c23a69c1"],"ae2f5be890d26585d438eba0b9cc7d3c0a9775be":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","93f558d9f0b5a234a28dcc95036e388fcbbadaf7"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"954ae83b7dfacaa33d48ea056448ae11f7745a93":["ba055e19afc289adcb5bedaf68513793a7254012"],"fb50877dc038c021eba3a70999fd1f6ed85001c1":["d52ea0bca71d3b5f5fd37c12585ccd9309f8ea74"],"ba055e19afc289adcb5bedaf68513793a7254012":["0d16198391f70a4ee52a8c8792c91eb87a30f1d6"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["627e70d5711ab39d080a080f089685268525f54d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9f9f3353941a7e1d1addbd7f9f901a292f6a4d1"],"5e8661269ebb23269662a2826882f11611e91d5a":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"0d16198391f70a4ee52a8c8792c91eb87a30f1d6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9f9f3353941a7e1d1addbd7f9f901a292f6a4d1":["be214850f18c80408bcfafd463ec155ab0515aee"],"9bdb19206b4aeab66b9fb393c53969f44bdd48be":["ae2f5be890d26585d438eba0b9cc7d3c0a9775be"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["9bdb19206b4aeab66b9fb393c53969f44bdd48be"],"93f558d9f0b5a234a28dcc95036e388fcbbadaf7":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","5e8661269ebb23269662a2826882f11611e91d5a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}