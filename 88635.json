{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient#addRunner().mjava","commits":[{"id":"50e202028300f452744bbd0e537a0f5c0cf044b6","date":1446478140,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient#addRunner().mjava","pathOld":"/dev/null","sourceNew":"  // *must* be called with runners monitor held, e.g. synchronized(runners){ addRunner() }\n  private void addRunner() {\n    MDC.put(\"ConcurrentUpdateSolrClient.url\", client.getBaseURL());\n    try {\n      Runner r = new Runner();\n      runners.add(r);\n      scheduler.execute(r);  // this can throw an exception if the scheduler has been shutdown, but that should be fine.\n    } finally {\n      MDC.remove(\"ConcurrentUpdateSolrClient.url\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7ca1cace44c816965501b934686a2354382f000","date":1487792658,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient#addRunner().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient#addRunner().mjava","sourceNew":"  // *must* be called with runners monitor held, e.g. synchronized(runners){ addRunner() }\n  private void addRunner() {\n    MDC.put(\"ConcurrentUpdateSolrClient.url\", client.getBaseURL());\n    try {\n      Runner r = new Runner();\n      runners.add(r);\n      \n      scheduler.execute(r);  // this can throw an exception if the scheduler has been shutdown, but that should be fine.\n\n    } finally {\n      MDC.remove(\"ConcurrentUpdateSolrClient.url\");\n    }\n  }\n\n","sourceOld":"  // *must* be called with runners monitor held, e.g. synchronized(runners){ addRunner() }\n  private void addRunner() {\n    MDC.put(\"ConcurrentUpdateSolrClient.url\", client.getBaseURL());\n    try {\n      Runner r = new Runner();\n      runners.add(r);\n      scheduler.execute(r);  // this can throw an exception if the scheduler has been shutdown, but that should be fine.\n    } finally {\n      MDC.remove(\"ConcurrentUpdateSolrClient.url\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61c45e99cf6676da48f19d7511c73712ad39402b","date":1495508331,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient#addRunner().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient#addRunner().mjava","sourceNew":"  // *must* be called with runners monitor held, e.g. synchronized(runners){ addRunner() }\n  private void addRunner() {\n    MDC.put(\"ConcurrentUpdateSolrClient.url\", client.getBaseURL());\n    try {\n      Runner r = new Runner();\n      runners.add(r);\n      try {\n        scheduler.execute(r);  // this can throw an exception if the scheduler has been shutdown, but that should be fine.\n      } catch (RuntimeException e) {\n        runners.remove(r);\n        throw e;\n      }\n    } finally {\n      MDC.remove(\"ConcurrentUpdateSolrClient.url\");\n    }\n  }\n\n","sourceOld":"  // *must* be called with runners monitor held, e.g. synchronized(runners){ addRunner() }\n  private void addRunner() {\n    MDC.put(\"ConcurrentUpdateSolrClient.url\", client.getBaseURL());\n    try {\n      Runner r = new Runner();\n      runners.add(r);\n      \n      scheduler.execute(r);  // this can throw an exception if the scheduler has been shutdown, but that should be fine.\n\n    } finally {\n      MDC.remove(\"ConcurrentUpdateSolrClient.url\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient#addRunner().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient#addRunner().mjava","sourceNew":"  // *must* be called with runners monitor held, e.g. synchronized(runners){ addRunner() }\n  private void addRunner() {\n    MDC.put(\"ConcurrentUpdateSolrClient.url\", client.getBaseURL());\n    try {\n      Runner r = new Runner();\n      runners.add(r);\n      try {\n        scheduler.execute(r);  // this can throw an exception if the scheduler has been shutdown, but that should be fine.\n      } catch (RuntimeException e) {\n        runners.remove(r);\n        throw e;\n      }\n    } finally {\n      MDC.remove(\"ConcurrentUpdateSolrClient.url\");\n    }\n  }\n\n","sourceOld":"  // *must* be called with runners monitor held, e.g. synchronized(runners){ addRunner() }\n  private void addRunner() {\n    MDC.put(\"ConcurrentUpdateSolrClient.url\", client.getBaseURL());\n    try {\n      Runner r = new Runner();\n      runners.add(r);\n      \n      scheduler.execute(r);  // this can throw an exception if the scheduler has been shutdown, but that should be fine.\n\n    } finally {\n      MDC.remove(\"ConcurrentUpdateSolrClient.url\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["c7ca1cace44c816965501b934686a2354382f000","61c45e99cf6676da48f19d7511c73712ad39402b"],"61c45e99cf6676da48f19d7511c73712ad39402b":["c7ca1cace44c816965501b934686a2354382f000"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"50e202028300f452744bbd0e537a0f5c0cf044b6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c7ca1cace44c816965501b934686a2354382f000":["50e202028300f452744bbd0e537a0f5c0cf044b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["61c45e99cf6676da48f19d7511c73712ad39402b"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"61c45e99cf6676da48f19d7511c73712ad39402b":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["50e202028300f452744bbd0e537a0f5c0cf044b6"],"50e202028300f452744bbd0e537a0f5c0cf044b6":["c7ca1cace44c816965501b934686a2354382f000"],"c7ca1cace44c816965501b934686a2354382f000":["e9017cf144952056066919f1ebc7897ff9bd71b1","61c45e99cf6676da48f19d7511c73712ad39402b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}