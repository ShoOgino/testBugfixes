{"path":"solr/core/src/test/org/apache/solr/core/TestSolrXmlPersistence#testMinimalXml().mjava","commits":[{"id":"96a802acd838449b6936d34e464baeeb82f9ef54","date":1371519049,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXmlPersistence#testMinimalXml().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMinimalXml() throws Exception {\n    CoreContainer cc = init(SOLR_XML_MINIMAL, \"SystemVars1\");\n    try {\n      origMatchesPersist(cc, new File(solrHomeDirectory, \"minimal.solr.xml\"));\n    } finally {\n      cc.shutdown();\n      if (solrHomeDirectory.exists()) {\n        FileUtils.deleteDirectory(solrHomeDirectory);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2eea68c999cd25f09e15e71eb2fd57b17f5eca59","date":1371837918,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXmlPersistence#testMinimalXml().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXmlPersistence#testMinimalXml().mjava","sourceNew":"  @Test\n  public void testMinimalXml() throws Exception {\n    CoreContainer cc = init(SOLR_XML_MINIMAL, \"SystemVars1\");\n    try {\n      persistContainedInOrig(cc, new File(solrHomeDirectory, \"minimal.solr.xml\"));\n      origContainedInPersist(cc, new File(solrHomeDirectory, \"minimal.solr.xml\"));\n    } finally {\n      cc.shutdown();\n      if (solrHomeDirectory.exists()) {\n        FileUtils.deleteDirectory(solrHomeDirectory);\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMinimalXml() throws Exception {\n    CoreContainer cc = init(SOLR_XML_MINIMAL, \"SystemVars1\");\n    try {\n      origMatchesPersist(cc, new File(solrHomeDirectory, \"minimal.solr.xml\"));\n    } finally {\n      cc.shutdown();\n      if (solrHomeDirectory.exists()) {\n        FileUtils.deleteDirectory(solrHomeDirectory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXmlPersistence#testMinimalXml().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXmlPersistence#testMinimalXml().mjava","sourceNew":"  @Test\n  public void testMinimalXml() throws Exception {\n    CoreContainer cc = init(SOLR_XML_MINIMAL, \"SystemVars1\");\n    try {\n      cc.shutdown();\n      origMatchesPersist(cc, SOLR_XML_MINIMAL);\n    } finally {\n      cc.shutdown();\n      if (solrHomeDirectory.exists()) {\n        FileUtils.deleteDirectory(solrHomeDirectory);\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMinimalXml() throws Exception {\n    CoreContainer cc = init(SOLR_XML_MINIMAL, \"SystemVars1\");\n    try {\n      persistContainedInOrig(cc, new File(solrHomeDirectory, \"minimal.solr.xml\"));\n      origContainedInPersist(cc, new File(solrHomeDirectory, \"minimal.solr.xml\"));\n    } finally {\n      cc.shutdown();\n      if (solrHomeDirectory.exists()) {\n        FileUtils.deleteDirectory(solrHomeDirectory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXmlPersistence#testMinimalXml().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMinimalXml() throws Exception {\n    CoreContainer cc = init(SOLR_XML_MINIMAL, \"SystemVars1\");\n    try {\n      cc.shutdown();\n      origMatchesPersist(cc, SOLR_XML_MINIMAL);\n    } finally {\n      cc.shutdown();\n      if (solrHomeDirectory.exists()) {\n        FileUtils.deleteDirectory(solrHomeDirectory);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e9ce820cd3ed9efb959c181daaafd22f0c70143","date":1396201051,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXmlPersistence#testMinimalXml().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXmlPersistence#testMinimalXml().mjava","sourceNew":"  @Test\n  public void testMinimalXml() throws Exception {\n    CoreContainer cc = init(SOLR_XML_MINIMAL, \"SystemVars1\");\n    try {\n      cc.shutdown();\n      origMatchesPersist(cc, SOLR_XML_MINIMAL);\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMinimalXml() throws Exception {\n    CoreContainer cc = init(SOLR_XML_MINIMAL, \"SystemVars1\");\n    try {\n      cc.shutdown();\n      origMatchesPersist(cc, SOLR_XML_MINIMAL);\n    } finally {\n      cc.shutdown();\n      if (solrHomeDirectory.exists()) {\n        FileUtils.deleteDirectory(solrHomeDirectory);\n      }\n    }\n  }\n\n","bugFix":["96a802acd838449b6936d34e464baeeb82f9ef54"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXmlPersistence#testMinimalXml().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXmlPersistence#testMinimalXml().mjava","sourceNew":"  @Test\n  public void testMinimalXml() throws Exception {\n    CoreContainer cc = init(SOLR_XML_MINIMAL, \"SystemVars1\");\n    try {\n      cc.shutdown();\n      origMatchesPersist(cc, SOLR_XML_MINIMAL);\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testMinimalXml() throws Exception {\n    CoreContainer cc = init(SOLR_XML_MINIMAL, \"SystemVars1\");\n    try {\n      cc.shutdown();\n      origMatchesPersist(cc, SOLR_XML_MINIMAL);\n    } finally {\n      cc.shutdown();\n      if (solrHomeDirectory.exists()) {\n        FileUtils.deleteDirectory(solrHomeDirectory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXmlPersistence#testMinimalXml().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testMinimalXml() throws Exception {\n    CoreContainer cc = init(SOLR_XML_MINIMAL, \"SystemVars1\");\n    try {\n      cc.shutdown();\n      origMatchesPersist(cc, SOLR_XML_MINIMAL);\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["6e764e9a107f93be9fa3c922bc6a197b3eec387e","1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["2eea68c999cd25f09e15e71eb2fd57b17f5eca59"],"2eea68c999cd25f09e15e71eb2fd57b17f5eca59":["96a802acd838449b6936d34e464baeeb82f9ef54"],"96a802acd838449b6936d34e464baeeb82f9ef54":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"]},"commit2Childs":{"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","96a802acd838449b6936d34e464baeeb82f9ef54"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","37a0f60745e53927c4c876cfe5b5a58170f0646c","1e9ce820cd3ed9efb959c181daaafd22f0c70143"],"1e9ce820cd3ed9efb959c181daaafd22f0c70143":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2eea68c999cd25f09e15e71eb2fd57b17f5eca59":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"96a802acd838449b6936d34e464baeeb82f9ef54":["2eea68c999cd25f09e15e71eb2fd57b17f5eca59"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}