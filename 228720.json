{"path":"src/java/org/apache/lucene/search/NumericRangeQuery#hashCode().mjava","commits":[{"id":"53b6c192847de8643a5da505cc433cbf8476a175","date":1245413392,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/NumericRangeQuery#hashCode().mjava","pathOld":"/dev/null","sourceNew":"  //@Override\n  public final int hashCode() {\n    int hash = Float.floatToIntBits(getBoost()) ^ field.hashCode();\n    hash += precisionStep^0x64365465;\n    if (min != null) hash += min.hashCode()^0x14fa55fb;\n    if (max != null) hash += max.hashCode()^0x733fa5fe;\n    return hash+\n      (Boolean.valueOf(minInclusive).hashCode()^0x14fa55fb)+\n      (Boolean.valueOf(maxInclusive).hashCode()^0x733fa5fe);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5e6095f4816e81955ff9eb0d103188c24cb8081f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"45ede1fd11bf564bb5c8c195d421782675d1e61c","date":1246809712,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/NumericRangeQuery#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/NumericRangeQuery#hashCode().mjava","sourceNew":"  //@Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash += field.hashCode()^0x4565fd66 + precisionStep^0x64365465;\n    if (min != null) hash += min.hashCode()^0x14fa55fb;\n    if (max != null) hash += max.hashCode()^0x733fa5fe;\n    return hash +\n      (Boolean.valueOf(minInclusive).hashCode()^0x14fa55fb)+\n      (Boolean.valueOf(maxInclusive).hashCode()^0x733fa5fe);\n  }\n\n","sourceOld":"  //@Override\n  public final int hashCode() {\n    int hash = Float.floatToIntBits(getBoost()) ^ field.hashCode();\n    hash += precisionStep^0x64365465;\n    if (min != null) hash += min.hashCode()^0x14fa55fb;\n    if (max != null) hash += max.hashCode()^0x733fa5fe;\n    return hash+\n      (Boolean.valueOf(minInclusive).hashCode()^0x14fa55fb)+\n      (Boolean.valueOf(maxInclusive).hashCode()^0x733fa5fe);\n  }\n\n","bugFix":null,"bugIntro":["5e6095f4816e81955ff9eb0d103188c24cb8081f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"70a9e462a51fd525218b83cdc33329f5ee00ca20","date":1254431499,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/NumericRangeQuery#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/NumericRangeQuery#hashCode().mjava","sourceNew":"  @Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash += field.hashCode()^0x4565fd66 + precisionStep^0x64365465;\n    if (min != null) hash += min.hashCode()^0x14fa55fb;\n    if (max != null) hash += max.hashCode()^0x733fa5fe;\n    return hash +\n      (Boolean.valueOf(minInclusive).hashCode()^0x14fa55fb)+\n      (Boolean.valueOf(maxInclusive).hashCode()^0x733fa5fe);\n  }\n\n","sourceOld":"  //@Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash += field.hashCode()^0x4565fd66 + precisionStep^0x64365465;\n    if (min != null) hash += min.hashCode()^0x14fa55fb;\n    if (max != null) hash += max.hashCode()^0x733fa5fe;\n    return hash +\n      (Boolean.valueOf(minInclusive).hashCode()^0x14fa55fb)+\n      (Boolean.valueOf(maxInclusive).hashCode()^0x733fa5fe);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/NumericRangeQuery#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/NumericRangeQuery#hashCode().mjava","sourceNew":"  @Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash += field.hashCode()^0x4565fd66 + precisionStep^0x64365465;\n    if (min != null) hash += min.hashCode()^0x14fa55fb;\n    if (max != null) hash += max.hashCode()^0x733fa5fe;\n    return hash +\n      (Boolean.valueOf(minInclusive).hashCode()^0x14fa55fb)+\n      (Boolean.valueOf(maxInclusive).hashCode()^0x733fa5fe);\n  }\n\n","sourceOld":"  @Override\n  public final int hashCode() {\n    int hash = super.hashCode();\n    hash += field.hashCode()^0x4565fd66 + precisionStep^0x64365465;\n    if (min != null) hash += min.hashCode()^0x14fa55fb;\n    if (max != null) hash += max.hashCode()^0x733fa5fe;\n    return hash +\n      (Boolean.valueOf(minInclusive).hashCode()^0x14fa55fb)+\n      (Boolean.valueOf(maxInclusive).hashCode()^0x733fa5fe);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"45ede1fd11bf564bb5c8c195d421782675d1e61c":["53b6c192847de8643a5da505cc433cbf8476a175"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"70a9e462a51fd525218b83cdc33329f5ee00ca20":["45ede1fd11bf564bb5c8c195d421782675d1e61c"],"53b6c192847de8643a5da505cc433cbf8476a175":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["70a9e462a51fd525218b83cdc33329f5ee00ca20"]},"commit2Childs":{"45ede1fd11bf564bb5c8c195d421782675d1e61c":["70a9e462a51fd525218b83cdc33329f5ee00ca20"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["53b6c192847de8643a5da505cc433cbf8476a175"],"53b6c192847de8643a5da505cc433cbf8476a175":["45ede1fd11bf564bb5c8c195d421782675d1e61c"],"70a9e462a51fd525218b83cdc33329f5ee00ca20":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}