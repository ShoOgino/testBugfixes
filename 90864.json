{"path":"solr/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputStream).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputStream).mjava","pathOld":"/dev/null","sourceNew":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see Config#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputStream is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    InputStream lis = is;\n    if (lis == null)\n      lis = loader.openSchema(name);\n    readSchema(lis);\n    if (lis != is) {\n      try {\n        lis.close();\n      }\n      catch(IOException xio) {} // ignore\n    }\n    loader.inform( loader );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputStream).mjava","sourceNew":null,"sourceOld":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see Config#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputStream is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    InputStream lis = is;\n    if (lis == null)\n      lis = loader.openSchema(name);\n    readSchema(lis);\n    if (lis != is) {\n      try {\n        lis.close();\n      }\n      catch(IOException xio) {} // ignore\n    }\n    loader.inform( loader );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputStream).mjava","pathOld":"src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputStream).mjava","sourceNew":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see Config#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputStream is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    InputStream lis = is;\n    if (lis == null)\n      lis = loader.openSchema(name);\n    readSchema(lis);\n    if (lis != is) {\n      try {\n        lis.close();\n      }\n      catch(IOException xio) {} // ignore\n    }\n    loader.inform( loader );\n  }\n\n","sourceOld":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see Config#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputStream is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    InputStream lis = is;\n    if (lis == null)\n      lis = loader.openSchema(name);\n    readSchema(lis);\n    if (lis != is) {\n      try {\n        lis.close();\n      }\n      catch(IOException xio) {} // ignore\n    }\n    loader.inform( loader );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputStream).mjava","pathOld":"/dev/null","sourceNew":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see Config#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputStream is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    InputStream lis = is;\n    if (lis == null)\n      lis = loader.openSchema(name);\n    readSchema(lis);\n    if (lis != is) {\n      try {\n        lis.close();\n      }\n      catch(IOException xio) {} // ignore\n    }\n    loader.inform( loader );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f16d28cc015e89676eb4465f05e003f430057587","date":1296442780,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputStream).mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputStream).mjava","sourceNew":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputStream is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    InputStream lis = is;\n    if (lis == null)\n      lis = loader.openSchema(name);\n    readSchema(lis);\n    if (lis != is) {\n      try {\n        lis.close();\n      }\n      catch(IOException xio) {} // ignore\n    }\n    loader.inform( loader );\n  }\n\n","sourceOld":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see Config#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputStream is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    InputStream lis = is;\n    if (lis == null)\n      lis = loader.openSchema(name);\n    readSchema(lis);\n    if (lis != is) {\n      try {\n        lis.close();\n      }\n      catch(IOException xio) {} // ignore\n    }\n    loader.inform( loader );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputStream).mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputStream).mjava","sourceNew":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputStream is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    InputStream lis = is;\n    if (lis == null)\n      lis = loader.openSchema(name);\n    readSchema(lis);\n    if (lis != is) {\n      try {\n        lis.close();\n      }\n      catch(IOException xio) {} // ignore\n    }\n    loader.inform( loader );\n  }\n\n","sourceOld":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see Config#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputStream is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    InputStream lis = is;\n    if (lis == null)\n      lis = loader.openSchema(name);\n    readSchema(lis);\n    if (lis != is) {\n      try {\n        lis.close();\n      }\n      catch(IOException xio) {} // ignore\n    }\n    loader.inform( loader );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputStream).mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputStream).mjava","sourceNew":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputStream is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    InputStream lis = is;\n    if (lis == null)\n      lis = loader.openSchema(name);\n    readSchema(lis);\n    if (lis != is) {\n      try {\n        lis.close();\n      }\n      catch(IOException xio) {} // ignore\n    }\n    loader.inform( loader );\n  }\n\n","sourceOld":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see Config#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputStream is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    InputStream lis = is;\n    if (lis == null)\n      lis = loader.openSchema(name);\n    readSchema(lis);\n    if (lis != is) {\n      try {\n        lis.close();\n      }\n      catch(IOException xio) {} // ignore\n    }\n    loader.inform( loader );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b24326411db492f92ea49f6fb947c90bc73cf19e","date":1298813468,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputSource).mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputStream).mjava","sourceNew":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputSource is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    if (is == null) {\n      is = new InputSource(loader.openSchema(name));\n      is.setSystemId(SystemIdResolver.createSystemIdFromResourceName(name));\n    }\n    readSchema(is);\n    loader.inform( loader );\n  }\n\n","sourceOld":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputStream is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    InputStream lis = is;\n    if (lis == null)\n      lis = loader.openSchema(name);\n    readSchema(lis);\n    if (lis != is) {\n      try {\n        lis.close();\n      }\n      catch(IOException xio) {} // ignore\n    }\n    loader.inform( loader );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputStream).mjava","sourceNew":null,"sourceOld":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputStream is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    InputStream lis = is;\n    if (lis == null)\n      lis = loader.openSchema(name);\n    readSchema(lis);\n    if (lis != is) {\n      try {\n        lis.close();\n      }\n      catch(IOException xio) {} // ignore\n    }\n    loader.inform( loader );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#IndexSchema(SolrConfig,String,InputStream).mjava","sourceNew":null,"sourceOld":"    /**\n   * Constructs a schema using the specified resource name and stream.\n   * If the is stream is null, the resource loader will load the schema resource by name.\n   * @see SolrResourceLoader#openSchema\n   * By default, this follows the normal config path directory searching rules.\n   * @see SolrResourceLoader#openResource\n   */\n  public IndexSchema(SolrConfig solrConfig, String name, InputStream is) {\n    this.solrConfig = solrConfig;\n    if (name == null)\n      name = DEFAULT_SCHEMA_FILE;\n    this.resourceName = name;\n    loader = solrConfig.getResourceLoader();\n    InputStream lis = is;\n    if (lis == null)\n      lis = loader.openSchema(name);\n    readSchema(lis);\n    if (lis != is) {\n      try {\n        lis.close();\n      }\n      catch(IOException xio) {} // ignore\n    }\n    loader.inform( loader );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"f16d28cc015e89676eb4465f05e003f430057587":["1da8d55113b689b06716246649de6f62430f15c0"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"b24326411db492f92ea49f6fb947c90bc73cf19e":["f16d28cc015e89676eb4465f05e003f430057587"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["bde51b089eb7f86171eb3406e38a274743f9b7ac","b24326411db492f92ea49f6fb947c90bc73cf19e"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["29ef99d61cda9641b6250bf9567329a6e65f901d","b24326411db492f92ea49f6fb947c90bc73cf19e"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["1da8d55113b689b06716246649de6f62430f15c0","f16d28cc015e89676eb4465f05e003f430057587"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["1da8d55113b689b06716246649de6f62430f15c0","f16d28cc015e89676eb4465f05e003f430057587"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b24326411db492f92ea49f6fb947c90bc73cf19e"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"f16d28cc015e89676eb4465f05e003f430057587":["b24326411db492f92ea49f6fb947c90bc73cf19e","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"1da8d55113b689b06716246649de6f62430f15c0":["f16d28cc015e89676eb4465f05e003f430057587","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"b24326411db492f92ea49f6fb947c90bc73cf19e":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}