{"path":"src/java/org/apache/lucene/analysis/CharArraySet#contains(char[],int).mjava","commits":[{"id":"6864413dbc0c12104c978c05456f3da1d45adb03","date":1186770873,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArraySet#contains(char[],int).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns true if the characters in text up to length\n   *  len is present in the set. */\n  public boolean contains(char[] text, int len) {\n    int code = getHashCode(text, len);\n    int pos = code & mask;\n    char[] text2 = entries[pos];\n    if (text2 != null && !equals(text, len, text2)) {\n      final int inc = code*1347|1;\n      do {\n        code += inc;\n        pos = code & mask;\n        text2 = entries[pos];\n      } while (text2 != null && !equals(text, len, text2));\n    }\n    return text2 != null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95fcbec956d64aff326919be88d27ba5b60c046e","date":1187017143,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArraySet#contains(char[],int).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArraySet#contains(char[],int).mjava","sourceNew":"  /** Returns true if the characters in text up to length\n   *  len is present in the set. */\n  public boolean contains(char[] text, int len) {\n    int code = getHashCode(text, len);\n    int pos = code & mask;\n    char[] text2 = entries[pos];\n    if (text2 != null && !equals(text, len, text2)) {\n      final int inc = ((code>>8)+code)|1;\n      do {\n        code += inc;\n        pos = code & mask;\n        text2 = entries[pos];\n      } while (text2 != null && !equals(text, len, text2));\n    }\n    return text2 != null;\n  }\n\n","sourceOld":"  /** Returns true if the characters in text up to length\n   *  len is present in the set. */\n  public boolean contains(char[] text, int len) {\n    int code = getHashCode(text, len);\n    int pos = code & mask;\n    char[] text2 = entries[pos];\n    if (text2 != null && !equals(text, len, text2)) {\n      final int inc = code*1347|1;\n      do {\n        code += inc;\n        pos = code & mask;\n        text2 = entries[pos];\n      } while (text2 != null && !equals(text, len, text2));\n    }\n    return text2 != null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"050b03edbe9b8423ff4c09685c6f03d900e86b83","date":1195514584,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArraySet#getSlot(char[],int,int).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArraySet#contains(char[],int).mjava","sourceNew":"  private int getSlot(char[] text, int off, int len) {\n    int code = getHashCode(text, len);\n    int pos = code & (entries.length-1);\n    char[] text2 = entries[pos];\n    if (text2 != null && !equals(text, off, len, text2)) {\n      final int inc = ((code>>8)+code)|1;\n      do {\n        code += inc;\n        pos = code & (entries.length-1);\n        text2 = entries[pos];\n      } while (text2 != null && !equals(text, off, len, text2));\n    }\n    return pos;\n  }\n\n","sourceOld":"  /** Returns true if the characters in text up to length\n   *  len is present in the set. */\n  public boolean contains(char[] text, int len) {\n    int code = getHashCode(text, len);\n    int pos = code & mask;\n    char[] text2 = entries[pos];\n    if (text2 != null && !equals(text, len, text2)) {\n      final int inc = ((code>>8)+code)|1;\n      do {\n        code += inc;\n        pos = code & mask;\n        text2 = entries[pos];\n      } while (text2 != null && !equals(text, len, text2));\n    }\n    return text2 != null;\n  }\n\n","bugFix":null,"bugIntro":["b9d74f8959bf981a44d81bdca4690869cd137de2"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"95fcbec956d64aff326919be88d27ba5b60c046e":["6864413dbc0c12104c978c05456f3da1d45adb03"],"6864413dbc0c12104c978c05456f3da1d45adb03":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"050b03edbe9b8423ff4c09685c6f03d900e86b83":["95fcbec956d64aff326919be88d27ba5b60c046e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["050b03edbe9b8423ff4c09685c6f03d900e86b83"]},"commit2Childs":{"95fcbec956d64aff326919be88d27ba5b60c046e":["050b03edbe9b8423ff4c09685c6f03d900e86b83"],"6864413dbc0c12104c978c05456f3da1d45adb03":["95fcbec956d64aff326919be88d27ba5b60c046e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6864413dbc0c12104c978c05456f3da1d45adb03"],"050b03edbe9b8423ff4c09685c6f03d900e86b83":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}