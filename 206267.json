{"path":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(IndexReader,AttributeSource).mjava","commits":[{"id":"33a8b1f99104f4144f210f5d068411c297cd7163","date":1287152748,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(IndexReader,AttributeSource).mjava","pathOld":"/dev/null","sourceNew":"  /** Construct the enumeration to be used, expanding the\n   *  pattern term.  This method should only be called if\n   *  the field exists (ie, implementations can assume the\n   *  field does exist).  This method should not return null\n   *  (should instead return {@link TermsEnum#EMPTY} if no\n   *  terms match).  The TermsEnum must already be\n   *  positioned to the first matching term.\n   * The given {@link AttributeSource} is passed by the {@link RewriteMethod} to\n   * provide attributes, the rewrite method uses to inform about e.g. maximum competitive boosts.\n   * This is currently only used by {@link TopTermsBooleanQueryRewrite}\n   */\n  protected abstract TermsEnum getTermsEnum(IndexReader reader, AttributeSource atts) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(IndexReader,AttributeSource).mjava","pathOld":"/dev/null","sourceNew":"  /** Construct the enumeration to be used, expanding the\n   *  pattern term.  This method should only be called if\n   *  the field exists (ie, implementations can assume the\n   *  field does exist).  This method should not return null\n   *  (should instead return {@link TermsEnum#EMPTY} if no\n   *  terms match).  The TermsEnum must already be\n   *  positioned to the first matching term.\n   * The given {@link AttributeSource} is passed by the {@link RewriteMethod} to\n   * provide attributes, the rewrite method uses to inform about e.g. maximum competitive boosts.\n   * This is currently only used by {@link TopTermsBooleanQueryRewrite}\n   */\n  protected abstract TermsEnum getTermsEnum(IndexReader reader, AttributeSource atts) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"744486748bc5bee772100e49230e5bca39bac99a","date":1289776426,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(IndexReader,AttributeSource).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(IndexReader,AttributeSource).mjava","sourceNew":"  /** Construct the enumeration to be used, expanding the\n   *  pattern term.  This method should only be called if\n   *  the field exists (ie, implementations can assume the\n   *  field does exist).  This method should not return null\n   *  (should instead return {@link TermsEnum#EMPTY} if no\n   *  terms match).  The TermsEnum must already be\n   *  positioned to the first matching term.\n   * The given {@link AttributeSource} is passed by the {@link RewriteMethod} to\n   * provide attributes, the rewrite method uses to inform about e.g. maximum competitive boosts.\n   * This is currently only used by {@link TopTermsRewrite}\n   */\n  protected abstract TermsEnum getTermsEnum(IndexReader reader, AttributeSource atts) throws IOException;\n\n","sourceOld":"  /** Construct the enumeration to be used, expanding the\n   *  pattern term.  This method should only be called if\n   *  the field exists (ie, implementations can assume the\n   *  field does exist).  This method should not return null\n   *  (should instead return {@link TermsEnum#EMPTY} if no\n   *  terms match).  The TermsEnum must already be\n   *  positioned to the first matching term.\n   * The given {@link AttributeSource} is passed by the {@link RewriteMethod} to\n   * provide attributes, the rewrite method uses to inform about e.g. maximum competitive boosts.\n   * This is currently only used by {@link TopTermsBooleanQueryRewrite}\n   */\n  protected abstract TermsEnum getTermsEnum(IndexReader reader, AttributeSource atts) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ab1f5591dc05f1f2b5407d809c9699f75554a32","date":1290008586,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(IndexReader,AttributeSource).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(IndexReader,AttributeSource).mjava","sourceNew":"  /** Construct the enumeration to be used, expanding the\n   *  pattern term.  This method should only be called if\n   *  the field exists (ie, implementations can assume the\n   *  field does exist).  This method should not return null\n   *  (should instead return {@link TermsEnum#EMPTY} if no\n   *  terms match).  The TermsEnum must already be\n   *  positioned to the first matching term.\n   * The given {@link AttributeSource} is passed by the {@link RewriteMethod} to\n   * provide attributes, the rewrite method uses to inform about e.g. maximum competitive boosts.\n   * This is currently only used by {@link TopTermsRewrite}\n   */\n  protected abstract TermsEnum getTermsEnum(IndexReader reader, AttributeSource atts) throws IOException;\n\n","sourceOld":"  /** Construct the enumeration to be used, expanding the\n   *  pattern term.  This method should only be called if\n   *  the field exists (ie, implementations can assume the\n   *  field does exist).  This method should not return null\n   *  (should instead return {@link TermsEnum#EMPTY} if no\n   *  terms match).  The TermsEnum must already be\n   *  positioned to the first matching term.\n   * The given {@link AttributeSource} is passed by the {@link RewriteMethod} to\n   * provide attributes, the rewrite method uses to inform about e.g. maximum competitive boosts.\n   * This is currently only used by {@link TopTermsBooleanQueryRewrite}\n   */\n  protected abstract TermsEnum getTermsEnum(IndexReader reader, AttributeSource atts) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8dd2a69747e9f2922fd8b6970bd1661b26a692d","date":1291080135,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(Terms,AttributeSource).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(IndexReader,AttributeSource).mjava","sourceNew":"  /** Construct the enumeration to be used, expanding the\n   *  pattern term.  This method should only be called if\n   *  the field exists (ie, implementations can assume the\n   *  field does exist).  This method should not return null\n   *  (should instead return {@link TermsEnum#EMPTY} if no\n   *  terms match).  The TermsEnum must already be\n   *  positioned to the first matching term.\n   * The given {@link AttributeSource} is passed by the {@link RewriteMethod} to\n   * provide attributes, the rewrite method uses to inform about e.g. maximum competitive boosts.\n   * This is currently only used by {@link TopTermsRewrite}\n   */\n  protected abstract TermsEnum getTermsEnum(Terms terms, AttributeSource atts) throws IOException;\n\n","sourceOld":"  /** Construct the enumeration to be used, expanding the\n   *  pattern term.  This method should only be called if\n   *  the field exists (ie, implementations can assume the\n   *  field does exist).  This method should not return null\n   *  (should instead return {@link TermsEnum#EMPTY} if no\n   *  terms match).  The TermsEnum must already be\n   *  positioned to the first matching term.\n   * The given {@link AttributeSource} is passed by the {@link RewriteMethod} to\n   * provide attributes, the rewrite method uses to inform about e.g. maximum competitive boosts.\n   * This is currently only used by {@link TopTermsRewrite}\n   */\n  protected abstract TermsEnum getTermsEnum(IndexReader reader, AttributeSource atts) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(IndexReader,AttributeSource).mjava","sourceNew":null,"sourceOld":"  /** Construct the enumeration to be used, expanding the\n   *  pattern term.  This method should only be called if\n   *  the field exists (ie, implementations can assume the\n   *  field does exist).  This method should not return null\n   *  (should instead return {@link TermsEnum#EMPTY} if no\n   *  terms match).  The TermsEnum must already be\n   *  positioned to the first matching term.\n   * The given {@link AttributeSource} is passed by the {@link RewriteMethod} to\n   * provide attributes, the rewrite method uses to inform about e.g. maximum competitive boosts.\n   * This is currently only used by {@link TopTermsRewrite}\n   */\n  protected abstract TermsEnum getTermsEnum(IndexReader reader, AttributeSource atts) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"33a8b1f99104f4144f210f5d068411c297cd7163":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","744486748bc5bee772100e49230e5bca39bac99a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","33a8b1f99104f4144f210f5d068411c297cd7163"],"e8dd2a69747e9f2922fd8b6970bd1661b26a692d":["744486748bc5bee772100e49230e5bca39bac99a"],"744486748bc5bee772100e49230e5bca39bac99a":["33a8b1f99104f4144f210f5d068411c297cd7163"],"3bb13258feba31ab676502787ab2e1779f129b7a":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","e8dd2a69747e9f2922fd8b6970bd1661b26a692d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e8dd2a69747e9f2922fd8b6970bd1661b26a692d"]},"commit2Childs":{"33a8b1f99104f4144f210f5d068411c297cd7163":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","744486748bc5bee772100e49230e5bca39bac99a"],"9ab1f5591dc05f1f2b5407d809c9699f75554a32":["3bb13258feba31ab676502787ab2e1779f129b7a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["33a8b1f99104f4144f210f5d068411c297cd7163","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["9ab1f5591dc05f1f2b5407d809c9699f75554a32"],"744486748bc5bee772100e49230e5bca39bac99a":["9ab1f5591dc05f1f2b5407d809c9699f75554a32","e8dd2a69747e9f2922fd8b6970bd1661b26a692d"],"e8dd2a69747e9f2922fd8b6970bd1661b26a692d":["3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}