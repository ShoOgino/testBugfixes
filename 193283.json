{"path":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#tearDown().mjava","commits":[{"id":"1cfa38e36fa296bb93d77df7d5556257dffa4535","date":1362635543,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#tearDown().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  @After\n  public void tearDown() throws Exception {\n    super.tearDown();\n    resetExceptionIgnores();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abb23fcc2461782ab204e61213240feb77d355aa","date":1422029612,"type":4,"author":"Erick Erickson","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#tearDown().mjava","sourceNew":null,"sourceOld":"  @Override\n  @After\n  public void tearDown() throws Exception {\n    super.tearDown();\n    resetExceptionIgnores();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b10ab715806383f3d7f9eece13c26772a9116022","date":1517176579,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#tearDown().mjava","pathOld":"/dev/null","sourceNew":"  @After\n  @Override\n  public void tearDown() throws Exception {\n    super.tearDown();\n    IOUtils.close(solrClient, httpClient);\n\n    // make sure all aliases created are removed for the next test method\n    Map<String, String> aliases = new CollectionAdminRequest.ListAliases().process(cluster.getSolrClient()).getAliases();\n    for (String alias : aliases.keySet()) {\n      CollectionAdminRequest.deleteAlias(alias).processAsync(cluster.getSolrClient());\n    }\n\n    // make sure all collections are removed for the next test method\n    List<String> collections = CollectionAdminRequest.listCollections(cluster.getSolrClient());\n    for (String collection : collections) {\n      CollectionAdminRequest.deleteCollection(collection).process(cluster.getSolrClient());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e705fabc1ee9da046632e07d06bb186b65eb1562","date":1517197693,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#tearDown().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#tearDown().mjava","sourceNew":"  @After\n  @Override\n  public void tearDown() throws Exception {\n    super.tearDown();\n    IOUtils.close(solrClient, httpClient);\n\n    // make sure all aliases created are removed for the next test method\n    Map<String, String> aliases = new CollectionAdminRequest.ListAliases().process(cluster.getSolrClient()).getAliases();\n    for (String alias : aliases.keySet()) {\n      CollectionAdminRequest.deleteAlias(alias).process(cluster.getSolrClient());\n    }\n\n    cluster.deleteAllCollections();\n  }\n\n","sourceOld":"  @After\n  @Override\n  public void tearDown() throws Exception {\n    super.tearDown();\n    IOUtils.close(solrClient, httpClient);\n\n    // make sure all aliases created are removed for the next test method\n    Map<String, String> aliases = new CollectionAdminRequest.ListAliases().process(cluster.getSolrClient()).getAliases();\n    for (String alias : aliases.keySet()) {\n      CollectionAdminRequest.deleteAlias(alias).processAsync(cluster.getSolrClient());\n    }\n\n    // make sure all collections are removed for the next test method\n    List<String> collections = CollectionAdminRequest.listCollections(cluster.getSolrClient());\n    for (String collection : collections) {\n      CollectionAdminRequest.deleteCollection(collection).process(cluster.getSolrClient());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db3a95645baea7e03cf8ae62147cba606639004e","date":1525745850,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#tearDown().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#tearDown().mjava","sourceNew":"  @After\n  @Override\n  public void tearDown() throws Exception {\n    super.tearDown();\n    IOUtils.close(solrClient, httpClient);\n\n    cluster.deleteAllCollections(); // note: deletes aliases too\n  }\n\n","sourceOld":"  @After\n  @Override\n  public void tearDown() throws Exception {\n    super.tearDown();\n    IOUtils.close(solrClient, httpClient);\n\n    // make sure all aliases created are removed for the next test method\n    Map<String, String> aliases = new CollectionAdminRequest.ListAliases().process(cluster.getSolrClient()).getAliases();\n    for (String alias : aliases.keySet()) {\n      CollectionAdminRequest.deleteAlias(alias).process(cluster.getSolrClient());\n    }\n\n    cluster.deleteAllCollections();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e705fabc1ee9da046632e07d06bb186b65eb1562":["b10ab715806383f3d7f9eece13c26772a9116022"],"abb23fcc2461782ab204e61213240feb77d355aa":["1cfa38e36fa296bb93d77df7d5556257dffa4535"],"1cfa38e36fa296bb93d77df7d5556257dffa4535":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db3a95645baea7e03cf8ae62147cba606639004e":["e705fabc1ee9da046632e07d06bb186b65eb1562"],"b10ab715806383f3d7f9eece13c26772a9116022":["abb23fcc2461782ab204e61213240feb77d355aa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["db3a95645baea7e03cf8ae62147cba606639004e"]},"commit2Childs":{"e705fabc1ee9da046632e07d06bb186b65eb1562":["db3a95645baea7e03cf8ae62147cba606639004e"],"abb23fcc2461782ab204e61213240feb77d355aa":["b10ab715806383f3d7f9eece13c26772a9116022"],"1cfa38e36fa296bb93d77df7d5556257dffa4535":["abb23fcc2461782ab204e61213240feb77d355aa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1cfa38e36fa296bb93d77df7d5556257dffa4535"],"db3a95645baea7e03cf8ae62147cba606639004e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b10ab715806383f3d7f9eece13c26772a9116022":["e705fabc1ee9da046632e07d06bb186b65eb1562"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}