{"path":"solr/src/java/org/apache/solr/update/UpdateHandler.DeleteHitCollector#collect(int).mjava","commits":[{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/update/UpdateHandler.DeleteHitCollector#collect(int).mjava","pathOld":"src/java/org/apache/solr/update/UpdateHandler.DeleteHitCollector#collect(int).mjava","sourceNew":"    @Override\n    public void collect(int doc) {\n      try {\n        searcher.getReader().deleteDocument(doc + docBase);\n        deleted++;\n      } catch (IOException e) {\n        // don't try to close the searcher on failure for now...\n        // try { closeSearcher(); } catch (Exception ee) { SolrException.log(log,ee); }\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error deleting doc# \"+doc,e,false);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc) {\n      try {\n        searcher.getReader().deleteDocument(doc + docBase);\n        deleted++;\n      } catch (IOException e) {\n        // don't try to close the searcher on failure for now...\n        // try { closeSearcher(); } catch (Exception ee) { SolrException.log(log,ee); }\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error deleting doc# \"+doc,e,false);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/update/UpdateHandler.DeleteHitCollector#collect(int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void collect(int doc) {\n      try {\n        searcher.getReader().deleteDocument(doc + docBase);\n        deleted++;\n      } catch (IOException e) {\n        // don't try to close the searcher on failure for now...\n        // try { closeSearcher(); } catch (Exception ee) { SolrException.log(log,ee); }\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error deleting doc# \"+doc,e,false);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c220849f876de24a79f756f65b3eb045db59f63f","date":1294902803,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/update/UpdateHandler.DeleteHitCollector#collect(int).mjava","pathOld":"solr/src/java/org/apache/solr/update/UpdateHandler.DeleteHitCollector#collect(int).mjava","sourceNew":"    @Override\n    public void collect(int doc) {\n      try {\n        searcher.getIndexReader().deleteDocument(doc + docBase);\n        deleted++;\n      } catch (IOException e) {\n        // don't try to close the searcher on failure for now...\n        // try { closeSearcher(); } catch (Exception ee) { SolrException.log(log,ee); }\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error deleting doc# \"+doc,e,false);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc) {\n      try {\n        searcher.getReader().deleteDocument(doc + docBase);\n        deleted++;\n      } catch (IOException e) {\n        // don't try to close the searcher on failure for now...\n        // try { closeSearcher(); } catch (Exception ee) { SolrException.log(log,ee); }\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error deleting doc# \"+doc,e,false);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/update/UpdateHandler.DeleteHitCollector#collect(int).mjava","pathOld":"solr/src/java/org/apache/solr/update/UpdateHandler.DeleteHitCollector#collect(int).mjava","sourceNew":"    @Override\n    public void collect(int doc) {\n      try {\n        searcher.getIndexReader().deleteDocument(doc + docBase);\n        deleted++;\n      } catch (IOException e) {\n        // don't try to close the searcher on failure for now...\n        // try { closeSearcher(); } catch (Exception ee) { SolrException.log(log,ee); }\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error deleting doc# \"+doc,e,false);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc) {\n      try {\n        searcher.getReader().deleteDocument(doc + docBase);\n        deleted++;\n      } catch (IOException e) {\n        // don't try to close the searcher on failure for now...\n        // try { closeSearcher(); } catch (Exception ee) { SolrException.log(log,ee); }\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error deleting doc# \"+doc,e,false);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/update/UpdateHandler.DeleteHitCollector#collect(int).mjava","pathOld":"solr/src/java/org/apache/solr/update/UpdateHandler.DeleteHitCollector#collect(int).mjava","sourceNew":"    @Override\n    public void collect(int doc) {\n      try {\n        searcher.getIndexReader().deleteDocument(doc + docBase);\n        deleted++;\n      } catch (IOException e) {\n        // don't try to close the searcher on failure for now...\n        // try { closeSearcher(); } catch (Exception ee) { SolrException.log(log,ee); }\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error deleting doc# \"+doc,e,false);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc) {\n      try {\n        searcher.getReader().deleteDocument(doc + docBase);\n        deleted++;\n      } catch (IOException e) {\n        // don't try to close the searcher on failure for now...\n        // try { closeSearcher(); } catch (Exception ee) { SolrException.log(log,ee); }\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error deleting doc# \"+doc,e,false);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateHandler.DeleteHitCollector#collect(int).mjava","pathOld":"solr/src/java/org/apache/solr/update/UpdateHandler.DeleteHitCollector#collect(int).mjava","sourceNew":"    @Override\n    public void collect(int doc) {\n      try {\n        searcher.getIndexReader().deleteDocument(doc + docBase);\n        deleted++;\n      } catch (IOException e) {\n        // don't try to close the searcher on failure for now...\n        // try { closeSearcher(); } catch (Exception ee) { SolrException.log(log,ee); }\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error deleting doc# \"+doc,e,false);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc) {\n      try {\n        searcher.getIndexReader().deleteDocument(doc + docBase);\n        deleted++;\n      } catch (IOException e) {\n        // don't try to close the searcher on failure for now...\n        // try { closeSearcher(); } catch (Exception ee) { SolrException.log(log,ee); }\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error deleting doc# \"+doc,e,false);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateHandler.DeleteHitCollector#collect(int).mjava","pathOld":"solr/src/java/org/apache/solr/update/UpdateHandler.DeleteHitCollector#collect(int).mjava","sourceNew":"    @Override\n    public void collect(int doc) {\n      try {\n        searcher.getIndexReader().deleteDocument(doc + docBase);\n        deleted++;\n      } catch (IOException e) {\n        // don't try to close the searcher on failure for now...\n        // try { closeSearcher(); } catch (Exception ee) { SolrException.log(log,ee); }\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error deleting doc# \"+doc,e,false);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc) {\n      try {\n        searcher.getIndexReader().deleteDocument(doc + docBase);\n        deleted++;\n      } catch (IOException e) {\n        // don't try to close the searcher on failure for now...\n        // try { closeSearcher(); } catch (Exception ee) { SolrException.log(log,ee); }\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error deleting doc# \"+doc,e,false);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateHandler.DeleteHitCollector#collect(int).mjava","pathOld":"solr/src/java/org/apache/solr/update/UpdateHandler.DeleteHitCollector#collect(int).mjava","sourceNew":"    @Override\n    public void collect(int doc) {\n      try {\n        searcher.getIndexReader().deleteDocument(doc + docBase);\n        deleted++;\n      } catch (IOException e) {\n        // don't try to close the searcher on failure for now...\n        // try { closeSearcher(); } catch (Exception ee) { SolrException.log(log,ee); }\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error deleting doc# \"+doc,e,false);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void collect(int doc) {\n      try {\n        searcher.getIndexReader().deleteDocument(doc + docBase);\n        deleted++;\n      } catch (IOException e) {\n        // don't try to close the searcher on failure for now...\n        // try { closeSearcher(); } catch (Exception ee) { SolrException.log(log,ee); }\n        throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Error deleting doc# \"+doc,e,false);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ad94625fb8d088209f46650c8097196fec67f00c"],"c220849f876de24a79f756f65b3eb045db59f63f":["1da8d55113b689b06716246649de6f62430f15c0"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c220849f876de24a79f756f65b3eb045db59f63f"],"c26f00b574427b55127e869b935845554afde1fa":["c220849f876de24a79f756f65b3eb045db59f63f","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["1da8d55113b689b06716246649de6f62430f15c0","c220849f876de24a79f756f65b3eb045db59f63f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["c220849f876de24a79f756f65b3eb045db59f63f"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["1da8d55113b689b06716246649de6f62430f15c0","c220849f876de24a79f756f65b3eb045db59f63f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["c220849f876de24a79f756f65b3eb045db59f63f","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"c220849f876de24a79f756f65b3eb045db59f63f":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1da8d55113b689b06716246649de6f62430f15c0"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}