{"path":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#testSimple().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#testSimple().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDocCount#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    assumeFalse(\"PreFlex codec does not support docCount statistic!\", \n        \"Lucene3x\".equals(Codec.getDefault().getName()));\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; i++) {\n      iw.addDocument(doc());\n    }\n    IndexReader ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.forceMerge(1);\n    ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    assumeFalse(\"PreFlex codec does not support docCount statistic!\", \n        \"Lucene3x\".equals(Codec.getDefault().getName()));\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; i++) {\n      iw.addDocument(doc());\n    }\n    IndexReader ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.forceMerge(1);\n    ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#testSimple().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    assumeFalse(\"PreFlex codec does not support docCount statistic!\", \n        \"Lucene3x\".equals(Codec.getDefault().getName()));\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; i++) {\n      iw.addDocument(doc());\n    }\n    IndexReader ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.forceMerge(1);\n    ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    assumeFalse(\"PreFlex codec does not support docCount statistic!\", \n        \"Lucene3x\".equals(Codec.getDefault().getName()));\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random, dir);\n    int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; i++) {\n      iw.addDocument(doc());\n    }\n    IndexReader ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.forceMerge(1);\n    ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75b4d037d2c8fd7d68c07be61d25c0260cf8091e","date":1336829560,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#testSimple().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; i++) {\n      iw.addDocument(doc());\n    }\n    IndexReader ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.forceMerge(1);\n    ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    assumeFalse(\"PreFlex codec does not support docCount statistic!\", \n        \"Lucene3x\".equals(Codec.getDefault().getName()));\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; i++) {\n      iw.addDocument(doc());\n    }\n    IndexReader ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.forceMerge(1);\n    ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#testSimple().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; i++) {\n      iw.addDocument(doc());\n    }\n    IndexReader ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.forceMerge(1);\n    ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; i++) {\n      iw.addDocument(doc());\n    }\n    IndexReader ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.forceMerge(1);\n    ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#testSimple().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocCount#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; i++) {\n      iw.addDocument(doc());\n    }\n    IndexReader ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.forceMerge(1);\n    ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir);\n    int numDocs = atLeast(100);\n    for (int i = 0; i < numDocs; i++) {\n      iw.addDocument(doc());\n    }\n    IndexReader ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.forceMerge(1);\n    ir = iw.getReader();\n    verifyCount(ir);\n    ir.close();\n    iw.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["75b4d037d2c8fd7d68c07be61d25c0260cf8091e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"75b4d037d2c8fd7d68c07be61d25c0260cf8091e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["75b4d037d2c8fd7d68c07be61d25c0260cf8091e"],"75b4d037d2c8fd7d68c07be61d25c0260cf8091e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}