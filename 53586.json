{"path":"solr/core/src/test/org/apache/solr/update/processor/DimensionalRoutedAliasUpdateProcessorTest#testFailedDocument(String,String,String).mjava","commits":[{"id":"1eebf1b080530bdd7572c4927fb2bb52334b7a86","date":1563199033,"type":0,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/DimensionalRoutedAliasUpdateProcessorTest#testFailedDocument(String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void testFailedDocument(String category, String timestamp, String errorMsg) throws SolrServerException, IOException {\n    try {\n      final UpdateResponse resp = solrClient.add(getAlias(), newDoc(category, timestamp));\n      // if we have a TolerantUpdateProcessor then we see it there)\n      final Object errors = resp.getResponseHeader().get(\"errors\"); // Tolerant URP\n      assertTrue(errors != null && errors.toString().contains(errorMsg));\n    } catch (SolrException e) {\n      assertTrue(e.getMessage().contains(errorMsg));\n    }\n    numDocsDeletedOrFailed++;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56aa6ff4cdf3147154a86d7c22a8a2615869e772","date":1570745842,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/DimensionalRoutedAliasUpdateProcessorTest#testFailedDocument(String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/DimensionalRoutedAliasUpdateProcessorTest#testFailedDocument(String,String,String).mjava","sourceNew":"  private void testFailedDocument(String category, String timestamp, String errorMsg) throws SolrServerException, IOException {\n    try {\n      final UpdateResponse resp = solrClient.add(getAlias(), newDoc(category, timestamp));\n      // if we have a TolerantUpdateProcessor then we see it there)\n      final Object errors = resp.getResponseHeader().get(\"errors\"); // Tolerant URP\n      assertTrue(errors != null && errors.toString().contains(errorMsg));\n    } catch (SolrException e) {\n      String message = e.getMessage();\n      assertTrue(\"expected message to contain\" + errorMsg + \" but message was \" + message , message.contains(errorMsg));\n    }\n    numDocsDeletedOrFailed++;\n  }\n\n","sourceOld":"  private void testFailedDocument(String category, String timestamp, String errorMsg) throws SolrServerException, IOException {\n    try {\n      final UpdateResponse resp = solrClient.add(getAlias(), newDoc(category, timestamp));\n      // if we have a TolerantUpdateProcessor then we see it there)\n      final Object errors = resp.getResponseHeader().get(\"errors\"); // Tolerant URP\n      assertTrue(errors != null && errors.toString().contains(errorMsg));\n    } catch (SolrException e) {\n      assertTrue(e.getMessage().contains(errorMsg));\n    }\n    numDocsDeletedOrFailed++;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/DimensionalRoutedAliasUpdateProcessorTest#testFailedDocument(String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/DimensionalRoutedAliasUpdateProcessorTest#testFailedDocument(String,String,String).mjava","sourceNew":"  private void testFailedDocument(String category, String timestamp, String errorMsg) throws SolrServerException, IOException {\n    try {\n      final UpdateResponse resp = solrClient.add(getAlias(), newDoc(category, timestamp));\n      // if we have a TolerantUpdateProcessor then we see it there)\n      final Object errors = resp.getResponseHeader().get(\"errors\"); // Tolerant URP\n      assertTrue(errors != null && errors.toString().contains(errorMsg));\n    } catch (SolrException e) {\n      String message = e.getMessage();\n      assertTrue(\"expected message to contain\" + errorMsg + \" but message was \" + message , message.contains(errorMsg));\n    }\n    numDocsDeletedOrFailed++;\n  }\n\n","sourceOld":"  private void testFailedDocument(String category, String timestamp, String errorMsg) throws SolrServerException, IOException {\n    try {\n      final UpdateResponse resp = solrClient.add(getAlias(), newDoc(category, timestamp));\n      // if we have a TolerantUpdateProcessor then we see it there)\n      final Object errors = resp.getResponseHeader().get(\"errors\"); // Tolerant URP\n      assertTrue(errors != null && errors.toString().contains(errorMsg));\n    } catch (SolrException e) {\n      assertTrue(e.getMessage().contains(errorMsg));\n    }\n    numDocsDeletedOrFailed++;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1eebf1b080530bdd7572c4927fb2bb52334b7a86":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["56aa6ff4cdf3147154a86d7c22a8a2615869e772"],"56aa6ff4cdf3147154a86d7c22a8a2615869e772":["1eebf1b080530bdd7572c4927fb2bb52334b7a86"],"b0b597c65628ca9e73913a07e81691f8229bae35":["1eebf1b080530bdd7572c4927fb2bb52334b7a86","56aa6ff4cdf3147154a86d7c22a8a2615869e772"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1eebf1b080530bdd7572c4927fb2bb52334b7a86"],"1eebf1b080530bdd7572c4927fb2bb52334b7a86":["56aa6ff4cdf3147154a86d7c22a8a2615869e772","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"56aa6ff4cdf3147154a86d7c22a8a2615869e772":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}