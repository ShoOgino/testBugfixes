{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamExpressionParser#isNamedParameterClause(String).mjava","commits":[{"id":"f00f1c5fad501b66705121feb623f8cfbb6712f9","date":1431347838,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamExpressionParser#isNamedParameterClause(String).mjava","pathOld":"/dev/null","sourceNew":"  private static boolean isNamedParameterClause(String clause){\n    // name=thing\n    \n    // find first = then check from start to that location and only accept alphanumeric\n    int firstOpenEquals = findNextClear(clause, 0, '=');\n    if(firstOpenEquals <= 0 || firstOpenEquals == clause.length() - 1){ return false; }\n    String name = clause.substring(0, firstOpenEquals);\n    if(!wordToken(name)){ return false; }\n    \n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a0370d6fb5289875090a50a9d0887ee584fed440"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2db35a54fd4a3444b97c4aee5eee1b23034ac577","date":1493821554,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamExpressionParser#isNamedParameterClause(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamExpressionParser#isNamedParameterClause(String).mjava","sourceNew":"  private static boolean isNamedParameterClause(String clause){\n    // name=thing\n    \n    // find first = then check from start to that location and only accept alphanumeric\n    int firstOpenEquals = findNextClear(clause, 0, '=');\n    if(firstOpenEquals <= 0 || firstOpenEquals == clause.length() - 1){ return false; }\n    String name = clause.substring(0, firstOpenEquals);\n    if(!wordToken(name.trim())){ return false; }\n    \n    return true;\n  }\n\n","sourceOld":"  private static boolean isNamedParameterClause(String clause){\n    // name=thing\n    \n    // find first = then check from start to that location and only accept alphanumeric\n    int firstOpenEquals = findNextClear(clause, 0, '=');\n    if(firstOpenEquals <= 0 || firstOpenEquals == clause.length() - 1){ return false; }\n    String name = clause.substring(0, firstOpenEquals);\n    if(!wordToken(name)){ return false; }\n    \n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamExpressionParser#isNamedParameterClause(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamExpressionParser#isNamedParameterClause(String).mjava","sourceNew":"  private static boolean isNamedParameterClause(String clause){\n    // name=thing\n    \n    // find first = then check from start to that location and only accept alphanumeric\n    int firstOpenEquals = findNextClear(clause, 0, '=');\n    if(firstOpenEquals <= 0 || firstOpenEquals == clause.length() - 1){ return false; }\n    String name = clause.substring(0, firstOpenEquals);\n    if(!wordToken(name.trim())){ return false; }\n    \n    return true;\n  }\n\n","sourceOld":"  private static boolean isNamedParameterClause(String clause){\n    // name=thing\n    \n    // find first = then check from start to that location and only accept alphanumeric\n    int firstOpenEquals = findNextClear(clause, 0, '=');\n    if(firstOpenEquals <= 0 || firstOpenEquals == clause.length() - 1){ return false; }\n    String name = clause.substring(0, firstOpenEquals);\n    if(!wordToken(name)){ return false; }\n    \n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0370d6fb5289875090a50a9d0887ee584fed440","date":1552401990,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamExpressionParser#isNamedParameterClause(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamExpressionParser#isNamedParameterClause(String).mjava","sourceNew":"  private static boolean isNamedParameterClause(String clause){\n    // name=thing\n\n    // find first = then check from start to that location and only accept alphanumeric\n    int firstOpenEquals = findNextClear(clause, 0, '=');\n    if(firstOpenEquals <= 0 || firstOpenEquals == clause.length() - 1){ return false; }\n    String name = clause.substring(0, firstOpenEquals);\n    if(!wordToken(name.trim())){ return false; }\n\n    return true;\n  }\n\n","sourceOld":"  private static boolean isNamedParameterClause(String clause){\n    // name=thing\n    \n    // find first = then check from start to that location and only accept alphanumeric\n    int firstOpenEquals = findNextClear(clause, 0, '=');\n    if(firstOpenEquals <= 0 || firstOpenEquals == clause.length() - 1){ return false; }\n    String name = clause.substring(0, firstOpenEquals);\n    if(!wordToken(name.trim())){ return false; }\n    \n    return true;\n  }\n\n","bugFix":["f00f1c5fad501b66705121feb623f8cfbb6712f9"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f00f1c5fad501b66705121feb623f8cfbb6712f9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["f00f1c5fad501b66705121feb623f8cfbb6712f9","2db35a54fd4a3444b97c4aee5eee1b23034ac577"],"a0370d6fb5289875090a50a9d0887ee584fed440":["2db35a54fd4a3444b97c4aee5eee1b23034ac577"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0370d6fb5289875090a50a9d0887ee584fed440"],"2db35a54fd4a3444b97c4aee5eee1b23034ac577":["f00f1c5fad501b66705121feb623f8cfbb6712f9"]},"commit2Childs":{"f00f1c5fad501b66705121feb623f8cfbb6712f9":["e9017cf144952056066919f1ebc7897ff9bd71b1","2db35a54fd4a3444b97c4aee5eee1b23034ac577"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0370d6fb5289875090a50a9d0887ee584fed440":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f00f1c5fad501b66705121feb623f8cfbb6712f9"],"2db35a54fd4a3444b97c4aee5eee1b23034ac577":["e9017cf144952056066919f1ebc7897ff9bd71b1","a0370d6fb5289875090a50a9d0887ee584fed440"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}