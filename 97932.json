{"path":"solr/core/src/java/org/apache/solr/search/facet/SlotAcc.SweepingCountSlotAcc#registerMapping(SlotAcc,SlotAcc).mjava","commits":[{"id":"2f9e4bd10604489b5817ee29e35ac96a3148cbec","date":1594345357,"type":0,"author":"Michael Gibney","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/SlotAcc.SweepingCountSlotAcc#registerMapping(SlotAcc,SlotAcc).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * When a {@link SweepableSlotAcc} replaces itself (for the purpose of collection) with a different {@link SlotAcc}\n     * instance, it must register that replacement by calling this method with itself as the fromAcc param, and with the\n     * new replacement {@link SlotAcc} as the toAcc param. The two SlotAccs must have the same {@link SlotAcc#key}.\n     * \n     * It is the responsibility of this method to insure that {@link FacetFieldProcessor} references to fromAcc (other than\n     * those within {@link FacetFieldProcessor#collectAcc}, which are set directly by the return value of\n     * {@link SweepableSlotAcc#registerSweepingAccs(SweepingCountSlotAcc)}) are replaced\n     * by references to toAcc. Such references would include, e.g., {@link FacetFieldProcessor#sortAcc}.\n     * \n     * It is also this method's responsibility to insure that read access to toAcc (via toAcc's {@link SlotAcc#setValues(SimpleOrderedMap, int)}\n     * method) is provided via this instance's {@link #setValues(SimpleOrderedMap, int)} method.\n     * \n     * @param fromAcc - the {@link SlotAcc} to be replaced (this will normally be the caller of this method).\n     * @param toAcc - the replacement {@link SlotAcc}\n     * \n     * @see SweepableSlotAcc#registerSweepingAccs(SweepingCountSlotAcc)\n     */\n    public void registerMapping(SlotAcc fromAcc, SlotAcc toAcc) {\n      assert fromAcc.key.equals(toAcc.key);\n      output.add(toAcc);\n      if (p.sortAcc == fromAcc) {\n        p.sortAcc = toAcc;\n      }\n      if (null != debug) {\n        @SuppressWarnings(\"unchecked\")\n        List<String> mappedDebug = (List<String>) debug.get(\"mapped\");\n        mappedDebug.add(fromAcc.toString());\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2f9e4bd10604489b5817ee29e35ac96a3148cbec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2f9e4bd10604489b5817ee29e35ac96a3148cbec"]},"commit2Childs":{"2f9e4bd10604489b5817ee29e35ac96a3148cbec":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2f9e4bd10604489b5817ee29e35ac96a3148cbec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}