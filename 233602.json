{"path":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKDRadixSort#testRandom().mjava","commits":[{"id":"619d6ef89bb642f6258a8369ba5a7a330580e97f","date":1561535144,"type":0,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKDRadixSort#testRandom().mjava","pathOld":"/dev/null","sourceNew":"  public void testRandom() throws IOException {\n    int numPoints = TestUtil.nextInt(random(), 1, BKDWriter.DEFAULT_MAX_POINTS_IN_LEAF_NODE);\n    int indexDimensions = TestUtil.nextInt(random(), 1, 8);\n    int dataDimensions = TestUtil.nextInt(random(), indexDimensions, 8);\n    int bytesPerDim = TestUtil.nextInt(random(), 2, 30);\n    int packedBytesLength = dataDimensions * bytesPerDim;\n    HeapPointWriter points = new HeapPointWriter(numPoints, packedBytesLength);\n    byte[] value = new byte[packedBytesLength];\n    for (int i = 0; i < numPoints; i++) {\n      random().nextBytes(value);\n      points.append(value, i);\n    }\n    verifySort(points, dataDimensions, indexDimensions, 0, numPoints, bytesPerDim);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb94bf667d51f9c390c99d97afb36b7caab6b6e9","date":1599548621,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKDRadixSort#testRandom().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/bkd/TestBKDRadixSort#testRandom().mjava","sourceNew":"  public void testRandom() throws IOException {\n    BKDConfig config = getRandomConfig();\n    int numPoints = TestUtil.nextInt(random(), 1, BKDConfig.DEFAULT_MAX_POINTS_IN_LEAF_NODE);\n    HeapPointWriter points = new HeapPointWriter(config, numPoints);\n    byte[] value = new byte[config.packedBytesLength];\n    for (int i = 0; i < numPoints; i++) {\n      random().nextBytes(value);\n      points.append(value, i);\n    }\n    verifySort(config, points,  0, numPoints);\n  }\n\n","sourceOld":"  public void testRandom() throws IOException {\n    int numPoints = TestUtil.nextInt(random(), 1, BKDWriter.DEFAULT_MAX_POINTS_IN_LEAF_NODE);\n    int indexDimensions = TestUtil.nextInt(random(), 1, 8);\n    int dataDimensions = TestUtil.nextInt(random(), indexDimensions, 8);\n    int bytesPerDim = TestUtil.nextInt(random(), 2, 30);\n    int packedBytesLength = dataDimensions * bytesPerDim;\n    HeapPointWriter points = new HeapPointWriter(numPoints, packedBytesLength);\n    byte[] value = new byte[packedBytesLength];\n    for (int i = 0; i < numPoints; i++) {\n      random().nextBytes(value);\n      points.append(value, i);\n    }\n    verifySort(points, dataDimensions, indexDimensions, 0, numPoints, bytesPerDim);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"619d6ef89bb642f6258a8369ba5a7a330580e97f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["619d6ef89bb642f6258a8369ba5a7a330580e97f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"]},"commit2Childs":{"619d6ef89bb642f6258a8369ba5a7a330580e97f":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"],"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["619d6ef89bb642f6258a8369ba5a7a330580e97f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}