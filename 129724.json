{"path":"src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","commits":[{"id":"2070bf73ffa1039a505000f99ea245884ff19e11","date":1177653367,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Utility function to execute a funciton\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    BufferedReader reader = null;\n    \n    try {\n      Process process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      return IOUtils.toString( in );\n    }\n    catch( Exception ex ) {\n      ex.printStackTrace();\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      IOUtils.closeQuietly( reader );\n      IOUtils.closeQuietly( in );\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["6eed6a4605d9a188a53ad2a5a217ea50a409c7cf","6eed6a4605d9a188a53ad2a5a217ea50a409c7cf","6eed6a4605d9a188a53ad2a5a217ea50a409c7cf"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5c434d8dc05a601d515d04f6ee7feb90acb1c645","date":1182706508,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","pathOld":"src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","sourceNew":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    BufferedReader reader = null;\n    \n    try {\n      Process process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      return IOUtils.toString( in );\n    }\n    catch( Exception ex ) {\n      ex.printStackTrace();\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      IOUtils.closeQuietly( reader );\n      IOUtils.closeQuietly( in );\n    }\n  }\n\n","sourceOld":"  /**\n   * Utility function to execute a funciton\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    BufferedReader reader = null;\n    \n    try {\n      Process process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      return IOUtils.toString( in );\n    }\n    catch( Exception ex ) {\n      ex.printStackTrace();\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      IOUtils.closeQuietly( reader );\n      IOUtils.closeQuietly( in );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5c456afad2c053cc57744c8339d929b11fc1dd5f","date":1242570808,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","pathOld":"src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","sourceNew":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    BufferedReader reader = null;\n    \n    try {\n      Process process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      return IOUtils.toString( in );\n    }\n    catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      IOUtils.closeQuietly( reader );\n      IOUtils.closeQuietly( in );\n    }\n  }\n\n","sourceOld":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    BufferedReader reader = null;\n    \n    try {\n      Process process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      return IOUtils.toString( in );\n    }\n    catch( Exception ex ) {\n      ex.printStackTrace();\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      IOUtils.closeQuietly( reader );\n      IOUtils.closeQuietly( in );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","pathOld":"src/java/org/apache/solr/handler/admin/SystemInfoHandler#execute(String).mjava","sourceNew":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    BufferedReader reader = null;\n    \n    try {\n      Process process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      return IOUtils.toString( in );\n    }\n    catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      IOUtils.closeQuietly( reader );\n      IOUtils.closeQuietly( in );\n    }\n  }\n\n","sourceOld":"  /**\n   * Utility function to execute a function\n   */\n  private static String execute( String cmd )\n  {\n    DataInputStream in = null;\n    BufferedReader reader = null;\n    \n    try {\n      Process process = Runtime.getRuntime().exec(cmd);\n      in = new DataInputStream( process.getInputStream() );\n      return IOUtils.toString( in );\n    }\n    catch( Exception ex ) {\n      // ignore - log.warn(\"Error executing command\", ex);\n      return \"(error executing: \" + cmd + \")\";\n    }\n    finally {\n      IOUtils.closeQuietly( reader );\n      IOUtils.closeQuietly( in );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"5c456afad2c053cc57744c8339d929b11fc1dd5f":["5c434d8dc05a601d515d04f6ee7feb90acb1c645"],"5c434d8dc05a601d515d04f6ee7feb90acb1c645":["2070bf73ffa1039a505000f99ea245884ff19e11"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"2070bf73ffa1039a505000f99ea245884ff19e11":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["5c456afad2c053cc57744c8339d929b11fc1dd5f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5c456afad2c053cc57744c8339d929b11fc1dd5f":["ad94625fb8d088209f46650c8097196fec67f00c"],"5c434d8dc05a601d515d04f6ee7feb90acb1c645":["5c456afad2c053cc57744c8339d929b11fc1dd5f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["2070bf73ffa1039a505000f99ea245884ff19e11"],"2070bf73ffa1039a505000f99ea245884ff19e11":["5c434d8dc05a601d515d04f6ee7feb90acb1c645"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}