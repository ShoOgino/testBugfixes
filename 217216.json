{"path":"solr/core/src/test/org/apache/solr/update/TestHdfsUpdateLog#beforeClass().mjava","commits":[{"id":"70505a4870244b22d4d0f1a98951b08b197d5bb0","date":1424906348,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/TestHdfsUpdateLog#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dfsCluster = HdfsTestUtil.setupClass(createTempDir().toFile().getAbsolutePath());\n    hdfsUri = dfsCluster.getFileSystem().getUri().toString();\n    \n    try {\n      URI uri = new URI(hdfsUri);\n      Configuration conf = new Configuration();\n      conf.setBoolean(\"fs.hdfs.impl.disable.cache\", true);\n      fs = FileSystem.get(uri, conf);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    } catch (URISyntaxException e) {\n      throw new RuntimeException(e);\n    }\n    \n    System.setProperty(\"solr.ulog.dir\", hdfsUri + \"/solr/shard1\");\n    \n    initCore(\"solrconfig-tlog.xml\",\"schema15.xml\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["add53de9835b2cd1a7a80b4e0036afee171c9fdf"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/TestHdfsUpdateLog#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dfsCluster = HdfsTestUtil.setupClass(createTempDir().toFile().getAbsolutePath());\n    hdfsUri = dfsCluster.getFileSystem().getUri().toString();\n    \n    try {\n      URI uri = new URI(hdfsUri);\n      Configuration conf = new Configuration();\n      conf.setBoolean(\"fs.hdfs.impl.disable.cache\", true);\n      fs = FileSystem.get(uri, conf);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    } catch (URISyntaxException e) {\n      throw new RuntimeException(e);\n    }\n    \n    System.setProperty(\"solr.ulog.dir\", hdfsUri + \"/solr/shard1\");\n    \n    initCore(\"solrconfig-tlog.xml\",\"schema15.xml\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3def6e0e7b7566dd7f04a3514e77ee97a40fc78a","date":1429888091,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/TestHdfsUpdateLog#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/TestHdfsUpdateLog#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dfsCluster = HdfsTestUtil.setupClass(createTempDir().toFile().getAbsolutePath());\n    hdfsUri = HdfsTestUtil.getURI(dfsCluster);\n    \n    try {\n      URI uri = new URI(hdfsUri);\n      Configuration conf = HdfsTestUtil.getClientConfiguration(dfsCluster);\n      conf.setBoolean(\"fs.hdfs.impl.disable.cache\", true);\n      fs = FileSystem.get(uri, conf);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    } catch (URISyntaxException e) {\n      throw new RuntimeException(e);\n    }\n    \n    System.setProperty(\"solr.ulog.dir\", hdfsUri + \"/solr/shard1\");\n    \n    initCore(\"solrconfig-tlog.xml\",\"schema15.xml\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dfsCluster = HdfsTestUtil.setupClass(createTempDir().toFile().getAbsolutePath());\n    hdfsUri = dfsCluster.getFileSystem().getUri().toString();\n    \n    try {\n      URI uri = new URI(hdfsUri);\n      Configuration conf = new Configuration();\n      conf.setBoolean(\"fs.hdfs.impl.disable.cache\", true);\n      fs = FileSystem.get(uri, conf);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    } catch (URISyntaxException e) {\n      throw new RuntimeException(e);\n    }\n    \n    System.setProperty(\"solr.ulog.dir\", hdfsUri + \"/solr/shard1\");\n    \n    initCore(\"solrconfig-tlog.xml\",\"schema15.xml\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"add53de9835b2cd1a7a80b4e0036afee171c9fdf","date":1552937136,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/TestHdfsUpdateLog#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/TestHdfsUpdateLog#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dfsCluster = HdfsTestUtil.setupClass(createTempDir().toFile().getAbsolutePath());\n    hdfsUri = HdfsTestUtil.getURI(dfsCluster);\n    \n    try {\n      URI uri = new URI(hdfsUri);\n      Configuration conf = HdfsTestUtil.getClientConfiguration(dfsCluster);\n      fs = FileSystem.get(uri, conf);\n    } catch (IOException | URISyntaxException e) {\n      throw new RuntimeException(e);\n    }\n\n    System.setProperty(\"solr.ulog.dir\", hdfsUri + \"/solr/shard1\");\n    \n    initCore(\"solrconfig-tlog.xml\",\"schema15.xml\");\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dfsCluster = HdfsTestUtil.setupClass(createTempDir().toFile().getAbsolutePath());\n    hdfsUri = HdfsTestUtil.getURI(dfsCluster);\n    \n    try {\n      URI uri = new URI(hdfsUri);\n      Configuration conf = HdfsTestUtil.getClientConfiguration(dfsCluster);\n      conf.setBoolean(\"fs.hdfs.impl.disable.cache\", true);\n      fs = FileSystem.get(uri, conf);\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    } catch (URISyntaxException e) {\n      throw new RuntimeException(e);\n    }\n    \n    System.setProperty(\"solr.ulog.dir\", hdfsUri + \"/solr/shard1\");\n    \n    initCore(\"solrconfig-tlog.xml\",\"schema15.xml\");\n  }\n\n","bugFix":["70505a4870244b22d4d0f1a98951b08b197d5bb0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","70505a4870244b22d4d0f1a98951b08b197d5bb0"],"70505a4870244b22d4d0f1a98951b08b197d5bb0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["add53de9835b2cd1a7a80b4e0036afee171c9fdf"],"add53de9835b2cd1a7a80b4e0036afee171c9fdf":["3def6e0e7b7566dd7f04a3514e77ee97a40fc78a"],"3def6e0e7b7566dd7f04a3514e77ee97a40fc78a":["70505a4870244b22d4d0f1a98951b08b197d5bb0"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"70505a4870244b22d4d0f1a98951b08b197d5bb0":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","3def6e0e7b7566dd7f04a3514e77ee97a40fc78a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","70505a4870244b22d4d0f1a98951b08b197d5bb0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"add53de9835b2cd1a7a80b4e0036afee171c9fdf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3def6e0e7b7566dd7f04a3514e77ee97a40fc78a":["add53de9835b2cd1a7a80b4e0036afee171c9fdf"]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}