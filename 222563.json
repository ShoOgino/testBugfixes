{"path":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#initSearcher(long[]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#initSearcher(long[]).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#initSearcher(long[]).mjava","sourceNew":"    public void initSearcher(long[] nodeVersions) {\n      assert currentShardSearcher == null;\n      System.arraycopy(nodeVersions, 0, currentNodeVersions, 0, currentNodeVersions.length);\n      currentShardSearcher = new ShardIndexSearcher(currentNodeVersions.clone(),\n                                                    mgr.acquire().getIndexReader(),\n                                                    myNodeID);\n    }\n\n","sourceOld":"    public void initSearcher(long[] nodeVersions) {\n      assert currentShardSearcher == null;\n      System.arraycopy(nodeVersions, 0, currentNodeVersions, 0, currentNodeVersions.length);\n      currentShardSearcher = new ShardIndexSearcher(currentNodeVersions.clone(),\n                                                    mgr.acquire().getIndexReader(),\n                                                    myNodeID);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77925d097d69ba9a9806554c5afe4779fafa142d","date":1365611122,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#initSearcher(long[]).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#initSearcher(long[]).mjava","sourceNew":"    public void initSearcher(long[] nodeVersions) throws IOException {\n      assert currentShardSearcher == null;\n      System.arraycopy(nodeVersions, 0, currentNodeVersions, 0, currentNodeVersions.length);\n      currentShardSearcher = new ShardIndexSearcher(currentNodeVersions.clone(),\n                                                    mgr.acquire().getIndexReader(),\n                                                    myNodeID);\n    }\n\n","sourceOld":"    public void initSearcher(long[] nodeVersions) {\n      assert currentShardSearcher == null;\n      System.arraycopy(nodeVersions, 0, currentNodeVersions, 0, currentNodeVersions.length);\n      currentShardSearcher = new ShardIndexSearcher(currentNodeVersions.clone(),\n                                                    mgr.acquire().getIndexReader(),\n                                                    myNodeID);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"77925d097d69ba9a9806554c5afe4779fafa142d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["77925d097d69ba9a9806554c5afe4779fafa142d"]},"commit2Childs":{"77925d097d69ba9a9806554c5afe4779fafa142d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["77925d097d69ba9a9806554c5afe4779fafa142d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}