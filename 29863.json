{"path":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager#deleteDocuments(Term).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager#deleteDocuments(Term).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestNRTManager#deleteDocuments(Term).mjava","sourceNew":"  @Override\n  protected void deleteDocuments(Term id) throws Exception {\n    final long gen = nrt.deleteDocuments(id);\n    // randomly verify the delete \"took\":\n    if (random.nextInt(20) == 7) {\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": nrt: verify del \" + id);\n      }\n      final SearcherManager manager = nrt.waitForGeneration(gen, true);\n      final IndexSearcher s = manager.acquire();\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": nrt: got searcher=\" + s);\n      }\n      try {\n        assertEquals(0, s.search(new TermQuery(id), 10).totalHits);\n      } finally {\n        manager.release(s);\n      }\n    }\n    lastGens.set(gen);\n  }\n\n","sourceOld":"  @Override\n  protected void deleteDocuments(Term id) throws Exception {\n    final long gen = nrt.deleteDocuments(id);\n    // randomly verify the delete \"took\":\n    if (random.nextInt(20) == 7) {\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": nrt: verify del \" + id);\n      }\n      final SearcherManager manager = nrt.waitForGeneration(gen, true);\n      final IndexSearcher s = manager.acquire();\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": nrt: got searcher=\" + s);\n      }\n      try {\n        assertEquals(0, s.search(new TermQuery(id), 10).totalHits);\n      } finally {\n        manager.release(s);\n      }\n    }\n    lastGens.set(gen);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c36db4818c5eba16bdcbedab4f06dd69ae59190","date":1329160108,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager#deleteDocuments(Term).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager#deleteDocuments(Term).mjava","sourceNew":"  @Override\n  protected void deleteDocuments(Term id) throws Exception {\n    final long gen = genWriter.deleteDocuments(id);\n    // randomly verify the delete \"took\":\n    if (random.nextInt(20) == 7) {\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": nrt: verify del \" + id);\n      }\n      nrtDeletes.waitForGeneration(gen);\n      final IndexSearcher s = nrtDeletes.getSearcherManager().acquire();\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": nrt: got searcher=\" + s);\n      }\n      try {\n        assertEquals(0, s.search(new TermQuery(id), 10).totalHits);\n      } finally {\n        nrtDeletes.getSearcherManager().release(s);\n      }\n    }\n    lastGens.set(gen);\n  }\n\n","sourceOld":"  @Override\n  protected void deleteDocuments(Term id) throws Exception {\n    final long gen = nrt.deleteDocuments(id);\n    // randomly verify the delete \"took\":\n    if (random.nextInt(20) == 7) {\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": nrt: verify del \" + id);\n      }\n      final SearcherManager manager = nrt.waitForGeneration(gen, true);\n      final IndexSearcher s = manager.acquire();\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": nrt: got searcher=\" + s);\n      }\n      try {\n        assertEquals(0, s.search(new TermQuery(id), 10).totalHits);\n      } finally {\n        manager.release(s);\n      }\n    }\n    lastGens.set(gen);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c380c22ff3b659b2d7412a3335f853d354d17568","date":1329505731,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager#deleteDocuments(Term).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager#deleteDocuments(Term).mjava","sourceNew":"  @Override\n  protected void deleteDocuments(Term id) throws Exception {\n    final long gen = genWriter.deleteDocuments(id);\n    // randomly verify the delete \"took\":\n    if (random.nextInt(20) == 7) {\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": nrt: verify del \" + id);\n      }\n      nrtDeletes.waitForGeneration(gen);\n      final IndexSearcher s = nrtDeletes.acquire();\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": nrt: got searcher=\" + s);\n      }\n      try {\n        assertEquals(0, s.search(new TermQuery(id), 10).totalHits);\n      } finally {\n        nrtDeletes.release(s);\n      }\n    }\n    lastGens.set(gen);\n  }\n\n","sourceOld":"  @Override\n  protected void deleteDocuments(Term id) throws Exception {\n    final long gen = genWriter.deleteDocuments(id);\n    // randomly verify the delete \"took\":\n    if (random.nextInt(20) == 7) {\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": nrt: verify del \" + id);\n      }\n      nrtDeletes.waitForGeneration(gen);\n      final IndexSearcher s = nrtDeletes.getSearcherManager().acquire();\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": nrt: got searcher=\" + s);\n      }\n      try {\n        assertEquals(0, s.search(new TermQuery(id), 10).totalHits);\n      } finally {\n        nrtDeletes.getSearcherManager().release(s);\n      }\n    }\n    lastGens.set(gen);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager#deleteDocuments(Term).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager#deleteDocuments(Term).mjava","sourceNew":"  @Override\n  protected void deleteDocuments(Term id) throws Exception {\n    final long gen = genWriter.deleteDocuments(id);\n    // randomly verify the delete \"took\":\n    if (random().nextInt(20) == 7) {\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": nrt: verify del \" + id);\n      }\n      nrtDeletes.waitForGeneration(gen);\n      final IndexSearcher s = nrtDeletes.acquire();\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": nrt: got searcher=\" + s);\n      }\n      try {\n        assertEquals(0, s.search(new TermQuery(id), 10).totalHits);\n      } finally {\n        nrtDeletes.release(s);\n      }\n    }\n    lastGens.set(gen);\n  }\n\n","sourceOld":"  @Override\n  protected void deleteDocuments(Term id) throws Exception {\n    final long gen = genWriter.deleteDocuments(id);\n    // randomly verify the delete \"took\":\n    if (random.nextInt(20) == 7) {\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": nrt: verify del \" + id);\n      }\n      nrtDeletes.waitForGeneration(gen);\n      final IndexSearcher s = nrtDeletes.acquire();\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": nrt: got searcher=\" + s);\n      }\n      try {\n        assertEquals(0, s.search(new TermQuery(id), 10).totalHits);\n      } finally {\n        nrtDeletes.release(s);\n      }\n    }\n    lastGens.set(gen);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2045b132a2396bb23dff28d2d9f349a6907d36e","date":1367513076,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread#deleteDocuments(Term).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager#deleteDocuments(Term).mjava","sourceNew":"  @Override\n  protected void deleteDocuments(Term id) throws Exception {\n    final long gen = genWriter.deleteDocuments(id);\n    // randomly verify the delete \"took\":\n    if (random().nextInt(20) == 7) {\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": nrt: verify del \" + id);\n      }\n      nrtDeletesThread.waitForGeneration(gen);\n      final IndexSearcher s = nrtDeletes.acquire();\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": nrt: got searcher=\" + s);\n      }\n      try {\n        assertEquals(0, s.search(new TermQuery(id), 10).totalHits);\n      } finally {\n        nrtDeletes.release(s);\n      }\n    }\n    lastGens.set(gen);\n  }\n\n","sourceOld":"  @Override\n  protected void deleteDocuments(Term id) throws Exception {\n    final long gen = genWriter.deleteDocuments(id);\n    // randomly verify the delete \"took\":\n    if (random().nextInt(20) == 7) {\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": nrt: verify del \" + id);\n      }\n      nrtDeletes.waitForGeneration(gen);\n      final IndexSearcher s = nrtDeletes.acquire();\n      if (VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": nrt: got searcher=\" + s);\n      }\n      try {\n        assertEquals(0, s.search(new TermQuery(id), 10).totalHits);\n      } finally {\n        nrtDeletes.release(s);\n      }\n    }\n    lastGens.set(gen);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2045b132a2396bb23dff28d2d9f349a6907d36e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"c380c22ff3b659b2d7412a3335f853d354d17568":["2c36db4818c5eba16bdcbedab4f06dd69ae59190"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["c380c22ff3b659b2d7412a3335f853d354d17568"],"2c36db4818c5eba16bdcbedab4f06dd69ae59190":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c2045b132a2396bb23dff28d2d9f349a6907d36e"]},"commit2Childs":{"c2045b132a2396bb23dff28d2d9f349a6907d36e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c380c22ff3b659b2d7412a3335f853d354d17568":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["2c36db4818c5eba16bdcbedab4f06dd69ae59190"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["c2045b132a2396bb23dff28d2d9f349a6907d36e"],"2c36db4818c5eba16bdcbedab4f06dd69ae59190":["c380c22ff3b659b2d7412a3335f853d354d17568"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}