{"path":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#testShrink().mjava","commits":[{"id":"0549fc9f9fd9b0fcade08eefc5e220d473ece901","date":1381652492,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#testShrink().mjava","pathOld":"/dev/null","sourceNew":"  public void testShrink() {\n    FixedBitSet bits = new FixedBitSet(72);\n    bits.set(1);\n    bits.set(4);\n    bits.set(69);\n    \n    FixedBitSet newBits = new FixedBitSet(bits, 66); // shrink within the word\n    assertTrue(newBits.get(1));\n    assertTrue(newBits.get(4));\n    boolean hitError = true;\n    try {\n      newBits.get(69);\n      hitError = false;\n    } catch (AssertionError e) {\n      hitError = true;\n    }\n    assertTrue(hitError);\n\n    newBits = new FixedBitSet(bits, 8); // shrink beyond one word\n    assertTrue(newBits.get(1));\n    assertTrue(newBits.get(4));\n    hitError = true;\n    try {\n      newBits.get(69);\n      hitError = false;\n    } catch (AssertionError e) {\n      hitError = true;\n    }\n    assertTrue(hitError);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3995f83351082af8ae83bb017e63c56818fc1568","date":1392047063,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#testShrink().mjava","sourceNew":null,"sourceOld":"  public void testShrink() {\n    FixedBitSet bits = new FixedBitSet(72);\n    bits.set(1);\n    bits.set(4);\n    bits.set(69);\n    \n    FixedBitSet newBits = new FixedBitSet(bits, 66); // shrink within the word\n    assertTrue(newBits.get(1));\n    assertTrue(newBits.get(4));\n    boolean hitError = true;\n    try {\n      newBits.get(69);\n      hitError = false;\n    } catch (AssertionError e) {\n      hitError = true;\n    }\n    assertTrue(hitError);\n\n    newBits = new FixedBitSet(bits, 8); // shrink beyond one word\n    assertTrue(newBits.get(1));\n    assertTrue(newBits.get(4));\n    hitError = true;\n    try {\n      newBits.get(69);\n      hitError = false;\n    } catch (AssertionError e) {\n      hitError = true;\n    }\n    assertTrue(hitError);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0549fc9f9fd9b0fcade08eefc5e220d473ece901":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3995f83351082af8ae83bb017e63c56818fc1568":["0549fc9f9fd9b0fcade08eefc5e220d473ece901"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3995f83351082af8ae83bb017e63c56818fc1568"]},"commit2Childs":{"0549fc9f9fd9b0fcade08eefc5e220d473ece901":["3995f83351082af8ae83bb017e63c56818fc1568"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0549fc9f9fd9b0fcade08eefc5e220d473ece901"],"3995f83351082af8ae83bb017e63c56818fc1568":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}