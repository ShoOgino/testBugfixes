{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(new Field(\"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(new Field(\"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(new Field(\"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(new Field(\"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(new Field(\"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = new Field(\"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(\"EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(new Field(\"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(new Field(\"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(new Field(\"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(new Field(\"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(new Field(\"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = new Field(\"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(\"EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(newField(\"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(newField(\"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(newField(\"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(newField(\"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(newField(\"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(newField(\"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = newField(\"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(\"EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(new Field(\"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(new Field(\"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(new Field(\"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(new Field(\"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(new Field(\"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = new Field(\"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(\"EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b852c2640a2b634ad26fa5ec5ad9948c63718615","date":1285148689,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(newField(\"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(newField(\"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(newField(\"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(newField(\"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(newField(\"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(newField(\"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = newField(\"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(Thread.currentThread().getName() + \": EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(newField(\"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(newField(\"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(newField(\"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(newField(\"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(newField(\"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(newField(\"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = newField(\"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(\"EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"44fcbde6fb2ac44ee3b45e013e54a42911e689ff","date":1292065621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(newField(\"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(newField(\"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(newField(\"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(newField(\"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(newField(\"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(newField(\"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = newField(\"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: IndexerThread: cycle\");\n        }\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(Thread.currentThread().getName() + \": EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(newField(\"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(newField(\"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(newField(\"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(newField(\"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(newField(\"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(newField(\"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = newField(\"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(Thread.currentThread().getName() + \": EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(newField(\"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(newField(\"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(newField(\"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(newField(\"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(newField(\"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(newField(\"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = newField(\"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: IndexerThread: cycle\");\n        }\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(Thread.currentThread().getName() + \": EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(newField(\"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(newField(\"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(newField(\"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(newField(\"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(newField(\"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(newField(\"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = newField(\"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(Thread.currentThread().getName() + \": EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(newField(\"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(newField(\"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(newField(\"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(newField(\"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(newField(\"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(newField(\"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = newField(\"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: IndexerThread: cycle\");\n        }\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(Thread.currentThread().getName() + \": EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(new Field(\"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(new Field(\"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(new Field(\"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(new Field(\"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(new Field(\"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(new Field(\"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = new Field(\"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(\"EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27","date":1306166545,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(newField(\"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(newField(\"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(newField(\"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(newField(\"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(newField(\"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(newField(\"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = newField(\"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: IndexerThread: cycle\");\n        }\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          if (r.nextBoolean()) {\n            writer.updateDocuments(idTerm, new DocCopyIterator(doc, _TestUtil.nextInt(r, 1, 20)));\n          } else {\n            writer.updateDocument(idTerm, doc);\n          }\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(Thread.currentThread().getName() + \": EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(newField(\"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(newField(\"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(newField(\"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(newField(\"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(newField(\"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(newField(\"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = newField(\"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: IndexerThread: cycle\");\n        }\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(Thread.currentThread().getName() + \": EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(newField(\"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(newField(\"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(newField(\"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(newField(\"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(newField(\"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(newField(\"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = newField(\"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: IndexerThread: cycle\");\n        }\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          if (r.nextBoolean()) {\n            writer.updateDocuments(idTerm, new DocCopyIterator(doc, _TestUtil.nextInt(r, 1, 20)));\n          } else {\n            writer.updateDocument(idTerm, doc);\n          }\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(Thread.currentThread().getName() + \": EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(newField(\"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(newField(\"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(newField(\"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(newField(\"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(newField(\"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(newField(\"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = newField(\"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: IndexerThread: cycle\");\n        }\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(Thread.currentThread().getName() + \": EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(newField(\"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(newField(\"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(newField(\"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(newField(\"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(newField(\"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(newField(\"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = newField(\"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: IndexerThread: cycle\");\n        }\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          if (r.nextBoolean()) {\n            writer.updateDocuments(idTerm, new DocCopyIterator(doc, _TestUtil.nextInt(r, 1, 20)));\n          } else {\n            writer.updateDocument(idTerm, doc);\n          }\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(Thread.currentThread().getName() + \": EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(newField(\"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(newField(\"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(newField(\"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(newField(\"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(newField(\"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(newField(\"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = newField(\"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: IndexerThread: cycle\");\n        }\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(Thread.currentThread().getName() + \": EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c1cc29415081fb74cc58c4f31b3eb5c8568ee4d","date":1314375928,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(newField(r, \"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(newField(r, \"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(newField(r, \"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(r, \"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(newField(r, \"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(newField(r, \"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(newField(r, \"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = newField(\"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: IndexerThread: cycle\");\n        }\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          if (r.nextBoolean()) {\n            writer.updateDocuments(idTerm, new DocCopyIterator(doc, _TestUtil.nextInt(r, 1, 20)));\n          } else {\n            writer.updateDocument(idTerm, doc);\n          }\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(Thread.currentThread().getName() + \": EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(newField(\"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(newField(\"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(newField(\"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(\"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(newField(\"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(newField(\"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(newField(\"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = newField(\"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: IndexerThread: cycle\");\n        }\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          if (r.nextBoolean()) {\n            writer.updateDocuments(idTerm, new DocCopyIterator(doc, _TestUtil.nextInt(r, 1, 20)));\n          } else {\n            writer.updateDocument(idTerm, doc);\n          }\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(Thread.currentThread().getName() + \": EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"808743c5a6528854878540edc894c2f4e00b8829","date":1314376188,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(newField(r, \"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(newField(r, \"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(newField(r, \"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(r, \"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(newField(r, \"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(newField(r, \"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(newField(r, \"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = newField(r, \"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: IndexerThread: cycle\");\n        }\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          if (r.nextBoolean()) {\n            writer.updateDocuments(idTerm, new DocCopyIterator(doc, _TestUtil.nextInt(r, 1, 20)));\n          } else {\n            writer.updateDocument(idTerm, doc);\n          }\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(Thread.currentThread().getName() + \": EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(newField(r, \"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(newField(r, \"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(newField(r, \"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(r, \"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(newField(r, \"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(newField(r, \"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(newField(r, \"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = newField(\"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: IndexerThread: cycle\");\n        }\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          if (r.nextBoolean()) {\n            writer.updateDocuments(idTerm, new DocCopyIterator(doc, _TestUtil.nextInt(r, 1, 20)));\n          } else {\n            writer.updateDocument(idTerm, doc);\n          }\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(Thread.currentThread().getName() + \": EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(newField(r, \"content1\", \"aaa bbb ccc ddd\", TextField.TYPE_STORED));\n      doc.add(newField(r, \"content6\", \"aaa bbb ccc ddd\", DocCopyIterator.custom1));\n      doc.add(newField(r, \"content2\", \"aaa bbb ccc ddd\", DocCopyIterator.custom2));\n      doc.add(newField(r, \"content3\", \"aaa bbb ccc ddd\", DocCopyIterator.custom3));\n\n      doc.add(newField(r, \"content4\", \"aaa bbb ccc ddd\", TextField.TYPE_UNSTORED));\n      doc.add(newField(r, \"content5\", \"aaa bbb ccc ddd\", StringField.TYPE_UNSTORED));\n\n      doc.add(newField(r, \"content7\", \"aaa bbb ccc ddd\", DocCopyIterator.custom4));\n\n      final Field idField = newField(r, \"id\", \"\", DocCopyIterator.custom2);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: IndexerThread: cycle\");\n        }\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          if (r.nextBoolean()) {\n            writer.updateDocuments(idTerm, new DocCopyIterator(doc, _TestUtil.nextInt(r, 1, 20)));\n          } else {\n            writer.updateDocument(idTerm, doc);\n          }\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(Thread.currentThread().getName() + \": EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(newField(r, \"content1\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.ANALYZED));\n      doc.add(newField(r, \"content6\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      doc.add(newField(r, \"content2\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(newField(r, \"content3\", \"aaa bbb ccc ddd\", Field.Store.YES, Field.Index.NO));\n\n      doc.add(newField(r, \"content4\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.ANALYZED));\n      doc.add(newField(r, \"content5\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n\n      doc.add(newField(r, \"content7\", \"aaa bbb ccc ddd\", Field.Store.NO, Field.Index.NOT_ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n\n      final Field idField = newField(r, \"id\", \"\", Field.Store.YES, Field.Index.NOT_ANALYZED);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: IndexerThread: cycle\");\n        }\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          if (r.nextBoolean()) {\n            writer.updateDocuments(idTerm, new DocCopyIterator(doc, _TestUtil.nextInt(r, 1, 20)));\n          } else {\n            writer.updateDocument(idTerm, doc);\n          }\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(Thread.currentThread().getName() + \": EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.IndexerThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(newField(r, \"content1\", \"aaa bbb ccc ddd\", TextField.TYPE_STORED));\n      doc.add(newField(r, \"content6\", \"aaa bbb ccc ddd\", DocCopyIterator.custom1));\n      doc.add(newField(r, \"content2\", \"aaa bbb ccc ddd\", DocCopyIterator.custom2));\n      doc.add(newField(r, \"content3\", \"aaa bbb ccc ddd\", DocCopyIterator.custom3));\n\n      doc.add(newField(r, \"content4\", \"aaa bbb ccc ddd\", TextField.TYPE_UNSTORED));\n      doc.add(newField(r, \"content5\", \"aaa bbb ccc ddd\", StringField.TYPE_UNSTORED));\n\n      doc.add(newField(r, \"content7\", \"aaa bbb ccc ddd\", DocCopyIterator.custom4));\n\n      final Field idField = newField(r, \"id\", \"\", DocCopyIterator.custom2);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: IndexerThread: cycle\");\n        }\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          if (r.nextBoolean()) {\n            writer.updateDocuments(idTerm, new DocCopyIterator(doc, _TestUtil.nextInt(r, 1, 20)));\n          } else {\n            writer.updateDocument(idTerm, doc);\n          }\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(Thread.currentThread().getName() + \": EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n\n      final Document doc = new Document();\n\n      doc.add(newField(r, \"content1\", \"aaa bbb ccc ddd\", TextField.TYPE_STORED));\n      doc.add(newField(r, \"content6\", \"aaa bbb ccc ddd\", DocCopyIterator.custom1));\n      doc.add(newField(r, \"content2\", \"aaa bbb ccc ddd\", DocCopyIterator.custom2));\n      doc.add(newField(r, \"content3\", \"aaa bbb ccc ddd\", DocCopyIterator.custom3));\n\n      doc.add(newField(r, \"content4\", \"aaa bbb ccc ddd\", TextField.TYPE_UNSTORED));\n      doc.add(newField(r, \"content5\", \"aaa bbb ccc ddd\", StringField.TYPE_UNSTORED));\n\n      doc.add(newField(r, \"content7\", \"aaa bbb ccc ddd\", DocCopyIterator.custom4));\n\n      final Field idField = newField(r, \"id\", \"\", DocCopyIterator.custom2);\n      doc.add(idField);\n\n      final long stopTime = System.currentTimeMillis() + 500;\n\n      do {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: IndexerThread: cycle\");\n        }\n        doFail.set(this);\n        final String id = \"\"+r.nextInt(50);\n        idField.setValue(id);\n        Term idTerm = new Term(\"id\", id);\n        try {\n          if (r.nextBoolean()) {\n            writer.updateDocuments(idTerm, new DocCopyIterator(doc, _TestUtil.nextInt(r, 1, 20)));\n          } else {\n            writer.updateDocument(idTerm, doc);\n          }\n        } catch (RuntimeException re) {\n          if (VERBOSE) {\n            System.out.println(Thread.currentThread().getName() + \": EXC: \");\n            re.printStackTrace(System.out);\n          }\n          try {\n            _TestUtil.checkIndex(writer.getDirectory());\n          } catch (IOException ioe) {\n            System.out.println(Thread.currentThread().getName() + \": unexpected exception1\");\n            ioe.printStackTrace(System.out);\n            failure = ioe;\n            break;\n          }\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception2\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n\n        doFail.set(null);\n\n        // After a possible exception (above) I should be able\n        // to add a new document without hitting an\n        // exception:\n        try {\n          writer.updateDocument(idTerm, doc);\n        } catch (Throwable t) {\n          System.out.println(Thread.currentThread().getName() + \": unexpected exception3\");\n          t.printStackTrace(System.out);\n          failure = t;\n          break;\n        }\n      } while(System.currentTimeMillis() < stopTime);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["b852c2640a2b634ad26fa5ec5ad9948c63718615"],"b852c2640a2b634ad26fa5ec5ad9948c63718615":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["b852c2640a2b634ad26fa5ec5ad9948c63718615","44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"808743c5a6528854878540edc894c2f4e00b8829":["3c1cc29415081fb74cc58c4f31b3eb5c8568ee4d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff","2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["808743c5a6528854878540edc894c2f4e00b8829"],"3c1cc29415081fb74cc58c4f31b3eb5c8568ee4d":["2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27"]},"commit2Childs":{"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"b852c2640a2b634ad26fa5ec5ad9948c63718615":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff","ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["b852c2640a2b634ad26fa5ec5ad9948c63718615"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"2c6dc1a64ac36088ccb8d5e20b74c48c8d3bba27":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","3c1cc29415081fb74cc58c4f31b3eb5c8568ee4d","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"808743c5a6528854878540edc894c2f4e00b8829":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3c1cc29415081fb74cc58c4f31b3eb5c8568ee4d":["808743c5a6528854878540edc894c2f4e00b8829"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["132903c28af3aa6f67284b78de91c0f0a99488c2","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}