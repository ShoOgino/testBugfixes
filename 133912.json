{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceRangeQuery#GeoPointDistanceRangeQuery(String,TermEncoding,double,double,double,double).mjava","commits":[{"id":"8a093d23e938d132b81b5f2de3d6b168afe3608e","date":1455076308,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceRangeQuery#GeoPointDistanceRangeQuery(String,TermEncoding,double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/search/GeoPointDistanceRangeQuery#GeoPointDistanceRangeQuery(String,TermEncoding,double,double,double,double).mjava","sourceNew":"  public GeoPointDistanceRangeQuery(final String field, final TermEncoding termEncoding, final double centerLon, final double centerLat,\n                                    final double minRadiusMeters, final double maxRadius) {\n    super(field, termEncoding, centerLon, centerLat, maxRadius);\n    this.minRadiusMeters = minRadiusMeters;\n  }\n\n","sourceOld":"  public GeoPointDistanceRangeQuery(final String field, final TermEncoding termEncoding, final double centerLon, final double centerLat,\n                                    final double minRadiusMeters, final double maxRadius) {\n    super(field, termEncoding, centerLon, centerLat, maxRadius);\n    this.minRadiusMeters = minRadiusMeters;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":3,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceRangeQuery#GeoPointDistanceRangeQuery(String,TermEncoding,double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceRangeQuery#GeoPointDistanceRangeQuery(String,TermEncoding,double,double,double,double).mjava","sourceNew":"  /**\n   * Constructs a query for all {@link org.apache.lucene.spatial.geopoint.document.GeoPointField} types within a minimum / maximum\n   * distance (in meters) range from a given point. Accepts an optional\n   * {@link org.apache.lucene.spatial.geopoint.document.GeoPointField.TermEncoding}\n   */\n  public GeoPointDistanceRangeQuery(final String field, final TermEncoding termEncoding, final double centerLon, final double centerLat,\n                                    final double minRadiusMeters, final double maxRadius) {\n    super(field, termEncoding, centerLon, centerLat, maxRadius);\n    this.minRadiusMeters = minRadiusMeters;\n  }\n\n","sourceOld":"  public GeoPointDistanceRangeQuery(final String field, final TermEncoding termEncoding, final double centerLon, final double centerLat,\n                                    final double minRadiusMeters, final double maxRadius) {\n    super(field, termEncoding, centerLon, centerLat, maxRadius);\n    this.minRadiusMeters = minRadiusMeters;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceRangeQuery#GeoPointDistanceRangeQuery(String,TermEncoding,double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceRangeQuery#GeoPointDistanceRangeQuery(String,TermEncoding,double,double,double,double).mjava","sourceNew":"  /**\n   * Constructs a query for all {@link org.apache.lucene.spatial.geopoint.document.GeoPointField} types within a minimum / maximum\n   * distance (in meters) range from a given point. Accepts an optional\n   * {@link org.apache.lucene.spatial.geopoint.document.GeoPointField.TermEncoding}\n   */\n  public GeoPointDistanceRangeQuery(final String field, final TermEncoding termEncoding, final double centerLon, final double centerLat,\n                                    final double minRadiusMeters, final double maxRadius) {\n    super(field, termEncoding, centerLon, centerLat, maxRadius);\n    this.minRadiusMeters = minRadiusMeters;\n  }\n\n","sourceOld":"  public GeoPointDistanceRangeQuery(final String field, final TermEncoding termEncoding, final double centerLon, final double centerLat,\n                                    final double minRadiusMeters, final double maxRadius) {\n    super(field, termEncoding, centerLon, centerLat, maxRadius);\n    this.minRadiusMeters = minRadiusMeters;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec996bf2daff09d61a876319e8fae4aebbea58e3","date":1458661946,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceRangeQuery#GeoPointDistanceRangeQuery(String,TermEncoding,double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceRangeQuery#GeoPointDistanceRangeQuery(String,TermEncoding,double,double,double,double).mjava","sourceNew":"  /**\n   * Constructs a query for all {@link org.apache.lucene.spatial.geopoint.document.GeoPointField} types within a minimum / maximum\n   * distance (in meters) range from a given point. Accepts an optional\n   * {@link org.apache.lucene.spatial.geopoint.document.GeoPointField.TermEncoding}\n   */\n  public GeoPointDistanceRangeQuery(final String field, final TermEncoding termEncoding, final double centerLat, final double centerLon,\n                                    final double minRadiusMeters, final double maxRadius) {\n    super(field, termEncoding, centerLat, centerLon, maxRadius);\n    this.minRadiusMeters = minRadiusMeters;\n  }\n\n","sourceOld":"  /**\n   * Constructs a query for all {@link org.apache.lucene.spatial.geopoint.document.GeoPointField} types within a minimum / maximum\n   * distance (in meters) range from a given point. Accepts an optional\n   * {@link org.apache.lucene.spatial.geopoint.document.GeoPointField.TermEncoding}\n   */\n  public GeoPointDistanceRangeQuery(final String field, final TermEncoding termEncoding, final double centerLon, final double centerLat,\n                                    final double minRadiusMeters, final double maxRadius) {\n    super(field, termEncoding, centerLon, centerLat, maxRadius);\n    this.minRadiusMeters = minRadiusMeters;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9686ea8f446704d6bb22f2cb00a63aa9ca52400","date":1459165568,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceRangeQuery#GeoPointDistanceRangeQuery(String,TermEncoding,double,double,double,double).mjava","sourceNew":null,"sourceOld":"  /**\n   * Constructs a query for all {@link org.apache.lucene.spatial.geopoint.document.GeoPointField} types within a minimum / maximum\n   * distance (in meters) range from a given point. Accepts an optional\n   * {@link org.apache.lucene.spatial.geopoint.document.GeoPointField.TermEncoding}\n   */\n  public GeoPointDistanceRangeQuery(final String field, final TermEncoding termEncoding, final double centerLat, final double centerLon,\n                                    final double minRadiusMeters, final double maxRadius) {\n    super(field, termEncoding, centerLat, centerLon, maxRadius);\n    this.minRadiusMeters = minRadiusMeters;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["8a093d23e938d132b81b5f2de3d6b168afe3608e","112d77ac8d3e10a362516ad834c9a11d35c94234"],"ec996bf2daff09d61a876319e8fae4aebbea58e3":["af2638813028b254a88b418ebeafb541afb49653"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["8a093d23e938d132b81b5f2de3d6b168afe3608e"],"8a093d23e938d132b81b5f2de3d6b168afe3608e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f9686ea8f446704d6bb22f2cb00a63aa9ca52400":["ec996bf2daff09d61a876319e8fae4aebbea58e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f9686ea8f446704d6bb22f2cb00a63aa9ca52400"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["ec996bf2daff09d61a876319e8fae4aebbea58e3"],"ec996bf2daff09d61a876319e8fae4aebbea58e3":["f9686ea8f446704d6bb22f2cb00a63aa9ca52400"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8a093d23e938d132b81b5f2de3d6b168afe3608e"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"8a093d23e938d132b81b5f2de3d6b168afe3608e":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"f9686ea8f446704d6bb22f2cb00a63aa9ca52400":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}