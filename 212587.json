{"path":"solr/core/src/java/org/apache/solr/update/UpdateHandler#newIndexWriter().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateHandler#newIndexWriter().mjava","pathOld":"solr/src/java/org/apache/solr/update/UpdateHandler#newIndexWriter().mjava","sourceNew":"  /**\n   * Called when the Writer should be opened again - eg when replication replaces\n   * all of the index files.\n   * \n   * @throws IOException\n   */\n  public abstract void newIndexWriter() throws IOException;\n\n","sourceOld":"  /**\n   * Called when the Writer should be opened again - eg when replication replaces\n   * all of the index files.\n   * \n   * @throws IOException\n   */\n  public abstract void newIndexWriter() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateHandler#newIndexWriter().mjava","pathOld":"solr/src/java/org/apache/solr/update/UpdateHandler#newIndexWriter().mjava","sourceNew":"  /**\n   * Called when the Writer should be opened again - eg when replication replaces\n   * all of the index files.\n   * \n   * @throws IOException\n   */\n  public abstract void newIndexWriter() throws IOException;\n\n","sourceOld":"  /**\n   * Called when the Writer should be opened again - eg when replication replaces\n   * all of the index files.\n   * \n   * @throws IOException\n   */\n  public abstract void newIndexWriter() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateHandler#newIndexWriter().mjava","pathOld":"solr/src/java/org/apache/solr/update/UpdateHandler#newIndexWriter().mjava","sourceNew":"  /**\n   * Called when the Writer should be opened again - eg when replication replaces\n   * all of the index files.\n   * \n   * @throws IOException\n   */\n  public abstract void newIndexWriter() throws IOException;\n\n","sourceOld":"  /**\n   * Called when the Writer should be opened again - eg when replication replaces\n   * all of the index files.\n   * \n   * @throws IOException\n   */\n  public abstract void newIndexWriter() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1381b91b03f7409d8d548c7070dbc615931a0f50","date":1343667369,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/UpdateHandler#newIndexWriter(boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateHandler#newIndexWriter().mjava","sourceNew":"  /**\n   * Called when the Writer should be opened again - eg when replication replaces\n   * all of the index files.\n   * \n   * @param rollback IndexWriter if true else close\n   * \n   * @throws IOException\n   */\n  public abstract void newIndexWriter(boolean rollback) throws IOException;\n\n","sourceOld":"  /**\n   * Called when the Writer should be opened again - eg when replication replaces\n   * all of the index files.\n   * \n   * @throws IOException\n   */\n  public abstract void newIndexWriter() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateHandler#newIndexWriter().mjava","sourceNew":null,"sourceOld":"  /**\n   * Called when the Writer should be opened again - eg when replication replaces\n   * all of the index files.\n   * \n   * @throws IOException\n   */\n  public abstract void newIndexWriter() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/UpdateHandler#newIndexWriter().mjava","sourceNew":null,"sourceOld":"  /**\n   * Called when the Writer should be opened again - eg when replication replaces\n   * all of the index files.\n   * \n   * @throws IOException\n   */\n  public abstract void newIndexWriter() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["c26f00b574427b55127e869b935845554afde1fa","1381b91b03f7409d8d548c7070dbc615931a0f50"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["c26f00b574427b55127e869b935845554afde1fa","1381b91b03f7409d8d548c7070dbc615931a0f50"],"1381b91b03f7409d8d548c7070dbc615931a0f50":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1381b91b03f7409d8d548c7070dbc615931a0f50"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","1381b91b03f7409d8d548c7070dbc615931a0f50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"1381b91b03f7409d8d548c7070dbc615931a0f50":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}