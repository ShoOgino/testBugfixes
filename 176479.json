{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/response/DelegationTokenResponse.Get#getDelegationToken().mjava","commits":[{"id":"20be168d828ac40d262f85364d02f15b491dd88b","date":1469725145,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/DelegationTokenResponse.Get#getDelegationToken().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Get the urlString to be used as the delegation token\n     */\n    public String getDelegationToken() {\n      try {\n        Map map = (Map)getResponse().get(\"Token\");\n        if (map != null) {\n          return (String)map.get(\"urlString\");\n        }\n      } catch (ClassCastException e) {\n        throw new SolrException (SolrException.ErrorCode.SERVER_ERROR,\n          \"parsing error\", e);\n      }\n      return null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/DelegationTokenResponse.Get#getDelegationToken().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Get the urlString to be used as the delegation token\n     */\n    public String getDelegationToken() {\n      try {\n        Map map = (Map)getResponse().get(\"Token\");\n        if (map != null) {\n          return (String)map.get(\"urlString\");\n        }\n      } catch (ClassCastException e) {\n        throw new SolrException (SolrException.ErrorCode.SERVER_ERROR,\n          \"parsing error\", e);\n      }\n      return null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/DelegationTokenResponse.Get#getDelegationToken().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Get the urlString to be used as the delegation token\n     */\n    public String getDelegationToken() {\n      try {\n        Map map = (Map)getResponse().get(\"Token\");\n        if (map != null) {\n          return (String)map.get(\"urlString\");\n        }\n      } catch (ClassCastException e) {\n        throw new SolrException (SolrException.ErrorCode.SERVER_ERROR,\n          \"parsing error\", e);\n      }\n      return null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7dfea4f7c80813344b0152e37fc18b31369e8ff","date":1592136683,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/DelegationTokenResponse.Get#getDelegationToken().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/response/DelegationTokenResponse.Get#getDelegationToken().mjava","sourceNew":"    /**\n     * Get the urlString to be used as the delegation token\n     */\n    public String getDelegationToken() {\n      try {\n        @SuppressWarnings({\"rawtypes\"})\n        Map map = (Map)getResponse().get(\"Token\");\n        if (map != null) {\n          return (String)map.get(\"urlString\");\n        }\n      } catch (ClassCastException e) {\n        throw new SolrException (SolrException.ErrorCode.SERVER_ERROR,\n          \"parsing error\", e);\n      }\n      return null;\n    }\n\n","sourceOld":"    /**\n     * Get the urlString to be used as the delegation token\n     */\n    public String getDelegationToken() {\n      try {\n        Map map = (Map)getResponse().get(\"Token\");\n        if (map != null) {\n          return (String)map.get(\"urlString\");\n        }\n      } catch (ClassCastException e) {\n        throw new SolrException (SolrException.ErrorCode.SERVER_ERROR,\n          \"parsing error\", e);\n      }\n      return null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["20be168d828ac40d262f85364d02f15b491dd88b"],"20be168d828ac40d262f85364d02f15b491dd88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","20be168d828ac40d262f85364d02f15b491dd88b"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","20be168d828ac40d262f85364d02f15b491dd88b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a7dfea4f7c80813344b0152e37fc18b31369e8ff"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["20be168d828ac40d262f85364d02f15b491dd88b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"20be168d828ac40d262f85364d02f15b491dd88b":["a7dfea4f7c80813344b0152e37fc18b31369e8ff","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}