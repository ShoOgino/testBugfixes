{"path":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertNormsEquals(String,IndexReader,IndexReader).mjava","commits":[{"id":"51c8450b3b616b6777f722ff4083c0bf946381a2","date":1363812022,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertNormsEquals(String,IndexReader,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertNorms(IndexReader,IndexReader).mjava","sourceNew":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNormsEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      NumericDocValues leftNorms = MultiDocValues.getNormValues(leftReader, field);\n      NumericDocValues rightNorms = MultiDocValues.getNormValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValuesEquals(info, leftReader.maxDoc(), leftNorms, rightNorms);\n      } else {\n        assertNull(info, leftNorms);\n        assertNull(info, rightNorms);\n      }\n    }\n  }\n\n","sourceOld":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNorms(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      NumericDocValues leftNorms = MultiDocValues.getNormValues(leftReader, field);\n      NumericDocValues rightNorms = MultiDocValues.getNormValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValues(leftReader.maxDoc(), leftNorms, rightNorms);\n      } else {\n        assertNull(info, leftNorms);\n        assertNull(info, rightNorms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ddad75c20492a8ce36565647b4eaf7b6f3fd1f7","date":1538404752,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertNormsEquals(String,IndexReader,IndexReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertNormsEquals(String,IndexReader,IndexReader).mjava","sourceNew":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNormsEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = new HashSet<>(MultiFields.getIndexedFields(leftReader));\n    Set<String> rightFields = new HashSet<>(MultiFields.getIndexedFields(rightReader));\n    assertEquals(info, leftFields, rightFields);\n    \n    for (String field : leftFields) {\n      NumericDocValues leftNorms = MultiDocValues.getNormValues(leftReader, field);\n      NumericDocValues rightNorms = MultiDocValues.getNormValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValuesEquals(info, leftReader.maxDoc(), leftNorms, rightNorms);\n      } else {\n        assertNull(info, leftNorms);\n        assertNull(info, rightNorms);\n      }\n    }\n  }\n\n","sourceOld":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNormsEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Fields leftFields = MultiFields.getFields(leftReader);\n    Fields rightFields = MultiFields.getFields(rightReader);\n    // Fields could be null if there are no postings,\n    // but then it must be null for both\n    if (leftFields == null || rightFields == null) {\n      assertNull(info, leftFields);\n      assertNull(info, rightFields);\n      return;\n    }\n    \n    for (String field : leftFields) {\n      NumericDocValues leftNorms = MultiDocValues.getNormValues(leftReader, field);\n      NumericDocValues rightNorms = MultiDocValues.getNormValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValuesEquals(info, leftReader.maxDoc(), leftNorms, rightNorms);\n      } else {\n        assertNull(info, leftNorms);\n        assertNull(info, rightNorms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e775de416dd2d8067b10db1c8af975a1d5017e","date":1539906554,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertNormsEquals(String,IndexReader,IndexReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertNormsEquals(String,IndexReader,IndexReader).mjava","sourceNew":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNormsEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = new HashSet<>(FieldInfos.getIndexedFields(leftReader));\n    Set<String> rightFields = new HashSet<>(FieldInfos.getIndexedFields(rightReader));\n    assertEquals(info, leftFields, rightFields);\n    \n    for (String field : leftFields) {\n      NumericDocValues leftNorms = MultiDocValues.getNormValues(leftReader, field);\n      NumericDocValues rightNorms = MultiDocValues.getNormValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValuesEquals(info, leftReader.maxDoc(), leftNorms, rightNorms);\n      } else {\n        assertNull(info, leftNorms);\n        assertNull(info, rightNorms);\n      }\n    }\n  }\n\n","sourceOld":"  /** \n   * checks that norms are the same across all fields \n   */\n  public void assertNormsEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = new HashSet<>(MultiFields.getIndexedFields(leftReader));\n    Set<String> rightFields = new HashSet<>(MultiFields.getIndexedFields(rightReader));\n    assertEquals(info, leftFields, rightFields);\n    \n    for (String field : leftFields) {\n      NumericDocValues leftNorms = MultiDocValues.getNormValues(leftReader, field);\n      NumericDocValues rightNorms = MultiDocValues.getNormValues(rightReader, field);\n      if (leftNorms != null && rightNorms != null) {\n        assertDocValuesEquals(info, leftReader.maxDoc(), leftNorms, rightNorms);\n      } else {\n        assertNull(info, leftNorms);\n        assertNull(info, rightNorms);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"04e775de416dd2d8067b10db1c8af975a1d5017e":["9ddad75c20492a8ce36565647b4eaf7b6f3fd1f7"],"9ddad75c20492a8ce36565647b4eaf7b6f3fd1f7":["51c8450b3b616b6777f722ff4083c0bf946381a2"],"51c8450b3b616b6777f722ff4083c0bf946381a2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["04e775de416dd2d8067b10db1c8af975a1d5017e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["51c8450b3b616b6777f722ff4083c0bf946381a2"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9ddad75c20492a8ce36565647b4eaf7b6f3fd1f7":["04e775de416dd2d8067b10db1c8af975a1d5017e"],"51c8450b3b616b6777f722ff4083c0bf946381a2":["9ddad75c20492a8ce36565647b4eaf7b6f3fd1f7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}