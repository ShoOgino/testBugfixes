{"path":"lucene/core/src/java/org/apache/lucene/util/BroadWord#bitCount(long).mjava","commits":[{"id":"423470dff9e19aa0db92590e282e2ca12e34d65a","date":1381851051,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BroadWord#bitCount(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BroadWord#rank9(long).mjava","sourceNew":"  /** Bit count of a long.\n   * Only here to compare the implementation with {@link #select(long,int)},\n   * normally {@link Long#bitCount} is preferable.\n   * @return The total number of 1 bits in x.\n   */\n  static int bitCount(long x) {\n    // Step 0 leaves in each pair of bits the number of ones originally contained in that pair:\n    x = x - ((x & 0xAAAAAAAAAAAAAAAAL) >>> 1);\n    // Step 1, idem for each nibble:\n    x = (x & 0x3333333333333333L) + ((x >>> 2) & 0x3333333333333333L);\n    // Step 2, idem for each byte:\n    x = (x + (x >>> 4)) & 0x0F0F0F0F0F0F0F0FL;\n    // Multiply to sum them all into the high byte, and return the high byte:\n    return (int) ((x * L8_L) >>> 56);\n  }\n\n","sourceOld":"  /** Bit count of a long.\n   * Only here to compare the implementation with {@link #select9(long,int)},\n   * normally {@link Long#bitCount} is preferable.\n   * @return The total number of 1 bits in x.\n   */\n  static int rank9(long x) {\n    // Step 0 leaves in each pair of bits the number of ones originally contained in that pair:\n    x = x - ((x & 0xAAAAAAAAAAAAAAAAL) >>> 1);\n    // Step 1, idem for each nibble:\n    x = (x & 0x3333333333333333L) + ((x >>> 2) & 0x3333333333333333L);\n    // Step 2, idem for each byte:\n    x = (x + (x >>> 4)) & 0x0F0F0F0F0F0F0F0FL;\n    // Multiply to sum them all into the high byte, and return the high byte:\n    return (int) ((x * L8_L) >>> 56);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9291fc3833dffda8db27cfa063a07f17a8bbbfe7","date":1415205164,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/BroadWord#bitCount(long).mjava","sourceNew":null,"sourceOld":"  /** Bit count of a long.\n   * Only here to compare the implementation with {@link #select(long,int)},\n   * normally {@link Long#bitCount} is preferable.\n   * @return The total number of 1 bits in x.\n   */\n  static int bitCount(long x) {\n    // Step 0 leaves in each pair of bits the number of ones originally contained in that pair:\n    x = x - ((x & 0xAAAAAAAAAAAAAAAAL) >>> 1);\n    // Step 1, idem for each nibble:\n    x = (x & 0x3333333333333333L) + ((x >>> 2) & 0x3333333333333333L);\n    // Step 2, idem for each byte:\n    x = (x + (x >>> 4)) & 0x0F0F0F0F0F0F0F0FL;\n    // Multiply to sum them all into the high byte, and return the high byte:\n    return (int) ((x * L8_L) >>> 56);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"423470dff9e19aa0db92590e282e2ca12e34d65a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9291fc3833dffda8db27cfa063a07f17a8bbbfe7":["423470dff9e19aa0db92590e282e2ca12e34d65a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9291fc3833dffda8db27cfa063a07f17a8bbbfe7"]},"commit2Childs":{"423470dff9e19aa0db92590e282e2ca12e34d65a":["9291fc3833dffda8db27cfa063a07f17a8bbbfe7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["423470dff9e19aa0db92590e282e2ca12e34d65a"],"9291fc3833dffda8db27cfa063a07f17a8bbbfe7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}