{"path":"lucene/core/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(Terms,AttributeSource).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(Terms,AttributeSource).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(Terms,AttributeSource).mjava","sourceNew":"  /** Construct the enumeration to be used, expanding the\n   *  pattern term.  This method should only be called if\n   *  the field exists (ie, implementations can assume the\n   *  field does exist).  This method should not return null\n   *  (should instead return {@link TermsEnum#EMPTY} if no\n   *  terms match).  The TermsEnum must already be\n   *  positioned to the first matching term.\n   * The given {@link AttributeSource} is passed by the {@link RewriteMethod} to\n   * provide attributes, the rewrite method uses to inform about e.g. maximum competitive boosts.\n   * This is currently only used by {@link TopTermsRewrite}\n   */\n  protected abstract TermsEnum getTermsEnum(Terms terms, AttributeSource atts) throws IOException;\n\n","sourceOld":"  /** Construct the enumeration to be used, expanding the\n   *  pattern term.  This method should only be called if\n   *  the field exists (ie, implementations can assume the\n   *  field does exist).  This method should not return null\n   *  (should instead return {@link TermsEnum#EMPTY} if no\n   *  terms match).  The TermsEnum must already be\n   *  positioned to the first matching term.\n   * The given {@link AttributeSource} is passed by the {@link RewriteMethod} to\n   * provide attributes, the rewrite method uses to inform about e.g. maximum competitive boosts.\n   * This is currently only used by {@link TopTermsRewrite}\n   */\n  protected abstract TermsEnum getTermsEnum(Terms terms, AttributeSource atts) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad855e2f1f69c5e330d1027a5d54f8814e47a0d6","date":1588847334,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(Terms,AttributeSource).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/MultiTermQuery#getTermsEnum(Terms,AttributeSource).mjava","sourceNew":"  /** Construct the enumeration to be used, expanding the\n   *  pattern term.  This method should only be called if\n   *  the field exists (ie, implementations can assume the\n   *  field does exist).  This method should not return null\n   *  (should instead return {@link TermsEnum#EMPTY} if no\n   *  terms match).  The TermsEnum must already be\n   *  positioned to the first matching term.\n   *  The given {@link AttributeSource} is passed by the {@link RewriteMethod} to\n   *  share information between segments, for example {@link TopTermsRewrite} uses\n   *  it to share maximum competitive boosts\n   */\n  protected abstract TermsEnum getTermsEnum(Terms terms, AttributeSource atts) throws IOException;\n\n","sourceOld":"  /** Construct the enumeration to be used, expanding the\n   *  pattern term.  This method should only be called if\n   *  the field exists (ie, implementations can assume the\n   *  field does exist).  This method should not return null\n   *  (should instead return {@link TermsEnum#EMPTY} if no\n   *  terms match).  The TermsEnum must already be\n   *  positioned to the first matching term.\n   * The given {@link AttributeSource} is passed by the {@link RewriteMethod} to\n   * provide attributes, the rewrite method uses to inform about e.g. maximum competitive boosts.\n   * This is currently only used by {@link TopTermsRewrite}\n   */\n  protected abstract TermsEnum getTermsEnum(Terms terms, AttributeSource atts) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad855e2f1f69c5e330d1027a5d54f8814e47a0d6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ad855e2f1f69c5e330d1027a5d54f8814e47a0d6"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["ad855e2f1f69c5e330d1027a5d54f8814e47a0d6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"ad855e2f1f69c5e330d1027a5d54f8814e47a0d6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}