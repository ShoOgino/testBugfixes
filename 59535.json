{"path":"contrib/queryparser/src/java/org/apache/lucene/queryParser/original/parser/OriginalSyntaxParser#parse(CharSequence,CharSequence).mjava","commits":[{"id":"b955a87bc7c5daeda1ed56821ec0bec2e8789e44","date":1249270724,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/original/parser/OriginalSyntaxParser#parse(CharSequence,CharSequence).mjava","pathOld":"/dev/null","sourceNew":"     /** Parses a query string, returning a {@link org.apache.lucene.queryParser.core.nodes.QueryNode}.\n     *  @param query  the query string to be parsed.\n     *  @throws ParseException if the parsing fails\n     */\n    public QueryNode parse(CharSequence query, CharSequence field) throws QueryNodeParseException {\n      ReInit(new StringReader(query.toString()));\n      try {\n        // TopLevelQuery is a Query followed by the end-of-input (EOF)\n        QueryNode querynode = TopLevelQuery(field);\n        return querynode;\n      }\n      catch (ParseException tme) {\n            tme.setQuery(query);\n            throw tme;\n      }\n      catch (Error tme) {\n          Message message = new MessageImpl(QueryParserMessages.INVALID_SYNTAX_CANNOT_PARSE, query, tme.getMessage());\n          QueryNodeParseException e = new QueryNodeParseException(tme);\n            e.setQuery(query);\n            e.setNonLocalizedMessage(message);\n            throw e;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8a848e758754282137f42bf85793c278e250390","date":1249640668,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser#parse(CharSequence,CharSequence).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/original/parser/OriginalSyntaxParser#parse(CharSequence,CharSequence).mjava","sourceNew":"     /** Parses a query string, returning a {@link org.apache.lucene.queryParser.core.nodes.QueryNode}.\n     *  @param query  the query string to be parsed.\n     *  @throws ParseException if the parsing fails\n     */\n    public QueryNode parse(CharSequence query, CharSequence field) throws QueryNodeParseException {\n      ReInit(new StringReader(query.toString()));\n      try {\n        // TopLevelQuery is a Query followed by the end-of-input (EOF)\n        QueryNode querynode = TopLevelQuery(field);\n        return querynode;\n      }\n      catch (ParseException tme) {\n            tme.setQuery(query);\n            throw tme;\n      }\n      catch (Error tme) {\n          Message message = new MessageImpl(QueryParserMessages.INVALID_SYNTAX_CANNOT_PARSE, query, tme.getMessage());\n          QueryNodeParseException e = new QueryNodeParseException(tme);\n            e.setQuery(query);\n            e.setNonLocalizedMessage(message);\n            throw e;\n      }\n    }\n\n","sourceOld":"     /** Parses a query string, returning a {@link org.apache.lucene.queryParser.core.nodes.QueryNode}.\n     *  @param query  the query string to be parsed.\n     *  @throws ParseException if the parsing fails\n     */\n    public QueryNode parse(CharSequence query, CharSequence field) throws QueryNodeParseException {\n      ReInit(new StringReader(query.toString()));\n      try {\n        // TopLevelQuery is a Query followed by the end-of-input (EOF)\n        QueryNode querynode = TopLevelQuery(field);\n        return querynode;\n      }\n      catch (ParseException tme) {\n            tme.setQuery(query);\n            throw tme;\n      }\n      catch (Error tme) {\n          Message message = new MessageImpl(QueryParserMessages.INVALID_SYNTAX_CANNOT_PARSE, query, tme.getMessage());\n          QueryNodeParseException e = new QueryNodeParseException(tme);\n            e.setQuery(query);\n            e.setNonLocalizedMessage(message);\n            throw e;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e8a848e758754282137f42bf85793c278e250390":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e8a848e758754282137f42bf85793c278e250390"]},"commit2Childs":{"e8a848e758754282137f42bf85793c278e250390":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["e8a848e758754282137f42bf85793c278e250390"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}