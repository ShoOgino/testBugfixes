{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","commits":[{"id":"0cebe7d662ef6b6c677383085b295b9878ba1795","date":1337155300,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    IndexReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      CategoryPath cp = new CategoryPath();\n      Terms terms = MultiFields.getTerms(r, Consts.FULL);\n      TermsEnum te = terms.iterator(null);\n      Bits liveDocs = MultiFields.getLiveDocs(r);\n      DocsEnum docs = null;\n      // we call next() first, to skip the root category which always exists.\n      while (te.next() != null) {\n        String value = te.term().utf8ToString();\n        cp.clear();\n        cp.add(value, Consts.DEFAULT_DELIMITER);\n        int ordinal = findCategory(cp);\n        if (ordinal < 0) {\n          // NOTE: call addCategory so that it works well in a multi-threaded\n          // environment, in case e.g. a thread just added the category, after\n          // the findCategory() call above failed to find it.\n          ordinal = addCategory(cp);\n        }\n        docs = te.docs(liveDocs, docs, false);\n        ordinalMap.addMapping(docs.nextDoc(), ordinal);\n      }\n      // we must add the root ordinal map, so that the map will be complete\n      // (otherwise e.g. DiskOrdinalMap may fail because it expects more\n      // categories to exist in the file).\n      ordinalMap.addMapping(0, 0);\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"533890d1266aa8169162ec556395d0c5d0377566","date":1337173867,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","sourceNew":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      CategoryPath cp = new CategoryPath();\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (AtomicReader ar : r.getSequentialSubReaders()) {\n        Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          cp.clear();\n          cp.add(value, Consts.DEFAULT_DELIMITER);\n          int ordinal = findCategory(cp);\n          if (ordinal < 0) {\n            // NOTE: call addCategory so that it works well in a multi-threaded\n            // environment, in case e.g. a thread just added the category, after\n            // the findCategory() call above failed to find it.\n            ordinal = addCategory(cp);\n          }\n          docs = te.docs(null, docs, false);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    IndexReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      CategoryPath cp = new CategoryPath();\n      Terms terms = MultiFields.getTerms(r, Consts.FULL);\n      TermsEnum te = terms.iterator(null);\n      Bits liveDocs = MultiFields.getLiveDocs(r);\n      DocsEnum docs = null;\n      // we call next() first, to skip the root category which always exists.\n      while (te.next() != null) {\n        String value = te.term().utf8ToString();\n        cp.clear();\n        cp.add(value, Consts.DEFAULT_DELIMITER);\n        int ordinal = findCategory(cp);\n        if (ordinal < 0) {\n          // NOTE: call addCategory so that it works well in a multi-threaded\n          // environment, in case e.g. a thread just added the category, after\n          // the findCategory() call above failed to find it.\n          ordinal = addCategory(cp);\n        }\n        docs = te.docs(liveDocs, docs, false);\n        ordinalMap.addMapping(docs.nextDoc(), ordinal);\n      }\n      // we must add the root ordinal map, so that the map will be complete\n      // (otherwise e.g. DiskOrdinalMap may fail because it expects more\n      // categories to exist in the file).\n      ordinalMap.addMapping(0, 0);\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":["ced66195b26fdb1f77ee00e2a77ec6918dedd766","f08fba7c74c7ff6687a9a2e490c6ad6faf62b4f4","02331260bb246364779cb6f04919ca47900d01bb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      CategoryPath cp = new CategoryPath();\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (AtomicReader ar : r.getSequentialSubReaders()) {\n        Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          cp.clear();\n          cp.add(value, Consts.DEFAULT_DELIMITER);\n          int ordinal = findCategory(cp);\n          if (ordinal < 0) {\n            // NOTE: call addCategory so that it works well in a multi-threaded\n            // environment, in case e.g. a thread just added the category, after\n            // the findCategory() call above failed to find it.\n            ordinal = addCategory(cp);\n          }\n          docs = te.docs(null, docs, false);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02331260bb246364779cb6f04919ca47900d01bb","date":1343749884,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","sourceNew":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      CategoryPath cp = new CategoryPath();\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (AtomicReader ar : r.getSequentialSubReaders()) {\n        Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          cp.clear();\n          cp.add(value, Consts.DEFAULT_DELIMITER);\n          int ordinal = findCategory(cp);\n          if (ordinal < 0) {\n            // NOTE: call addCategory so that it works well in a multi-threaded\n            // environment, in case e.g. a thread just added the category, after\n            // the findCategory() call above failed to find it.\n            ordinal = addCategory(cp);\n          }\n          docs = te.docs(null, docs, 0);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      CategoryPath cp = new CategoryPath();\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (AtomicReader ar : r.getSequentialSubReaders()) {\n        Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          cp.clear();\n          cp.add(value, Consts.DEFAULT_DELIMITER);\n          int ordinal = findCategory(cp);\n          if (ordinal < 0) {\n            // NOTE: call addCategory so that it works well in a multi-threaded\n            // environment, in case e.g. a thread just added the category, after\n            // the findCategory() call above failed to find it.\n            ordinal = addCategory(cp);\n          }\n          docs = te.docs(null, docs, false);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":["533890d1266aa8169162ec556395d0c5d0377566"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","sourceNew":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      CategoryPath cp = new CategoryPath();\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (AtomicReader ar : r.getSequentialSubReaders()) {\n        Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          cp.clear();\n          cp.add(value, Consts.DEFAULT_DELIMITER);\n          int ordinal = findCategory(cp);\n          if (ordinal < 0) {\n            // NOTE: call addCategory so that it works well in a multi-threaded\n            // environment, in case e.g. a thread just added the category, after\n            // the findCategory() call above failed to find it.\n            ordinal = addCategory(cp);\n          }\n          docs = te.docs(null, docs, 0);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      CategoryPath cp = new CategoryPath();\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (AtomicReader ar : r.getSequentialSubReaders()) {\n        Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          cp.clear();\n          cp.add(value, Consts.DEFAULT_DELIMITER);\n          int ordinal = findCategory(cp);\n          if (ordinal < 0) {\n            // NOTE: call addCategory so that it works well in a multi-threaded\n            // environment, in case e.g. a thread just added the category, after\n            // the findCategory() call above failed to find it.\n            ordinal = addCategory(cp);\n          }\n          docs = te.docs(null, docs, false);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","sourceNew":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      CategoryPath cp = new CategoryPath();\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (AtomicReader ar : r.getSequentialSubReaders()) {\n        Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          cp.clear();\n          cp.add(value, Consts.DEFAULT_DELIMITER);\n          int ordinal = findCategory(cp);\n          if (ordinal < 0) {\n            // NOTE: call addCategory so that it works well in a multi-threaded\n            // environment, in case e.g. a thread just added the category, after\n            // the findCategory() call above failed to find it.\n            ordinal = addCategory(cp);\n          }\n          docs = te.docs(null, docs, 0);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      CategoryPath cp = new CategoryPath();\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (AtomicReader ar : r.getSequentialSubReaders()) {\n        Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          cp.clear();\n          cp.add(value, Consts.DEFAULT_DELIMITER);\n          int ordinal = findCategory(cp);\n          if (ordinal < 0) {\n            // NOTE: call addCategory so that it works well in a multi-threaded\n            // environment, in case e.g. a thread just added the category, after\n            // the findCategory() call above failed to find it.\n            ordinal = addCategory(cp);\n          }\n          docs = te.docs(null, docs, false);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ced66195b26fdb1f77ee00e2a77ec6918dedd766","date":1344948886,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","sourceNew":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      CategoryPath cp = new CategoryPath();\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (final AtomicReaderContext ctx : r.leaves()) {\n        final AtomicReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          cp.clear();\n          cp.add(value, Consts.DEFAULT_DELIMITER);\n          int ordinal = findCategory(cp);\n          if (ordinal < 0) {\n            // NOTE: call addCategory so that it works well in a multi-threaded\n            // environment, in case e.g. a thread just added the category, after\n            // the findCategory() call above failed to find it.\n            ordinal = addCategory(cp);\n          }\n          docs = te.docs(null, docs, 0);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      CategoryPath cp = new CategoryPath();\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (AtomicReader ar : r.getSequentialSubReaders()) {\n        Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          cp.clear();\n          cp.add(value, Consts.DEFAULT_DELIMITER);\n          int ordinal = findCategory(cp);\n          if (ordinal < 0) {\n            // NOTE: call addCategory so that it works well in a multi-threaded\n            // environment, in case e.g. a thread just added the category, after\n            // the findCategory() call above failed to find it.\n            ordinal = addCategory(cp);\n          }\n          docs = te.docs(null, docs, 0);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":["533890d1266aa8169162ec556395d0c5d0377566"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","date":1345029782,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","sourceNew":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      CategoryPath cp = new CategoryPath();\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (final AtomicReaderContext ctx : r.leaves()) {\n        final AtomicReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          cp.clear();\n          cp.add(value, Consts.DEFAULT_DELIMITER);\n          int ordinal = findCategory(cp);\n          if (ordinal < 0) {\n            // NOTE: call addCategory so that it works well in a multi-threaded\n            // environment, in case e.g. a thread just added the category, after\n            // the findCategory() call above failed to find it.\n            ordinal = addCategory(cp);\n          }\n          docs = te.docs(null, docs, 0);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      CategoryPath cp = new CategoryPath();\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (AtomicReader ar : r.getSequentialSubReaders()) {\n        Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          cp.clear();\n          cp.add(value, Consts.DEFAULT_DELIMITER);\n          int ordinal = findCategory(cp);\n          if (ordinal < 0) {\n            // NOTE: call addCategory so that it works well in a multi-threaded\n            // environment, in case e.g. a thread just added the category, after\n            // the findCategory() call above failed to find it.\n            ordinal = addCategory(cp);\n          }\n          docs = te.docs(null, docs, 0);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b05c56a41b733e02a189c48895922b5bd8c7f3d1","date":1345033322,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","sourceNew":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      CategoryPath cp = new CategoryPath();\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (final AtomicReaderContext ctx : r.leaves()) {\n        final AtomicReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          cp.clear();\n          cp.add(value, Consts.DEFAULT_DELIMITER);\n          int ordinal = findCategory(cp);\n          if (ordinal < 0) {\n            // NOTE: call addCategory so that it works well in a multi-threaded\n            // environment, in case e.g. a thread just added the category, after\n            // the findCategory() call above failed to find it.\n            ordinal = addCategory(cp);\n          }\n          docs = te.docs(null, docs, 0);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      CategoryPath cp = new CategoryPath();\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (AtomicReader ar : r.getSequentialSubReaders()) {\n        Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          cp.clear();\n          cp.add(value, Consts.DEFAULT_DELIMITER);\n          int ordinal = findCategory(cp);\n          if (ordinal < 0) {\n            // NOTE: call addCategory so that it works well in a multi-threaded\n            // environment, in case e.g. a thread just added the category, after\n            // the findCategory() call above failed to find it.\n            ordinal = addCategory(cp);\n          }\n          docs = te.docs(null, docs, 0);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f08fba7c74c7ff6687a9a2e490c6ad6faf62b4f4","date":1348056920,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","sourceNew":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      CategoryPath cp = new CategoryPath();\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (final AtomicReaderContext ctx : r.leaves()) {\n        final AtomicReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          cp.clear();\n          cp.add(value, Consts.DEFAULT_DELIMITER);\n          final int ordinal = addCategory(cp);\n          docs = te.docs(null, docs, 0);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      CategoryPath cp = new CategoryPath();\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (final AtomicReaderContext ctx : r.leaves()) {\n        final AtomicReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          cp.clear();\n          cp.add(value, Consts.DEFAULT_DELIMITER);\n          int ordinal = findCategory(cp);\n          if (ordinal < 0) {\n            // NOTE: call addCategory so that it works well in a multi-threaded\n            // environment, in case e.g. a thread just added the category, after\n            // the findCategory() call above failed to find it.\n            ordinal = addCategory(cp);\n          }\n          docs = te.docs(null, docs, 0);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":["533890d1266aa8169162ec556395d0c5d0377566"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15250ca94ba8ab3bcdd476daf6bf3f3febb92640","date":1355200097,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","sourceNew":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      CategoryPath cp = new CategoryPath();\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (final AtomicReaderContext ctx : r.leaves()) {\n        final AtomicReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          cp.clear();\n          cp.add(value, Consts.DEFAULT_DELIMITER);\n          final int ordinal = addCategory(cp);\n          docs = te.docs(null, docs, DocsEnum.FLAG_NONE);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      CategoryPath cp = new CategoryPath();\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (final AtomicReaderContext ctx : r.leaves()) {\n        final AtomicReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          cp.clear();\n          cp.add(value, Consts.DEFAULT_DELIMITER);\n          final int ordinal = addCategory(cp);\n          docs = te.docs(null, docs, 0);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1","date":1357499264,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","sourceNew":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (final AtomicReaderContext ctx : r.leaves()) {\n        final AtomicReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          CategoryPath cp = new CategoryPath(value, Consts.DEFAULT_DELIMITER);\n          final int ordinal = addCategory(cp);\n          docs = te.docs(null, docs, DocsEnum.FLAG_NONE);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      CategoryPath cp = new CategoryPath();\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (final AtomicReaderContext ctx : r.leaves()) {\n        final AtomicReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          cp.clear();\n          cp.add(value, Consts.DEFAULT_DELIMITER);\n          final int ordinal = addCategory(cp);\n          docs = te.docs(null, docs, DocsEnum.FLAG_NONE);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","sourceNew":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (final AtomicReaderContext ctx : r.leaves()) {\n        final AtomicReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          CategoryPath cp = new CategoryPath(value, Consts.DEFAULT_DELIMITER);\n          final int ordinal = addCategory(cp);\n          docs = te.docs(null, docs, DocsEnum.FLAG_NONE);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      CategoryPath cp = new CategoryPath();\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (final AtomicReaderContext ctx : r.leaves()) {\n        final AtomicReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          cp.clear();\n          cp.add(value, Consts.DEFAULT_DELIMITER);\n          final int ordinal = addCategory(cp);\n          docs = te.docs(null, docs, 0);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f3259927e6d4048bb3f2b96eedbd36be8b2af3e","date":1362142281,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","sourceNew":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (final AtomicReaderContext ctx : r.leaves()) {\n        final AtomicReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          CategoryPath cp = new CategoryPath(value, delimiter);\n          final int ordinal = addCategory(cp);\n          docs = te.docs(null, docs, DocsEnum.FLAG_NONE);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (final AtomicReaderContext ctx : r.leaves()) {\n        final AtomicReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          CategoryPath cp = new CategoryPath(value, Consts.DEFAULT_DELIMITER);\n          final int ordinal = addCategory(cp);\n          docs = te.docs(null, docs, DocsEnum.FLAG_NONE);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","sourceNew":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (final AtomicReaderContext ctx : r.leaves()) {\n        final AtomicReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          FacetLabel cp = new FacetLabel(value, delimiter);\n          final int ordinal = addCategory(cp);\n          docs = te.docs(null, docs, DocsEnum.FLAG_NONE);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (final AtomicReaderContext ctx : r.leaves()) {\n        final AtomicReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          CategoryPath cp = new CategoryPath(value, delimiter);\n          final int ordinal = addCategory(cp);\n          docs = te.docs(null, docs, DocsEnum.FLAG_NONE);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bbe9946d3cd818d329255e4c325597ac3480503e","date":1385580921,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","sourceNew":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (final AtomicReaderContext ctx : r.leaves()) {\n        final AtomicReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          FacetLabel cp = new FacetLabel(FacetsConfig.stringToPath(te.term().utf8ToString()));\n          final int ordinal = addCategory(cp);\n          docs = te.docs(null, docs, DocsEnum.FLAG_NONE);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (final AtomicReaderContext ctx : r.leaves()) {\n        final AtomicReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          FacetLabel cp = new FacetLabel(value, delimiter);\n          final int ordinal = addCategory(cp);\n          docs = te.docs(null, docs, DocsEnum.FLAG_NONE);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","sourceNew":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (final AtomicReaderContext ctx : r.leaves()) {\n        final AtomicReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          FacetLabel cp = new FacetLabel(FacetsConfig.stringToPath(te.term().utf8ToString()));\n          final int ordinal = addCategory(cp);\n          docs = te.docs(null, docs, DocsEnum.FLAG_NONE);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (final AtomicReaderContext ctx : r.leaves()) {\n        final AtomicReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          String value = te.term().utf8ToString();\n          CategoryPath cp = new CategoryPath(value, delimiter);\n          final int ordinal = addCategory(cp);\n          docs = te.docs(null, docs, DocsEnum.FLAG_NONE);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","sourceNew":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (final LeafReaderContext ctx : r.leaves()) {\n        final LeafReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          FacetLabel cp = new FacetLabel(FacetsConfig.stringToPath(te.term().utf8ToString()));\n          final int ordinal = addCategory(cp);\n          docs = te.docs(null, docs, DocsEnum.FLAG_NONE);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (final AtomicReaderContext ctx : r.leaves()) {\n        final AtomicReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          FacetLabel cp = new FacetLabel(FacetsConfig.stringToPath(te.term().utf8ToString()));\n          final int ordinal = addCategory(cp);\n          docs = te.docs(null, docs, DocsEnum.FLAG_NONE);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","sourceNew":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      int base = 0;\n      TermsEnum te = null;\n      PostingsEnum docs = null;\n      for (final LeafReaderContext ctx : r.leaves()) {\n        final LeafReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          FacetLabel cp = new FacetLabel(FacetsConfig.stringToPath(te.term().utf8ToString()));\n          final int ordinal = addCategory(cp);\n          docs = te.postings(null, docs, PostingsEnum.FLAG_NONE);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      int base = 0;\n      TermsEnum te = null;\n      DocsEnum docs = null;\n      for (final LeafReaderContext ctx : r.leaves()) {\n        final LeafReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          FacetLabel cp = new FacetLabel(FacetsConfig.stringToPath(te.term().utf8ToString()));\n          final int ordinal = addCategory(cp);\n          docs = te.docs(null, docs, DocsEnum.FLAG_NONE);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e73063b92d958076ef4ae8beb5f493e8ccdcecb4","date":1424177215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","sourceNew":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      int base = 0;\n      TermsEnum te = null;\n      PostingsEnum docs = null;\n      for (final LeafReaderContext ctx : r.leaves()) {\n        final LeafReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          FacetLabel cp = new FacetLabel(FacetsConfig.stringToPath(te.term().utf8ToString()));\n          final int ordinal = addCategory(cp);\n          docs = te.postings(null, docs, PostingsEnum.NONE);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      int base = 0;\n      TermsEnum te = null;\n      PostingsEnum docs = null;\n      for (final LeafReaderContext ctx : r.leaves()) {\n        final LeafReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          FacetLabel cp = new FacetLabel(FacetsConfig.stringToPath(te.term().utf8ToString()));\n          final int ordinal = addCategory(cp);\n          docs = te.postings(null, docs, PostingsEnum.FLAG_NONE);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82","date":1428522487,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","sourceNew":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      int base = 0;\n      PostingsEnum docs = null;\n      for (final LeafReaderContext ctx : r.leaves()) {\n        final LeafReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        // TODO: share per-segment TermsEnum here!\n        TermsEnum te = terms.iterator();\n        while (te.next() != null) {\n          FacetLabel cp = new FacetLabel(FacetsConfig.stringToPath(te.term().utf8ToString()));\n          final int ordinal = addCategory(cp);\n          docs = te.postings(null, docs, PostingsEnum.NONE);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      int base = 0;\n      TermsEnum te = null;\n      PostingsEnum docs = null;\n      for (final LeafReaderContext ctx : r.leaves()) {\n        final LeafReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        te = terms.iterator(te);\n        while (te.next() != null) {\n          FacetLabel cp = new FacetLabel(FacetsConfig.stringToPath(te.term().utf8ToString()));\n          final int ordinal = addCategory(cp);\n          docs = te.postings(null, docs, PostingsEnum.NONE);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#addTaxonomy(Directory,OrdinalMap).mjava","sourceNew":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      int base = 0;\n      PostingsEnum docs = null;\n      for (final LeafReaderContext ctx : r.leaves()) {\n        final LeafReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        // TODO: share per-segment TermsEnum here!\n        TermsEnum te = terms.iterator();\n        while (te.next() != null) {\n          FacetLabel cp = new FacetLabel(FacetsConfig.stringToPath(te.term().utf8ToString()));\n          final int ordinal = addCategory(cp);\n          docs = te.postings(docs, PostingsEnum.NONE);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Takes the categories from the given taxonomy directory, and adds the\n   * missing ones to this taxonomy. Additionally, it fills the given\n   * {@link OrdinalMap} with a mapping from the original ordinal to the new\n   * ordinal.\n   */\n  public void addTaxonomy(Directory taxoDir, OrdinalMap map) throws IOException {\n    ensureOpen();\n    DirectoryReader r = DirectoryReader.open(taxoDir);\n    try {\n      final int size = r.numDocs();\n      final OrdinalMap ordinalMap = map;\n      ordinalMap.setSize(size);\n      int base = 0;\n      PostingsEnum docs = null;\n      for (final LeafReaderContext ctx : r.leaves()) {\n        final LeafReader ar = ctx.reader();\n        final Terms terms = ar.terms(Consts.FULL);\n        // TODO: share per-segment TermsEnum here!\n        TermsEnum te = terms.iterator();\n        while (te.next() != null) {\n          FacetLabel cp = new FacetLabel(FacetsConfig.stringToPath(te.term().utf8ToString()));\n          final int ordinal = addCategory(cp);\n          docs = te.postings(null, docs, PostingsEnum.NONE);\n          ordinalMap.addMapping(docs.nextDoc() + base, ordinal);\n        }\n        base += ar.maxDoc(); // no deletions, so we're ok\n      }\n      ordinalMap.addDone();\n    } finally {\n      r.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["e73063b92d958076ef4ae8beb5f493e8ccdcecb4"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["f08fba7c74c7ff6687a9a2e490c6ad6faf62b4f4","d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","ced66195b26fdb1f77ee00e2a77ec6918dedd766"],"0cebe7d662ef6b6c677383085b295b9878ba1795":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":["d6f074e73200c07d54f242d3880a8da5a35ff97b","ced66195b26fdb1f77ee00e2a77ec6918dedd766"],"51f5280f31484820499077f41fcdfe92d527d9dc":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"f08fba7c74c7ff6687a9a2e490c6ad6faf62b4f4":["ced66195b26fdb1f77ee00e2a77ec6918dedd766"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["9f3259927e6d4048bb3f2b96eedbd36be8b2af3e"],"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1":["15250ca94ba8ab3bcdd476daf6bf3f3febb92640"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"],"e73063b92d958076ef4ae8beb5f493e8ccdcecb4":["51f5280f31484820499077f41fcdfe92d527d9dc"],"15250ca94ba8ab3bcdd476daf6bf3f3febb92640":["f08fba7c74c7ff6687a9a2e490c6ad6faf62b4f4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["533890d1266aa8169162ec556395d0c5d0377566","02331260bb246364779cb6f04919ca47900d01bb"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["533890d1266aa8169162ec556395d0c5d0377566","02331260bb246364779cb6f04919ca47900d01bb"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["9f3259927e6d4048bb3f2b96eedbd36be8b2af3e","bbe9946d3cd818d329255e4c325597ac3480503e"],"533890d1266aa8169162ec556395d0c5d0377566":["0cebe7d662ef6b6c677383085b295b9878ba1795"],"ced66195b26fdb1f77ee00e2a77ec6918dedd766":["02331260bb246364779cb6f04919ca47900d01bb"],"ef0d8a69209261514c5739c770bba706c2308450":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","533890d1266aa8169162ec556395d0c5d0377566"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"9f3259927e6d4048bb3f2b96eedbd36be8b2af3e":["d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"02331260bb246364779cb6f04919ca47900d01bb":["533890d1266aa8169162ec556395d0c5d0377566"],"bbe9946d3cd818d329255e4c325597ac3480503e":["c190847801a50f4dd20fd639bdc29b54ea3b288b"]},"commit2Childs":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":[],"0cebe7d662ef6b6c677383085b295b9878ba1795":["533890d1266aa8169162ec556395d0c5d0377566"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":[],"51f5280f31484820499077f41fcdfe92d527d9dc":["e73063b92d958076ef4ae8beb5f493e8ccdcecb4"],"f08fba7c74c7ff6687a9a2e490c6ad6faf62b4f4":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","15250ca94ba8ab3bcdd476daf6bf3f3febb92640"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["51f5280f31484820499077f41fcdfe92d527d9dc"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["bbe9946d3cd818d329255e4c325597ac3480503e"],"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","9f3259927e6d4048bb3f2b96eedbd36be8b2af3e"],"e73063b92d958076ef4ae8beb5f493e8ccdcecb4":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"15250ca94ba8ab3bcdd476daf6bf3f3febb92640":["d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["b05c56a41b733e02a189c48895922b5bd8c7f3d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0cebe7d662ef6b6c677383085b295b9878ba1795","ef0d8a69209261514c5739c770bba706c2308450"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"533890d1266aa8169162ec556395d0c5d0377566":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","ef0d8a69209261514c5739c770bba706c2308450","02331260bb246364779cb6f04919ca47900d01bb"],"ced66195b26fdb1f77ee00e2a77ec6918dedd766":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","f08fba7c74c7ff6687a9a2e490c6ad6faf62b4f4"],"ef0d8a69209261514c5739c770bba706c2308450":[],"9f3259927e6d4048bb3f2b96eedbd36be8b2af3e":["c190847801a50f4dd20fd639bdc29b54ea3b288b","3cc728b07df73b197e6d940d27f9b08b63918f13"],"02331260bb246364779cb6f04919ca47900d01bb":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","ced66195b26fdb1f77ee00e2a77ec6918dedd766"],"bbe9946d3cd818d329255e4c325597ac3480503e":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}