{"path":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter.MockIndexWriter#MockIndexWriter(Random,Directory,IndexWriterConfig).mjava","commits":[{"id":"82d5bc05ad1c4710c0c32090d485203fa3ee8cc4","date":1279914031,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter.MockIndexWriter#MockIndexWriter(Random,Directory,IndexWriterConfig).mjava","pathOld":"/dev/null","sourceNew":"    public MockIndexWriter(Random r,Directory dir, IndexWriterConfig conf) throws IOException {\n      super(dir, conf);\n      this.r = r;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b103252dee6afa1b6d7a622c773d178788eb85a","date":1280180143,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter.MockIndexWriter#MockIndexWriter(Random,Directory,IndexWriterConfig).mjava","pathOld":"/dev/null","sourceNew":"    public MockIndexWriter(Random r,Directory dir, IndexWriterConfig conf) throws IOException {\n      super(dir, conf);\n      this.r = r;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3242a09f703274d3b9283f2064a1a33064b53a1b","date":1280263474,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter.MockIndexWriter#MockIndexWriter(Random,Directory,IndexWriterConfig).mjava","pathOld":"/dev/null","sourceNew":"    public MockIndexWriter(Random r,Directory dir, IndexWriterConfig conf) throws IOException {\n      super(dir, conf);\n      this.r = r;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f59cacf51112a3af6d01ca16002ca03feec1c93","date":1291064479,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter.MockIndexWriter#MockIndexWriter(Random,Directory,IndexWriterConfig).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter.MockIndexWriter#MockIndexWriter(Random,Directory,IndexWriterConfig).mjava","sourceNew":"    public MockIndexWriter(Random r,Directory dir, IndexWriterConfig conf) throws IOException {\n      super(dir, conf);\n      // must make a private random since our methods are\n      // called from different threads; else test failures may\n      // not be reproducible from the original seed\n      this.r = new Random(r.nextInt());\n    }\n\n","sourceOld":"    public MockIndexWriter(Random r,Directory dir, IndexWriterConfig conf) throws IOException {\n      super(dir, conf);\n      this.r = r;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter.MockIndexWriter#MockIndexWriter(Random,Directory,IndexWriterConfig).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter.MockIndexWriter#MockIndexWriter(Random,Directory,IndexWriterConfig).mjava","sourceNew":"    public MockIndexWriter(Random r,Directory dir, IndexWriterConfig conf) throws IOException {\n      super(dir, conf);\n      // must make a private random since our methods are\n      // called from different threads; else test failures may\n      // not be reproducible from the original seed\n      this.r = new Random(r.nextInt());\n    }\n\n","sourceOld":"    public MockIndexWriter(Random r,Directory dir, IndexWriterConfig conf) throws IOException {\n      super(dir, conf);\n      this.r = r;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter.MockIndexWriter#MockIndexWriter(Random,Directory,IndexWriterConfig).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter.MockIndexWriter#MockIndexWriter(Random,Directory,IndexWriterConfig).mjava","sourceNew":"    public MockIndexWriter(Random r,Directory dir, IndexWriterConfig conf) throws IOException {\n      super(dir, conf);\n      // must make a private random since our methods are\n      // called from different threads; else test failures may\n      // not be reproducible from the original seed\n      this.r = new Random(r.nextInt());\n    }\n\n","sourceOld":"    public MockIndexWriter(Random r,Directory dir, IndexWriterConfig conf) throws IOException {\n      super(dir, conf);\n      this.r = r;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter.MockIndexWriter#MockIndexWriter(Random,Directory,IndexWriterConfig).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter.MockIndexWriter#MockIndexWriter(Random,Directory,IndexWriterConfig).mjava","sourceNew":"    public MockIndexWriter(Random r,Directory dir, IndexWriterConfig conf) throws IOException {\n      super(dir, conf);\n      // must make a private random since our methods are\n      // called from different threads; else test failures may\n      // not be reproducible from the original seed\n      this.r = new Random(r.nextInt());\n    }\n\n","sourceOld":"    public MockIndexWriter(Random r,Directory dir, IndexWriterConfig conf) throws IOException {\n      super(dir, conf);\n      // must make a private random since our methods are\n      // called from different threads; else test failures may\n      // not be reproducible from the original seed\n      this.r = new Random(r.nextInt());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter.MockIndexWriter#MockIndexWriter(Random,Directory,IndexWriterConfig).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter.MockIndexWriter#MockIndexWriter(Random,Directory,IndexWriterConfig).mjava","sourceNew":"    public MockIndexWriter(Random r,Directory dir, IndexWriterConfig conf) throws IOException {\n      super(dir, conf);\n      // must make a private random since our methods are\n      // called from different threads; else test failures may\n      // not be reproducible from the original seed\n      this.r = new Random(r.nextInt());\n    }\n\n","sourceOld":"    public MockIndexWriter(Random r,Directory dir, IndexWriterConfig conf) throws IOException {\n      super(dir, conf);\n      // must make a private random since our methods are\n      // called from different threads; else test failures may\n      // not be reproducible from the original seed\n      this.r = new Random(r.nextInt());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter.MockIndexWriter#MockIndexWriter(Random,Directory,IndexWriterConfig).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter.MockIndexWriter#MockIndexWriter(Random,Directory,IndexWriterConfig).mjava","sourceNew":"    public MockIndexWriter(Random r,Directory dir, IndexWriterConfig conf) throws IOException {\n      super(dir, conf);\n      // must make a private random since our methods are\n      // called from different threads; else test failures may\n      // not be reproducible from the original seed\n      this.r = new Random(r.nextInt());\n    }\n\n","sourceOld":"    public MockIndexWriter(Random r,Directory dir, IndexWriterConfig conf) throws IOException {\n      super(dir, conf);\n      // must make a private random since our methods are\n      // called from different threads; else test failures may\n      // not be reproducible from the original seed\n      this.r = new Random(r.nextInt());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3242a09f703274d3b9283f2064a1a33064b53a1b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4b103252dee6afa1b6d7a622c773d178788eb85a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","82d5bc05ad1c4710c0c32090d485203fa3ee8cc4"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["3bb13258feba31ab676502787ab2e1779f129b7a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"82d5bc05ad1c4710c0c32090d485203fa3ee8cc4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["3242a09f703274d3b9283f2064a1a33064b53a1b","3f59cacf51112a3af6d01ca16002ca03feec1c93"],"3f59cacf51112a3af6d01ca16002ca03feec1c93":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"3bb13258feba31ab676502787ab2e1779f129b7a":["4b103252dee6afa1b6d7a622c773d178788eb85a","3f59cacf51112a3af6d01ca16002ca03feec1c93"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["3f59cacf51112a3af6d01ca16002ca03feec1c93"]},"commit2Childs":{"3242a09f703274d3b9283f2064a1a33064b53a1b":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["3242a09f703274d3b9283f2064a1a33064b53a1b","3f59cacf51112a3af6d01ca16002ca03feec1c93","3bb13258feba31ab676502787ab2e1779f129b7a"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3242a09f703274d3b9283f2064a1a33064b53a1b","4b103252dee6afa1b6d7a622c773d178788eb85a","82d5bc05ad1c4710c0c32090d485203fa3ee8cc4"],"82d5bc05ad1c4710c0c32090d485203fa3ee8cc4":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"3bb13258feba31ab676502787ab2e1779f129b7a":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"3f59cacf51112a3af6d01ca16002ca03feec1c93":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}