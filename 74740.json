{"path":"src/java/org/apache/lucene/search/TopDocCollector#collect(int,float).mjava","commits":[{"id":"9792120b189197625a243c2b501e802851a69c79","date":1136239207,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TopDocCollector#collect(int,float).mjava","pathOld":"/dev/null","sourceNew":"  // javadoc inherited\n  public void collect(int doc, float score) {\n    if (score > 0.0f) {\n      totalHits++;\n      if (hq.size() < numHits || score >= minScore) {\n        hq.insert(new ScoreDoc(doc, score));\n        minScore = ((ScoreDoc)hq.top()).score; // maintain minScore\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5241670df94f0524d3e8e9764331dea13b545564","date":1197914713,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/TopDocCollector#collect(int,float).mjava","pathOld":"src/java/org/apache/lucene/search/TopDocCollector#collect(int,float).mjava","sourceNew":"  // javadoc inherited\n  public void collect(int doc, float score) {\n    if (score > 0.0f) {\n      totalHits++;\n      if (reusableSD == null) {\n        reusableSD = new ScoreDoc(doc, score);\n      } else if (score >= reusableSD.score) {\n        // reusableSD holds the last \"rejected\" entry, so, if\n        // this new score is not better than that, there's no\n        // need to try inserting it\n        reusableSD.doc = doc;\n        reusableSD.score = score;\n      } else {\n        return;\n      }\n      reusableSD = (ScoreDoc) hq.insertWithOverflow(reusableSD);\n    }\n  }\n\n","sourceOld":"  // javadoc inherited\n  public void collect(int doc, float score) {\n    if (score > 0.0f) {\n      totalHits++;\n      if (hq.size() < numHits || score >= minScore) {\n        hq.insert(new ScoreDoc(doc, score));\n        minScore = ((ScoreDoc)hq.top()).score; // maintain minScore\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ded38b25fe842ef1efc6715745bb8d8ed8e2fc99","date":1255432705,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/TopDocCollector#collect(int,float).mjava","sourceNew":null,"sourceOld":"  // javadoc inherited\n  public void collect(int doc, float score) {\n    if (score > 0.0f) {\n      totalHits++;\n      if (reusableSD == null) {\n        reusableSD = new ScoreDoc(doc, score);\n      } else if (score >= reusableSD.score) {\n        // reusableSD holds the last \"rejected\" entry, so, if\n        // this new score is not better than that, there's no\n        // need to try inserting it\n        reusableSD.doc = doc;\n        reusableSD.score = score;\n      } else {\n        return;\n      }\n      reusableSD = (ScoreDoc) hq.insertWithOverflow(reusableSD);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9792120b189197625a243c2b501e802851a69c79":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ded38b25fe842ef1efc6715745bb8d8ed8e2fc99":["5241670df94f0524d3e8e9764331dea13b545564"],"5241670df94f0524d3e8e9764331dea13b545564":["9792120b189197625a243c2b501e802851a69c79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ded38b25fe842ef1efc6715745bb8d8ed8e2fc99"]},"commit2Childs":{"9792120b189197625a243c2b501e802851a69c79":["5241670df94f0524d3e8e9764331dea13b545564"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9792120b189197625a243c2b501e802851a69c79"],"ded38b25fe842ef1efc6715745bb8d8ed8e2fc99":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5241670df94f0524d3e8e9764331dea13b545564":["ded38b25fe842ef1efc6715745bb8d8ed8e2fc99"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}