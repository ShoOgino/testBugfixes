{"path":"src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","commits":[{"id":"04ec3320f0c14445c62d0eeff30995f8704138b7","date":1218250215,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warning( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        for( String file : configdir.list() ) {\n          hide.add( file.toUpperCase() );\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase() );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"admin/file\", handler);\n\n        log.warning( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n  } \n\n","sourceOld":null,"bugFix":null,"bugIntro":["bea7ae6fc3e93bacf4b7a43a70b6b58ab138c968","0aea57ab530d174e645bf6e14d04db1e243e13d7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bea7ae6fc3e93bacf4b7a43a70b6b58ab138c968","date":1220054712,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","sourceNew":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warning( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        for( String file : configdir.list() ) {\n          hide.add( file.toUpperCase() );\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase() );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warning( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n  } \n\n","sourceOld":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warning( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        for( String file : configdir.list() ) {\n          hide.add( file.toUpperCase() );\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase() );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"admin/file\", handler);\n\n        log.warning( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n  } \n\n","bugFix":["04ec3320f0c14445c62d0eeff30995f8704138b7"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"00da8b51bdeae168a5b26ec506db372b219ca7a2","date":1221704186,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","sourceNew":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        for( String file : configdir.list() ) {\n          hide.add( file.toUpperCase() );\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase() );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n  } \n\n","sourceOld":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warning( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        for( String file : configdir.list() ) {\n          hide.add( file.toUpperCase() );\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase() );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warning( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"de02b876f22af1da8e2e61e1bcae2d6d87ba788a","date":1223395982,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","sourceNew":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        if( configdir.exists() && configdir.isDirectory() ) {\n          for( String file : configdir.list() ) {\n            hide.add( file.toUpperCase() );\n          }\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase() );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n  } \n\n","sourceOld":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        for( String file : configdir.list() ) {\n          hide.add( file.toUpperCase() );\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase() );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e5a95ce1d7a3779af6db59b6b39d3b89172d7445","date":1228620032,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","sourceNew":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        if( configdir.exists() && configdir.isDirectory() ) {\n          for( String file : configdir.list() ) {\n            hide.add( file.toUpperCase() );\n          }\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase() );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n  } \n\n","sourceOld":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        if( configdir.exists() && configdir.isDirectory() ) {\n          for( String file : configdir.list() ) {\n            hide.add( file.toUpperCase() );\n          }\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase() );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initDeprecatedSupport().mjava","sourceNew":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        if( configdir.exists() && configdir.isDirectory() ) {\n          for( String file : configdir.list() ) {\n            hide.add( file.toUpperCase() );\n          }\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase() );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n  } \n\n","sourceOld":"  /**\n   * Manage anything that should be taken care of in case configs change\n   */\n  private void initDeprecatedSupport()\n  {\n    // TODO -- this should be removed in deprecation release...\n    String gettable = solrConfig.get(\"admin/gettableFiles\", null );\n    if( gettable != null ) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <admin/gettableFiles>, Please \"+\n          \"update your config to use the ShowFileRequestHandler.\" );\n      if( getRequestHandler( \"/admin/file\" ) == null ) {\n        NamedList<String> invariants = new NamedList<String>();\n        \n        // Hide everything...\n        Set<String> hide = new HashSet<String>();\n        File configdir = new File( solrConfig.getResourceLoader().getConfigDir() ); \n        if( configdir.exists() && configdir.isDirectory() ) {\n          for( String file : configdir.list() ) {\n            hide.add( file.toUpperCase() );\n          }\n        }\n        \n        // except the \"gettable\" list\n        StringTokenizer st = new StringTokenizer( gettable );\n        while( st.hasMoreTokens() ) {\n          hide.remove( st.nextToken().toUpperCase() );\n        }\n        for( String s : hide ) {\n          invariants.add( ShowFileRequestHandler.HIDDEN, s );\n        }\n        \n        NamedList<Object> args = new NamedList<Object>();\n        args.add( \"invariants\", invariants );\n        ShowFileRequestHandler handler = new ShowFileRequestHandler();\n        handler.init( args );\n        reqHandlers.register(\"/admin/file\", handler);\n\n        log.warn( \"adding ShowFileRequestHandler with hidden files: \"+hide );\n      }\n    }\n\n    String facetSort = solrConfig.get(\"//bool[@name='facet.sort']\", null);\n    if (facetSort != null) {\n      log.warn( \n          \"solrconfig.xml uses deprecated <bool name='facet.sort'>. Please \"+\n          \"update your config to use <string name='facet.sort'>.\");\n    }\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"de02b876f22af1da8e2e61e1bcae2d6d87ba788a":["00da8b51bdeae168a5b26ec506db372b219ca7a2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"bea7ae6fc3e93bacf4b7a43a70b6b58ab138c968":["04ec3320f0c14445c62d0eeff30995f8704138b7"],"ad94625fb8d088209f46650c8097196fec67f00c":["e5a95ce1d7a3779af6db59b6b39d3b89172d7445"],"00da8b51bdeae168a5b26ec506db372b219ca7a2":["bea7ae6fc3e93bacf4b7a43a70b6b58ab138c968"],"04ec3320f0c14445c62d0eeff30995f8704138b7":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"e5a95ce1d7a3779af6db59b6b39d3b89172d7445":["de02b876f22af1da8e2e61e1bcae2d6d87ba788a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"de02b876f22af1da8e2e61e1bcae2d6d87ba788a":["e5a95ce1d7a3779af6db59b6b39d3b89172d7445"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["04ec3320f0c14445c62d0eeff30995f8704138b7"],"bea7ae6fc3e93bacf4b7a43a70b6b58ab138c968":["00da8b51bdeae168a5b26ec506db372b219ca7a2"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"00da8b51bdeae168a5b26ec506db372b219ca7a2":["de02b876f22af1da8e2e61e1bcae2d6d87ba788a"],"04ec3320f0c14445c62d0eeff30995f8704138b7":["bea7ae6fc3e93bacf4b7a43a70b6b58ab138c968"],"e5a95ce1d7a3779af6db59b6b39d3b89172d7445":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}