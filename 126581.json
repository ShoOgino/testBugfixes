{"path":"solr/core/src/java/org/apache/solr/request/SimpleFacets#rangeCount(ParsedParams,SchemaField,String,String,boolean,boolean).mjava","commits":[{"id":"aa62c79a7afa4d7f22e1f71b883659f3213d7db1","date":1435334422,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/SimpleFacets#rangeCount(ParsedParams,SchemaField,String,String,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SimpleFacets#rangeCount(SchemaField,String,String,boolean,boolean).mjava","sourceNew":"  /**\n   * Macro for getting the numDocs of range over docs\n   * @see SolrIndexSearcher#numDocs\n   * @see TermRangeQuery\n   */\n  protected int rangeCount(ParsedParams parsed, SchemaField sf, String low, String high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    Query rangeQ = sf.getType().getRangeQuery(null, sf, low, high, iLow, iHigh);\n    if (parsed.params.getBool(GroupParams.GROUP_FACET, false)) {\n      return getGroupedFacetQueryCount(rangeQ, parsed);\n    } else {\n      return searcher.numDocs(rangeQ , parsed.docs);\n    }\n  }\n\n","sourceOld":"  /**\n   * Macro for getting the numDocs of range over docs\n   * @see SolrIndexSearcher#numDocs\n   * @see TermRangeQuery\n   */\n  protected int rangeCount(SchemaField sf, String low, String high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    Query rangeQ = sf.getType().getRangeQuery(null, sf, low, high, iLow, iHigh);\n    if (params.getBool(GroupParams.GROUP_FACET, false)) {\n      return getGroupedFacetQueryCount(rangeQ);\n    } else {\n      return searcher.numDocs(rangeQ , docs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22d0a81a05eba47d5e18976f17d88306b218cc22","date":1436341569,"type":4,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/request/SimpleFacets#rangeCount(ParsedParams,SchemaField,String,String,boolean,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Macro for getting the numDocs of range over docs\n   * @see SolrIndexSearcher#numDocs\n   * @see TermRangeQuery\n   */\n  protected int rangeCount(ParsedParams parsed, SchemaField sf, String low, String high,\n                           boolean iLow, boolean iHigh) throws IOException {\n    Query rangeQ = sf.getType().getRangeQuery(null, sf, low, high, iLow, iHigh);\n    if (parsed.params.getBool(GroupParams.GROUP_FACET, false)) {\n      return getGroupedFacetQueryCount(rangeQ, parsed);\n    } else {\n      return searcher.numDocs(rangeQ , parsed.docs);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22d0a81a05eba47d5e18976f17d88306b218cc22":["aa62c79a7afa4d7f22e1f71b883659f3213d7db1"],"aa62c79a7afa4d7f22e1f71b883659f3213d7db1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["22d0a81a05eba47d5e18976f17d88306b218cc22"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aa62c79a7afa4d7f22e1f71b883659f3213d7db1"],"22d0a81a05eba47d5e18976f17d88306b218cc22":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aa62c79a7afa4d7f22e1f71b883659f3213d7db1":["22d0a81a05eba47d5e18976f17d88306b218cc22"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}