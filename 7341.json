{"path":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","sourceNew":"    /**\n     * {@inheritDoc}\n     */\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.collector;\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<String>(topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","sourceOld":"    /**\n     * {@inheritDoc}\n     */\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.collector;\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<String>(topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","sourceNew":"    /**\n     * {@inheritDoc}\n     */\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.collector;\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<String>(topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","sourceOld":"    /**\n     * {@inheritDoc}\n     */\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.collector;\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<String>(topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","pathOld":"solr/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","sourceNew":"    /**\n     * {@inheritDoc}\n     */\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.collector;\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<String>(topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","sourceOld":"    /**\n     * {@inheritDoc}\n     */\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.collector;\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<String>(topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ccc08aa684aee4964baee0644a6ba047bfd70829","date":1316263707,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","sourceNew":"    /**\n     * {@inheritDoc}\n     */\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.getDelegate();\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<String>(topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","sourceOld":"    /**\n     * {@inheritDoc}\n     */\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.collector;\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<String>(topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","bugFix":null,"bugIntro":["2761c3f53e738e28c17c75124aa305e4e63c989d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"85d41890f2bad879e6a04c6dd7d2cf276f973994","date":1338488367,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","sourceNew":"    /**\n     * {@inheritDoc}\n     */\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.getDelegate();\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<String>(Float.NaN, topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","sourceOld":"    /**\n     * {@inheritDoc}\n     */\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.getDelegate();\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<String>(topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","bugFix":["9c7cdfe5a1ea9db97faa404b251fa644faa73597"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","sourceNew":"    /**\n     * {@inheritDoc}\n     */\n    @Override\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.getDelegate();\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<String>(Float.NaN, topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","sourceOld":"    /**\n     * {@inheritDoc}\n     */\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.getDelegate();\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<String>(Float.NaN, topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","sourceNew":"    /**\n     * {@inheritDoc}\n     */\n    @Override\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.getDelegate();\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<String>(Float.NaN, topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","sourceOld":"    /**\n     * {@inheritDoc}\n     */\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.getDelegate();\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<String>(Float.NaN, topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","sourceNew":"    /**\n     * {@inheritDoc}\n     */\n    @Override\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.getDelegate();\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<String>(Float.NaN, topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","sourceOld":"    /**\n     * {@inheritDoc}\n     */\n    @Override\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.getDelegate();\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<String>(Float.NaN, topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","sourceNew":"    /**\n     * {@inheritDoc}\n     */\n    @Override\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.getDelegate();\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<String>(Float.NaN, topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","sourceOld":"    /**\n     * {@inheritDoc}\n     */\n    @Override\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.getDelegate();\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<String>(Float.NaN, topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","sourceNew":"    /**\n     * {@inheritDoc}\n     */\n    @Override\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.getDelegate();\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<>(Float.NaN, topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","sourceOld":"    /**\n     * {@inheritDoc}\n     */\n    @Override\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.getDelegate();\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<String>(Float.NaN, topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a80a37ae73034270b57bfd57a44f8fcadc952fa0","date":1515440719,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","sourceNew":"    @Override\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.getDelegate();\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<>(Float.NaN, topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","sourceOld":"    /**\n     * {@inheritDoc}\n     */\n    @Override\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.getDelegate();\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<>(Float.NaN, topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","sourceNew":"    @Override\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.getDelegate();\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<>(Float.NaN, topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","sourceOld":"    /**\n     * {@inheritDoc}\n     */\n    @Override\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.getDelegate();\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<>(Float.NaN, topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"81fff83bdb893c1471efd78f6a9a3ce4f98120b9","date":1531895937,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","sourceNew":"    @Override\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.getDelegate();\n      TopDocs topDocs = topDocsCollector.topDocs();\n      float maxScore;\n      if (withinGroupSort == null || withinGroupSort.equals(Sort.RELEVANCE)) {\n        maxScore = topDocs.scoreDocs.length == 0 ? Float.NaN : topDocs.scoreDocs[0].score;\n      } else if (needScores) {\n        maxScore = maxScoreCollector.getMaxScore();\n      } else {\n        maxScore = Float.NaN;\n      }\n      \n      GroupDocs<String> groupDocs = new GroupDocs<>(Float.NaN, maxScore, topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","sourceOld":"    @Override\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.getDelegate();\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<>(Float.NaN, topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","sourceNew":"    @Override\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.getDelegate();\n      TopDocs topDocs = topDocsCollector.topDocs();\n      float maxScore;\n      if (withinGroupSort == null || withinGroupSort.equals(Sort.RELEVANCE)) {\n        maxScore = topDocs.scoreDocs.length == 0 ? Float.NaN : topDocs.scoreDocs[0].score;\n      } else if (needScores) {\n        maxScore = maxScoreCollector.getMaxScore();\n      } else {\n        maxScore = Float.NaN;\n      }\n      \n      GroupDocs<String> groupDocs = new GroupDocs<>(Float.NaN, maxScore, topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","sourceOld":"    @Override\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.getDelegate();\n      TopDocs topDocs = topDocsCollector.topDocs();\n      GroupDocs<String> groupDocs = new GroupDocs<>(Float.NaN, topDocs.getMaxScore(), topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2761c3f53e738e28c17c75124aa305e4e63c989d","date":1572337563,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/Grouping.CommandQuery#finish().mjava","sourceNew":"    @Override\n    protected void finish() throws IOException {\n      TopDocs topDocs = topCollector.topDocs();\n      float maxScore;\n      if (withinGroupSort == null || withinGroupSort.equals(Sort.RELEVANCE)) {\n        maxScore = topDocs.scoreDocs.length == 0 ? Float.NaN : topDocs.scoreDocs[0].score;\n      } else if (needScores) {\n        // use top-level query to populate the scores\n        TopFieldCollector.populateScores(topDocs.scoreDocs, searcher, Grouping.this.query);\n        maxScore = maxScoreCollector.getMaxScore();\n      } else {\n        maxScore = Float.NaN;\n      }\n      \n      GroupDocs<String> groupDocs = new GroupDocs<>(Float.NaN, maxScore, topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","sourceOld":"    @Override\n    protected void finish() throws IOException {\n      TopDocsCollector topDocsCollector = (TopDocsCollector) collector.getDelegate();\n      TopDocs topDocs = topDocsCollector.topDocs();\n      float maxScore;\n      if (withinGroupSort == null || withinGroupSort.equals(Sort.RELEVANCE)) {\n        maxScore = topDocs.scoreDocs.length == 0 ? Float.NaN : topDocs.scoreDocs[0].score;\n      } else if (needScores) {\n        maxScore = maxScoreCollector.getMaxScore();\n      } else {\n        maxScore = Float.NaN;\n      }\n      \n      GroupDocs<String> groupDocs = new GroupDocs<>(Float.NaN, maxScore, topDocs.totalHits, topDocs.scoreDocs, query.toString(), null);\n      if (main) {\n        mainResult = getDocList(groupDocs);\n      } else {\n        NamedList rsp = commonResponse();\n        addDocList(rsp, groupDocs);\n      }\n    }\n\n","bugFix":["9c7cdfe5a1ea9db97faa404b251fa644faa73597","ccc08aa684aee4964baee0644a6ba047bfd70829"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["85d41890f2bad879e6a04c6dd7d2cf276f973994","7530de27b87b961b51f01bd1299b7004d46e8823"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"b94236357aaa22b76c10629851fe4e376e0cea82":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","a80a37ae73034270b57bfd57a44f8fcadc952fa0"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["7530de27b87b961b51f01bd1299b7004d46e8823","19275ba31e621f6da1b83bf13af75233876fd3d4"],"ccc08aa684aee4964baee0644a6ba047bfd70829":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a80a37ae73034270b57bfd57a44f8fcadc952fa0":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["7530de27b87b961b51f01bd1299b7004d46e8823"],"85d41890f2bad879e6a04c6dd7d2cf276f973994":["ccc08aa684aee4964baee0644a6ba047bfd70829"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["b94236357aaa22b76c10629851fe4e376e0cea82","81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"81fff83bdb893c1471efd78f6a9a3ce4f98120b9":["b94236357aaa22b76c10629851fe4e376e0cea82"],"7530de27b87b961b51f01bd1299b7004d46e8823":["85d41890f2bad879e6a04c6dd7d2cf276f973994"],"2761c3f53e738e28c17c75124aa305e4e63c989d":["81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2761c3f53e738e28c17c75124aa305e4e63c989d"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["b94236357aaa22b76c10629851fe4e376e0cea82","a80a37ae73034270b57bfd57a44f8fcadc952fa0"],"b94236357aaa22b76c10629851fe4e376e0cea82":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"a80a37ae73034270b57bfd57a44f8fcadc952fa0":["b94236357aaa22b76c10629851fe4e376e0cea82"],"ccc08aa684aee4964baee0644a6ba047bfd70829":["85d41890f2bad879e6a04c6dd7d2cf276f973994"],"c26f00b574427b55127e869b935845554afde1fa":["ccc08aa684aee4964baee0644a6ba047bfd70829"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec"],"85d41890f2bad879e6a04c6dd7d2cf276f973994":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"81fff83bdb893c1471efd78f6a9a3ce4f98120b9":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","2761c3f53e738e28c17c75124aa305e4e63c989d"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","19275ba31e621f6da1b83bf13af75233876fd3d4"],"2761c3f53e738e28c17c75124aa305e4e63c989d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}