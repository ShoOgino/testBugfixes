{"path":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testMixedTypesViaAddIndexes().mjava","commits":[{"id":"6e2893fd5349134af382d33ccc3d84840394c6c1","date":1353682567,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testMixedTypesViaAddIndexes().mjava","pathOld":"/dev/null","sourceNew":"  // Adding documents via addIndexes\n  public void testMixedTypesViaAddIndexes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new IntDocValuesField(\"foo\", 0));\n    w.addDocument(doc);\n\n    // Make 2nd index w/ inconsistent field\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(new SortedBytesDocValuesField(\"foo\", new BytesRef(\"hello\")));\n    w2.addDocument(doc);\n    w2.close();\n\n    try {\n      w.addIndexes(new Directory[] {dir2});\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    IndexReader r = DirectoryReader.open(dir2);\n    try {\n      w.addIndexes(new IndexReader[] {r});\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    r.close();\n    dir2.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0","0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"423d89a2b3cc419b647c07c2b3fdbc54311d07f9","date":1358836612,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testMixedTypesViaAddIndexes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testMixedTypesViaAddIndexes().mjava","sourceNew":"  // Adding documents via addIndexes\n  public void testMixedTypesViaAddIndexes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"foo\", 0));\n    w.addDocument(doc);\n\n    // Make 2nd index w/ inconsistent field\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"foo\", new BytesRef(\"hello\")));\n    w2.addDocument(doc);\n    w2.close();\n\n    try {\n      w.addIndexes(new Directory[] {dir2});\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    IndexReader r = DirectoryReader.open(dir2);\n    try {\n      w.addIndexes(new IndexReader[] {r});\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    r.close();\n    dir2.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  // Adding documents via addIndexes\n  public void testMixedTypesViaAddIndexes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new IntDocValuesField(\"foo\", 0));\n    w.addDocument(doc);\n\n    // Make 2nd index w/ inconsistent field\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(new SortedBytesDocValuesField(\"foo\", new BytesRef(\"hello\")));\n    w2.addDocument(doc);\n    w2.close();\n\n    try {\n      w.addIndexes(new Directory[] {dir2});\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    IndexReader r = DirectoryReader.open(dir2);\n    try {\n      w.addIndexes(new IndexReader[] {r});\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    r.close();\n    dir2.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testMixedTypesViaAddIndexes().mjava","pathOld":"/dev/null","sourceNew":"  // Adding documents via addIndexes\n  public void testMixedTypesViaAddIndexes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"foo\", 0));\n    w.addDocument(doc);\n\n    // Make 2nd index w/ inconsistent field\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"foo\", new BytesRef(\"hello\")));\n    w2.addDocument(doc);\n    w2.close();\n\n    try {\n      w.addIndexes(new Directory[] {dir2});\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    IndexReader r = DirectoryReader.open(dir2);\n    try {\n      w.addIndexes(new IndexReader[] {r});\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    r.close();\n    dir2.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testMixedTypesViaAddIndexes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testMixedTypesViaAddIndexes().mjava","sourceNew":"  // Adding documents via addIndexes\n  public void testMixedTypesViaAddIndexes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"foo\", 0));\n    w.addDocument(doc);\n\n    // Make 2nd index w/ inconsistent field\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"foo\", new BytesRef(\"hello\")));\n    w2.addDocument(doc);\n    w2.shutdown();\n\n    try {\n      w.addIndexes(new Directory[] {dir2});\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    IndexReader r = DirectoryReader.open(dir2);\n    try {\n      w.addIndexes(new IndexReader[] {r});\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    r.close();\n    dir2.close();\n    w.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  // Adding documents via addIndexes\n  public void testMixedTypesViaAddIndexes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"foo\", 0));\n    w.addDocument(doc);\n\n    // Make 2nd index w/ inconsistent field\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"foo\", new BytesRef(\"hello\")));\n    w2.addDocument(doc);\n    w2.close();\n\n    try {\n      w.addIndexes(new Directory[] {dir2});\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    IndexReader r = DirectoryReader.open(dir2);\n    try {\n      w.addIndexes(new IndexReader[] {r});\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    r.close();\n    dir2.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testMixedTypesViaAddIndexes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testMixedTypesViaAddIndexes().mjava","sourceNew":"  // Adding documents via addIndexes\n  public void testMixedTypesViaAddIndexes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"foo\", 0));\n    w.addDocument(doc);\n\n    // Make 2nd index w/ inconsistent field\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"foo\", new BytesRef(\"hello\")));\n    w2.addDocument(doc);\n    w2.shutdown();\n\n    try {\n      w.addIndexes(new Directory[] {dir2});\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    IndexReader r = DirectoryReader.open(dir2);\n    try {\n      w.addIndexes(new IndexReader[] {r});\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    r.close();\n    dir2.close();\n    w.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  // Adding documents via addIndexes\n  public void testMixedTypesViaAddIndexes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"foo\", 0));\n    w.addDocument(doc);\n\n    // Make 2nd index w/ inconsistent field\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"foo\", new BytesRef(\"hello\")));\n    w2.addDocument(doc);\n    w2.shutdown();\n\n    try {\n      w.addIndexes(new Directory[] {dir2});\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    IndexReader r = DirectoryReader.open(dir2);\n    try {\n      w.addIndexes(new IndexReader[] {r});\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    r.close();\n    dir2.close();\n    w.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testMixedTypesViaAddIndexes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testMixedTypesViaAddIndexes().mjava","sourceNew":"  // Adding documents via addIndexes\n  public void testMixedTypesViaAddIndexes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"foo\", 0));\n    w.addDocument(doc);\n\n    // Make 2nd index w/ inconsistent field\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"foo\", new BytesRef(\"hello\")));\n    w2.addDocument(doc);\n    w2.close();\n\n    try {\n      w.addIndexes(new Directory[] {dir2});\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    IndexReader r = DirectoryReader.open(dir2);\n    try {\n      w.addIndexes(new IndexReader[] {r});\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    r.close();\n    dir2.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  // Adding documents via addIndexes\n  public void testMixedTypesViaAddIndexes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"foo\", 0));\n    w.addDocument(doc);\n\n    // Make 2nd index w/ inconsistent field\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"foo\", new BytesRef(\"hello\")));\n    w2.addDocument(doc);\n    w2.shutdown();\n\n    try {\n      w.addIndexes(new Directory[] {dir2});\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    IndexReader r = DirectoryReader.open(dir2);\n    try {\n      w.addIndexes(new IndexReader[] {r});\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    r.close();\n    dir2.close();\n    w.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9cdbc2cadeaf282528fe4d1c06e9f8bee38ccec4","date":1414017220,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testMixedTypesViaAddIndexes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testMixedTypesViaAddIndexes().mjava","sourceNew":"  // Adding documents via addIndexes\n  public void testMixedTypesViaAddIndexes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"foo\", 0));\n    w.addDocument(doc);\n\n    // Make 2nd index w/ inconsistent field\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"foo\", new BytesRef(\"hello\")));\n    w2.addDocument(doc);\n    w2.close();\n\n    try {\n      w.addIndexes(new Directory[] {dir2});\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    IndexReader r = DirectoryReader.open(dir2);\n    try {\n      w.addIndexes(new IndexReader[] {r});\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    r.close();\n    dir2.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  // Adding documents via addIndexes\n  public void testMixedTypesViaAddIndexes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"foo\", 0));\n    w.addDocument(doc);\n\n    // Make 2nd index w/ inconsistent field\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"foo\", new BytesRef(\"hello\")));\n    w2.addDocument(doc);\n    w2.close();\n\n    try {\n      w.addIndexes(new Directory[] {dir2});\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    IndexReader r = DirectoryReader.open(dir2);\n    try {\n      w.addIndexes(new IndexReader[] {r});\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    r.close();\n    dir2.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa","date":1420599177,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testMixedTypesViaAddIndexes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testMixedTypesViaAddIndexes().mjava","sourceNew":"  // Adding documents via addIndexes\n  public void testMixedTypesViaAddIndexes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"foo\", 0));\n    w.addDocument(doc);\n\n    // Make 2nd index w/ inconsistent field\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"foo\", new BytesRef(\"hello\")));\n    w2.addDocument(doc);\n    w2.close();\n\n    try {\n      w.addIndexes(new Directory[] {dir2});\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    DirectoryReader r = DirectoryReader.open(dir2);\n    try {\n      TestUtil.addIndexesSlowly(w, r);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    r.close();\n    dir2.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  // Adding documents via addIndexes\n  public void testMixedTypesViaAddIndexes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"foo\", 0));\n    w.addDocument(doc);\n\n    // Make 2nd index w/ inconsistent field\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"foo\", new BytesRef(\"hello\")));\n    w2.addDocument(doc);\n    w2.close();\n\n    try {\n      w.addIndexes(new Directory[] {dir2});\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    IndexReader r = DirectoryReader.open(dir2);\n    try {\n      w.addIndexes(new IndexReader[] {r});\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    r.close();\n    dir2.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":["6e2893fd5349134af382d33ccc3d84840394c6c1"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testMixedTypesViaAddIndexes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testMixedTypesViaAddIndexes().mjava","sourceNew":"  // Adding documents via addIndexes\n  public void testMixedTypesViaAddIndexes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"foo\", 0));\n    w.addDocument(doc);\n\n    // Make 2nd index w/ inconsistent field\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"foo\", new BytesRef(\"hello\")));\n    w2.addDocument(doc);\n    w2.close();\n\n    expectThrows(IllegalArgumentException.class, () -> {\n      w.addIndexes(new Directory[] {dir2});\n    });\n\n    DirectoryReader r = DirectoryReader.open(dir2);\n    expectThrows(IllegalArgumentException.class, () -> {\n      TestUtil.addIndexesSlowly(w, r);\n    });\n\n    r.close();\n    dir2.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  // Adding documents via addIndexes\n  public void testMixedTypesViaAddIndexes() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new NumericDocValuesField(\"foo\", 0));\n    w.addDocument(doc);\n\n    // Make 2nd index w/ inconsistent field\n    Directory dir2 = newDirectory();\n    IndexWriter w2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"foo\", new BytesRef(\"hello\")));\n    w2.addDocument(doc);\n    w2.close();\n\n    try {\n      w.addIndexes(new Directory[] {dir2});\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    DirectoryReader r = DirectoryReader.open(dir2);\n    try {\n      TestUtil.addIndexesSlowly(w, r);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    r.close();\n    dir2.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":["6e2893fd5349134af382d33ccc3d84840394c6c1","9cdbc2cadeaf282528fe4d1c06e9f8bee38ccec4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9cdbc2cadeaf282528fe4d1c06e9f8bee38ccec4":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","423d89a2b3cc419b647c07c2b3fdbc54311d07f9"],"6e2893fd5349134af382d33ccc3d84840394c6c1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"],"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa":["9cdbc2cadeaf282528fe4d1c06e9f8bee38ccec4"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"423d89a2b3cc419b647c07c2b3fdbc54311d07f9":["6e2893fd5349134af382d33ccc3d84840394c6c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"9cdbc2cadeaf282528fe4d1c06e9f8bee38ccec4":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"6e2893fd5349134af382d33ccc3d84840394c6c1":["423d89a2b3cc419b647c07c2b3fdbc54311d07f9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","6e2893fd5349134af382d33ccc3d84840394c6c1"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["9cdbc2cadeaf282528fe4d1c06e9f8bee38ccec4"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa":["05fe562aa248790944d43cdd478f512572835ba0"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"423d89a2b3cc419b647c07c2b3fdbc54311d07f9":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}