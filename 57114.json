{"path":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","commits":[{"id":"ccc08aa684aee4964baee0644a6ba047bfd70829","date":1316263707,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  public NamedList transform(List<Command> data) throws IOException {\n    NamedList<NamedList> result = new NamedList<NamedList>();\n    for (Command command : data) {\n      NamedList commandResult;\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        Collection<SearchGroup<BytesRef>> searchGroups = fieldCommand.result();\n        if (searchGroups == null) {\n          continue;\n        }\n\n        commandResult = serializeSearchGroup(searchGroups, fieldCommand.getGroupSort());\n      } else {\n        commandResult = null;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["af20870f6eab3807c968eec0b24e0c4358d0c1e5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"af20870f6eab3807c968eec0b24e0c4358d0c1e5","date":1337002937,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  public NamedList transform(List<Command> data) throws IOException {\n    NamedList<NamedList> result = new NamedList<NamedList>();\n    for (Command command : data) {\n      final NamedList<Object> commandResult = new NamedList<Object>();\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        Pair<Integer, Collection<SearchGroup<BytesRef>>> pair = fieldCommand.result();\n        Integer groupedCount = pair.getA();\n        Collection<SearchGroup<BytesRef>> searchGroups = pair.getB();\n        if (searchGroups != null) {\n          commandResult.add(\"topGroups\", serializeSearchGroup(searchGroups, fieldCommand.getGroupSort()));\n        }\n        if (groupedCount != null) {\n          commandResult.add(\"groupCount\", groupedCount);\n        }\n      } else {\n        continue;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  public NamedList transform(List<Command> data) throws IOException {\n    NamedList<NamedList> result = new NamedList<NamedList>();\n    for (Command command : data) {\n      NamedList commandResult;\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        Collection<SearchGroup<BytesRef>> searchGroups = fieldCommand.result();\n        if (searchGroups == null) {\n          continue;\n        }\n\n        commandResult = serializeSearchGroup(searchGroups, fieldCommand.getGroupSort());\n      } else {\n        commandResult = null;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","bugFix":["ccc08aa684aee4964baee0644a6ba047bfd70829"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public NamedList transform(List<Command> data) throws IOException {\n    NamedList<NamedList> result = new NamedList<NamedList>();\n    for (Command command : data) {\n      final NamedList<Object> commandResult = new NamedList<Object>();\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        Pair<Integer, Collection<SearchGroup<BytesRef>>> pair = fieldCommand.result();\n        Integer groupedCount = pair.getA();\n        Collection<SearchGroup<BytesRef>> searchGroups = pair.getB();\n        if (searchGroups != null) {\n          commandResult.add(\"topGroups\", serializeSearchGroup(searchGroups, fieldCommand.getGroupSort()));\n        }\n        if (groupedCount != null) {\n          commandResult.add(\"groupCount\", groupedCount);\n        }\n      } else {\n        continue;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  public NamedList transform(List<Command> data) throws IOException {\n    NamedList<NamedList> result = new NamedList<NamedList>();\n    for (Command command : data) {\n      final NamedList<Object> commandResult = new NamedList<Object>();\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        Pair<Integer, Collection<SearchGroup<BytesRef>>> pair = fieldCommand.result();\n        Integer groupedCount = pair.getA();\n        Collection<SearchGroup<BytesRef>> searchGroups = pair.getB();\n        if (searchGroups != null) {\n          commandResult.add(\"topGroups\", serializeSearchGroup(searchGroups, fieldCommand.getGroupSort()));\n        }\n        if (groupedCount != null) {\n          commandResult.add(\"groupCount\", groupedCount);\n        }\n      } else {\n        continue;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public NamedList transform(List<Command> data) throws IOException {\n    NamedList<NamedList> result = new NamedList<NamedList>();\n    for (Command command : data) {\n      final NamedList<Object> commandResult = new NamedList<Object>();\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        Pair<Integer, Collection<SearchGroup<BytesRef>>> pair = fieldCommand.result();\n        Integer groupedCount = pair.getA();\n        Collection<SearchGroup<BytesRef>> searchGroups = pair.getB();\n        if (searchGroups != null) {\n          commandResult.add(\"topGroups\", serializeSearchGroup(searchGroups, fieldCommand.getGroupSort()));\n        }\n        if (groupedCount != null) {\n          commandResult.add(\"groupCount\", groupedCount);\n        }\n      } else {\n        continue;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  public NamedList transform(List<Command> data) throws IOException {\n    NamedList<NamedList> result = new NamedList<NamedList>();\n    for (Command command : data) {\n      final NamedList<Object> commandResult = new NamedList<Object>();\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        Pair<Integer, Collection<SearchGroup<BytesRef>>> pair = fieldCommand.result();\n        Integer groupedCount = pair.getA();\n        Collection<SearchGroup<BytesRef>> searchGroups = pair.getB();\n        if (searchGroups != null) {\n          commandResult.add(\"topGroups\", serializeSearchGroup(searchGroups, fieldCommand.getGroupSort()));\n        }\n        if (groupedCount != null) {\n          commandResult.add(\"groupCount\", groupedCount);\n        }\n      } else {\n        continue;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public NamedList transform(List<Command> data) throws IOException {\n    NamedList<NamedList> result = new NamedList<>();\n    for (Command command : data) {\n      final NamedList<Object> commandResult = new NamedList<>();\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        Pair<Integer, Collection<SearchGroup<BytesRef>>> pair = fieldCommand.result();\n        Integer groupedCount = pair.getA();\n        Collection<SearchGroup<BytesRef>> searchGroups = pair.getB();\n        if (searchGroups != null) {\n          commandResult.add(\"topGroups\", serializeSearchGroup(searchGroups, fieldCommand.getGroupSort()));\n        }\n        if (groupedCount != null) {\n          commandResult.add(\"groupCount\", groupedCount);\n        }\n      } else {\n        continue;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public NamedList transform(List<Command> data) throws IOException {\n    NamedList<NamedList> result = new NamedList<NamedList>();\n    for (Command command : data) {\n      final NamedList<Object> commandResult = new NamedList<Object>();\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        Pair<Integer, Collection<SearchGroup<BytesRef>>> pair = fieldCommand.result();\n        Integer groupedCount = pair.getA();\n        Collection<SearchGroup<BytesRef>> searchGroups = pair.getB();\n        if (searchGroups != null) {\n          commandResult.add(\"topGroups\", serializeSearchGroup(searchGroups, fieldCommand.getGroupSort()));\n        }\n        if (groupedCount != null) {\n          commandResult.add(\"groupCount\", groupedCount);\n        }\n      } else {\n        continue;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97b865fb5b6ef0e08dcafe96ab9cdbcd1cbd0943","date":1440670426,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public NamedList transform(List<Command> data) throws IOException {\n    NamedList<NamedList> result = new NamedList<>();\n    for (Command command : data) {\n      final NamedList<Object> commandResult = new NamedList<>();\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        final SearchGroupsFieldCommandResult fieldCommandResult = fieldCommand.result();\n        final Collection<SearchGroup<BytesRef>> searchGroups = fieldCommandResult.getSearchGroups();\n        if (searchGroups != null) {\n          commandResult.add(\"topGroups\", serializeSearchGroup(searchGroups, fieldCommand.getGroupSort()));\n        }\n        final Integer groupedCount = fieldCommandResult.getGroupCount();\n        if (groupedCount != null) {\n          commandResult.add(\"groupCount\", groupedCount);\n        }\n      } else {\n        continue;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public NamedList transform(List<Command> data) throws IOException {\n    NamedList<NamedList> result = new NamedList<>();\n    for (Command command : data) {\n      final NamedList<Object> commandResult = new NamedList<>();\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        Pair<Integer, Collection<SearchGroup<BytesRef>>> pair = fieldCommand.result();\n        Integer groupedCount = pair.getA();\n        Collection<SearchGroup<BytesRef>> searchGroups = pair.getB();\n        if (searchGroups != null) {\n          commandResult.add(\"topGroups\", serializeSearchGroup(searchGroups, fieldCommand.getGroupSort()));\n        }\n        if (groupedCount != null) {\n          commandResult.add(\"groupCount\", groupedCount);\n        }\n      } else {\n        continue;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8352a83d5332dd7e172d6ceb8872f47f2f31ceb","date":1444852275,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public NamedList transform(List<Command> data) throws IOException {\n    final NamedList<NamedList> result = new NamedList<>(data.size());\n    for (Command command : data) {\n      final NamedList<Object> commandResult = new NamedList<>(2);\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        final SearchGroupsFieldCommandResult fieldCommandResult = fieldCommand.result();\n        final Collection<SearchGroup<BytesRef>> searchGroups = fieldCommandResult.getSearchGroups();\n        if (searchGroups != null) {\n          commandResult.add(TOP_GROUPS, serializeSearchGroup(searchGroups, fieldCommand.getGroupSort()));\n        }\n        final Integer groupedCount = fieldCommandResult.getGroupCount();\n        if (groupedCount != null) {\n          commandResult.add(GROUP_COUNT, groupedCount);\n        }\n      } else {\n        continue;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public NamedList transform(List<Command> data) throws IOException {\n    NamedList<NamedList> result = new NamedList<>();\n    for (Command command : data) {\n      final NamedList<Object> commandResult = new NamedList<>();\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        final SearchGroupsFieldCommandResult fieldCommandResult = fieldCommand.result();\n        final Collection<SearchGroup<BytesRef>> searchGroups = fieldCommandResult.getSearchGroups();\n        if (searchGroups != null) {\n          commandResult.add(\"topGroups\", serializeSearchGroup(searchGroups, fieldCommand.getGroupSort()));\n        }\n        final Integer groupedCount = fieldCommandResult.getGroupCount();\n        if (groupedCount != null) {\n          commandResult.add(\"groupCount\", groupedCount);\n        }\n      } else {\n        continue;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ce489ffe249d0942d3dd9d8f0b46d3a5385ca01","date":1489998096,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public NamedList transform(List<Command> data) throws IOException {\n    final NamedList<NamedList> result = new NamedList<>(data.size());\n    for (Command command : data) {\n      final NamedList<Object> commandResult = new NamedList<>(2);\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        final SearchGroupsFieldCommandResult fieldCommandResult = fieldCommand.result();\n        final Collection<SearchGroup<BytesRef>> searchGroups = fieldCommandResult.getSearchGroups();\n        if (searchGroups != null) {\n          commandResult.add(TOP_GROUPS, serializeSearchGroup(searchGroups, fieldCommand));\n        }\n        final Integer groupedCount = fieldCommandResult.getGroupCount();\n        if (groupedCount != null) {\n          commandResult.add(GROUP_COUNT, groupedCount);\n        }\n      } else {\n        continue;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public NamedList transform(List<Command> data) throws IOException {\n    final NamedList<NamedList> result = new NamedList<>(data.size());\n    for (Command command : data) {\n      final NamedList<Object> commandResult = new NamedList<>(2);\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        final SearchGroupsFieldCommandResult fieldCommandResult = fieldCommand.result();\n        final Collection<SearchGroup<BytesRef>> searchGroups = fieldCommandResult.getSearchGroups();\n        if (searchGroups != null) {\n          commandResult.add(TOP_GROUPS, serializeSearchGroup(searchGroups, fieldCommand.getGroupSort()));\n        }\n        final Integer groupedCount = fieldCommandResult.getGroupCount();\n        if (groupedCount != null) {\n          commandResult.add(GROUP_COUNT, groupedCount);\n        }\n      } else {\n        continue;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06f29c9961912220543423aa6fc6f64362874871","date":1490280012,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public NamedList transform(List<Command> data) throws IOException {\n    final NamedList<NamedList> result = new NamedList<>(data.size());\n    for (Command command : data) {\n      final NamedList<Object> commandResult = new NamedList<>(2);\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        final SearchGroupsFieldCommandResult fieldCommandResult = fieldCommand.result();\n        final Collection<SearchGroup<BytesRef>> searchGroups = fieldCommandResult.getSearchGroups();\n        if (searchGroups != null) {\n          commandResult.add(TOP_GROUPS, serializeSearchGroup(searchGroups, fieldCommand));\n        }\n        final Integer groupedCount = fieldCommandResult.getGroupCount();\n        if (groupedCount != null) {\n          commandResult.add(GROUP_COUNT, groupedCount);\n        }\n      } else {\n        continue;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public NamedList transform(List<Command> data) throws IOException {\n    final NamedList<NamedList> result = new NamedList<>(data.size());\n    for (Command command : data) {\n      final NamedList<Object> commandResult = new NamedList<>(2);\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        final SearchGroupsFieldCommandResult fieldCommandResult = fieldCommand.result();\n        final Collection<SearchGroup<BytesRef>> searchGroups = fieldCommandResult.getSearchGroups();\n        if (searchGroups != null) {\n          commandResult.add(TOP_GROUPS, serializeSearchGroup(searchGroups, fieldCommand.getGroupSort()));\n        }\n        final Integer groupedCount = fieldCommandResult.getGroupCount();\n        if (groupedCount != null) {\n          commandResult.add(GROUP_COUNT, groupedCount);\n        }\n      } else {\n        continue;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a80a37ae73034270b57bfd57a44f8fcadc952fa0","date":1515440719,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","sourceNew":"  @Override\n  public NamedList transform(List<Command> data) throws IOException {\n    final NamedList<NamedList> result = new NamedList<>(data.size());\n    for (Command command : data) {\n      final NamedList<Object> commandResult = new NamedList<>(2);\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        final SearchGroupsFieldCommandResult fieldCommandResult = fieldCommand.result();\n        final Collection<SearchGroup<BytesRef>> searchGroups = fieldCommandResult.getSearchGroups();\n        if (searchGroups != null) {\n          commandResult.add(TOP_GROUPS, serializeSearchGroup(searchGroups, fieldCommand));\n        }\n        final Integer groupedCount = fieldCommandResult.getGroupCount();\n        if (groupedCount != null) {\n          commandResult.add(GROUP_COUNT, groupedCount);\n        }\n      } else {\n        continue;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public NamedList transform(List<Command> data) throws IOException {\n    final NamedList<NamedList> result = new NamedList<>(data.size());\n    for (Command command : data) {\n      final NamedList<Object> commandResult = new NamedList<>(2);\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        final SearchGroupsFieldCommandResult fieldCommandResult = fieldCommand.result();\n        final Collection<SearchGroup<BytesRef>> searchGroups = fieldCommandResult.getSearchGroups();\n        if (searchGroups != null) {\n          commandResult.add(TOP_GROUPS, serializeSearchGroup(searchGroups, fieldCommand));\n        }\n        final Integer groupedCount = fieldCommandResult.getGroupCount();\n        if (groupedCount != null) {\n          commandResult.add(GROUP_COUNT, groupedCount);\n        }\n      } else {\n        continue;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","sourceNew":"  @Override\n  public NamedList transform(List<Command> data) throws IOException {\n    final NamedList<NamedList> result = new NamedList<>(data.size());\n    for (Command command : data) {\n      final NamedList<Object> commandResult = new NamedList<>(2);\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        final SearchGroupsFieldCommandResult fieldCommandResult = fieldCommand.result();\n        final Collection<SearchGroup<BytesRef>> searchGroups = fieldCommandResult.getSearchGroups();\n        if (searchGroups != null) {\n          commandResult.add(TOP_GROUPS, serializeSearchGroup(searchGroups, fieldCommand));\n        }\n        final Integer groupedCount = fieldCommandResult.getGroupCount();\n        if (groupedCount != null) {\n          commandResult.add(GROUP_COUNT, groupedCount);\n        }\n      } else {\n        continue;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public NamedList transform(List<Command> data) throws IOException {\n    final NamedList<NamedList> result = new NamedList<>(data.size());\n    for (Command command : data) {\n      final NamedList<Object> commandResult = new NamedList<>(2);\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        final SearchGroupsFieldCommandResult fieldCommandResult = fieldCommand.result();\n        final Collection<SearchGroup<BytesRef>> searchGroups = fieldCommandResult.getSearchGroups();\n        if (searchGroups != null) {\n          commandResult.add(TOP_GROUPS, serializeSearchGroup(searchGroups, fieldCommand));\n        }\n        final Integer groupedCount = fieldCommandResult.getGroupCount();\n        if (groupedCount != null) {\n          commandResult.add(GROUP_COUNT, groupedCount);\n        }\n      } else {\n        continue;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"50dfd19525c8d73e856dca6edb64b7aea074037f","date":1591579225,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/grouping/distributed/shardresultserializer/SearchGroupsResultTransformer#transform(List[Command]).mjava","sourceNew":"  @Override\n  @SuppressWarnings({\"rawtypes\"})\n  public NamedList transform(List<Command> data) throws IOException {\n    final NamedList<NamedList> result = new NamedList<>(data.size());\n    for (Command command : data) {\n      final NamedList<Object> commandResult = new NamedList<>(2);\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        final SearchGroupsFieldCommandResult fieldCommandResult = fieldCommand.result();\n        final Collection<SearchGroup<BytesRef>> searchGroups = fieldCommandResult.getSearchGroups();\n        if (searchGroups != null) {\n          commandResult.add(TOP_GROUPS, serializeSearchGroup(searchGroups, fieldCommand));\n        }\n        final Integer groupedCount = fieldCommandResult.getGroupCount();\n        if (groupedCount != null) {\n          commandResult.add(GROUP_COUNT, groupedCount);\n        }\n      } else {\n        continue;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public NamedList transform(List<Command> data) throws IOException {\n    final NamedList<NamedList> result = new NamedList<>(data.size());\n    for (Command command : data) {\n      final NamedList<Object> commandResult = new NamedList<>(2);\n      if (SearchGroupsFieldCommand.class.isInstance(command)) {\n        SearchGroupsFieldCommand fieldCommand = (SearchGroupsFieldCommand) command;\n        final SearchGroupsFieldCommandResult fieldCommandResult = fieldCommand.result();\n        final Collection<SearchGroup<BytesRef>> searchGroups = fieldCommandResult.getSearchGroups();\n        if (searchGroups != null) {\n          commandResult.add(TOP_GROUPS, serializeSearchGroup(searchGroups, fieldCommand));\n        }\n        final Integer groupedCount = fieldCommandResult.getGroupCount();\n        if (groupedCount != null) {\n          commandResult.add(GROUP_COUNT, groupedCount);\n        }\n      } else {\n        continue;\n      }\n\n      result.add(command.getKey(), commandResult);\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["af20870f6eab3807c968eec0b24e0c4358d0c1e5","7530de27b87b961b51f01bd1299b7004d46e8823"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["7530de27b87b961b51f01bd1299b7004d46e8823"],"b94236357aaa22b76c10629851fe4e376e0cea82":["6ce489ffe249d0942d3dd9d8f0b46d3a5385ca01","a80a37ae73034270b57bfd57a44f8fcadc952fa0"],"f8352a83d5332dd7e172d6ceb8872f47f2f31ceb":["97b865fb5b6ef0e08dcafe96ab9cdbcd1cbd0943"],"ccc08aa684aee4964baee0644a6ba047bfd70829":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a80a37ae73034270b57bfd57a44f8fcadc952fa0":["6ce489ffe249d0942d3dd9d8f0b46d3a5385ca01"],"6ce489ffe249d0942d3dd9d8f0b46d3a5385ca01":["f8352a83d5332dd7e172d6ceb8872f47f2f31ceb"],"97b865fb5b6ef0e08dcafe96ab9cdbcd1cbd0943":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"50dfd19525c8d73e856dca6edb64b7aea074037f":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"af20870f6eab3807c968eec0b24e0c4358d0c1e5":["ccc08aa684aee4964baee0644a6ba047bfd70829"],"06f29c9961912220543423aa6fc6f64362874871":["f8352a83d5332dd7e172d6ceb8872f47f2f31ceb"],"7530de27b87b961b51f01bd1299b7004d46e8823":["af20870f6eab3807c968eec0b24e0c4358d0c1e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["50dfd19525c8d73e856dca6edb64b7aea074037f"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["97b865fb5b6ef0e08dcafe96ab9cdbcd1cbd0943"],"b94236357aaa22b76c10629851fe4e376e0cea82":["50dfd19525c8d73e856dca6edb64b7aea074037f"],"f8352a83d5332dd7e172d6ceb8872f47f2f31ceb":["6ce489ffe249d0942d3dd9d8f0b46d3a5385ca01","06f29c9961912220543423aa6fc6f64362874871"],"a80a37ae73034270b57bfd57a44f8fcadc952fa0":["b94236357aaa22b76c10629851fe4e376e0cea82"],"ccc08aa684aee4964baee0644a6ba047bfd70829":["af20870f6eab3807c968eec0b24e0c4358d0c1e5"],"6ce489ffe249d0942d3dd9d8f0b46d3a5385ca01":["b94236357aaa22b76c10629851fe4e376e0cea82","a80a37ae73034270b57bfd57a44f8fcadc952fa0"],"97b865fb5b6ef0e08dcafe96ab9cdbcd1cbd0943":["f8352a83d5332dd7e172d6ceb8872f47f2f31ceb"],"50dfd19525c8d73e856dca6edb64b7aea074037f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ccc08aa684aee4964baee0644a6ba047bfd70829"],"af20870f6eab3807c968eec0b24e0c4358d0c1e5":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"06f29c9961912220543423aa6fc6f64362874871":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","06f29c9961912220543423aa6fc6f64362874871","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}