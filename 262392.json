{"path":"solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","commits":[{"id":"65361f676e554809b5c59b53f3117e45d3ab760a","date":1338509206,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"/dev/null","sourceNew":"  public UpdateRequestProcessor getInstance(SolrQueryRequest req, \n                                            SolrQueryResponse rsp, \n                                            UpdateRequestProcessor next ) {\n    return new DefaultValueUpdateProcessor(fieldName, next) {\n      public Object getDefaultValue() { \n        return UUID.randomUUID().toString().toLowerCase(Locale.ENGLISH);\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9279c7cd47f17e1e8b674a3741ff5f040bc680be","date":1341675760,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  public UpdateRequestProcessor getInstance(SolrQueryRequest req, \n                                            SolrQueryResponse rsp, \n                                            UpdateRequestProcessor next ) {\n    return new DefaultValueUpdateProcessor(fieldName, next) {\n      public Object getDefaultValue() { \n        return UUID.randomUUID().toString().toLowerCase(Locale.ROOT);\n      }\n    };\n  }\n\n","sourceOld":"  public UpdateRequestProcessor getInstance(SolrQueryRequest req, \n                                            SolrQueryResponse rsp, \n                                            UpdateRequestProcessor next ) {\n    return new DefaultValueUpdateProcessor(fieldName, next) {\n      public Object getDefaultValue() { \n        return UUID.randomUUID().toString().toLowerCase(Locale.ENGLISH);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  public UpdateRequestProcessor getInstance(SolrQueryRequest req, \n                                            SolrQueryResponse rsp, \n                                            UpdateRequestProcessor next ) {\n    return new DefaultValueUpdateProcessor(fieldName, next) {\n      public Object getDefaultValue() { \n        return UUID.randomUUID().toString().toLowerCase(Locale.ROOT);\n      }\n    };\n  }\n\n","sourceOld":"  public UpdateRequestProcessor getInstance(SolrQueryRequest req, \n                                            SolrQueryResponse rsp, \n                                            UpdateRequestProcessor next ) {\n    return new DefaultValueUpdateProcessor(fieldName, next) {\n      public Object getDefaultValue() { \n        return UUID.randomUUID().toString().toLowerCase(Locale.ENGLISH);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  public UpdateRequestProcessor getInstance(SolrQueryRequest req, \n                                            SolrQueryResponse rsp, \n                                            UpdateRequestProcessor next ) {\n    return new DefaultValueUpdateProcessor(fieldName, next) {\n      public Object getDefaultValue() { \n        return UUID.randomUUID().toString().toLowerCase(Locale.ROOT);\n      }\n    };\n  }\n\n","sourceOld":"  public UpdateRequestProcessor getInstance(SolrQueryRequest req, \n                                            SolrQueryResponse rsp, \n                                            UpdateRequestProcessor next ) {\n    return new DefaultValueUpdateProcessor(fieldName, next) {\n      public Object getDefaultValue() { \n        return UUID.randomUUID().toString().toLowerCase(Locale.ENGLISH);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  public UpdateRequestProcessor getInstance(SolrQueryRequest req, \n                                            SolrQueryResponse rsp, \n                                            UpdateRequestProcessor next ) {\n    return new DefaultValueUpdateProcessor(fieldName, next) {\n      public Object getDefaultValue() { \n        return UUID.randomUUID().toString().toLowerCase(Locale.ROOT);\n      }\n    };\n  }\n\n","sourceOld":"  public UpdateRequestProcessor getInstance(SolrQueryRequest req, \n                                            SolrQueryResponse rsp, \n                                            UpdateRequestProcessor next ) {\n    return new DefaultValueUpdateProcessor(fieldName, next) {\n      public Object getDefaultValue() { \n        return UUID.randomUUID().toString().toLowerCase(Locale.ENGLISH);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req, \n                                            SolrQueryResponse rsp, \n                                            UpdateRequestProcessor next ) {\n    return new DefaultValueUpdateProcessor(fieldName, next) {\n      @Override\n      public Object getDefaultValue() { \n        return UUID.randomUUID().toString().toLowerCase(Locale.ROOT);\n      }\n    };\n  }\n\n","sourceOld":"  public UpdateRequestProcessor getInstance(SolrQueryRequest req, \n                                            SolrQueryResponse rsp, \n                                            UpdateRequestProcessor next ) {\n    return new DefaultValueUpdateProcessor(fieldName, next) {\n      public Object getDefaultValue() { \n        return UUID.randomUUID().toString().toLowerCase(Locale.ROOT);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req, \n                                            SolrQueryResponse rsp, \n                                            UpdateRequestProcessor next ) {\n    return new DefaultValueUpdateProcessor(fieldName, next) {\n      @Override\n      public Object getDefaultValue() { \n        return UUID.randomUUID().toString().toLowerCase(Locale.ROOT);\n      }\n    };\n  }\n\n","sourceOld":"  public UpdateRequestProcessor getInstance(SolrQueryRequest req, \n                                            SolrQueryResponse rsp, \n                                            UpdateRequestProcessor next ) {\n    return new DefaultValueUpdateProcessor(fieldName, next) {\n      public Object getDefaultValue() { \n        return UUID.randomUUID().toString().toLowerCase(Locale.ROOT);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f904d036d49909c2dc5dc9e0e1c3ae8c71c9ad18","date":1406652386,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n                                            SolrQueryResponse rsp,\n                                            UpdateRequestProcessor next ) {\n    if (StringUtils.isEmpty(fieldName)) {\n      SchemaField schemaField = req.getSchema().getUniqueKeyField();\n      fieldName = schemaField.getName();\n    }\n\n    return new AbstractDefaultValueUpdateProcessorFactory.DefaultValueUpdateProcessor(fieldName, next) {\n      @Override\n      public Object getDefaultValue() {\n        return UUID.randomUUID().toString().toLowerCase(Locale.ROOT);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public UpdateRequestProcessor getInstance(SolrQueryRequest req, \n                                            SolrQueryResponse rsp, \n                                            UpdateRequestProcessor next ) {\n    return new DefaultValueUpdateProcessor(fieldName, next) {\n      @Override\n      public Object getDefaultValue() { \n        return UUID.randomUUID().toString().toLowerCase(Locale.ROOT);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"701a87b43e511b5f16b96d82d67bfa1409240b27","date":1501141027,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n                                            SolrQueryResponse rsp,\n                                            UpdateRequestProcessor next ) {\n    String fieldName = this.fieldName;\n\n    String fname = req.getParams().get(PREFIX_PARAM+FIELD_PARAM);\n    if (!StringUtils.isEmpty(fname)) {\n      fieldName = fname;\n    }\n\n    if (StringUtils.isEmpty(fieldName)) {\n      SchemaField schemaField = req.getSchema().getUniqueKeyField();\n      fieldName = schemaField.getName();\n    }\n\n    return new AbstractDefaultValueUpdateProcessorFactory.DefaultValueUpdateProcessor(fieldName, next) {\n      @Override\n      public Object getDefaultValue() {\n        return UUID.randomUUID().toString().toLowerCase(Locale.ROOT);\n      }\n    };\n  }\n\n","sourceOld":"  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n                                            SolrQueryResponse rsp,\n                                            UpdateRequestProcessor next ) {\n    if (StringUtils.isEmpty(fieldName)) {\n      SchemaField schemaField = req.getSchema().getUniqueKeyField();\n      fieldName = schemaField.getName();\n    }\n\n    return new AbstractDefaultValueUpdateProcessorFactory.DefaultValueUpdateProcessor(fieldName, next) {\n      @Override\n      public Object getDefaultValue() {\n        return UUID.randomUUID().toString().toLowerCase(Locale.ROOT);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/UUIDUpdateProcessorFactory#getInstance(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n                                            SolrQueryResponse rsp,\n                                            UpdateRequestProcessor next ) {\n    String fieldName = this.fieldName;\n\n    String fname = req.getParams().get(PREFIX_PARAM+FIELD_PARAM);\n    if (!StringUtils.isEmpty(fname)) {\n      fieldName = fname;\n    }\n\n    if (StringUtils.isEmpty(fieldName)) {\n      SchemaField schemaField = req.getSchema().getUniqueKeyField();\n      fieldName = schemaField.getName();\n    }\n\n    return new AbstractDefaultValueUpdateProcessorFactory.DefaultValueUpdateProcessor(fieldName, next) {\n      @Override\n      public Object getDefaultValue() {\n        return UUID.randomUUID().toString().toLowerCase(Locale.ROOT);\n      }\n    };\n  }\n\n","sourceOld":"  public UpdateRequestProcessor getInstance(SolrQueryRequest req,\n                                            SolrQueryResponse rsp,\n                                            UpdateRequestProcessor next ) {\n    if (StringUtils.isEmpty(fieldName)) {\n      SchemaField schemaField = req.getSchema().getUniqueKeyField();\n      fieldName = schemaField.getName();\n    }\n\n    return new AbstractDefaultValueUpdateProcessorFactory.DefaultValueUpdateProcessor(fieldName, next) {\n      @Override\n      public Object getDefaultValue() {\n        return UUID.randomUUID().toString().toLowerCase(Locale.ROOT);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["2acf500f78aa12b92e371fd89c719291986b6b90","7530de27b87b961b51f01bd1299b7004d46e8823"],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["f904d036d49909c2dc5dc9e0e1c3ae8c71c9ad18","701a87b43e511b5f16b96d82d67bfa1409240b27"],"f904d036d49909c2dc5dc9e0e1c3ae8c71c9ad18":["7530de27b87b961b51f01bd1299b7004d46e8823"],"65361f676e554809b5c59b53f3117e45d3ab760a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"701a87b43e511b5f16b96d82d67bfa1409240b27":["f904d036d49909c2dc5dc9e0e1c3ae8c71c9ad18"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["65361f676e554809b5c59b53f3117e45d3ab760a","2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["65361f676e554809b5c59b53f3117e45d3ab760a"],"2acf500f78aa12b92e371fd89c719291986b6b90":["65361f676e554809b5c59b53f3117e45d3ab760a","9279c7cd47f17e1e8b674a3741ff5f040bc680be"],"7530de27b87b961b51f01bd1299b7004d46e8823":["2acf500f78aa12b92e371fd89c719291986b6b90"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["701a87b43e511b5f16b96d82d67bfa1409240b27"],"46d8ada1fff8d18cb197c38c7983225162599948":["65361f676e554809b5c59b53f3117e45d3ab760a","2acf500f78aa12b92e371fd89c719291986b6b90"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"f904d036d49909c2dc5dc9e0e1c3ae8c71c9ad18":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","701a87b43e511b5f16b96d82d67bfa1409240b27"],"65361f676e554809b5c59b53f3117e45d3ab760a":["fe33227f6805edab2036cbb80645cc4e2d1fa424","9279c7cd47f17e1e8b674a3741ff5f040bc680be","2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948"],"701a87b43e511b5f16b96d82d67bfa1409240b27":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["65361f676e554809b5c59b53f3117e45d3ab760a"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["2acf500f78aa12b92e371fd89c719291986b6b90"],"2acf500f78aa12b92e371fd89c719291986b6b90":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","fe33227f6805edab2036cbb80645cc4e2d1fa424","7530de27b87b961b51f01bd1299b7004d46e8823","46d8ada1fff8d18cb197c38c7983225162599948"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","f904d036d49909c2dc5dc9e0e1c3ae8c71c9ad18"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"46d8ada1fff8d18cb197c38c7983225162599948":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817","46d8ada1fff8d18cb197c38c7983225162599948"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}