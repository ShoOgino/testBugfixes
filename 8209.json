{"path":"solr/core/src/test/org/apache/solr/highlight/TestPostingsSolrHighlighter#beforeClass().mjava","commits":[{"id":"4b3d16cba9355e2e97962eb1c441bbd0b6735c15","date":1357426290,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/TestPostingsSolrHighlighter#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-postingshighlight.xml\", \"schema-postingshighlight.xml\");\n    \n    // test our config is sane, just to be sure:\n    \n    // postingshighlighter should be used\n    SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n    assertTrue(\"wrong highlighter: \" + highlighter.getClass(), highlighter instanceof PostingsSolrHighlighter);\n    \n    // 'text' and 'text3' should have offsets, 'text2' should not\n    IndexSchema schema = h.getCore().getSchema();\n    assertTrue(schema.getField(\"text\").storeOffsetsWithPositions());\n    assertTrue(schema.getField(\"text3\").storeOffsetsWithPositions());\n    assertFalse(schema.getField(\"text2\").storeOffsetsWithPositions());\n    \n    assertU(adoc(\"text\", \"document one\", \"text2\", \"document one\", \"text3\", \"crappy document\", \"id\", \"101\"));\n    assertU(adoc(\"text\", \"second document\", \"text2\", \"second document\", \"text3\", \"crappier document\", \"id\", \"102\"));\n    assertU(commit());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/TestPostingsSolrHighlighter#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-postingshighlight.xml\", \"schema-postingshighlight.xml\");\n    \n    // test our config is sane, just to be sure:\n    \n    // postingshighlighter should be used\n    SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n    assertTrue(\"wrong highlighter: \" + highlighter.getClass(), highlighter instanceof PostingsSolrHighlighter);\n    \n    // 'text' and 'text3' should have offsets, 'text2' should not\n    IndexSchema schema = h.getCore().getSchema();\n    assertTrue(schema.getField(\"text\").storeOffsetsWithPositions());\n    assertTrue(schema.getField(\"text3\").storeOffsetsWithPositions());\n    assertFalse(schema.getField(\"text2\").storeOffsetsWithPositions());\n    \n    assertU(adoc(\"text\", \"document one\", \"text2\", \"document one\", \"text3\", \"crappy document\", \"id\", \"101\"));\n    assertU(adoc(\"text\", \"second document\", \"text2\", \"second document\", \"text3\", \"crappier document\", \"id\", \"102\"));\n    assertU(commit());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b197567ed7b63994641ee44ec9d13bfae783732","date":1365257860,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/TestPostingsSolrHighlighter#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/TestPostingsSolrHighlighter#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-postingshighlight.xml\", \"schema-postingshighlight.xml\");\n    \n    // test our config is sane, just to be sure:\n    \n    // postingshighlighter should be used\n    SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n    assertTrue(\"wrong highlighter: \" + highlighter.getClass(), highlighter instanceof PostingsSolrHighlighter);\n    \n    // 'text' and 'text3' should have offsets, 'text2' should not\n    IndexSchema schema = h.getCore().getSchema();\n    assertTrue(schema.getField(\"text\").storeOffsetsWithPositions());\n    assertTrue(schema.getField(\"text3\").storeOffsetsWithPositions());\n    assertFalse(schema.getField(\"text2\").storeOffsetsWithPositions());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-postingshighlight.xml\", \"schema-postingshighlight.xml\");\n    \n    // test our config is sane, just to be sure:\n    \n    // postingshighlighter should be used\n    SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n    assertTrue(\"wrong highlighter: \" + highlighter.getClass(), highlighter instanceof PostingsSolrHighlighter);\n    \n    // 'text' and 'text3' should have offsets, 'text2' should not\n    IndexSchema schema = h.getCore().getSchema();\n    assertTrue(schema.getField(\"text\").storeOffsetsWithPositions());\n    assertTrue(schema.getField(\"text3\").storeOffsetsWithPositions());\n    assertFalse(schema.getField(\"text2\").storeOffsetsWithPositions());\n    \n    assertU(adoc(\"text\", \"document one\", \"text2\", \"document one\", \"text3\", \"crappy document\", \"id\", \"101\"));\n    assertU(adoc(\"text\", \"second document\", \"text2\", \"second document\", \"text3\", \"crappier document\", \"id\", \"102\"));\n    assertU(commit());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/TestPostingsSolrHighlighter#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/TestPostingsSolrHighlighter#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-postingshighlight.xml\", \"schema-postingshighlight.xml\");\n    \n    // test our config is sane, just to be sure:\n    \n    // postingshighlighter should be used\n    SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n    assertTrue(\"wrong highlighter: \" + highlighter.getClass(), highlighter instanceof PostingsSolrHighlighter);\n    \n    // 'text' and 'text3' should have offsets, 'text2' should not\n    IndexSchema schema = h.getCore().getLatestSchema();\n    assertTrue(schema.getField(\"text\").storeOffsetsWithPositions());\n    assertTrue(schema.getField(\"text3\").storeOffsetsWithPositions());\n    assertFalse(schema.getField(\"text2\").storeOffsetsWithPositions());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-postingshighlight.xml\", \"schema-postingshighlight.xml\");\n    \n    // test our config is sane, just to be sure:\n    \n    // postingshighlighter should be used\n    SolrHighlighter highlighter = HighlightComponent.getHighlighter(h.getCore());\n    assertTrue(\"wrong highlighter: \" + highlighter.getClass(), highlighter instanceof PostingsSolrHighlighter);\n    \n    // 'text' and 'text3' should have offsets, 'text2' should not\n    IndexSchema schema = h.getCore().getSchema();\n    assertTrue(schema.getField(\"text\").storeOffsetsWithPositions());\n    assertTrue(schema.getField(\"text3\").storeOffsetsWithPositions());\n    assertFalse(schema.getField(\"text2\").storeOffsetsWithPositions());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4b3d16cba9355e2e97962eb1c441bbd0b6735c15"],"4b3d16cba9355e2e97962eb1c441bbd0b6735c15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4b197567ed7b63994641ee44ec9d13bfae783732":["4b3d16cba9355e2e97962eb1c441bbd0b6735c15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["08970e5b8411182a29412c177eff67ec1110095b"],"08970e5b8411182a29412c177eff67ec1110095b":["4b197567ed7b63994641ee44ec9d13bfae783732"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"4b3d16cba9355e2e97962eb1c441bbd0b6735c15":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","4b197567ed7b63994641ee44ec9d13bfae783732"],"4b197567ed7b63994641ee44ec9d13bfae783732":["08970e5b8411182a29412c177eff67ec1110095b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","4b3d16cba9355e2e97962eb1c441bbd0b6735c15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"08970e5b8411182a29412c177eff67ec1110095b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}