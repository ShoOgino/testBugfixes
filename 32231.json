{"path":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetTest#sumOfSquaresTest().mjava","commits":[{"id":"0f719faa74f7213d4a395510dbc1f1b7cb178484","date":1410881394,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetTest#sumOfSquaresTest().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/NoFacetTest#sumOfSquaresTest().mjava","sourceNew":"  @Test\n  public void sumOfSquaresTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(\"sosr\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(), intResult,intTest);\n    \n    //Long\n    Double longResult = (Double)getStatResult(\"sosr\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(), longResult,longTest);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(\"sosr\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n    \n    //Double\n    Double doubleResult = (Double)getStatResult(\"sosr\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n  }\n\n","sourceOld":"  @Test\n  public void sumOfSquaresTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(\"sosr\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(), intResult,intTest);\n    \n    //Long\n    Double longResult = (Double)getStatResult(\"sosr\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(), longResult,longTest);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(\"sosr\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n    \n    //Double\n    Double doubleResult = (Double)getStatResult(\"sosr\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c495edcca4d0bc51bf62d9be3527c87bf9b44ded","date":1498673617,"type":4,"author":"Dennis Gove","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetTest#sumOfSquaresTest().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void sumOfSquaresTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(\"sosr\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(), intResult,intTest);\n    \n    //Long\n    Double longResult = (Double)getStatResult(\"sosr\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(), longResult,longTest);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(\"sosr\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n    \n    //Double\n    Double doubleResult = (Double)getStatResult(\"sosr\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetTest#sumOfSquaresTest().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void sumOfSquaresTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(\"sosr\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(), intResult,intTest);\n    \n    //Long\n    Double longResult = (Double)getStatResult(\"sosr\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(), longResult,longTest);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(\"sosr\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n    \n    //Double\n    Double doubleResult = (Double)getStatResult(\"sosr\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetTest#sumOfSquaresTest().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void sumOfSquaresTest() throws Exception { \n    //Int\n    Double intResult = (Double)getStatResult(\"sosr\", \"int_id\", VAL_TYPE.DOUBLE);\n    Double intTest = (Double)calculateNumberStat(intTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(), intResult,intTest);\n    \n    //Long\n    Double longResult = (Double)getStatResult(\"sosr\", \"long_ld\", VAL_TYPE.DOUBLE);\n    Double longTest = (Double)calculateNumberStat(longTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(), longResult,longTest);\n    \n    //Float\n    Double floatResult = (Double)getStatResult(\"sosr\", \"float_fd\", VAL_TYPE.DOUBLE);\n    Double floatTest = (Double)calculateNumberStat(floatTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(), floatResult,floatTest);\n    \n    //Double\n    Double doubleResult = (Double)getStatResult(\"sosr\", \"double_dd\", VAL_TYPE.DOUBLE);\n    Double doubleTest = (Double)calculateNumberStat(doubleTestStart, \"sumOfSquares\");\n    assertEquals(getRawResponse(), doubleResult,doubleTest);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bd4c6955956e76c96eb12dfe64108ed03522983","date":1508262722,"type":0,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetTest#sumOfSquaresTest().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void sumOfSquaresTest() throws Exception {\n    Map<String, ETP> expressions = new HashMap<>();\n    expressions.put(\"single\", new ETP(\"sumofsquares(int_i)\", 237.0));\n    expressions.put(\"multi\", new ETP(\"sumofsquares(long_lm)\", 1220.0));\n    \n    testExpressions(expressions);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e4e64b7199d2f2a17be7f3926c7532553910dce","date":1564342581,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetTest#sumOfSquaresTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetTest#sumOfSquaresTest().mjava","sourceNew":"  @Test\n  public void sumOfSquaresTest() throws Exception {\n    Map<String, ETP> expressions = new HashMap<>();\n    expressions.put(\"single\", new ETP(\"sumofsquares(int_i)\", 237.0));\n    expressions.put(\"multi\", new ETP(\"sumofsquares(long_lm)\", 1220.0));\n\n    testExpressions(expressions);\n  }\n\n","sourceOld":"  @Test\n  public void sumOfSquaresTest() throws Exception {\n    Map<String, ETP> expressions = new HashMap<>();\n    expressions.put(\"single\", new ETP(\"sumofsquares(int_i)\", 237.0));\n    expressions.put(\"multi\", new ETP(\"sumofsquares(long_lm)\", 1220.0));\n    \n    testExpressions(expressions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetTest#sumOfSquaresTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/NoFacetTest#sumOfSquaresTest().mjava","sourceNew":"  @Test\n  public void sumOfSquaresTest() throws Exception {\n    Map<String, ETP> expressions = new HashMap<>();\n    expressions.put(\"single\", new ETP(\"sumofsquares(int_i)\", 237.0));\n    expressions.put(\"multi\", new ETP(\"sumofsquares(long_lm)\", 1220.0));\n\n    testExpressions(expressions);\n  }\n\n","sourceOld":"  @Test\n  public void sumOfSquaresTest() throws Exception {\n    Map<String, ETP> expressions = new HashMap<>();\n    expressions.put(\"single\", new ETP(\"sumofsquares(int_i)\", 237.0));\n    expressions.put(\"multi\", new ETP(\"sumofsquares(long_lm)\", 1220.0));\n    \n    testExpressions(expressions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30c8e5574b55d57947e989443dfde611646530ee":["0f719faa74f7213d4a395510dbc1f1b7cb178484","28288370235ed02234a64753cdbf0c6ec096304a"],"c495edcca4d0bc51bf62d9be3527c87bf9b44ded":["0f719faa74f7213d4a395510dbc1f1b7cb178484"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["0f719faa74f7213d4a395510dbc1f1b7cb178484","c495edcca4d0bc51bf62d9be3527c87bf9b44ded"],"f8061ddd97f3352007d927dae445884a6f3d857b":["3bd4c6955956e76c96eb12dfe64108ed03522983","1e4e64b7199d2f2a17be7f3926c7532553910dce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e4e64b7199d2f2a17be7f3926c7532553910dce"],"3bd4c6955956e76c96eb12dfe64108ed03522983":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f719faa74f7213d4a395510dbc1f1b7cb178484"],"30c8e5574b55d57947e989443dfde611646530ee":[],"c495edcca4d0bc51bf62d9be3527c87bf9b44ded":["28288370235ed02234a64753cdbf0c6ec096304a"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["30c8e5574b55d57947e989443dfde611646530ee","c495edcca4d0bc51bf62d9be3527c87bf9b44ded","28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["30c8e5574b55d57947e989443dfde611646530ee","3bd4c6955956e76c96eb12dfe64108ed03522983"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"3bd4c6955956e76c96eb12dfe64108ed03522983":["1e4e64b7199d2f2a17be7f3926c7532553910dce","f8061ddd97f3352007d927dae445884a6f3d857b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}