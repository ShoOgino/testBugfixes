{"path":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseTokenizer#computeSecondBestThreshold(int,int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseTokenizer#computeSecondBestThreshold(int,int).mjava","pathOld":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseTokenizer#computeSecondBestThreshold(int,int).mjava","sourceNew":"  // Returns the added cost that a 2nd best segmentation is\n  // allowed to have.  Ie, if we see path with cost X,\n  // ending in a compound word, and this method returns\n  // threshold > 0, then we will also find the 2nd best\n  // segmentation and if its path score is within this\n  // threshold of X, we'll include it in the output:\n  private int computeSecondBestThreshold(int pos, int length) throws IOException {\n    // TODO: maybe we do something else here, instead of just\n    // using the penalty...?  EG we can be more aggressive on\n    // when to also test for 2nd best path\n    return computePenalty(pos, length);\n  }\n\n","sourceOld":"  // Returns the added cost that a 2nd best segmentation is\n  // allowed to have.  Ie, if we see path with cost X,\n  // ending in a compound word, and this method returns\n  // threshold > 0, then we will also find the 2nd best\n  // segmentation and if its path score is within this\n  // threshold of X, we'll include it in the output:\n  private int computeSecondBestThreshold(int pos, int length) throws IOException {\n    // TODO: maybe we do something else here, instead of just\n    // using the penalty...?  EG we can be more aggressive on\n    // when to also test for 2nd best path\n    return computePenalty(pos, length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}