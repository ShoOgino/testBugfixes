{"path":"solr/core/src/test/org/apache/solr/search/TestReRankQParserPlugin#testMinExactCount().mjava","commits":[{"id":"589da39fe2c1d2e0588909e1d22d66523f04ffe1","date":1591826390,"type":0,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestReRankQParserPlugin#testMinExactCount().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMinExactCount() throws Exception {\n\n    assertU(delQ(\"*:*\"));\n    assertU(commit());\n    \n    int numDocs = 200;\n    \n    for (int i = 0 ; i < numDocs ; i ++) {\n      assertU(adoc(\n          \"id\", String.valueOf(i),\n          \"id_p_i\", String.valueOf(i),\n          \"field_t\", IntStream.range(0, numDocs).mapToObj(val -> Integer.toString(val)).collect(Collectors.joining(\" \"))));\n    }\n    assertU(commit());\n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"field_t:0\");\n    params.add(\"start\", \"0\");\n    params.add(\"rows\", \"10\");\n    params.add(\"fl\", \"id\");\n    assertQ(req(params),\n        \"*[count(//doc)=10]\",\n        \"//result[@numFound='\" + numDocs + \"']\",\n        \"//result[@numFoundExact='true']\",\n        \"//result/doc[1]/str[@name='id'][.='0']\",\n        \"//result/doc[2]/str[@name='id'][.='1']\",\n        \"//result/doc[3]/str[@name='id'][.='2']\",\n        \"//result/doc[4]/str[@name='id'][.='3']\",\n        \"//result/doc[5]/str[@name='id'][.='4']\",\n        \"//result/doc[6]/str[@name='id'][.='5']\",\n        \"//result/doc[7]/str[@name='id'][.='6']\",\n        \"//result/doc[8]/str[@name='id'][.='7']\",\n        \"//result/doc[9]/str[@name='id'][.='8']\",\n        \"//result/doc[10]/str[@name='id'][.='9']\"\n        );\n    \n    params.add(\"rq\", \"{!\"+ReRankQParserPlugin.NAME+\" \"+ReRankQParserPlugin.RERANK_QUERY+\"=$rrq \"+ReRankQParserPlugin.RERANK_DOCS+\"=20}\");\n    params.add(\"rrq\", \"id:10\");\n    assertQ(req(params),\n        \"*[count(//doc)=10]\",\n        \"//result[@numFound='\" + numDocs + \"']\",\n        \"//result[@numFoundExact='true']\",\n        \"//result/doc[1]/str[@name='id'][.='10']\",\n        \"//result/doc[2]/str[@name='id'][.='0']\",\n        \"//result/doc[3]/str[@name='id'][.='1']\",\n        \"//result/doc[4]/str[@name='id'][.='2']\",\n        \"//result/doc[5]/str[@name='id'][.='3']\",\n        \"//result/doc[6]/str[@name='id'][.='4']\",\n        \"//result/doc[7]/str[@name='id'][.='5']\",\n        \"//result/doc[8]/str[@name='id'][.='6']\",\n        \"//result/doc[9]/str[@name='id'][.='7']\",\n        \"//result/doc[10]/str[@name='id'][.='8']\"\n        );\n    \n    params.add(CommonParams.MIN_EXACT_COUNT, \"2\");\n    assertQ(req(params),\n        \"*[count(//doc)=10]\",\n        \"//result[@numFound<='\" + numDocs + \"']\",\n        \"//result[@numFoundExact='false']\",\n        \"//result/doc[1]/str[@name='id'][.='10']\",\n        \"//result/doc[2]/str[@name='id'][.='0']\",\n        \"//result/doc[3]/str[@name='id'][.='1']\",\n        \"//result/doc[4]/str[@name='id'][.='2']\",\n        \"//result/doc[5]/str[@name='id'][.='3']\",\n        \"//result/doc[6]/str[@name='id'][.='4']\",\n        \"//result/doc[7]/str[@name='id'][.='5']\",\n        \"//result/doc[8]/str[@name='id'][.='6']\",\n        \"//result/doc[9]/str[@name='id'][.='7']\",\n        \"//result/doc[10]/str[@name='id'][.='8']\"\n        );\n    \n    params.add(\"sort\", \"score desc, id_p_i asc\");\n    assertQ(req(params),\n        \"*[count(//doc)=10]\",\n        \"//result[@numFound<='\" + numDocs + \"']\",\n        \"//result[@numFoundExact='false']\",\n        \"//result/doc[1]/str[@name='id'][.='10']\",\n        \"//result/doc[2]/str[@name='id'][.='0']\",\n        \"//result/doc[3]/str[@name='id'][.='1']\",\n        \"//result/doc[4]/str[@name='id'][.='2']\",\n        \"//result/doc[5]/str[@name='id'][.='3']\",\n        \"//result/doc[6]/str[@name='id'][.='4']\",\n        \"//result/doc[7]/str[@name='id'][.='5']\",\n        \"//result/doc[8]/str[@name='id'][.='6']\",\n        \"//result/doc[9]/str[@name='id'][.='7']\",\n        \"//result/doc[10]/str[@name='id'][.='8']\"\n        );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["b1b81141073081839b07d34ca839c255b30a182e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b1b81141073081839b07d34ca839c255b30a182e","date":1599685417,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestReRankQParserPlugin#testMinExactCount().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestReRankQParserPlugin#testMinExactCount().mjava","sourceNew":"  @Test\n  public void testMinExactCount() throws Exception {\n\n    assertU(delQ(\"*:*\"));\n    assertU(commit());\n    \n    int numDocs = 200;\n    \n    for (int i = 0 ; i < numDocs ; i ++) {\n      assertU(adoc(\n          \"id\", String.valueOf(i),\n          \"id_p_i\", String.valueOf(i),\n          \"field_t\", IntStream.range(0, numDocs).mapToObj(val -> Integer.toString(val)).collect(Collectors.joining(\" \"))));\n    }\n    assertU(commit());\n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"field_t:0\");\n    params.add(\"start\", \"0\");\n    params.add(\"rows\", \"10\");\n    params.add(\"fl\", \"id,score\");\n    params.add(\"sort\", \"score desc, id_p_i asc\");\n    assertQ(req(params),\n        \"*[count(//doc)=10]\",\n        \"//result[@numFound='\" + numDocs + \"']\",\n        \"//result[@numFoundExact='true']\",\n        \"//result/doc[1]/str[@name='id'][.='0']\",\n        \"//result/doc[2]/str[@name='id'][.='1']\",\n        \"//result/doc[3]/str[@name='id'][.='2']\",\n        \"//result/doc[4]/str[@name='id'][.='3']\",\n        \"//result/doc[5]/str[@name='id'][.='4']\",\n        \"//result/doc[6]/str[@name='id'][.='5']\",\n        \"//result/doc[7]/str[@name='id'][.='6']\",\n        \"//result/doc[8]/str[@name='id'][.='7']\",\n        \"//result/doc[9]/str[@name='id'][.='8']\",\n        \"//result/doc[10]/str[@name='id'][.='9']\"\n        );\n    \n    params.add(\"rq\", \"{!\"+ReRankQParserPlugin.NAME+\" \"+ReRankQParserPlugin.RERANK_QUERY+\"=$rrq \"+ReRankQParserPlugin.RERANK_DOCS+\"=20}\");\n    params.add(\"rrq\", \"id:10\");\n    assertQ(req(params),\n        \"*[count(//doc)=10]\",\n        \"//result[@numFound='\" + numDocs + \"']\",\n        \"//result[@numFoundExact='true']\",\n        \"//result/doc[1]/str[@name='id'][.='10']\",\n        \"//result/doc[2]/str[@name='id'][.='0']\",\n        \"//result/doc[3]/str[@name='id'][.='1']\",\n        \"//result/doc[4]/str[@name='id'][.='2']\",\n        \"//result/doc[5]/str[@name='id'][.='3']\",\n        \"//result/doc[6]/str[@name='id'][.='4']\",\n        \"//result/doc[7]/str[@name='id'][.='5']\",\n        \"//result/doc[8]/str[@name='id'][.='6']\",\n        \"//result/doc[9]/str[@name='id'][.='7']\",\n        \"//result/doc[10]/str[@name='id'][.='8']\"\n        );\n    \n    params.add(CommonParams.MIN_EXACT_COUNT, \"2\");\n    assertQ(req(params),\n        \"*[count(//doc)=10]\",\n        \"//result[@numFound<='\" + numDocs + \"']\",\n        \"//result[@numFoundExact='false']\",\n        \"//result/doc[1]/str[@name='id'][.='10']\",\n        \"//result/doc[2]/str[@name='id'][.='0']\",\n        \"//result/doc[3]/str[@name='id'][.='1']\",\n        \"//result/doc[4]/str[@name='id'][.='2']\",\n        \"//result/doc[5]/str[@name='id'][.='3']\",\n        \"//result/doc[6]/str[@name='id'][.='4']\",\n        \"//result/doc[7]/str[@name='id'][.='5']\",\n        \"//result/doc[8]/str[@name='id'][.='6']\",\n        \"//result/doc[9]/str[@name='id'][.='7']\",\n        \"//result/doc[10]/str[@name='id'][.='8']\"\n        );\n  }\n\n","sourceOld":"  @Test\n  public void testMinExactCount() throws Exception {\n\n    assertU(delQ(\"*:*\"));\n    assertU(commit());\n    \n    int numDocs = 200;\n    \n    for (int i = 0 ; i < numDocs ; i ++) {\n      assertU(adoc(\n          \"id\", String.valueOf(i),\n          \"id_p_i\", String.valueOf(i),\n          \"field_t\", IntStream.range(0, numDocs).mapToObj(val -> Integer.toString(val)).collect(Collectors.joining(\" \"))));\n    }\n    assertU(commit());\n    \n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.add(\"q\", \"field_t:0\");\n    params.add(\"start\", \"0\");\n    params.add(\"rows\", \"10\");\n    params.add(\"fl\", \"id\");\n    assertQ(req(params),\n        \"*[count(//doc)=10]\",\n        \"//result[@numFound='\" + numDocs + \"']\",\n        \"//result[@numFoundExact='true']\",\n        \"//result/doc[1]/str[@name='id'][.='0']\",\n        \"//result/doc[2]/str[@name='id'][.='1']\",\n        \"//result/doc[3]/str[@name='id'][.='2']\",\n        \"//result/doc[4]/str[@name='id'][.='3']\",\n        \"//result/doc[5]/str[@name='id'][.='4']\",\n        \"//result/doc[6]/str[@name='id'][.='5']\",\n        \"//result/doc[7]/str[@name='id'][.='6']\",\n        \"//result/doc[8]/str[@name='id'][.='7']\",\n        \"//result/doc[9]/str[@name='id'][.='8']\",\n        \"//result/doc[10]/str[@name='id'][.='9']\"\n        );\n    \n    params.add(\"rq\", \"{!\"+ReRankQParserPlugin.NAME+\" \"+ReRankQParserPlugin.RERANK_QUERY+\"=$rrq \"+ReRankQParserPlugin.RERANK_DOCS+\"=20}\");\n    params.add(\"rrq\", \"id:10\");\n    assertQ(req(params),\n        \"*[count(//doc)=10]\",\n        \"//result[@numFound='\" + numDocs + \"']\",\n        \"//result[@numFoundExact='true']\",\n        \"//result/doc[1]/str[@name='id'][.='10']\",\n        \"//result/doc[2]/str[@name='id'][.='0']\",\n        \"//result/doc[3]/str[@name='id'][.='1']\",\n        \"//result/doc[4]/str[@name='id'][.='2']\",\n        \"//result/doc[5]/str[@name='id'][.='3']\",\n        \"//result/doc[6]/str[@name='id'][.='4']\",\n        \"//result/doc[7]/str[@name='id'][.='5']\",\n        \"//result/doc[8]/str[@name='id'][.='6']\",\n        \"//result/doc[9]/str[@name='id'][.='7']\",\n        \"//result/doc[10]/str[@name='id'][.='8']\"\n        );\n    \n    params.add(CommonParams.MIN_EXACT_COUNT, \"2\");\n    assertQ(req(params),\n        \"*[count(//doc)=10]\",\n        \"//result[@numFound<='\" + numDocs + \"']\",\n        \"//result[@numFoundExact='false']\",\n        \"//result/doc[1]/str[@name='id'][.='10']\",\n        \"//result/doc[2]/str[@name='id'][.='0']\",\n        \"//result/doc[3]/str[@name='id'][.='1']\",\n        \"//result/doc[4]/str[@name='id'][.='2']\",\n        \"//result/doc[5]/str[@name='id'][.='3']\",\n        \"//result/doc[6]/str[@name='id'][.='4']\",\n        \"//result/doc[7]/str[@name='id'][.='5']\",\n        \"//result/doc[8]/str[@name='id'][.='6']\",\n        \"//result/doc[9]/str[@name='id'][.='7']\",\n        \"//result/doc[10]/str[@name='id'][.='8']\"\n        );\n    \n    params.add(\"sort\", \"score desc, id_p_i asc\");\n    assertQ(req(params),\n        \"*[count(//doc)=10]\",\n        \"//result[@numFound<='\" + numDocs + \"']\",\n        \"//result[@numFoundExact='false']\",\n        \"//result/doc[1]/str[@name='id'][.='10']\",\n        \"//result/doc[2]/str[@name='id'][.='0']\",\n        \"//result/doc[3]/str[@name='id'][.='1']\",\n        \"//result/doc[4]/str[@name='id'][.='2']\",\n        \"//result/doc[5]/str[@name='id'][.='3']\",\n        \"//result/doc[6]/str[@name='id'][.='4']\",\n        \"//result/doc[7]/str[@name='id'][.='5']\",\n        \"//result/doc[8]/str[@name='id'][.='6']\",\n        \"//result/doc[9]/str[@name='id'][.='7']\",\n        \"//result/doc[10]/str[@name='id'][.='8']\"\n        );\n  }\n\n","bugFix":["589da39fe2c1d2e0588909e1d22d66523f04ffe1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"589da39fe2c1d2e0588909e1d22d66523f04ffe1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b1b81141073081839b07d34ca839c255b30a182e":["589da39fe2c1d2e0588909e1d22d66523f04ffe1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b1b81141073081839b07d34ca839c255b30a182e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["589da39fe2c1d2e0588909e1d22d66523f04ffe1"],"589da39fe2c1d2e0588909e1d22d66523f04ffe1":["b1b81141073081839b07d34ca839c255b30a182e"],"b1b81141073081839b07d34ca839c255b30a182e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}