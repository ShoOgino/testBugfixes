{"path":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","pathOld":"solr/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","sourceNew":"  Properties loadReplicationProperties() {\n    FileInputStream inFile = null;\n    Properties props = new Properties();\n    try {\n      File f = new File(core.getDataDir(), SnapPuller.REPLICATION_PROPERTIES);\n      if (f.exists()) {\n        inFile = new FileInputStream(f);\n        props.load(inFile);\n      }\n    } catch (Exception e) {\n      LOG.warn(\"Exception while reading \" + SnapPuller.REPLICATION_PROPERTIES);\n    } finally {\n      IOUtils.closeQuietly(inFile);\n    }\n    return props;\n  }\n\n","sourceOld":"  Properties loadReplicationProperties() {\n    FileInputStream inFile = null;\n    Properties props = new Properties();\n    try {\n      File f = new File(core.getDataDir(), SnapPuller.REPLICATION_PROPERTIES);\n      if (f.exists()) {\n        inFile = new FileInputStream(f);\n        props.load(inFile);\n      }\n    } catch (Exception e) {\n      LOG.warn(\"Exception while reading \" + SnapPuller.REPLICATION_PROPERTIES);\n    } finally {\n      IOUtils.closeQuietly(inFile);\n    }\n    return props;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","pathOld":"solr/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","sourceNew":"  Properties loadReplicationProperties() {\n    FileInputStream inFile = null;\n    Properties props = new Properties();\n    try {\n      File f = new File(core.getDataDir(), SnapPuller.REPLICATION_PROPERTIES);\n      if (f.exists()) {\n        inFile = new FileInputStream(f);\n        props.load(inFile);\n      }\n    } catch (Exception e) {\n      LOG.warn(\"Exception while reading \" + SnapPuller.REPLICATION_PROPERTIES);\n    } finally {\n      IOUtils.closeQuietly(inFile);\n    }\n    return props;\n  }\n\n","sourceOld":"  Properties loadReplicationProperties() {\n    FileInputStream inFile = null;\n    Properties props = new Properties();\n    try {\n      File f = new File(core.getDataDir(), SnapPuller.REPLICATION_PROPERTIES);\n      if (f.exists()) {\n        inFile = new FileInputStream(f);\n        props.load(inFile);\n      }\n    } catch (Exception e) {\n      LOG.warn(\"Exception while reading \" + SnapPuller.REPLICATION_PROPERTIES);\n    } finally {\n      IOUtils.closeQuietly(inFile);\n    }\n    return props;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","pathOld":"solr/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","sourceNew":"  Properties loadReplicationProperties() {\n    FileInputStream inFile = null;\n    Properties props = new Properties();\n    try {\n      File f = new File(core.getDataDir(), SnapPuller.REPLICATION_PROPERTIES);\n      if (f.exists()) {\n        inFile = new FileInputStream(f);\n        props.load(inFile);\n      }\n    } catch (Exception e) {\n      LOG.warn(\"Exception while reading \" + SnapPuller.REPLICATION_PROPERTIES);\n    } finally {\n      IOUtils.closeQuietly(inFile);\n    }\n    return props;\n  }\n\n","sourceOld":"  Properties loadReplicationProperties() {\n    FileInputStream inFile = null;\n    Properties props = new Properties();\n    try {\n      File f = new File(core.getDataDir(), SnapPuller.REPLICATION_PROPERTIES);\n      if (f.exists()) {\n        inFile = new FileInputStream(f);\n        props.load(inFile);\n      }\n    } catch (Exception e) {\n      LOG.warn(\"Exception while reading \" + SnapPuller.REPLICATION_PROPERTIES);\n    } finally {\n      IOUtils.closeQuietly(inFile);\n    }\n    return props;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43e5779eeb016d5b6980fbf3437f3e8ff4dbf1d6","date":1361552322,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","sourceNew":"  Properties loadReplicationProperties() {\n    Directory dir = null;\n    try {\n      try {\n        dir = core.getDirectoryFactory().get(core.getDataDir(),\n            DirContext.META_DATA, core.getSolrConfig().indexConfig.lockType);\n        if (!dir.fileExists(SnapPuller.REPLICATION_PROPERTIES)) {\n          return new Properties();\n        }\n        final IndexInput input = dir.openInput(\n            SnapPuller.REPLICATION_PROPERTIES, IOContext.DEFAULT);\n        try {\n          final InputStream is = new PropertiesInputStream(input);\n          Properties props = new Properties();\n          props.load(is);\n          return props;\n        } finally {\n          input.close();\n        }\n      } finally {\n        if (dir != null) {\n          core.getDirectoryFactory().release(dir);\n        }\n      }\n    } catch (IOException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  Properties loadReplicationProperties() {\n    FileInputStream inFile = null;\n    Properties props = new Properties();\n    try {\n      File f = new File(core.getDataDir(), SnapPuller.REPLICATION_PROPERTIES);\n      if (f.exists()) {\n        inFile = new FileInputStream(f);\n        props.load(inFile);\n      }\n    } catch (Exception e) {\n      LOG.warn(\"Exception while reading \" + SnapPuller.REPLICATION_PROPERTIES);\n    } finally {\n      IOUtils.closeQuietly(inFile);\n    }\n    return props;\n  }\n\n","bugFix":["4f1a1d7f1604a41328b566b1be0c5ad6038117e8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1fd8fc50365ae7bb9c0d47256bc40182559b70d1","date":1373649022,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","sourceNew":"  Properties loadReplicationProperties() {\n    Directory dir = null;\n    try {\n      try {\n        dir = core.getDirectoryFactory().get(core.getDataDir(),\n            DirContext.META_DATA, core.getSolrConfig().indexConfig.lockType);\n        if (!dir.fileExists(SnapPuller.REPLICATION_PROPERTIES)) {\n          return new Properties();\n        }\n        final IndexInput input = dir.openInput(\n            SnapPuller.REPLICATION_PROPERTIES, IOContext.DEFAULT);\n        try {\n          final InputStream is = new PropertiesInputStream(input);\n          Properties props = new Properties();\n          props.load(new InputStreamReader(is, CHARSET_UTF_8));\n          return props;\n        } finally {\n          input.close();\n        }\n      } finally {\n        if (dir != null) {\n          core.getDirectoryFactory().release(dir);\n        }\n      }\n    } catch (IOException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  Properties loadReplicationProperties() {\n    Directory dir = null;\n    try {\n      try {\n        dir = core.getDirectoryFactory().get(core.getDataDir(),\n            DirContext.META_DATA, core.getSolrConfig().indexConfig.lockType);\n        if (!dir.fileExists(SnapPuller.REPLICATION_PROPERTIES)) {\n          return new Properties();\n        }\n        final IndexInput input = dir.openInput(\n            SnapPuller.REPLICATION_PROPERTIES, IOContext.DEFAULT);\n        try {\n          final InputStream is = new PropertiesInputStream(input);\n          Properties props = new Properties();\n          props.load(is);\n          return props;\n        } finally {\n          input.close();\n        }\n      } finally {\n        if (dir != null) {\n          core.getDirectoryFactory().release(dir);\n        }\n      }\n    } catch (IOException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","sourceNew":"  Properties loadReplicationProperties() {\n    Directory dir = null;\n    try {\n      try {\n        dir = core.getDirectoryFactory().get(core.getDataDir(),\n            DirContext.META_DATA, core.getSolrConfig().indexConfig.lockType);\n        if (!dir.fileExists(SnapPuller.REPLICATION_PROPERTIES)) {\n          return new Properties();\n        }\n        final IndexInput input = dir.openInput(\n            SnapPuller.REPLICATION_PROPERTIES, IOContext.DEFAULT);\n        try {\n          final InputStream is = new PropertiesInputStream(input);\n          Properties props = new Properties();\n          props.load(new InputStreamReader(is, CHARSET_UTF_8));\n          return props;\n        } finally {\n          input.close();\n        }\n      } finally {\n        if (dir != null) {\n          core.getDirectoryFactory().release(dir);\n        }\n      }\n    } catch (IOException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  Properties loadReplicationProperties() {\n    Directory dir = null;\n    try {\n      try {\n        dir = core.getDirectoryFactory().get(core.getDataDir(),\n            DirContext.META_DATA, core.getSolrConfig().indexConfig.lockType);\n        if (!dir.fileExists(SnapPuller.REPLICATION_PROPERTIES)) {\n          return new Properties();\n        }\n        final IndexInput input = dir.openInput(\n            SnapPuller.REPLICATION_PROPERTIES, IOContext.DEFAULT);\n        try {\n          final InputStream is = new PropertiesInputStream(input);\n          Properties props = new Properties();\n          props.load(is);\n          return props;\n        } finally {\n          input.close();\n        }\n      } finally {\n        if (dir != null) {\n          core.getDirectoryFactory().release(dir);\n        }\n      }\n    } catch (IOException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cd4e13d997cf4fb810398a20a299c2c5a9f6b796","date":1395594336,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","sourceNew":"  Properties loadReplicationProperties() {\n    Directory dir = null;\n    try {\n      try {\n        dir = core.getDirectoryFactory().get(core.getDataDir(),\n            DirContext.META_DATA, core.getSolrConfig().indexConfig.lockType);\n        IndexInput input;\n        try {\n          input = dir.openInput(\n            SnapPuller.REPLICATION_PROPERTIES, IOContext.DEFAULT);\n        } catch (FileNotFoundException | NoSuchFileException e) {\n          return new Properties();\n        }\n\n        try {\n          final InputStream is = new PropertiesInputStream(input);\n          Properties props = new Properties();\n          props.load(new InputStreamReader(is, CHARSET_UTF_8));\n          return props;\n        } finally {\n          input.close();\n        }\n      } finally {\n        if (dir != null) {\n          core.getDirectoryFactory().release(dir);\n        }\n      }\n    } catch (IOException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  Properties loadReplicationProperties() {\n    Directory dir = null;\n    try {\n      try {\n        dir = core.getDirectoryFactory().get(core.getDataDir(),\n            DirContext.META_DATA, core.getSolrConfig().indexConfig.lockType);\n        if (!dir.fileExists(SnapPuller.REPLICATION_PROPERTIES)) {\n          return new Properties();\n        }\n        final IndexInput input = dir.openInput(\n            SnapPuller.REPLICATION_PROPERTIES, IOContext.DEFAULT);\n        try {\n          final InputStream is = new PropertiesInputStream(input);\n          Properties props = new Properties();\n          props.load(new InputStreamReader(is, CHARSET_UTF_8));\n          return props;\n        } finally {\n          input.close();\n        }\n      } finally {\n        if (dir != null) {\n          core.getDirectoryFactory().release(dir);\n        }\n      }\n    } catch (IOException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","sourceNew":"  Properties loadReplicationProperties() {\n    Directory dir = null;\n    try {\n      try {\n        dir = core.getDirectoryFactory().get(core.getDataDir(),\n            DirContext.META_DATA, core.getSolrConfig().indexConfig.lockType);\n        IndexInput input;\n        try {\n          input = dir.openInput(\n            SnapPuller.REPLICATION_PROPERTIES, IOContext.DEFAULT);\n        } catch (FileNotFoundException | NoSuchFileException e) {\n          return new Properties();\n        }\n\n        try {\n          final InputStream is = new PropertiesInputStream(input);\n          Properties props = new Properties();\n          props.load(new InputStreamReader(is, StandardCharsets.UTF_8));\n          return props;\n        } finally {\n          input.close();\n        }\n      } finally {\n        if (dir != null) {\n          core.getDirectoryFactory().release(dir);\n        }\n      }\n    } catch (IOException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  Properties loadReplicationProperties() {\n    Directory dir = null;\n    try {\n      try {\n        dir = core.getDirectoryFactory().get(core.getDataDir(),\n            DirContext.META_DATA, core.getSolrConfig().indexConfig.lockType);\n        IndexInput input;\n        try {\n          input = dir.openInput(\n            SnapPuller.REPLICATION_PROPERTIES, IOContext.DEFAULT);\n        } catch (FileNotFoundException | NoSuchFileException e) {\n          return new Properties();\n        }\n\n        try {\n          final InputStream is = new PropertiesInputStream(input);\n          Properties props = new Properties();\n          props.load(new InputStreamReader(is, CHARSET_UTF_8));\n          return props;\n        } finally {\n          input.close();\n        }\n      } finally {\n        if (dir != null) {\n          core.getDirectoryFactory().release(dir);\n        }\n      }\n    } catch (IOException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","sourceNew":"  Properties loadReplicationProperties() {\n    Directory dir = null;\n    try {\n      try {\n        dir = core.getDirectoryFactory().get(core.getDataDir(),\n            DirContext.META_DATA, core.getSolrConfig().indexConfig.lockType);\n        IndexInput input;\n        try {\n          input = dir.openInput(\n            SnapPuller.REPLICATION_PROPERTIES, IOContext.DEFAULT);\n        } catch (FileNotFoundException | NoSuchFileException e) {\n          return new Properties();\n        }\n\n        try {\n          final InputStream is = new PropertiesInputStream(input);\n          Properties props = new Properties();\n          props.load(new InputStreamReader(is, StandardCharsets.UTF_8));\n          return props;\n        } finally {\n          input.close();\n        }\n      } finally {\n        if (dir != null) {\n          core.getDirectoryFactory().release(dir);\n        }\n      }\n    } catch (IOException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  Properties loadReplicationProperties() {\n    Directory dir = null;\n    try {\n      try {\n        dir = core.getDirectoryFactory().get(core.getDataDir(),\n            DirContext.META_DATA, core.getSolrConfig().indexConfig.lockType);\n        IndexInput input;\n        try {\n          input = dir.openInput(\n            SnapPuller.REPLICATION_PROPERTIES, IOContext.DEFAULT);\n        } catch (FileNotFoundException | NoSuchFileException e) {\n          return new Properties();\n        }\n\n        try {\n          final InputStream is = new PropertiesInputStream(input);\n          Properties props = new Properties();\n          props.load(new InputStreamReader(is, CHARSET_UTF_8));\n          return props;\n        } finally {\n          input.close();\n        }\n      } finally {\n        if (dir != null) {\n          core.getDirectoryFactory().release(dir);\n        }\n      }\n    } catch (IOException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20f6b7cff3771384f27af0f059795d7e64aff6b9","date":1425498309,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","sourceNew":"  Properties loadReplicationProperties() {\n    Directory dir = null;\n    try {\n      try {\n        dir = core.getDirectoryFactory().get(core.getDataDir(),\n            DirContext.META_DATA, core.getSolrConfig().indexConfig.lockType);\n        IndexInput input;\n        try {\n          input = dir.openInput(\n            IndexFetcher.REPLICATION_PROPERTIES, IOContext.DEFAULT);\n        } catch (FileNotFoundException | NoSuchFileException e) {\n          return new Properties();\n        }\n\n        try {\n          final InputStream is = new PropertiesInputStream(input);\n          Properties props = new Properties();\n          props.load(new InputStreamReader(is, StandardCharsets.UTF_8));\n          return props;\n        } finally {\n          input.close();\n        }\n      } finally {\n        if (dir != null) {\n          core.getDirectoryFactory().release(dir);\n        }\n      }\n    } catch (IOException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  Properties loadReplicationProperties() {\n    Directory dir = null;\n    try {\n      try {\n        dir = core.getDirectoryFactory().get(core.getDataDir(),\n            DirContext.META_DATA, core.getSolrConfig().indexConfig.lockType);\n        IndexInput input;\n        try {\n          input = dir.openInput(\n            SnapPuller.REPLICATION_PROPERTIES, IOContext.DEFAULT);\n        } catch (FileNotFoundException | NoSuchFileException e) {\n          return new Properties();\n        }\n\n        try {\n          final InputStream is = new PropertiesInputStream(input);\n          Properties props = new Properties();\n          props.load(new InputStreamReader(is, StandardCharsets.UTF_8));\n          return props;\n        } finally {\n          input.close();\n        }\n      } finally {\n        if (dir != null) {\n          core.getDirectoryFactory().release(dir);\n        }\n      }\n    } catch (IOException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/ReplicationHandler#loadReplicationProperties().mjava","sourceNew":"  Properties loadReplicationProperties() {\n    Directory dir = null;\n    try {\n      try {\n        dir = core.getDirectoryFactory().get(core.getDataDir(),\n            DirContext.META_DATA, core.getSolrConfig().indexConfig.lockType);\n        IndexInput input;\n        try {\n          input = dir.openInput(\n            IndexFetcher.REPLICATION_PROPERTIES, IOContext.DEFAULT);\n        } catch (FileNotFoundException | NoSuchFileException e) {\n          return new Properties();\n        }\n\n        try {\n          final InputStream is = new PropertiesInputStream(input);\n          Properties props = new Properties();\n          props.load(new InputStreamReader(is, StandardCharsets.UTF_8));\n          return props;\n        } finally {\n          input.close();\n        }\n      } finally {\n        if (dir != null) {\n          core.getDirectoryFactory().release(dir);\n        }\n      }\n    } catch (IOException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  Properties loadReplicationProperties() {\n    Directory dir = null;\n    try {\n      try {\n        dir = core.getDirectoryFactory().get(core.getDataDir(),\n            DirContext.META_DATA, core.getSolrConfig().indexConfig.lockType);\n        IndexInput input;\n        try {\n          input = dir.openInput(\n            SnapPuller.REPLICATION_PROPERTIES, IOContext.DEFAULT);\n        } catch (FileNotFoundException | NoSuchFileException e) {\n          return new Properties();\n        }\n\n        try {\n          final InputStream is = new PropertiesInputStream(input);\n          Properties props = new Properties();\n          props.load(new InputStreamReader(is, StandardCharsets.UTF_8));\n          return props;\n        } finally {\n          input.close();\n        }\n      } finally {\n        if (dir != null) {\n          core.getDirectoryFactory().release(dir);\n        }\n      }\n    } catch (IOException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["cd4e13d997cf4fb810398a20a299c2c5a9f6b796","7d89d7e4e5101347833eea558851bf4209218619"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["43e5779eeb016d5b6980fbf3437f3e8ff4dbf1d6","1fd8fc50365ae7bb9c0d47256bc40182559b70d1"],"cd4e13d997cf4fb810398a20a299c2c5a9f6b796":["1fd8fc50365ae7bb9c0d47256bc40182559b70d1"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"7d89d7e4e5101347833eea558851bf4209218619":["cd4e13d997cf4fb810398a20a299c2c5a9f6b796"],"1fd8fc50365ae7bb9c0d47256bc40182559b70d1":["43e5779eeb016d5b6980fbf3437f3e8ff4dbf1d6"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["7d89d7e4e5101347833eea558851bf4209218619","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["7d89d7e4e5101347833eea558851bf4209218619"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"43e5779eeb016d5b6980fbf3437f3e8ff4dbf1d6":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["20f6b7cff3771384f27af0f059795d7e64aff6b9"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"cd4e13d997cf4fb810398a20a299c2c5a9f6b796":["5eb2511ababf862ea11e10761c70ee560cd84510","7d89d7e4e5101347833eea558851bf4209218619"],"c26f00b574427b55127e869b935845554afde1fa":["43e5779eeb016d5b6980fbf3437f3e8ff4dbf1d6"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"1fd8fc50365ae7bb9c0d47256bc40182559b70d1":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd4e13d997cf4fb810398a20a299c2c5a9f6b796"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"43e5779eeb016d5b6980fbf3437f3e8ff4dbf1d6":["37a0f60745e53927c4c876cfe5b5a58170f0646c","1fd8fc50365ae7bb9c0d47256bc40182559b70d1"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","37a0f60745e53927c4c876cfe5b5a58170f0646c","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}