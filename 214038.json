{"path":"solr/core/src/test/org/apache/solr/search/TestRecovery#getVer(SolrQueryRequest).mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRecovery#getVer(SolrQueryRequest).mjava","pathOld":"/dev/null","sourceNew":"  private static Long getVer(SolrQueryRequest req) throws Exception {\n    String response = JQ(req);\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Map doc = null;\n    if (rsp.containsKey(\"doc\")) {\n      doc = (Map)rsp.get(\"doc\");\n    } else if (rsp.containsKey(\"docs\")) {\n      List lst = (List)rsp.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    } else if (rsp.containsKey(\"response\")) {\n      Map responseMap = (Map)rsp.get(\"response\");\n      List lst = (List)responseMap.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    }\n\n    if (doc == null) return null;\n\n    return (Long)doc.get(\"_version_\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRecovery#getVer(SolrQueryRequest).mjava","pathOld":"/dev/null","sourceNew":"  private static Long getVer(SolrQueryRequest req) throws Exception {\n    String response = JQ(req);\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Map doc = null;\n    if (rsp.containsKey(\"doc\")) {\n      doc = (Map)rsp.get(\"doc\");\n    } else if (rsp.containsKey(\"docs\")) {\n      List lst = (List)rsp.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    } else if (rsp.containsKey(\"response\")) {\n      Map responseMap = (Map)rsp.get(\"response\");\n      List lst = (List)responseMap.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    }\n\n    if (doc == null) return null;\n\n    return (Long)doc.get(\"_version_\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRecovery#getVer(SolrQueryRequest).mjava","pathOld":"/dev/null","sourceNew":"  private static Long getVer(SolrQueryRequest req) throws Exception {\n    String response = JQ(req);\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Map doc = null;\n    if (rsp.containsKey(\"doc\")) {\n      doc = (Map)rsp.get(\"doc\");\n    } else if (rsp.containsKey(\"docs\")) {\n      List lst = (List)rsp.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    } else if (rsp.containsKey(\"response\")) {\n      Map responseMap = (Map)rsp.get(\"response\");\n      List lst = (List)responseMap.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    }\n\n    if (doc == null) return null;\n\n    return (Long)doc.get(\"_version_\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3714bcf66a68a1600e9dd11442fc1b33b62ef088","date":1556832005,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRecovery#getVer(SolrQueryRequest).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRecovery#getVer(SolrQueryRequest).mjava","sourceNew":"  private static Long getVer(SolrQueryRequest req) throws Exception {\n    String response = JQ(req);\n    Map rsp = (Map) Utils.fromJSONString(response);\n    Map doc = null;\n    if (rsp.containsKey(\"doc\")) {\n      doc = (Map)rsp.get(\"doc\");\n    } else if (rsp.containsKey(\"docs\")) {\n      List lst = (List)rsp.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    } else if (rsp.containsKey(\"response\")) {\n      Map responseMap = (Map)rsp.get(\"response\");\n      List lst = (List)responseMap.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    }\n\n    if (doc == null) return null;\n\n    return (Long)doc.get(\"_version_\");\n  }\n\n","sourceOld":"  private static Long getVer(SolrQueryRequest req) throws Exception {\n    String response = JQ(req);\n    Map rsp = (Map) ObjectBuilder.fromJSON(response);\n    Map doc = null;\n    if (rsp.containsKey(\"doc\")) {\n      doc = (Map)rsp.get(\"doc\");\n    } else if (rsp.containsKey(\"docs\")) {\n      List lst = (List)rsp.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    } else if (rsp.containsKey(\"response\")) {\n      Map responseMap = (Map)rsp.get(\"response\");\n      List lst = (List)responseMap.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    }\n\n    if (doc == null) return null;\n\n    return (Long)doc.get(\"_version_\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRecovery#getVer(SolrQueryRequest).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRecovery#getVer(SolrQueryRequest).mjava","sourceNew":"  private static Long getVer(SolrQueryRequest req) throws Exception {\n    String response = JQ(req);\n    @SuppressWarnings({\"rawtypes\"})\n    Map rsp = (Map) Utils.fromJSONString(response);\n    @SuppressWarnings({\"rawtypes\"})\n    Map doc = null;\n    if (rsp.containsKey(\"doc\")) {\n      doc = (Map)rsp.get(\"doc\");\n    } else if (rsp.containsKey(\"docs\")) {\n      @SuppressWarnings({\"rawtypes\"})\n      List lst = (List)rsp.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    } else if (rsp.containsKey(\"response\")) {\n      @SuppressWarnings({\"rawtypes\"})\n      Map responseMap = (Map)rsp.get(\"response\");\n      @SuppressWarnings({\"rawtypes\"})\n      List lst = (List)responseMap.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    }\n\n    if (doc == null) return null;\n\n    return (Long)doc.get(\"_version_\");\n  }\n\n","sourceOld":"  private static Long getVer(SolrQueryRequest req) throws Exception {\n    String response = JQ(req);\n    Map rsp = (Map) Utils.fromJSONString(response);\n    Map doc = null;\n    if (rsp.containsKey(\"doc\")) {\n      doc = (Map)rsp.get(\"doc\");\n    } else if (rsp.containsKey(\"docs\")) {\n      List lst = (List)rsp.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    } else if (rsp.containsKey(\"response\")) {\n      Map responseMap = (Map)rsp.get(\"response\");\n      List lst = (List)responseMap.get(\"docs\");\n      if (lst.size() > 0) {\n        doc = (Map)lst.get(0);\n      }\n    }\n\n    if (doc == null) return null;\n\n    return (Long)doc.get(\"_version_\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3714bcf66a68a1600e9dd11442fc1b33b62ef088":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["3714bcf66a68a1600e9dd11442fc1b33b62ef088"]},"commit2Childs":{"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","3714bcf66a68a1600e9dd11442fc1b33b62ef088"],"3714bcf66a68a1600e9dd11442fc1b33b62ef088":["e98520789adb1d5ad05afb4956eca0944a929688"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}