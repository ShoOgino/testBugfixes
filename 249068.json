{"path":"lucene/core/src/test/org/apache/lucene/TestSearchForDuplicates#checkHits(ScoreDoc[],int,IndexSearcher).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/TestSearchForDuplicates#checkHits(ScoreDoc[],int,IndexSearcher).mjava","pathOld":"lucene/src/test/org/apache/lucene/TestSearchForDuplicates#checkHits(ScoreDoc[],int,IndexSearcher).mjava","sourceNew":"  private void checkHits(ScoreDoc[] hits, int expectedCount, IndexSearcher searcher) throws IOException {\n    assertEquals(\"total results\", expectedCount, hits.length);\n    for (int i = 0 ; i < hits.length; i++) {\n      if (i < 10 || (i > 94 && i < 105) ) {\n        Document d = searcher.doc(hits[i].doc);\n        assertEquals(\"check \" + i, String.valueOf(i), d.get(ID_FIELD));\n      }\n    }\n  }\n\n","sourceOld":"  private void checkHits(ScoreDoc[] hits, int expectedCount, IndexSearcher searcher) throws IOException {\n    assertEquals(\"total results\", expectedCount, hits.length);\n    for (int i = 0 ; i < hits.length; i++) {\n      if (i < 10 || (i > 94 && i < 105) ) {\n        Document d = searcher.doc(hits[i].doc);\n        assertEquals(\"check \" + i, String.valueOf(i), d.get(ID_FIELD));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4","date":1341839195,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/TestSearchForDuplicates#checkHits(ScoreDoc[],int,IndexSearcher).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/TestSearchForDuplicates#checkHits(ScoreDoc[],int,IndexSearcher).mjava","sourceNew":"  private void checkHits(ScoreDoc[] hits, int expectedCount, IndexSearcher searcher) throws IOException {\n    assertEquals(\"total results\", expectedCount, hits.length);\n    for (int i = 0 ; i < hits.length; i++) {\n      if (i < 10 || (i > 94 && i < 105) ) {\n        StoredDocument d = searcher.doc(hits[i].doc);\n        assertEquals(\"check \" + i, String.valueOf(i), d.get(ID_FIELD));\n      }\n    }\n  }\n\n","sourceOld":"  private void checkHits(ScoreDoc[] hits, int expectedCount, IndexSearcher searcher) throws IOException {\n    assertEquals(\"total results\", expectedCount, hits.length);\n    for (int i = 0 ; i < hits.length; i++) {\n      if (i < 10 || (i > 94 && i < 105) ) {\n        Document d = searcher.doc(hits[i].doc);\n        assertEquals(\"check \" + i, String.valueOf(i), d.get(ID_FIELD));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/TestSearchForDuplicates#checkHits(ScoreDoc[],int,IndexSearcher).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/TestSearchForDuplicates#checkHits(ScoreDoc[],int,IndexSearcher).mjava","sourceNew":"  private void checkHits(ScoreDoc[] hits, int expectedCount, IndexSearcher searcher) throws IOException {\n    assertEquals(\"total results\", expectedCount, hits.length);\n    for (int i = 0 ; i < hits.length; i++) {\n      if (i < 10 || (i > 94 && i < 105) ) {\n        StoredDocument d = searcher.doc(hits[i].doc);\n        assertEquals(\"check \" + i, String.valueOf(i), d.get(ID_FIELD));\n      }\n    }\n  }\n\n","sourceOld":"  private void checkHits(ScoreDoc[] hits, int expectedCount, IndexSearcher searcher) throws IOException {\n    assertEquals(\"total results\", expectedCount, hits.length);\n    for (int i = 0 ; i < hits.length; i++) {\n      if (i < 10 || (i > 94 && i < 105) ) {\n        Document d = searcher.doc(hits[i].doc);\n        assertEquals(\"check \" + i, String.valueOf(i), d.get(ID_FIELD));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/TestSearchForDuplicates#checkHits(ScoreDoc[],int,IndexSearcher).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/TestSearchForDuplicates#checkHits(ScoreDoc[],int,IndexSearcher).mjava","sourceNew":"  private void checkHits(ScoreDoc[] hits, int expectedCount, IndexSearcher searcher) throws IOException {\n    assertEquals(\"total results\", expectedCount, hits.length);\n    for (int i = 0 ; i < hits.length; i++) {\n      if (i < 10 || (i > 94 && i < 105) ) {\n        Document d = searcher.doc(hits[i].doc);\n        assertEquals(\"check \" + i, String.valueOf(i), d.get(ID_FIELD));\n      }\n    }\n  }\n\n","sourceOld":"  private void checkHits(ScoreDoc[] hits, int expectedCount, IndexSearcher searcher) throws IOException {\n    assertEquals(\"total results\", expectedCount, hits.length);\n    for (int i = 0 ; i < hits.length; i++) {\n      if (i < 10 || (i > 94 && i < 105) ) {\n        StoredDocument d = searcher.doc(hits[i].doc);\n        assertEquals(\"check \" + i, String.valueOf(i), d.get(ID_FIELD));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1d028314cced5858683a1bb4741423d0f934257b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["1d028314cced5858683a1bb4741423d0f934257b"]},"commit2Childs":{"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4":["1d028314cced5858683a1bb4741423d0f934257b"],"1d028314cced5858683a1bb4741423d0f934257b":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4","1d028314cced5858683a1bb4741423d0f934257b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}