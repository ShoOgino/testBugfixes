{"path":"lucene/core/src/test/org/apache/lucene/index/TestLazyProxSkipping#search().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestLazyProxSkipping#search().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestLazyProxSkipping#search().mjava","sourceNew":"    private ScoreDoc[] search() throws IOException {\n        // create PhraseQuery \"term1 term2\" and search\n        PhraseQuery pq = new PhraseQuery();\n        pq.add(new Term(this.field, this.term1));\n        pq.add(new Term(this.field, this.term2));\n        return this.searcher.search(pq, null, 1000).scoreDocs;        \n    }\n\n","sourceOld":"    private ScoreDoc[] search() throws IOException {\n        // create PhraseQuery \"term1 term2\" and search\n        PhraseQuery pq = new PhraseQuery();\n        pq.add(new Term(this.field, this.term1));\n        pq.add(new Term(this.field, this.term2));\n        return this.searcher.search(pq, null, 1000).scoreDocs;        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestLazyProxSkipping#search().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestLazyProxSkipping#search().mjava","sourceNew":"    private ScoreDoc[] search() throws IOException {\n        // create PhraseQuery \"term1 term2\" and search\n        PhraseQuery pq = new PhraseQuery();\n        pq.add(new Term(this.field, this.term1));\n        pq.add(new Term(this.field, this.term2));\n        return this.searcher.search(pq, null, 1000).scoreDocs;        \n    }\n\n","sourceOld":"    private ScoreDoc[] search() throws IOException {\n        // create PhraseQuery \"term1 term2\" and search\n        PhraseQuery pq = new PhraseQuery();\n        pq.add(new Term(this.field, this.term1));\n        pq.add(new Term(this.field, this.term2));\n        return this.searcher.search(pq, null, 1000).scoreDocs;        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestLazyProxSkipping#search().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestLazyProxSkipping#search().mjava","sourceNew":"    private ScoreDoc[] search() throws IOException {\n        // create PhraseQuery \"term1 term2\" and search\n        PhraseQuery pq = new PhraseQuery();\n        pq.add(new Term(this.field, this.term1));\n        pq.add(new Term(this.field, this.term2));\n        return this.searcher.search(pq, null, 1000).scoreDocs;        \n    }\n\n","sourceOld":"    private ScoreDoc[] search() throws IOException {\n        // create PhraseQuery \"term1 term2\" and search\n        PhraseQuery pq = new PhraseQuery();\n        pq.add(new Term(this.field, this.term1));\n        pq.add(new Term(this.field, this.term2));\n        return this.searcher.search(pq, null, 1000).scoreDocs;        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestLazyProxSkipping#search().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestLazyProxSkipping#search().mjava","sourceNew":"    private ScoreDoc[] search() throws IOException {\n        // create PhraseQuery \"term1 term2\" and search\n        PhraseQuery pq = new PhraseQuery();\n        pq.add(new Term(this.field, this.term1));\n        pq.add(new Term(this.field, this.term2));\n        return this.searcher.search(pq, 1000).scoreDocs;        \n    }\n\n","sourceOld":"    private ScoreDoc[] search() throws IOException {\n        // create PhraseQuery \"term1 term2\" and search\n        PhraseQuery pq = new PhraseQuery();\n        pq.add(new Term(this.field, this.term1));\n        pq.add(new Term(this.field, this.term2));\n        return this.searcher.search(pq, null, 1000).scoreDocs;        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9e1499c5d26c936238506df90a3c02c76707722","date":1434449920,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestLazyProxSkipping#search().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestLazyProxSkipping#search().mjava","sourceNew":"    private ScoreDoc[] search() throws IOException {\n        // create PhraseQuery \"term1 term2\" and search\n        PhraseQuery pq = new PhraseQuery(field, term1, term2);\n        return this.searcher.search(pq, 1000).scoreDocs;        \n    }\n\n","sourceOld":"    private ScoreDoc[] search() throws IOException {\n        // create PhraseQuery \"term1 term2\" and search\n        PhraseQuery pq = new PhraseQuery();\n        pq.add(new Term(this.field, this.term1));\n        pq.add(new Term(this.field, this.term2));\n        return this.searcher.search(pq, 1000).scoreDocs;        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9e1499c5d26c936238506df90a3c02c76707722":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e9e1499c5d26c936238506df90a3c02c76707722"]},"commit2Childs":{"e9e1499c5d26c936238506df90a3c02c76707722":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["e9e1499c5d26c936238506df90a3c02c76707722"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}