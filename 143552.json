{"path":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory,boolean).mjava","commits":[{"id":"065d530f7c7a67789e972c4611cd4b2bd28a07e9","date":1324000361,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory,boolean).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory).mjava","sourceNew":"  /**\n   * Returns a new Directory instance, using the specified random\n   * with contents copied from the provided directory. See \n   * {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r, Directory d, boolean maybeWrap) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    for (String file : d.listAll()) {\n     d.copy(impl, file, file, newIOContext(r));\n    }\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeWrap ? maybeNRTWrap(r, impl) : impl);\n    stores.put(dir, Thread.currentThread().getStackTrace());\n    dir.setThrottling(TEST_THROTTLING);\n    return dir;\n  }\n\n","sourceOld":"  /**\n   * Returns a new Directory instance, using the specified random\n   * with contents copied from the provided directory. See \n   * {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r, Directory d) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    for (String file : d.listAll()) {\n     d.copy(impl, file, file, newIOContext(r));\n    }\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, impl);\n    stores.put(dir, Thread.currentThread().getStackTrace());\n    dir.setThrottling(TEST_THROTTLING);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592e183306e8e4efabf3e7e08d3e709c9b97dbb","date":1324403520,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/util/LuceneTestCase#newDirectory(Random,Directory,boolean).mjava","sourceNew":"  /**\n   * Returns a new Directory instance, using the specified random\n   * with contents copied from the provided directory. See \n   * {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r, Directory d) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    for (String file : d.listAll()) {\n     d.copy(impl, file, file, newIOContext(r));\n    }\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeNRTWrap(r, impl));\n    stores.put(dir, Thread.currentThread().getStackTrace());\n    dir.setThrottling(TEST_THROTTLING);\n    return dir;\n  }\n\n","sourceOld":"  /**\n   * Returns a new Directory instance, using the specified random\n   * with contents copied from the provided directory. See \n   * {@link #newDirectory()} for more information.\n   */\n  public static MockDirectoryWrapper newDirectory(Random r, Directory d, boolean maybeWrap) throws IOException {\n    Directory impl = newDirectoryImpl(r, TEST_DIRECTORY);\n    for (String file : d.listAll()) {\n     d.copy(impl, file, file, newIOContext(r));\n    }\n    MockDirectoryWrapper dir = new MockDirectoryWrapper(r, maybeWrap ? maybeNRTWrap(r, impl) : impl);\n    stores.put(dir, Thread.currentThread().getStackTrace());\n    dir.setThrottling(TEST_THROTTLING);\n    return dir;\n  }\n\n","bugFix":null,"bugIntro":["d19974432be9aed28ee7dca73bdf01d139e763a9"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"f592e183306e8e4efabf3e7e08d3e709c9b97dbb":["065d530f7c7a67789e972c4611cd4b2bd28a07e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"065d530f7c7a67789e972c4611cd4b2bd28a07e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f592e183306e8e4efabf3e7e08d3e709c9b97dbb"]},"commit2Childs":{"f592e183306e8e4efabf3e7e08d3e709c9b97dbb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["065d530f7c7a67789e972c4611cd4b2bd28a07e9"],"065d530f7c7a67789e972c4611cd4b2bd28a07e9":["f592e183306e8e4efabf3e7e08d3e709c9b97dbb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}