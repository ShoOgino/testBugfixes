{"path":"solr/core/src/test/org/apache/solr/response/RetrieveField[TestRetrieveFieldsOptimizer]#getValsForField().mjava","commits":[{"id":"96ecd141e96e7a7a65822d7fada5ddc585b21149","date":1534786652,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/RetrieveField[TestRetrieveFieldsOptimizer]#getValsForField().mjava","pathOld":"/dev/null","sourceNew":"  List<String> getValsForField() {\n    List<String> valsAsStrings = new ArrayList<>();\n    switch (testFieldType.getSolrTypeClass()) {\n      case \"solr.TrieIntField\":\n      case \"solr.TrieLongField\":\n      case \"solr.IntPointField\":\n      case \"solr.LongPointField\":\n        valsAsStrings.add(Integer.toString(random().nextInt(10_000)));\n        if (schemaField.multiValued() == false) break;\n        for (int idx = 0; idx < random().nextInt(5); ++idx) {\n          valsAsStrings.add(Integer.toString(random().nextInt(10_000)));\n        }\n        break;\n\n      case \"solr.TrieFloatField\":\n      case \"solr.TrieDoubleField\":\n      case \"solr.FloatPointField\":\n      case \"solr.DoublePointField\":\n        valsAsStrings.add(Float.toString(random().nextFloat()));\n        if (schemaField.multiValued() == false) break;\n        for (int idx = 0; idx < random().nextInt(5); ++idx) {\n          valsAsStrings.add(Float.toString(random().nextFloat()));\n        }\n        break;\n\n      case \"solr.TrieDateField\":\n      case \"solr.DatePointField\":\n        valsAsStrings.add(randDate());\n        if (schemaField.multiValued() == false) break;\n        for (int idx = 0; idx < random().nextInt(5); ++idx) {\n          valsAsStrings.add(randDate());\n        }\n        break;\n\n      case \"solr.StrField\":\n        valsAsStrings.add(randString());\n        if (schemaField.multiValued() == false) break;\n        for (int idx = 0; idx < random().nextInt(5); ++idx) {\n          valsAsStrings.add(randString());\n        }\n        break;\n\n      case \"solr.BoolField\":\n        valsAsStrings.add(Boolean.toString(random().nextBoolean()));\n        if (schemaField.multiValued() == false) break;\n        for (int idx = 0; idx < random().nextInt(5); ++idx) {\n          valsAsStrings.add(Boolean.toString(random().nextBoolean()));\n        }\n        break;\n\n      default:\n        fail(\"Found no case for field \" + name + \" type \" + type);\n        break;\n    }\n    // There are tricky cases with multiValued fields that are sometimes fetched from docValues that obey set\n    // semantics so be sure we include at least one duplicate in a multValued field sometimes\n    if (random().nextBoolean() && valsAsStrings.size() > 1) {\n      valsAsStrings.add(valsAsStrings.get(random().nextInt(valsAsStrings.size())));\n\n    }\n\n    return valsAsStrings;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"96ecd141e96e7a7a65822d7fada5ddc585b21149":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["96ecd141e96e7a7a65822d7fada5ddc585b21149"]},"commit2Childs":{"96ecd141e96e7a7a65822d7fada5ddc585b21149":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["96ecd141e96e7a7a65822d7fada5ddc585b21149"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}