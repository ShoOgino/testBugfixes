{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","sourceNew":" @Test\n public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlRequest up = new DirectXmlRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","sourceOld":" @Test\n public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlRequest up = new DirectXmlRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","sourceNew":" @Test\n public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlRequest up = new DirectXmlRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","sourceOld":" @Test\n public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlRequest up = new DirectXmlRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","sourceNew":" @Test\n public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlRequest up = new DirectXmlRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","sourceOld":" @Test\n public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlRequest up = new DirectXmlRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8f628082d9af75235881d7a98cbf3eda663dd62","date":1344851793,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","sourceNew":" @Test\n public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    List<String> ids = new ArrayList<String>();\n    for( SolrInputDocument d : doc ) {\n      ids.add(d.getFieldValue(\"id\").toString());\n    }\n    server.deleteById(ids);\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","sourceOld":" @Test\n public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlRequest up = new DirectXmlRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","bugFix":["b060cdfaa7a8efca66df2f689cb6abdaca1ca06b","ebb24ab555aab7c4dd5d2264c06a4f19fb217913","f03547f8fee50fda86cd7bc4c78856f94b157861"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","sourceNew":" @Test\n public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    List<String> ids = new ArrayList<String>();\n    for( SolrInputDocument d : doc ) {\n      ids.add(d.getFieldValue(\"id\").toString());\n    }\n    server.deleteById(ids);\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","sourceOld":" @Test\n public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlRequest up = new DirectXmlRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","sourceNew":" @Test\n public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    List<String> ids = new ArrayList<String>();\n    for( SolrInputDocument d : doc ) {\n      ids.add(d.getFieldValue(\"id\").toString());\n    }\n    server.deleteById(ids);\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","sourceOld":" @Test\n public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlRequest up = new DirectXmlRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98a20a1a0f02e19e5121d1b5d95f5af857d609ef","date":1382205865,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTestsBase#testAddDelete().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","sourceNew":"  @Test\n  public void testAddDelete() throws Exception {\n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery(\"*:*\");// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for (int i = 0; i < 3; i++) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField(\"id\", i + \" & 222\", 1.0f);\n    }\n    String id = (String) doc[0].getField(\"id\").getFirstValue();\n    \n    server.add(doc[0]);\n    server.commit();\n    assertNumFound(\"*:*\", 1); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById(id);\n    server.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n    \n    // add it back\n    server.add(doc[0]);\n    server.commit();\n    assertNumFound(\"*:*\", 1); // make sure it got in\n    server.deleteByQuery(\"id:\\\"\" + ClientUtils.escapeQueryChars(id) + \"\\\"\");\n    server.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n    \n    // Add two documents\n    for (SolrInputDocument d : doc) {\n      server.add(d);\n    }\n    server.commit();\n    assertNumFound(\"*:*\", 3); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    List<String> ids = new ArrayList<String>();\n    for (SolrInputDocument d : doc) {\n      ids.add(d.getFieldValue(\"id\").toString());\n    }\n    server.deleteById(ids);\n    server.commit();\n    assertNumFound(\"*:*\", 0); // make sure it got out\n  }\n\n","sourceOld":" @Test\n public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    List<String> ids = new ArrayList<String>();\n    for( SolrInputDocument d : doc ) {\n      ids.add(d.getFieldValue(\"id\").toString());\n    }\n    server.deleteById(ids);\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"98a20a1a0f02e19e5121d1b5d95f5af857d609ef":["c8f628082d9af75235881d7a98cbf3eda663dd62"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["c26f00b574427b55127e869b935845554afde1fa","c8f628082d9af75235881d7a98cbf3eda663dd62"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c8f628082d9af75235881d7a98cbf3eda663dd62":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["c26f00b574427b55127e869b935845554afde1fa","c8f628082d9af75235881d7a98cbf3eda663dd62"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["98a20a1a0f02e19e5121d1b5d95f5af857d609ef"]},"commit2Childs":{"98a20a1a0f02e19e5121d1b5d95f5af857d609ef":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["c7869f64c874ebf7f317d22c00baf2b6857797a6","c8f628082d9af75235881d7a98cbf3eda663dd62","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c8f628082d9af75235881d7a98cbf3eda663dd62":["98a20a1a0f02e19e5121d1b5d95f5af857d609ef","c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","a258fbb26824fd104ed795e5d9033d2d040049ee","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}