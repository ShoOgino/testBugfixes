{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/SumValueSourceFacetRequest.ScoreValueSourceFacetsAggregator#aggregate(MatchingDocs,CategoryListParams,FacetArrays).mjava","commits":[{"id":"1b8829c66b19d8c6b7eedbb88f69c8ce1f53311d","date":1383508626,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/SumValueSourceFacetRequest.ScoreValueSourceFacetsAggregator#aggregate(MatchingDocs,CategoryListParams,FacetArrays).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void aggregate(MatchingDocs matchingDocs, CategoryListParams clp, FacetArrays facetArrays) throws IOException {\n      final CategoryListIterator cli = clp.createCategoryListIterator(0);\n      if (!cli.setNextReader(matchingDocs.context)) {\n        return;\n      }\n\n      assert matchingDocs.scores != null;\n\n      final FakeScorer scorer = new FakeScorer();\n      Map<String, Scorer> context = new HashMap<String, Scorer>();\n      context.put(\"scorer\", scorer);\n\n      final FunctionValues fvalues = valueSource.getValues(context, matchingDocs.context);\n      final int length = matchingDocs.bits.length();\n      final float[] aggValues = facetArrays.getFloatArray();\n      int doc = 0;\n      int scoresIdx = 0;\n      while (doc < length && (doc = matchingDocs.bits.nextSetBit(doc)) != -1) {\n        scorer.docID = doc;\n        scorer.score = matchingDocs.scores[scoresIdx++];\n        cli.getOrdinals(doc, ordinals);\n        final int upto = ordinals.offset + ordinals.length;\n        float val = (float) fvalues.doubleVal(doc);\n        for (int i = ordinals.offset; i < upto; i++) {\n          aggValues[ordinals.ints[i]] += val;\n        }\n        ++doc;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/SumValueSourceFacetRequest.ScoreValueSourceFacetsAggregator#aggregate(MatchingDocs,CategoryListParams,FacetArrays).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void aggregate(MatchingDocs matchingDocs, CategoryListParams clp, FacetArrays facetArrays) throws IOException {\n      final CategoryListIterator cli = clp.createCategoryListIterator(0);\n      if (!cli.setNextReader(matchingDocs.context)) {\n        return;\n      }\n\n      assert matchingDocs.scores != null;\n\n      final FakeScorer scorer = new FakeScorer();\n      Map<String, Scorer> context = new HashMap<String, Scorer>();\n      context.put(\"scorer\", scorer);\n\n      final FunctionValues fvalues = valueSource.getValues(context, matchingDocs.context);\n      final int length = matchingDocs.bits.length();\n      final float[] aggValues = facetArrays.getFloatArray();\n      int doc = 0;\n      int scoresIdx = 0;\n      while (doc < length && (doc = matchingDocs.bits.nextSetBit(doc)) != -1) {\n        scorer.docID = doc;\n        scorer.score = matchingDocs.scores[scoresIdx++];\n        cli.getOrdinals(doc, ordinals);\n        final int upto = ordinals.offset + ordinals.length;\n        float val = (float) fvalues.doubleVal(doc);\n        for (int i = ordinals.offset; i < upto; i++) {\n          aggValues[ordinals.ints[i]] += val;\n        }\n        ++doc;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/SumValueSourceFacetRequest.ScoreValueSourceFacetsAggregator#aggregate(MatchingDocs,CategoryListParams,FacetArrays).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void aggregate(MatchingDocs matchingDocs, CategoryListParams clp, FacetArrays facetArrays) throws IOException {\n      final CategoryListIterator cli = clp.createCategoryListIterator(0);\n      if (!cli.setNextReader(matchingDocs.context)) {\n        return;\n      }\n\n      assert matchingDocs.scores != null;\n\n      final FakeScorer scorer = new FakeScorer();\n      Map<String, Scorer> context = new HashMap<String, Scorer>();\n      context.put(\"scorer\", scorer);\n\n      final FunctionValues fvalues = valueSource.getValues(context, matchingDocs.context);\n      final int length = matchingDocs.bits.length();\n      final float[] aggValues = facetArrays.getFloatArray();\n      int doc = 0;\n      int scoresIdx = 0;\n      while (doc < length && (doc = matchingDocs.bits.nextSetBit(doc)) != -1) {\n        scorer.docID = doc;\n        scorer.score = matchingDocs.scores[scoresIdx++];\n        cli.getOrdinals(doc, ordinals);\n        final int upto = ordinals.offset + ordinals.length;\n        float val = (float) fvalues.doubleVal(doc);\n        for (int i = ordinals.offset; i < upto; i++) {\n          aggValues[ordinals.ints[i]] += val;\n        }\n        ++doc;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d33e19a97046248623a7591aeaa6547233fd15e2":["1b8829c66b19d8c6b7eedbb88f69c8ce1f53311d"],"1b8829c66b19d8c6b7eedbb88f69c8ce1f53311d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["1b8829c66b19d8c6b7eedbb88f69c8ce1f53311d","d33e19a97046248623a7591aeaa6547233fd15e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"1b8829c66b19d8c6b7eedbb88f69c8ce1f53311d":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1b8829c66b19d8c6b7eedbb88f69c8ce1f53311d"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}