{"path":"lucene/core/src/java/org/apache/lucene/util/SparseFixedBitSet#SparseFixedBitSet(int).mjava","commits":[{"id":"59ce67ef5584d0d65a576a6bbe06322cc84eb9b0","date":1412077943,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SparseFixedBitSet#SparseFixedBitSet(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Create a {@link SparseFixedBitSet} that can contain bits between\n   *  <code>0</code> included and <code>length</code> excluded. */\n  public SparseFixedBitSet(int length) {\n    if (length < 1) {\n      throw new IllegalArgumentException(\"length needs to be >= 1\");\n    }\n    this.length = length;\n    final int blockCount = blockCount(length);\n    indices = new long[blockCount];\n    bits = new long[blockCount][];\n    ramBytesUsed = BASE_RAM_BYTES_USED\n        + RamUsageEstimator.shallowSizeOf(indices)\n        + RamUsageEstimator.shallowSizeOf(bits);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5132ed7492455ab92d26486037983253997f6c65"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SparseFixedBitSet#SparseFixedBitSet(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Create a {@link SparseFixedBitSet} that can contain bits between\n   *  <code>0</code> included and <code>length</code> excluded. */\n  public SparseFixedBitSet(int length) {\n    if (length < 1) {\n      throw new IllegalArgumentException(\"length needs to be >= 1\");\n    }\n    this.length = length;\n    final int blockCount = blockCount(length);\n    indices = new long[blockCount];\n    bits = new long[blockCount][];\n    ramBytesUsed = BASE_RAM_BYTES_USED\n        + RamUsageEstimator.shallowSizeOf(indices)\n        + RamUsageEstimator.shallowSizeOf(bits);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5132ed7492455ab92d26486037983253997f6c65","date":1413792495,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SparseFixedBitSet#SparseFixedBitSet(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/SparseFixedBitSet#SparseFixedBitSet(int).mjava","sourceNew":"  /** Create a {@link SparseFixedBitSet} that can contain bits between\n   *  <code>0</code> included and <code>length</code> excluded. */\n  public SparseFixedBitSet(int length) {\n    if (length < 1) {\n      throw new IllegalArgumentException(\"length needs to be >= 1\");\n    }\n    this.length = length;\n    final int blockCount = blockCount(length);\n    blocks = new Block[blockCount];\n    ramBytesUsed = BASE_RAM_BYTES_USED\n        + RamUsageEstimator.shallowSizeOf(blocks);\n  }\n\n","sourceOld":"  /** Create a {@link SparseFixedBitSet} that can contain bits between\n   *  <code>0</code> included and <code>length</code> excluded. */\n  public SparseFixedBitSet(int length) {\n    if (length < 1) {\n      throw new IllegalArgumentException(\"length needs to be >= 1\");\n    }\n    this.length = length;\n    final int blockCount = blockCount(length);\n    indices = new long[blockCount];\n    bits = new long[blockCount][];\n    ramBytesUsed = BASE_RAM_BYTES_USED\n        + RamUsageEstimator.shallowSizeOf(indices)\n        + RamUsageEstimator.shallowSizeOf(bits);\n  }\n\n","bugFix":["59ce67ef5584d0d65a576a6bbe06322cc84eb9b0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b97a073eaa927466c93dba638b34d56f1beef80a","date":1413793531,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/SparseFixedBitSet#SparseFixedBitSet(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/SparseFixedBitSet#SparseFixedBitSet(int).mjava","sourceNew":"  /** Create a {@link SparseFixedBitSet} that can contain bits between\n   *  <code>0</code> included and <code>length</code> excluded. */\n  public SparseFixedBitSet(int length) {\n    if (length < 1) {\n      throw new IllegalArgumentException(\"length needs to be >= 1\");\n    }\n    this.length = length;\n    final int blockCount = blockCount(length);\n    indices = new long[blockCount];\n    bits = new long[blockCount][];\n    ramBytesUsed = BASE_RAM_BYTES_USED\n        + RamUsageEstimator.shallowSizeOf(indices)\n        + RamUsageEstimator.shallowSizeOf(bits);\n  }\n\n","sourceOld":"  /** Create a {@link SparseFixedBitSet} that can contain bits between\n   *  <code>0</code> included and <code>length</code> excluded. */\n  public SparseFixedBitSet(int length) {\n    if (length < 1) {\n      throw new IllegalArgumentException(\"length needs to be >= 1\");\n    }\n    this.length = length;\n    final int blockCount = blockCount(length);\n    blocks = new Block[blockCount];\n    ramBytesUsed = BASE_RAM_BYTES_USED\n        + RamUsageEstimator.shallowSizeOf(blocks);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5132ed7492455ab92d26486037983253997f6c65":["59ce67ef5584d0d65a576a6bbe06322cc84eb9b0"],"b97a073eaa927466c93dba638b34d56f1beef80a":["5132ed7492455ab92d26486037983253997f6c65"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","59ce67ef5584d0d65a576a6bbe06322cc84eb9b0"],"59ce67ef5584d0d65a576a6bbe06322cc84eb9b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b97a073eaa927466c93dba638b34d56f1beef80a"]},"commit2Childs":{"5132ed7492455ab92d26486037983253997f6c65":["b97a073eaa927466c93dba638b34d56f1beef80a"],"b97a073eaa927466c93dba638b34d56f1beef80a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d9a47902d6207303f5ed3e7aaca62ca33433af66","59ce67ef5584d0d65a576a6bbe06322cc84eb9b0"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"59ce67ef5584d0d65a576a6bbe06322cc84eb9b0":["5132ed7492455ab92d26486037983253997f6c65","d9a47902d6207303f5ed3e7aaca62ca33433af66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}