{"path":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#assertInputsEquals(String,Directory,HdfsDirectory).mjava","commits":[{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#assertInputsEquals(String,Directory,HdfsDirectory).mjava","pathOld":"/dev/null","sourceNew":"  private void assertInputsEquals(String name, Directory fsDir, HdfsDirectory hdfs) throws IOException {\n    int reads = random.nextInt(MAX_NUMBER_OF_READS);\n    IndexInput fsInput = fsDir.openInput(name,new IOContext());\n    IndexInput hdfsInput = hdfs.openInput(name,new IOContext());\n    assertEquals(fsInput.length(), hdfsInput.length());\n    int fileLength = (int) fsInput.length();\n    for (int i = 0; i < reads; i++) {\n      int nextInt = Math.min(MAX_BUFFER_SIZE - MIN_BUFFER_SIZE,fileLength);\n      byte[] fsBuf = new byte[random.nextInt(nextInt > 0 ? nextInt : 1) + MIN_BUFFER_SIZE];\n      byte[] hdfsBuf = new byte[fsBuf.length];\n      int offset = random.nextInt(fsBuf.length);\n      \n      nextInt = fsBuf.length - offset;\n      int length = random.nextInt(nextInt > 0 ? nextInt : 1);\n      nextInt = fileLength - length;\n      int pos = random.nextInt(nextInt > 0 ? nextInt : 1);\n      fsInput.seek(pos);\n      fsInput.readBytes(fsBuf, offset, length);\n      hdfsInput.seek(pos);\n      hdfsInput.readBytes(hdfsBuf, offset, length);\n      for (int f = offset; f < length; f++) {\n        if (fsBuf[f] != hdfsBuf[f]) {\n          fail();\n        }\n      }\n    }\n    fsInput.close();\n    hdfsInput.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/store/hdfs/HdfsDirectoryTest#assertInputsEquals(String,Directory,HdfsDirectory).mjava","pathOld":"/dev/null","sourceNew":"  private void assertInputsEquals(String name, Directory fsDir, HdfsDirectory hdfs) throws IOException {\n    int reads = random.nextInt(MAX_NUMBER_OF_READS);\n    IndexInput fsInput = fsDir.openInput(name,new IOContext());\n    IndexInput hdfsInput = hdfs.openInput(name,new IOContext());\n    assertEquals(fsInput.length(), hdfsInput.length());\n    int fileLength = (int) fsInput.length();\n    for (int i = 0; i < reads; i++) {\n      int nextInt = Math.min(MAX_BUFFER_SIZE - MIN_BUFFER_SIZE,fileLength);\n      byte[] fsBuf = new byte[random.nextInt(nextInt > 0 ? nextInt : 1) + MIN_BUFFER_SIZE];\n      byte[] hdfsBuf = new byte[fsBuf.length];\n      int offset = random.nextInt(fsBuf.length);\n      \n      nextInt = fsBuf.length - offset;\n      int length = random.nextInt(nextInt > 0 ? nextInt : 1);\n      nextInt = fileLength - length;\n      int pos = random.nextInt(nextInt > 0 ? nextInt : 1);\n      fsInput.seek(pos);\n      fsInput.readBytes(fsBuf, offset, length);\n      hdfsInput.seek(pos);\n      hdfsInput.readBytes(hdfsBuf, offset, length);\n      for (int f = offset; f < length; f++) {\n        if (fsBuf[f] != hdfsBuf[f]) {\n          fail();\n        }\n      }\n    }\n    fsInput.close();\n    hdfsInput.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["849494cf2f3a96af5c8c84995108ddd8456fcd04"]},"commit2Childs":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["849494cf2f3a96af5c8c84995108ddd8456fcd04","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}