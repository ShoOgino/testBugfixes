{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonFactoryCase5().mjava","commits":[{"id":"bd7a250b817d38fdb6f0411589342b46d249c5cf","date":1465297838,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonFactoryCase5().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPolygonFactoryCase5() {\n    /*\n   [junit4]   1> points=[[lat=0.0425265613312593, lon=0.0([X=1.0002076326868337, Y=0.0, Z=0.042561051669501374])], \n    [lat=0.8894380320379947, lon=-2.8993466885897496([X=-0.6109015457368775, Y=-0.1509528453728308, Z=0.7760109675775679])], \n    [lat=-0.8298163536994994, lon=-0.1462586594666574([X=0.6673285226073522, Y=-0.09830454048435874, Z=-0.7372817203741138])], \n    [lat=0.0, lon=-1.7156310907312492E-12([X=1.0011188539924791, Y=-1.7175506314267352E-12, Z=0.0])], \n    [lat=-0.7766317703682181, lon=3.141592653589793([X=-0.7128972529667801, Y=8.730473389667082E-17, Z=-0.7005064828988063])]]\n\n   {[GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n   [[lat=0.0425265613312593, lon=0.0([X=1.0002076326868337, Y=0.0, Z=0.042561051669501374])], \n   [lat=0.8894380320379947, lon=-2.8993466885897496([X=-0.6109015457368775, Y=-0.1509528453728308, Z=0.7760109675775679])], \n   [lat=-0.8298163536994994, lon=-0.1462586594666574([X=0.6673285226073522, Y=-0.09830454048435874, Z=-0.7372817203741138])], \n   [lat=0.0, lon=-1.7156310907312492E-12([X=1.0011188539924791, Y=-1.7175506314267352E-12, Z=0.0])]], internalEdges={3}}, \n   GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n   [[lat=0.0425265613312593, lon=0.0([X=1.0002076326868337, Y=0.0, Z=0.042561051669501374])], \n   [lat=0.0, lon=-1.7156310907312492E-12([X=1.0011188539924791, Y=-1.7175506314267352E-12, Z=0.0])], \n   [lat=-0.7766317703682181, lon=3.141592653589793([X=-0.7128972529667801, Y=8.730473389667082E-17, Z=-0.7005064828988063])]], internalEdges={0}}]}\n    */\n    final GeoPoint p1 = new GeoPoint(PlanetModel.WGS84, 0.0425265613312593, 0.0);\n    final GeoPoint p2 = new GeoPoint(PlanetModel.WGS84, 0.8894380320379947, -2.8993466885897496);\n    final GeoPoint p3 = new GeoPoint(PlanetModel.WGS84, -0.8298163536994994, -0.1462586594666574);\n    final GeoPoint p4 = new GeoPoint(PlanetModel.WGS84, 0.0, -1.7156310907312492E-12);\n    final GeoPoint p5 = new GeoPoint(PlanetModel.WGS84, -0.7766317703682181, 3.141592653589793);\n\n    final List<GeoPoint> polyList = new ArrayList<>();\n    polyList.add(p1);\n    polyList.add(p2);\n    polyList.add(p3);\n    polyList.add(p4);\n    polyList.add(p5);\n    \n    GeoPolygon p = GeoPolygonFactory.makeGeoPolygon(PlanetModel.WGS84, polyList);\n    System.out.println(\"p = \"+p);\n\n    XYZBounds bounds = new XYZBounds();\n    p.getBounds(bounds);\n    XYZSolid solid = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds.getMinimumX(), bounds.getMaximumX(),\n      bounds.getMinimumY(), bounds.getMaximumY(),\n      bounds.getMinimumZ(), bounds.getMaximumZ());\n\n    //final List<GeoPoint> p1List = new ArrayList<>();\n    //p1List.add(p1);\n    //p1List.add(p2);\n    //p1List.add(p3);\n    //p1List.add(p4);\n    //final BitSet p1Internal = new BitSet();\n    //final GeoConvexPolygon poly1 = new GeoConvexPolygon(PlanetModel.WGS84, p1List, p1Internal, false);\n    \n    /*\n    final List<GeoPoint> p2List = new ArrayList<>();\n    p2List.add(p1);\n    p2List.add(p4);\n    p2List.add(p5);\n    final BitSet p2Internal = new BitSet();\n    final GeoConvexPolygon poly2 = new GeoConvexPolygon(PlanetModel.WGS84, p2List, p2Internal, false);\n    */\n    \n    //XYZBounds bounds1 = new XYZBounds();\n    //poly1.getBounds(bounds1);\n    //XYZSolid solid1 = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds1.getMinimumX(), bounds1.getMaximumX(),\n    //  bounds1.getMinimumY(), bounds1.getMaximumY(),\n    //  bounds1.getMinimumZ(), bounds1.getMaximumZ());\n    \n    /*\n    XYZBounds bounds2 = new XYZBounds();\n    poly2.getBounds(bounds2);\n    XYZSolid solid2 = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds2.getMinimumX(), bounds2.getMaximumX(),\n      bounds2.getMinimumY(), bounds2.getMaximumY(),\n      bounds2.getMinimumZ(), bounds2.getMaximumZ());\n    */\n    \n    final GeoPoint point = new GeoPoint(PlanetModel.WGS84, -0.41518838180529244, 3.141592653589793);\n    final GeoPoint encodedPoint = new GeoPoint(-0.9155623168963972, 2.3309121299774915E-10, -0.40359240449795253);\n    System.out.println(\"point = \"+point);\n    System.out.println(\"encodedPoint = \"+encodedPoint);\n    \n    assertTrue(p.isWithin(point));\n    assertTrue(solid.isWithin(point));\n    \n    //System.out.println(\"bounds1 = \"+bounds1);\n    //System.out.println(\"bounds2 = \"+bounds2);\n    //assertTrue(poly1.isWithin(point));\n    //assertTrue(poly2.isWithin(point));\n    //assertTrue(solid2.isWithin(point));\n    \n    //assertTrue(poly2.isWithin(encodedPoint));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["54e10c9f59e9af43a3d623fc58c2d3790f0f5cfb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54e10c9f59e9af43a3d623fc58c2d3790f0f5cfb","date":1471692938,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonFactoryCase5().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonFactoryCase5().mjava","sourceNew":"  @Test\n  public void testPolygonFactoryCase5() {\n    /*\n   [junit4]   1> points=[[lat=0.0425265613312593, lon=0.0([X=1.0002076326868337, Y=0.0, Z=0.042561051669501374])], \n    [lat=0.8894380320379947, lon=-2.8993466885897496([X=-0.6109015457368775, Y=-0.1509528453728308, Z=0.7760109675775679])], \n    [lat=-0.8298163536994994, lon=-0.1462586594666574([X=0.6673285226073522, Y=-0.09830454048435874, Z=-0.7372817203741138])], \n    [lat=0.0, lon=-1.7156310907312492E-12([X=1.0011188539924791, Y=-1.7175506314267352E-12, Z=0.0])], \n    [lat=-0.7766317703682181, lon=3.141592653589793([X=-0.7128972529667801, Y=8.730473389667082E-17, Z=-0.7005064828988063])]]\n\n   {[GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n   [[lat=0.0425265613312593, lon=0.0([X=1.0002076326868337, Y=0.0, Z=0.042561051669501374])], \n   [lat=0.8894380320379947, lon=-2.8993466885897496([X=-0.6109015457368775, Y=-0.1509528453728308, Z=0.7760109675775679])], \n   [lat=-0.8298163536994994, lon=-0.1462586594666574([X=0.6673285226073522, Y=-0.09830454048435874, Z=-0.7372817203741138])], \n   [lat=0.0, lon=-1.7156310907312492E-12([X=1.0011188539924791, Y=-1.7175506314267352E-12, Z=0.0])]], internalEdges={3}}, \n   GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n   [[lat=0.0425265613312593, lon=0.0([X=1.0002076326868337, Y=0.0, Z=0.042561051669501374])], \n   [lat=0.0, lon=-1.7156310907312492E-12([X=1.0011188539924791, Y=-1.7175506314267352E-12, Z=0.0])], \n   [lat=-0.7766317703682181, lon=3.141592653589793([X=-0.7128972529667801, Y=8.730473389667082E-17, Z=-0.7005064828988063])]], internalEdges={0}}]}\n    */\n    final GeoPoint p1 = new GeoPoint(PlanetModel.WGS84, 0.0425265613312593, 0.0);\n    final GeoPoint p2 = new GeoPoint(PlanetModel.WGS84, 0.8894380320379947, -2.8993466885897496);\n    final GeoPoint p3 = new GeoPoint(PlanetModel.WGS84, -0.8298163536994994, -0.1462586594666574);\n    final GeoPoint p4 = new GeoPoint(PlanetModel.WGS84, 0.0, -1.7156310907312492E-12);\n    final GeoPoint p5 = new GeoPoint(PlanetModel.WGS84, -0.7766317703682181, 3.141592653589793);\n\n    final List<GeoPoint> polyList = new ArrayList<>();\n    polyList.add(p1);\n    polyList.add(p2);\n    polyList.add(p3);\n    polyList.add(p4);\n    polyList.add(p5);\n    \n    GeoPolygon p = GeoPolygonFactory.makeGeoPolygon(PlanetModel.WGS84, polyList);\n    //System.out.println(\"p = \"+p);\n\n    XYZBounds bounds = new XYZBounds();\n    p.getBounds(bounds);\n    XYZSolid solid = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds.getMinimumX(), bounds.getMaximumX(),\n      bounds.getMinimumY(), bounds.getMaximumY(),\n      bounds.getMinimumZ(), bounds.getMaximumZ());\n\n    //final List<GeoPoint> p1List = new ArrayList<>();\n    //p1List.add(p1);\n    //p1List.add(p2);\n    //p1List.add(p3);\n    //p1List.add(p4);\n    //final BitSet p1Internal = new BitSet();\n    //final GeoConvexPolygon poly1 = new GeoConvexPolygon(PlanetModel.WGS84, p1List, p1Internal, false);\n    \n    /*\n    final List<GeoPoint> p2List = new ArrayList<>();\n    p2List.add(p1);\n    p2List.add(p4);\n    p2List.add(p5);\n    final BitSet p2Internal = new BitSet();\n    final GeoConvexPolygon poly2 = new GeoConvexPolygon(PlanetModel.WGS84, p2List, p2Internal, false);\n    */\n    \n    //XYZBounds bounds1 = new XYZBounds();\n    //poly1.getBounds(bounds1);\n    //XYZSolid solid1 = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds1.getMinimumX(), bounds1.getMaximumX(),\n    //  bounds1.getMinimumY(), bounds1.getMaximumY(),\n    //  bounds1.getMinimumZ(), bounds1.getMaximumZ());\n    \n    /*\n    XYZBounds bounds2 = new XYZBounds();\n    poly2.getBounds(bounds2);\n    XYZSolid solid2 = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds2.getMinimumX(), bounds2.getMaximumX(),\n      bounds2.getMinimumY(), bounds2.getMaximumY(),\n      bounds2.getMinimumZ(), bounds2.getMaximumZ());\n    */\n    \n    final GeoPoint point = new GeoPoint(PlanetModel.WGS84, -0.41518838180529244, 3.141592653589793);\n    final GeoPoint encodedPoint = new GeoPoint(-0.9155623168963972, 2.3309121299774915E-10, -0.40359240449795253);\n    //System.out.println(\"point = \"+point);\n    //System.out.println(\"encodedPoint = \"+encodedPoint);\n    \n    assertTrue(p.isWithin(point));\n    assertTrue(solid.isWithin(point));\n    \n    //System.out.println(\"bounds1 = \"+bounds1);\n    //System.out.println(\"bounds2 = \"+bounds2);\n    //assertTrue(poly1.isWithin(point));\n    //assertTrue(poly2.isWithin(point));\n    //assertTrue(solid2.isWithin(point));\n    \n    //assertTrue(poly2.isWithin(encodedPoint));\n  }\n\n","sourceOld":"  @Test\n  public void testPolygonFactoryCase5() {\n    /*\n   [junit4]   1> points=[[lat=0.0425265613312593, lon=0.0([X=1.0002076326868337, Y=0.0, Z=0.042561051669501374])], \n    [lat=0.8894380320379947, lon=-2.8993466885897496([X=-0.6109015457368775, Y=-0.1509528453728308, Z=0.7760109675775679])], \n    [lat=-0.8298163536994994, lon=-0.1462586594666574([X=0.6673285226073522, Y=-0.09830454048435874, Z=-0.7372817203741138])], \n    [lat=0.0, lon=-1.7156310907312492E-12([X=1.0011188539924791, Y=-1.7175506314267352E-12, Z=0.0])], \n    [lat=-0.7766317703682181, lon=3.141592653589793([X=-0.7128972529667801, Y=8.730473389667082E-17, Z=-0.7005064828988063])]]\n\n   {[GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n   [[lat=0.0425265613312593, lon=0.0([X=1.0002076326868337, Y=0.0, Z=0.042561051669501374])], \n   [lat=0.8894380320379947, lon=-2.8993466885897496([X=-0.6109015457368775, Y=-0.1509528453728308, Z=0.7760109675775679])], \n   [lat=-0.8298163536994994, lon=-0.1462586594666574([X=0.6673285226073522, Y=-0.09830454048435874, Z=-0.7372817203741138])], \n   [lat=0.0, lon=-1.7156310907312492E-12([X=1.0011188539924791, Y=-1.7175506314267352E-12, Z=0.0])]], internalEdges={3}}, \n   GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n   [[lat=0.0425265613312593, lon=0.0([X=1.0002076326868337, Y=0.0, Z=0.042561051669501374])], \n   [lat=0.0, lon=-1.7156310907312492E-12([X=1.0011188539924791, Y=-1.7175506314267352E-12, Z=0.0])], \n   [lat=-0.7766317703682181, lon=3.141592653589793([X=-0.7128972529667801, Y=8.730473389667082E-17, Z=-0.7005064828988063])]], internalEdges={0}}]}\n    */\n    final GeoPoint p1 = new GeoPoint(PlanetModel.WGS84, 0.0425265613312593, 0.0);\n    final GeoPoint p2 = new GeoPoint(PlanetModel.WGS84, 0.8894380320379947, -2.8993466885897496);\n    final GeoPoint p3 = new GeoPoint(PlanetModel.WGS84, -0.8298163536994994, -0.1462586594666574);\n    final GeoPoint p4 = new GeoPoint(PlanetModel.WGS84, 0.0, -1.7156310907312492E-12);\n    final GeoPoint p5 = new GeoPoint(PlanetModel.WGS84, -0.7766317703682181, 3.141592653589793);\n\n    final List<GeoPoint> polyList = new ArrayList<>();\n    polyList.add(p1);\n    polyList.add(p2);\n    polyList.add(p3);\n    polyList.add(p4);\n    polyList.add(p5);\n    \n    GeoPolygon p = GeoPolygonFactory.makeGeoPolygon(PlanetModel.WGS84, polyList);\n    System.out.println(\"p = \"+p);\n\n    XYZBounds bounds = new XYZBounds();\n    p.getBounds(bounds);\n    XYZSolid solid = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds.getMinimumX(), bounds.getMaximumX(),\n      bounds.getMinimumY(), bounds.getMaximumY(),\n      bounds.getMinimumZ(), bounds.getMaximumZ());\n\n    //final List<GeoPoint> p1List = new ArrayList<>();\n    //p1List.add(p1);\n    //p1List.add(p2);\n    //p1List.add(p3);\n    //p1List.add(p4);\n    //final BitSet p1Internal = new BitSet();\n    //final GeoConvexPolygon poly1 = new GeoConvexPolygon(PlanetModel.WGS84, p1List, p1Internal, false);\n    \n    /*\n    final List<GeoPoint> p2List = new ArrayList<>();\n    p2List.add(p1);\n    p2List.add(p4);\n    p2List.add(p5);\n    final BitSet p2Internal = new BitSet();\n    final GeoConvexPolygon poly2 = new GeoConvexPolygon(PlanetModel.WGS84, p2List, p2Internal, false);\n    */\n    \n    //XYZBounds bounds1 = new XYZBounds();\n    //poly1.getBounds(bounds1);\n    //XYZSolid solid1 = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds1.getMinimumX(), bounds1.getMaximumX(),\n    //  bounds1.getMinimumY(), bounds1.getMaximumY(),\n    //  bounds1.getMinimumZ(), bounds1.getMaximumZ());\n    \n    /*\n    XYZBounds bounds2 = new XYZBounds();\n    poly2.getBounds(bounds2);\n    XYZSolid solid2 = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds2.getMinimumX(), bounds2.getMaximumX(),\n      bounds2.getMinimumY(), bounds2.getMaximumY(),\n      bounds2.getMinimumZ(), bounds2.getMaximumZ());\n    */\n    \n    final GeoPoint point = new GeoPoint(PlanetModel.WGS84, -0.41518838180529244, 3.141592653589793);\n    final GeoPoint encodedPoint = new GeoPoint(-0.9155623168963972, 2.3309121299774915E-10, -0.40359240449795253);\n    System.out.println(\"point = \"+point);\n    System.out.println(\"encodedPoint = \"+encodedPoint);\n    \n    assertTrue(p.isWithin(point));\n    assertTrue(solid.isWithin(point));\n    \n    //System.out.println(\"bounds1 = \"+bounds1);\n    //System.out.println(\"bounds2 = \"+bounds2);\n    //assertTrue(poly1.isWithin(point));\n    //assertTrue(poly2.isWithin(point));\n    //assertTrue(solid2.isWithin(point));\n    \n    //assertTrue(poly2.isWithin(encodedPoint));\n  }\n\n","bugFix":["bd7a250b817d38fdb6f0411589342b46d249c5cf"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonFactoryCase5().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPolygonFactoryCase5() {\n    /*\n   [junit4]   1> points=[[lat=0.0425265613312593, lon=0.0([X=1.0002076326868337, Y=0.0, Z=0.042561051669501374])], \n    [lat=0.8894380320379947, lon=-2.8993466885897496([X=-0.6109015457368775, Y=-0.1509528453728308, Z=0.7760109675775679])], \n    [lat=-0.8298163536994994, lon=-0.1462586594666574([X=0.6673285226073522, Y=-0.09830454048435874, Z=-0.7372817203741138])], \n    [lat=0.0, lon=-1.7156310907312492E-12([X=1.0011188539924791, Y=-1.7175506314267352E-12, Z=0.0])], \n    [lat=-0.7766317703682181, lon=3.141592653589793([X=-0.7128972529667801, Y=8.730473389667082E-17, Z=-0.7005064828988063])]]\n\n   {[GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n   [[lat=0.0425265613312593, lon=0.0([X=1.0002076326868337, Y=0.0, Z=0.042561051669501374])], \n   [lat=0.8894380320379947, lon=-2.8993466885897496([X=-0.6109015457368775, Y=-0.1509528453728308, Z=0.7760109675775679])], \n   [lat=-0.8298163536994994, lon=-0.1462586594666574([X=0.6673285226073522, Y=-0.09830454048435874, Z=-0.7372817203741138])], \n   [lat=0.0, lon=-1.7156310907312492E-12([X=1.0011188539924791, Y=-1.7175506314267352E-12, Z=0.0])]], internalEdges={3}}, \n   GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n   [[lat=0.0425265613312593, lon=0.0([X=1.0002076326868337, Y=0.0, Z=0.042561051669501374])], \n   [lat=0.0, lon=-1.7156310907312492E-12([X=1.0011188539924791, Y=-1.7175506314267352E-12, Z=0.0])], \n   [lat=-0.7766317703682181, lon=3.141592653589793([X=-0.7128972529667801, Y=8.730473389667082E-17, Z=-0.7005064828988063])]], internalEdges={0}}]}\n    */\n    final GeoPoint p1 = new GeoPoint(PlanetModel.WGS84, 0.0425265613312593, 0.0);\n    final GeoPoint p2 = new GeoPoint(PlanetModel.WGS84, 0.8894380320379947, -2.8993466885897496);\n    final GeoPoint p3 = new GeoPoint(PlanetModel.WGS84, -0.8298163536994994, -0.1462586594666574);\n    final GeoPoint p4 = new GeoPoint(PlanetModel.WGS84, 0.0, -1.7156310907312492E-12);\n    final GeoPoint p5 = new GeoPoint(PlanetModel.WGS84, -0.7766317703682181, 3.141592653589793);\n\n    final List<GeoPoint> polyList = new ArrayList<>();\n    polyList.add(p1);\n    polyList.add(p2);\n    polyList.add(p3);\n    polyList.add(p4);\n    polyList.add(p5);\n    \n    GeoPolygon p = GeoPolygonFactory.makeGeoPolygon(PlanetModel.WGS84, polyList);\n    //System.out.println(\"p = \"+p);\n\n    XYZBounds bounds = new XYZBounds();\n    p.getBounds(bounds);\n    XYZSolid solid = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds.getMinimumX(), bounds.getMaximumX(),\n      bounds.getMinimumY(), bounds.getMaximumY(),\n      bounds.getMinimumZ(), bounds.getMaximumZ());\n\n    //final List<GeoPoint> p1List = new ArrayList<>();\n    //p1List.add(p1);\n    //p1List.add(p2);\n    //p1List.add(p3);\n    //p1List.add(p4);\n    //final BitSet p1Internal = new BitSet();\n    //final GeoConvexPolygon poly1 = new GeoConvexPolygon(PlanetModel.WGS84, p1List, p1Internal, false);\n    \n    /*\n    final List<GeoPoint> p2List = new ArrayList<>();\n    p2List.add(p1);\n    p2List.add(p4);\n    p2List.add(p5);\n    final BitSet p2Internal = new BitSet();\n    final GeoConvexPolygon poly2 = new GeoConvexPolygon(PlanetModel.WGS84, p2List, p2Internal, false);\n    */\n    \n    //XYZBounds bounds1 = new XYZBounds();\n    //poly1.getBounds(bounds1);\n    //XYZSolid solid1 = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds1.getMinimumX(), bounds1.getMaximumX(),\n    //  bounds1.getMinimumY(), bounds1.getMaximumY(),\n    //  bounds1.getMinimumZ(), bounds1.getMaximumZ());\n    \n    /*\n    XYZBounds bounds2 = new XYZBounds();\n    poly2.getBounds(bounds2);\n    XYZSolid solid2 = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds2.getMinimumX(), bounds2.getMaximumX(),\n      bounds2.getMinimumY(), bounds2.getMaximumY(),\n      bounds2.getMinimumZ(), bounds2.getMaximumZ());\n    */\n    \n    final GeoPoint point = new GeoPoint(PlanetModel.WGS84, -0.41518838180529244, 3.141592653589793);\n    final GeoPoint encodedPoint = new GeoPoint(-0.9155623168963972, 2.3309121299774915E-10, -0.40359240449795253);\n    //System.out.println(\"point = \"+point);\n    //System.out.println(\"encodedPoint = \"+encodedPoint);\n    \n    assertTrue(p.isWithin(point));\n    assertTrue(solid.isWithin(point));\n    \n    //System.out.println(\"bounds1 = \"+bounds1);\n    //System.out.println(\"bounds2 = \"+bounds2);\n    //assertTrue(poly1.isWithin(point));\n    //assertTrue(poly2.isWithin(point));\n    //assertTrue(solid2.isWithin(point));\n    \n    //assertTrue(poly2.isWithin(encodedPoint));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44c3a4ebfa1a780298de8b00afc0722c16233080","date":1522505029,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonFactoryCase5().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonFactoryCase5().mjava","sourceNew":"  @Test\n  public void testPolygonFactoryCase5() {\n    /*\n   [junit4]   1> points=[[lat=0.0425265613312593, lon=0.0([X=1.0002076326868337, Y=0.0, Z=0.042561051669501374])], \n    [lat=0.8894380320379947, lon=-2.8993466885897496([X=-0.6109015457368775, Y=-0.1509528453728308, Z=0.7760109675775679])], \n    [lat=-0.8298163536994994, lon=-0.1462586594666574([X=0.6673285226073522, Y=-0.09830454048435874, Z=-0.7372817203741138])], \n    [lat=0.0, lon=-1.7156310907312492E-12([X=1.0011188539924791, Y=-1.7175506314267352E-12, Z=0.0])], \n    [lat=-0.7766317703682181, lon=3.141592653589793([X=-0.7128972529667801, Y=8.730473389667082E-17, Z=-0.7005064828988063])]]\n\n   {[GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n   [[lat=0.0425265613312593, lon=0.0([X=1.0002076326868337, Y=0.0, Z=0.042561051669501374])], \n   [lat=0.8894380320379947, lon=-2.8993466885897496([X=-0.6109015457368775, Y=-0.1509528453728308, Z=0.7760109675775679])], \n   [lat=-0.8298163536994994, lon=-0.1462586594666574([X=0.6673285226073522, Y=-0.09830454048435874, Z=-0.7372817203741138])], \n   [lat=0.0, lon=-1.7156310907312492E-12([X=1.0011188539924791, Y=-1.7175506314267352E-12, Z=0.0])]], internalEdges={3}}, \n   GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n   [[lat=0.0425265613312593, lon=0.0([X=1.0002076326868337, Y=0.0, Z=0.042561051669501374])], \n   [lat=0.0, lon=-1.7156310907312492E-12([X=1.0011188539924791, Y=-1.7175506314267352E-12, Z=0.0])], \n   [lat=-0.7766317703682181, lon=3.141592653589793([X=-0.7128972529667801, Y=8.730473389667082E-17, Z=-0.7005064828988063])]], internalEdges={0}}]}\n    */\n    final GeoPoint p1 = new GeoPoint(PlanetModel.WGS84, 0.0425265613312593, 0.0);\n    final GeoPoint p2 = new GeoPoint(PlanetModel.WGS84, 0.8894380320379947, -2.8993466885897496);\n    final GeoPoint p3 = new GeoPoint(PlanetModel.WGS84, -0.8298163536994994, -0.1462586594666574);\n    final GeoPoint p4 = new GeoPoint(PlanetModel.WGS84, 0.0, -1.7156310907312492E-12);\n    final GeoPoint p5 = new GeoPoint(PlanetModel.WGS84, -0.7766317703682181, 3.141592653589793);\n\n    final List<GeoPoint> polyList = new ArrayList<>();\n    polyList.add(p1);\n    polyList.add(p2);\n    polyList.add(p3);\n    polyList.add(p4);\n    polyList.add(p5);\n    \n    GeoPolygon p = GeoPolygonFactory.makeGeoPolygon(PlanetModel.WGS84, polyList);\n    //System.out.println(\"p = \"+p);\n\n    XYZBounds bounds = new XYZBounds();\n    p.getBounds(bounds);\n    XYZSolid solid = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds.getMinimumX(), bounds.getMaximumX(),\n      bounds.getMinimumY(), bounds.getMaximumY(),\n      bounds.getMinimumZ(), bounds.getMaximumZ());\n\n    //final List<GeoPoint> p1List = new ArrayList<>();\n    //p1List.add(p1);\n    //p1List.add(p2);\n    //p1List.add(p3);\n    //p1List.add(p4);\n    //final BitSet p1Internal = new BitSet();\n    //final GeoConvexPolygon poly1 = new GeoConvexPolygon(PlanetModel.WGS84, p1List, p1Internal, false);\n    \n    /*\n    final List<GeoPoint> p2List = new ArrayList<>();\n    p2List.add(p1);\n    p2List.add(p4);\n    p2List.add(p5);\n    final BitSet p2Internal = new BitSet();\n    final GeoConvexPolygon poly2 = new GeoConvexPolygon(PlanetModel.WGS84, p2List, p2Internal, false);\n    */\n    \n    //XYZBounds bounds1 = new XYZBounds();\n    //poly1.getBounds(bounds1);\n    //XYZSolid solid1 = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds1.getMinimumX(), bounds1.getMaximumX(),\n    //  bounds1.getMinimumY(), bounds1.getMaximumY(),\n    //  bounds1.getMinimumZ(), bounds1.getMaximumZ());\n    \n    /*\n    XYZBounds bounds2 = new XYZBounds();\n    poly2.getBounds(bounds2);\n    XYZSolid solid2 = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds2.getMinimumX(), bounds2.getMaximumX(),\n      bounds2.getMinimumY(), bounds2.getMaximumY(),\n      bounds2.getMinimumZ(), bounds2.getMaximumZ());\n    */\n    \n    final GeoPoint point = new GeoPoint(PlanetModel.WGS84, -0.41518838180529244, 3.141592653589793);\n    final GeoPoint encodedPoint = new GeoPoint(-0.9155623168963972, 2.3309121299774915E-10, -0.40359240449795253);\n    \n    assertTrue(p.isWithin(point)?solid.isWithin(point):true);\n    \n  }\n\n","sourceOld":"  @Test\n  public void testPolygonFactoryCase5() {\n    /*\n   [junit4]   1> points=[[lat=0.0425265613312593, lon=0.0([X=1.0002076326868337, Y=0.0, Z=0.042561051669501374])], \n    [lat=0.8894380320379947, lon=-2.8993466885897496([X=-0.6109015457368775, Y=-0.1509528453728308, Z=0.7760109675775679])], \n    [lat=-0.8298163536994994, lon=-0.1462586594666574([X=0.6673285226073522, Y=-0.09830454048435874, Z=-0.7372817203741138])], \n    [lat=0.0, lon=-1.7156310907312492E-12([X=1.0011188539924791, Y=-1.7175506314267352E-12, Z=0.0])], \n    [lat=-0.7766317703682181, lon=3.141592653589793([X=-0.7128972529667801, Y=8.730473389667082E-17, Z=-0.7005064828988063])]]\n\n   {[GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n   [[lat=0.0425265613312593, lon=0.0([X=1.0002076326868337, Y=0.0, Z=0.042561051669501374])], \n   [lat=0.8894380320379947, lon=-2.8993466885897496([X=-0.6109015457368775, Y=-0.1509528453728308, Z=0.7760109675775679])], \n   [lat=-0.8298163536994994, lon=-0.1462586594666574([X=0.6673285226073522, Y=-0.09830454048435874, Z=-0.7372817203741138])], \n   [lat=0.0, lon=-1.7156310907312492E-12([X=1.0011188539924791, Y=-1.7175506314267352E-12, Z=0.0])]], internalEdges={3}}, \n   GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n   [[lat=0.0425265613312593, lon=0.0([X=1.0002076326868337, Y=0.0, Z=0.042561051669501374])], \n   [lat=0.0, lon=-1.7156310907312492E-12([X=1.0011188539924791, Y=-1.7175506314267352E-12, Z=0.0])], \n   [lat=-0.7766317703682181, lon=3.141592653589793([X=-0.7128972529667801, Y=8.730473389667082E-17, Z=-0.7005064828988063])]], internalEdges={0}}]}\n    */\n    final GeoPoint p1 = new GeoPoint(PlanetModel.WGS84, 0.0425265613312593, 0.0);\n    final GeoPoint p2 = new GeoPoint(PlanetModel.WGS84, 0.8894380320379947, -2.8993466885897496);\n    final GeoPoint p3 = new GeoPoint(PlanetModel.WGS84, -0.8298163536994994, -0.1462586594666574);\n    final GeoPoint p4 = new GeoPoint(PlanetModel.WGS84, 0.0, -1.7156310907312492E-12);\n    final GeoPoint p5 = new GeoPoint(PlanetModel.WGS84, -0.7766317703682181, 3.141592653589793);\n\n    final List<GeoPoint> polyList = new ArrayList<>();\n    polyList.add(p1);\n    polyList.add(p2);\n    polyList.add(p3);\n    polyList.add(p4);\n    polyList.add(p5);\n    \n    GeoPolygon p = GeoPolygonFactory.makeGeoPolygon(PlanetModel.WGS84, polyList);\n    //System.out.println(\"p = \"+p);\n\n    XYZBounds bounds = new XYZBounds();\n    p.getBounds(bounds);\n    XYZSolid solid = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds.getMinimumX(), bounds.getMaximumX(),\n      bounds.getMinimumY(), bounds.getMaximumY(),\n      bounds.getMinimumZ(), bounds.getMaximumZ());\n\n    //final List<GeoPoint> p1List = new ArrayList<>();\n    //p1List.add(p1);\n    //p1List.add(p2);\n    //p1List.add(p3);\n    //p1List.add(p4);\n    //final BitSet p1Internal = new BitSet();\n    //final GeoConvexPolygon poly1 = new GeoConvexPolygon(PlanetModel.WGS84, p1List, p1Internal, false);\n    \n    /*\n    final List<GeoPoint> p2List = new ArrayList<>();\n    p2List.add(p1);\n    p2List.add(p4);\n    p2List.add(p5);\n    final BitSet p2Internal = new BitSet();\n    final GeoConvexPolygon poly2 = new GeoConvexPolygon(PlanetModel.WGS84, p2List, p2Internal, false);\n    */\n    \n    //XYZBounds bounds1 = new XYZBounds();\n    //poly1.getBounds(bounds1);\n    //XYZSolid solid1 = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds1.getMinimumX(), bounds1.getMaximumX(),\n    //  bounds1.getMinimumY(), bounds1.getMaximumY(),\n    //  bounds1.getMinimumZ(), bounds1.getMaximumZ());\n    \n    /*\n    XYZBounds bounds2 = new XYZBounds();\n    poly2.getBounds(bounds2);\n    XYZSolid solid2 = XYZSolidFactory.makeXYZSolid(PlanetModel.WGS84, bounds2.getMinimumX(), bounds2.getMaximumX(),\n      bounds2.getMinimumY(), bounds2.getMaximumY(),\n      bounds2.getMinimumZ(), bounds2.getMaximumZ());\n    */\n    \n    final GeoPoint point = new GeoPoint(PlanetModel.WGS84, -0.41518838180529244, 3.141592653589793);\n    final GeoPoint encodedPoint = new GeoPoint(-0.9155623168963972, 2.3309121299774915E-10, -0.40359240449795253);\n    //System.out.println(\"point = \"+point);\n    //System.out.println(\"encodedPoint = \"+encodedPoint);\n    \n    assertTrue(p.isWithin(point));\n    assertTrue(solid.isWithin(point));\n    \n    //System.out.println(\"bounds1 = \"+bounds1);\n    //System.out.println(\"bounds2 = \"+bounds2);\n    //assertTrue(poly1.isWithin(point));\n    //assertTrue(poly2.isWithin(point));\n    //assertTrue(solid2.isWithin(point));\n    \n    //assertTrue(poly2.isWithin(encodedPoint));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54e10c9f59e9af43a3d623fc58c2d3790f0f5cfb":["bd7a250b817d38fdb6f0411589342b46d249c5cf"],"44c3a4ebfa1a780298de8b00afc0722c16233080":["54e10c9f59e9af43a3d623fc58c2d3790f0f5cfb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bd7a250b817d38fdb6f0411589342b46d249c5cf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","54e10c9f59e9af43a3d623fc58c2d3790f0f5cfb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["44c3a4ebfa1a780298de8b00afc0722c16233080"]},"commit2Childs":{"54e10c9f59e9af43a3d623fc58c2d3790f0f5cfb":["44c3a4ebfa1a780298de8b00afc0722c16233080","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"44c3a4ebfa1a780298de8b00afc0722c16233080":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bd7a250b817d38fdb6f0411589342b46d249c5cf","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"bd7a250b817d38fdb6f0411589342b46d249c5cf":["54e10c9f59e9af43a3d623fc58c2d3790f0f5cfb"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}