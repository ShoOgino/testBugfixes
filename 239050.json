{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetRequest#parseOneFacetReq(SolrQueryRequest,Map[String,Object]).mjava","commits":[{"id":"2ab027bdfe663227636ccbeda13ae82add302939","date":1529980633,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRequest#parseOneFacetReq(SolrQueryRequest,Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Factory method to parse out a rooted facet request tree that would normally go one level below a label.\n   * The params must contain a \"type\".\n   * This is intended to be useful externally, such as by {@link org.apache.solr.request.SimpleFacets}.\n   * @param req the overall request\n   * @param params a typed parameter structure (unlike SolrParams which are all string values).\n   */\n  public static FacetRequest parseOneFacetReq(SolrQueryRequest req, Map<String, Object> params) {\n    FacetParser parser = new FacetTopParser(req);\n    try {\n      return (FacetRequest) parser.parseFacetOrStat(\"\", params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRequest#parseOneFacetReq(SolrQueryRequest,Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Factory method to parse out a rooted facet request tree that would normally go one level below a label.\n   * The params must contain a \"type\".\n   * This is intended to be useful externally, such as by {@link org.apache.solr.request.SimpleFacets}.\n   * @param req the overall request\n   * @param params a typed parameter structure (unlike SolrParams which are all string values).\n   */\n  public static FacetRequest parseOneFacetReq(SolrQueryRequest req, Map<String, Object> params) {\n    FacetParser parser = new FacetTopParser(req);\n    try {\n      return (FacetRequest) parser.parseFacetOrStat(\"\", params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRequest#parseOneFacetReq(SolrQueryRequest,Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Factory method to parse out a rooted facet request tree that would normally go one level below a label.\n   * The params must contain a \"type\".\n   * This is intended to be useful externally, such as by {@link org.apache.solr.request.SimpleFacets}.\n   * @param req the overall request\n   * @param params a typed parameter structure (unlike SolrParams which are all string values).\n   */\n  public static FacetRequest parseOneFacetReq(SolrQueryRequest req, Map<String, Object> params) {\n    FacetParser parser = new FacetTopParser(req);\n    try {\n      return (FacetRequest) parser.parseFacetOrStat(\"\", params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56a9893014b284af4d1af451e6c02e7ffdf5b6e","date":1590065972,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRequest#parseOneFacetReq(SolrQueryRequest,Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetRequest#parseOneFacetReq(SolrQueryRequest,Map[String,Object]).mjava","sourceNew":"  /**\n   * Factory method to parse out a rooted facet request tree that would normally go one level below a label.\n   * The params must contain a \"type\".\n   * This is intended to be useful externally, such as by {@link org.apache.solr.request.SimpleFacets}.\n   * @param req the overall request\n   * @param params a typed parameter structure (unlike SolrParams which are all string values).\n   */\n  public static FacetRequest parseOneFacetReq(SolrQueryRequest req, Map<String, Object> params) {\n    @SuppressWarnings(\"rawtypes\")\n    FacetParser parser = new FacetTopParser(req);\n    try {\n      return (FacetRequest) parser.parseFacetOrStat(\"\", params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n  }\n\n","sourceOld":"  /**\n   * Factory method to parse out a rooted facet request tree that would normally go one level below a label.\n   * The params must contain a \"type\".\n   * This is intended to be useful externally, such as by {@link org.apache.solr.request.SimpleFacets}.\n   * @param req the overall request\n   * @param params a typed parameter structure (unlike SolrParams which are all string values).\n   */\n  public static FacetRequest parseOneFacetReq(SolrQueryRequest req, Map<String, Object> params) {\n    FacetParser parser = new FacetTopParser(req);\n    try {\n      return (FacetRequest) parser.parseFacetOrStat(\"\", params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba33781da68babcaa5828121b443d3eb5c9d8480","date":1590595589,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRequest#parseOneFacetReq(SolrQueryRequest,Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetRequest#parseOneFacetReq(SolrQueryRequest,Map[String,Object]).mjava","sourceNew":"  /**\n   * Factory method to parse out a rooted facet request tree that would normally go one level below a label.\n   * The params must contain a \"type\".\n   * This is intended to be useful externally, such as by {@link org.apache.solr.request.SimpleFacets}.\n   * @param req the overall request\n   * @param params a typed parameter structure (unlike SolrParams which are all string values).\n   */\n  public static FacetRequest parseOneFacetReq(SolrQueryRequest req, Map<String, Object> params) {\n    @SuppressWarnings(\"rawtypes\")\n    FacetParser parser = new FacetParser.FacetTopParser(req);\n    try {\n      return (FacetRequest) parser.parseFacetOrStat(\"\", params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n  }\n\n","sourceOld":"  /**\n   * Factory method to parse out a rooted facet request tree that would normally go one level below a label.\n   * The params must contain a \"type\".\n   * This is intended to be useful externally, such as by {@link org.apache.solr.request.SimpleFacets}.\n   * @param req the overall request\n   * @param params a typed parameter structure (unlike SolrParams which are all string values).\n   */\n  public static FacetRequest parseOneFacetReq(SolrQueryRequest req, Map<String, Object> params) {\n    @SuppressWarnings(\"rawtypes\")\n    FacetParser parser = new FacetTopParser(req);\n    try {\n      return (FacetRequest) parser.parseFacetOrStat(\"\", params);\n    } catch (SyntaxError syntaxError) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2ab027bdfe663227636ccbeda13ae82add302939":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["2ab027bdfe663227636ccbeda13ae82add302939"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2ab027bdfe663227636ccbeda13ae82add302939"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ba33781da68babcaa5828121b443d3eb5c9d8480":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba33781da68babcaa5828121b443d3eb5c9d8480"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2ab027bdfe663227636ccbeda13ae82add302939"]},"commit2Childs":{"2ab027bdfe663227636ccbeda13ae82add302939":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["ba33781da68babcaa5828121b443d3eb5c9d8480"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2ab027bdfe663227636ccbeda13ae82add302939","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"ba33781da68babcaa5828121b443d3eb5c9d8480":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}