{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/PrimesEvaluator#doWork(Object...).mjava","commits":[{"id":"622570bec8d96987f78529ba2e6f12b331709d15","date":1505156419,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/PrimesEvaluator#doWork(Object...).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object doWork(Object... values) throws IOException {\n    if(2 != values.length){\n      throw new IOException(String.format(Locale.ROOT,\"%s(...) only works with 2 values but %d were provided\", constructingFactory.getFunctionName(getClass()), values.length));\n    }\n\n    int sizeNum = ((Number)values[0]).intValue();\n    int startNum = ((Number)values[1]).intValue();\n    List<Number> primes = new ArrayList();\n\n    for(int i=0; i< sizeNum; i++) {\n      int prime = Primes.nextPrime(startNum);\n      primes.add(prime);\n      startNum = prime;\n      ++startNum;\n    }\n\n    return primes;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ffb85feece8645a035c02443a625f5af15e1106b","date":1505219692,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/PrimesEvaluator#doWork(Object...).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object doWork(Object... values) throws IOException {\n    if(2 != values.length){\n      throw new IOException(String.format(Locale.ROOT,\"%s(...) only works with 2 values but %d were provided\", constructingFactory.getFunctionName(getClass()), values.length));\n    }\n\n    int sizeNum = ((Number)values[0]).intValue();\n    int startNum = ((Number)values[1]).intValue();\n    List<Number> primes = new ArrayList();\n\n    for(int i=0; i< sizeNum; i++) {\n      int prime = Primes.nextPrime(startNum);\n      primes.add(prime);\n      startNum = prime;\n      ++startNum;\n    }\n\n    return primes;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"685bd38810c206c93e9058f3c2cfa9827c086c27","date":1505751821,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/PrimesEvaluator#doWork(Object...).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Object doWork(Object... values) throws IOException {\n    if(2 != values.length){\n      throw new IOException(String.format(Locale.ROOT,\"%s(...) only works with 2 values but %d were provided\", constructingFactory.getFunctionName(getClass()), values.length));\n    }\n\n    int sizeNum = ((Number)values[0]).intValue();\n    int startNum = ((Number)values[1]).intValue();\n    List<Number> primes = new ArrayList();\n\n    for(int i=0; i< sizeNum; i++) {\n      int prime = Primes.nextPrime(startNum);\n      primes.add(prime);\n      startNum = prime;\n      ++startNum;\n    }\n\n    return primes;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885","date":1591579911,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/PrimesEvaluator#doWork(Object...).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/PrimesEvaluator#doWork(Object...).mjava","sourceNew":"  @Override\n  public Object doWork(Object... values) throws IOException {\n    if(2 != values.length){\n      throw new IOException(String.format(Locale.ROOT,\"%s(...) only works with 2 values but %d were provided\", constructingFactory.getFunctionName(getClass()), values.length));\n    }\n\n    int sizeNum = ((Number)values[0]).intValue();\n    int startNum = ((Number)values[1]).intValue();\n    List<Number> primes = new ArrayList<>();\n\n    for(int i=0; i< sizeNum; i++) {\n      int prime = Primes.nextPrime(startNum);\n      primes.add(prime);\n      startNum = prime;\n      ++startNum;\n    }\n\n    return primes;\n  }\n\n","sourceOld":"  @Override\n  public Object doWork(Object... values) throws IOException {\n    if(2 != values.length){\n      throw new IOException(String.format(Locale.ROOT,\"%s(...) only works with 2 values but %d were provided\", constructingFactory.getFunctionName(getClass()), values.length));\n    }\n\n    int sizeNum = ((Number)values[0]).intValue();\n    int startNum = ((Number)values[1]).intValue();\n    List<Number> primes = new ArrayList();\n\n    for(int i=0; i< sizeNum; i++) {\n      int prime = Primes.nextPrime(startNum);\n      primes.add(prime);\n      startNum = prime;\n      ++startNum;\n    }\n\n    return primes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"685bd38810c206c93e9058f3c2cfa9827c086c27":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ffb85feece8645a035c02443a625f5af15e1106b"],"df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885":["ffb85feece8645a035c02443a625f5af15e1106b"],"ffb85feece8645a035c02443a625f5af15e1106b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","622570bec8d96987f78529ba2e6f12b331709d15"],"622570bec8d96987f78529ba2e6f12b331709d15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885"]},"commit2Childs":{"685bd38810c206c93e9058f3c2cfa9827c086c27":[],"ffb85feece8645a035c02443a625f5af15e1106b":["685bd38810c206c93e9058f3c2cfa9827c086c27","df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885"],"df1b3ced2f2a6c2031f5a5b0cfff01f7ae017885":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"622570bec8d96987f78529ba2e6f12b331709d15":["ffb85feece8645a035c02443a625f5af15e1106b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["685bd38810c206c93e9058f3c2cfa9827c086c27","ffb85feece8645a035c02443a625f5af15e1106b","622570bec8d96987f78529ba2e6f12b331709d15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["685bd38810c206c93e9058f3c2cfa9827c086c27","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}