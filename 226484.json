{"path":"contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#findOneSegmentToExpunge(SegmentInfos,int).mjava","commits":[{"id":"e8c13adcc1a9fdfd6a4ac19cc83b46541d3d5584","date":1254399783,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#findOneSegmentToExpunge(SegmentInfos,int).mjava","pathOld":"/dev/null","sourceNew":"  private OneMerge findOneSegmentToExpunge(SegmentInfos infos, int maxNumSegments) throws IOException {\n    int expungeCandidate = -1;\n    int maxDelCount = 0;\n    \n    for(int i = maxNumSegments - 1; i >= 0; i--) {\n      SegmentInfo info = infos.info(i);\n      int delCount = info.getDelCount();\n      if (delCount > maxDelCount) {\n        expungeCandidate = i;\n        maxDelCount = delCount;\n      }\n    }\n    if (maxDelCount > 0) {\n      return new OneMerge(infos.range(expungeCandidate, expungeCandidate + 1), getUseCompoundFile());\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#findOneSegmentToExpunge(SegmentInfos,int).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/index/BalancedSegmentMergePolicy#findOneSegmentToExpunge(SegmentInfos,int).mjava","sourceNew":"  private OneMerge findOneSegmentToExpunge(SegmentInfos infos, int maxNumSegments) throws IOException {\n    int expungeCandidate = -1;\n    int maxDelCount = 0;\n    \n    for(int i = maxNumSegments - 1; i >= 0; i--) {\n      SegmentInfo info = infos.info(i);\n      int delCount = info.getDelCount();\n      if (delCount > maxDelCount) {\n        expungeCandidate = i;\n        maxDelCount = delCount;\n      }\n    }\n    if (maxDelCount > 0) {\n      return new OneMerge(infos.range(expungeCandidate, expungeCandidate + 1), getUseCompoundFile());\n    }\n    return null;\n  }\n\n","sourceOld":"  private OneMerge findOneSegmentToExpunge(SegmentInfos infos, int maxNumSegments) throws IOException {\n    int expungeCandidate = -1;\n    int maxDelCount = 0;\n    \n    for(int i = maxNumSegments - 1; i >= 0; i--) {\n      SegmentInfo info = infos.info(i);\n      int delCount = info.getDelCount();\n      if (delCount > maxDelCount) {\n        expungeCandidate = i;\n        maxDelCount = delCount;\n      }\n    }\n    if (maxDelCount > 0) {\n      return new OneMerge(infos.range(expungeCandidate, expungeCandidate + 1), getUseCompoundFile());\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e8c13adcc1a9fdfd6a4ac19cc83b46541d3d5584":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e8c13adcc1a9fdfd6a4ac19cc83b46541d3d5584"]},"commit2Childs":{"e8c13adcc1a9fdfd6a4ac19cc83b46541d3d5584":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e8c13adcc1a9fdfd6a4ac19cc83b46541d3d5584"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}