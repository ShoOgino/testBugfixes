{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testPrepareCommit().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testPrepareCommit().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterCommit#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    DirectoryReader reader = IndexReader.open(dir);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = DirectoryReader.openIfChanged(reader);\n    assertNotNull(reader3);\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    DirectoryReader reader = IndexReader.open(dir);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = DirectoryReader.openIfChanged(reader);\n    assertNotNull(reader3);\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testPrepareCommit().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    DirectoryReader reader = IndexReader.open(dir);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = DirectoryReader.openIfChanged(reader);\n    assertNotNull(reader3);\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    DirectoryReader reader = IndexReader.open(dir);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = DirectoryReader.openIfChanged(reader);\n    assertNotNull(reader3);\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testPrepareCommit().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    DirectoryReader reader = DirectoryReader.open(dir);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = DirectoryReader.open(dir);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = DirectoryReader.openIfChanged(reader);\n    assertNotNull(reader3);\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = DirectoryReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = DirectoryReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = DirectoryReader.open(dir);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    DirectoryReader reader = IndexReader.open(dir);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = IndexReader.open(dir);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = DirectoryReader.openIfChanged(reader);\n    assertNotNull(reader3);\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = IndexReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = IndexReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = IndexReader.open(dir);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testPrepareCommit().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    DirectoryReader reader = DirectoryReader.open(dir);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = DirectoryReader.open(dir);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = DirectoryReader.openIfChanged(reader);\n    assertNotNull(reader3);\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = DirectoryReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = DirectoryReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = DirectoryReader.open(dir);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    DirectoryReader reader = DirectoryReader.open(dir);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = DirectoryReader.open(dir);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = DirectoryReader.openIfChanged(reader);\n    assertNotNull(reader3);\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = DirectoryReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = DirectoryReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = DirectoryReader.open(dir);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testPrepareCommit().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random()))\n            .setMaxBufferedDocs(2)\n            .setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    DirectoryReader reader = DirectoryReader.open(dir);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = DirectoryReader.open(dir);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = DirectoryReader.openIfChanged(reader);\n    assertNotNull(reader3);\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = DirectoryReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = DirectoryReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = DirectoryReader.open(dir);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.shutdown();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).\n            setMaxBufferedDocs(2).\n            setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    DirectoryReader reader = DirectoryReader.open(dir);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = DirectoryReader.open(dir);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = DirectoryReader.openIfChanged(reader);\n    assertNotNull(reader3);\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = DirectoryReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = DirectoryReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = DirectoryReader.open(dir);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testPrepareCommit().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterCommit#testPrepareCommit().mjava","sourceNew":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random()))\n            .setMaxBufferedDocs(2)\n            .setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    DirectoryReader reader = DirectoryReader.open(dir);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = DirectoryReader.open(dir);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = DirectoryReader.openIfChanged(reader);\n    assertNotNull(reader3);\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = DirectoryReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = DirectoryReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = DirectoryReader.open(dir);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1274: test writer.prepareCommit()\n  public void testPrepareCommit() throws IOException {\n    Directory dir = newDirectory();\n\n    IndexWriter writer = new IndexWriter(\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random()))\n            .setMaxBufferedDocs(2)\n            .setMergePolicy(newLogMergePolicy(5))\n    );\n    writer.commit();\n\n    for (int i = 0; i < 23; i++)\n      TestIndexWriter.addDoc(writer);\n\n    DirectoryReader reader = DirectoryReader.open(dir);\n    assertEquals(0, reader.numDocs());\n\n    writer.prepareCommit();\n\n    IndexReader reader2 = DirectoryReader.open(dir);\n    assertEquals(0, reader2.numDocs());\n\n    writer.commit();\n\n    IndexReader reader3 = DirectoryReader.openIfChanged(reader);\n    assertNotNull(reader3);\n    assertEquals(0, reader.numDocs());\n    assertEquals(0, reader2.numDocs());\n    assertEquals(23, reader3.numDocs());\n    reader.close();\n    reader2.close();\n\n    for (int i = 0; i < 17; i++)\n      TestIndexWriter.addDoc(writer);\n\n    assertEquals(23, reader3.numDocs());\n    reader3.close();\n    reader = DirectoryReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.prepareCommit();\n\n    reader = DirectoryReader.open(dir);\n    assertEquals(23, reader.numDocs());\n    reader.close();\n\n    writer.commit();\n    reader = DirectoryReader.open(dir);\n    assertEquals(40, reader.numDocs());\n    reader.close();\n    writer.shutdown();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}