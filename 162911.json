{"path":"lucene/src/test/org/apache/lucene/util/TestOpenBitSet#testBitUtils().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/TestOpenBitSet#testBitUtils().mjava","pathOld":"src/test/org/apache/lucene/util/TestOpenBitSet#testBitUtils().mjava","sourceNew":"  public void testBitUtils()\n  {\n    rand = newRandom();\n    long num = 100000;\n    assertEquals( 5, BitUtil.ntz(num) );\n    assertEquals( 5, BitUtil.ntz2(num) );\n    assertEquals( 5, BitUtil.ntz3(num) );\n    \n    num = 10;\n    assertEquals( 1, BitUtil.ntz(num) );\n    assertEquals( 1, BitUtil.ntz2(num) );\n    assertEquals( 1, BitUtil.ntz3(num) );\n\n    for (int i=0; i<64; i++) {\n      num = 1L << i;\n      assertEquals( i, BitUtil.ntz(num) );\n      assertEquals( i, BitUtil.ntz2(num) );\n      assertEquals( i, BitUtil.ntz3(num) );\n    }\n  }\n\n","sourceOld":"  public void testBitUtils()\n  {\n    rand = newRandom();\n    long num = 100000;\n    assertEquals( 5, BitUtil.ntz(num) );\n    assertEquals( 5, BitUtil.ntz2(num) );\n    assertEquals( 5, BitUtil.ntz3(num) );\n    \n    num = 10;\n    assertEquals( 1, BitUtil.ntz(num) );\n    assertEquals( 1, BitUtil.ntz2(num) );\n    assertEquals( 1, BitUtil.ntz3(num) );\n\n    for (int i=0; i<64; i++) {\n      num = 1L << i;\n      assertEquals( i, BitUtil.ntz(num) );\n      assertEquals( i, BitUtil.ntz2(num) );\n      assertEquals( i, BitUtil.ntz3(num) );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/TestOpenBitSet#testBitUtils().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/TestOpenBitSet#testBitUtils().mjava","sourceNew":"  public void testBitUtils()\n  {\n    long num = 100000;\n    assertEquals( 5, BitUtil.ntz(num) );\n    assertEquals( 5, BitUtil.ntz2(num) );\n    assertEquals( 5, BitUtil.ntz3(num) );\n    \n    num = 10;\n    assertEquals( 1, BitUtil.ntz(num) );\n    assertEquals( 1, BitUtil.ntz2(num) );\n    assertEquals( 1, BitUtil.ntz3(num) );\n\n    for (int i=0; i<64; i++) {\n      num = 1L << i;\n      assertEquals( i, BitUtil.ntz(num) );\n      assertEquals( i, BitUtil.ntz2(num) );\n      assertEquals( i, BitUtil.ntz3(num) );\n    }\n  }\n\n","sourceOld":"  public void testBitUtils()\n  {\n    rand = newRandom();\n    long num = 100000;\n    assertEquals( 5, BitUtil.ntz(num) );\n    assertEquals( 5, BitUtil.ntz2(num) );\n    assertEquals( 5, BitUtil.ntz3(num) );\n    \n    num = 10;\n    assertEquals( 1, BitUtil.ntz(num) );\n    assertEquals( 1, BitUtil.ntz2(num) );\n    assertEquals( 1, BitUtil.ntz3(num) );\n\n    for (int i=0; i<64; i++) {\n      num = 1L << i;\n      assertEquals( i, BitUtil.ntz(num) );\n      assertEquals( i, BitUtil.ntz2(num) );\n      assertEquals( i, BitUtil.ntz3(num) );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/TestOpenBitSet#testBitUtils().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/TestOpenBitSet#testBitUtils().mjava","sourceNew":"  public void testBitUtils()\n  {\n    long num = 100000;\n    assertEquals( 5, BitUtil.ntz(num) );\n    assertEquals( 5, BitUtil.ntz2(num) );\n    assertEquals( 5, BitUtil.ntz3(num) );\n    \n    num = 10;\n    assertEquals( 1, BitUtil.ntz(num) );\n    assertEquals( 1, BitUtil.ntz2(num) );\n    assertEquals( 1, BitUtil.ntz3(num) );\n\n    for (int i=0; i<64; i++) {\n      num = 1L << i;\n      assertEquals( i, BitUtil.ntz(num) );\n      assertEquals( i, BitUtil.ntz2(num) );\n      assertEquals( i, BitUtil.ntz3(num) );\n    }\n  }\n\n","sourceOld":"  public void testBitUtils()\n  {\n    rand = newRandom();\n    long num = 100000;\n    assertEquals( 5, BitUtil.ntz(num) );\n    assertEquals( 5, BitUtil.ntz2(num) );\n    assertEquals( 5, BitUtil.ntz3(num) );\n    \n    num = 10;\n    assertEquals( 1, BitUtil.ntz(num) );\n    assertEquals( 1, BitUtil.ntz2(num) );\n    assertEquals( 1, BitUtil.ntz3(num) );\n\n    for (int i=0; i<64; i++) {\n      num = 1L << i;\n      assertEquals( i, BitUtil.ntz(num) );\n      assertEquals( i, BitUtil.ntz2(num) );\n      assertEquals( i, BitUtil.ntz3(num) );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"931aa2e14bf0bd782433b017ac4423637019725a","date":1308349478,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/TestBitUtil#testBitUtils().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/TestOpenBitSet#testBitUtils().mjava","sourceNew":"  public void testBitUtils() {\n    long num = 100000;\n    assertEquals( 5, BitUtil.ntz(num) );\n    assertEquals( 5, BitUtil.ntz2(num) );\n    assertEquals( 5, BitUtil.ntz3(num) );\n    \n    num = 10;\n    assertEquals( 1, BitUtil.ntz(num) );\n    assertEquals( 1, BitUtil.ntz2(num) );\n    assertEquals( 1, BitUtil.ntz3(num) );\n\n    for (int i=0; i<64; i++) {\n      num = 1L << i;\n      assertEquals( i, BitUtil.ntz(num) );\n      assertEquals( i, BitUtil.ntz2(num) );\n      assertEquals( i, BitUtil.ntz3(num) );\n    }\n  }\n\n","sourceOld":"  public void testBitUtils()\n  {\n    long num = 100000;\n    assertEquals( 5, BitUtil.ntz(num) );\n    assertEquals( 5, BitUtil.ntz2(num) );\n    assertEquals( 5, BitUtil.ntz3(num) );\n    \n    num = 10;\n    assertEquals( 1, BitUtil.ntz(num) );\n    assertEquals( 1, BitUtil.ntz2(num) );\n    assertEquals( 1, BitUtil.ntz3(num) );\n\n    for (int i=0; i<64; i++) {\n      num = 1L << i;\n      assertEquals( i, BitUtil.ntz(num) );\n      assertEquals( i, BitUtil.ntz2(num) );\n      assertEquals( i, BitUtil.ntz3(num) );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7edfc3f7caa7b49a18fe367692768b33b018e9db","date":1308374217,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/TestBitUtil#testBitUtils().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/TestOpenBitSet#testBitUtils().mjava","sourceNew":"  public void testBitUtils() {\n    long num = 100000;\n    assertEquals( 5, BitUtil.ntz(num) );\n    assertEquals( 5, BitUtil.ntz2(num) );\n    assertEquals( 5, BitUtil.ntz3(num) );\n    \n    num = 10;\n    assertEquals( 1, BitUtil.ntz(num) );\n    assertEquals( 1, BitUtil.ntz2(num) );\n    assertEquals( 1, BitUtil.ntz3(num) );\n\n    for (int i=0; i<64; i++) {\n      num = 1L << i;\n      assertEquals( i, BitUtil.ntz(num) );\n      assertEquals( i, BitUtil.ntz2(num) );\n      assertEquals( i, BitUtil.ntz3(num) );\n    }\n  }\n\n","sourceOld":"  public void testBitUtils()\n  {\n    long num = 100000;\n    assertEquals( 5, BitUtil.ntz(num) );\n    assertEquals( 5, BitUtil.ntz2(num) );\n    assertEquals( 5, BitUtil.ntz3(num) );\n    \n    num = 10;\n    assertEquals( 1, BitUtil.ntz(num) );\n    assertEquals( 1, BitUtil.ntz2(num) );\n    assertEquals( 1, BitUtil.ntz3(num) );\n\n    for (int i=0; i<64; i++) {\n      num = 1L << i;\n      assertEquals( i, BitUtil.ntz(num) );\n      assertEquals( i, BitUtil.ntz2(num) );\n      assertEquals( i, BitUtil.ntz3(num) );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"931aa2e14bf0bd782433b017ac4423637019725a":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"7edfc3f7caa7b49a18fe367692768b33b018e9db":["1f653cfcf159baeaafe5d01682a911e95bba4012","931aa2e14bf0bd782433b017ac4423637019725a"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","1f653cfcf159baeaafe5d01682a911e95bba4012"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["931aa2e14bf0bd782433b017ac4423637019725a"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"931aa2e14bf0bd782433b017ac4423637019725a":["7edfc3f7caa7b49a18fe367692768b33b018e9db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7edfc3f7caa7b49a18fe367692768b33b018e9db":[],"1f653cfcf159baeaafe5d01682a911e95bba4012":["931aa2e14bf0bd782433b017ac4423637019725a","7edfc3f7caa7b49a18fe367692768b33b018e9db","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1f653cfcf159baeaafe5d01682a911e95bba4012","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7edfc3f7caa7b49a18fe367692768b33b018e9db","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}