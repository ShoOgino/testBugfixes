{"path":"solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor#parseRouteKey(Object).mjava","commits":[{"id":"af3e10d8a1fbcc5c79b22f7477e79de467dd326c","date":1515178406,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor#parseRouteKey(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor#findTargetCollectionGivenRouteKey(Object).mjava","sourceNew":"  private Instant parseRouteKey(Object routeKey) {\n    final Instant docTimestamp;\n    if (routeKey instanceof Instant) {\n      docTimestamp = (Instant) routeKey;\n    } else if (routeKey instanceof Date) {\n      docTimestamp = ((Date)routeKey).toInstant();\n    } else if (routeKey instanceof CharSequence) {\n      docTimestamp = Instant.parse((CharSequence)routeKey);\n    } else {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unexpected type of routeKey: \" + routeKey);\n    }\n    return docTimestamp;\n  }\n\n","sourceOld":"  protected String findTargetCollectionGivenRouteKey(Object routeKey) {\n    final Instant docTimestamp;\n    if (routeKey instanceof Instant) {\n      docTimestamp = (Instant) routeKey;\n    } else if (routeKey instanceof Date) {\n      docTimestamp = ((Date)routeKey).toInstant();\n    } else if (routeKey instanceof CharSequence) {\n      docTimestamp = Instant.parse((CharSequence)routeKey);\n    } else {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unexpected type of routeKey: \" + routeKey);\n    }\n    final Aliases aliases = zkController.getZkStateReader().getAliases(); // note: might be different from last request\n    if (this.parsedCollectionsAliases != aliases) {\n      if (this.parsedCollectionsAliases != null) {\n        log.info(\"Observing possibly updated alias {}\", aliasName);\n      }\n      this.parsedCollectionsDesc = doParseCollections(aliases);\n      this.parsedCollectionsAliases = aliases;\n    }\n    // iterates in reverse chronological order\n    //    We're O(N) here but N should be small, the loop is fast, and usually looking for 1st.\n    for (Map.Entry<Instant, String> entry : parsedCollectionsDesc) {\n      Instant colStartTime = entry.getKey();\n      if (!docTimestamp.isBefore(colStartTime)) {  // i.e. docTimeStamp is >= the colStartTime\n        return entry.getValue(); //found it\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor#parseRouteKey(Object).mjava","pathOld":"/dev/null","sourceNew":"  private Instant parseRouteKey(Object routeKey) {\n    final Instant docTimestamp;\n    if (routeKey instanceof Instant) {\n      docTimestamp = (Instant) routeKey;\n    } else if (routeKey instanceof Date) {\n      docTimestamp = ((Date)routeKey).toInstant();\n    } else if (routeKey instanceof CharSequence) {\n      docTimestamp = Instant.parse((CharSequence)routeKey);\n    } else {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unexpected type of routeKey: \" + routeKey);\n    }\n    return docTimestamp;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b627755385655c7cd3fb296f17593658805cf4d5","date":1552455143,"type":5,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/TimeRoutedAlias#parseRouteKey(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor#parseRouteKey(Object).mjava","sourceNew":"  private Instant parseRouteKey(Object routeKey) {\n    final Instant docTimestamp;\n    if (routeKey instanceof Instant) {\n      docTimestamp = (Instant) routeKey;\n    } else if (routeKey instanceof Date) {\n      docTimestamp = ((Date)routeKey).toInstant();\n    } else if (routeKey instanceof CharSequence) {\n      docTimestamp = Instant.parse((CharSequence)routeKey);\n    } else {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unexpected type of routeKey: \" + routeKey);\n    }\n    return docTimestamp;\n  }\n\n","sourceOld":"  private Instant parseRouteKey(Object routeKey) {\n    final Instant docTimestamp;\n    if (routeKey instanceof Instant) {\n      docTimestamp = (Instant) routeKey;\n    } else if (routeKey instanceof Date) {\n      docTimestamp = ((Date)routeKey).toInstant();\n    } else if (routeKey instanceof CharSequence) {\n      docTimestamp = Instant.parse((CharSequence)routeKey);\n    } else {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unexpected type of routeKey: \" + routeKey);\n    }\n    return docTimestamp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","af3e10d8a1fbcc5c79b22f7477e79de467dd326c"],"af3e10d8a1fbcc5c79b22f7477e79de467dd326c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b627755385655c7cd3fb296f17593658805cf4d5":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b627755385655c7cd3fb296f17593658805cf4d5"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["b627755385655c7cd3fb296f17593658805cf4d5"],"af3e10d8a1fbcc5c79b22f7477e79de467dd326c":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","af3e10d8a1fbcc5c79b22f7477e79de467dd326c"],"b627755385655c7cd3fb296f17593658805cf4d5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}