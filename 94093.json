{"path":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n\n    }\n    DocMaker docMaker = new DocMaker();\n    Properties properties = new Properties();\n    properties.setProperty(\"content.source\", \"org.apache.lucene.benchmark.byTask.feeds.EnwikiContentSource\");\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    docMaker.setConfig(new Config(properties));\n    docMaker.resetInputs();\n    if (wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiContentSource\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","sourceOld":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n\n    }\n    DocMaker docMaker = new DocMaker();\n    Properties properties = new Properties();\n    properties.setProperty(\"content.source\", \"org.apache.lucene.benchmark.byTask.feeds.EnwikiContentSource\");\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    docMaker.setConfig(new Config(properties));\n    docMaker.resetInputs();\n    if (wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiContentSource\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecc11368dc265bfdad90214f8bf5da99016ab1e2","date":1294144090,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n\n    }\n    DocMaker docMaker = new DocMaker();\n    Properties properties = new Properties();\n    properties.setProperty(\"content.source\", \"org.apache.lucene.benchmark.byTask.feeds.EnwikiContentSource\");\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    docMaker.setConfig(new Config(properties));\n    docMaker.resetInputs();\n    if (wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiContentSource\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","sourceOld":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n\n    }\n    DocMaker docMaker = new DocMaker();\n    Properties properties = new Properties();\n    properties.setProperty(\"content.source\", \"org.apache.lucene.benchmark.byTask.feeds.EnwikiContentSource\");\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    docMaker.setConfig(new Config(properties));\n    docMaker.resetInputs();\n    if (wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiContentSource\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n\n    }\n    DocMaker docMaker = new DocMaker();\n    Properties properties = new Properties();\n    properties.setProperty(\"content.source\", \"org.apache.lucene.benchmark.byTask.feeds.EnwikiContentSource\");\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    docMaker.setConfig(new Config(properties));\n    docMaker.resetInputs();\n    if (wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiContentSource\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","sourceOld":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n\n    }\n    DocMaker docMaker = new DocMaker();\n    Properties properties = new Properties();\n    properties.setProperty(\"content.source\", \"org.apache.lucene.benchmark.byTask.feeds.EnwikiContentSource\");\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    docMaker.setConfig(new Config(properties));\n    docMaker.resetInputs();\n    if (wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiContentSource\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractWikipedia#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n\n    }\n    DocMaker docMaker = new DocMaker();\n    Properties properties = new Properties();\n    properties.setProperty(\"content.source\", \"org.apache.lucene.benchmark.byTask.feeds.EnwikiContentSource\");\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    docMaker.setConfig(new Config(properties));\n    docMaker.resetInputs();\n    if (wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiContentSource\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","sourceOld":"  public static void main(String[] args) throws Exception {\n\n    File wikipedia = null;\n    File outputDir = new File(\"./enwiki\");\n    boolean keepImageOnlyDocs = true;\n    for (int i = 0; i < args.length; i++) {\n      String arg = args[i];\n      if (arg.equals(\"--input\") || arg.equals(\"-i\")) {\n        wikipedia = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--output\") || arg.equals(\"-o\")) {\n        outputDir = new File(args[i + 1]);\n        i++;\n      } else if (arg.equals(\"--discardImageOnlyDocs\") || arg.equals(\"-d\")) {\n        keepImageOnlyDocs = false;\n      }\n\n    }\n    DocMaker docMaker = new DocMaker();\n    Properties properties = new Properties();\n    properties.setProperty(\"content.source\", \"org.apache.lucene.benchmark.byTask.feeds.EnwikiContentSource\");\n    properties.setProperty(\"docs.file\", wikipedia.getAbsolutePath());\n    properties.setProperty(\"content.source.forever\", \"false\");\n    properties.setProperty(\"keep.image.only.docs\", String.valueOf(keepImageOnlyDocs));\n    docMaker.setConfig(new Config(properties));\n    docMaker.resetInputs();\n    if (wikipedia.exists()) {\n      System.out.println(\"Extracting Wikipedia to: \" + outputDir + \" using EnwikiContentSource\");\n      outputDir.mkdirs();\n      ExtractWikipedia extractor = new ExtractWikipedia(docMaker, outputDir);\n      extractor.extract();\n    } else {\n      printUsage();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["9454a6510e2db155fb01faa5c049b06ece95fab9","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["9454a6510e2db155fb01faa5c049b06ece95fab9","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["70ad682703b8585f5d0a637efec044d57ec05efb","ecc11368dc265bfdad90214f8bf5da99016ab1e2","868da859b43505d9d2a023bfeae6dd0c795f5295"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}