{"path":"solr/solrj/src/java/org/apache/solr/common/SolrException#log(Logger,Throwable).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrException#log(Logger,Throwable).mjava","pathOld":"solr/src/common/org/apache/solr/common/SolrException#log(Logger,Throwable).mjava","sourceNew":"  public static void log(Logger log, Throwable e) {\n    if (e instanceof SolrException) {\n      ((SolrException)e).logged = true;\n    }\n    String stackTrace = toStr(e);\n    String ignore = doIgnore(stackTrace);\n    if (ignore != null) {\n      log.info(ignore);\n      return;\n    }\n    log.error(stackTrace);\n\n  }\n\n","sourceOld":"  public static void log(Logger log, Throwable e) {\n    if (e instanceof SolrException) {\n      ((SolrException)e).logged = true;\n    }\n    String stackTrace = toStr(e);\n    String ignore = doIgnore(stackTrace);\n    if (ignore != null) {\n      log.info(ignore);\n      return;\n    }\n    log.error(stackTrace);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrException#log(Logger,Throwable).mjava","pathOld":"solr/src/common/org/apache/solr/common/SolrException#log(Logger,Throwable).mjava","sourceNew":"  public static void log(Logger log, Throwable e) {\n    if (e instanceof SolrException) {\n      ((SolrException)e).logged = true;\n    }\n    String stackTrace = toStr(e);\n    String ignore = doIgnore(stackTrace);\n    if (ignore != null) {\n      log.info(ignore);\n      return;\n    }\n    log.error(stackTrace);\n\n  }\n\n","sourceOld":"  public static void log(Logger log, Throwable e) {\n    if (e instanceof SolrException) {\n      ((SolrException)e).logged = true;\n    }\n    String stackTrace = toStr(e);\n    String ignore = doIgnore(stackTrace);\n    if (ignore != null) {\n      log.info(ignore);\n      return;\n    }\n    log.error(stackTrace);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrException#log(Logger,Throwable).mjava","pathOld":"solr/src/common/org/apache/solr/common/SolrException#log(Logger,Throwable).mjava","sourceNew":"  public static void log(Logger log, Throwable e) {\n    if (e instanceof SolrException) {\n      ((SolrException)e).logged = true;\n    }\n    String stackTrace = toStr(e);\n    String ignore = doIgnore(stackTrace);\n    if (ignore != null) {\n      log.info(ignore);\n      return;\n    }\n    log.error(stackTrace);\n\n  }\n\n","sourceOld":"  public static void log(Logger log, Throwable e) {\n    if (e instanceof SolrException) {\n      ((SolrException)e).logged = true;\n    }\n    String stackTrace = toStr(e);\n    String ignore = doIgnore(stackTrace);\n    if (ignore != null) {\n      log.info(ignore);\n      return;\n    }\n    log.error(stackTrace);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b1605dda5afabdc06fd136fa0dd14ad326e3001","date":1326751633,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrException#log(Logger,Throwable).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrException#log(Logger,Throwable).mjava","sourceNew":"  public static void log(Logger log, Throwable e) {\n    String stackTrace = toStr(e);\n    String ignore = doIgnore(stackTrace);\n    if (ignore != null) {\n      log.info(ignore);\n      return;\n    }\n    log.error(stackTrace);\n\n  }\n\n","sourceOld":"  public static void log(Logger log, Throwable e) {\n    if (e instanceof SolrException) {\n      ((SolrException)e).logged = true;\n    }\n    String stackTrace = toStr(e);\n    String ignore = doIgnore(stackTrace);\n    if (ignore != null) {\n      log.info(ignore);\n      return;\n    }\n    log.error(stackTrace);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrException#log(Logger,Throwable).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrException#log(Logger,Throwable).mjava","sourceNew":"  public static void log(Logger log, Throwable e) {\n    String stackTrace = toStr(e);\n    String ignore = doIgnore(e, stackTrace);\n    if (ignore != null) {\n      log.info(ignore);\n      return;\n    }\n    log.error(stackTrace);\n\n  }\n\n","sourceOld":"  public static void log(Logger log, Throwable e) {\n    String stackTrace = toStr(e);\n    String ignore = doIgnore(stackTrace);\n    if (ignore != null) {\n      log.info(ignore);\n      return;\n    }\n    log.error(stackTrace);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrException#log(Logger,Throwable).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrException#log(Logger,Throwable).mjava","sourceNew":"  public static void log(Logger log, Throwable e) {\n    String stackTrace = toStr(e);\n    String ignore = doIgnore(e, stackTrace);\n    if (ignore != null) {\n      log.info(ignore);\n      return;\n    }\n    log.error(stackTrace);\n\n  }\n\n","sourceOld":"  public static void log(Logger log, Throwable e) {\n    String stackTrace = toStr(e);\n    String ignore = doIgnore(stackTrace);\n    if (ignore != null) {\n      log.info(ignore);\n      return;\n    }\n    log.error(stackTrace);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrException#log(Logger,Throwable).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrException#log(Logger,Throwable).mjava","sourceNew":"  public static void log(Logger log, Throwable e) {\n    String stackTrace = toStr(e);\n    String ignore = doIgnore(e, stackTrace);\n    if (ignore != null) {\n      log.info(ignore);\n      return;\n    }\n    log.error(stackTrace);\n\n  }\n\n","sourceOld":"  public static void log(Logger log, Throwable e) {\n    String stackTrace = toStr(e);\n    String ignore = doIgnore(stackTrace);\n    if (ignore != null) {\n      log.info(ignore);\n      return;\n    }\n    log.error(stackTrace);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2038128e31b7edca0c49e4e6cc854a819e526f1","date":1332260291,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrException#log(Logger,Throwable).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrException#log(Logger,Throwable).mjava","sourceNew":"  public static void log(Logger log, Throwable e) {\n    if (e instanceof SolrException\n        && ((SolrException) e).code() == ErrorCode.SERVICE_UNAVAILABLE.code) {\n      return;\n    }\n    String stackTrace = toStr(e);\n    String ignore = doIgnore(e, stackTrace);\n    if (ignore != null) {\n      log.info(ignore);\n      return;\n    }\n    log.error(stackTrace);\n\n  }\n\n","sourceOld":"  public static void log(Logger log, Throwable e) {\n    String stackTrace = toStr(e);\n    String ignore = doIgnore(e, stackTrace);\n    if (ignore != null) {\n      log.info(ignore);\n      return;\n    }\n    log.error(stackTrace);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe2a178a9ebfcc61e832755cd47b30712b308e91","date":1352137170,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/SolrException#log(Logger,Throwable).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/SolrException#log(Logger,Throwable).mjava","sourceNew":"  public static void log(Logger log, Throwable e) {\n    String stackTrace = toStr(e);\n    String ignore = doIgnore(e, stackTrace);\n    if (ignore != null) {\n      log.info(ignore);\n      return;\n    }\n    log.error(stackTrace);\n\n  }\n\n","sourceOld":"  public static void log(Logger log, Throwable e) {\n    if (e instanceof SolrException\n        && ((SolrException) e).code() == ErrorCode.SERVICE_UNAVAILABLE.code) {\n      return;\n    }\n    String stackTrace = toStr(e);\n    String ignore = doIgnore(e, stackTrace);\n    if (ignore != null) {\n      log.info(ignore);\n      return;\n    }\n    log.error(stackTrace);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2038128e31b7edca0c49e4e6cc854a819e526f1":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["7b1605dda5afabdc06fd136fa0dd14ad326e3001","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"fe2a178a9ebfcc61e832755cd47b30712b308e91":["c2038128e31b7edca0c49e4e6cc854a819e526f1"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["7b1605dda5afabdc06fd136fa0dd14ad326e3001","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["7b1605dda5afabdc06fd136fa0dd14ad326e3001"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7b1605dda5afabdc06fd136fa0dd14ad326e3001":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fe2a178a9ebfcc61e832755cd47b30712b308e91"]},"commit2Childs":{"c2038128e31b7edca0c49e4e6cc854a819e526f1":["fe2a178a9ebfcc61e832755cd47b30712b308e91"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"fe2a178a9ebfcc61e832755cd47b30712b308e91":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["7b1605dda5afabdc06fd136fa0dd14ad326e3001"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["c2038128e31b7edca0c49e4e6cc854a819e526f1","0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7b1605dda5afabdc06fd136fa0dd14ad326e3001":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}