{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/UserInputQueryBuilder#getQuery(Element).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/UserInputQueryBuilder#getQuery(Element).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/UserInputQueryBuilder#getQuery(Element).mjava","sourceNew":"  public Query getQuery(Element e) throws ParserException {\n    String text = DOMUtils.getText(e);\n    try {\n      Query q = null;\n      if (unSafeParser != null) {\n        //synchronize on unsafe parser\n        synchronized (unSafeParser) {\n          q = unSafeParser.parse(text);\n        }\n      } else {\n        String fieldName = DOMUtils.getAttribute(e, \"fieldName\", defaultField);\n        //Create new parser\n        QueryParser parser = createQueryParser(fieldName, analyzer);\n        q = parser.parse(text);\n      }\n      q.setBoost(DOMUtils.getAttribute(e, \"boost\", 1.0f));\n      return q;\n    } catch (ParseException e1) {\n      throw new ParserException(e1.getMessage());\n    }\n  }\n\n","sourceOld":"  public Query getQuery(Element e) throws ParserException {\n    String text = DOMUtils.getText(e);\n    try {\n      Query q = null;\n      if (unSafeParser != null) {\n        //synchronize on unsafe parser\n        synchronized (unSafeParser) {\n          q = unSafeParser.parse(text);\n        }\n      } else {\n        String fieldName = DOMUtils.getAttribute(e, \"fieldName\", defaultField);\n        //Create new parser\n        QueryParser parser = createQueryParser(fieldName, analyzer);\n        q = parser.parse(text);\n      }\n      q.setBoost(DOMUtils.getAttribute(e, \"boost\", 1.0f));\n      return q;\n    } catch (ParseException e1) {\n      throw new ParserException(e1.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/UserInputQueryBuilder#getQuery(Element).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/UserInputQueryBuilder#getQuery(Element).mjava","sourceNew":"  @Override\n  public Query getQuery(Element e) throws ParserException {\n    String text = DOMUtils.getText(e);\n    try {\n      Query q = null;\n      if (unSafeParser != null) {\n        //synchronize on unsafe parser\n        synchronized (unSafeParser) {\n          q = unSafeParser.parse(text);\n        }\n      } else {\n        String fieldName = DOMUtils.getAttribute(e, \"fieldName\", defaultField);\n        //Create new parser\n        QueryParser parser = createQueryParser(fieldName, analyzer);\n        q = parser.parse(text);\n      }\n      q.setBoost(DOMUtils.getAttribute(e, \"boost\", 1.0f));\n      return q;\n    } catch (ParseException e1) {\n      throw new ParserException(e1.getMessage());\n    }\n  }\n\n","sourceOld":"  public Query getQuery(Element e) throws ParserException {\n    String text = DOMUtils.getText(e);\n    try {\n      Query q = null;\n      if (unSafeParser != null) {\n        //synchronize on unsafe parser\n        synchronized (unSafeParser) {\n          q = unSafeParser.parse(text);\n        }\n      } else {\n        String fieldName = DOMUtils.getAttribute(e, \"fieldName\", defaultField);\n        //Create new parser\n        QueryParser parser = createQueryParser(fieldName, analyzer);\n        q = parser.parse(text);\n      }\n      q.setBoost(DOMUtils.getAttribute(e, \"boost\", 1.0f));\n      return q;\n    } catch (ParseException e1) {\n      throw new ParserException(e1.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/UserInputQueryBuilder#getQuery(Element).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/UserInputQueryBuilder#getQuery(Element).mjava","sourceNew":"  @Override\n  public Query getQuery(Element e) throws ParserException {\n    String text = DOMUtils.getText(e);\n    try {\n      Query q = null;\n      if (unSafeParser != null) {\n        //synchronize on unsafe parser\n        synchronized (unSafeParser) {\n          q = unSafeParser.parse(text);\n        }\n      } else {\n        String fieldName = DOMUtils.getAttribute(e, \"fieldName\", defaultField);\n        //Create new parser\n        QueryParser parser = createQueryParser(fieldName, analyzer);\n        q = parser.parse(text);\n      }\n      q.setBoost(DOMUtils.getAttribute(e, \"boost\", 1.0f));\n      return q;\n    } catch (ParseException e1) {\n      throw new ParserException(e1.getMessage());\n    }\n  }\n\n","sourceOld":"  public Query getQuery(Element e) throws ParserException {\n    String text = DOMUtils.getText(e);\n    try {\n      Query q = null;\n      if (unSafeParser != null) {\n        //synchronize on unsafe parser\n        synchronized (unSafeParser) {\n          q = unSafeParser.parse(text);\n        }\n      } else {\n        String fieldName = DOMUtils.getAttribute(e, \"fieldName\", defaultField);\n        //Create new parser\n        QueryParser parser = createQueryParser(fieldName, analyzer);\n        q = parser.parse(text);\n      }\n      q.setBoost(DOMUtils.getAttribute(e, \"boost\", 1.0f));\n      return q;\n    } catch (ParseException e1) {\n      throw new ParserException(e1.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/UserInputQueryBuilder#getQuery(Element).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/UserInputQueryBuilder#getQuery(Element).mjava","sourceNew":"  @Override\n  public Query getQuery(Element e) throws ParserException {\n    String text = DOMUtils.getText(e);\n    try {\n      Query q = null;\n      if (unSafeParser != null) {\n        //synchronize on unsafe parser\n        synchronized (unSafeParser) {\n          q = unSafeParser.parse(text);\n        }\n      } else {\n        String fieldName = DOMUtils.getAttribute(e, \"fieldName\", defaultField);\n        //Create new parser\n        QueryParser parser = createQueryParser(fieldName, analyzer);\n        q = parser.parse(text);\n      }\n      float boost = DOMUtils.getAttribute(e, \"boost\", 1.0f);\n      return new BoostQuery(q, boost);\n    } catch (ParseException e1) {\n      throw new ParserException(e1.getMessage());\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query getQuery(Element e) throws ParserException {\n    String text = DOMUtils.getText(e);\n    try {\n      Query q = null;\n      if (unSafeParser != null) {\n        //synchronize on unsafe parser\n        synchronized (unSafeParser) {\n          q = unSafeParser.parse(text);\n        }\n      } else {\n        String fieldName = DOMUtils.getAttribute(e, \"fieldName\", defaultField);\n        //Create new parser\n        QueryParser parser = createQueryParser(fieldName, analyzer);\n        q = parser.parse(text);\n      }\n      q.setBoost(DOMUtils.getAttribute(e, \"boost\", 1.0f));\n      return q;\n    } catch (ParseException e1) {\n      throw new ParserException(e1.getMessage());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7530de27b87b961b51f01bd1299b7004d46e8823"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2dfdf766e55e943d942055d7de53c7ad6bc45283"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","2dfdf766e55e943d942055d7de53c7ad6bc45283"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}