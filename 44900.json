{"path":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addFields(Collection[SchemaField]).mjava","commits":[{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addFields(Collection[SchemaField]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Copies this schema, adds the given fields to the copy, then persists the new schema.\n   *\n   * @param newFields the SchemaFields to add \n   * @return a new IndexSchema based on this schema with newFields added\n   * @see #newField(String, String, Map)\n   */\n  public IndexSchema addFields(Collection<SchemaField> newFields) {\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a54972b2387f87fdd92600308f9a0d477b1f53b0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"577e41641d2fc8a834d2709dc76cc424b2936e19","date":1373292023,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addFields(Collection[SchemaField]).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addFields(Collection[SchemaField]).mjava","sourceNew":"  /**\n   * Copies this schema, adds the given fields to the copy, then persists the new schema.\n   *\n   * @param newFields the SchemaFields to add\n   * @return a new IndexSchema based on this schema with newFields added\n   * @see #newField(String, String, Map)\n   */\n  public IndexSchema addFields(Collection<SchemaField> newFields) {\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","sourceOld":"  /**\n   * Copies this schema, adds the given fields to the copy, then persists the new schema.\n   *\n   * @param newFields the SchemaFields to add \n   * @return a new IndexSchema based on this schema with newFields added\n   * @see #newField(String, String, Map)\n   */\n  public IndexSchema addFields(Collection<SchemaField> newFields) {\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addFields(Collection[SchemaField]).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addFields(Collection[SchemaField]).mjava","sourceNew":"  /**\n   * Copies this schema, adds the given fields to the copy, then persists the new schema.\n   *\n   * @param newFields the SchemaFields to add\n   * @return a new IndexSchema based on this schema with newFields added\n   * @see #newField(String, String, Map)\n   */\n  public IndexSchema addFields(Collection<SchemaField> newFields) {\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","sourceOld":"  /**\n   * Copies this schema, adds the given fields to the copy, then persists the new schema.\n   *\n   * @param newFields the SchemaFields to add \n   * @return a new IndexSchema based on this schema with newFields added\n   * @see #newField(String, String, Map)\n   */\n  public IndexSchema addFields(Collection<SchemaField> newFields) {\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a54972b2387f87fdd92600308f9a0d477b1f53b0","date":1404789654,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addFields(Collection[SchemaField]).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addFields(Collection[SchemaField]).mjava","sourceNew":"  /**\n   * Copies this schema, adds the given fields to the copy, then persists the\n   * new schema.  Requires synchronizing on the object returned by\n   * {@link #getSchemaUpdateLock()}.\n   *\n   * @param newFields the SchemaFields to add\n   * @return a new IndexSchema based on this schema with newFields added\n   * @see #newField(String, String, Map)\n   */\n  public IndexSchema addFields(Collection<SchemaField> newFields) {\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","sourceOld":"  /**\n   * Copies this schema, adds the given fields to the copy, then persists the new schema.\n   *\n   * @param newFields the SchemaFields to add\n   * @return a new IndexSchema based on this schema with newFields added\n   * @see #newField(String, String, Map)\n   */\n  public IndexSchema addFields(Collection<SchemaField> newFields) {\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","bugFix":["08970e5b8411182a29412c177eff67ec1110095b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a54d9ede1b7f2f026639186eb07f3f314d87d9a","date":1412176848,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addFields(Collection[SchemaField]).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addFields(Collection[SchemaField]).mjava","sourceNew":"  /**\n   * Copies this schema, adds the given fields to the copy.\n   * Requires synchronizing on the object returned by\n   * {@link #getSchemaUpdateLock()}.\n   *\n   * @param newFields the SchemaFields to add\n   * @return a new IndexSchema based on this schema with newFields added\n   * @see #newField(String, String, Map)\n   */\n  public IndexSchema addFields(Collection<SchemaField> newFields) {\n    return addFields(newFields, Collections.<String, Collection<String>>emptyMap(), true);\n  }\n\n","sourceOld":"  /**\n   * Copies this schema, adds the given fields to the copy, then persists the\n   * new schema.  Requires synchronizing on the object returned by\n   * {@link #getSchemaUpdateLock()}.\n   *\n   * @param newFields the SchemaFields to add\n   * @return a new IndexSchema based on this schema with newFields added\n   * @see #newField(String, String, Map)\n   */\n  public IndexSchema addFields(Collection<SchemaField> newFields) {\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addFields(Collection[SchemaField]).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addFields(Collection[SchemaField]).mjava","sourceNew":"  /**\n   * Copies this schema, adds the given fields to the copy.\n   * Requires synchronizing on the object returned by\n   * {@link #getSchemaUpdateLock()}.\n   *\n   * @param newFields the SchemaFields to add\n   * @return a new IndexSchema based on this schema with newFields added\n   * @see #newField(String, String, Map)\n   */\n  public IndexSchema addFields(Collection<SchemaField> newFields) {\n    return addFields(newFields, Collections.<String, Collection<String>>emptyMap(), true);\n  }\n\n","sourceOld":"  /**\n   * Copies this schema, adds the given fields to the copy, then persists the\n   * new schema.  Requires synchronizing on the object returned by\n   * {@link #getSchemaUpdateLock()}.\n   *\n   * @param newFields the SchemaFields to add\n   * @return a new IndexSchema based on this schema with newFields added\n   * @see #newField(String, String, Map)\n   */\n  public IndexSchema addFields(Collection<SchemaField> newFields) {\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"577e41641d2fc8a834d2709dc76cc424b2936e19":["08970e5b8411182a29412c177eff67ec1110095b"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["08970e5b8411182a29412c177eff67ec1110095b","577e41641d2fc8a834d2709dc76cc424b2936e19"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4a54d9ede1b7f2f026639186eb07f3f314d87d9a":["a54972b2387f87fdd92600308f9a0d477b1f53b0"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["a54972b2387f87fdd92600308f9a0d477b1f53b0","4a54d9ede1b7f2f026639186eb07f3f314d87d9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a54d9ede1b7f2f026639186eb07f3f314d87d9a"],"a54972b2387f87fdd92600308f9a0d477b1f53b0":["577e41641d2fc8a834d2709dc76cc424b2936e19"],"08970e5b8411182a29412c177eff67ec1110095b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"577e41641d2fc8a834d2709dc76cc424b2936e19":["37a0f60745e53927c4c876cfe5b5a58170f0646c","a54972b2387f87fdd92600308f9a0d477b1f53b0"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["08970e5b8411182a29412c177eff67ec1110095b"],"4a54d9ede1b7f2f026639186eb07f3f314d87d9a":["d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"08970e5b8411182a29412c177eff67ec1110095b":["577e41641d2fc8a834d2709dc76cc424b2936e19","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"a54972b2387f87fdd92600308f9a0d477b1f53b0":["4a54d9ede1b7f2f026639186eb07f3f314d87d9a","d9a47902d6207303f5ed3e7aaca62ca33433af66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}