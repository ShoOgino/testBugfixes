{"path":"solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache#remove(K).mjava","commits":[{"id":"cf0b1b21012d341c80a1f3975cf88823f0fe95a9","date":1316016056,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache#remove(K).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/ConcurrentLRUCache#remove(K).mjava","sourceNew":"  public V remove(K key) {\n    CacheEntry<K,V> cacheEntry = map.remove(key);\n    if (cacheEntry != null) {\n      stats.size.decrementAndGet();\n      return cacheEntry.value;\n    }\n    return null;\n  }\n\n","sourceOld":"  public V remove(K key) {\n    CacheEntry<K,V> cacheEntry = map.remove(key);\n    if (cacheEntry != null) {\n      stats.size.decrementAndGet();\n      return cacheEntry.value;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca83400a04ed1cbfa09560d2e7184f93f5d75363","date":1428921124,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache#remove(K).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache#remove(K).mjava","sourceNew":"  @Override\n  public V remove(K key) {\n    CacheEntry<K,V> cacheEntry = map.remove(key);\n    if (cacheEntry != null) {\n      stats.size.decrementAndGet();\n      return cacheEntry.value;\n    }\n    return null;\n  }\n\n","sourceOld":"  public V remove(K key) {\n    CacheEntry<K,V> cacheEntry = map.remove(key);\n    if (cacheEntry != null) {\n      stats.size.decrementAndGet();\n      return cacheEntry.value;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c5044c9bb1518e7a13c1c5385a21325ae343056","date":1479187798,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache#remove(K).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache#remove(K).mjava","sourceNew":"  @Override\n  public V remove(K key) {\n    CacheEntry<K,V> cacheEntry = map.remove(key);\n    if (cacheEntry != null) {\n      stats.size.decrementAndGet();\n      if (ramUpperWatermark != Long.MAX_VALUE)  {\n        ramBytes.addAndGet(-cacheEntry.ramBytesUsed() - LRUCache.HASHTABLE_RAM_BYTES_PER_ENTRY);\n      }\n      return cacheEntry.value;\n    }\n    return null;\n  }\n\n","sourceOld":"  @Override\n  public V remove(K key) {\n    CacheEntry<K,V> cacheEntry = map.remove(key);\n    if (cacheEntry != null) {\n      stats.size.decrementAndGet();\n      return cacheEntry.value;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21019aa828c8c9b0153877543a8b3f200bf2ca19","date":1479224450,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache#remove(K).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache#remove(K).mjava","sourceNew":"  @Override\n  public V remove(K key) {\n    CacheEntry<K,V> cacheEntry = map.remove(key);\n    if (cacheEntry != null) {\n      stats.size.decrementAndGet();\n      if (ramUpperWatermark != Long.MAX_VALUE)  {\n        ramBytes.addAndGet(-cacheEntry.ramBytesUsed() - LRUCache.HASHTABLE_RAM_BYTES_PER_ENTRY);\n      }\n      return cacheEntry.value;\n    }\n    return null;\n  }\n\n","sourceOld":"  @Override\n  public V remove(K key) {\n    CacheEntry<K,V> cacheEntry = map.remove(key);\n    if (cacheEntry != null) {\n      stats.size.decrementAndGet();\n      return cacheEntry.value;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71ca10e7131e1f01868c80d228f26a855e79dd0","date":1562166223,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache#remove(K).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache#remove(K).mjava","sourceNew":"  @Override\n  public V remove(K key) {\n    CacheEntry<K,V> cacheEntry = map.remove(key);\n    if (cacheEntry != null) {\n      stats.size.decrementAndGet();\n      ramBytes.addAndGet(-cacheEntry.ramBytesUsed() - HASHTABLE_RAM_BYTES_PER_ENTRY);\n      return cacheEntry.value;\n    }\n    return null;\n  }\n\n","sourceOld":"  @Override\n  public V remove(K key) {\n    CacheEntry<K,V> cacheEntry = map.remove(key);\n    if (cacheEntry != null) {\n      stats.size.decrementAndGet();\n      if (ramUpperWatermark != Long.MAX_VALUE)  {\n        ramBytes.addAndGet(-cacheEntry.ramBytesUsed() - LRUCache.HASHTABLE_RAM_BYTES_PER_ENTRY);\n      }\n      return cacheEntry.value;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87f0484c38f986062889ed50f3bf3bd462848c26","date":1570108628,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache#remove(K).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache#remove(K).mjava","sourceNew":"  @Override\n  public V remove(K key) {\n    CacheEntry<K,V> cacheEntry = map.remove(key);\n    if (cacheEntry != null) {\n      stats.size.decrement();\n      ramBytes.add(-cacheEntry.ramBytesUsed() - HASHTABLE_RAM_BYTES_PER_ENTRY);\n      return cacheEntry.value;\n    }\n    return null;\n  }\n\n","sourceOld":"  @Override\n  public V remove(K key) {\n    CacheEntry<K,V> cacheEntry = map.remove(key);\n    if (cacheEntry != null) {\n      stats.size.decrementAndGet();\n      ramBytes.addAndGet(-cacheEntry.ramBytesUsed() - HASHTABLE_RAM_BYTES_PER_ENTRY);\n      return cacheEntry.value;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache#remove(K).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache#remove(K).mjava","sourceNew":"  @Override\n  public V remove(K key) {\n    CacheEntry<K,V> cacheEntry = map.remove(key);\n    if (cacheEntry != null) {\n      stats.size.decrement();\n      ramBytes.add(-cacheEntry.ramBytesUsed() - HASHTABLE_RAM_BYTES_PER_ENTRY);\n      return cacheEntry.value;\n    }\n    return null;\n  }\n\n","sourceOld":"  @Override\n  public V remove(K key) {\n    CacheEntry<K,V> cacheEntry = map.remove(key);\n    if (cacheEntry != null) {\n      stats.size.decrementAndGet();\n      ramBytes.addAndGet(-cacheEntry.ramBytesUsed() - HASHTABLE_RAM_BYTES_PER_ENTRY);\n      return cacheEntry.value;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfa27be7bde9d711ce2b418fadc555654849383f","date":1573652589,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache#remove(K).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/ConcurrentLRUCache#remove(K).mjava","sourceNew":"  @Override\n  public V remove(K key) {\n    CacheEntry<K, V> cacheEntry = map.remove(key);\n    if (cacheEntry != null) {\n      stats.size.decrement();\n      ramBytes.add(-cacheEntry.ramBytesUsed() - HASHTABLE_RAM_BYTES_PER_ENTRY);\n      return cacheEntry.value;\n    }\n    return null;\n  }\n\n","sourceOld":"  @Override\n  public V remove(K key) {\n    CacheEntry<K,V> cacheEntry = map.remove(key);\n    if (cacheEntry != null) {\n      stats.size.decrement();\n      ramBytes.add(-cacheEntry.ramBytesUsed() - HASHTABLE_RAM_BYTES_PER_ENTRY);\n      return cacheEntry.value;\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bfa27be7bde9d711ce2b418fadc555654849383f":["87f0484c38f986062889ed50f3bf3bd462848c26"],"cf0b1b21012d341c80a1f3975cf88823f0fe95a9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ca83400a04ed1cbfa09560d2e7184f93f5d75363":["cf0b1b21012d341c80a1f3975cf88823f0fe95a9"],"21019aa828c8c9b0153877543a8b3f200bf2ca19":["ca83400a04ed1cbfa09560d2e7184f93f5d75363","7c5044c9bb1518e7a13c1c5385a21325ae343056"],"a71ca10e7131e1f01868c80d228f26a855e79dd0":["7c5044c9bb1518e7a13c1c5385a21325ae343056"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"87f0484c38f986062889ed50f3bf3bd462848c26":["a71ca10e7131e1f01868c80d228f26a855e79dd0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bfa27be7bde9d711ce2b418fadc555654849383f"],"7c5044c9bb1518e7a13c1c5385a21325ae343056":["ca83400a04ed1cbfa09560d2e7184f93f5d75363"],"b0b597c65628ca9e73913a07e81691f8229bae35":["a71ca10e7131e1f01868c80d228f26a855e79dd0","87f0484c38f986062889ed50f3bf3bd462848c26"]},"commit2Childs":{"bfa27be7bde9d711ce2b418fadc555654849383f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cf0b1b21012d341c80a1f3975cf88823f0fe95a9":["ca83400a04ed1cbfa09560d2e7184f93f5d75363"],"ca83400a04ed1cbfa09560d2e7184f93f5d75363":["21019aa828c8c9b0153877543a8b3f200bf2ca19","7c5044c9bb1518e7a13c1c5385a21325ae343056"],"21019aa828c8c9b0153877543a8b3f200bf2ca19":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cf0b1b21012d341c80a1f3975cf88823f0fe95a9"],"a71ca10e7131e1f01868c80d228f26a855e79dd0":["87f0484c38f986062889ed50f3bf3bd462848c26","b0b597c65628ca9e73913a07e81691f8229bae35"],"87f0484c38f986062889ed50f3bf3bd462848c26":["bfa27be7bde9d711ce2b418fadc555654849383f","b0b597c65628ca9e73913a07e81691f8229bae35"],"7c5044c9bb1518e7a13c1c5385a21325ae343056":["21019aa828c8c9b0153877543a8b3f200bf2ca19","a71ca10e7131e1f01868c80d228f26a855e79dd0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["21019aa828c8c9b0153877543a8b3f200bf2ca19","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}