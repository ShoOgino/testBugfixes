{"path":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","commits":[{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState _termState) throws IOException {\n    final PulsingTermState termState = (PulsingTermState) _termState;\n    if (termState.inlinedBytes == null) {\n      termState.inlinedBytes = new byte[128];\n      termState.inlinedBytesReader = new ByteArrayDataInput(null);\n    }\n    int len = termsIn.readVInt();\n    if (termState.inlinedBytes.length < len) {\n      termState.inlinedBytes = new byte[ArrayUtil.oversize(len, 1)];\n    }\n    termsIn.readBytes(termState.inlinedBytes, 0, len);\n    termState.inlinedBytesReader.reset(termState.inlinedBytes);\n    termState.wrappedTermState.termCount = 0;\n    wrappedPostingsReader.readTermsBlock(termsIn, fieldInfo, termState.wrappedTermState);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState _termState) throws IOException {\n    final PulsingTermState termState = (PulsingTermState) _termState;\n    if (termState.inlinedBytes == null) {\n      termState.inlinedBytes = new byte[128];\n      termState.inlinedBytesReader = new ByteArrayDataInput(null);\n    }\n    int len = termsIn.readVInt();\n    if (termState.inlinedBytes.length < len) {\n      termState.inlinedBytes = new byte[ArrayUtil.oversize(len, 1)];\n    }\n    termsIn.readBytes(termState.inlinedBytes, 0, len);\n    termState.inlinedBytesReader.reset(termState.inlinedBytes);\n    termState.wrappedTermState.termCount = 0;\n    wrappedPostingsReader.readTermsBlock(termsIn, fieldInfo, termState.wrappedTermState);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState _termState) throws IOException {\n    final PulsingTermState termState = (PulsingTermState) _termState;\n    if (termState.inlinedBytes == null) {\n      termState.inlinedBytes = new byte[128];\n      termState.inlinedBytesReader = new ByteArrayDataInput(null);\n    }\n    int len = termsIn.readVInt();\n    if (termState.inlinedBytes.length < len) {\n      termState.inlinedBytes = new byte[ArrayUtil.oversize(len, 1)];\n    }\n    termsIn.readBytes(termState.inlinedBytes, 0, len);\n    termState.inlinedBytesReader.reset(termState.inlinedBytes);\n    termState.wrappedTermState.termCount = 0;\n    wrappedPostingsReader.readTermsBlock(termsIn, fieldInfo, termState.wrappedTermState);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d9dcb8fc69a6643bc92dac9b5de3e05e7a52e36","date":1308677293,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","sourceNew":"  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState _termState) throws IOException {\n    final PulsingTermState termState = (PulsingTermState) _termState;\n    if (termState.inlinedBytes == null) {\n      termState.inlinedBytes = new byte[128];\n      termState.inlinedBytesReader = new ByteArrayDataInput();\n    }\n    int len = termsIn.readVInt();\n    if (termState.inlinedBytes.length < len) {\n      termState.inlinedBytes = new byte[ArrayUtil.oversize(len, 1)];\n    }\n    termsIn.readBytes(termState.inlinedBytes, 0, len);\n    termState.inlinedBytesReader.reset(termState.inlinedBytes);\n    termState.wrappedTermState.termCount = 0;\n    wrappedPostingsReader.readTermsBlock(termsIn, fieldInfo, termState.wrappedTermState);\n  }\n\n","sourceOld":"  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState _termState) throws IOException {\n    final PulsingTermState termState = (PulsingTermState) _termState;\n    if (termState.inlinedBytes == null) {\n      termState.inlinedBytes = new byte[128];\n      termState.inlinedBytesReader = new ByteArrayDataInput(null);\n    }\n    int len = termsIn.readVInt();\n    if (termState.inlinedBytes.length < len) {\n      termState.inlinedBytes = new byte[ArrayUtil.oversize(len, 1)];\n    }\n    termsIn.readBytes(termState.inlinedBytes, 0, len);\n    termState.inlinedBytesReader.reset(termState.inlinedBytes);\n    termState.wrappedTermState.termCount = 0;\n    wrappedPostingsReader.readTermsBlock(termsIn, fieldInfo, termState.wrappedTermState);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","sourceNew":"  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState _termState) throws IOException {\n    final PulsingTermState termState = (PulsingTermState) _termState;\n    if (termState.inlinedBytes == null) {\n      termState.inlinedBytes = new byte[128];\n      termState.inlinedBytesReader = new ByteArrayDataInput();\n    }\n    int len = termsIn.readVInt();\n    if (termState.inlinedBytes.length < len) {\n      termState.inlinedBytes = new byte[ArrayUtil.oversize(len, 1)];\n    }\n    termsIn.readBytes(termState.inlinedBytes, 0, len);\n    termState.inlinedBytesReader.reset(termState.inlinedBytes);\n    termState.wrappedTermState.termCount = 0;\n    wrappedPostingsReader.readTermsBlock(termsIn, fieldInfo, termState.wrappedTermState);\n  }\n\n","sourceOld":"  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState _termState) throws IOException {\n    final PulsingTermState termState = (PulsingTermState) _termState;\n    if (termState.inlinedBytes == null) {\n      termState.inlinedBytes = new byte[128];\n      termState.inlinedBytesReader = new ByteArrayDataInput(null);\n    }\n    int len = termsIn.readVInt();\n    if (termState.inlinedBytes.length < len) {\n      termState.inlinedBytes = new byte[ArrayUtil.oversize(len, 1)];\n    }\n    termsIn.readBytes(termState.inlinedBytes, 0, len);\n    termState.inlinedBytesReader.reset(termState.inlinedBytes);\n    termState.wrappedTermState.termCount = 0;\n    wrappedPostingsReader.readTermsBlock(termsIn, fieldInfo, termState.wrappedTermState);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","sourceNew":"  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState _termState) throws IOException {\n    final PulsingTermState termState = (PulsingTermState) _termState;\n    if (termState.inlinedBytes == null) {\n      termState.inlinedBytes = new byte[128];\n      termState.inlinedBytesReader = new ByteArrayDataInput();\n    }\n    int len = termsIn.readVInt();\n    if (termState.inlinedBytes.length < len) {\n      termState.inlinedBytes = new byte[ArrayUtil.oversize(len, 1)];\n    }\n    termsIn.readBytes(termState.inlinedBytes, 0, len);\n    termState.inlinedBytesReader.reset(termState.inlinedBytes);\n    termState.wrappedTermState.termCount = 0;\n    wrappedPostingsReader.readTermsBlock(termsIn, fieldInfo, termState.wrappedTermState);\n  }\n\n","sourceOld":"  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState _termState) throws IOException {\n    final PulsingTermState termState = (PulsingTermState) _termState;\n    if (termState.inlinedBytes == null) {\n      termState.inlinedBytes = new byte[128];\n      termState.inlinedBytesReader = new ByteArrayDataInput(null);\n    }\n    int len = termsIn.readVInt();\n    if (termState.inlinedBytes.length < len) {\n      termState.inlinedBytes = new byte[ArrayUtil.oversize(len, 1)];\n    }\n    termsIn.readBytes(termState.inlinedBytes, 0, len);\n    termState.inlinedBytesReader.reset(termState.inlinedBytes);\n    termState.wrappedTermState.termCount = 0;\n    wrappedPostingsReader.readTermsBlock(termsIn, fieldInfo, termState.wrappedTermState);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReader#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/pulsing/PulsingPostingsReaderImpl#readTermsBlock(IndexInput,FieldInfo,BlockTermState).mjava","sourceNew":"  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState _termState) throws IOException {\n    //System.out.println(\"PR.readTermsBlock state=\" + _termState);\n    final PulsingTermState termState = (PulsingTermState) _termState;\n    if (termState.inlinedBytes == null) {\n      termState.inlinedBytes = new byte[128];\n      termState.inlinedBytesReader = new ByteArrayDataInput();\n    }\n    int len = termsIn.readVInt();\n    //System.out.println(\"  len=\" + len + \" fp=\" + termsIn.getFilePointer());\n    if (termState.inlinedBytes.length < len) {\n      termState.inlinedBytes = new byte[ArrayUtil.oversize(len, 1)];\n    }\n    termsIn.readBytes(termState.inlinedBytes, 0, len);\n    termState.inlinedBytesReader.reset(termState.inlinedBytes);\n    termState.wrappedTermState.termBlockOrd = 0;\n    wrappedPostingsReader.readTermsBlock(termsIn, fieldInfo, termState.wrappedTermState);\n  }\n\n","sourceOld":"  @Override\n  public void readTermsBlock(IndexInput termsIn, FieldInfo fieldInfo, BlockTermState _termState) throws IOException {\n    final PulsingTermState termState = (PulsingTermState) _termState;\n    if (termState.inlinedBytes == null) {\n      termState.inlinedBytes = new byte[128];\n      termState.inlinedBytesReader = new ByteArrayDataInput();\n    }\n    int len = termsIn.readVInt();\n    if (termState.inlinedBytes.length < len) {\n      termState.inlinedBytes = new byte[ArrayUtil.oversize(len, 1)];\n    }\n    termsIn.readBytes(termState.inlinedBytes, 0, len);\n    termState.inlinedBytesReader.reset(termState.inlinedBytes);\n    termState.wrappedTermState.termCount = 0;\n    wrappedPostingsReader.readTermsBlock(termsIn, fieldInfo, termState.wrappedTermState);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["6d9dcb8fc69a6643bc92dac9b5de3e05e7a52e36"],"6d9dcb8fc69a6643bc92dac9b5de3e05e7a52e36":["b1add9ddc0005b07550d4350720aac22dc9886b3"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b1add9ddc0005b07550d4350720aac22dc9886b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b1add9ddc0005b07550d4350720aac22dc9886b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2553b00f699380c64959ccb27991289aae87be2e":["b1add9ddc0005b07550d4350720aac22dc9886b3","6d9dcb8fc69a6643bc92dac9b5de3e05e7a52e36"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["b1add9ddc0005b07550d4350720aac22dc9886b3","6d9dcb8fc69a6643bc92dac9b5de3e05e7a52e36"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b1add9ddc0005b07550d4350720aac22dc9886b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60ba444201d2570214b6fcf1d15600dc1a01f548"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6d9dcb8fc69a6643bc92dac9b5de3e05e7a52e36":["60ba444201d2570214b6fcf1d15600dc1a01f548","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","b1add9ddc0005b07550d4350720aac22dc9886b3","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["6d9dcb8fc69a6643bc92dac9b5de3e05e7a52e36","29ef99d61cda9641b6250bf9567329a6e65f901d","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"2553b00f699380c64959ccb27991289aae87be2e":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}