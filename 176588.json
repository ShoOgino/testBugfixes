{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#Lucene40SkipListWriter(int,int,int,IndexOutput,IndexOutput).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#Lucene40SkipListWriter(int,int,int,IndexOutput,IndexOutput).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#Lucene40SkipListWriter(int,int,int,IndexOutput,IndexOutput).mjava","sourceNew":"  public Lucene40SkipListWriter(int skipInterval, int numberOfSkipLevels, int docCount, IndexOutput freqOutput, IndexOutput proxOutput) {\n    super(skipInterval, numberOfSkipLevels, docCount);\n    this.freqOutput = freqOutput;\n    this.proxOutput = proxOutput;\n    \n    lastSkipDoc = new int[numberOfSkipLevels];\n    lastSkipPayloadLength = new int[numberOfSkipLevels];\n    lastSkipFreqPointer = new long[numberOfSkipLevels];\n    lastSkipProxPointer = new long[numberOfSkipLevels];\n  }\n\n","sourceOld":"  public Lucene40SkipListWriter(int skipInterval, int numberOfSkipLevels, int docCount, IndexOutput freqOutput, IndexOutput proxOutput) {\n    super(skipInterval, numberOfSkipLevels, docCount);\n    this.freqOutput = freqOutput;\n    this.proxOutput = proxOutput;\n    \n    lastSkipDoc = new int[numberOfSkipLevels];\n    lastSkipPayloadLength = new int[numberOfSkipLevels];\n    lastSkipFreqPointer = new long[numberOfSkipLevels];\n    lastSkipProxPointer = new long[numberOfSkipLevels];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f2b0c06e932a0421837e6c7ff4c710f5c0b4d4b","date":1336312740,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#Lucene40SkipListWriter(int,int,int,IndexOutput,IndexOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#Lucene40SkipListWriter(int,int,int,IndexOutput,IndexOutput).mjava","sourceNew":"  public Lucene40SkipListWriter(int skipInterval, int numberOfSkipLevels, int docCount, IndexOutput freqOutput, IndexOutput proxOutput) {\n    super(skipInterval, numberOfSkipLevels, docCount);\n    this.freqOutput = freqOutput;\n    this.proxOutput = proxOutput;\n    \n    lastSkipDoc = new int[numberOfSkipLevels];\n    lastSkipPayloadLength = new int[numberOfSkipLevels];\n    lastSkipOffsetLength = new int[numberOfSkipLevels];\n    lastSkipFreqPointer = new long[numberOfSkipLevels];\n    lastSkipProxPointer = new long[numberOfSkipLevels];\n  }\n\n","sourceOld":"  public Lucene40SkipListWriter(int skipInterval, int numberOfSkipLevels, int docCount, IndexOutput freqOutput, IndexOutput proxOutput) {\n    super(skipInterval, numberOfSkipLevels, docCount);\n    this.freqOutput = freqOutput;\n    this.proxOutput = proxOutput;\n    \n    lastSkipDoc = new int[numberOfSkipLevels];\n    lastSkipPayloadLength = new int[numberOfSkipLevels];\n    lastSkipFreqPointer = new long[numberOfSkipLevels];\n    lastSkipProxPointer = new long[numberOfSkipLevels];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"519435fc0d6082a1b8081f9492b714f716877437","date":1348258553,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#Lucene40SkipListWriter(int,int,int,IndexOutput,IndexOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#Lucene40SkipListWriter(int,int,int,IndexOutput,IndexOutput).mjava","sourceNew":"  /** Sole constructor. */\n  public Lucene40SkipListWriter(int skipInterval, int numberOfSkipLevels, int docCount, IndexOutput freqOutput, IndexOutput proxOutput) {\n    super(skipInterval, numberOfSkipLevels, docCount);\n    this.freqOutput = freqOutput;\n    this.proxOutput = proxOutput;\n    \n    lastSkipDoc = new int[numberOfSkipLevels];\n    lastSkipPayloadLength = new int[numberOfSkipLevels];\n    lastSkipOffsetLength = new int[numberOfSkipLevels];\n    lastSkipFreqPointer = new long[numberOfSkipLevels];\n    lastSkipProxPointer = new long[numberOfSkipLevels];\n  }\n\n","sourceOld":"  public Lucene40SkipListWriter(int skipInterval, int numberOfSkipLevels, int docCount, IndexOutput freqOutput, IndexOutput proxOutput) {\n    super(skipInterval, numberOfSkipLevels, docCount);\n    this.freqOutput = freqOutput;\n    this.proxOutput = proxOutput;\n    \n    lastSkipDoc = new int[numberOfSkipLevels];\n    lastSkipPayloadLength = new int[numberOfSkipLevels];\n    lastSkipOffsetLength = new int[numberOfSkipLevels];\n    lastSkipFreqPointer = new long[numberOfSkipLevels];\n    lastSkipProxPointer = new long[numberOfSkipLevels];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6616b1fd222bb5a60f7f7856ace312252bc97890","date":1350142044,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#Lucene40SkipListWriter(int,int,int,IndexOutput,IndexOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#Lucene40SkipListWriter(int,int,int,IndexOutput,IndexOutput).mjava","sourceNew":"  /** Sole constructor. */\n  public Lucene40SkipListWriter(int skipInterval, int numberOfSkipLevels, int docCount, IndexOutput freqOutput, IndexOutput proxOutput) {\n    super(skipInterval, numberOfSkipLevels, docCount);\n    this.freqOutput = freqOutput;\n    this.proxOutput = proxOutput;\n    \n    lastSkipDoc = new int[numberOfSkipLevels];\n    lastSkipPayloadLength = new int[numberOfSkipLevels];\n    lastSkipOffsetLength = new int[numberOfSkipLevels];\n    lastSkipFreqPointer = new long[numberOfSkipLevels];\n    lastSkipProxPointer = new long[numberOfSkipLevels];\n  }\n\n","sourceOld":"  /** Sole constructor. */\n  public Lucene40SkipListWriter(int skipInterval, int numberOfSkipLevels, int docCount, IndexOutput freqOutput, IndexOutput proxOutput) {\n    super(skipInterval, numberOfSkipLevels, docCount);\n    this.freqOutput = freqOutput;\n    this.proxOutput = proxOutput;\n    \n    lastSkipDoc = new int[numberOfSkipLevels];\n    lastSkipPayloadLength = new int[numberOfSkipLevels];\n    lastSkipOffsetLength = new int[numberOfSkipLevels];\n    lastSkipFreqPointer = new long[numberOfSkipLevels];\n    lastSkipProxPointer = new long[numberOfSkipLevels];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7492bcb52be51e55d596134b95b2e53cc4ffb91","date":1350223278,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#Lucene40SkipListWriter(int,int,int,IndexOutput,IndexOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#Lucene40SkipListWriter(int,int,int,IndexOutput,IndexOutput).mjava","sourceNew":"  /** Sole constructor. */\n  public Lucene40SkipListWriter(int skipInterval, int numberOfSkipLevels, int docCount, IndexOutput freqOutput, IndexOutput proxOutput) {\n    super(skipInterval, numberOfSkipLevels, docCount);\n    this.freqOutput = freqOutput;\n    this.proxOutput = proxOutput;\n    \n    lastSkipDoc = new int[numberOfSkipLevels];\n    lastSkipPayloadLength = new int[numberOfSkipLevels];\n    lastSkipOffsetLength = new int[numberOfSkipLevels];\n    lastSkipFreqPointer = new long[numberOfSkipLevels];\n    lastSkipProxPointer = new long[numberOfSkipLevels];\n  }\n\n","sourceOld":"  /** Sole constructor. */\n  public Lucene40SkipListWriter(int skipInterval, int numberOfSkipLevels, int docCount, IndexOutput freqOutput, IndexOutput proxOutput) {\n    super(skipInterval, numberOfSkipLevels, docCount);\n    this.freqOutput = freqOutput;\n    this.proxOutput = proxOutput;\n    \n    lastSkipDoc = new int[numberOfSkipLevels];\n    lastSkipPayloadLength = new int[numberOfSkipLevels];\n    lastSkipOffsetLength = new int[numberOfSkipLevels];\n    lastSkipFreqPointer = new long[numberOfSkipLevels];\n    lastSkipProxPointer = new long[numberOfSkipLevels];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db4fdbf3d262768eabc027cd8321edca0cd11fa8","date":1350574784,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#Lucene40SkipListWriter(int,int,int,IndexOutput,IndexOutput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SkipListWriter#Lucene40SkipListWriter(int,int,int,IndexOutput,IndexOutput).mjava","sourceNew":"  /** Sole constructor. */\n  public Lucene40SkipListWriter(int skipInterval, int numberOfSkipLevels, int docCount, IndexOutput freqOutput, IndexOutput proxOutput) {\n    super(skipInterval, numberOfSkipLevels, docCount);\n    this.freqOutput = freqOutput;\n    this.proxOutput = proxOutput;\n    \n    lastSkipDoc = new int[numberOfSkipLevels];\n    lastSkipPayloadLength = new int[numberOfSkipLevels];\n    lastSkipOffsetLength = new int[numberOfSkipLevels];\n    lastSkipFreqPointer = new long[numberOfSkipLevels];\n    lastSkipProxPointer = new long[numberOfSkipLevels];\n  }\n\n","sourceOld":"  /** Sole constructor. */\n  public Lucene40SkipListWriter(int skipInterval, int numberOfSkipLevels, int docCount, IndexOutput freqOutput, IndexOutput proxOutput) {\n    super(skipInterval, numberOfSkipLevels, docCount);\n    this.freqOutput = freqOutput;\n    this.proxOutput = proxOutput;\n    \n    lastSkipDoc = new int[numberOfSkipLevels];\n    lastSkipPayloadLength = new int[numberOfSkipLevels];\n    lastSkipOffsetLength = new int[numberOfSkipLevels];\n    lastSkipFreqPointer = new long[numberOfSkipLevels];\n    lastSkipProxPointer = new long[numberOfSkipLevels];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6616b1fd222bb5a60f7f7856ace312252bc97890":["519435fc0d6082a1b8081f9492b714f716877437"],"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["519435fc0d6082a1b8081f9492b714f716877437","6616b1fd222bb5a60f7f7856ace312252bc97890"],"519435fc0d6082a1b8081f9492b714f716877437":["1f2b0c06e932a0421837e6c7ff4c710f5c0b4d4b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":["519435fc0d6082a1b8081f9492b714f716877437","c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"1f2b0c06e932a0421837e6c7ff4c710f5c0b4d4b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"]},"commit2Childs":{"6616b1fd222bb5a60f7f7856ace312252bc97890":["c7492bcb52be51e55d596134b95b2e53cc4ffb91"],"c7492bcb52be51e55d596134b95b2e53cc4ffb91":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"519435fc0d6082a1b8081f9492b714f716877437":["6616b1fd222bb5a60f7f7856ace312252bc97890","c7492bcb52be51e55d596134b95b2e53cc4ffb91","db4fdbf3d262768eabc027cd8321edca0cd11fa8"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1f2b0c06e932a0421837e6c7ff4c710f5c0b4d4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"db4fdbf3d262768eabc027cd8321edca0cd11fa8":[],"1f2b0c06e932a0421837e6c7ff4c710f5c0b4d4b":["519435fc0d6082a1b8081f9492b714f716877437"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["db4fdbf3d262768eabc027cd8321edca0cd11fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}