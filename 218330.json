{"path":"solr/core/src/java/org/apache/solr/handler/IndexFetcher#copyTmpConfFiles2Conf(File).mjava","commits":[{"id":"20f6b7cff3771384f27af0f059795d7e64aff6b9","date":1425498309,"type":1,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/IndexFetcher#copyTmpConfFiles2Conf(File).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#copyTmpConfFiles2Conf(File).mjava","sourceNew":"  /**\n   * The conf files are copied to the tmp dir to the conf dir. A backup of the old file is maintained\n   */\n  private void copyTmpConfFiles2Conf(File tmpconfDir) {\n    boolean status = false;\n    File confDir = new File(solrCore.getResourceLoader().getConfigDir());\n    for (File file : makeTmpConfDirFileList(tmpconfDir, new ArrayList<>())) {\n      File oldFile = new File(confDir, file.getPath().substring(tmpconfDir.getPath().length(), file.getPath().length()));\n      if (!oldFile.getParentFile().exists()) {\n        status = oldFile.getParentFile().mkdirs();\n        if (!status) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n                  \"Unable to mkdirs: \" + oldFile.getParentFile());\n        }\n      }\n      if (oldFile.exists()) {\n        File backupFile = new File(oldFile.getPath() + \".\" + getDateAsStr(new Date(oldFile.lastModified())));\n        if (!backupFile.getParentFile().exists()) {\n          status = backupFile.getParentFile().mkdirs();\n          if (!status) {\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                    \"Unable to mkdirs: \" + backupFile.getParentFile());\n          }\n        }\n        status = oldFile.renameTo(backupFile);\n        if (!status) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"Unable to rename: \" + oldFile + \" to: \" + backupFile);\n        }\n      }\n      status = file.renameTo(oldFile);\n      if (!status) {\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Unable to rename: \" + file + \" to: \" + oldFile);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * The conf files are copied to the tmp dir to the conf dir. A backup of the old file is maintained\n   */\n  private void copyTmpConfFiles2Conf(File tmpconfDir) {\n    boolean status = false;\n    File confDir = new File(solrCore.getResourceLoader().getConfigDir());\n    for (File file : makeTmpConfDirFileList(tmpconfDir, new ArrayList<>())) {\n      File oldFile = new File(confDir, file.getPath().substring(tmpconfDir.getPath().length(), file.getPath().length()));\n      if (!oldFile.getParentFile().exists()) {\n        status = oldFile.getParentFile().mkdirs();\n        if (!status) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n                  \"Unable to mkdirs: \" + oldFile.getParentFile());\n        }\n      }\n      if (oldFile.exists()) {\n        File backupFile = new File(oldFile.getPath() + \".\" + getDateAsStr(new Date(oldFile.lastModified())));\n        if (!backupFile.getParentFile().exists()) {\n          status = backupFile.getParentFile().mkdirs();\n          if (!status) {\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                    \"Unable to mkdirs: \" + backupFile.getParentFile());\n          }\n        }\n        status = oldFile.renameTo(backupFile);\n        if (!status) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"Unable to rename: \" + oldFile + \" to: \" + backupFile);\n        }\n      }\n      status = file.renameTo(oldFile);\n      if (!status) {\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Unable to rename: \" + file + \" to: \" + oldFile);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":1,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/IndexFetcher#copyTmpConfFiles2Conf(File).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller#copyTmpConfFiles2Conf(File).mjava","sourceNew":"  /**\n   * The conf files are copied to the tmp dir to the conf dir. A backup of the old file is maintained\n   */\n  private void copyTmpConfFiles2Conf(File tmpconfDir) {\n    boolean status = false;\n    File confDir = new File(solrCore.getResourceLoader().getConfigDir());\n    for (File file : makeTmpConfDirFileList(tmpconfDir, new ArrayList<>())) {\n      File oldFile = new File(confDir, file.getPath().substring(tmpconfDir.getPath().length(), file.getPath().length()));\n      if (!oldFile.getParentFile().exists()) {\n        status = oldFile.getParentFile().mkdirs();\n        if (!status) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n                  \"Unable to mkdirs: \" + oldFile.getParentFile());\n        }\n      }\n      if (oldFile.exists()) {\n        File backupFile = new File(oldFile.getPath() + \".\" + getDateAsStr(new Date(oldFile.lastModified())));\n        if (!backupFile.getParentFile().exists()) {\n          status = backupFile.getParentFile().mkdirs();\n          if (!status) {\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                    \"Unable to mkdirs: \" + backupFile.getParentFile());\n          }\n        }\n        status = oldFile.renameTo(backupFile);\n        if (!status) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"Unable to rename: \" + oldFile + \" to: \" + backupFile);\n        }\n      }\n      status = file.renameTo(oldFile);\n      if (!status) {\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Unable to rename: \" + file + \" to: \" + oldFile);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * The conf files are copied to the tmp dir to the conf dir. A backup of the old file is maintained\n   */\n  private void copyTmpConfFiles2Conf(File tmpconfDir) {\n    boolean status = false;\n    File confDir = new File(solrCore.getResourceLoader().getConfigDir());\n    for (File file : makeTmpConfDirFileList(tmpconfDir, new ArrayList<>())) {\n      File oldFile = new File(confDir, file.getPath().substring(tmpconfDir.getPath().length(), file.getPath().length()));\n      if (!oldFile.getParentFile().exists()) {\n        status = oldFile.getParentFile().mkdirs();\n        if (!status) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n                  \"Unable to mkdirs: \" + oldFile.getParentFile());\n        }\n      }\n      if (oldFile.exists()) {\n        File backupFile = new File(oldFile.getPath() + \".\" + getDateAsStr(new Date(oldFile.lastModified())));\n        if (!backupFile.getParentFile().exists()) {\n          status = backupFile.getParentFile().mkdirs();\n          if (!status) {\n            throw new SolrException(ErrorCode.SERVER_ERROR,\n                    \"Unable to mkdirs: \" + backupFile.getParentFile());\n          }\n        }\n        status = oldFile.renameTo(backupFile);\n        if (!status) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"Unable to rename: \" + oldFile + \" to: \" + backupFile);\n        }\n      }\n      status = file.renameTo(oldFile);\n      if (!status) {\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n                \"Unable to rename: \" + file + \" to: \" + oldFile);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["20f6b7cff3771384f27af0f059795d7e64aff6b9"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}