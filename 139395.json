{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesConsumer#close().mjava","commits":[{"id":"e9eb6464bb91cd54f3151e5a0c18dde9311a60f1","date":1383143016,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesConsumer#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n    boolean success = false;\n    try {\n      if (meta != null) {\n        meta.writeVInt(-1); // write EOF marker\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(data, meta);\n      } else {\n        IOUtils.closeWhileHandlingException(data, meta);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f3b037cd083286b2af89f96e768f85dcd8072d6","date":1396337805,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesConsumer#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesConsumer#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    boolean success = false;\n    try {\n      if (meta != null) {\n        meta.writeVInt(-1); // write EOF marker\n        CodecUtil.writeFooter(meta); // write checksum\n      }\n      if (data != null) {\n        CodecUtil.writeFooter(data);\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(data, meta);\n      } else {\n        IOUtils.closeWhileHandlingException(data, meta);\n      }\n      data = meta = null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    boolean success = false;\n    try {\n      if (meta != null) {\n        meta.writeVInt(-1); // write EOF marker\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(data, meta);\n      } else {\n        IOUtils.closeWhileHandlingException(data, meta);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesConsumer#close().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesConsumer#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    boolean success = false;\n    try {\n      if (meta != null) {\n        meta.writeVInt(-1); // write EOF marker\n        CodecUtil.writeFooter(meta); // write checksum\n      }\n      if (data != null) {\n        CodecUtil.writeFooter(data);\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(data, meta);\n      } else {\n        IOUtils.closeWhileHandlingException(data, meta);\n      }\n      data = meta = null;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    boolean success = false;\n    try {\n      if (meta != null) {\n        meta.writeVInt(-1); // write EOF marker\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(data, meta);\n      } else {\n        IOUtils.closeWhileHandlingException(data, meta);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f18fb78980c55a781fd9fdc505634171059b1d","date":1567674462,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/DirectDocValuesConsumer#close().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void close() throws IOException {\n    boolean success = false;\n    try {\n      if (meta != null) {\n        meta.writeVInt(-1); // write EOF marker\n        CodecUtil.writeFooter(meta); // write checksum\n      }\n      if (data != null) {\n        CodecUtil.writeFooter(data);\n      }\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(data, meta);\n      } else {\n        IOUtils.closeWhileHandlingException(data, meta);\n      }\n      data = meta = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["e9eb6464bb91cd54f3151e5a0c18dde9311a60f1","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["e9eb6464bb91cd54f3151e5a0c18dde9311a60f1"],"e9eb6464bb91cd54f3151e5a0c18dde9311a60f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"74f18fb78980c55a781fd9fdc505634171059b1d":["1f3b037cd083286b2af89f96e768f85dcd8072d6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["74f18fb78980c55a781fd9fdc505634171059b1d"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5eb2511ababf862ea11e10761c70ee560cd84510","74f18fb78980c55a781fd9fdc505634171059b1d"],"e9eb6464bb91cd54f3151e5a0c18dde9311a60f1":["5eb2511ababf862ea11e10761c70ee560cd84510","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9eb6464bb91cd54f3151e5a0c18dde9311a60f1"],"74f18fb78980c55a781fd9fdc505634171059b1d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}