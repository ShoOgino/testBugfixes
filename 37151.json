{"path":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkBinaryDocValues(String,LeafReader,BinaryDocValues,Bits).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkBinaryDocValues(String,LeafReader,BinaryDocValues,Bits).mjava","pathOld":"/dev/null","sourceNew":"  private static void checkBinaryDocValues(String fieldName, LeafReader reader, BinaryDocValues dv, Bits docsWithField) {\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      final BytesRef term = dv.get(i);\n      assert term.isValid();\n      if (docsWithField.get(i) == false && term.length > 0) {\n        throw new RuntimeException(\"dv for field: \" + fieldName + \" is missing but has value=\" + term + \" for doc: \" + i);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8eb2b2b0fce1c4d4ca3b6c6eaa30498066be47d6","date":1425345513,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkBinaryDocValues(String,int,BinaryDocValues,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkBinaryDocValues(String,LeafReader,BinaryDocValues,Bits).mjava","sourceNew":"  private static void checkBinaryDocValues(String fieldName, int maxDoc, BinaryDocValues dv, Bits docsWithField) {\n    for (int i = 0; i < maxDoc; i++) {\n      final BytesRef term = dv.get(i);\n      assert term.isValid();\n      if (docsWithField.get(i) == false && term.length > 0) {\n        throw new RuntimeException(\"dv for field: \" + fieldName + \" is missing but has value=\" + term + \" for doc: \" + i);\n      }\n    }\n  }\n\n","sourceOld":"  private static void checkBinaryDocValues(String fieldName, LeafReader reader, BinaryDocValues dv, Bits docsWithField) {\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      final BytesRef term = dv.get(i);\n      assert term.isValid();\n      if (docsWithField.get(i) == false && term.length > 0) {\n        throw new RuntimeException(\"dv for field: \" + fieldName + \" is missing but has value=\" + term + \" for doc: \" + i);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/CheckIndex#checkBinaryDocValues(String,LeafReader,BinaryDocValues,Bits).mjava","sourceNew":null,"sourceOld":"  private static void checkBinaryDocValues(String fieldName, LeafReader reader, BinaryDocValues dv, Bits docsWithField) {\n    for (int i = 0; i < reader.maxDoc(); i++) {\n      final BytesRef term = dv.get(i);\n      assert term.isValid();\n      if (docsWithField.get(i) == false && term.length > 0) {\n        throw new RuntimeException(\"dv for field: \" + fieldName + \" is missing but has value=\" + term + \" for doc: \" + i);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8eb2b2b0fce1c4d4ca3b6c6eaa30498066be47d6":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["c9fb5f46e264daf5ba3860defe623a89d202dd87","8eb2b2b0fce1c4d4ca3b6c6eaa30498066be47d6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8eb2b2b0fce1c4d4ca3b6c6eaa30498066be47d6"]},"commit2Childs":{"8eb2b2b0fce1c4d4ca3b6c6eaa30498066be47d6":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["8eb2b2b0fce1c4d4ca3b6c6eaa30498066be47d6","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}