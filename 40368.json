{"path":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/QueryTemplateManager#transformCriteria(Properties,Transformer,Result).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/QueryTemplateManager#transformCriteria(Properties,Transformer,Result).mjava","pathOld":"contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/QueryTemplateManager#transformCriteria(Properties,Transformer,Result).mjava","sourceNew":"\tpublic static void transformCriteria(Properties formProperties, Transformer transformer, Result result) throws SAXException, IOException, ParserConfigurationException, TransformerException\n\t{\n        dbf.setNamespaceAware(true);\n        \n\t    //Create an XML document representing the search index document.\n\t\tDocumentBuilder db = dbf.newDocumentBuilder ();\n\t\torg.w3c.dom.Document doc = db.newDocument ();\n\t\tElement root = doc.createElement (\"Document\");\n\t\tdoc.appendChild (root);\n\t\t\n\t\tEnumeration keysEnum = formProperties.keys();\n\t\twhile(keysEnum.hasMoreElements())\n\t\t{\n\t\t    String propName=(String) keysEnum.nextElement();\n\t\t    String value=formProperties.getProperty(propName);\n    \t\tif((value!=null)&&(value.length()>0))\n    \t\t{\n    \t\t    DOMUtils.insertChild(root,propName,value);    \t\t\t\n    \t\t}\n\t\t}\t\t\n\t\t//Use XSLT to to transform into an XML query string using the  queryTemplate\n\t\tDOMSource xml=new DOMSource(doc);\n\t\ttransformer.transform(xml,result);\t\t\n\t}\n\n","sourceOld":"\tpublic static void transformCriteria(Properties formProperties, Transformer transformer, Result result) throws SAXException, IOException, ParserConfigurationException, TransformerException\n\t{\n        dbf.setNamespaceAware(true);\n        \n\t    //Create an XML document representing the search index document.\n\t\tDocumentBuilder db = dbf.newDocumentBuilder ();\n\t\torg.w3c.dom.Document doc = db.newDocument ();\n\t\tElement root = doc.createElement (\"Document\");\n\t\tdoc.appendChild (root);\n\t\t\n\t\tEnumeration keysEnum = formProperties.keys();\n\t\twhile(keysEnum.hasMoreElements())\n\t\t{\n\t\t    String propName=(String) keysEnum.nextElement();\n\t\t    String value=formProperties.getProperty(propName);\n    \t\tif((value!=null)&&(value.length()>0))\n    \t\t{\n    \t\t    DOMUtils.insertChild(root,propName,value);    \t\t\t\n    \t\t}\n\t\t}\t\t\n\t\t//Use XSLT to to transform into an XML query string using the  queryTemplate\n\t\tDOMSource xml=new DOMSource(doc);\n\t\ttransformer.transform(xml,result);\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2","date":1313460667,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/QueryTemplateManager#transformCriteria(Properties,Transformer,Result).mjava","pathOld":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/QueryTemplateManager#transformCriteria(Properties,Transformer,Result).mjava","sourceNew":"  public static void transformCriteria(Properties formProperties, Transformer transformer, Result result)\n      throws SAXException, IOException, ParserConfigurationException, TransformerException {\n    dbf.setNamespaceAware(true);\n\n    //Create an XML document representing the search index document.\n    DocumentBuilder db = dbf.newDocumentBuilder();\n    org.w3c.dom.Document doc = db.newDocument();\n    Element root = doc.createElement(\"Document\");\n    doc.appendChild(root);\n\n    Enumeration keysEnum = formProperties.keys();\n    while (keysEnum.hasMoreElements()) {\n      String propName = (String) keysEnum.nextElement();\n      String value = formProperties.getProperty(propName);\n      if ((value != null) && (value.length() > 0)) {\n        DOMUtils.insertChild(root, propName, value);\n      }\n    }\n    //Use XSLT to to transform into an XML query string using the  queryTemplate\n    DOMSource xml = new DOMSource(doc);\n    transformer.transform(xml, result);\n  }\n\n","sourceOld":"\tpublic static void transformCriteria(Properties formProperties, Transformer transformer, Result result) throws SAXException, IOException, ParserConfigurationException, TransformerException\n\t{\n        dbf.setNamespaceAware(true);\n        \n\t    //Create an XML document representing the search index document.\n\t\tDocumentBuilder db = dbf.newDocumentBuilder ();\n\t\torg.w3c.dom.Document doc = db.newDocument ();\n\t\tElement root = doc.createElement (\"Document\");\n\t\tdoc.appendChild (root);\n\t\t\n\t\tEnumeration keysEnum = formProperties.keys();\n\t\twhile(keysEnum.hasMoreElements())\n\t\t{\n\t\t    String propName=(String) keysEnum.nextElement();\n\t\t    String value=formProperties.getProperty(propName);\n    \t\tif((value!=null)&&(value.length()>0))\n    \t\t{\n    \t\t    DOMUtils.insertChild(root,propName,value);    \t\t\t\n    \t\t}\n\t\t}\t\t\n\t\t//Use XSLT to to transform into an XML query string using the  queryTemplate\n\t\tDOMSource xml=new DOMSource(doc);\n\t\ttransformer.transform(xml,result);\t\t\n\t}\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"251550f5d19b526a76f8c5126ae7bb2d22cf8935","date":1315202008,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/xml/QueryTemplateManager#transformCriteria(Properties,Transformer,Result).mjava","pathOld":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/QueryTemplateManager#transformCriteria(Properties,Transformer,Result).mjava","sourceNew":"  public static void transformCriteria(Properties formProperties, Transformer transformer, Result result)\n      throws SAXException, IOException, ParserConfigurationException, TransformerException {\n    dbf.setNamespaceAware(true);\n\n    //Create an XML document representing the search index document.\n    DocumentBuilder db = dbf.newDocumentBuilder();\n    org.w3c.dom.Document doc = db.newDocument();\n    Element root = doc.createElement(\"Document\");\n    doc.appendChild(root);\n\n    Enumeration keysEnum = formProperties.keys();\n    while (keysEnum.hasMoreElements()) {\n      String propName = (String) keysEnum.nextElement();\n      String value = formProperties.getProperty(propName);\n      if ((value != null) && (value.length() > 0)) {\n        DOMUtils.insertChild(root, propName, value);\n      }\n    }\n    //Use XSLT to to transform into an XML query string using the  queryTemplate\n    DOMSource xml = new DOMSource(doc);\n    transformer.transform(xml, result);\n  }\n\n","sourceOld":"  public static void transformCriteria(Properties formProperties, Transformer transformer, Result result)\n      throws SAXException, IOException, ParserConfigurationException, TransformerException {\n    dbf.setNamespaceAware(true);\n\n    //Create an XML document representing the search index document.\n    DocumentBuilder db = dbf.newDocumentBuilder();\n    org.w3c.dom.Document doc = db.newDocument();\n    Element root = doc.createElement(\"Document\");\n    doc.appendChild(root);\n\n    Enumeration keysEnum = formProperties.keys();\n    while (keysEnum.hasMoreElements()) {\n      String propName = (String) keysEnum.nextElement();\n      String value = formProperties.getProperty(propName);\n      if ((value != null) && (value.length() > 0)) {\n        DOMUtils.insertChild(root, propName, value);\n      }\n    }\n    //Use XSLT to to transform into an XML query string using the  queryTemplate\n    DOMSource xml = new DOMSource(doc);\n    transformer.transform(xml, result);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}