{"path":"solr/contrib/analytics/src/java/org/apache/solr/analytics/function/reduction/data/SortedListCollector#get(int).mjava","commits":[{"id":"c495edcca4d0bc51bf62d9be3527c87bf9b44ded","date":1498673617,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/contrib/analytics/src/java/org/apache/solr/analytics/function/reduction/data/SortedListCollector#get(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Once the data has been set by either {@link #setData} or {@link #setMergedData},\n   * this returns the value at the given sorted index. \n   * \n   * Only the indices specified by {@link #calcMedian}, {@link #calcPercentile}, {@link #calcOrdinal}, and {@link #calcReverseOrdinal}\n   * will contain valid data. All other indices may return unsorted data.\n   * \n   * @param index the index of the sorted data to return\n   */\n  public T get(int index) {\n    return list.get(index);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/contrib/analytics/src/java/org/apache/solr/analytics/function/reduction/data/SortedListCollector#get(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Once the data has been set by either {@link #setData} or {@link #setMergedData},\n   * this returns the value at the given sorted index. \n   * \n   * Only the indices specified by {@link #calcMedian}, {@link #calcPercentile}, {@link #calcOrdinal}, and {@link #calcReverseOrdinal}\n   * will contain valid data. All other indices may return unsorted data.\n   * \n   * @param index the index of the sorted data to return\n   */\n  public T get(int index) {\n    return list.get(index);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/contrib/analytics/src/java/org/apache/solr/analytics/function/reduction/data/SortedListCollector#get(int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Once the data has been set by either {@link #setData} or {@link #setMergedData},\n   * this returns the value at the given sorted index. \n   * \n   * Only the indices specified by {@link #calcMedian}, {@link #calcPercentile}, {@link #calcOrdinal}, and {@link #calcReverseOrdinal}\n   * will contain valid data. All other indices may return unsorted data.\n   * \n   * @param index the index of the sorted data to return\n   */\n  public T get(int index) {\n    return list.get(index);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bd4c6955956e76c96eb12dfe64108ed03522983","date":1508262722,"type":3,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analytics/src/java/org/apache/solr/analytics/function/reduction/data/SortedListCollector#get(int).mjava","pathOld":"solr/contrib/analytics/src/java/org/apache/solr/analytics/function/reduction/data/SortedListCollector#get(int).mjava","sourceNew":"  /**\n   * Once the data has been set by either {@link #setData} or {@link #setMergedData},\n   * this returns the value at the given sorted index. \n   * \n   * Only the indices specified by {@link #calcMedian}, {@link #calcPercentile}, and {@link #calcOrdinal}\n   * will contain valid data. All other indices may return unsorted data.\n   * \n   * @param index the index of the sorted data to return\n   */\n  public T get(int index) {\n    return list.get(index);\n  }\n\n","sourceOld":"  /**\n   * Once the data has been set by either {@link #setData} or {@link #setMergedData},\n   * this returns the value at the given sorted index. \n   * \n   * Only the indices specified by {@link #calcMedian}, {@link #calcPercentile}, {@link #calcOrdinal}, and {@link #calcReverseOrdinal}\n   * will contain valid data. All other indices may return unsorted data.\n   * \n   * @param index the index of the sorted data to return\n   */\n  public T get(int index) {\n    return list.get(index);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e4e64b7199d2f2a17be7f3926c7532553910dce","date":1564342581,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/contrib/analytics/src/java/org/apache/solr/analytics/function/reduction/data/SortedListCollector#get(int).mjava","pathOld":"solr/contrib/analytics/src/java/org/apache/solr/analytics/function/reduction/data/SortedListCollector#get(int).mjava","sourceNew":"  /**\n   * Once the data has been set by either {@link #setData} or {@link #setMergedData},\n   * this returns the value at the given sorted index.\n   *\n   * Only the indices specified by {@link #calcMedian}, {@link #calcPercentile}, and {@link #calcOrdinal}\n   * will contain valid data. All other indices may return unsorted data.\n   *\n   * @param index the index of the sorted data to return\n   */\n  public T get(int index) {\n    return list.get(index);\n  }\n\n","sourceOld":"  /**\n   * Once the data has been set by either {@link #setData} or {@link #setMergedData},\n   * this returns the value at the given sorted index. \n   * \n   * Only the indices specified by {@link #calcMedian}, {@link #calcPercentile}, and {@link #calcOrdinal}\n   * will contain valid data. All other indices may return unsorted data.\n   * \n   * @param index the index of the sorted data to return\n   */\n  public T get(int index) {\n    return list.get(index);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/contrib/analytics/src/java/org/apache/solr/analytics/function/reduction/data/SortedListCollector#get(int).mjava","pathOld":"solr/contrib/analytics/src/java/org/apache/solr/analytics/function/reduction/data/SortedListCollector#get(int).mjava","sourceNew":"  /**\n   * Once the data has been set by either {@link #setData} or {@link #setMergedData},\n   * this returns the value at the given sorted index.\n   *\n   * Only the indices specified by {@link #calcMedian}, {@link #calcPercentile}, and {@link #calcOrdinal}\n   * will contain valid data. All other indices may return unsorted data.\n   *\n   * @param index the index of the sorted data to return\n   */\n  public T get(int index) {\n    return list.get(index);\n  }\n\n","sourceOld":"  /**\n   * Once the data has been set by either {@link #setData} or {@link #setMergedData},\n   * this returns the value at the given sorted index. \n   * \n   * Only the indices specified by {@link #calcMedian}, {@link #calcPercentile}, and {@link #calcOrdinal}\n   * will contain valid data. All other indices may return unsorted data.\n   * \n   * @param index the index of the sorted data to return\n   */\n  public T get(int index) {\n    return list.get(index);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30c8e5574b55d57947e989443dfde611646530ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","28288370235ed02234a64753cdbf0c6ec096304a"],"c495edcca4d0bc51bf62d9be3527c87bf9b44ded":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c495edcca4d0bc51bf62d9be3527c87bf9b44ded"],"f8061ddd97f3352007d927dae445884a6f3d857b":["3bd4c6955956e76c96eb12dfe64108ed03522983","1e4e64b7199d2f2a17be7f3926c7532553910dce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e4e64b7199d2f2a17be7f3926c7532553910dce"],"3bd4c6955956e76c96eb12dfe64108ed03522983":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30c8e5574b55d57947e989443dfde611646530ee","c495edcca4d0bc51bf62d9be3527c87bf9b44ded","28288370235ed02234a64753cdbf0c6ec096304a"],"30c8e5574b55d57947e989443dfde611646530ee":[],"c495edcca4d0bc51bf62d9be3527c87bf9b44ded":["28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["30c8e5574b55d57947e989443dfde611646530ee","3bd4c6955956e76c96eb12dfe64108ed03522983"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"3bd4c6955956e76c96eb12dfe64108ed03522983":["1e4e64b7199d2f2a17be7f3926c7532553910dce","f8061ddd97f3352007d927dae445884a6f3d857b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}