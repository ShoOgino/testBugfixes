{"path":"lucene/facet/src/java/org/apache/lucene/facet/simple/TaxonomyFacetSumFloatAssociations#getSpecificValue(String,String...).mjava","commits":[{"id":"441c188ff9fd7da36e0e4d8a9b51cebe63b31192","date":1384814749,"type":2,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/TaxonomyFacetSumFloatAssociations#getSpecificValue(String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/SumFloatAssociationFacets#getSpecificValue(String,String...).mjava","sourceNew":"  /** Return the count for a specific path.  Returns -1 if\n   *  this path doesn't exist, else the count. */\n  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    verifyDim(dim);\n    int ord = taxoReader.getOrdinal(FacetLabel.create(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return values[ord];\n  }\n\n","sourceOld":"  /** Return the count for a specific path.  Returns -1 if\n   *  this path doesn't exist, else the count. */\n  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    verifyDim(dim);\n    int ord = taxoReader.getOrdinal(FacetLabel.create(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return values[ord];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/TaxonomyFacetSumFloatAssociations#getSpecificValue(String,String...).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/TaxonomyFacetSumFloatAssociations#getSpecificValue(String,String...).mjava","sourceNew":"  /** Return the count for a specific path.  Returns -1 if\n   *  this path doesn't exist, else the count. */\n  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    verifyDim(dim);\n    int ord = taxoReader.getOrdinal(FacetLabel.create(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return values[ord];\n  }\n\n","sourceOld":"  /** Return the count for a specific path.  Returns -1 if\n   *  this path doesn't exist, else the count. */\n  @Override\n  public Number getSpecificValue(String dim, String... path) throws IOException {\n    verifyDim(dim);\n    int ord = taxoReader.getOrdinal(FacetLabel.create(dim, path));\n    if (ord < 0) {\n      return -1;\n    }\n    return values[ord];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["441c188ff9fd7da36e0e4d8a9b51cebe63b31192"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"441c188ff9fd7da36e0e4d8a9b51cebe63b31192":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817","441c188ff9fd7da36e0e4d8a9b51cebe63b31192"],"21d36d0db865f7b84026b447bec653469a6e66df":[],"441c188ff9fd7da36e0e4d8a9b51cebe63b31192":["21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}