{"path":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","sourceNew":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createNormalizedWeight(query), doc);\n  }\n\n","sourceOld":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createNormalizedWeight(query), doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","sourceNew":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createNormalizedWeight(query, true), doc);\n  }\n\n","sourceOld":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createNormalizedWeight(query), doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"954e59be3da8dc1b046646ad7af4b466852009d3","date":1423482367,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","sourceNew":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createNormalizedWeight(query, PostingsEnum.FLAG_FREQS), doc);\n  }\n\n","sourceOld":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createNormalizedWeight(query, true), doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a47d642ab24da1a811adce4bda9cc52c520ca13","date":1423483323,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","sourceNew":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createNormalizedWeight(query, true), doc);\n  }\n\n","sourceOld":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createNormalizedWeight(query, PostingsEnum.FLAG_FREQS), doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","sourceNew":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createNormalizedWeight(query, ScoreMode.COMPLETE), doc);\n  }\n\n","sourceOld":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createNormalizedWeight(query, true), doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","sourceNew":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createNormalizedWeight(query, ScoreMode.COMPLETE), doc);\n  }\n\n","sourceOld":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createNormalizedWeight(query, true), doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"475584d5e08a22ad3fc7babefe006d77bc744567","date":1523282824,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","sourceNew":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    query = rewrite(query);\n    return explain(createWeight(query, ScoreMode.COMPLETE, 1), doc);\n  }\n\n","sourceOld":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createNormalizedWeight(query, ScoreMode.COMPLETE), doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d58e44159788900f4a2113b84463dc3fbbf80f20","date":1523319203,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#explain(Query,int).mjava","sourceNew":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    query = rewrite(query);\n    return explain(createWeight(query, ScoreMode.COMPLETE, 1), doc);\n  }\n\n","sourceOld":"  /** Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>query</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   */\n  public Explanation explain(Query query, int doc) throws IOException {\n    return explain(createNormalizedWeight(query, ScoreMode.COMPLETE), doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6a47d642ab24da1a811adce4bda9cc52c520ca13":["954e59be3da8dc1b046646ad7af4b466852009d3"],"fb17639909a369c1e64866842e5c213440acc17e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d58e44159788900f4a2113b84463dc3fbbf80f20":["417142ff08fda9cf0b72d5133e63097a166c6458","475584d5e08a22ad3fc7babefe006d77bc744567"],"475584d5e08a22ad3fc7babefe006d77bc744567":["417142ff08fda9cf0b72d5133e63097a166c6458"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9fc47cb7b4346802411bb432f501ed0673d7119e":["6a47d642ab24da1a811adce4bda9cc52c520ca13"],"954e59be3da8dc1b046646ad7af4b466852009d3":["fb17639909a369c1e64866842e5c213440acc17e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d58e44159788900f4a2113b84463dc3fbbf80f20"],"417142ff08fda9cf0b72d5133e63097a166c6458":["6a47d642ab24da1a811adce4bda9cc52c520ca13","9fc47cb7b4346802411bb432f501ed0673d7119e"]},"commit2Childs":{"6a47d642ab24da1a811adce4bda9cc52c520ca13":["9fc47cb7b4346802411bb432f501ed0673d7119e","417142ff08fda9cf0b72d5133e63097a166c6458"],"fb17639909a369c1e64866842e5c213440acc17e":["954e59be3da8dc1b046646ad7af4b466852009d3"],"d58e44159788900f4a2113b84463dc3fbbf80f20":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"475584d5e08a22ad3fc7babefe006d77bc744567":["d58e44159788900f4a2113b84463dc3fbbf80f20"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fb17639909a369c1e64866842e5c213440acc17e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"954e59be3da8dc1b046646ad7af4b466852009d3":["6a47d642ab24da1a811adce4bda9cc52c520ca13"],"417142ff08fda9cf0b72d5133e63097a166c6458":["d58e44159788900f4a2113b84463dc3fbbf80f20","475584d5e08a22ad3fc7babefe006d77bc744567"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}