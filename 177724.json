{"path":"lucene/core/src/test/org/apache/lucene/util/packed/TestEliasFanoDocIdSet#copyOf(BitSet,int).mjava","commits":[{"id":"7581da3051efe8071ae92ac7eca27a270bc4611e","date":1373613227,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/packed/TestEliasFanoDocIdSet#copyOf(BitSet,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public EliasFanoDocIdSet copyOf(final BitSet bs, final int numBits) throws IOException {\n    final EliasFanoDocIdSet set = new EliasFanoDocIdSet(bs.cardinality(), numBits - 1);\n    set.encodeFromDisi(new DocIdSetIterator() {\n      int doc = -1;\n\n      @Override\n      public int nextDoc() throws IOException {\n        doc = bs.nextSetBit(doc + 1);\n        if (doc == -1) {\n          doc = NO_MORE_DOCS;\n        }\n        assert doc < numBits;\n        return doc;\n      }\n      \n      @Override\n      public int docID() {\n        return doc;\n      }\n      \n      @Override\n      public long cost() {\n        return bs.cardinality();\n      }\n      \n      @Override\n      public int advance(int target) throws IOException {\n        return slowAdvance(target);\n      }\n    });\n    return set;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/packed/TestEliasFanoDocIdSet#copyOf(BitSet,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public EliasFanoDocIdSet copyOf(final BitSet bs, final int numBits) throws IOException {\n    final EliasFanoDocIdSet set = new EliasFanoDocIdSet(bs.cardinality(), numBits - 1);\n    set.encodeFromDisi(new DocIdSetIterator() {\n      int doc = -1;\n\n      @Override\n      public int nextDoc() throws IOException {\n        doc = bs.nextSetBit(doc + 1);\n        if (doc == -1) {\n          doc = NO_MORE_DOCS;\n        }\n        assert doc < numBits;\n        return doc;\n      }\n      \n      @Override\n      public int docID() {\n        return doc;\n      }\n      \n      @Override\n      public long cost() {\n        return bs.cardinality();\n      }\n      \n      @Override\n      public int advance(int target) throws IOException {\n        return slowAdvance(target);\n      }\n    });\n    return set;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"556259cdb46d4f7fb27f4688c4efcb3eaee4a550","date":1432028057,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/util/packed/TestEliasFanoDocIdSet#copyOf(BitSet,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public EliasFanoDocIdSet copyOf(final BitSet bs, final int numBits) throws IOException {\n    final EliasFanoDocIdSet set = new EliasFanoDocIdSet(bs.cardinality(), numBits - 1);\n    set.encodeFromDisi(new DocIdSetIterator() {\n      int doc = -1;\n\n      @Override\n      public int nextDoc() throws IOException {\n        doc = bs.nextSetBit(doc + 1);\n        if (doc == -1) {\n          doc = NO_MORE_DOCS;\n        }\n        assert doc < numBits;\n        return doc;\n      }\n      \n      @Override\n      public int docID() {\n        return doc;\n      }\n      \n      @Override\n      public long cost() {\n        return bs.cardinality();\n      }\n      \n      @Override\n      public int advance(int target) throws IOException {\n        return slowAdvance(target);\n      }\n    });\n    return set;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"556259cdb46d4f7fb27f4688c4efcb3eaee4a550":["7581da3051efe8071ae92ac7eca27a270bc4611e"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7581da3051efe8071ae92ac7eca27a270bc4611e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7581da3051efe8071ae92ac7eca27a270bc4611e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["556259cdb46d4f7fb27f4688c4efcb3eaee4a550"]},"commit2Childs":{"556259cdb46d4f7fb27f4688c4efcb3eaee4a550":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","7581da3051efe8071ae92ac7eca27a270bc4611e"],"7581da3051efe8071ae92ac7eca27a270bc4611e":["556259cdb46d4f7fb27f4688c4efcb3eaee4a550","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}