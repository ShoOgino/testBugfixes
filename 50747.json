{"path":"src/java/org/apache/lucene/index/IndexWriter#shouldClose().mjava","commits":[{"id":"c619aff1490fbcbfb8aee81049da5e5120a986d6","date":1217432296,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#shouldClose().mjava","pathOld":"/dev/null","sourceNew":"  // Returns true if this thread should attempt to close, or\n  // false if IndexWriter is now closed; else, waits until\n  // another thread finishes closing\n  synchronized private boolean shouldClose() {\n    while(true) {\n      if (!closed) {\n        if (!closing) {\n          closing = true;\n          return true;\n        } else {\n          // Another thread is presently trying to close;\n          // wait until it finishes one way (closes\n          // successfully) or another (fails to close)\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n          }\n        }\n      } else\n        return false;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f241b963c5bcd6c2293a928059dd2d64988a6042"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2586f96f60332eb97ecd2934b0763791462568b2","date":1220116589,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#shouldClose().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#shouldClose().mjava","sourceNew":"  // Returns true if this thread should attempt to close, or\n  // false if IndexWriter is now closed; else, waits until\n  // another thread finishes closing\n  synchronized private boolean shouldClose() {\n    while(true) {\n      if (!closed) {\n        if (!closing) {\n          closing = true;\n          return true;\n        } else {\n          // Another thread is presently trying to close;\n          // wait until it finishes one way (closes\n          // successfully) or another (fails to close)\n          doWait();\n        }\n      } else\n        return false;\n    }\n  }\n\n","sourceOld":"  // Returns true if this thread should attempt to close, or\n  // false if IndexWriter is now closed; else, waits until\n  // another thread finishes closing\n  synchronized private boolean shouldClose() {\n    while(true) {\n      if (!closed) {\n        if (!closing) {\n          closing = true;\n          return true;\n        } else {\n          // Another thread is presently trying to close;\n          // wait until it finishes one way (closes\n          // successfully) or another (fails to close)\n          try {\n            wait();\n          } catch (InterruptedException ie) {\n          }\n        }\n      } else\n        return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#shouldClose().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#shouldClose().mjava","sourceNew":"  // Returns true if this thread should attempt to close, or\n  // false if IndexWriter is now closed; else, waits until\n  // another thread finishes closing\n  synchronized private boolean shouldClose() {\n    while(true) {\n      if (!closed) {\n        if (!closing) {\n          closing = true;\n          return true;\n        } else {\n          // Another thread is presently trying to close;\n          // wait until it finishes one way (closes\n          // successfully) or another (fails to close)\n          doWait();\n        }\n      } else\n        return false;\n    }\n  }\n\n","sourceOld":"  // Returns true if this thread should attempt to close, or\n  // false if IndexWriter is now closed; else, waits until\n  // another thread finishes closing\n  synchronized private boolean shouldClose() {\n    while(true) {\n      if (!closed) {\n        if (!closing) {\n          closing = true;\n          return true;\n        } else {\n          // Another thread is presently trying to close;\n          // wait until it finishes one way (closes\n          // successfully) or another (fails to close)\n          doWait();\n        }\n      } else\n        return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"c619aff1490fbcbfb8aee81049da5e5120a986d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2586f96f60332eb97ecd2934b0763791462568b2":["c619aff1490fbcbfb8aee81049da5e5120a986d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["2586f96f60332eb97ecd2934b0763791462568b2"]},"commit2Childs":{"c619aff1490fbcbfb8aee81049da5e5120a986d6":["2586f96f60332eb97ecd2934b0763791462568b2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c619aff1490fbcbfb8aee81049da5e5120a986d6"],"2586f96f60332eb97ecd2934b0763791462568b2":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}