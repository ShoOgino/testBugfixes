{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/TestBatchUpdate#doIt(HttpSolrClient).mjava","commits":[{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestBatchUpdate#doIt(HttpSolrClient).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/TestBatchUpdate#doIt(HttpSolrServer).mjava","sourceNew":"  private void doIt(HttpSolrClient client) throws SolrServerException, IOException {\n    final int[] counter = new int[1];\n    counter[0] = 0;\n    client.add(new Iterator<SolrInputDocument>() {\n\n      @Override\n      public boolean hasNext() {\n        return counter[0] < numdocs;\n      }\n\n      @Override\n      public SolrInputDocument next() {\n        SolrInputDocument doc = new SolrInputDocument();\n        doc.addField(\"id\", \"\" + (++counter[0]));\n        doc.addField(\"cat\", \"foocat\");\n        return doc;\n      }\n\n      @Override\n      public void remove() {\n        //do nothing\n\n      }\n    });\n    client.commit();\n    SolrQuery query = new SolrQuery(\"*:*\");\n    QueryResponse response = client.query(query);\n    assertEquals(0, response.getStatus());\n    assertEquals(numdocs, response.getResults().getNumFound());\n  }\n\n","sourceOld":"  private void doIt(HttpSolrServer httpSolrServer) throws SolrServerException, IOException {\n    final int[] counter = new int[1];\n    counter[0] = 0;\n    httpSolrServer.add(new Iterator<SolrInputDocument>() {\n\n      @Override\n      public boolean hasNext() {\n        return counter[0] < numdocs;\n      }\n\n      @Override\n      public SolrInputDocument next() {\n        SolrInputDocument doc = new SolrInputDocument();\n        doc.addField(\"id\", \"\" + (++counter[0]));\n        doc.addField(\"cat\", \"foocat\");\n        return doc;\n      }\n\n      @Override\n      public void remove() {\n        //do nothing\n\n      }\n    });\n    httpSolrServer.commit();\n    SolrQuery query = new SolrQuery(\"*:*\");\n    QueryResponse response = httpSolrServer.query(query);\n    assertEquals(0, response.getStatus());\n    assertEquals(numdocs, response.getResults().getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}