{"path":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testSynonymQueryStyle().mjava","commits":[{"id":"47d74fab5d64854ddafa81b65ed399b192f2d947","date":1512411916,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testSynonymQueryStyle().mjava","pathOld":"/dev/null","sourceNew":"  public void testSynonymQueryStyle() throws Exception {\n\n    Query q = QParser.getParser(\"tabby\", req(params(\"df\", \"t_pick_best_foo\"))).getQuery();\n    assertEquals(\"(t_pick_best_foo:tabbi | t_pick_best_foo:cat | t_pick_best_foo:felin | t_pick_best_foo:anim)\", q.toString());\n\n    q = QParser.getParser(\"tabby\", req(params(\"df\", \"t_as_distinct_foo\"))).getQuery();\n    assertEquals(\"t_as_distinct_foo:tabbi t_as_distinct_foo:cat t_as_distinct_foo:felin t_as_distinct_foo:anim\", q.toString());\n\n    /*confirm autoGeneratePhraseQueries always builds OR queries*/\n    q = QParser.getParser(\"jeans\",  req(params(\"df\", \"t_as_distinct_foo\", \"sow\", \"false\"))).getQuery();\n    assertEquals(\"(t_as_distinct_foo:\\\"denim pant\\\" t_as_distinct_foo:jean)\", q.toString());\n\n    q = QParser.getParser(\"jeans\",  req(params(\"df\", \"t_pick_best_foo\", \"sow\", \"false\"))).getQuery();\n    assertEquals(\"(t_pick_best_foo:\\\"denim pant\\\" t_pick_best_foo:jean)\", q.toString());\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ac99c5ad157ae4ccdb201f140463a90f12f07b3","date":1582540181,"type":3,"author":"Alessandro Benedetti","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testSynonymQueryStyle().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestSolrQueryParser#testSynonymQueryStyle().mjava","sourceNew":"  public void testSynonymQueryStyle() throws Exception {\n\n    Query q = QParser.getParser(\"tabby\", req(params(\"df\", \"t_pick_best_foo\"))).getQuery();\n    assertEquals(\"(t_pick_best_foo:tabbi | t_pick_best_foo:cat | t_pick_best_foo:felin | t_pick_best_foo:anim)\", q.toString());\n\n    q = QParser.getParser(\"tabby\", req(params(\"df\", \"t_as_distinct_foo\"))).getQuery();\n    assertEquals(\"t_as_distinct_foo:tabbi t_as_distinct_foo:cat t_as_distinct_foo:felin t_as_distinct_foo:anim\", q.toString());\n\n    /*confirm autoGeneratePhraseQueries always builds OR queries*/\n    q = QParser.getParser(\"jeans\",  req(params(\"df\", \"t_as_distinct_foo\", \"sow\", \"false\"))).getQuery();\n    assertEquals(\"(t_as_distinct_foo:\\\"denim pant\\\" t_as_distinct_foo:jean)\", q.toString());\n\n    q = QParser.getParser(\"jeans\",  req(params(\"df\", \"t_pick_best_foo\", \"sow\", \"false\"))).getQuery();\n    assertEquals(\"(t_pick_best_foo:\\\"denim pant\\\" | t_pick_best_foo:jean)\", q.toString());\n  }\n\n","sourceOld":"  public void testSynonymQueryStyle() throws Exception {\n\n    Query q = QParser.getParser(\"tabby\", req(params(\"df\", \"t_pick_best_foo\"))).getQuery();\n    assertEquals(\"(t_pick_best_foo:tabbi | t_pick_best_foo:cat | t_pick_best_foo:felin | t_pick_best_foo:anim)\", q.toString());\n\n    q = QParser.getParser(\"tabby\", req(params(\"df\", \"t_as_distinct_foo\"))).getQuery();\n    assertEquals(\"t_as_distinct_foo:tabbi t_as_distinct_foo:cat t_as_distinct_foo:felin t_as_distinct_foo:anim\", q.toString());\n\n    /*confirm autoGeneratePhraseQueries always builds OR queries*/\n    q = QParser.getParser(\"jeans\",  req(params(\"df\", \"t_as_distinct_foo\", \"sow\", \"false\"))).getQuery();\n    assertEquals(\"(t_as_distinct_foo:\\\"denim pant\\\" t_as_distinct_foo:jean)\", q.toString());\n\n    q = QParser.getParser(\"jeans\",  req(params(\"df\", \"t_pick_best_foo\", \"sow\", \"false\"))).getQuery();\n    assertEquals(\"(t_pick_best_foo:\\\"denim pant\\\" t_pick_best_foo:jean)\", q.toString());\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3ac99c5ad157ae4ccdb201f140463a90f12f07b3":["47d74fab5d64854ddafa81b65ed399b192f2d947"],"47d74fab5d64854ddafa81b65ed399b192f2d947":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3ac99c5ad157ae4ccdb201f140463a90f12f07b3"]},"commit2Childs":{"3ac99c5ad157ae4ccdb201f140463a90f12f07b3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"47d74fab5d64854ddafa81b65ed399b192f2d947":["3ac99c5ad157ae4ccdb201f140463a90f12f07b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["47d74fab5d64854ddafa81b65ed399b192f2d947"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}