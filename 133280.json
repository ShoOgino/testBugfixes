{"path":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetExtrasCloudTest#limitTest().mjava","commits":[{"id":"3bd4c6955956e76c96eb12dfe64108ed03522983","date":1508262722,"type":0,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetExtrasCloudTest#limitTest().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void limitTest() throws Exception { \n    String[] params = new String[] {\n        \"o.lr.s.mean\", \"mean(int_id)\",\n        \"o.lr.s.median\", \"median(int_id)\",\n        \"o.lr.s.count\", \"count(int_id)\",\n        \"o.lr.s.percentile_20\", \"percentile(20,int_id)\",\n        \"o.lr.ff.long_ld\", \"long_ld\",\n        \"o.lr.ff.long_ld.ss\", \"mean\",\n        \"o.lr.ff.long_ld.sd\", \"asc\",\n        \"o.lr.ff.long_ld.limit\", \"5\",\n        \"o.lr.ff.float_fd\", \"float_fd\",\n        \"o.lr.ff.float_fd.ss\", \"median\",\n        \"o.lr.ff.float_fd.sd\", \"desc\",\n        \"o.lr.ff.float_fd.limit\", \"3\",\n        \"o.lr.ff.double_dd\", \"double_dd\",\n        \"o.lr.ff.double_dd.ss\", \"count\",\n        \"o.lr.ff.double_dd.sd\", \"asc\",\n        \"o.lr.ff.double_dd.limit\", \"7\",\n        \"o.lr.ff.string_sd\", \"string_sd\",\n        \"o.lr.ff.string_sd.ss\", \"percentile_20\",\n        \"o.lr.ff.string_sd.sd\", \"desc\",\n        \"o.lr.ff.string_sd.limit\", \"1\"\n    };\n    \n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n\n    Collection<Double> lon = getValueList(response, \"lr\", \"fieldFacets\", \"long_ld\", \"mean\", false);\n    assertEquals(responseStr, lon.size(),5);\n    Collection<Double> flo = getValueList(response, \"lr\", \"fieldFacets\", \"float_fd\", \"median\", false);\n    assertEquals(responseStr, flo.size(),3);\n    Collection<Long> doub = getValueList(response, \"lr\", \"fieldFacets\", \"double_dd\", \"count\", false);\n    assertEquals(responseStr, doub.size(),7);\n    Collection<Integer> string = getValueList(response, \"lr\", \"fieldFacets\", \"string_sd\", \"percentile_20\", false);\n    assertEquals(responseStr, string.size(),1);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e4e64b7199d2f2a17be7f3926c7532553910dce","date":1564342581,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetExtrasCloudTest#limitTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetExtrasCloudTest#limitTest().mjava","sourceNew":"  @Test\n  public void limitTest() throws Exception {\n    String[] params = new String[] {\n        \"o.lr.s.mean\", \"mean(int_id)\",\n        \"o.lr.s.median\", \"median(int_id)\",\n        \"o.lr.s.count\", \"count(int_id)\",\n        \"o.lr.s.percentile_20\", \"percentile(20,int_id)\",\n        \"o.lr.ff.long_ld\", \"long_ld\",\n        \"o.lr.ff.long_ld.ss\", \"mean\",\n        \"o.lr.ff.long_ld.sd\", \"asc\",\n        \"o.lr.ff.long_ld.limit\", \"5\",\n        \"o.lr.ff.float_fd\", \"float_fd\",\n        \"o.lr.ff.float_fd.ss\", \"median\",\n        \"o.lr.ff.float_fd.sd\", \"desc\",\n        \"o.lr.ff.float_fd.limit\", \"3\",\n        \"o.lr.ff.double_dd\", \"double_dd\",\n        \"o.lr.ff.double_dd.ss\", \"count\",\n        \"o.lr.ff.double_dd.sd\", \"asc\",\n        \"o.lr.ff.double_dd.limit\", \"7\",\n        \"o.lr.ff.string_sd\", \"string_sd\",\n        \"o.lr.ff.string_sd.ss\", \"percentile_20\",\n        \"o.lr.ff.string_sd.sd\", \"desc\",\n        \"o.lr.ff.string_sd.limit\", \"1\"\n    };\n\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n\n    Collection<Double> lon = getValueList(response, \"lr\", \"fieldFacets\", \"long_ld\", \"mean\", false);\n    assertEquals(responseStr, lon.size(),5);\n    Collection<Double> flo = getValueList(response, \"lr\", \"fieldFacets\", \"float_fd\", \"median\", false);\n    assertEquals(responseStr, flo.size(),3);\n    Collection<Long> doub = getValueList(response, \"lr\", \"fieldFacets\", \"double_dd\", \"count\", false);\n    assertEquals(responseStr, doub.size(),7);\n    Collection<Integer> string = getValueList(response, \"lr\", \"fieldFacets\", \"string_sd\", \"percentile_20\", false);\n    assertEquals(responseStr, string.size(),1);\n  }\n\n","sourceOld":"  @Test\n  public void limitTest() throws Exception { \n    String[] params = new String[] {\n        \"o.lr.s.mean\", \"mean(int_id)\",\n        \"o.lr.s.median\", \"median(int_id)\",\n        \"o.lr.s.count\", \"count(int_id)\",\n        \"o.lr.s.percentile_20\", \"percentile(20,int_id)\",\n        \"o.lr.ff.long_ld\", \"long_ld\",\n        \"o.lr.ff.long_ld.ss\", \"mean\",\n        \"o.lr.ff.long_ld.sd\", \"asc\",\n        \"o.lr.ff.long_ld.limit\", \"5\",\n        \"o.lr.ff.float_fd\", \"float_fd\",\n        \"o.lr.ff.float_fd.ss\", \"median\",\n        \"o.lr.ff.float_fd.sd\", \"desc\",\n        \"o.lr.ff.float_fd.limit\", \"3\",\n        \"o.lr.ff.double_dd\", \"double_dd\",\n        \"o.lr.ff.double_dd.ss\", \"count\",\n        \"o.lr.ff.double_dd.sd\", \"asc\",\n        \"o.lr.ff.double_dd.limit\", \"7\",\n        \"o.lr.ff.string_sd\", \"string_sd\",\n        \"o.lr.ff.string_sd.ss\", \"percentile_20\",\n        \"o.lr.ff.string_sd.sd\", \"desc\",\n        \"o.lr.ff.string_sd.limit\", \"1\"\n    };\n    \n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n\n    Collection<Double> lon = getValueList(response, \"lr\", \"fieldFacets\", \"long_ld\", \"mean\", false);\n    assertEquals(responseStr, lon.size(),5);\n    Collection<Double> flo = getValueList(response, \"lr\", \"fieldFacets\", \"float_fd\", \"median\", false);\n    assertEquals(responseStr, flo.size(),3);\n    Collection<Long> doub = getValueList(response, \"lr\", \"fieldFacets\", \"double_dd\", \"count\", false);\n    assertEquals(responseStr, doub.size(),7);\n    Collection<Integer> string = getValueList(response, \"lr\", \"fieldFacets\", \"string_sd\", \"percentile_20\", false);\n    assertEquals(responseStr, string.size(),1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetExtrasCloudTest#limitTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetExtrasCloudTest#limitTest().mjava","sourceNew":"  @Test\n  public void limitTest() throws Exception {\n    String[] params = new String[] {\n        \"o.lr.s.mean\", \"mean(int_id)\",\n        \"o.lr.s.median\", \"median(int_id)\",\n        \"o.lr.s.count\", \"count(int_id)\",\n        \"o.lr.s.percentile_20\", \"percentile(20,int_id)\",\n        \"o.lr.ff.long_ld\", \"long_ld\",\n        \"o.lr.ff.long_ld.ss\", \"mean\",\n        \"o.lr.ff.long_ld.sd\", \"asc\",\n        \"o.lr.ff.long_ld.limit\", \"5\",\n        \"o.lr.ff.float_fd\", \"float_fd\",\n        \"o.lr.ff.float_fd.ss\", \"median\",\n        \"o.lr.ff.float_fd.sd\", \"desc\",\n        \"o.lr.ff.float_fd.limit\", \"3\",\n        \"o.lr.ff.double_dd\", \"double_dd\",\n        \"o.lr.ff.double_dd.ss\", \"count\",\n        \"o.lr.ff.double_dd.sd\", \"asc\",\n        \"o.lr.ff.double_dd.limit\", \"7\",\n        \"o.lr.ff.string_sd\", \"string_sd\",\n        \"o.lr.ff.string_sd.ss\", \"percentile_20\",\n        \"o.lr.ff.string_sd.sd\", \"desc\",\n        \"o.lr.ff.string_sd.limit\", \"1\"\n    };\n\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n\n    Collection<Double> lon = getValueList(response, \"lr\", \"fieldFacets\", \"long_ld\", \"mean\", false);\n    assertEquals(responseStr, lon.size(),5);\n    Collection<Double> flo = getValueList(response, \"lr\", \"fieldFacets\", \"float_fd\", \"median\", false);\n    assertEquals(responseStr, flo.size(),3);\n    Collection<Long> doub = getValueList(response, \"lr\", \"fieldFacets\", \"double_dd\", \"count\", false);\n    assertEquals(responseStr, doub.size(),7);\n    Collection<Integer> string = getValueList(response, \"lr\", \"fieldFacets\", \"string_sd\", \"percentile_20\", false);\n    assertEquals(responseStr, string.size(),1);\n  }\n\n","sourceOld":"  @Test\n  public void limitTest() throws Exception { \n    String[] params = new String[] {\n        \"o.lr.s.mean\", \"mean(int_id)\",\n        \"o.lr.s.median\", \"median(int_id)\",\n        \"o.lr.s.count\", \"count(int_id)\",\n        \"o.lr.s.percentile_20\", \"percentile(20,int_id)\",\n        \"o.lr.ff.long_ld\", \"long_ld\",\n        \"o.lr.ff.long_ld.ss\", \"mean\",\n        \"o.lr.ff.long_ld.sd\", \"asc\",\n        \"o.lr.ff.long_ld.limit\", \"5\",\n        \"o.lr.ff.float_fd\", \"float_fd\",\n        \"o.lr.ff.float_fd.ss\", \"median\",\n        \"o.lr.ff.float_fd.sd\", \"desc\",\n        \"o.lr.ff.float_fd.limit\", \"3\",\n        \"o.lr.ff.double_dd\", \"double_dd\",\n        \"o.lr.ff.double_dd.ss\", \"count\",\n        \"o.lr.ff.double_dd.sd\", \"asc\",\n        \"o.lr.ff.double_dd.limit\", \"7\",\n        \"o.lr.ff.string_sd\", \"string_sd\",\n        \"o.lr.ff.string_sd.ss\", \"percentile_20\",\n        \"o.lr.ff.string_sd.sd\", \"desc\",\n        \"o.lr.ff.string_sd.limit\", \"1\"\n    };\n    \n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n\n    Collection<Double> lon = getValueList(response, \"lr\", \"fieldFacets\", \"long_ld\", \"mean\", false);\n    assertEquals(responseStr, lon.size(),5);\n    Collection<Double> flo = getValueList(response, \"lr\", \"fieldFacets\", \"float_fd\", \"median\", false);\n    assertEquals(responseStr, flo.size(),3);\n    Collection<Long> doub = getValueList(response, \"lr\", \"fieldFacets\", \"double_dd\", \"count\", false);\n    assertEquals(responseStr, doub.size(),7);\n    Collection<Integer> string = getValueList(response, \"lr\", \"fieldFacets\", \"string_sd\", \"percentile_20\", false);\n    assertEquals(responseStr, string.size(),1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8061ddd97f3352007d927dae445884a6f3d857b":["3bd4c6955956e76c96eb12dfe64108ed03522983","1e4e64b7199d2f2a17be7f3926c7532553910dce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e4e64b7199d2f2a17be7f3926c7532553910dce"],"3bd4c6955956e76c96eb12dfe64108ed03522983":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"3bd4c6955956e76c96eb12dfe64108ed03522983":["1e4e64b7199d2f2a17be7f3926c7532553910dce","f8061ddd97f3352007d927dae445884a6f3d857b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}