{"path":"src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","commits":[{"id":"eeefd99c477417e5c7c574228461ebafe92469d4","date":1166460329,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"/dev/null","sourceNew":"  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.preLockless = preLockless;\n    if (normGen != null) {\n      si.normGen = (long[]) normGen.clone();\n    }\n    return si;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8969a184df55d25d61e85be785987fbf830d4028","date":1168143561,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.preLockless = preLockless;\n    si.withNrm = withNrm;\n    if (normGen != null) {\n      si.normGen = (long[]) normGen.clone();\n    }\n    return si;\n  }\n\n","sourceOld":"  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.preLockless = preLockless;\n    if (normGen != null) {\n      si.normGen = (long[]) normGen.clone();\n    }\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a5cfde941b2f8208d739344fef3821381885618","date":1168979092,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.preLockless = preLockless;\n    si.hasSingleNormFile = hasSingleNormFile;\n    if (normGen != null) {\n      si.normGen = (long[]) normGen.clone();\n    }\n    return si;\n  }\n\n","sourceOld":"  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.preLockless = preLockless;\n    si.withNrm = withNrm;\n    if (normGen != null) {\n      si.normGen = (long[]) normGen.clone();\n    }\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6754b3085e8633adf1ed1ac8bac35fb34a06cf97","date":1183575801,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.preLockless = preLockless;\n    si.hasSingleNormFile = hasSingleNormFile;\n    if (normGen != null) {\n      si.normGen = (long[]) normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    return si;\n  }\n\n","sourceOld":"  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.preLockless = preLockless;\n    si.hasSingleNormFile = hasSingleNormFile;\n    if (normGen != null) {\n      si.normGen = (long[]) normGen.clone();\n    }\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34e2c71b6406443562df54db233fde0728502f64","date":1209294850,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.preLockless = preLockless;\n    si.hasSingleNormFile = hasSingleNormFile;\n    if (normGen != null) {\n      si.normGen = (long[]) normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    return si;\n  }\n\n","sourceOld":"  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.preLockless = preLockless;\n    si.hasSingleNormFile = hasSingleNormFile;\n    if (normGen != null) {\n      si.normGen = (long[]) normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3ab91f3bb602daf6393fa7f78b11afd3400d669","date":1243282044,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.hasProx = hasProx;\n    si.preLockless = preLockless;\n    si.hasSingleNormFile = hasSingleNormFile;\n    si.diagnostics = new HashMap(diagnostics);\n    if (normGen != null) {\n      si.normGen = (long[]) normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    return si;\n  }\n\n","sourceOld":"  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.preLockless = preLockless;\n    si.hasSingleNormFile = hasSingleNormFile;\n    if (normGen != null) {\n      si.normGen = (long[]) normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa27b750ee9a51ec4bed93ef328aef9ca1e2153d","date":1255859449,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.hasProx = hasProx;\n    si.preLockless = preLockless;\n    si.hasSingleNormFile = hasSingleNormFile;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = (long[]) normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    return si;\n  }\n\n","sourceOld":"  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.hasProx = hasProx;\n    si.preLockless = preLockless;\n    si.hasSingleNormFile = hasSingleNormFile;\n    si.diagnostics = new HashMap(diagnostics);\n    if (normGen != null) {\n      si.normGen = (long[]) normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.hasProx = hasProx;\n    si.preLockless = preLockless;\n    si.hasSingleNormFile = hasSingleNormFile;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = (long[]) normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    return si;\n  }\n\n","sourceOld":"  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.hasProx = hasProx;\n    si.preLockless = preLockless;\n    si.hasSingleNormFile = hasSingleNormFile;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = (long[]) normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.hasProx = hasProx;\n    si.preLockless = preLockless;\n    si.hasSingleNormFile = hasSingleNormFile;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.hasProx = hasProx;\n    si.preLockless = preLockless;\n    si.hasSingleNormFile = hasSingleNormFile;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = (long[]) normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.hasProx = hasProx;\n    si.preLockless = preLockless;\n    si.hasSingleNormFile = hasSingleNormFile;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.hasProx = hasProx;\n    si.preLockless = preLockless;\n    si.hasSingleNormFile = hasSingleNormFile;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fa27b750ee9a51ec4bed93ef328aef9ca1e2153d":["d3ab91f3bb602daf6393fa7f78b11afd3400d669"],"34e2c71b6406443562df54db233fde0728502f64":["6754b3085e8633adf1ed1ac8bac35fb34a06cf97"],"8a5cfde941b2f8208d739344fef3821381885618":["8969a184df55d25d61e85be785987fbf830d4028"],"eeefd99c477417e5c7c574228461ebafe92469d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8a9e385641d717e641408d8fbbc62be8fc766357":["fa27b750ee9a51ec4bed93ef328aef9ca1e2153d"],"d3ab91f3bb602daf6393fa7f78b11afd3400d669":["34e2c71b6406443562df54db233fde0728502f64"],"6754b3085e8633adf1ed1ac8bac35fb34a06cf97":["8a5cfde941b2f8208d739344fef3821381885618"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8969a184df55d25d61e85be785987fbf830d4028":["eeefd99c477417e5c7c574228461ebafe92469d4"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["8a9e385641d717e641408d8fbbc62be8fc766357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"fa27b750ee9a51ec4bed93ef328aef9ca1e2153d":["8a9e385641d717e641408d8fbbc62be8fc766357"],"34e2c71b6406443562df54db233fde0728502f64":["d3ab91f3bb602daf6393fa7f78b11afd3400d669"],"8a5cfde941b2f8208d739344fef3821381885618":["6754b3085e8633adf1ed1ac8bac35fb34a06cf97"],"eeefd99c477417e5c7c574228461ebafe92469d4":["8969a184df55d25d61e85be785987fbf830d4028"],"d3ab91f3bb602daf6393fa7f78b11afd3400d669":["fa27b750ee9a51ec4bed93ef328aef9ca1e2153d"],"6754b3085e8633adf1ed1ac8bac35fb34a06cf97":["34e2c71b6406443562df54db233fde0728502f64"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eeefd99c477417e5c7c574228461ebafe92469d4"],"8a9e385641d717e641408d8fbbc62be8fc766357":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"8969a184df55d25d61e85be785987fbf830d4028":["8a5cfde941b2f8208d739344fef3821381885618"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}