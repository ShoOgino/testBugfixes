{"path":"lucene/core/src/test/org/apache/lucene/util/TestPriorityQueue#testIteratorTwo().mjava","commits":[{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestPriorityQueue#testIteratorTwo().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestPriorityQueue#testIterator().mjava","sourceNew":"  public void testIteratorTwo() {\n    IntegerQueue queue = new IntegerQueue(3);\n\n    queue.add(1);\n    queue.add(2);\n    Iterator<Integer> it = queue.iterator();\n    assertTrue(it.hasNext());\n    assertEquals(Integer.valueOf(1), it.next());\n    assertTrue(it.hasNext());\n    assertEquals(Integer.valueOf(2), it.next());\n    assertFalse(it.hasNext());\n    expectThrows(NoSuchElementException.class, () -> {\n      it.next();\n    });\n  }\n\n","sourceOld":"  public void testIterator() {\n    IntegerQueue queue = new IntegerQueue(3);\n    \n    Iterator<Integer> it = queue.iterator();\n    assertFalse(it.hasNext());\n    try {\n      it.next();\n      fail();\n    } catch (NoSuchElementException e) {\n      // ok\n    }\n\n    queue.add(1);\n    it = queue.iterator();\n    assertTrue(it.hasNext());\n    assertEquals(Integer.valueOf(1), it.next());\n    assertFalse(it.hasNext());\n    try {\n      it.next();\n      fail();\n    } catch (NoSuchElementException e) {\n      // ok\n    }\n\n    queue.add(2);\n    it = queue.iterator();\n    assertTrue(it.hasNext());\n    assertEquals(Integer.valueOf(1), it.next());\n    assertTrue(it.hasNext());\n    assertEquals(Integer.valueOf(2), it.next());\n    assertFalse(it.hasNext());\n    try {\n      it.next();\n      fail();\n    } catch (NoSuchElementException e) {\n      // ok\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05fe562aa248790944d43cdd478f512572835ba0"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}