{"path":"solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest#doTestGetDataHome(Class[#-extends-DirectoryFactory]).mjava","commits":[{"id":"e43d618262c616423ed79f226c5c49f708999b06","date":1540815794,"type":1,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest#doTestGetDataHome(Class[#-extends-DirectoryFactory]).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest#testGetDataHome().mjava","sourceNew":"  private void doTestGetDataHome(Class<? extends DirectoryFactory> directoryFactoryClass) throws Exception {\n    NodeConfig config = loadNodeConfig(\"/solr/solr-solrDataHome.xml\");\n    CoreContainer cc = new CoreContainer(config);\n    Properties cp = cc.getContainerProperties();\n    DirectoryFactory df = directoryFactoryClass.newInstance();\n    df.initCoreContainer(cc);\n    df.init(new NamedList());\n\n    // No solr.data.home property set. Absolute instanceDir\n    assertDataHome(\"/tmp/inst1/data\", \"/tmp/inst1\", df, cc);\n\n    // Simulate solr.data.home set in solrconfig.xml <directoryFactory> tag\n    NamedList args = new NamedList();\n    args.add(\"solr.data.home\", \"/solrdata/\");\n    df.init(args);\n    assertDataHome(\"/solrdata/inst_dir/data\", \"inst_dir\", df, cc);\n    \n    // solr.data.home set with System property, and relative path\n    System.setProperty(\"solr.data.home\", \"solrdata\");\n    config = loadNodeConfig(\"/solr/solr-solrDataHome.xml\");\n    cc = new CoreContainer(config);\n    df = directoryFactoryClass.newInstance();\n    df.initCoreContainer(cc);\n    df.init(new NamedList());\n    assertDataHome(solrHome.resolve(\"solrdata/inst_dir/data\").toAbsolutePath().toString(), \"inst_dir\", df, cc);\n    // Test parsing last component of instanceDir, and using custom dataDir\n    assertDataHome(solrHome.resolve(\"solrdata/myinst/mydata\").toAbsolutePath().toString(), \"/path/to/myinst\", df, cc, \"dataDir\", \"mydata\");\n    // solr.data.home set but also solrDataHome set in solr.xml, which should override the former\n    System.setProperty(\"test.solr.data.home\", \"/foo\");\n    config = loadNodeConfig(\"/solr/solr-solrDataHome.xml\");\n    cc = new CoreContainer(config);\n    df = directoryFactoryClass.newInstance();\n    df.initCoreContainer(cc);\n    df.init(new NamedList());\n    assertDataHome(\"/foo/inst_dir/data\", \"inst_dir\", df, cc);\n  }\n\n","sourceOld":"  @Test\n  public void testGetDataHome() throws Exception {\n    NodeConfig config = loadNodeConfig(\"/solr/solr-solrDataHome.xml\");\n    CoreContainer cc = new CoreContainer(config);\n    Properties cp = cc.getContainerProperties();\n    RAMDirectoryFactory rdf = new RAMDirectoryFactory();\n    rdf.initCoreContainer(cc);\n    rdf.init(new NamedList());\n\n    // No solr.data.home property set. Absolute instanceDir\n    assertDataHome(\"/tmp/inst1/data\", \"/tmp/inst1\", rdf, cc);\n\n    // Simulate solr.data.home set in solrconfig.xml <directoryFactory> tag\n    NamedList args = new NamedList();\n    args.add(\"solr.data.home\", \"/solrdata/\");\n    rdf.init(args);\n    assertDataHome(\"/solrdata/inst_dir/data\", \"inst_dir\", rdf, cc);\n    \n    // solr.data.home set with System property, and relative path\n    System.setProperty(\"solr.data.home\", \"solrdata\");\n    config = loadNodeConfig(\"/solr/solr-solrDataHome.xml\");\n    cc = new CoreContainer(config);\n    rdf = new RAMDirectoryFactory();\n    rdf.initCoreContainer(cc);\n    rdf.init(new NamedList());\n    assertDataHome(solrHome.resolve(\"solrdata/inst_dir/data\").toAbsolutePath().toString(), \"inst_dir\", rdf, cc);\n    // Test parsing last component of instanceDir, and using custom dataDir\n    assertDataHome(solrHome.resolve(\"solrdata/myinst/mydata\").toAbsolutePath().toString(), \"/path/to/myinst\", rdf, cc, \"dataDir\", \"mydata\");\n    // solr.data.home set but also solrDataHome set in solr.xml, which should override the former\n    System.setProperty(\"test.solr.data.home\", \"/foo\");\n    config = loadNodeConfig(\"/solr/solr-solrDataHome.xml\");\n    cc = new CoreContainer(config);\n    rdf = new RAMDirectoryFactory();\n    rdf.initCoreContainer(cc);\n    rdf.init(new NamedList());\n    assertDataHome(\"/foo/inst_dir/data\", \"inst_dir\", rdf, cc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b88a121b875f9ae2ac50f85cf46dcb680f126357","date":1555416009,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest#doTestGetDataHome(Class[#-extends-DirectoryFactory]).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest#doTestGetDataHome(Class[#-extends-DirectoryFactory]).mjava","sourceNew":"  private void doTestGetDataHome(Class<? extends DirectoryFactory> directoryFactoryClass) throws Exception {\n    NodeConfig config = loadNodeConfig(\"/solr/solr-solrDataHome.xml\");\n    CoreContainer cc = new CoreContainer(config);\n    Properties cp = cc.getContainerProperties();\n    DirectoryFactory df = directoryFactoryClass.getConstructor().newInstance();\n    df.initCoreContainer(cc);\n    df.init(new NamedList());\n\n    // No solr.data.home property set. Absolute instanceDir\n    assertDataHome(\"/tmp/inst1/data\", \"/tmp/inst1\", df, cc);\n\n    // Simulate solr.data.home set in solrconfig.xml <directoryFactory> tag\n    NamedList args = new NamedList();\n    args.add(\"solr.data.home\", \"/solrdata/\");\n    df.init(args);\n    assertDataHome(\"/solrdata/inst_dir/data\", \"inst_dir\", df, cc);\n    \n    // solr.data.home set with System property, and relative path\n    System.setProperty(\"solr.data.home\", \"solrdata\");\n    config = loadNodeConfig(\"/solr/solr-solrDataHome.xml\");\n    cc = new CoreContainer(config);\n    df = directoryFactoryClass.getConstructor().newInstance();\n    df.initCoreContainer(cc);\n    df.init(new NamedList());\n    assertDataHome(solrHome.resolve(\"solrdata/inst_dir/data\").toAbsolutePath().toString(), \"inst_dir\", df, cc);\n    // Test parsing last component of instanceDir, and using custom dataDir\n    assertDataHome(solrHome.resolve(\"solrdata/myinst/mydata\").toAbsolutePath().toString(), \"/path/to/myinst\", df, cc, \"dataDir\", \"mydata\");\n    // solr.data.home set but also solrDataHome set in solr.xml, which should override the former\n    System.setProperty(\"test.solr.data.home\", \"/foo\");\n    config = loadNodeConfig(\"/solr/solr-solrDataHome.xml\");\n    cc = new CoreContainer(config);\n    df = directoryFactoryClass.getConstructor().newInstance();\n    df.initCoreContainer(cc);\n    df.init(new NamedList());\n    assertDataHome(\"/foo/inst_dir/data\", \"inst_dir\", df, cc);\n  }\n\n","sourceOld":"  private void doTestGetDataHome(Class<? extends DirectoryFactory> directoryFactoryClass) throws Exception {\n    NodeConfig config = loadNodeConfig(\"/solr/solr-solrDataHome.xml\");\n    CoreContainer cc = new CoreContainer(config);\n    Properties cp = cc.getContainerProperties();\n    DirectoryFactory df = directoryFactoryClass.newInstance();\n    df.initCoreContainer(cc);\n    df.init(new NamedList());\n\n    // No solr.data.home property set. Absolute instanceDir\n    assertDataHome(\"/tmp/inst1/data\", \"/tmp/inst1\", df, cc);\n\n    // Simulate solr.data.home set in solrconfig.xml <directoryFactory> tag\n    NamedList args = new NamedList();\n    args.add(\"solr.data.home\", \"/solrdata/\");\n    df.init(args);\n    assertDataHome(\"/solrdata/inst_dir/data\", \"inst_dir\", df, cc);\n    \n    // solr.data.home set with System property, and relative path\n    System.setProperty(\"solr.data.home\", \"solrdata\");\n    config = loadNodeConfig(\"/solr/solr-solrDataHome.xml\");\n    cc = new CoreContainer(config);\n    df = directoryFactoryClass.newInstance();\n    df.initCoreContainer(cc);\n    df.init(new NamedList());\n    assertDataHome(solrHome.resolve(\"solrdata/inst_dir/data\").toAbsolutePath().toString(), \"inst_dir\", df, cc);\n    // Test parsing last component of instanceDir, and using custom dataDir\n    assertDataHome(solrHome.resolve(\"solrdata/myinst/mydata\").toAbsolutePath().toString(), \"/path/to/myinst\", df, cc, \"dataDir\", \"mydata\");\n    // solr.data.home set but also solrDataHome set in solr.xml, which should override the former\n    System.setProperty(\"test.solr.data.home\", \"/foo\");\n    config = loadNodeConfig(\"/solr/solr-solrDataHome.xml\");\n    cc = new CoreContainer(config);\n    df = directoryFactoryClass.newInstance();\n    df.initCoreContainer(cc);\n    df.init(new NamedList());\n    assertDataHome(\"/foo/inst_dir/data\", \"inst_dir\", df, cc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest#doTestGetDataHome(Class[#-extends-DirectoryFactory]).mjava","pathOld":"solr/core/src/test/org/apache/solr/core/DirectoryFactoryTest#doTestGetDataHome(Class[#-extends-DirectoryFactory]).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  private void doTestGetDataHome(Class<? extends DirectoryFactory> directoryFactoryClass) throws Exception {\n    NodeConfig config = loadNodeConfig(\"/solr/solr-solrDataHome.xml\");\n    CoreContainer cc = new CoreContainer(config);\n    Properties cp = cc.getContainerProperties();\n    DirectoryFactory df = directoryFactoryClass.getConstructor().newInstance();\n    df.initCoreContainer(cc);\n    df.init(new NamedList());\n\n    // No solr.data.home property set. Absolute instanceDir\n    assertDataHome(\"/tmp/inst1/data\", \"/tmp/inst1\", df, cc);\n\n    // Simulate solr.data.home set in solrconfig.xml <directoryFactory> tag\n    NamedList args = new NamedList();\n    args.add(\"solr.data.home\", \"/solrdata/\");\n    df.init(args);\n    assertDataHome(\"/solrdata/inst_dir/data\", \"inst_dir\", df, cc);\n    \n    // solr.data.home set with System property, and relative path\n    System.setProperty(\"solr.data.home\", \"solrdata\");\n    config = loadNodeConfig(\"/solr/solr-solrDataHome.xml\");\n    cc = new CoreContainer(config);\n    df = directoryFactoryClass.getConstructor().newInstance();\n    df.initCoreContainer(cc);\n    df.init(new NamedList());\n    assertDataHome(solrHome.resolve(\"solrdata/inst_dir/data\").toAbsolutePath().toString(), \"inst_dir\", df, cc);\n    // Test parsing last component of instanceDir, and using custom dataDir\n    assertDataHome(solrHome.resolve(\"solrdata/myinst/mydata\").toAbsolutePath().toString(), \"/path/to/myinst\", df, cc, \"dataDir\", \"mydata\");\n    // solr.data.home set but also solrDataHome set in solr.xml, which should override the former\n    System.setProperty(\"test.solr.data.home\", \"/foo\");\n    config = loadNodeConfig(\"/solr/solr-solrDataHome.xml\");\n    cc = new CoreContainer(config);\n    df = directoryFactoryClass.getConstructor().newInstance();\n    df.initCoreContainer(cc);\n    df.init(new NamedList());\n    assertDataHome(\"/foo/inst_dir/data\", \"inst_dir\", df, cc);\n  }\n\n","sourceOld":"  private void doTestGetDataHome(Class<? extends DirectoryFactory> directoryFactoryClass) throws Exception {\n    NodeConfig config = loadNodeConfig(\"/solr/solr-solrDataHome.xml\");\n    CoreContainer cc = new CoreContainer(config);\n    Properties cp = cc.getContainerProperties();\n    DirectoryFactory df = directoryFactoryClass.getConstructor().newInstance();\n    df.initCoreContainer(cc);\n    df.init(new NamedList());\n\n    // No solr.data.home property set. Absolute instanceDir\n    assertDataHome(\"/tmp/inst1/data\", \"/tmp/inst1\", df, cc);\n\n    // Simulate solr.data.home set in solrconfig.xml <directoryFactory> tag\n    NamedList args = new NamedList();\n    args.add(\"solr.data.home\", \"/solrdata/\");\n    df.init(args);\n    assertDataHome(\"/solrdata/inst_dir/data\", \"inst_dir\", df, cc);\n    \n    // solr.data.home set with System property, and relative path\n    System.setProperty(\"solr.data.home\", \"solrdata\");\n    config = loadNodeConfig(\"/solr/solr-solrDataHome.xml\");\n    cc = new CoreContainer(config);\n    df = directoryFactoryClass.getConstructor().newInstance();\n    df.initCoreContainer(cc);\n    df.init(new NamedList());\n    assertDataHome(solrHome.resolve(\"solrdata/inst_dir/data\").toAbsolutePath().toString(), \"inst_dir\", df, cc);\n    // Test parsing last component of instanceDir, and using custom dataDir\n    assertDataHome(solrHome.resolve(\"solrdata/myinst/mydata\").toAbsolutePath().toString(), \"/path/to/myinst\", df, cc, \"dataDir\", \"mydata\");\n    // solr.data.home set but also solrDataHome set in solr.xml, which should override the former\n    System.setProperty(\"test.solr.data.home\", \"/foo\");\n    config = loadNodeConfig(\"/solr/solr-solrDataHome.xml\");\n    cc = new CoreContainer(config);\n    df = directoryFactoryClass.getConstructor().newInstance();\n    df.initCoreContainer(cc);\n    df.init(new NamedList());\n    assertDataHome(\"/foo/inst_dir/data\", \"inst_dir\", df, cc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b88a121b875f9ae2ac50f85cf46dcb680f126357":["e43d618262c616423ed79f226c5c49f708999b06"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e43d618262c616423ed79f226c5c49f708999b06":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["b88a121b875f9ae2ac50f85cf46dcb680f126357"]},"commit2Childs":{"b88a121b875f9ae2ac50f85cf46dcb680f126357":["e98520789adb1d5ad05afb4956eca0944a929688"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e43d618262c616423ed79f226c5c49f708999b06"],"e43d618262c616423ed79f226c5c49f708999b06":["b88a121b875f9ae2ac50f85cf46dcb680f126357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}