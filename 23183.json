{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/ExternalRefSorter.ByteSequenceIterator#next().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/ExternalRefSorter.ByteSequenceIterator#next().mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/ExternalRefSorter.ByteSequenceIterator#next().mjava","sourceNew":"    @Override\n    public BytesRef next() throws IOException {\n      if (scratch == null) {\n        return null;\n      }\n      boolean success = false;\n      try {\n        byte[] next = reader.read();\n        if (next != null) {\n          scratch.bytes = next;\n          scratch.length = next.length;\n          scratch.offset = 0;\n        } else {\n          IOUtils.close(reader);\n          scratch = null;\n        }\n        success = true;\n        return scratch;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(reader);\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public BytesRef next() throws IOException {\n      if (scratch == null) {\n        return null;\n      }\n      boolean success = false;\n      try {\n        byte[] next = reader.read();\n        if (next != null) {\n          scratch.bytes = next;\n          scratch.length = next.length;\n          scratch.offset = 0;\n        } else {\n          IOUtils.close(reader);\n          scratch = null;\n        }\n        success = true;\n        return scratch;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(reader);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3ce1ef883d26aa73919aa2d53991726e96caa13","date":1445421402,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/ExternalRefSorter.ByteSequenceIterator#next().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/ExternalRefSorter.ByteSequenceIterator#next().mjava","sourceNew":"    @Override\n    public BytesRef next() throws IOException {\n      if (scratch == null) {\n        return null;\n      }\n      boolean success = false;\n      try {\n        if (reader.read(scratch) == false) {\n          IOUtils.close(reader);\n          scratch = null;\n        }\n        success = true;\n        if (scratch == null) {\n          return null;\n        }\n        return scratch.get();\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(reader);\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public BytesRef next() throws IOException {\n      if (scratch == null) {\n        return null;\n      }\n      boolean success = false;\n      try {\n        byte[] next = reader.read();\n        if (next != null) {\n          scratch.bytes = next;\n          scratch.length = next.length;\n          scratch.offset = 0;\n        } else {\n          IOUtils.close(reader);\n          scratch = null;\n        }\n        success = true;\n        return scratch;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(reader);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7849935cc625c020857f3b29be91b5d4323d19aa","date":1458978426,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/ExternalRefSorter.ByteSequenceIterator#next().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/ExternalRefSorter.ByteSequenceIterator#next().mjava","sourceNew":"    @Override\n    public BytesRef next() throws IOException {\n      boolean success = false;\n      try {\n        scratch = reader.next();\n        if (scratch == null) {\n          reader.close();\n        }\n        success = true;\n        return scratch;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(reader);\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public BytesRef next() throws IOException {\n      if (scratch == null) {\n        return null;\n      }\n      boolean success = false;\n      try {\n        if (reader.read(scratch) == false) {\n          IOUtils.close(reader);\n          scratch = null;\n        }\n        success = true;\n        if (scratch == null) {\n          return null;\n        }\n        return scratch.get();\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(reader);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7849935cc625c020857f3b29be91b5d4323d19aa":["e3ce1ef883d26aa73919aa2d53991726e96caa13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e3ce1ef883d26aa73919aa2d53991726e96caa13":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7849935cc625c020857f3b29be91b5d4323d19aa"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e3ce1ef883d26aa73919aa2d53991726e96caa13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7849935cc625c020857f3b29be91b5d4323d19aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e3ce1ef883d26aa73919aa2d53991726e96caa13":["7849935cc625c020857f3b29be91b5d4323d19aa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}