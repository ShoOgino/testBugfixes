{"path":"lucene/core/src/test/org/apache/lucene/search/TestDoubleValuesSource#randomSort().mjava","commits":[{"id":"2a4ff4adbb114e3d4c1b09305005237ee1c28a15","date":1483014160,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestDoubleValuesSource#randomSort().mjava","pathOld":"/dev/null","sourceNew":"  Sort randomSort() throws Exception {\n    boolean reversed = random().nextBoolean();\n    SortField fields[] = new SortField[] {\n        new SortField(\"int\", SortField.Type.INT, reversed),\n        new SortField(\"long\", SortField.Type.LONG, reversed),\n        new SortField(\"float\", SortField.Type.FLOAT, reversed),\n        new SortField(\"double\", SortField.Type.DOUBLE, reversed),\n        new SortField(\"score\", SortField.Type.SCORE)\n    };\n    Collections.shuffle(Arrays.asList(fields), random());\n    int numSorts = TestUtil.nextInt(random(), 1, fields.length);\n    return new Sort(Arrays.copyOfRange(fields, 0, numSorts));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestDoubleValuesSource#randomSort().mjava","pathOld":"/dev/null","sourceNew":"  Sort randomSort() throws Exception {\n    boolean reversed = random().nextBoolean();\n    SortField fields[] = new SortField[] {\n        new SortField(\"int\", SortField.Type.INT, reversed),\n        new SortField(\"long\", SortField.Type.LONG, reversed),\n        new SortField(\"float\", SortField.Type.FLOAT, reversed),\n        new SortField(\"double\", SortField.Type.DOUBLE, reversed),\n        new SortField(\"score\", SortField.Type.SCORE)\n    };\n    Collections.shuffle(Arrays.asList(fields), random());\n    int numSorts = TestUtil.nextInt(random(), 1, fields.length);\n    return new Sort(Arrays.copyOfRange(fields, 0, numSorts));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9798d0818e7a880546802b509792d3f3d57babd2","date":1528358901,"type":3,"author":"Nhat Nguyen","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestDoubleValuesSource#randomSort().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestDoubleValuesSource#randomSort().mjava","sourceNew":"  Sort randomSort() throws Exception {\n    boolean reversed = random().nextBoolean();\n    SortField fields[] = new SortField[] {\n        new SortField(\"int\", SortField.Type.INT, reversed),\n        new SortField(\"long\", SortField.Type.LONG, reversed),\n        new SortField(\"float\", SortField.Type.FLOAT, reversed),\n        new SortField(\"double\", SortField.Type.DOUBLE, reversed),\n        new SortField(\"score\", SortField.Type.SCORE)\n    };\n    Collections.shuffle(Arrays.asList(fields), random());\n    int numSorts = TestUtil.nextInt(random(), 1, fields.length);\n    return new Sort(ArrayUtil.copyOfSubArray(fields, 0, numSorts));\n  }\n\n","sourceOld":"  Sort randomSort() throws Exception {\n    boolean reversed = random().nextBoolean();\n    SortField fields[] = new SortField[] {\n        new SortField(\"int\", SortField.Type.INT, reversed),\n        new SortField(\"long\", SortField.Type.LONG, reversed),\n        new SortField(\"float\", SortField.Type.FLOAT, reversed),\n        new SortField(\"double\", SortField.Type.DOUBLE, reversed),\n        new SortField(\"score\", SortField.Type.SCORE)\n    };\n    Collections.shuffle(Arrays.asList(fields), random());\n    int numSorts = TestUtil.nextInt(random(), 1, fields.length);\n    return new Sort(Arrays.copyOfRange(fields, 0, numSorts));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestDoubleValuesSource#randomSort().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestDoubleValuesSource#randomSort().mjava","sourceNew":"  Sort randomSort() throws Exception {\n    boolean reversed = random().nextBoolean();\n    SortField fields[] = new SortField[] {\n        new SortField(\"int\", SortField.Type.INT, reversed),\n        new SortField(\"long\", SortField.Type.LONG, reversed),\n        new SortField(\"float\", SortField.Type.FLOAT, reversed),\n        new SortField(\"double\", SortField.Type.DOUBLE, reversed),\n        new SortField(\"score\", SortField.Type.SCORE)\n    };\n    Collections.shuffle(Arrays.asList(fields), random());\n    int numSorts = TestUtil.nextInt(random(), 1, fields.length);\n    return new Sort(ArrayUtil.copyOfSubArray(fields, 0, numSorts));\n  }\n\n","sourceOld":"  Sort randomSort() throws Exception {\n    boolean reversed = random().nextBoolean();\n    SortField fields[] = new SortField[] {\n        new SortField(\"int\", SortField.Type.INT, reversed),\n        new SortField(\"long\", SortField.Type.LONG, reversed),\n        new SortField(\"float\", SortField.Type.FLOAT, reversed),\n        new SortField(\"double\", SortField.Type.DOUBLE, reversed),\n        new SortField(\"score\", SortField.Type.SCORE)\n    };\n    Collections.shuffle(Arrays.asList(fields), random());\n    int numSorts = TestUtil.nextInt(random(), 1, fields.length);\n    return new Sort(Arrays.copyOfRange(fields, 0, numSorts));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestDoubleValuesSource#randomSort().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestDoubleValuesSource#randomSort().mjava","sourceNew":"  Sort randomSort() throws Exception {\n    boolean reversed = random().nextBoolean();\n    SortField fields[] = new SortField[] {\n        new SortField(\"int\", SortField.Type.INT, reversed),\n        new SortField(\"long\", SortField.Type.LONG, reversed),\n        new SortField(\"float\", SortField.Type.FLOAT, reversed),\n        new SortField(\"double\", SortField.Type.DOUBLE, reversed),\n        new SortField(\"score\", SortField.Type.SCORE)\n    };\n    Collections.shuffle(Arrays.asList(fields), random());\n    int numSorts = TestUtil.nextInt(random(), 1, fields.length);\n    return new Sort(ArrayUtil.copyOfSubArray(fields, 0, numSorts));\n  }\n\n","sourceOld":"  Sort randomSort() throws Exception {\n    boolean reversed = random().nextBoolean();\n    SortField fields[] = new SortField[] {\n        new SortField(\"int\", SortField.Type.INT, reversed),\n        new SortField(\"long\", SortField.Type.LONG, reversed),\n        new SortField(\"float\", SortField.Type.FLOAT, reversed),\n        new SortField(\"double\", SortField.Type.DOUBLE, reversed),\n        new SortField(\"score\", SortField.Type.SCORE)\n    };\n    Collections.shuffle(Arrays.asList(fields), random());\n    int numSorts = TestUtil.nextInt(random(), 1, fields.length);\n    return new Sort(Arrays.copyOfRange(fields, 0, numSorts));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["2a4ff4adbb114e3d4c1b09305005237ee1c28a15","9798d0818e7a880546802b509792d3f3d57babd2"],"2a4ff4adbb114e3d4c1b09305005237ee1c28a15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9798d0818e7a880546802b509792d3f3d57babd2":["2a4ff4adbb114e3d4c1b09305005237ee1c28a15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9798d0818e7a880546802b509792d3f3d57babd2"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["2a4ff4adbb114e3d4c1b09305005237ee1c28a15","9798d0818e7a880546802b509792d3f3d57babd2"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2a4ff4adbb114e3d4c1b09305005237ee1c28a15"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2a4ff4adbb114e3d4c1b09305005237ee1c28a15","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"2a4ff4adbb114e3d4c1b09305005237ee1c28a15":["b70042a8a492f7054d480ccdd2be9796510d4327","9798d0818e7a880546802b509792d3f3d57babd2","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"9798d0818e7a880546802b509792d3f3d57babd2":["b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}