{"path":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene42/Lucene42TermVectorsWriter#addDocData(int).mjava","commits":[{"id":"3d5291145ae0cea7e6e6a2379f3a32643bf71bf6","date":1411857884,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene42/Lucene42TermVectorsWriter#addDocData(int).mjava","pathOld":"/dev/null","sourceNew":"  private DocData addDocData(int numVectorFields) {\n    FieldData last = null;\n    for (Iterator<DocData> it = pendingDocs.descendingIterator(); it.hasNext(); ) {\n      final DocData doc = it.next();\n      if (!doc.fields.isEmpty()) {\n        last = doc.fields.getLast();\n        break;\n      }\n    }\n    final DocData doc;\n    if (last == null) {\n      doc = new DocData(numVectorFields, 0, 0, 0);\n    } else {\n      final int posStart = last.posStart + (last.hasPositions ? last.totalPositions : 0);\n      final int offStart = last.offStart + (last.hasOffsets ? last.totalPositions : 0);\n      final int payStart = last.payStart + (last.hasPayloads ? last.totalPositions : 0);\n      doc = new DocData(numVectorFields, posStart, offStart, payStart);\n    }\n    pendingDocs.add(doc);\n    return doc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene42/Lucene42TermVectorsWriter#addDocData(int).mjava","pathOld":"/dev/null","sourceNew":"  private DocData addDocData(int numVectorFields) {\n    FieldData last = null;\n    for (Iterator<DocData> it = pendingDocs.descendingIterator(); it.hasNext(); ) {\n      final DocData doc = it.next();\n      if (!doc.fields.isEmpty()) {\n        last = doc.fields.getLast();\n        break;\n      }\n    }\n    final DocData doc;\n    if (last == null) {\n      doc = new DocData(numVectorFields, 0, 0, 0);\n    } else {\n      final int posStart = last.posStart + (last.hasPositions ? last.totalPositions : 0);\n      final int offStart = last.offStart + (last.hasOffsets ? last.totalPositions : 0);\n      final int payStart = last.payStart + (last.hasPayloads ? last.totalPositions : 0);\n      doc = new DocData(numVectorFields, posStart, offStart, payStart);\n    }\n    pendingDocs.add(doc);\n    return doc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71387d8cb6923eb831b17a8b734608ba2e21c653","date":1414126093,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene42/Lucene42TermVectorsWriter#addDocData(int).mjava","sourceNew":null,"sourceOld":"  private DocData addDocData(int numVectorFields) {\n    FieldData last = null;\n    for (Iterator<DocData> it = pendingDocs.descendingIterator(); it.hasNext(); ) {\n      final DocData doc = it.next();\n      if (!doc.fields.isEmpty()) {\n        last = doc.fields.getLast();\n        break;\n      }\n    }\n    final DocData doc;\n    if (last == null) {\n      doc = new DocData(numVectorFields, 0, 0, 0);\n    } else {\n      final int posStart = last.posStart + (last.hasPositions ? last.totalPositions : 0);\n      final int offStart = last.offStart + (last.hasOffsets ? last.totalPositions : 0);\n      final int payStart = last.payStart + (last.hasPayloads ? last.totalPositions : 0);\n      doc = new DocData(numVectorFields, posStart, offStart, payStart);\n    }\n    pendingDocs.add(doc);\n    return doc;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9bb9a29a5e71a90295f175df8919802993142c9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3d5291145ae0cea7e6e6a2379f3a32643bf71bf6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3d5291145ae0cea7e6e6a2379f3a32643bf71bf6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71387d8cb6923eb831b17a8b734608ba2e21c653"]},"commit2Childs":{"9bb9a29a5e71a90295f175df8919802993142c9a":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9bb9a29a5e71a90295f175df8919802993142c9a","3d5291145ae0cea7e6e6a2379f3a32643bf71bf6"],"3d5291145ae0cea7e6e6a2379f3a32643bf71bf6":["9bb9a29a5e71a90295f175df8919802993142c9a"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}