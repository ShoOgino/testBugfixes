{"path":"solr/solrj/src/java/org/apache/solr/common/util/CommandOperation#getDataMap().mjava","commits":[{"id":"2d21112928e2aedcec0c17025bc0e91f8fcfcf30","date":1494423367,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/CommandOperation#getDataMap().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/CommandOperation#getDataMap().mjava","sourceNew":"  public Map<String,Object> getDataMap() {\n    if (commandData instanceof Map) {\n      //noinspection unchecked\n      return (Map<String,Object>)commandData;\n    }\n    addError(StrUtils.formatString(\"The command ''{0}'' should have the values as a json object {key:val} format\", name));\n    return Collections.emptyMap();\n  }\n\n","sourceOld":"  public Map<String,Object> getDataMap() {\n    if (commandData instanceof Map) {\n      //noinspection unchecked\n      return (Map<String,Object>)commandData;\n    }\n    addError(StrUtils.formatString(\"The command ''{0}'' should have the values as a json object {key:val} format\", name));\n    return Collections.emptyMap();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a513b6a92751e54c76fb5447948c9e7d437163a7","date":1496136565,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/CommandOperation#getDataMap().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/CommandOperation#getDataMap().mjava","sourceNew":"  public Map<String, Object> getDataMap() {\n    if (commandData instanceof Map) {\n      //noinspection unchecked\n      return (Map<String, Object>) commandData;\n    }\n    addError(StrUtils.formatString(\"The command ''{0}'' should have the values as a json object {key:val} format\", name));\n    return Collections.emptyMap();\n  }\n\n","sourceOld":"  public Map<String,Object> getDataMap() {\n    if (commandData instanceof Map) {\n      //noinspection unchecked\n      return (Map<String,Object>)commandData;\n    }\n    addError(StrUtils.formatString(\"The command ''{0}'' should have the values as a json object {key:val} format\", name));\n    return Collections.emptyMap();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74aea047dff7f7c38a2d766827bd20d356f98c6a","date":1496721416,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/CommandOperation#getDataMap().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/CommandOperation#getDataMap().mjava","sourceNew":"  public Map<String, Object> getDataMap() {\n    if (commandData instanceof Map) {\n      //noinspection unchecked\n      return (Map<String, Object>) commandData;\n    }\n    addError(StrUtils.formatString(\"The command ''{0}'' should have the values as a json object {key:val} format\", name));\n    return Collections.emptyMap();\n  }\n\n","sourceOld":"  public Map<String,Object> getDataMap() {\n    if (commandData instanceof Map) {\n      //noinspection unchecked\n      return (Map<String,Object>)commandData;\n    }\n    addError(StrUtils.formatString(\"The command ''{0}'' should have the values as a json object {key:val} format\", name));\n    return Collections.emptyMap();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/CommandOperation#getDataMap().mjava","pathOld":"/dev/null","sourceNew":"  public Map<String, Object> getDataMap() {\n    if (commandData instanceof Map) {\n      //noinspection unchecked\n      return (Map<String, Object>) commandData;\n    }\n    addError(StrUtils.formatString(\"The command ''{0}'' should have the values as a json object {key:val} format\", name));\n    return Collections.emptyMap();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/CommandOperation#getDataMap().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/CommandOperation#getDataMap().mjava","sourceNew":"  public Map<String, Object> getDataMap() {\n    if (commandData instanceof Map) {\n      //noinspection unchecked\n      return (Map<String, Object>) commandData;\n    }\n    addError(StrUtils.formatString(\"The command ''{0}'' should have the values as a json object {key:val} format\", name));\n    return Collections.emptyMap();\n  }\n\n","sourceOld":"  public Map<String,Object> getDataMap() {\n    if (commandData instanceof Map) {\n      //noinspection unchecked\n      return (Map<String,Object>)commandData;\n    }\n    addError(StrUtils.formatString(\"The command ''{0}'' should have the values as a json object {key:val} format\", name));\n    return Collections.emptyMap();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25","date":1499961129,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/CommandOperation#getDataMap().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/CommandOperation#getDataMap().mjava","sourceNew":"  public Map<String, Object> getDataMap() {\n    if (commandData instanceof Map) {\n      //noinspection unchecked\n      return (Map<String, Object>) commandData;\n    }\n    addError(StrUtils.formatString(\"The command ''{0}'' should have the values as a json object '{'key:val'}' format but is ''{1}''\", name, commandData));\n    return Collections.emptyMap();\n  }\n\n","sourceOld":"  public Map<String, Object> getDataMap() {\n    if (commandData instanceof Map) {\n      //noinspection unchecked\n      return (Map<String, Object>) commandData;\n    }\n    addError(StrUtils.formatString(\"The command ''{0}'' should have the values as a json object {key:val} format\", name));\n    return Collections.emptyMap();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/CommandOperation#getDataMap().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/CommandOperation#getDataMap().mjava","sourceNew":"  public Map<String, Object> getDataMap() {\n    if (commandData instanceof Map) {\n      //noinspection unchecked\n      return (Map<String, Object>) commandData;\n    }\n    addError(StrUtils.formatString(\"The command ''{0}'' should have the values as a json object '{'key:val'}' format but is ''{1}''\", name, commandData));\n    return Collections.emptyMap();\n  }\n\n","sourceOld":"  public Map<String, Object> getDataMap() {\n    if (commandData instanceof Map) {\n      //noinspection unchecked\n      return (Map<String, Object>) commandData;\n    }\n    addError(StrUtils.formatString(\"The command ''{0}'' should have the values as a json object {key:val} format\", name));\n    return Collections.emptyMap();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/CommandOperation#getDataMap().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/CommandOperation#getDataMap().mjava","sourceNew":"  public Map<String, Object> getDataMap() {\n    if (commandData instanceof Map) {\n      //noinspection unchecked\n      return (Map<String, Object>) commandData;\n    }\n    addError(StrUtils.formatString(\"The command ''{0}'' should have the values as a json object '{'key:val'}' format but is ''{1}''\", name, commandData));\n    return Collections.emptyMap();\n  }\n\n","sourceOld":"  public Map<String, Object> getDataMap() {\n    if (commandData instanceof Map) {\n      //noinspection unchecked\n      return (Map<String, Object>) commandData;\n    }\n    addError(StrUtils.formatString(\"The command ''{0}'' should have the values as a json object {key:val} format\", name));\n    return Collections.emptyMap();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7dfea4f7c80813344b0152e37fc18b31369e8ff","date":1592136683,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/CommandOperation#getDataMap().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/CommandOperation#getDataMap().mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  public Map<String, Object> getDataMap() {\n    if (commandData instanceof Map) {\n      //noinspection unchecked\n      return (Map<String, Object>) commandData;\n    }\n    addError(StrUtils.formatString(\"The command ''{0}'' should have the values as a json object '{'key:val'}' format but is ''{1}''\", name, commandData));\n    return Collections.emptyMap();\n  }\n\n","sourceOld":"  public Map<String, Object> getDataMap() {\n    if (commandData instanceof Map) {\n      //noinspection unchecked\n      return (Map<String, Object>) commandData;\n    }\n    addError(StrUtils.formatString(\"The command ''{0}'' should have the values as a json object '{'key:val'}' format but is ''{1}''\", name, commandData));\n    return Collections.emptyMap();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eba8995e4d085569e201ecf8bf75d1cb02fa74bf","date":1592955411,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/CommandOperation#getDataMap().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/CommandOperation#getDataMap().mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  public Map<String, Object> getDataMap() {\n    if (commandData instanceof Map) {\n      return (Map<String, Object>) commandData;\n    }\n    addError(StrUtils.formatString(\"The command ''{0}'' should have the values as a json object '{'key:val'}' format but is ''{1}''\", name, commandData));\n    return Collections.emptyMap();\n  }\n\n","sourceOld":"  @SuppressWarnings({\"unchecked\"})\n  public Map<String, Object> getDataMap() {\n    if (commandData instanceof Map) {\n      //noinspection unchecked\n      return (Map<String, Object>) commandData;\n    }\n    addError(StrUtils.formatString(\"The command ''{0}'' should have the values as a json object '{'key:val'}' format but is ''{1}''\", name, commandData));\n    return Collections.emptyMap();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2d21112928e2aedcec0c17025bc0e91f8fcfcf30":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","74aea047dff7f7c38a2d766827bd20d356f98c6a"],"c304e97e7c1d472bc70e801b35ee78583916c6cd":["28288370235ed02234a64753cdbf0c6ec096304a","219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["2d21112928e2aedcec0c17025bc0e91f8fcfcf30","a513b6a92751e54c76fb5447948c9e7d437163a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a513b6a92751e54c76fb5447948c9e7d437163a7":["2d21112928e2aedcec0c17025bc0e91f8fcfcf30"],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["560c18d71dad43d675158783c3840f8c80d6d39c"],"eba8995e4d085569e201ecf8bf75d1cb02fa74bf":["a7dfea4f7c80813344b0152e37fc18b31369e8ff"],"560c18d71dad43d675158783c3840f8c80d6d39c":["28288370235ed02234a64753cdbf0c6ec096304a","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"28288370235ed02234a64753cdbf0c6ec096304a":["2d21112928e2aedcec0c17025bc0e91f8fcfcf30","74aea047dff7f7c38a2d766827bd20d356f98c6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eba8995e4d085569e201ecf8bf75d1cb02fa74bf"]},"commit2Childs":{"2d21112928e2aedcec0c17025bc0e91f8fcfcf30":["74aea047dff7f7c38a2d766827bd20d356f98c6a","a513b6a92751e54c76fb5447948c9e7d437163a7","28288370235ed02234a64753cdbf0c6ec096304a"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25"],"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["e9017cf144952056066919f1ebc7897ff9bd71b1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2d21112928e2aedcec0c17025bc0e91f8fcfcf30","e9017cf144952056066919f1ebc7897ff9bd71b1"],"a513b6a92751e54c76fb5447948c9e7d437163a7":["74aea047dff7f7c38a2d766827bd20d356f98c6a"],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["eba8995e4d085569e201ecf8bf75d1cb02fa74bf"],"eba8995e4d085569e201ecf8bf75d1cb02fa74bf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"560c18d71dad43d675158783c3840f8c80d6d39c":["a7dfea4f7c80813344b0152e37fc18b31369e8ff"],"28288370235ed02234a64753cdbf0c6ec096304a":["c304e97e7c1d472bc70e801b35ee78583916c6cd","560c18d71dad43d675158783c3840f8c80d6d39c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}