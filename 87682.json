{"path":"contrib/xml-query-parser/src/demo/java/org/apache/lucene/xmlparser/webdemo/FormBasedXmlQueryDemo#openExampleIndex().mjava","commits":[{"id":"48723f897a60bd03cbbde5978fc56918af4ee635","date":1226103632,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/xml-query-parser/src/demo/java/org/apache/lucene/xmlparser/webdemo/FormBasedXmlQueryDemo#openExampleIndex().mjava","pathOld":"/dev/null","sourceNew":"\tprivate void openExampleIndex() throws CorruptIndexException, IOException {\r\n\r\n\t\t//Create a RAM-based index from our test data file\r\n\t\tRAMDirectory rd=new RAMDirectory();\r\n\t\tIndexWriter writer=new IndexWriter (rd,analyzer,IndexWriter.MaxFieldLength.LIMITED);\r\n\t\tInputStream dataIn=getServletContext().getResourceAsStream(\"/WEB-INF/data.tsv\");\r\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(dataIn));\r\n\t\tString line = br.readLine();\r\n\t\twhile(line!=null)\r\n\t\t{\r\n\t\t\tline=line.trim();\r\n\t\t\tif(line.length()>0)\r\n\t\t\t{\r\n\t\t\t\t//parse row and create a document\r\n\t\t\t\tStringTokenizer st=new StringTokenizer(line,\"\\t\");\r\n\t\t\t\tDocument doc=new Document();\r\n\t\t\t\tdoc.add(new Field(\"location\",st.nextToken(),Field.Store.YES,\r\n\t\t\t\t\t\tField.Index.ANALYZED_NO_NORMS));\r\n\t\t\t\tdoc.add(new Field(\"salary\",st.nextToken(),Field.Store.YES,\r\n\t\t\t\t\t\tField.Index.ANALYZED_NO_NORMS));\r\n\t\t\t\tdoc.add(new Field(\"type\",st.nextToken(),Field.Store.YES,\r\n\t\t\t\t\t\tField.Index.ANALYZED_NO_NORMS));\r\n\t\t\t\tdoc.add(new Field(\"description\",st.nextToken(),Field.Store.YES,\r\n\t\t\t\t\t\tField.Index.ANALYZED));\r\n\t\t\t\twriter.addDocument(doc);\r\n\t\t\t}\r\n\t\t\tline=br.readLine();\r\n\t\t}\r\n\t\twriter.close();\r\n\r\n\t\t//open searcher\r\n\t\tsearcher=new IndexSearcher(rd);\r\n\t}\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a361a621b184d9b73c9c9a37323a9845b8f8260","date":1226370946,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/xml-query-parser/src/demo/java/org/apache/lucene/xmlparser/webdemo/FormBasedXmlQueryDemo#openExampleIndex().mjava","pathOld":"contrib/xml-query-parser/src/demo/java/org/apache/lucene/xmlparser/webdemo/FormBasedXmlQueryDemo#openExampleIndex().mjava","sourceNew":"\tprivate void openExampleIndex() throws CorruptIndexException, IOException {\n\n\t\t//Create a RAM-based index from our test data file\n\t\tRAMDirectory rd=new RAMDirectory();\n\t\tIndexWriter writer=new IndexWriter (rd,analyzer,IndexWriter.MaxFieldLength.LIMITED);\n\t\tInputStream dataIn=getServletContext().getResourceAsStream(\"/WEB-INF/data.tsv\");\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(dataIn));\n\t\tString line = br.readLine();\n\t\twhile(line!=null)\n\t\t{\n\t\t\tline=line.trim();\n\t\t\tif(line.length()>0)\n\t\t\t{\n\t\t\t\t//parse row and create a document\n\t\t\t\tStringTokenizer st=new StringTokenizer(line,\"\\t\");\n\t\t\t\tDocument doc=new Document();\n\t\t\t\tdoc.add(new Field(\"location\",st.nextToken(),Field.Store.YES,\n\t\t\t\t\t\tField.Index.ANALYZED_NO_NORMS));\n\t\t\t\tdoc.add(new Field(\"salary\",st.nextToken(),Field.Store.YES,\n\t\t\t\t\t\tField.Index.ANALYZED_NO_NORMS));\n\t\t\t\tdoc.add(new Field(\"type\",st.nextToken(),Field.Store.YES,\n\t\t\t\t\t\tField.Index.ANALYZED_NO_NORMS));\n\t\t\t\tdoc.add(new Field(\"description\",st.nextToken(),Field.Store.YES,\n\t\t\t\t\t\tField.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t}\n\t\t\tline=br.readLine();\n\t\t}\n\t\twriter.close();\n\n\t\t//open searcher\n\t\tsearcher=new IndexSearcher(rd);\n\t}\n\n","sourceOld":"\tprivate void openExampleIndex() throws CorruptIndexException, IOException {\r\n\r\n\t\t//Create a RAM-based index from our test data file\r\n\t\tRAMDirectory rd=new RAMDirectory();\r\n\t\tIndexWriter writer=new IndexWriter (rd,analyzer,IndexWriter.MaxFieldLength.LIMITED);\r\n\t\tInputStream dataIn=getServletContext().getResourceAsStream(\"/WEB-INF/data.tsv\");\r\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(dataIn));\r\n\t\tString line = br.readLine();\r\n\t\twhile(line!=null)\r\n\t\t{\r\n\t\t\tline=line.trim();\r\n\t\t\tif(line.length()>0)\r\n\t\t\t{\r\n\t\t\t\t//parse row and create a document\r\n\t\t\t\tStringTokenizer st=new StringTokenizer(line,\"\\t\");\r\n\t\t\t\tDocument doc=new Document();\r\n\t\t\t\tdoc.add(new Field(\"location\",st.nextToken(),Field.Store.YES,\r\n\t\t\t\t\t\tField.Index.ANALYZED_NO_NORMS));\r\n\t\t\t\tdoc.add(new Field(\"salary\",st.nextToken(),Field.Store.YES,\r\n\t\t\t\t\t\tField.Index.ANALYZED_NO_NORMS));\r\n\t\t\t\tdoc.add(new Field(\"type\",st.nextToken(),Field.Store.YES,\r\n\t\t\t\t\t\tField.Index.ANALYZED_NO_NORMS));\r\n\t\t\t\tdoc.add(new Field(\"description\",st.nextToken(),Field.Store.YES,\r\n\t\t\t\t\t\tField.Index.ANALYZED));\r\n\t\t\t\twriter.addDocument(doc);\r\n\t\t\t}\r\n\t\t\tline=br.readLine();\r\n\t\t}\r\n\t\twriter.close();\r\n\r\n\t\t//open searcher\r\n\t\tsearcher=new IndexSearcher(rd);\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4256bc1b3c94786287ccdfc751230374521843cf","date":1254612273,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/xml-query-parser/src/demo/java/org/apache/lucene/xmlparser/webdemo/FormBasedXmlQueryDemo#openExampleIndex().mjava","pathOld":"contrib/xml-query-parser/src/demo/java/org/apache/lucene/xmlparser/webdemo/FormBasedXmlQueryDemo#openExampleIndex().mjava","sourceNew":"\tprivate void openExampleIndex() throws CorruptIndexException, IOException {\n\n\t\t//Create a RAM-based index from our test data file\n\t\tRAMDirectory rd=new RAMDirectory();\n\t\tIndexWriter writer=new IndexWriter (rd,analyzer,IndexWriter.MaxFieldLength.LIMITED);\n\t\tInputStream dataIn=getServletContext().getResourceAsStream(\"/WEB-INF/data.tsv\");\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(dataIn));\n\t\tString line = br.readLine();\n\t\twhile(line!=null)\n\t\t{\n\t\t\tline=line.trim();\n\t\t\tif(line.length()>0)\n\t\t\t{\n\t\t\t\t//parse row and create a document\n\t\t\t\tStringTokenizer st=new StringTokenizer(line,\"\\t\");\n\t\t\t\tDocument doc=new Document();\n\t\t\t\tdoc.add(new Field(\"location\",st.nextToken(),Field.Store.YES,\n\t\t\t\t\t\tField.Index.ANALYZED_NO_NORMS));\n\t\t\t\tdoc.add(new Field(\"salary\",st.nextToken(),Field.Store.YES,\n\t\t\t\t\t\tField.Index.ANALYZED_NO_NORMS));\n\t\t\t\tdoc.add(new Field(\"type\",st.nextToken(),Field.Store.YES,\n\t\t\t\t\t\tField.Index.ANALYZED_NO_NORMS));\n\t\t\t\tdoc.add(new Field(\"description\",st.nextToken(),Field.Store.YES,\n\t\t\t\t\t\tField.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t}\n\t\t\tline=br.readLine();\n\t\t}\n\t\twriter.close();\n\n\t\t//open searcher\n\t\tsearcher=new IndexSearcher(rd, true);\n\t}\n\n","sourceOld":"\tprivate void openExampleIndex() throws CorruptIndexException, IOException {\n\n\t\t//Create a RAM-based index from our test data file\n\t\tRAMDirectory rd=new RAMDirectory();\n\t\tIndexWriter writer=new IndexWriter (rd,analyzer,IndexWriter.MaxFieldLength.LIMITED);\n\t\tInputStream dataIn=getServletContext().getResourceAsStream(\"/WEB-INF/data.tsv\");\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(dataIn));\n\t\tString line = br.readLine();\n\t\twhile(line!=null)\n\t\t{\n\t\t\tline=line.trim();\n\t\t\tif(line.length()>0)\n\t\t\t{\n\t\t\t\t//parse row and create a document\n\t\t\t\tStringTokenizer st=new StringTokenizer(line,\"\\t\");\n\t\t\t\tDocument doc=new Document();\n\t\t\t\tdoc.add(new Field(\"location\",st.nextToken(),Field.Store.YES,\n\t\t\t\t\t\tField.Index.ANALYZED_NO_NORMS));\n\t\t\t\tdoc.add(new Field(\"salary\",st.nextToken(),Field.Store.YES,\n\t\t\t\t\t\tField.Index.ANALYZED_NO_NORMS));\n\t\t\t\tdoc.add(new Field(\"type\",st.nextToken(),Field.Store.YES,\n\t\t\t\t\t\tField.Index.ANALYZED_NO_NORMS));\n\t\t\t\tdoc.add(new Field(\"description\",st.nextToken(),Field.Store.YES,\n\t\t\t\t\t\tField.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t}\n\t\t\tline=br.readLine();\n\t\t}\n\t\twriter.close();\n\n\t\t//open searcher\n\t\tsearcher=new IndexSearcher(rd);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/demo/java/org/apache/lucene/xmlparser/webdemo/FormBasedXmlQueryDemo#openExampleIndex().mjava","pathOld":"contrib/xml-query-parser/src/demo/java/org/apache/lucene/xmlparser/webdemo/FormBasedXmlQueryDemo#openExampleIndex().mjava","sourceNew":"\tprivate void openExampleIndex() throws CorruptIndexException, IOException {\n\n\t\t//Create a RAM-based index from our test data file\n\t\tRAMDirectory rd=new RAMDirectory();\n\t\tIndexWriter writer=new IndexWriter (rd,analyzer,IndexWriter.MaxFieldLength.LIMITED);\n\t\tInputStream dataIn=getServletContext().getResourceAsStream(\"/WEB-INF/data.tsv\");\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(dataIn));\n\t\tString line = br.readLine();\n\t\twhile(line!=null)\n\t\t{\n\t\t\tline=line.trim();\n\t\t\tif(line.length()>0)\n\t\t\t{\n\t\t\t\t//parse row and create a document\n\t\t\t\tStringTokenizer st=new StringTokenizer(line,\"\\t\");\n\t\t\t\tDocument doc=new Document();\n\t\t\t\tdoc.add(new Field(\"location\",st.nextToken(),Field.Store.YES,\n\t\t\t\t\t\tField.Index.ANALYZED_NO_NORMS));\n\t\t\t\tdoc.add(new Field(\"salary\",st.nextToken(),Field.Store.YES,\n\t\t\t\t\t\tField.Index.ANALYZED_NO_NORMS));\n\t\t\t\tdoc.add(new Field(\"type\",st.nextToken(),Field.Store.YES,\n\t\t\t\t\t\tField.Index.ANALYZED_NO_NORMS));\n\t\t\t\tdoc.add(new Field(\"description\",st.nextToken(),Field.Store.YES,\n\t\t\t\t\t\tField.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t}\n\t\t\tline=br.readLine();\n\t\t}\n\t\twriter.close();\n\n\t\t//open searcher\n\t\tsearcher=new IndexSearcher(rd, true);\n\t}\n\n","sourceOld":"\tprivate void openExampleIndex() throws CorruptIndexException, IOException {\n\n\t\t//Create a RAM-based index from our test data file\n\t\tRAMDirectory rd=new RAMDirectory();\n\t\tIndexWriter writer=new IndexWriter (rd,analyzer,IndexWriter.MaxFieldLength.LIMITED);\n\t\tInputStream dataIn=getServletContext().getResourceAsStream(\"/WEB-INF/data.tsv\");\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(dataIn));\n\t\tString line = br.readLine();\n\t\twhile(line!=null)\n\t\t{\n\t\t\tline=line.trim();\n\t\t\tif(line.length()>0)\n\t\t\t{\n\t\t\t\t//parse row and create a document\n\t\t\t\tStringTokenizer st=new StringTokenizer(line,\"\\t\");\n\t\t\t\tDocument doc=new Document();\n\t\t\t\tdoc.add(new Field(\"location\",st.nextToken(),Field.Store.YES,\n\t\t\t\t\t\tField.Index.ANALYZED_NO_NORMS));\n\t\t\t\tdoc.add(new Field(\"salary\",st.nextToken(),Field.Store.YES,\n\t\t\t\t\t\tField.Index.ANALYZED_NO_NORMS));\n\t\t\t\tdoc.add(new Field(\"type\",st.nextToken(),Field.Store.YES,\n\t\t\t\t\t\tField.Index.ANALYZED_NO_NORMS));\n\t\t\t\tdoc.add(new Field(\"description\",st.nextToken(),Field.Store.YES,\n\t\t\t\t\t\tField.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t}\n\t\t\tline=br.readLine();\n\t\t}\n\t\twriter.close();\n\n\t\t//open searcher\n\t\tsearcher=new IndexSearcher(rd, true);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"48723f897a60bd03cbbde5978fc56918af4ee635":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["48723f897a60bd03cbbde5978fc56918af4ee635"],"4256bc1b3c94786287ccdfc751230374521843cf":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4256bc1b3c94786287ccdfc751230374521843cf"]},"commit2Childs":{"48723f897a60bd03cbbde5978fc56918af4ee635":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["48723f897a60bd03cbbde5978fc56918af4ee635"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["4256bc1b3c94786287ccdfc751230374521843cf"],"4256bc1b3c94786287ccdfc751230374521843cf":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}