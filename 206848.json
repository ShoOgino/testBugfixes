{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","sourceNew":"  /**\n   * Test using IW.addIndexes\n   * \n   * @throws Exception\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    if (random.nextBoolean()) {\n      iwc.setMergePolicy(NoMergePolicy.NO_COMPOUND_FILES);\n    } else {\n      iwc.setMergePolicy(NoMergePolicy.COMPOUND_FILES);\n    }\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n    assertTrue(r1.isCurrent()); // we have seen all changes - no change after opening the NRT reader\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    Document doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    Document doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  /**\n   * Test using IW.addIndexes\n   * \n   * @throws Exception\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    if (random.nextBoolean()) {\n      iwc.setMergePolicy(NoMergePolicy.NO_COMPOUND_FILES);\n    } else {\n      iwc.setMergePolicy(NoMergePolicy.COMPOUND_FILES);\n    }\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n    assertTrue(r1.isCurrent()); // we have seen all changes - no change after opening the NRT reader\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    Document doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    Document doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","sourceNew":"  /**\n   * Test using IW.addIndexes\n   * \n   * @throws Exception\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    if (random().nextBoolean()) {\n      iwc.setMergePolicy(NoMergePolicy.NO_COMPOUND_FILES);\n    } else {\n      iwc.setMergePolicy(NoMergePolicy.COMPOUND_FILES);\n    }\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n    assertTrue(r1.isCurrent()); // we have seen all changes - no change after opening the NRT reader\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    Document doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    Document doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  /**\n   * Test using IW.addIndexes\n   * \n   * @throws Exception\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    if (random.nextBoolean()) {\n      iwc.setMergePolicy(NoMergePolicy.NO_COMPOUND_FILES);\n    } else {\n      iwc.setMergePolicy(NoMergePolicy.COMPOUND_FILES);\n    }\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n    assertTrue(r1.isCurrent()); // we have seen all changes - no change after opening the NRT reader\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    Document doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    Document doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4","date":1341839195,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","sourceNew":"  /**\n   * Test using IW.addIndexes\n   * \n   * @throws Exception\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    if (random().nextBoolean()) {\n      iwc.setMergePolicy(NoMergePolicy.NO_COMPOUND_FILES);\n    } else {\n      iwc.setMergePolicy(NoMergePolicy.COMPOUND_FILES);\n    }\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n    assertTrue(r1.isCurrent()); // we have seen all changes - no change after opening the NRT reader\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    StoredDocument doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    StoredDocument doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  /**\n   * Test using IW.addIndexes\n   * \n   * @throws Exception\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    if (random().nextBoolean()) {\n      iwc.setMergePolicy(NoMergePolicy.NO_COMPOUND_FILES);\n    } else {\n      iwc.setMergePolicy(NoMergePolicy.COMPOUND_FILES);\n    }\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n    assertTrue(r1.isCurrent()); // we have seen all changes - no change after opening the NRT reader\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    Document doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    Document doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","sourceNew":"  /**\n   * Test using IW.addIndexes\n   * \n   * @throws Exception\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    if (random().nextBoolean()) {\n      iwc.setMergePolicy(NoMergePolicy.NO_COMPOUND_FILES);\n    } else {\n      iwc.setMergePolicy(NoMergePolicy.COMPOUND_FILES);\n    }\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n    assertTrue(r1.isCurrent()); // we have seen all changes - no change after opening the NRT reader\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    StoredDocument doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    StoredDocument doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  /**\n   * Test using IW.addIndexes\n   * \n   * @throws Exception\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    if (random().nextBoolean()) {\n      iwc.setMergePolicy(NoMergePolicy.NO_COMPOUND_FILES);\n    } else {\n      iwc.setMergePolicy(NoMergePolicy.COMPOUND_FILES);\n    }\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n    assertTrue(r1.isCurrent()); // we have seen all changes - no change after opening the NRT reader\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    Document doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    Document doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","sourceNew":"  /**\n   * Test using IW.addIndexes\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    if (random().nextBoolean()) {\n      iwc.setMergePolicy(NoMergePolicy.NO_COMPOUND_FILES);\n    } else {\n      iwc.setMergePolicy(NoMergePolicy.COMPOUND_FILES);\n    }\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n    assertTrue(r1.isCurrent()); // we have seen all changes - no change after opening the NRT reader\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    StoredDocument doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    StoredDocument doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  /**\n   * Test using IW.addIndexes\n   * \n   * @throws Exception\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    if (random().nextBoolean()) {\n      iwc.setMergePolicy(NoMergePolicy.NO_COMPOUND_FILES);\n    } else {\n      iwc.setMergePolicy(NoMergePolicy.COMPOUND_FILES);\n    }\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n    assertTrue(r1.isCurrent()); // we have seen all changes - no change after opening the NRT reader\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    StoredDocument doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    StoredDocument doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"527cc14542789f47d75da436cb4287d1ab887e34","date":1391705548,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","sourceNew":"  /**\n   * Test using IW.addIndexes\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    if (random().nextBoolean()) {\n      iwc.setMergePolicy(NoMergePolicy.NO_COMPOUND_FILES);\n    } else {\n      iwc.setMergePolicy(NoMergePolicy.COMPOUND_FILES);\n    }\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n    assertTrue(r1.isCurrent()); // we have seen all changes - no change after opening the NRT reader\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    StoredDocument doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    StoredDocument doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  /**\n   * Test using IW.addIndexes\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    if (random().nextBoolean()) {\n      iwc.setMergePolicy(NoMergePolicy.NO_COMPOUND_FILES);\n    } else {\n      iwc.setMergePolicy(NoMergePolicy.COMPOUND_FILES);\n    }\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n    assertTrue(r1.isCurrent()); // we have seen all changes - no change after opening the NRT reader\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    StoredDocument doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    StoredDocument doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","sourceNew":"  /**\n   * Test using IW.addIndexes\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    if (random().nextBoolean()) {\n      iwc.setMergePolicy(NoMergePolicy.NO_COMPOUND_FILES);\n    } else {\n      iwc.setMergePolicy(NoMergePolicy.COMPOUND_FILES);\n    }\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.shutdown();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n    assertTrue(r1.isCurrent()); // we have seen all changes - no change after opening the NRT reader\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    StoredDocument doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    StoredDocument doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.shutdown();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  /**\n   * Test using IW.addIndexes\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    if (random().nextBoolean()) {\n      iwc.setMergePolicy(NoMergePolicy.NO_COMPOUND_FILES);\n    } else {\n      iwc.setMergePolicy(NoMergePolicy.COMPOUND_FILES);\n    }\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n    assertTrue(r1.isCurrent()); // we have seen all changes - no change after opening the NRT reader\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    StoredDocument doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    StoredDocument doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e2fb55c0777755badd3b46d8140f3d4301febed","date":1398881584,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","sourceNew":"  /**\n   * Test using IW.addIndexes\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    iwc.setMergePolicy(NoMergePolicy.INSTANCE);\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.shutdown();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n    assertTrue(r1.isCurrent()); // we have seen all changes - no change after opening the NRT reader\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    StoredDocument doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    StoredDocument doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.shutdown();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  /**\n   * Test using IW.addIndexes\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    if (random().nextBoolean()) {\n      iwc.setMergePolicy(NoMergePolicy.NO_COMPOUND_FILES);\n    } else {\n      iwc.setMergePolicy(NoMergePolicy.COMPOUND_FILES);\n    }\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.shutdown();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n    assertTrue(r1.isCurrent()); // we have seen all changes - no change after opening the NRT reader\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    StoredDocument doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    StoredDocument doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.shutdown();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","sourceNew":"  /**\n   * Test using IW.addIndexes\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    iwc.setMergePolicy(NoMergePolicy.INSTANCE);\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.shutdown();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n    assertTrue(r1.isCurrent()); // we have seen all changes - no change after opening the NRT reader\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    StoredDocument doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    StoredDocument doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.shutdown();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  /**\n   * Test using IW.addIndexes\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    iwc.setMergePolicy(NoMergePolicy.INSTANCE);\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.shutdown();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n    assertTrue(r1.isCurrent()); // we have seen all changes - no change after opening the NRT reader\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    StoredDocument doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    StoredDocument doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.shutdown();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","sourceNew":"  /**\n   * Test using IW.addIndexes\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    iwc.setMergePolicy(NoMergePolicy.INSTANCE);\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n    assertTrue(r1.isCurrent()); // we have seen all changes - no change after opening the NRT reader\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    StoredDocument doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    StoredDocument doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  /**\n   * Test using IW.addIndexes\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    iwc.setMergePolicy(NoMergePolicy.INSTANCE);\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.shutdown();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n    assertTrue(r1.isCurrent()); // we have seen all changes - no change after opening the NRT reader\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    StoredDocument doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    StoredDocument doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.shutdown();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f695337371af9f2554c2d7ecc301f4306bd864b","date":1433621466,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","sourceNew":"  /**\n   * Test using IW.addIndexes\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    iwc.setMergePolicy(NoMergePolicy.INSTANCE);\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n\n    // A commit is seen as a change to NRT reader:\n    assertFalse(r1.isCurrent());\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    StoredDocument doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    StoredDocument doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  /**\n   * Test using IW.addIndexes\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    iwc.setMergePolicy(NoMergePolicy.INSTANCE);\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n    assertTrue(r1.isCurrent()); // we have seen all changes - no change after opening the NRT reader\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    StoredDocument doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    StoredDocument doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","sourceNew":"  /**\n   * Test using IW.addIndexes\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    iwc.setMergePolicy(NoMergePolicy.INSTANCE);\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n\n    // A commit is seen as a change to NRT reader:\n    assertFalse(r1.isCurrent());\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    Document doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    Document doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  /**\n   * Test using IW.addIndexes\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    iwc.setMergePolicy(NoMergePolicy.INSTANCE);\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n\n    // A commit is seen as a change to NRT reader:\n    assertFalse(r1.isCurrent());\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    StoredDocument doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    StoredDocument doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f354ba79a5a3e8491ec2953f14f365a02c058ac","date":1598293148,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader#testAddIndexes().mjava","sourceNew":"  /**\n   * Test using IW.addIndexes\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random())).setMaxFullFlushMergeWaitMillis(0);\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    iwc.setMergePolicy(NoMergePolicy.INSTANCE);\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n\n    // A commit is seen as a change to NRT reader:\n    assertFalse(r1.isCurrent());\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    Document doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    Document doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","sourceOld":"  /**\n   * Test using IW.addIndexes\n   */\n  public void testAddIndexes() throws Exception {\n    boolean doFullMerge = false;\n\n    Directory dir1 = getAssertNoDeletesDirectory(newDirectory());\n    IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n    if (iwc.getMaxBufferedDocs() < 20) {\n      iwc.setMaxBufferedDocs(20);\n    }\n    // no merging\n    iwc.setMergePolicy(NoMergePolicy.INSTANCE);\n    IndexWriter writer = new IndexWriter(dir1, iwc);\n\n    // create the index\n    createIndexNoClose(!doFullMerge, \"index1\", writer);\n    writer.flush(false, true);\n\n    // create a 2nd index\n    Directory dir2 = newDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, newIndexWriterConfig(new MockAnalyzer(random())));\n    createIndexNoClose(!doFullMerge, \"index2\", writer2);\n    writer2.close();\n\n    DirectoryReader r0 = writer.getReader();\n    assertTrue(r0.isCurrent());\n    writer.addIndexes(dir2);\n    assertFalse(r0.isCurrent());\n    r0.close();\n\n    DirectoryReader r1 = writer.getReader();\n    assertTrue(r1.isCurrent());\n\n    writer.commit();\n\n    // A commit is seen as a change to NRT reader:\n    assertFalse(r1.isCurrent());\n\n    assertEquals(200, r1.maxDoc());\n\n    int index2df = r1.docFreq(new Term(\"indexname\", \"index2\"));\n\n    assertEquals(100, index2df);\n\n    // verify the docs are from different indexes\n    Document doc5 = r1.document(5);\n    assertEquals(\"index1\", doc5.get(\"indexname\"));\n    Document doc150 = r1.document(150);\n    assertEquals(\"index2\", doc150.get(\"indexname\"));\n    r1.close();\n    writer.close();\n    dir1.close();\n    dir2.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2fb55c0777755badd3b46d8140f3d4301febed":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"527cc14542789f47d75da436cb4287d1ab887e34":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["1d028314cced5858683a1bb4741423d0f934257b"],"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["7e2fb55c0777755badd3b46d8140f3d4301febed"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1d028314cced5858683a1bb4741423d0f934257b":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["527cc14542789f47d75da436cb4287d1ab887e34"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3f354ba79a5a3e8491ec2953f14f365a02c058ac":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"4f695337371af9f2554c2d7ecc301f4306bd864b":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f354ba79a5a3e8491ec2953f14f365a02c058ac"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["4f695337371af9f2554c2d7ecc301f4306bd864b"]},"commit2Childs":{"7e2fb55c0777755badd3b46d8140f3d4301febed":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"527cc14542789f47d75da436cb4287d1ab887e34":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["527cc14542789f47d75da436cb4287d1ab887e34"],"8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4":["1d028314cced5858683a1bb4741423d0f934257b"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"1d028314cced5858683a1bb4741423d0f934257b":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["4f695337371af9f2554c2d7ecc301f4306bd864b"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["7e2fb55c0777755badd3b46d8140f3d4301febed"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["8f0e28f2a7f0f3f0fca1a2ffedaa10c7ac9536c4","1d028314cced5858683a1bb4741423d0f934257b"],"3f354ba79a5a3e8491ec2953f14f365a02c058ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4f695337371af9f2554c2d7ecc301f4306bd864b":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["3f354ba79a5a3e8491ec2953f14f365a02c058ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}