{"path":"lucene/core/src/test/org/apache/lucene/util/TestIOUtils.MockLinuxFileSystemProvider#getFileStore(Path).mjava","commits":[{"id":"f1db7bd2068060be0b68fcca95c8270c7cb60f6c","date":1419003415,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestIOUtils.MockLinuxFileSystemProvider#getFileStore(Path).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public FileStore getFileStore(Path path) throws IOException {\n      FileStore ret = filesToStore.get(path.toString());\n      if (ret == null) {\n        throw new IllegalArgumentException(\"this mock doesnt know wtf to do with: \" + path);\n      }\n      // act like the linux fs provider here, return a crazy rootfs one\n      if (ret.toString().startsWith(root + \" (\")) {\n        return new MockFileStore(ret, root + \" (rootfs)\", \"rootfs\");\n      }\n\n      return ret;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["685c242a4f1bc78f1fa61c131bd557355edad6c7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"685c242a4f1bc78f1fa61c131bd557355edad6c7","date":1429208182,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestIOUtils.MockLinuxFileSystemProvider#getFileStore(Path).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestIOUtils.MockLinuxFileSystemProvider#getFileStore(Path).mjava","sourceNew":"    @Override\n    public FileStore getFileStore(Path path) throws IOException {\n      FileStore ret = filesToStore.get(path.toString());\n      if (ret == null) {\n        throw new IllegalArgumentException(\"this mock doesnt know wtf to do with: \" + path);\n      }\n      // act like the linux fs provider here, return a crazy rootfs one\n      if (ret.toString().startsWith(root + \" (\")) {\n        return new MockFileStore(root + \" (rootfs)\", \"rootfs\", \"rootfs\");\n      }\n\n      return ret;\n    }\n\n","sourceOld":"    @Override\n    public FileStore getFileStore(Path path) throws IOException {\n      FileStore ret = filesToStore.get(path.toString());\n      if (ret == null) {\n        throw new IllegalArgumentException(\"this mock doesnt know wtf to do with: \" + path);\n      }\n      // act like the linux fs provider here, return a crazy rootfs one\n      if (ret.toString().startsWith(root + \" (\")) {\n        return new MockFileStore(ret, root + \" (rootfs)\", \"rootfs\");\n      }\n\n      return ret;\n    }\n\n","bugFix":["f1db7bd2068060be0b68fcca95c8270c7cb60f6c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"685c242a4f1bc78f1fa61c131bd557355edad6c7":["f1db7bd2068060be0b68fcca95c8270c7cb60f6c"],"f1db7bd2068060be0b68fcca95c8270c7cb60f6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["685c242a4f1bc78f1fa61c131bd557355edad6c7"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f1db7bd2068060be0b68fcca95c8270c7cb60f6c"],"685c242a4f1bc78f1fa61c131bd557355edad6c7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f1db7bd2068060be0b68fcca95c8270c7cb60f6c":["685c242a4f1bc78f1fa61c131bd557355edad6c7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}