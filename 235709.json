{"path":"src/test/org/apache/solr/update/CommitListener[AutoCommitTest]#waitForCommit(int).mjava","commits":[{"id":"4f79ef2b5b190ea507e4b1204ad05c6ac6592f08","date":1201672558,"type":0,"author":"Mike Klaas","isMerge":false,"pathNew":"src/test/org/apache/solr/update/CommitListener[AutoCommitTest]#waitForCommit(int).mjava","pathOld":"/dev/null","sourceNew":"  public boolean waitForCommit(int timeout) {\n    triggered = false;\n    for (int towait=timeout; towait > 0; towait -= 250) {\n      if (triggered) break;\n      try { Thread.sleep( 250 ); } catch (InterruptedException e) {}\n    }\n    return triggered;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0b8ad483f79618324f541eafcb248c12efcff732","date":1217975559,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/update/CommitListener[AutoCommitTest]#waitForCommit(int).mjava","pathOld":"src/test/org/apache/solr/update/CommitListener[AutoCommitTest]#waitForCommit(int).mjava","sourceNew":"  public boolean waitForCommit(int timeout) {\n    triggered = false;\n    for (int towait=timeout; towait > 0; towait -= 250) {\n      try {\n        if (triggered) {\n          Thread.sleep( 500 );\n          break;\n        }\n        Thread.sleep( 250 );\n      } catch (InterruptedException e) {}\n    }\n    return triggered;\n  }\n\n","sourceOld":"  public boolean waitForCommit(int timeout) {\n    triggered = false;\n    for (int towait=timeout; towait > 0; towait -= 250) {\n      if (triggered) break;\n      try { Thread.sleep( 250 ); } catch (InterruptedException e) {}\n    }\n    return triggered;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6868c259eb4c44f9a4aaa824280e49dff8b5891","date":1251379465,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/update/CommitListener[AutoCommitTest]#waitForCommit(int).mjava","pathOld":"src/test/org/apache/solr/update/CommitListener[AutoCommitTest]#waitForCommit(int).mjava","sourceNew":"  public boolean waitForCommit(int timeout) {\n    //triggered = false;\n    \n    for (int towait=timeout; towait > 0; towait -= 250) {\n      try {\n        if (triggered) {\n          RefCounted<SolrIndexSearcher> holder = core.getSearcher();\n          SolrIndexSearcher s = holder.get();\n          holder.decref();\n          // since there could be two commits in a row, don't test for a specific new searcher\n          // just test that the old one has been replaced.\n          if (s != currentSearcher) return true;\n          Thread.sleep(250);\n          break;\n        }\n        Thread.sleep( 250 );\n      } catch (InterruptedException e) {}\n    }\n    return false;\n  }\n\n","sourceOld":"  public boolean waitForCommit(int timeout) {\n    triggered = false;\n    for (int towait=timeout; towait > 0; towait -= 250) {\n      try {\n        if (triggered) {\n          Thread.sleep( 500 );\n          break;\n        }\n        Thread.sleep( 250 );\n      } catch (InterruptedException e) {}\n    }\n    return triggered;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/update/CommitListener[AutoCommitTest]#waitForCommit(int).mjava","pathOld":"src/test/org/apache/solr/update/CommitListener[AutoCommitTest]#waitForCommit(int).mjava","sourceNew":"  public boolean waitForCommit(int timeout) {\n    //triggered = false;\n    \n    for (int towait=timeout; towait > 0; towait -= 250) {\n      try {\n        if (triggered) {\n          RefCounted<SolrIndexSearcher> holder = core.getSearcher();\n          SolrIndexSearcher s = holder.get();\n          holder.decref();\n          // since there could be two commits in a row, don't test for a specific new searcher\n          // just test that the old one has been replaced.\n          if (s != currentSearcher) return true;\n          Thread.sleep(250);\n          break;\n        }\n        Thread.sleep( 250 );\n      } catch (InterruptedException e) {}\n    }\n    return false;\n  }\n\n","sourceOld":"  public boolean waitForCommit(int timeout) {\n    //triggered = false;\n    \n    for (int towait=timeout; towait > 0; towait -= 250) {\n      try {\n        if (triggered) {\n          RefCounted<SolrIndexSearcher> holder = core.getSearcher();\n          SolrIndexSearcher s = holder.get();\n          holder.decref();\n          // since there could be two commits in a row, don't test for a specific new searcher\n          // just test that the old one has been replaced.\n          if (s != currentSearcher) return true;\n          Thread.sleep(250);\n          break;\n        }\n        Thread.sleep( 250 );\n      } catch (InterruptedException e) {}\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f6868c259eb4c44f9a4aaa824280e49dff8b5891":["0b8ad483f79618324f541eafcb248c12efcff732"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["f6868c259eb4c44f9a4aaa824280e49dff8b5891"],"4f79ef2b5b190ea507e4b1204ad05c6ac6592f08":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"0b8ad483f79618324f541eafcb248c12efcff732":["4f79ef2b5b190ea507e4b1204ad05c6ac6592f08"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f6868c259eb4c44f9a4aaa824280e49dff8b5891":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4f79ef2b5b190ea507e4b1204ad05c6ac6592f08"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"4f79ef2b5b190ea507e4b1204ad05c6ac6592f08":["0b8ad483f79618324f541eafcb248c12efcff732"],"0b8ad483f79618324f541eafcb248c12efcff732":["f6868c259eb4c44f9a4aaa824280e49dff8b5891"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}