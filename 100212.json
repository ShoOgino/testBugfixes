{"path":"lucene/core/src/java/org/apache/lucene/store/Directory#obtainLock(String).mjava","commits":[{"id":"618635065f043788c9e034f96ca5cd5cea1b4592","date":1433442044,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#obtainLock(String).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * Returns an obtained {@link Lock}.\n   * @param name the name of the lock file\n   * @throws LockObtainFailedException (optional specific exception) if the lock could\n   *         not be obtained because it is currently held elsewhere.\n   * @throws IOException if any i/o error occurs attempting to gain the lock\n   */\n  public abstract Lock obtainLock(String name) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f3adea0022cffaaa592081efed775a7b8bf86b51","date":1532414870,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#obtainLock(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory#obtainLock(String).mjava","sourceNew":"  /** \n   * Acquires and returns a {@link Lock} for a file with the given name.\n   *\n   * @param name the name of the lock file\n   * @throws LockObtainFailedException (optional specific exception) if the lock could\n   *         not be obtained because it is currently held elsewhere.\n   * @throws IOException if any i/o error occurs attempting to gain the lock\n   */\n  public abstract Lock obtainLock(String name) throws IOException;\n\n","sourceOld":"  /** \n   * Returns an obtained {@link Lock}.\n   * @param name the name of the lock file\n   * @throws LockObtainFailedException (optional specific exception) if the lock could\n   *         not be obtained because it is currently held elsewhere.\n   * @throws IOException if any i/o error occurs attempting to gain the lock\n   */\n  public abstract Lock obtainLock(String name) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"618635065f043788c9e034f96ca5cd5cea1b4592":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f3adea0022cffaaa592081efed775a7b8bf86b51":["618635065f043788c9e034f96ca5cd5cea1b4592"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f3adea0022cffaaa592081efed775a7b8bf86b51"]},"commit2Childs":{"618635065f043788c9e034f96ca5cd5cea1b4592":["f3adea0022cffaaa592081efed775a7b8bf86b51"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["618635065f043788c9e034f96ca5cd5cea1b4592"],"f3adea0022cffaaa592081efed775a7b8bf86b51":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}