{"path":"lucene/facet/src/test/org/apache/lucene/facet/enhancements/params/DefaultEnhancementsIndexingParamsTest#testCategoryEnhancements().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/enhancements/params/DefaultEnhancementsIndexingParamsTest#testCategoryEnhancements().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/enhancements/params/DefaultEnhancementsIndexingParamsTest#testCategoryEnhancements().mjava","sourceNew":"  @Test\n  public void testCategoryEnhancements() {\n    EnhancementsIndexingParams params = \n      new DefaultEnhancementsIndexingParams(\n          new CategoryEnhancementDummy1());\n\n    // check retainable properties \n    List<Class<? extends CategoryProperty>> retainableProps = params\n        .getRetainableProperties();\n    assertNull(\"Unexpected content in retainable list\", retainableProps);\n\n    params.addCategoryEnhancements(new CategoryEnhancementDummy2());\n\n    List<CategoryEnhancement> enhancements = params\n        .getCategoryEnhancements();\n\n    assertEquals(\"Wrong number of enhancements\", 2, enhancements.size());\n\n    assertTrue(\"Wrong first enhancement\",\n        enhancements.get(0) instanceof CategoryEnhancementDummy1);\n    assertTrue(\"Wrong second enhancement\",\n        enhancements.get(1) instanceof CategoryEnhancementDummy2);\n\n    // re-check retainable properties \n    retainableProps = params.getRetainableProperties();\n    assertNotNull(\"Unexpected empty retainable list\", retainableProps);\n    assertEquals(\"Unexpected size of retainable list\", 1, retainableProps\n        .size());\n    assertEquals(\"Wrong property in retainable list\", DummyProperty.class,\n        retainableProps.get(0));\n\n  }\n\n","sourceOld":"  @Test\n  public void testCategoryEnhancements() {\n    EnhancementsIndexingParams params = \n      new DefaultEnhancementsIndexingParams(\n          new CategoryEnhancementDummy1());\n\n    // check retainable properties \n    List<Class<? extends CategoryProperty>> retainableProps = params\n        .getRetainableProperties();\n    assertNull(\"Unexpected content in retainable list\", retainableProps);\n\n    params.addCategoryEnhancements(new CategoryEnhancementDummy2());\n\n    List<CategoryEnhancement> enhancements = params\n        .getCategoryEnhancements();\n\n    assertEquals(\"Wrong number of enhancements\", 2, enhancements.size());\n\n    assertTrue(\"Wrong first enhancement\",\n        enhancements.get(0) instanceof CategoryEnhancementDummy1);\n    assertTrue(\"Wrong second enhancement\",\n        enhancements.get(1) instanceof CategoryEnhancementDummy2);\n\n    // re-check retainable properties \n    retainableProps = params.getRetainableProperties();\n    assertNotNull(\"Unexpected empty retainable list\", retainableProps);\n    assertEquals(\"Unexpected size of retainable list\", 1, retainableProps\n        .size());\n    assertEquals(\"Wrong property in retainable list\", DummyProperty.class,\n        retainableProps.get(0));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4c6c7f3cda7a0595cabd16e5e9107ca29852708","date":1355402234,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/enhancements/params/DefaultEnhancementsIndexingParamsTest#testCategoryEnhancements().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testCategoryEnhancements() {\n    EnhancementsIndexingParams params = \n      new DefaultEnhancementsIndexingParams(\n          new CategoryEnhancementDummy1());\n\n    // check retainable properties \n    List<Class<? extends CategoryProperty>> retainableProps = params\n        .getRetainableProperties();\n    assertNull(\"Unexpected content in retainable list\", retainableProps);\n\n    params.addCategoryEnhancements(new CategoryEnhancementDummy2());\n\n    List<CategoryEnhancement> enhancements = params\n        .getCategoryEnhancements();\n\n    assertEquals(\"Wrong number of enhancements\", 2, enhancements.size());\n\n    assertTrue(\"Wrong first enhancement\",\n        enhancements.get(0) instanceof CategoryEnhancementDummy1);\n    assertTrue(\"Wrong second enhancement\",\n        enhancements.get(1) instanceof CategoryEnhancementDummy2);\n\n    // re-check retainable properties \n    retainableProps = params.getRetainableProperties();\n    assertNotNull(\"Unexpected empty retainable list\", retainableProps);\n    assertEquals(\"Unexpected size of retainable list\", 1, retainableProps\n        .size());\n    assertEquals(\"Wrong property in retainable list\", DummyProperty.class,\n        retainableProps.get(0));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/enhancements/params/DefaultEnhancementsIndexingParamsTest#testCategoryEnhancements().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testCategoryEnhancements() {\n    EnhancementsIndexingParams params = \n      new DefaultEnhancementsIndexingParams(\n          new CategoryEnhancementDummy1());\n\n    // check retainable properties \n    List<Class<? extends CategoryProperty>> retainableProps = params\n        .getRetainableProperties();\n    assertNull(\"Unexpected content in retainable list\", retainableProps);\n\n    params.addCategoryEnhancements(new CategoryEnhancementDummy2());\n\n    List<CategoryEnhancement> enhancements = params\n        .getCategoryEnhancements();\n\n    assertEquals(\"Wrong number of enhancements\", 2, enhancements.size());\n\n    assertTrue(\"Wrong first enhancement\",\n        enhancements.get(0) instanceof CategoryEnhancementDummy1);\n    assertTrue(\"Wrong second enhancement\",\n        enhancements.get(1) instanceof CategoryEnhancementDummy2);\n\n    // re-check retainable properties \n    retainableProps = params.getRetainableProperties();\n    assertNotNull(\"Unexpected empty retainable list\", retainableProps);\n    assertEquals(\"Unexpected size of retainable list\", 1, retainableProps\n        .size());\n    assertEquals(\"Wrong property in retainable list\", DummyProperty.class,\n        retainableProps.get(0));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4c6c7f3cda7a0595cabd16e5e9107ca29852708"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}