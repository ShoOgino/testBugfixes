{"path":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterWrite2Slave().mjava","commits":[{"id":"1bf853f0385a540ee0fb220fd272f2c362432294","date":1311520789,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterWrite2Slave().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#testReplicateAfterWrite2Slave().mjava","sourceNew":"  private void doTestReplicateAfterWrite2Slave() throws Exception {\n    clearIndexWithReplication();\n    nDocs--;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n\n    // make sure we replicated the correct index from the master\n    slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":"  @Test\n  public void testReplicateAfterWrite2Slave() throws Exception {\n    clearIndexWithReplication();\n    nDocs--;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n\n    // make sure we replicated the correct index from the master\n    slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"47c952a4f0f0e9b74763a0609a3726dbb217164a","date":1347968413,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterWrite2Slave().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterWrite2Slave().mjava","sourceNew":"  private void doTestReplicateAfterWrite2Slave() throws Exception {\n    clearIndexWithReplication();\n    nDocs--;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://127.0.0.1:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://127.0.0.1:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n\n    // make sure we replicated the correct index from the master\n    slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":"  private void doTestReplicateAfterWrite2Slave() throws Exception {\n    clearIndexWithReplication();\n    nDocs--;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://localhost:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n\n    // make sure we replicated the correct index from the master\n    slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a59489bd57cb6434aab4e536a03b260fec1d47f3","date":1361571364,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterWrite2Slave().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterWrite2Slave().mjava","sourceNew":"  @Test\n  public void doTestReplicateAfterWrite2Slave() throws Exception {\n    clearIndexWithReplication();\n    nDocs--;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    invokeReplicationCommand(masterJetty.getLocalPort(), \"disableReplication\");\n    invokeReplicationCommand(slaveJetty.getLocalPort(), \"disablepoll\");\n    \n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n\n    \n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    //Let's fetch the index rather than rely on the polling.\n    invokeReplicationCommand(masterJetty.getLocalPort(), \"enablereplication\");\n    invokeReplicationCommand(slaveJetty.getLocalPort(), \"fetchindex\");\n\n    /*\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n\n    // make sure we replicated the correct index from the master\n    slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n    \n    */\n  }\n\n","sourceOld":"  private void doTestReplicateAfterWrite2Slave() throws Exception {\n    clearIndexWithReplication();\n    nDocs--;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    String masterUrl = \"http://127.0.0.1:\" + masterJetty.getLocalPort() + \"/solr/replication?command=disableReplication\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n\n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    masterUrl = \"http://127.0.0.1:\" + masterJetty.getLocalPort() + \"/solr/replication?command=enableReplication\";\n    url = new URL(masterUrl);\n    stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n\n    // make sure we replicated the correct index from the master\n    slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"25bbd8e76cd29f2d4b262a24d6a42c754706b143","date":1365910543,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterWrite2Slave().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterWrite2Slave().mjava","sourceNew":"  @Test\n  public void doTestReplicateAfterWrite2Slave() throws Exception {\n    clearIndexWithReplication();\n    nDocs--;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    invokeReplicationCommand(masterJetty.getLocalPort(), \"disableReplication\");\n    invokeReplicationCommand(slaveJetty.getLocalPort(), \"disablepoll\");\n    \n    masterClient.commit();\n\n    assertEquals(nDocs, numFound(rQuery(nDocs, \"*:*\", masterClient)));\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    assertEquals(1, numFound(rQuery(1, \"id:555\", slaveClient)));\n\n    //Let's fetch the index rather than rely on the polling.\n    invokeReplicationCommand(masterJetty.getLocalPort(), \"enablereplication\");\n    invokeReplicationCommand(slaveJetty.getLocalPort(), \"fetchindex\");\n\n    /*\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n\n    // make sure we replicated the correct index from the master\n    slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n    \n    */\n  }\n\n","sourceOld":"  @Test\n  public void doTestReplicateAfterWrite2Slave() throws Exception {\n    clearIndexWithReplication();\n    nDocs--;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    invokeReplicationCommand(masterJetty.getLocalPort(), \"disableReplication\");\n    invokeReplicationCommand(slaveJetty.getLocalPort(), \"disablepoll\");\n    \n    masterClient.commit();\n\n    NamedList masterQueryRsp = rQuery(nDocs, \"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(nDocs, masterQueryResult.getNumFound());\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n\n    \n    //this doc is added to slave so it should show an item w/ that result\n    SolrDocumentList slaveQueryResult = null;\n    NamedList slaveQueryRsp;\n    slaveQueryRsp = rQuery(1, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(1, slaveQueryResult.getNumFound());\n\n    //Let's fetch the index rather than rely on the polling.\n    invokeReplicationCommand(masterJetty.getLocalPort(), \"enablereplication\");\n    invokeReplicationCommand(slaveJetty.getLocalPort(), \"fetchindex\");\n\n    /*\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n\n    // make sure we replicated the correct index from the master\n    slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n    \n    */\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e","date":1596664368,"type":4,"author":"Marcus","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/handler/TestReplicationHandler#doTestReplicateAfterWrite2Slave().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void doTestReplicateAfterWrite2Slave() throws Exception {\n    clearIndexWithReplication();\n    nDocs--;\n    for (int i = 0; i < nDocs; i++) {\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n    }\n\n    invokeReplicationCommand(masterJetty.getLocalPort(), \"disableReplication\");\n    invokeReplicationCommand(slaveJetty.getLocalPort(), \"disablepoll\");\n    \n    masterClient.commit();\n\n    assertEquals(nDocs, numFound(rQuery(nDocs, \"*:*\", masterClient)));\n\n    // Make sure that both the index version and index generation on the slave is\n    // higher than that of the master, just to make the test harder.\n\n    index(slaveClient, \"id\", 551, \"name\", \"name = \" + 551);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 552, \"name\", \"name = \" + 552);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 553, \"name\", \"name = \" + 553);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 554, \"name\", \"name = \" + 554);\n    slaveClient.commit(true, true);\n    index(slaveClient, \"id\", 555, \"name\", \"name = \" + 555);\n    slaveClient.commit(true, true);\n\n    //this doc is added to slave so it should show an item w/ that result\n    assertEquals(1, numFound(rQuery(1, \"id:555\", slaveClient)));\n\n    //Let's fetch the index rather than rely on the polling.\n    invokeReplicationCommand(masterJetty.getLocalPort(), \"enablereplication\");\n    invokeReplicationCommand(slaveJetty.getLocalPort(), \"fetchindex\");\n\n    /*\n    //the slave should have done a full copy of the index so the doc with id:555 should not be there in the slave now\n    slaveQueryRsp = rQuery(0, \"id:555\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(0, slaveQueryResult.getNumFound());\n\n    // make sure we replicated the correct index from the master\n    slaveQueryRsp = rQuery(nDocs, \"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(nDocs, slaveQueryResult.getNumFound());\n    \n    */\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1bf853f0385a540ee0fb220fd272f2c362432294":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e":["25bbd8e76cd29f2d4b262a24d6a42c754706b143"],"47c952a4f0f0e9b74763a0609a3726dbb217164a":["1bf853f0385a540ee0fb220fd272f2c362432294"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"25bbd8e76cd29f2d4b262a24d6a42c754706b143":["a59489bd57cb6434aab4e536a03b260fec1d47f3"],"a59489bd57cb6434aab4e536a03b260fec1d47f3":["47c952a4f0f0e9b74763a0609a3726dbb217164a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["65a5d87a40f9143cd55be76eb1dde1b32a8dae5e"]},"commit2Childs":{"1bf853f0385a540ee0fb220fd272f2c362432294":["47c952a4f0f0e9b74763a0609a3726dbb217164a"],"65a5d87a40f9143cd55be76eb1dde1b32a8dae5e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"47c952a4f0f0e9b74763a0609a3726dbb217164a":["a59489bd57cb6434aab4e536a03b260fec1d47f3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1bf853f0385a540ee0fb220fd272f2c362432294"],"25bbd8e76cd29f2d4b262a24d6a42c754706b143":["65a5d87a40f9143cd55be76eb1dde1b32a8dae5e"],"a59489bd57cb6434aab4e536a03b260fec1d47f3":["25bbd8e76cd29f2d4b262a24d6a42c754706b143"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}