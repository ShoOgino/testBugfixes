{"path":"lucene/core/src/java/org/apache/lucene/search/spans/FieldMaskingSpanQuery#createWeight(IndexSearcher,boolean).mjava","commits":[{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/FieldMaskingSpanQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    return maskedQuery.createWeight(searcher, needsScores);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"954e59be3da8dc1b046646ad7af4b466852009d3","date":1423482367,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/FieldMaskingSpanQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    return maskedQuery.createWeight(searcher, needsScores);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a47d642ab24da1a811adce4bda9cc52c520ca13","date":1423483323,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/FieldMaskingSpanQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    return maskedQuery.createWeight(searcher, needsScores);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30de45e50bdc1a79a6797f34dca6271c8866cb6e","date":1427790465,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/FieldMaskingSpanQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/FieldMaskingSpanQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public SpanWeight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    return maskedQuery.createWeight(searcher, needsScores);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    return maskedQuery.createWeight(searcher, needsScores);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fab172655716b96f7e42376116235017a922de3a","date":1427850611,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/FieldMaskingSpanQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/FieldMaskingSpanQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public SpanWeight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    return maskedQuery.createWeight(searcher, needsScores);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    return maskedQuery.createWeight(searcher, needsScores);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c257cd8ddb1ed5632a36c7488614a2ee21705d24","date":1432128550,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/FieldMaskingSpanQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":null,"sourceOld":"  @Override\n  public SpanWeight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    return maskedQuery.createWeight(searcher, needsScores);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29aea3139c4326c0501d75d51059855463220279","date":1433952060,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/FieldMaskingSpanQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/SpanNearPayloadCheckQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public SpanWeight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    return maskedQuery.createWeight(searcher, needsScores);\n  }\n\n","sourceOld":"  @Override\n  public SpanWeight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    return createWeight(searcher, needsScores, PayloadSpanCollector.FACTORY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02e175abd2c4c1611c5a9647486ae8ba249a94c1","date":1468327116,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/FieldMaskingSpanQuery#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/FieldMaskingSpanQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public SpanWeight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n    return maskedQuery.createWeight(searcher, needsScores, boost);\n  }\n\n","sourceOld":"  @Override\n  public SpanWeight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    return maskedQuery.createWeight(searcher, needsScores);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02e175abd2c4c1611c5a9647486ae8ba249a94c1","date":1468327116,"type":6,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanBoostQuery#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/FieldMaskingSpanQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public SpanWeight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n    return query.createWeight(searcher, needsScores, SpanBoostQuery.this.boost * boost);\n  }\n\n","sourceOld":"  @Override\n  public SpanWeight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    return maskedQuery.createWeight(searcher, needsScores);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/FieldMaskingSpanQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":null,"sourceOld":"  @Override\n  public SpanWeight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    return maskedQuery.createWeight(searcher, needsScores);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6a47d642ab24da1a811adce4bda9cc52c520ca13":["954e59be3da8dc1b046646ad7af4b466852009d3"],"fb17639909a369c1e64866842e5c213440acc17e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"29aea3139c4326c0501d75d51059855463220279":["c257cd8ddb1ed5632a36c7488614a2ee21705d24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["29aea3139c4326c0501d75d51059855463220279"],"c257cd8ddb1ed5632a36c7488614a2ee21705d24":["30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["6a47d642ab24da1a811adce4bda9cc52c520ca13"],"954e59be3da8dc1b046646ad7af4b466852009d3":["fb17639909a369c1e64866842e5c213440acc17e"],"fab172655716b96f7e42376116235017a922de3a":["6a47d642ab24da1a811adce4bda9cc52c520ca13","30de45e50bdc1a79a6797f34dca6271c8866cb6e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["29aea3139c4326c0501d75d51059855463220279","02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["02e175abd2c4c1611c5a9647486ae8ba249a94c1"]},"commit2Childs":{"6a47d642ab24da1a811adce4bda9cc52c520ca13":["30de45e50bdc1a79a6797f34dca6271c8866cb6e","fab172655716b96f7e42376116235017a922de3a"],"fb17639909a369c1e64866842e5c213440acc17e":["954e59be3da8dc1b046646ad7af4b466852009d3"],"29aea3139c4326c0501d75d51059855463220279":["02e175abd2c4c1611c5a9647486ae8ba249a94c1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb17639909a369c1e64866842e5c213440acc17e"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c257cd8ddb1ed5632a36c7488614a2ee21705d24":["29aea3139c4326c0501d75d51059855463220279"],"954e59be3da8dc1b046646ad7af4b466852009d3":["6a47d642ab24da1a811adce4bda9cc52c520ca13"],"30de45e50bdc1a79a6797f34dca6271c8866cb6e":["c257cd8ddb1ed5632a36c7488614a2ee21705d24","fab172655716b96f7e42376116235017a922de3a"],"fab172655716b96f7e42376116235017a922de3a":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fab172655716b96f7e42376116235017a922de3a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}