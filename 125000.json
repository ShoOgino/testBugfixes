{"path":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValuesType,long,Map[String,String]).mjava","commits":[{"id":"05da2d758a6089e737cdfc230e57a51b472b94b6","date":1413392310,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValuesType,long,Map[String,String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValuesType,DocValuesType,long,Map[String,String]).mjava","sourceNew":"  /**\n   * Sole constructor.\n   *\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean indexed, int number, boolean storeTermVector, boolean omitNorms, \n      boolean storePayloads, IndexOptions indexOptions, DocValuesType docValues,\n      long dvGen, Map<String,String> attributes) {\n    this.name = name;\n    this.indexed = indexed;\n    this.number = number;\n    this.docValueType = docValues;\n    if (indexed) {\n      this.storeTermVector = storeTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = null;\n    }\n    this.dvGen = dvGen;\n    this.attributes = attributes;\n    assert checkConsistency();\n  }\n\n","sourceOld":"  /**\n   * Sole Constructor.\n   *\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean indexed, int number, boolean storeTermVector, boolean omitNorms, \n      boolean storePayloads, IndexOptions indexOptions, DocValuesType docValues, DocValuesType normsType, \n      long dvGen, Map<String,String> attributes) {\n    this.name = name;\n    this.indexed = indexed;\n    this.number = number;\n    this.docValueType = docValues;\n    if (indexed) {\n      this.storeTermVector = storeTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n      this.normType = !omitNorms ? normsType : null;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = null;\n      this.normType = null;\n    }\n    this.dvGen = dvGen;\n    this.attributes = attributes;\n    assert checkConsistency();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84","date":1413458798,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValuesType,long,Map[String,String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValuesType,DocValuesType,long,Map[String,String]).mjava","sourceNew":"  /**\n   * Sole constructor.\n   *\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean indexed, int number, boolean storeTermVector, boolean omitNorms, \n      boolean storePayloads, IndexOptions indexOptions, DocValuesType docValues,\n      long dvGen, Map<String,String> attributes) {\n    this.name = name;\n    this.indexed = indexed;\n    this.number = number;\n    this.docValueType = docValues;\n    if (indexed) {\n      this.storeTermVector = storeTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = null;\n    }\n    this.dvGen = dvGen;\n    this.attributes = attributes;\n    assert checkConsistency();\n  }\n\n","sourceOld":"  /**\n   * Sole Constructor.\n   *\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean indexed, int number, boolean storeTermVector, boolean omitNorms, \n      boolean storePayloads, IndexOptions indexOptions, DocValuesType docValues, DocValuesType normsType, \n      long dvGen, Map<String,String> attributes) {\n    this.name = name;\n    this.indexed = indexed;\n    this.number = number;\n    this.docValueType = docValues;\n    if (indexed) {\n      this.storeTermVector = storeTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n      this.normType = !omitNorms ? normsType : null;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = null;\n      this.normType = null;\n    }\n    this.dvGen = dvGen;\n    this.attributes = attributes;\n    assert checkConsistency();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3184874f7f3aca850248483485b4995343066875","date":1413876758,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,int,boolean,boolean,boolean,IndexOptions,DocValuesType,long,Map[String,String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValuesType,long,Map[String,String]).mjava","sourceNew":"  /**\n   * Sole constructor.\n   *\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, int number, boolean storeTermVector, boolean omitNorms, \n      boolean storePayloads, IndexOptions indexOptions, DocValuesType docValues,\n      long dvGen, Map<String,String> attributes) {\n    this.name = name;\n    this.number = number;\n    this.docValueType = docValues;\n    if (indexOptions != null) {\n      this.storeTermVector = storeTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = null;\n    }\n    this.dvGen = dvGen;\n    this.attributes = attributes;\n    assert checkConsistency();\n  }\n\n","sourceOld":"  /**\n   * Sole constructor.\n   *\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean indexed, int number, boolean storeTermVector, boolean omitNorms, \n      boolean storePayloads, IndexOptions indexOptions, DocValuesType docValues,\n      long dvGen, Map<String,String> attributes) {\n    this.name = name;\n    this.indexed = indexed;\n    this.number = number;\n    this.docValueType = docValues;\n    if (indexed) {\n      this.storeTermVector = storeTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = null;\n    }\n    this.dvGen = dvGen;\n    this.attributes = attributes;\n    assert checkConsistency();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,int,boolean,boolean,boolean,IndexOptions,DocValuesType,long,Map[String,String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValuesType,long,Map[String,String]).mjava","sourceNew":"  /**\n   * Sole constructor.\n   *\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, int number, boolean storeTermVector, boolean omitNorms, \n      boolean storePayloads, IndexOptions indexOptions, DocValuesType docValues,\n      long dvGen, Map<String,String> attributes) {\n    this.name = name;\n    this.number = number;\n    this.docValueType = docValues;\n    if (indexOptions != null) {\n      this.storeTermVector = storeTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = null;\n    }\n    this.dvGen = dvGen;\n    this.attributes = attributes;\n    assert checkConsistency();\n  }\n\n","sourceOld":"  /**\n   * Sole constructor.\n   *\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean indexed, int number, boolean storeTermVector, boolean omitNorms, \n      boolean storePayloads, IndexOptions indexOptions, DocValuesType docValues,\n      long dvGen, Map<String,String> attributes) {\n    this.name = name;\n    this.indexed = indexed;\n    this.number = number;\n    this.docValueType = docValues;\n    if (indexed) {\n      this.storeTermVector = storeTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = null;\n    }\n    this.dvGen = dvGen;\n    this.attributes = attributes;\n    assert checkConsistency();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"05da2d758a6089e737cdfc230e57a51b472b94b6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","05da2d758a6089e737cdfc230e57a51b472b94b6"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84","3184874f7f3aca850248483485b4995343066875"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3184874f7f3aca850248483485b4995343066875":["05da2d758a6089e737cdfc230e57a51b472b94b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3184874f7f3aca850248483485b4995343066875"]},"commit2Childs":{"05da2d758a6089e737cdfc230e57a51b472b94b6":["c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84","3184874f7f3aca850248483485b4995343066875"],"c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84":["0a22eafe3f72a4c2945eaad9547e6c78816978f4"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05da2d758a6089e737cdfc230e57a51b472b94b6","c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84"],"3184874f7f3aca850248483485b4995343066875":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}