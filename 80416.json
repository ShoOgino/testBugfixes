{"path":"solr/core/src/test/org/apache/solr/response/transform/TestSubQueryTransformer#beforeTests().mjava","commits":[{"id":"561c2351baf6dd64061addef891359954c1a7faa","date":1462788487,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestSubQueryTransformer#beforeTests().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeTests() throws Exception {\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-basic.xml\", \"schema-docValuesJoin.xml\");\n    peopleMultiplier = atLeast(1);\n    deptMultiplier = atLeast(1);\n    \n    int id=0;\n    for (int p=0; p < peopleMultiplier; p++){\n      assertU(add(doc(\"id\", \"\"+id++,\"name_s\", \"john\", \"title_s\", \"Director\", \n                                                      \"dept_ss_dv\",\"Engineering\",\n                                                      \"dept_i\", \"0\",\n                                                      \"dept_is\", \"0\")));\n      assertU(add(doc(\"id\", \"\"+id++,\"name_s\", \"mark\", \"title_s\", \"VP\", \n                                                         \"dept_ss_dv\",\"Marketing\",\n                                                         \"dept_i\", \"1\",\n                                                         \"dept_is\", \"1\")));\n      assertU(add(doc(\"id\", \"\"+id++,\"name_s\", \"nancy\", \"title_s\", \"MTS\",\n                                                         \"dept_ss_dv\",\"Sales\",\n                                                         \"dept_i\", \"2\",\n                                                         \"dept_is\", \"2\")));\n      assertU(add(doc(\"id\", \"\"+id++,\"name_s\", \"dave\", \"title_s\", \"MTS\", \n                                                         \"dept_ss_dv\",\"Support\", \"dept_ss_dv\",\"Engineering\",\n                                                         \"dept_i\", \"3\",\n                                                         \"dept_is\", \"3\", \"dept_is\", \"0\")));\n      assertU(add(doc(\"id\", \"\"+id++,\"name_s\", \"tina\", \"title_s\", \"VP\", \n                                                         \"dept_ss_dv\",\"Engineering\",\n                                                         \"dept_i\", \"0\",\n                                                         \"dept_is\", \"0\")));\n      \n      if (rarely()) {\n        assertU(commit(\"softCommit\", \"true\"));\n      }\n    }\n    \n    for (int d=0; d < deptMultiplier; d++){\n      assertU(add(doc(\"id\",\"\"+id, \"id_i\",\"\"+id++,\n          \"dept_id_s\", \"Engineering\", \"text_t\",\"These guys develop stuff\", \"salary_i_dv\", \"1000\",\n                                     \"dept_id_i\", \"0\")));\n      assertU(add(doc(\"id\",\"\"+id++,\"id_i\",\"\"+id++,\n           \"dept_id_s\", \"Marketing\", \"text_t\",\"These guys make you look good\",\"salary_i_dv\", \"1500\",\n                                     \"dept_id_i\", \"1\")));\n      assertU(add(doc(\"id\",\"\"+id, \"id_i\",\"\"+id++,\n          \"dept_id_s\", \"Sales\", \"text_t\",\"These guys sell stuff\",\"salary_i_dv\", \"1600\",\n                                    \"dept_id_i\", \"2\")));\n      assertU(add(doc(\"id\",\"\"+id,\"id_i\",\"\"+id++,\n           \"dept_id_s\", \"Support\", \"text_t\",\"These guys help customers\",\"salary_i_dv\", \"800\",\n                                    \"dept_id_i\", \"3\")));\n      \n      if (rarely()) {\n        assertU(commit(\"softCommit\", \"true\"));\n      }\n    }\n    assertU(commit());\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e66a459d38c1c4a2f97128433dab546f683a9fed","date":1462873476,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestSubQueryTransformer#beforeTests().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeTests() throws Exception {\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-basic.xml\", \"schema-docValuesJoin.xml\");\n    peopleMultiplier = atLeast(1);\n    deptMultiplier = atLeast(1);\n    \n    int id=0;\n    for (int p=0; p < peopleMultiplier; p++){\n      assertU(add(doc(\"id\", \"\"+id++,\"name_s\", \"john\", \"title_s\", \"Director\", \n                                                      \"dept_ss_dv\",\"Engineering\",\n                                                      \"dept_i\", \"0\",\n                                                      \"dept_is\", \"0\")));\n      assertU(add(doc(\"id\", \"\"+id++,\"name_s\", \"mark\", \"title_s\", \"VP\", \n                                                         \"dept_ss_dv\",\"Marketing\",\n                                                         \"dept_i\", \"1\",\n                                                         \"dept_is\", \"1\")));\n      assertU(add(doc(\"id\", \"\"+id++,\"name_s\", \"nancy\", \"title_s\", \"MTS\",\n                                                         \"dept_ss_dv\",\"Sales\",\n                                                         \"dept_i\", \"2\",\n                                                         \"dept_is\", \"2\")));\n      assertU(add(doc(\"id\", \"\"+id++,\"name_s\", \"dave\", \"title_s\", \"MTS\", \n                                                         \"dept_ss_dv\",\"Support\", \"dept_ss_dv\",\"Engineering\",\n                                                         \"dept_i\", \"3\",\n                                                         \"dept_is\", \"3\", \"dept_is\", \"0\")));\n      assertU(add(doc(\"id\", \"\"+id++,\"name_s\", \"tina\", \"title_s\", \"VP\", \n                                                         \"dept_ss_dv\",\"Engineering\",\n                                                         \"dept_i\", \"0\",\n                                                         \"dept_is\", \"0\")));\n      \n      if (rarely()) {\n        assertU(commit(\"softCommit\", \"true\"));\n      }\n    }\n    \n    for (int d=0; d < deptMultiplier; d++){\n      assertU(add(doc(\"id\",\"\"+id, \"id_i\",\"\"+id++,\n          \"dept_id_s\", \"Engineering\", \"text_t\",\"These guys develop stuff\", \"salary_i_dv\", \"1000\",\n                                     \"dept_id_i\", \"0\")));\n      assertU(add(doc(\"id\",\"\"+id++,\"id_i\",\"\"+id++,\n           \"dept_id_s\", \"Marketing\", \"text_t\",\"These guys make you look good\",\"salary_i_dv\", \"1500\",\n                                     \"dept_id_i\", \"1\")));\n      assertU(add(doc(\"id\",\"\"+id, \"id_i\",\"\"+id++,\n          \"dept_id_s\", \"Sales\", \"text_t\",\"These guys sell stuff\",\"salary_i_dv\", \"1600\",\n                                    \"dept_id_i\", \"2\")));\n      assertU(add(doc(\"id\",\"\"+id,\"id_i\",\"\"+id++,\n           \"dept_id_s\", \"Support\", \"text_t\",\"These guys help customers\",\"salary_i_dv\", \"800\",\n                                    \"dept_id_i\", \"3\")));\n      \n      if (rarely()) {\n        assertU(commit(\"softCommit\", \"true\"));\n      }\n    }\n    assertU(commit());\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestSubQueryTransformer#beforeTests().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeTests() throws Exception {\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-basic.xml\", \"schema-docValuesJoin.xml\");\n    peopleMultiplier = atLeast(1);\n    deptMultiplier = atLeast(1);\n    \n    int id=0;\n    for (int p=0; p < peopleMultiplier; p++){\n      assertU(add(doc(\"id\", \"\"+id++,\"name_s\", \"john\", \"title_s\", \"Director\", \n                                                      \"dept_ss_dv\",\"Engineering\",\n                                                      \"dept_i\", \"0\",\n                                                      \"dept_is\", \"0\")));\n      assertU(add(doc(\"id\", \"\"+id++,\"name_s\", \"mark\", \"title_s\", \"VP\", \n                                                         \"dept_ss_dv\",\"Marketing\",\n                                                         \"dept_i\", \"1\",\n                                                         \"dept_is\", \"1\")));\n      assertU(add(doc(\"id\", \"\"+id++,\"name_s\", \"nancy\", \"title_s\", \"MTS\",\n                                                         \"dept_ss_dv\",\"Sales\",\n                                                         \"dept_i\", \"2\",\n                                                         \"dept_is\", \"2\")));\n      assertU(add(doc(\"id\", \"\"+id++,\"name_s\", \"dave\", \"title_s\", \"MTS\", \n                                                         \"dept_ss_dv\",\"Support\", \"dept_ss_dv\",\"Engineering\",\n                                                         \"dept_i\", \"3\",\n                                                         \"dept_is\", \"3\", \"dept_is\", \"0\")));\n      assertU(add(doc(\"id\", \"\"+id++,\"name_s\", \"tina\", \"title_s\", \"VP\", \n                                                         \"dept_ss_dv\",\"Engineering\",\n                                                         \"dept_i\", \"0\",\n                                                         \"dept_is\", \"0\")));\n      \n      if (rarely()) {\n        assertU(commit(\"softCommit\", \"true\"));\n      }\n    }\n    \n    for (int d=0; d < deptMultiplier; d++){\n      assertU(add(doc(\"id\",\"\"+id, \"id_i\",\"\"+id++,\n          \"dept_id_s\", \"Engineering\", \"text_t\",\"These guys develop stuff\", \"salary_i_dv\", \"1000\",\n                                     \"dept_id_i\", \"0\")));\n      assertU(add(doc(\"id\",\"\"+id++,\"id_i\",\"\"+id++,\n           \"dept_id_s\", \"Marketing\", \"text_t\",\"These guys make you look good\",\"salary_i_dv\", \"1500\",\n                                     \"dept_id_i\", \"1\")));\n      assertU(add(doc(\"id\",\"\"+id, \"id_i\",\"\"+id++,\n          \"dept_id_s\", \"Sales\", \"text_t\",\"These guys sell stuff\",\"salary_i_dv\", \"1600\",\n                                    \"dept_id_i\", \"2\")));\n      assertU(add(doc(\"id\",\"\"+id,\"id_i\",\"\"+id++,\n           \"dept_id_s\", \"Support\", \"text_t\",\"These guys help customers\",\"salary_i_dv\", \"800\",\n                                    \"dept_id_i\", \"3\")));\n      \n      if (rarely()) {\n        assertU(commit(\"softCommit\", \"true\"));\n      }\n    }\n    assertU(commit());\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestSubQueryTransformer#beforeTests().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeTests() throws Exception {\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-basic.xml\", \"schema-docValuesJoin.xml\");\n    peopleMultiplier = atLeast(1);\n    deptMultiplier = atLeast(1);\n    \n    int id=0;\n    for (int p=0; p < peopleMultiplier; p++){\n      assertU(add(doc(\"id\", \"\"+id++,\"name_s\", \"john\", \"title_s\", \"Director\", \n                                                      \"dept_ss_dv\",\"Engineering\",\n                                                      \"dept_i\", \"0\",\n                                                      \"dept_is\", \"0\")));\n      assertU(add(doc(\"id\", \"\"+id++,\"name_s\", \"mark\", \"title_s\", \"VP\", \n                                                         \"dept_ss_dv\",\"Marketing\",\n                                                         \"dept_i\", \"1\",\n                                                         \"dept_is\", \"1\")));\n      assertU(add(doc(\"id\", \"\"+id++,\"name_s\", \"nancy\", \"title_s\", \"MTS\",\n                                                         \"dept_ss_dv\",\"Sales\",\n                                                         \"dept_i\", \"2\",\n                                                         \"dept_is\", \"2\")));\n      assertU(add(doc(\"id\", \"\"+id++,\"name_s\", \"dave\", \"title_s\", \"MTS\", \n                                                         \"dept_ss_dv\",\"Support\", \"dept_ss_dv\",\"Engineering\",\n                                                         \"dept_i\", \"3\",\n                                                         \"dept_is\", \"3\", \"dept_is\", \"0\")));\n      assertU(add(doc(\"id\", \"\"+id++,\"name_s\", \"tina\", \"title_s\", \"VP\", \n                                                         \"dept_ss_dv\",\"Engineering\",\n                                                         \"dept_i\", \"0\",\n                                                         \"dept_is\", \"0\")));\n      \n      if (rarely()) {\n        assertU(commit(\"softCommit\", \"true\"));\n      }\n    }\n    \n    for (int d=0; d < deptMultiplier; d++){\n      assertU(add(doc(\"id\",\"\"+id, \"id_i\",\"\"+id++,\n          \"dept_id_s\", \"Engineering\", \"text_t\",\"These guys develop stuff\", \"salary_i_dv\", \"1000\",\n                                     \"dept_id_i\", \"0\")));\n      assertU(add(doc(\"id\",\"\"+id++,\"id_i\",\"\"+id++,\n           \"dept_id_s\", \"Marketing\", \"text_t\",\"These guys make you look good\",\"salary_i_dv\", \"1500\",\n                                     \"dept_id_i\", \"1\")));\n      assertU(add(doc(\"id\",\"\"+id, \"id_i\",\"\"+id++,\n          \"dept_id_s\", \"Sales\", \"text_t\",\"These guys sell stuff\",\"salary_i_dv\", \"1600\",\n                                    \"dept_id_i\", \"2\")));\n      assertU(add(doc(\"id\",\"\"+id,\"id_i\",\"\"+id++,\n           \"dept_id_s\", \"Support\", \"text_t\",\"These guys help customers\",\"salary_i_dv\", \"800\",\n                                    \"dept_id_i\", \"3\")));\n      \n      if (rarely()) {\n        assertU(commit(\"softCommit\", \"true\"));\n      }\n    }\n    assertU(commit());\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e66a459d38c1c4a2f97128433dab546f683a9fed":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","561c2351baf6dd64061addef891359954c1a7faa"],"561c2351baf6dd64061addef891359954c1a7faa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","561c2351baf6dd64061addef891359954c1a7faa"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e66a459d38c1c4a2f97128433dab546f683a9fed","561c2351baf6dd64061addef891359954c1a7faa","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"e66a459d38c1c4a2f97128433dab546f683a9fed":[],"561c2351baf6dd64061addef891359954c1a7faa":["e66a459d38c1c4a2f97128433dab546f683a9fed","d470c8182e92b264680e34081b75e70a9f2b3c89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e66a459d38c1c4a2f97128433dab546f683a9fed","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}