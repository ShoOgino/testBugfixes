{"path":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#DefaultICUTokenizerConfig(boolean).mjava","commits":[{"id":"b07bc5b253e2373a655fc734d650af4ac46c8614","date":1386093923,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#DefaultICUTokenizerConfig(boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * Creates a new config. This object is lightweight, but the first\n   * time the class is referenced, breakiterators will be initialized.\n   * @param cjkAsWords true if cjk text should undergo dictionary-based segmentation, \n   *                   otherwise text will be segmented according to UAX#29 defaults.\n   *                   If this is true, all Han+Hiragana+Katakana words will be tagged as\n   *                   IDEOGRAPHIC.\n   */\n  public DefaultICUTokenizerConfig(boolean cjkAsWords) { \n    this.cjkAsWords = cjkAsWords;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#DefaultICUTokenizerConfig(boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * Creates a new config. This object is lightweight, but the first\n   * time the class is referenced, breakiterators will be initialized.\n   * @param cjkAsWords true if cjk text should undergo dictionary-based segmentation, \n   *                   otherwise text will be segmented according to UAX#29 defaults.\n   *                   If this is true, all Han+Hiragana+Katakana words will be tagged as\n   *                   IDEOGRAPHIC.\n   */\n  public DefaultICUTokenizerConfig(boolean cjkAsWords) { \n    this.cjkAsWords = cjkAsWords;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b34acf30a377e146cfc8f7da3ec9a01e944403e1","date":1469718024,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#DefaultICUTokenizerConfig(boolean,boolean).mjava","pathOld":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#DefaultICUTokenizerConfig(boolean).mjava","sourceNew":"  /** \n   * Creates a new config. This object is lightweight, but the first\n   * time the class is referenced, breakiterators will be initialized.\n   * @param cjkAsWords true if cjk text should undergo dictionary-based segmentation, \n   *                   otherwise text will be segmented according to UAX#29 defaults.\n   *                   If this is true, all Han+Hiragana+Katakana words will be tagged as\n   *                   IDEOGRAPHIC.\n   * @param myanmarAsWords true if Myanmar text should undergo dictionary-based segmentation,\n   *                       otherwise it will be tokenized as syllables.\n   */\n  public DefaultICUTokenizerConfig(boolean cjkAsWords, boolean myanmarAsWords) { \n    this.cjkAsWords = cjkAsWords;\n    this.myanmarAsWords = myanmarAsWords;\n  }\n\n","sourceOld":"  /** \n   * Creates a new config. This object is lightweight, but the first\n   * time the class is referenced, breakiterators will be initialized.\n   * @param cjkAsWords true if cjk text should undergo dictionary-based segmentation, \n   *                   otherwise text will be segmented according to UAX#29 defaults.\n   *                   If this is true, all Han+Hiragana+Katakana words will be tagged as\n   *                   IDEOGRAPHIC.\n   */\n  public DefaultICUTokenizerConfig(boolean cjkAsWords) { \n    this.cjkAsWords = cjkAsWords;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#DefaultICUTokenizerConfig(boolean).mjava","sourceNew":null,"sourceOld":"  /** \n   * Creates a new config. This object is lightweight, but the first\n   * time the class is referenced, breakiterators will be initialized.\n   * @param cjkAsWords true if cjk text should undergo dictionary-based segmentation, \n   *                   otherwise text will be segmented according to UAX#29 defaults.\n   *                   If this is true, all Han+Hiragana+Katakana words will be tagged as\n   *                   IDEOGRAPHIC.\n   */\n  public DefaultICUTokenizerConfig(boolean cjkAsWords) { \n    this.cjkAsWords = cjkAsWords;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/DefaultICUTokenizerConfig#DefaultICUTokenizerConfig(boolean).mjava","sourceNew":null,"sourceOld":"  /** \n   * Creates a new config. This object is lightweight, but the first\n   * time the class is referenced, breakiterators will be initialized.\n   * @param cjkAsWords true if cjk text should undergo dictionary-based segmentation, \n   *                   otherwise text will be segmented according to UAX#29 defaults.\n   *                   If this is true, all Han+Hiragana+Katakana words will be tagged as\n   *                   IDEOGRAPHIC.\n   */\n  public DefaultICUTokenizerConfig(boolean cjkAsWords) { \n    this.cjkAsWords = cjkAsWords;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b34acf30a377e146cfc8f7da3ec9a01e944403e1":["b07bc5b253e2373a655fc734d650af4ac46c8614"],"b07bc5b253e2373a655fc734d650af4ac46c8614":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b07bc5b253e2373a655fc734d650af4ac46c8614"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["b07bc5b253e2373a655fc734d650af4ac46c8614","b34acf30a377e146cfc8f7da3ec9a01e944403e1"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["b07bc5b253e2373a655fc734d650af4ac46c8614","b34acf30a377e146cfc8f7da3ec9a01e944403e1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b34acf30a377e146cfc8f7da3ec9a01e944403e1"]},"commit2Childs":{"b34acf30a377e146cfc8f7da3ec9a01e944403e1":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b07bc5b253e2373a655fc734d650af4ac46c8614":["b34acf30a377e146cfc8f7da3ec9a01e944403e1","74f45af4339b0daf7a95c820ab88c1aea74fbce0","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b07bc5b253e2373a655fc734d650af4ac46c8614","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}