{"path":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudAuthTestCase#assertAuthMetricsMinimums(int,int,int,int,int,int).mjava","commits":[{"id":"85397dd93927c17347c6bf89800cd0fc566c2d03","date":1544610812,"type":0,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudAuthTestCase#assertAuthMetricsMinimums(int,int,int,int,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Used to check metric counts for the AuthPlugin in use (except PKI)\n   */\n  protected void assertAuthMetricsMinimums(int requests, int authenticated, int passThrough, int failWrongCredentials, int failMissingCredentials, int errors) {\n    assertAuthMetricsMinimums(METRICS_PREFIX, requests, authenticated, passThrough, failWrongCredentials, failMissingCredentials, errors);\n  }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db9b1bed7bcc60ad5785234a3fa3bf799f1e41fd","date":1544662223,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudAuthTestCase#assertAuthMetricsMinimums(int,int,int,int,int,int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudAuthTestCase#assertAuthMetricsMinimums(int,int,int,int,int,int).mjava","sourceNew":"  /**\n   * Used to check metric counts for the AuthPlugin in use (except PKI)\n   * \n   * TODO: many of these params have to be under specified - this should wait a bit to see the desired params and timeout\n   */\n  protected void assertAuthMetricsMinimums(int requests, int authenticated, int passThrough, int failWrongCredentials, int failMissingCredentials, int errors) {\n    assertAuthMetricsMinimums(METRICS_PREFIX, requests, authenticated, passThrough, failWrongCredentials, failMissingCredentials, errors);\n  }  \n\n","sourceOld":"  /**\n   * Used to check metric counts for the AuthPlugin in use (except PKI)\n   */\n  protected void assertAuthMetricsMinimums(int requests, int authenticated, int passThrough, int failWrongCredentials, int failMissingCredentials, int errors) {\n    assertAuthMetricsMinimums(METRICS_PREFIX, requests, authenticated, passThrough, failWrongCredentials, failMissingCredentials, errors);\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4bb519c79b76e52145e37b6681a7012525ed5f4b","date":1544694716,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudAuthTestCase#assertAuthMetricsMinimums(int,int,int,int,int,int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudAuthTestCase#assertAuthMetricsMinimums(int,int,int,int,int,int).mjava","sourceNew":"  /**\n   * Used to check metric counts for the AuthPlugin in use (except PKI)\n   * \n   * TODO: many of these params have to be under specified - this should wait a bit to see the desired params and timeout\n   */\n  protected void assertAuthMetricsMinimums(int requests, int authenticated, int passThrough, int failWrongCredentials, int failMissingCredentials, int errors) {\n    assertAuthMetricsMinimums(METRICS_PREFIX, requests, authenticated, passThrough, failWrongCredentials, failMissingCredentials, errors);\n  }\n\n","sourceOld":"  /**\n   * Used to check metric counts for the AuthPlugin in use (except PKI)\n   * \n   * TODO: many of these params have to be under specified - this should wait a bit to see the desired params and timeout\n   */\n  protected void assertAuthMetricsMinimums(int requests, int authenticated, int passThrough, int failWrongCredentials, int failMissingCredentials, int errors) {\n    assertAuthMetricsMinimums(METRICS_PREFIX, requests, authenticated, passThrough, failWrongCredentials, failMissingCredentials, errors);\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85091c28b30918e3b853626fb144d3de27b1cda8","date":1548330207,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudAuthTestCase#assertAuthMetricsMinimums(int,int,int,int,int,int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/SolrCloudAuthTestCase#assertAuthMetricsMinimums(int,int,int,int,int,int).mjava","sourceNew":"  /**\n   * Used to check metric counts for the AuthPlugin in use (except PKI)\n   * \n   * TODO: many of these params have to be under specified - this should wait a bit to see the desired params and timeout\n   */\n  protected void assertAuthMetricsMinimums(int requests, int authenticated, int passThrough, int failWrongCredentials, int failMissingCredentials, int errors) throws InterruptedException {\n    assertAuthMetricsMinimums(METRICS_PREFIX, requests, authenticated, passThrough, failWrongCredentials, failMissingCredentials, errors);\n  }\n\n","sourceOld":"  /**\n   * Used to check metric counts for the AuthPlugin in use (except PKI)\n   * \n   * TODO: many of these params have to be under specified - this should wait a bit to see the desired params and timeout\n   */\n  protected void assertAuthMetricsMinimums(int requests, int authenticated, int passThrough, int failWrongCredentials, int failMissingCredentials, int errors) {\n    assertAuthMetricsMinimums(METRICS_PREFIX, requests, authenticated, passThrough, failWrongCredentials, failMissingCredentials, errors);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4bb519c79b76e52145e37b6681a7012525ed5f4b":["db9b1bed7bcc60ad5785234a3fa3bf799f1e41fd"],"db9b1bed7bcc60ad5785234a3fa3bf799f1e41fd":["85397dd93927c17347c6bf89800cd0fc566c2d03"],"85397dd93927c17347c6bf89800cd0fc566c2d03":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85091c28b30918e3b853626fb144d3de27b1cda8":["4bb519c79b76e52145e37b6681a7012525ed5f4b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["85091c28b30918e3b853626fb144d3de27b1cda8"]},"commit2Childs":{"4bb519c79b76e52145e37b6681a7012525ed5f4b":["85091c28b30918e3b853626fb144d3de27b1cda8"],"db9b1bed7bcc60ad5785234a3fa3bf799f1e41fd":["4bb519c79b76e52145e37b6681a7012525ed5f4b"],"85397dd93927c17347c6bf89800cd0fc566c2d03":["db9b1bed7bcc60ad5785234a3fa3bf799f1e41fd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85397dd93927c17347c6bf89800cd0fc566c2d03"],"85091c28b30918e3b853626fb144d3de27b1cda8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}