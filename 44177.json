{"path":"lucene/facet/src/java/org/apache/lucene/facet/IntTaxonomyFacets#rollup().mjava","commits":[{"id":"1536855b62f453c22bb60258029b3b2a07b2532c","date":1385570079,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/IntTaxonomyFacets#rollup().mjava","pathOld":"/dev/null","sourceNew":"  // nocommit we could do this lazily instead:\n  protected void rollup() throws IOException {\n    // Rollup any necessary dims:\n    for(Map.Entry<String,FacetsConfig.DimConfig> ent : config.getDimConfigs().entrySet()) {\n      String dim = ent.getKey();\n      FacetsConfig.DimConfig ft = ent.getValue();\n      if (ft.hierarchical && ft.multiValued == false) {\n        int dimRootOrd = taxoReader.getOrdinal(new FacetLabel(dim));\n        // It can be -1 if this field was declared in the\n        // config but never indexed:\n        if (dimRootOrd > 0) {\n          values[dimRootOrd] += rollup(children[dimRootOrd]);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"78522aad83283ca58fae08fd89406b65429d0229","date":1385573562,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/IntTaxonomyFacets#rollup().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/IntTaxonomyFacets#rollup().mjava","sourceNew":"  protected void rollup() throws IOException {\n    // Rollup any necessary dims:\n    for(Map.Entry<String,FacetsConfig.DimConfig> ent : config.getDimConfigs().entrySet()) {\n      String dim = ent.getKey();\n      FacetsConfig.DimConfig ft = ent.getValue();\n      if (ft.hierarchical && ft.multiValued == false) {\n        int dimRootOrd = taxoReader.getOrdinal(new FacetLabel(dim));\n        // It can be -1 if this field was declared in the\n        // config but never indexed:\n        if (dimRootOrd > 0) {\n          values[dimRootOrd] += rollup(children[dimRootOrd]);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  // nocommit we could do this lazily instead:\n  protected void rollup() throws IOException {\n    // Rollup any necessary dims:\n    for(Map.Entry<String,FacetsConfig.DimConfig> ent : config.getDimConfigs().entrySet()) {\n      String dim = ent.getKey();\n      FacetsConfig.DimConfig ft = ent.getValue();\n      if (ft.hierarchical && ft.multiValued == false) {\n        int dimRootOrd = taxoReader.getOrdinal(new FacetLabel(dim));\n        // It can be -1 if this field was declared in the\n        // config but never indexed:\n        if (dimRootOrd > 0) {\n          values[dimRootOrd] += rollup(children[dimRootOrd]);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8","date":1387415264,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/IntTaxonomyFacets#rollup().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/IntTaxonomyFacets#rollup().mjava","sourceNew":"  protected void rollup() throws IOException {\n    // Rollup any necessary dims:\n    for(Map.Entry<String,DimConfig> ent : config.getDimConfigs().entrySet()) {\n      String dim = ent.getKey();\n      DimConfig ft = ent.getValue();\n      if (ft.hierarchical && ft.multiValued == false) {\n        int dimRootOrd = taxoReader.getOrdinal(new FacetLabel(dim));\n        // It can be -1 if this field was declared in the\n        // config but never indexed:\n        if (dimRootOrd > 0) {\n          values[dimRootOrd] += rollup(children[dimRootOrd]);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  protected void rollup() throws IOException {\n    // Rollup any necessary dims:\n    for(Map.Entry<String,FacetsConfig.DimConfig> ent : config.getDimConfigs().entrySet()) {\n      String dim = ent.getKey();\n      FacetsConfig.DimConfig ft = ent.getValue();\n      if (ft.hierarchical && ft.multiValued == false) {\n        int dimRootOrd = taxoReader.getOrdinal(new FacetLabel(dim));\n        // It can be -1 if this field was declared in the\n        // config but never indexed:\n        if (dimRootOrd > 0) {\n          values[dimRootOrd] += rollup(children[dimRootOrd]);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/IntTaxonomyFacets#rollup().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/IntTaxonomyFacets#rollup().mjava","sourceNew":"  protected void rollup() throws IOException {\n    // Rollup any necessary dims:\n    for(Map.Entry<String,DimConfig> ent : config.getDimConfigs().entrySet()) {\n      String dim = ent.getKey();\n      DimConfig ft = ent.getValue();\n      if (ft.hierarchical && ft.multiValued == false) {\n        int dimRootOrd = taxoReader.getOrdinal(new FacetLabel(dim));\n        // It can be -1 if this field was declared in the\n        // config but never indexed:\n        if (dimRootOrd > 0) {\n          values[dimRootOrd] += rollup(children[dimRootOrd]);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  protected void rollup() throws IOException {\n    // Rollup any necessary dims:\n    for(Map.Entry<String,DimConfig> ent : config.getDimConfigs().entrySet()) {\n      String dim = ent.getKey();\n      DimConfig ft = ent.getValue();\n      if (ft.hierarchical && ft.multiValued == false) {\n        int dimRootOrd = taxoReader.getOrdinal(new FacetLabel(dim));\n        // It can be -1 if this field was declared in the\n        // config but never indexed:\n        if (dimRootOrd > 0) {\n          values[dimRootOrd] += rollup(children[dimRootOrd]);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4edc984f0f4ac77c37e48ace2932f780f888453c":["51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8"],"78522aad83283ca58fae08fd89406b65429d0229":["1536855b62f453c22bb60258029b3b2a07b2532c"],"51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8":["78522aad83283ca58fae08fd89406b65429d0229"],"1536855b62f453c22bb60258029b3b2a07b2532c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1536855b62f453c22bb60258029b3b2a07b2532c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4edc984f0f4ac77c37e48ace2932f780f888453c":[],"78522aad83283ca58fae08fd89406b65429d0229":["51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8"],"51aa27dcefc9a1be9ba2bb5f1c29d5e357cec4f8":["4edc984f0f4ac77c37e48ace2932f780f888453c"],"1536855b62f453c22bb60258029b3b2a07b2532c":["78522aad83283ca58fae08fd89406b65429d0229"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4edc984f0f4ac77c37e48ace2932f780f888453c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}