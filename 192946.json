{"path":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docs(FieldInfo,BlockTermState,Bits,DocsEnum).mjava","commits":[{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docs(FieldInfo,BlockTermState,Bits,DocsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docs(FieldInfo,PrefixCodedTermState,Bits,DocsEnum).mjava","sourceNew":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits skipDocs, DocsEnum reuse) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, skipDocs);\n  }\n\n","sourceOld":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, PrefixCodedTermState _termState, Bits skipDocs, DocsEnum reuse) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, skipDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docs(FieldInfo,BlockTermState,Bits,DocsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docs(FieldInfo,PrefixCodedTermState,Bits,DocsEnum).mjava","sourceNew":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits skipDocs, DocsEnum reuse) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, skipDocs);\n  }\n\n","sourceOld":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, PrefixCodedTermState _termState, Bits skipDocs, DocsEnum reuse) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, skipDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docs(FieldInfo,BlockTermState,Bits,DocsEnum).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits skipDocs, DocsEnum reuse) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, skipDocs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","date":1309960478,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docs(FieldInfo,BlockTermState,Bits,DocsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docs(FieldInfo,BlockTermState,Bits,DocsEnum).mjava","sourceNew":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsEnum reuse) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","sourceOld":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits skipDocs, DocsEnum reuse) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, skipDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docs(FieldInfo,BlockTermState,Bits,DocsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docs(FieldInfo,BlockTermState,Bits,DocsEnum).mjava","sourceNew":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsEnum reuse) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","sourceOld":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits skipDocs, DocsEnum reuse) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, skipDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docs(FieldInfo,BlockTermState,Bits,DocsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docs(FieldInfo,BlockTermState,Bits,DocsEnum).mjava","sourceNew":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsEnum reuse) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","sourceOld":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits skipDocs, DocsEnum reuse) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, skipDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReader#docs(FieldInfo,BlockTermState,Bits,DocsEnum).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl#docs(FieldInfo,BlockTermState,Bits,DocsEnum).mjava","sourceNew":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsEnum reuse) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","sourceOld":"  @Override\n  public DocsEnum docs(FieldInfo fieldInfo, BlockTermState _termState, Bits liveDocs, DocsEnum reuse) throws IOException {\n    final SepTermState termState = (SepTermState) _termState;\n    SepDocsEnum docsEnum;\n    if (reuse == null || !(reuse instanceof SepDocsEnum)) {\n      docsEnum = new SepDocsEnum();\n    } else {\n      docsEnum = (SepDocsEnum) reuse;\n      if (docsEnum.startDocIn != docIn) {\n        // If you are using ParellelReader, and pass in a\n        // reused DocsAndPositionsEnum, it could have come\n        // from another reader also using sep codec\n        docsEnum = new SepDocsEnum();        \n      }\n    }\n\n    return docsEnum.init(fieldInfo, termState, liveDocs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b1add9ddc0005b07550d4350720aac22dc9886b3"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["b1add9ddc0005b07550d4350720aac22dc9886b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b1add9ddc0005b07550d4350720aac22dc9886b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["b1add9ddc0005b07550d4350720aac22dc9886b3","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b1add9ddc0005b07550d4350720aac22dc9886b3"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["b1add9ddc0005b07550d4350720aac22dc9886b3","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60ba444201d2570214b6fcf1d15600dc1a01f548"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["60ba444201d2570214b6fcf1d15600dc1a01f548","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","b1add9ddc0005b07550d4350720aac22dc9886b3","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["29ef99d61cda9641b6250bf9567329a6e65f901d","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","d083e83f225b11e5fdd900e83d26ddb385b6955c","e79a6d080bdd5b2a8f56342cf571b5476de04180","817d8435e9135b756f08ce6710ab0baac51bdf88"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","d083e83f225b11e5fdd900e83d26ddb385b6955c","e79a6d080bdd5b2a8f56342cf571b5476de04180","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}