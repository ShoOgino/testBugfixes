{"path":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","commits":[{"id":"d3c3c2404d1200c39220fa15054fae854db4e1ee","date":1140827958,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","pathOld":"/dev/null","sourceNew":"    /**\r\n     * Test driver.\r\n     * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\r\n     */\r\n    public static void main(String[] a) throws Throwable {\r\n        String indexName = \"localhost_index\";\r\n        String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\r\n        URL url = null;\r\n        for (int i = 0; i < a.length; i++) {\r\n            if (a[i].equals(\"-i\")) {\r\n                indexName = a[++i];\r\n            }\r\n            else if (a[i].equals(\"-f\")) {\r\n                fn = a[++i];\r\n            }\r\n            else if (a[i].equals(\"-url\")) {\r\n                url = new URL(a[++i]);\r\n            }\r\n        }\r\n\r\n        PrintStream o = System.out;\r\n        IndexReader r = IndexReader.open(indexName);\r\n        o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\r\n\r\n        MoreLikeThis mlt = new MoreLikeThis(r);\r\n\r\n        o.println(\"Query generation parameters:\");\r\n        o.println(mlt.describeParams());\r\n        o.println();\r\n\r\n        Query query = null;\r\n        if (url != null) {\r\n            o.println(\"Parsing URL: \" + url);\r\n            query = mlt.like(url);\r\n        }\r\n        else if (fn != null) {\r\n            o.println(\"Parsing file: \" + fn);\r\n            query = mlt.like(new File(fn));\r\n        }\r\n\r\n        o.println(\"q: \" + query);\r\n        o.println();\r\n        IndexSearcher searcher = new IndexSearcher(indexName);\r\n\r\n        Hits hits = searcher.search(query);\r\n        int len = hits.length();\r\n        o.println(\"found: \" + len + \" documents matching\");\r\n        o.println();\r\n        for (int i = 0; i < Math.min(25, len); i++) {\r\n            Document d = hits.doc(i);\r\n\t\t\tString summary = d.get( \"summary\");\r\n            o.println(\"score  : \" + hits.score(i));\r\n            o.println(\"url    : \" + d.get(\"url\"));\r\n            o.println(\"\\ttitle  : \" + d.get(\"title\"));\r\n\t\t\tif ( summary != null)\r\n\t\t\t\to.println(\"\\tsummary: \" + d.get(\"summary\"));\r\n            o.println();\r\n        }\r\n    }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a361a621b184d9b73c9c9a37323a9845b8f8260","date":1226370946,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","sourceNew":"    /**\n     * Test driver.\n     * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\n     */\n    public static void main(String[] a) throws Throwable {\n        String indexName = \"localhost_index\";\n        String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\n        URL url = null;\n        for (int i = 0; i < a.length; i++) {\n            if (a[i].equals(\"-i\")) {\n                indexName = a[++i];\n            }\n            else if (a[i].equals(\"-f\")) {\n                fn = a[++i];\n            }\n            else if (a[i].equals(\"-url\")) {\n                url = new URL(a[++i]);\n            }\n        }\n\n        PrintStream o = System.out;\n        IndexReader r = IndexReader.open(indexName);\n        o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\n\n        MoreLikeThis mlt = new MoreLikeThis(r);\n\n        o.println(\"Query generation parameters:\");\n        o.println(mlt.describeParams());\n        o.println();\n\n        Query query = null;\n        if (url != null) {\n            o.println(\"Parsing URL: \" + url);\n            query = mlt.like(url);\n        }\n        else if (fn != null) {\n            o.println(\"Parsing file: \" + fn);\n            query = mlt.like(new File(fn));\n        }\n\n        o.println(\"q: \" + query);\n        o.println();\n        IndexSearcher searcher = new IndexSearcher(indexName);\n\n        Hits hits = searcher.search(query);\n        int len = hits.length();\n        o.println(\"found: \" + len + \" documents matching\");\n        o.println();\n        for (int i = 0; i < Math.min(25, len); i++) {\n            Document d = hits.doc(i);\n\t\t\tString summary = d.get( \"summary\");\n            o.println(\"score  : \" + hits.score(i));\n            o.println(\"url    : \" + d.get(\"url\"));\n            o.println(\"\\ttitle  : \" + d.get(\"title\"));\n\t\t\tif ( summary != null)\n\t\t\t\to.println(\"\\tsummary: \" + d.get(\"summary\"));\n            o.println();\n        }\n    }\n\n","sourceOld":"    /**\r\n     * Test driver.\r\n     * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\r\n     */\r\n    public static void main(String[] a) throws Throwable {\r\n        String indexName = \"localhost_index\";\r\n        String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\r\n        URL url = null;\r\n        for (int i = 0; i < a.length; i++) {\r\n            if (a[i].equals(\"-i\")) {\r\n                indexName = a[++i];\r\n            }\r\n            else if (a[i].equals(\"-f\")) {\r\n                fn = a[++i];\r\n            }\r\n            else if (a[i].equals(\"-url\")) {\r\n                url = new URL(a[++i]);\r\n            }\r\n        }\r\n\r\n        PrintStream o = System.out;\r\n        IndexReader r = IndexReader.open(indexName);\r\n        o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\r\n\r\n        MoreLikeThis mlt = new MoreLikeThis(r);\r\n\r\n        o.println(\"Query generation parameters:\");\r\n        o.println(mlt.describeParams());\r\n        o.println();\r\n\r\n        Query query = null;\r\n        if (url != null) {\r\n            o.println(\"Parsing URL: \" + url);\r\n            query = mlt.like(url);\r\n        }\r\n        else if (fn != null) {\r\n            o.println(\"Parsing file: \" + fn);\r\n            query = mlt.like(new File(fn));\r\n        }\r\n\r\n        o.println(\"q: \" + query);\r\n        o.println();\r\n        IndexSearcher searcher = new IndexSearcher(indexName);\r\n\r\n        Hits hits = searcher.search(query);\r\n        int len = hits.length();\r\n        o.println(\"found: \" + len + \" documents matching\");\r\n        o.println();\r\n        for (int i = 0; i < Math.min(25, len); i++) {\r\n            Document d = hits.doc(i);\r\n\t\t\tString summary = d.get( \"summary\");\r\n            o.println(\"score  : \" + hits.score(i));\r\n            o.println(\"url    : \" + d.get(\"url\"));\r\n            o.println(\"\\ttitle  : \" + d.get(\"title\"));\r\n\t\t\tif ( summary != null)\r\n\t\t\t\to.println(\"\\tsummary: \" + d.get(\"summary\"));\r\n            o.println();\r\n        }\r\n    }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4256bc1b3c94786287ccdfc751230374521843cf","date":1254612273,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","sourceNew":"    /**\n     * Test driver.\n     * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\n     */\n    public static void main(String[] a) throws Throwable {\n        String indexName = \"localhost_index\";\n        String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\n        URL url = null;\n        for (int i = 0; i < a.length; i++) {\n            if (a[i].equals(\"-i\")) {\n                indexName = a[++i];\n            }\n            else if (a[i].equals(\"-f\")) {\n                fn = a[++i];\n            }\n            else if (a[i].equals(\"-url\")) {\n                url = new URL(a[++i]);\n            }\n        }\n\n        PrintStream o = System.out;\n        FSDirectory dir = FSDirectory.open(new File(indexName));\n        IndexReader r = IndexReader.open(dir, true);\n        o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\n\n        MoreLikeThis mlt = new MoreLikeThis(r);\n\n        o.println(\"Query generation parameters:\");\n        o.println(mlt.describeParams());\n        o.println();\n\n        Query query = null;\n        if (url != null) {\n            o.println(\"Parsing URL: \" + url);\n            query = mlt.like(url);\n        }\n        else if (fn != null) {\n            o.println(\"Parsing file: \" + fn);\n            query = mlt.like(new File(fn));\n        }\n\n        o.println(\"q: \" + query);\n        o.println();\n        IndexSearcher searcher = new IndexSearcher(dir, true);\n\n        Hits hits = searcher.search(query);\n        int len = hits.length();\n        o.println(\"found: \" + len + \" documents matching\");\n        o.println();\n        for (int i = 0; i < Math.min(25, len); i++) {\n            Document d = hits.doc(i);\n\t\t\tString summary = d.get( \"summary\");\n            o.println(\"score  : \" + hits.score(i));\n            o.println(\"url    : \" + d.get(\"url\"));\n            o.println(\"\\ttitle  : \" + d.get(\"title\"));\n\t\t\tif ( summary != null)\n\t\t\t\to.println(\"\\tsummary: \" + d.get(\"summary\"));\n            o.println();\n        }\n    }\n\n","sourceOld":"    /**\n     * Test driver.\n     * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\n     */\n    public static void main(String[] a) throws Throwable {\n        String indexName = \"localhost_index\";\n        String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\n        URL url = null;\n        for (int i = 0; i < a.length; i++) {\n            if (a[i].equals(\"-i\")) {\n                indexName = a[++i];\n            }\n            else if (a[i].equals(\"-f\")) {\n                fn = a[++i];\n            }\n            else if (a[i].equals(\"-url\")) {\n                url = new URL(a[++i]);\n            }\n        }\n\n        PrintStream o = System.out;\n        IndexReader r = IndexReader.open(indexName);\n        o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\n\n        MoreLikeThis mlt = new MoreLikeThis(r);\n\n        o.println(\"Query generation parameters:\");\n        o.println(mlt.describeParams());\n        o.println();\n\n        Query query = null;\n        if (url != null) {\n            o.println(\"Parsing URL: \" + url);\n            query = mlt.like(url);\n        }\n        else if (fn != null) {\n            o.println(\"Parsing file: \" + fn);\n            query = mlt.like(new File(fn));\n        }\n\n        o.println(\"q: \" + query);\n        o.println();\n        IndexSearcher searcher = new IndexSearcher(indexName);\n\n        Hits hits = searcher.search(query);\n        int len = hits.length();\n        o.println(\"found: \" + len + \" documents matching\");\n        o.println();\n        for (int i = 0; i < Math.min(25, len); i++) {\n            Document d = hits.doc(i);\n\t\t\tString summary = d.get( \"summary\");\n            o.println(\"score  : \" + hits.score(i));\n            o.println(\"url    : \" + d.get(\"url\"));\n            o.println(\"\\ttitle  : \" + d.get(\"title\"));\n\t\t\tif ( summary != null)\n\t\t\t\to.println(\"\\tsummary: \" + d.get(\"summary\"));\n            o.println();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f148c02ddd6ba981c65ca685d0e56c3a98368e1","date":1254892102,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","sourceNew":"    /**\n     * Test driver.\n     * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\n     */\n    public static void main(String[] a) throws Throwable {\n        String indexName = \"localhost_index\";\n        String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\n        URL url = null;\n        for (int i = 0; i < a.length; i++) {\n            if (a[i].equals(\"-i\")) {\n                indexName = a[++i];\n            }\n            else if (a[i].equals(\"-f\")) {\n                fn = a[++i];\n            }\n            else if (a[i].equals(\"-url\")) {\n                url = new URL(a[++i]);\n            }\n        }\n\n        PrintStream o = System.out;\n        FSDirectory dir = FSDirectory.open(new File(indexName));\n        IndexReader r = IndexReader.open(dir, true);\n        o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\n\n        MoreLikeThis mlt = new MoreLikeThis(r);\n\n        o.println(\"Query generation parameters:\");\n        o.println(mlt.describeParams());\n        o.println();\n\n        Query query = null;\n        if (url != null) {\n            o.println(\"Parsing URL: \" + url);\n            query = mlt.like(url);\n        }\n        else if (fn != null) {\n            o.println(\"Parsing file: \" + fn);\n            query = mlt.like(new File(fn));\n        }\n\n        o.println(\"q: \" + query);\n        o.println();\n        IndexSearcher searcher = new IndexSearcher(dir, true);\n\n        TopDocs hits = searcher.search(query, null, 25);\n        int len = hits.totalHits;\n        o.println(\"found: \" + len + \" documents matching\");\n        o.println();\n        ScoreDoc[] scoreDocs = hits.scoreDocs;\n        for (int i = 0; i < Math.min(25, len); i++) {\n            Document d = searcher.doc(scoreDocs[i].doc);\n\t\t\tString summary = d.get( \"summary\");\n            o.println(\"score  : \" + scoreDocs[i].score);\n            o.println(\"url    : \" + d.get(\"url\"));\n            o.println(\"\\ttitle  : \" + d.get(\"title\"));\n\t\t\tif ( summary != null)\n\t\t\t\to.println(\"\\tsummary: \" + d.get(\"summary\"));\n            o.println();\n        }\n    }\n\n","sourceOld":"    /**\n     * Test driver.\n     * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\n     */\n    public static void main(String[] a) throws Throwable {\n        String indexName = \"localhost_index\";\n        String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\n        URL url = null;\n        for (int i = 0; i < a.length; i++) {\n            if (a[i].equals(\"-i\")) {\n                indexName = a[++i];\n            }\n            else if (a[i].equals(\"-f\")) {\n                fn = a[++i];\n            }\n            else if (a[i].equals(\"-url\")) {\n                url = new URL(a[++i]);\n            }\n        }\n\n        PrintStream o = System.out;\n        FSDirectory dir = FSDirectory.open(new File(indexName));\n        IndexReader r = IndexReader.open(dir, true);\n        o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\n\n        MoreLikeThis mlt = new MoreLikeThis(r);\n\n        o.println(\"Query generation parameters:\");\n        o.println(mlt.describeParams());\n        o.println();\n\n        Query query = null;\n        if (url != null) {\n            o.println(\"Parsing URL: \" + url);\n            query = mlt.like(url);\n        }\n        else if (fn != null) {\n            o.println(\"Parsing file: \" + fn);\n            query = mlt.like(new File(fn));\n        }\n\n        o.println(\"q: \" + query);\n        o.println();\n        IndexSearcher searcher = new IndexSearcher(dir, true);\n\n        Hits hits = searcher.search(query);\n        int len = hits.length();\n        o.println(\"found: \" + len + \" documents matching\");\n        o.println();\n        for (int i = 0; i < Math.min(25, len); i++) {\n            Document d = hits.doc(i);\n\t\t\tString summary = d.get( \"summary\");\n            o.println(\"score  : \" + hits.score(i));\n            o.println(\"url    : \" + d.get(\"url\"));\n            o.println(\"\\ttitle  : \" + d.get(\"title\"));\n\t\t\tif ( summary != null)\n\t\t\t\to.println(\"\\tsummary: \" + d.get(\"summary\"));\n            o.println();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/similar/MoreLikeThis#main(String[]).mjava","sourceNew":"    /**\n     * Test driver.\n     * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\n     */\n    public static void main(String[] a) throws Throwable {\n        String indexName = \"localhost_index\";\n        String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\n        URL url = null;\n        for (int i = 0; i < a.length; i++) {\n            if (a[i].equals(\"-i\")) {\n                indexName = a[++i];\n            }\n            else if (a[i].equals(\"-f\")) {\n                fn = a[++i];\n            }\n            else if (a[i].equals(\"-url\")) {\n                url = new URL(a[++i]);\n            }\n        }\n\n        PrintStream o = System.out;\n        FSDirectory dir = FSDirectory.open(new File(indexName));\n        IndexReader r = IndexReader.open(dir, true);\n        o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\n\n        MoreLikeThis mlt = new MoreLikeThis(r);\n\n        o.println(\"Query generation parameters:\");\n        o.println(mlt.describeParams());\n        o.println();\n\n        Query query = null;\n        if (url != null) {\n            o.println(\"Parsing URL: \" + url);\n            query = mlt.like(url);\n        }\n        else if (fn != null) {\n            o.println(\"Parsing file: \" + fn);\n            query = mlt.like(new File(fn));\n        }\n\n        o.println(\"q: \" + query);\n        o.println();\n        IndexSearcher searcher = new IndexSearcher(dir, true);\n\n        TopDocs hits = searcher.search(query, null, 25);\n        int len = hits.totalHits;\n        o.println(\"found: \" + len + \" documents matching\");\n        o.println();\n        ScoreDoc[] scoreDocs = hits.scoreDocs;\n        for (int i = 0; i < Math.min(25, len); i++) {\n            Document d = searcher.doc(scoreDocs[i].doc);\n\t\t\tString summary = d.get( \"summary\");\n            o.println(\"score  : \" + scoreDocs[i].score);\n            o.println(\"url    : \" + d.get(\"url\"));\n            o.println(\"\\ttitle  : \" + d.get(\"title\"));\n\t\t\tif ( summary != null)\n\t\t\t\to.println(\"\\tsummary: \" + d.get(\"summary\"));\n            o.println();\n        }\n    }\n\n","sourceOld":"    /**\n     * Test driver.\n     * Pass in \"-i INDEX\" and then either \"-fn FILE\" or \"-url URL\".\n     */\n    public static void main(String[] a) throws Throwable {\n        String indexName = \"localhost_index\";\n        String fn = \"c:/Program Files/Apache Group/Apache/htdocs/manual/vhosts/index.html.en\";\n        URL url = null;\n        for (int i = 0; i < a.length; i++) {\n            if (a[i].equals(\"-i\")) {\n                indexName = a[++i];\n            }\n            else if (a[i].equals(\"-f\")) {\n                fn = a[++i];\n            }\n            else if (a[i].equals(\"-url\")) {\n                url = new URL(a[++i]);\n            }\n        }\n\n        PrintStream o = System.out;\n        FSDirectory dir = FSDirectory.open(new File(indexName));\n        IndexReader r = IndexReader.open(dir, true);\n        o.println(\"Open index \" + indexName + \" which has \" + r.numDocs() + \" docs\");\n\n        MoreLikeThis mlt = new MoreLikeThis(r);\n\n        o.println(\"Query generation parameters:\");\n        o.println(mlt.describeParams());\n        o.println();\n\n        Query query = null;\n        if (url != null) {\n            o.println(\"Parsing URL: \" + url);\n            query = mlt.like(url);\n        }\n        else if (fn != null) {\n            o.println(\"Parsing file: \" + fn);\n            query = mlt.like(new File(fn));\n        }\n\n        o.println(\"q: \" + query);\n        o.println();\n        IndexSearcher searcher = new IndexSearcher(dir, true);\n\n        TopDocs hits = searcher.search(query, null, 25);\n        int len = hits.totalHits;\n        o.println(\"found: \" + len + \" documents matching\");\n        o.println();\n        ScoreDoc[] scoreDocs = hits.scoreDocs;\n        for (int i = 0; i < Math.min(25, len); i++) {\n            Document d = searcher.doc(scoreDocs[i].doc);\n\t\t\tString summary = d.get( \"summary\");\n            o.println(\"score  : \" + scoreDocs[i].score);\n            o.println(\"url    : \" + d.get(\"url\"));\n            o.println(\"\\ttitle  : \" + d.get(\"title\"));\n\t\t\tif ( summary != null)\n\t\t\t\to.println(\"\\tsummary: \" + d.get(\"summary\"));\n            o.println();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["d3c3c2404d1200c39220fa15054fae854db4e1ee"],"d3c3c2404d1200c39220fa15054fae854db4e1ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f148c02ddd6ba981c65ca685d0e56c3a98368e1":["4256bc1b3c94786287ccdfc751230374521843cf"],"4256bc1b3c94786287ccdfc751230374521843cf":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f148c02ddd6ba981c65ca685d0e56c3a98368e1"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3c3c2404d1200c39220fa15054fae854db4e1ee"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["4256bc1b3c94786287ccdfc751230374521843cf"],"d3c3c2404d1200c39220fa15054fae854db4e1ee":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"0f148c02ddd6ba981c65ca685d0e56c3a98368e1":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"4256bc1b3c94786287ccdfc751230374521843cf":["0f148c02ddd6ba981c65ca685d0e56c3a98368e1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}