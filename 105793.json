{"path":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.ValueSourceCollapse#collapse(int,int,int).mjava","commits":[{"id":"51e87f816b84771636e67fc67039925030ebe671","date":1388500548,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.ValueSourceCollapse#collapse(int,int,int).mjava","pathOld":"/dev/null","sourceNew":"    public void collapse(int ord, int contextDoc, int globalDoc) throws IOException {\n      if(needsScores || cscore) {\n        this.score = scorer.score();\n        this.collapseScore.score = score;\n      }\n\n      float val = functionValues.floatVal(contextDoc);\n\n      if(ord > -1) {\n        if(comp.test(val, ordVals[ord])) {\n          ords[ord] = globalDoc;\n          ordVals[ord] = val;\n          if(needsScores) {\n            scores[ord] = score;\n          }\n        }\n      } else if (this.collapsedSet.fastGet(globalDoc)) {\n        //Elevated doc so do nothing\n      } else if(this.nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n        if(comp.test(val, nullVal)) {\n          nullVal = val;\n          nullDoc = globalDoc;\n          if(needsScores) {\n            nullScore = score;\n          }\n        }\n      } else if(this.nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        this.collapsedSet.fastSet(globalDoc);\n        if(needsScores) {\n          nullScores.add(score);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["b42ae09e9ac11a8b035eb691b3aa7ede98551622"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1","date":1392536197,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.ValueSourceCollapse#collapse(int,int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.ValueSourceCollapse#collapse(int,int,int).mjava","sourceNew":"    public void collapse(int ord, int contextDoc, int globalDoc) throws IOException {\n      if(needsScores || cscore) {\n        this.score = scorer.score();\n        this.collapseScore.score = score;\n      }\n\n      float val = functionValues.floatVal(contextDoc);\n\n      if(ord > -1) {\n        if(comp.test(val, ordVals[ord])) {\n          ords[ord] = globalDoc;\n          ordVals[ord] = val;\n          if(needsScores) {\n            scores[ord] = score;\n          }\n        }\n      } else if (this.collapsedSet.get(globalDoc)) {\n        //Elevated doc so do nothing\n      } else if(this.nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n        if(comp.test(val, nullVal)) {\n          nullVal = val;\n          nullDoc = globalDoc;\n          if(needsScores) {\n            nullScore = score;\n          }\n        }\n      } else if(this.nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        this.collapsedSet.set(globalDoc);\n        if(needsScores) {\n          nullScores.add(score);\n        }\n      }\n    }\n\n","sourceOld":"    public void collapse(int ord, int contextDoc, int globalDoc) throws IOException {\n      if(needsScores || cscore) {\n        this.score = scorer.score();\n        this.collapseScore.score = score;\n      }\n\n      float val = functionValues.floatVal(contextDoc);\n\n      if(ord > -1) {\n        if(comp.test(val, ordVals[ord])) {\n          ords[ord] = globalDoc;\n          ordVals[ord] = val;\n          if(needsScores) {\n            scores[ord] = score;\n          }\n        }\n      } else if (this.collapsedSet.fastGet(globalDoc)) {\n        //Elevated doc so do nothing\n      } else if(this.nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n        if(comp.test(val, nullVal)) {\n          nullVal = val;\n          nullDoc = globalDoc;\n          if(needsScores) {\n            nullScore = score;\n          }\n        }\n      } else if(this.nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        this.collapsedSet.fastSet(globalDoc);\n        if(needsScores) {\n          nullScores.add(score);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8ced52befdc8d88d90766aadbaac496f3fd0e4ee","date":1421070034,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdValueSourceStrategy#collapse(int,int,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.ValueSourceCollapse#collapse(int,int,int).mjava","sourceNew":"    public void collapse(int ord, int contextDoc, int globalDoc) throws IOException {\n\n      if(boosted && mergeBoost.boost(globalDoc)) {\n        this.boostOrds.add(ord);\n        this.boostDocs.add(globalDoc);\n      }\n\n      if(needsScores || cscore) {\n        this.score = scorer.score();\n        this.collapseScore.score = score;\n      }\n\n      float currentVal = functionValues.floatVal(contextDoc);\n\n      if(ord > -1) {\n        if(comp.test(currentVal, ordVals[ord])) {\n          ords[ord] = globalDoc;\n          ordVals[ord] = currentVal;\n          if(needsScores) {\n            scores[ord] = score;\n          }\n        }\n      } else if(this.nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n        if(comp.test(currentVal, nullVal)) {\n          nullVal = currentVal;\n          nullDoc = globalDoc;\n          if(needsScores) {\n            nullScore = score;\n          }\n        }\n      } else if(this.nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        this.collapsedSet.set(globalDoc);\n        if(needsScores) {\n          nullScores.add(score);\n        }\n      }\n    }\n\n","sourceOld":"    public void collapse(int ord, int contextDoc, int globalDoc) throws IOException {\n      if(needsScores || cscore) {\n        this.score = scorer.score();\n        this.collapseScore.score = score;\n      }\n\n      float val = functionValues.floatVal(contextDoc);\n\n      if(ord > -1) {\n        if(comp.test(val, ordVals[ord])) {\n          ords[ord] = globalDoc;\n          ordVals[ord] = val;\n          if(needsScores) {\n            scores[ord] = score;\n          }\n        }\n      } else if (this.collapsedSet.get(globalDoc)) {\n        //Elevated doc so do nothing\n      } else if(this.nullPolicy == CollapsingPostFilter.NULL_POLICY_COLLAPSE) {\n        if(comp.test(val, nullVal)) {\n          nullVal = val;\n          nullDoc = globalDoc;\n          if(needsScores) {\n            nullScore = score;\n          }\n        }\n      } else if(this.nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n        this.collapsedSet.set(globalDoc);\n        if(needsScores) {\n          nullScores.add(score);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["a69cf7f1b4cac5d5b1363402b565cd535f13e6a1"],"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1":["51e87f816b84771636e67fc67039925030ebe671"],"51e87f816b84771636e67fc67039925030ebe671":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"]},"commit2Childs":{"8ced52befdc8d88d90766aadbaac496f3fd0e4ee":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1":["8ced52befdc8d88d90766aadbaac496f3fd0e4ee"],"51e87f816b84771636e67fc67039925030ebe671":["a69cf7f1b4cac5d5b1363402b565cd535f13e6a1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["51e87f816b84771636e67fc67039925030ebe671"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}