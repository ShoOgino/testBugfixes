{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/UniformSplitTermsReader#parseFieldsMetadata(IndexInput,FieldInfos,FieldMetadata.Serializer,int).mjava","commits":[{"id":"d28da8a459f5f0c930da7185c56d0c25edd3fbd1","date":1577783695,"type":1,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/UniformSplitTermsReader#parseFieldsMetadata(IndexInput,FieldInfos,FieldMetadata.Serializer,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/UniformSplitTermsReader#parseFieldsMetadata(IndexInput,FieldInfos,int).mjava","sourceNew":"  /**\n   * @param indexInput {@link IndexInput} must be positioned to the fields metadata\n   *                   details by calling {@link #seekFieldsMetadata(IndexInput)} before this call.\n   */\n  protected static Collection<FieldMetadata> parseFieldsMetadata(IndexInput indexInput, FieldInfos fieldInfos,\n                                                                 FieldMetadata.Serializer fieldMetadataReader, int maxNumDocs) throws IOException {\n    int numFields = indexInput.readVInt();\n    if (numFields < 0) {\n      throw new CorruptIndexException(\"Illegal number of fields= \" + numFields, indexInput);\n    }\n    Collection<FieldMetadata> fieldMetadataCollection = new ArrayList<>(numFields);\n    for (int i = 0; i < numFields; i++) {\n      fieldMetadataCollection.add(fieldMetadataReader.read(indexInput, fieldInfos, maxNumDocs));\n    }\n    return fieldMetadataCollection;\n  }\n\n","sourceOld":"  /**\n   * @param indexInput {@link IndexInput} must be positioned to the fields metadata\n   *                   details by calling {@link #seekFieldsMetadata(IndexInput)} before this call.\n   */\n  protected static Collection<FieldMetadata> parseFieldsMetadata(IndexInput indexInput, FieldInfos fieldInfos, int maxNumDocs) throws IOException {\n    int numFields = indexInput.readVInt();\n    if (numFields < 0) {\n      throw new CorruptIndexException(\"Illegal number of fields= \" + numFields, indexInput);\n    }\n    Collection<FieldMetadata> fieldMetadataCollection = new ArrayList<>(numFields);\n    for (int i = 0; i < numFields; i++) {\n      fieldMetadataCollection.add(FieldMetadata.read(indexInput, fieldInfos, maxNumDocs));\n    }\n    return fieldMetadataCollection;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c606b777c4250f3f3f6f66d659c7c4c403679b71","date":1577958559,"type":1,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/UniformSplitTermsReader#parseFieldsMetadata(IndexInput,FieldInfos,FieldMetadata.Serializer,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/UniformSplitTermsReader#parseFieldsMetadata(IndexInput,FieldInfos,int).mjava","sourceNew":"  /**\n   * @param indexInput {@link IndexInput} must be positioned to the fields metadata\n   *                   details by calling {@link #seekFieldsMetadata(IndexInput)} before this call.\n   */\n  protected static Collection<FieldMetadata> parseFieldsMetadata(IndexInput indexInput, FieldInfos fieldInfos,\n                                                                 FieldMetadata.Serializer fieldMetadataReader, int maxNumDocs) throws IOException {\n    int numFields = indexInput.readVInt();\n    if (numFields < 0) {\n      throw new CorruptIndexException(\"Illegal number of fields= \" + numFields, indexInput);\n    }\n    Collection<FieldMetadata> fieldMetadataCollection = new ArrayList<>(numFields);\n    for (int i = 0; i < numFields; i++) {\n      fieldMetadataCollection.add(fieldMetadataReader.read(indexInput, fieldInfos, maxNumDocs));\n    }\n    return fieldMetadataCollection;\n  }\n\n","sourceOld":"  /**\n   * @param indexInput {@link IndexInput} must be positioned to the fields metadata\n   *                   details by calling {@link #seekFieldsMetadata(IndexInput)} before this call.\n   */\n  protected static Collection<FieldMetadata> parseFieldsMetadata(IndexInput indexInput, FieldInfos fieldInfos, int maxNumDocs) throws IOException {\n    int numFields = indexInput.readVInt();\n    if (numFields < 0) {\n      throw new CorruptIndexException(\"Illegal number of fields= \" + numFields, indexInput);\n    }\n    Collection<FieldMetadata> fieldMetadataCollection = new ArrayList<>(numFields);\n    for (int i = 0; i < numFields; i++) {\n      fieldMetadataCollection.add(FieldMetadata.read(indexInput, fieldInfos, maxNumDocs));\n    }\n    return fieldMetadataCollection;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bf19e0585c61e03c645ac979e97c192529637d6","date":1591892388,"type":5,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/UniformSplitTermsReader#readFieldsMetadata(IndexInput,BlockDecoder,FieldInfos,FieldMetadata.Serializer,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/UniformSplitTermsReader#parseFieldsMetadata(IndexInput,FieldInfos,FieldMetadata.Serializer,int).mjava","sourceNew":"  /**\n   * @param indexInput {@link IndexInput} must be positioned to the fields metadata\n   *                   details by calling {@link #seekFieldsMetadata(IndexInput)} before this call.\n   * @param blockDecoder Optional block decoder, may be null if none.\n   */\n  protected Collection<FieldMetadata> readFieldsMetadata(IndexInput indexInput, BlockDecoder blockDecoder, FieldInfos fieldInfos,\n                                                                FieldMetadata.Serializer fieldMetadataReader, int maxNumDocs) throws IOException {\n    int numFields = indexInput.readVInt();\n    if (numFields < 0) {\n      throw new CorruptIndexException(\"Illegal number of fields= \" + numFields, indexInput);\n    }\n    return (blockDecoder != null && version >= VERSION_ENCODABLE_FIELDS_METADATA) ?\n        readEncodedFieldsMetadata(numFields, indexInput, blockDecoder, fieldInfos, fieldMetadataReader, maxNumDocs)\n        : readUnencodedFieldsMetadata(numFields, indexInput, fieldInfos, fieldMetadataReader, maxNumDocs);\n  }\n\n","sourceOld":"  /**\n   * @param indexInput {@link IndexInput} must be positioned to the fields metadata\n   *                   details by calling {@link #seekFieldsMetadata(IndexInput)} before this call.\n   */\n  protected static Collection<FieldMetadata> parseFieldsMetadata(IndexInput indexInput, FieldInfos fieldInfos,\n                                                                 FieldMetadata.Serializer fieldMetadataReader, int maxNumDocs) throws IOException {\n    int numFields = indexInput.readVInt();\n    if (numFields < 0) {\n      throw new CorruptIndexException(\"Illegal number of fields= \" + numFields, indexInput);\n    }\n    Collection<FieldMetadata> fieldMetadataCollection = new ArrayList<>(numFields);\n    for (int i = 0; i < numFields; i++) {\n      fieldMetadataCollection.add(fieldMetadataReader.read(indexInput, fieldInfos, maxNumDocs));\n    }\n    return fieldMetadataCollection;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c606b777c4250f3f3f6f66d659c7c4c403679b71":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d28da8a459f5f0c930da7185c56d0c25edd3fbd1"],"5bf19e0585c61e03c645ac979e97c192529637d6":["d28da8a459f5f0c930da7185c56d0c25edd3fbd1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d28da8a459f5f0c930da7185c56d0c25edd3fbd1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5bf19e0585c61e03c645ac979e97c192529637d6"]},"commit2Childs":{"c606b777c4250f3f3f6f66d659c7c4c403679b71":[],"5bf19e0585c61e03c645ac979e97c192529637d6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c606b777c4250f3f3f6f66d659c7c4c403679b71","d28da8a459f5f0c930da7185c56d0c25edd3fbd1"],"d28da8a459f5f0c930da7185c56d0c25edd3fbd1":["c606b777c4250f3f3f6f66d659c7c4c403679b71","5bf19e0585c61e03c645ac979e97c192529637d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c606b777c4250f3f3f6f66d659c7c4c403679b71","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}