{"path":"solr/core/src/java/org/apache/solr/core/SolrConfig#readFromResourceLoader(SolrResourceLoader,String).mjava","commits":[{"id":"2d4e985daefcb892b529223b478c47985fc3c483","date":1395658491,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig#readFromResourceLoader(SolrResourceLoader,String).mjava","pathOld":"/dev/null","sourceNew":"  public static SolrConfig readFromResourceLoader(SolrResourceLoader loader, String name) {\n    try {\n      return new SolrConfig(loader, name, null);\n    }\n    catch (Exception e) {\n      String resource = loader.getInstanceDir() + name;\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error loading solr config from \" + resource, e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f52362fa746c58f10354f9454bed2b89f59c06b2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f52362fa746c58f10354f9454bed2b89f59c06b2","date":1409868448,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig#readFromResourceLoader(SolrResourceLoader,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig#readFromResourceLoader(SolrResourceLoader,String).mjava","sourceNew":"  public static SolrConfig readFromResourceLoader(SolrResourceLoader loader, String name) {\n    try {\n      return new SolrConfig(loader, name, null);\n    }\n    catch (Exception e) {\n      String resource = loader.getConfigDir() + name;\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error loading solr config from \" + resource, e);\n    }\n  }\n\n","sourceOld":"  public static SolrConfig readFromResourceLoader(SolrResourceLoader loader, String name) {\n    try {\n      return new SolrConfig(loader, name, null);\n    }\n    catch (Exception e) {\n      String resource = loader.getInstanceDir() + name;\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error loading solr config from \" + resource, e);\n    }\n  }\n\n","bugFix":["2d4e985daefcb892b529223b478c47985fc3c483"],"bugIntro":["92c8edb2962efc12c9f1afd38e0ab27621b7eb48"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"92c8edb2962efc12c9f1afd38e0ab27621b7eb48","date":1412367419,"type":3,"author":"Tomas Eduardo Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig#readFromResourceLoader(SolrResourceLoader,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig#readFromResourceLoader(SolrResourceLoader,String).mjava","sourceNew":"  public static SolrConfig readFromResourceLoader(SolrResourceLoader loader, String name) {\n    try {\n      return new SolrConfig(loader, name, null);\n    }\n    catch (Exception e) {\n      String resource;\n      if (loader instanceof ZkSolrResourceLoader) {\n        resource = name;\n      } else {\n        resource = loader.getConfigDir() + name;\n      }\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error loading solr config from \" + resource, e);\n    }\n  }\n\n","sourceOld":"  public static SolrConfig readFromResourceLoader(SolrResourceLoader loader, String name) {\n    try {\n      return new SolrConfig(loader, name, null);\n    }\n    catch (Exception e) {\n      String resource = loader.getConfigDir() + name;\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error loading solr config from \" + resource, e);\n    }\n  }\n\n","bugFix":["f52362fa746c58f10354f9454bed2b89f59c06b2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig#readFromResourceLoader(SolrResourceLoader,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig#readFromResourceLoader(SolrResourceLoader,String).mjava","sourceNew":"  public static SolrConfig readFromResourceLoader(SolrResourceLoader loader, String name) {\n    try {\n      return new SolrConfig(loader, name, null);\n    }\n    catch (Exception e) {\n      String resource;\n      if (loader instanceof ZkSolrResourceLoader) {\n        resource = name;\n      } else {\n        resource = loader.getConfigDir() + name;\n      }\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error loading solr config from \" + resource, e);\n    }\n  }\n\n","sourceOld":"  public static SolrConfig readFromResourceLoader(SolrResourceLoader loader, String name) {\n    try {\n      return new SolrConfig(loader, name, null);\n    }\n    catch (Exception e) {\n      String resource = loader.getConfigDir() + name;\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error loading solr config from \" + resource, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae2f5be890d26585d438eba0b9cc7d3c0a9775be","date":1427387954,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig#readFromResourceLoader(SolrResourceLoader,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig#readFromResourceLoader(SolrResourceLoader,String).mjava","sourceNew":"  public static SolrConfig readFromResourceLoader(SolrResourceLoader loader, String name) {\n    try {\n      return new SolrConfig(loader, name, null);\n    } catch (Exception e) {\n      String resource;\n      if (loader instanceof ZkSolrResourceLoader) {\n        resource = name;\n      } else {\n        resource = loader.getConfigDir() + name;\n      }\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error loading solr config from \" + resource, e);\n    }\n  }\n\n","sourceOld":"  public static SolrConfig readFromResourceLoader(SolrResourceLoader loader, String name) {\n    try {\n      return new SolrConfig(loader, name, null);\n    }\n    catch (Exception e) {\n      String resource;\n      if (loader instanceof ZkSolrResourceLoader) {\n        resource = name;\n      } else {\n        resource = loader.getConfigDir() + name;\n      }\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error loading solr config from \" + resource, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig#readFromResourceLoader(SolrResourceLoader,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig#readFromResourceLoader(SolrResourceLoader,String).mjava","sourceNew":"  public static SolrConfig readFromResourceLoader(SolrResourceLoader loader, String name) {\n    try {\n      return new SolrConfig(loader, name, null);\n    } catch (Exception e) {\n      String resource;\n      if (loader instanceof ZkSolrResourceLoader) {\n        resource = name;\n      } else {\n        resource = loader.getConfigDir() + name;\n      }\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error loading solr config from \" + resource, e);\n    }\n  }\n\n","sourceOld":"  public static SolrConfig readFromResourceLoader(SolrResourceLoader loader, String name) {\n    try {\n      return new SolrConfig(loader, name, null);\n    }\n    catch (Exception e) {\n      String resource;\n      if (loader instanceof ZkSolrResourceLoader) {\n        resource = name;\n      } else {\n        resource = loader.getConfigDir() + name;\n      }\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error loading solr config from \" + resource, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig#readFromResourceLoader(SolrResourceLoader,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig#readFromResourceLoader(SolrResourceLoader,String).mjava","sourceNew":"  public static SolrConfig readFromResourceLoader(SolrResourceLoader loader, String name) {\n    try {\n      return new SolrConfig(loader, name, null);\n    } catch (Exception e) {\n      String resource;\n      if (loader instanceof ZkSolrResourceLoader) {\n        resource = name;\n      } else {\n        resource = Paths.get(loader.getConfigDir()).resolve(name).toString();\n      }\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error loading solr config from \" + resource, e);\n    }\n  }\n\n","sourceOld":"  public static SolrConfig readFromResourceLoader(SolrResourceLoader loader, String name) {\n    try {\n      return new SolrConfig(loader, name, null);\n    } catch (Exception e) {\n      String resource;\n      if (loader instanceof ZkSolrResourceLoader) {\n        resource = name;\n      } else {\n        resource = loader.getConfigDir() + name;\n      }\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error loading solr config from \" + resource, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96","date":1576143009,"type":5,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig#readFromResourceLoader(SolrResourceLoader,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig#readFromResourceLoader(SolrResourceLoader,String).mjava","sourceNew":"  public static SolrConfig readFromResourceLoader(SolrResourceLoader loader, String name, boolean isConfigsetTrusted) {\n    try {\n      return new SolrConfig(loader, name, null, isConfigsetTrusted);\n    } catch (Exception e) {\n      String resource;\n      if (loader instanceof ZkSolrResourceLoader) {\n        resource = name;\n      } else {\n        resource = Paths.get(loader.getConfigDir()).resolve(name).toString();\n      }\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error loading solr config from \" + resource, e);\n    }\n  }\n\n","sourceOld":"  public static SolrConfig readFromResourceLoader(SolrResourceLoader loader, String name) {\n    try {\n      return new SolrConfig(loader, name, null);\n    } catch (Exception e) {\n      String resource;\n      if (loader instanceof ZkSolrResourceLoader) {\n        resource = name;\n      } else {\n        resource = Paths.get(loader.getConfigDir()).resolve(name).toString();\n      }\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error loading solr config from \" + resource, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df724d84dab24a0cc54bec95a8680867adc7f171","date":1576156608,"type":5,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrConfig#readFromResourceLoader(SolrResourceLoader,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrConfig#readFromResourceLoader(SolrResourceLoader,String).mjava","sourceNew":"  public static SolrConfig readFromResourceLoader(SolrResourceLoader loader, String name, boolean isConfigsetTrusted) {\n    try {\n      return new SolrConfig(loader, name, null, isConfigsetTrusted);\n    } catch (Exception e) {\n      String resource;\n      if (loader instanceof ZkSolrResourceLoader) {\n        resource = name;\n      } else {\n        resource = Paths.get(loader.getConfigDir()).resolve(name).toString();\n      }\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error loading solr config from \" + resource, e);\n    }\n  }\n\n","sourceOld":"  public static SolrConfig readFromResourceLoader(SolrResourceLoader loader, String name) {\n    try {\n      return new SolrConfig(loader, name, null);\n    } catch (Exception e) {\n      String resource;\n      if (loader instanceof ZkSolrResourceLoader) {\n        resource = name;\n      } else {\n        resource = Paths.get(loader.getConfigDir()).resolve(name).toString();\n      }\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error loading solr config from \" + resource, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df724d84dab24a0cc54bec95a8680867adc7f171":["a626ec4d1c92e59fe390724d6220081047b03ce7","ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["92c8edb2962efc12c9f1afd38e0ab27621b7eb48","ae2f5be890d26585d438eba0b9cc7d3c0a9775be"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["ae2f5be890d26585d438eba0b9cc7d3c0a9775be"],"f52362fa746c58f10354f9454bed2b89f59c06b2":["2d4e985daefcb892b529223b478c47985fc3c483"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["f52362fa746c58f10354f9454bed2b89f59c06b2","92c8edb2962efc12c9f1afd38e0ab27621b7eb48"],"2d4e985daefcb892b529223b478c47985fc3c483":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"92c8edb2962efc12c9f1afd38e0ab27621b7eb48":["f52362fa746c58f10354f9454bed2b89f59c06b2"],"ae2f5be890d26585d438eba0b9cc7d3c0a9775be":["92c8edb2962efc12c9f1afd38e0ab27621b7eb48"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"]},"commit2Childs":{"df724d84dab24a0cc54bec95a8680867adc7f171":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a626ec4d1c92e59fe390724d6220081047b03ce7":["df724d84dab24a0cc54bec95a8680867adc7f171","ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96"],"f52362fa746c58f10354f9454bed2b89f59c06b2":["d9a47902d6207303f5ed3e7aaca62ca33433af66","92c8edb2962efc12c9f1afd38e0ab27621b7eb48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2d4e985daefcb892b529223b478c47985fc3c483"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"2d4e985daefcb892b529223b478c47985fc3c483":["f52362fa746c58f10354f9454bed2b89f59c06b2"],"ad8024a22d8bd3a09b7f618f41cdfe117ae6fe96":["df724d84dab24a0cc54bec95a8680867adc7f171","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"92c8edb2962efc12c9f1afd38e0ab27621b7eb48":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","d9a47902d6207303f5ed3e7aaca62ca33433af66","ae2f5be890d26585d438eba0b9cc7d3c0a9775be"],"ae2f5be890d26585d438eba0b9cc7d3c0a9775be":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a626ec4d1c92e59fe390724d6220081047b03ce7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["df724d84dab24a0cc54bec95a8680867adc7f171","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}