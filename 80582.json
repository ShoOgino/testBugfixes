{"path":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","commits":[{"id":"fb07ab105350b80ed9d63ca64b117084ed7391bc","date":1344824719,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  private TreeMap<String,Long> readFields(IndexInput in) throws IOException {\n    BytesRef scratch = new BytesRef(10);\n    TreeMap<String,Long> fields = new TreeMap<String,Long>();\n    \n    while (true) {\n      SimpleTextUtil.readLine(in, scratch);\n      if (scratch.equals(END)) {\n        return fields;\n      } else if (StringHelper.startsWith(scratch, FIELD)) {\n        String fieldName = new String(scratch.bytes, scratch.offset + FIELD.length, scratch.length - FIELD.length, \"UTF-8\");\n        fields.put(fieldName, in.getFilePointer());\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  private TreeMap<String,Long> readFields(IndexInput in) throws IOException {\n    BytesRef scratch = new BytesRef(10);\n    TreeMap<String,Long> fields = new TreeMap<String,Long>();\n    \n    while (true) {\n      SimpleTextUtil.readLine(in, scratch);\n      if (scratch.equals(END)) {\n        return fields;\n      } else if (StringHelper.startsWith(scratch, FIELD)) {\n        String fieldName = new String(scratch.bytes, scratch.offset + FIELD.length, scratch.length - FIELD.length, \"UTF-8\");\n        fields.put(fieldName, in.getFilePointer());\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  private TreeMap<String,Long> readFields(IndexInput in) throws IOException {\n    BytesRef scratch = new BytesRef(10);\n    TreeMap<String,Long> fields = new TreeMap<String,Long>();\n    \n    while (true) {\n      SimpleTextUtil.readLine(in, scratch);\n      if (scratch.equals(END)) {\n        return fields;\n      } else if (StringHelper.startsWith(scratch, FIELD)) {\n        String fieldName = new String(scratch.bytes, scratch.offset + FIELD.length, scratch.length - FIELD.length, \"UTF-8\");\n        fields.put(fieldName, in.getFilePointer());\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextFieldsReader#readFields(IndexInput).mjava","sourceNew":"  private TreeMap<String,Long> readFields(IndexInput in) throws IOException {\n    BytesRef scratch = new BytesRef(10);\n    TreeMap<String,Long> fields = new TreeMap<String,Long>();\n    \n    while (true) {\n      SimpleTextUtil.readLine(in, scratch);\n      if (scratch.equals(END)) {\n        return fields;\n      } else if (StringHelper.startsWith(scratch, FIELD)) {\n        String fieldName = new String(scratch.bytes, scratch.offset + FIELD.length, scratch.length - FIELD.length, \"UTF-8\");\n        fields.put(fieldName, in.getFilePointer());\n      }\n    }\n  }\n\n","sourceOld":"  private TreeMap<String,Long> readFields(IndexInput in) throws IOException {\n    BytesRef scratch = new BytesRef(10);\n    TreeMap<String,Long> fields = new TreeMap<String,Long>();\n    \n    while (true) {\n      SimpleTextUtil.readLine(in, scratch);\n      if (scratch.equals(END)) {\n        return fields;\n      } else if (StringHelper.startsWith(scratch, FIELD)) {\n        String fieldName = new String(scratch.bytes, scratch.offset + FIELD.length, scratch.length - FIELD.length, \"UTF-8\");\n        fields.put(fieldName, in.getFilePointer());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"c7869f64c874ebf7f317d22c00baf2b6857797a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fb07ab105350b80ed9d63ca64b117084ed7391bc"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["fb07ab105350b80ed9d63ca64b117084ed7391bc"],"fb07ab105350b80ed9d63ca64b117084ed7391bc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fb07ab105350b80ed9d63ca64b117084ed7391bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7869f64c874ebf7f317d22c00baf2b6857797a6","fb07ab105350b80ed9d63ca64b117084ed7391bc","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"fb07ab105350b80ed9d63ca64b117084ed7391bc":["c7869f64c874ebf7f317d22c00baf2b6857797a6","3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}