{"path":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","pathOld":"src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","sourceNew":"  public void testLazyLoadThreadSafety() throws Exception{\n    r = newRandom();\n    dir1 = new RAMDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    for (int i=0; i<100; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,100);\n    }\n  }\n\n","sourceOld":"  public void testLazyLoadThreadSafety() throws Exception{\n    r = newRandom();\n    dir1 = new RAMDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    for (int i=0; i<100; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2aafd88401639311b0404e67c94e829e123a0e45","date":1273477632,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","sourceNew":"  public void testLazyLoadThreadSafety() throws Exception{\n    r = newRandom();\n    dir1 = new RAMDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    for (int i=0; i<100*_TestUtil.getRandomMultiplier(); i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,100);\n    }\n  }\n\n","sourceOld":"  public void testLazyLoadThreadSafety() throws Exception{\n    r = newRandom();\n    dir1 = new RAMDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    for (int i=0; i<100; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0e45742e10e8e3b98e854babe6dbb07a4197b71","date":1280230285,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","sourceNew":"  public void testLazyLoadThreadSafety() throws Exception{\n    r = newRandom();\n    dir1 = new RAMDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 100 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,100);\n    }\n  }\n\n","sourceOld":"  public void testLazyLoadThreadSafety() throws Exception{\n    r = newRandom();\n    dir1 = new RAMDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    for (int i=0; i<100*_TestUtil.getRandomMultiplier(); i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3242a09f703274d3b9283f2064a1a33064b53a1b","date":1280263474,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","sourceNew":"  public void testLazyLoadThreadSafety() throws Exception{\n    r = newRandom();\n    dir1 = new RAMDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 100 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,100);\n    }\n  }\n\n","sourceOld":"  public void testLazyLoadThreadSafety() throws Exception{\n    r = newRandom();\n    dir1 = new RAMDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    for (int i=0; i<100*_TestUtil.getRandomMultiplier(); i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","sourceNew":"  public void testLazyLoadThreadSafety() throws Exception{\n    r = newRandom();\n    dir1 = new MockRAMDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 100 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,100);\n    }\n  }\n\n","sourceOld":"  public void testLazyLoadThreadSafety() throws Exception{\n    r = newRandom();\n    dir1 = new RAMDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 100 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","sourceNew":"  public void testLazyLoadThreadSafety() throws Exception{\n    r = newRandom();\n    dir1 = newDirectory(r);\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 100 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,100);\n      ir1.close();\n    }\n    dir1.close();\n  }\n\n","sourceOld":"  public void testLazyLoadThreadSafety() throws Exception{\n    r = newRandom();\n    dir1 = new MockRAMDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 100 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","sourceNew":"  public void testLazyLoadThreadSafety() throws Exception{\n    dir1 = newDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 100 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,100);\n      ir1.close();\n    }\n    dir1.close();\n  }\n\n","sourceOld":"  public void testLazyLoadThreadSafety() throws Exception{\n    r = newRandom();\n    dir1 = newDirectory(r);\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 100 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,100);\n      ir1.close();\n    }\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"63a3550ed15a7106c8349f6bb7df67ca50068de7","date":1287160441,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","sourceNew":"  public void testLazyLoadThreadSafety() throws Exception{\n    dir1 = newDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 100 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,10);\n      ir1.close();\n    }\n    dir1.close();\n  }\n\n","sourceOld":"  public void testLazyLoadThreadSafety() throws Exception{\n    dir1 = newDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 100 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,100);\n      ir1.close();\n    }\n    dir1.close();\n  }\n\n","bugFix":["1ab51a69d46b495c00b86cf406ed599035e94d70"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","sourceNew":"  public void testLazyLoadThreadSafety() throws Exception{\n    dir1 = newDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 100 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,10);\n      ir1.close();\n    }\n    dir1.close();\n  }\n\n","sourceOld":"  public void testLazyLoadThreadSafety() throws Exception{\n    dir1 = newDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 100 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,100);\n      ir1.close();\n    }\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","sourceNew":"  public void testLazyLoadThreadSafety() throws Exception{\n    dir1 = newDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 100 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,10);\n      ir1.close();\n    }\n    dir1.close();\n  }\n\n","sourceOld":"  public void testLazyLoadThreadSafety() throws Exception{\n    r = newRandom();\n    dir1 = new RAMDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 100 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"174bd836a1bc4454a9c6fea803cff8bc8f519c52","date":1294690097,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","sourceNew":"  public void testLazyLoadThreadSafety() throws Exception{\n    dir1 = newDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 10 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,10);\n      ir1.close();\n    }\n    dir1.close();\n  }\n\n","sourceOld":"  public void testLazyLoadThreadSafety() throws Exception{\n    dir1 = newDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 100 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,10);\n      ir1.close();\n    }\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","sourceNew":"  public void testLazyLoadThreadSafety() throws Exception{\n    dir1 = newDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 10 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,10);\n      ir1.close();\n    }\n    dir1.close();\n  }\n\n","sourceOld":"  public void testLazyLoadThreadSafety() throws Exception{\n    dir1 = newDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 100 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,10);\n      ir1.close();\n    }\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","sourceNew":"  public void testLazyLoadThreadSafety() throws Exception{\n    dir1 = newDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 10 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,10);\n      ir1.close();\n    }\n    dir1.close();\n  }\n\n","sourceOld":"  public void testLazyLoadThreadSafety() throws Exception{\n    dir1 = newDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 100 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,10);\n      ir1.close();\n    }\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f83af14a2a8131b14d7aee6274c740334e0363d3","date":1307579822,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","sourceNew":"  public void testLazyLoadThreadSafety() throws Exception{\n    dir1 = newDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = atLeast(10);\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,10);\n      ir1.close();\n    }\n    dir1.close();\n  }\n\n","sourceOld":"  public void testLazyLoadThreadSafety() throws Exception{\n    dir1 = newDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 10 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,10);\n      ir1.close();\n    }\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","sourceNew":"  public void testLazyLoadThreadSafety() throws Exception{\n    dir1 = newDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = atLeast(10);\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,10);\n      ir1.close();\n    }\n    dir1.close();\n  }\n\n","sourceOld":"  public void testLazyLoadThreadSafety() throws Exception{\n    dir1 = newDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 10 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,10);\n      ir1.close();\n    }\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","sourceNew":"  public void testLazyLoadThreadSafety() throws Exception{\n    dir1 = newDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = atLeast(10);\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,10);\n      ir1.close();\n    }\n    dir1.close();\n  }\n\n","sourceOld":"  public void testLazyLoadThreadSafety() throws Exception{\n    dir1 = newDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = 10 * RANDOM_MULTIPLIER;\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,10);\n      ir1.close();\n    }\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestThreadSafe#testLazyLoadThreadSafety().mjava","sourceNew":"  public void testLazyLoadThreadSafety() throws Exception{\n    dir1 = newDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = atLeast(10);\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,10);\n      ir1.close();\n    }\n    dir1.close();\n  }\n\n","sourceOld":"  public void testLazyLoadThreadSafety() throws Exception{\n    dir1 = newDirectory();\n    // test w/ field sizes bigger than the buffer of an index input\n    buildDir(dir1, 15, 5, 2000);\n\n    // do many small tests so the thread locals go away inbetween\n    int num = atLeast(10);\n    for (int i = 0; i < num; i++) {\n      ir1 = IndexReader.open(dir1, false);\n      doTest(10,10);\n      ir1.close();\n    }\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e45742e10e8e3b98e854babe6dbb07a4197b71":["2aafd88401639311b0404e67c94e829e123a0e45"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["174bd836a1bc4454a9c6fea803cff8bc8f519c52","f83af14a2a8131b14d7aee6274c740334e0363d3"],"f83af14a2a8131b14d7aee6274c740334e0363d3":["174bd836a1bc4454a9c6fea803cff8bc8f519c52"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["2aafd88401639311b0404e67c94e829e123a0e45","a0e45742e10e8e3b98e854babe6dbb07a4197b71"],"174bd836a1bc4454a9c6fea803cff8bc8f519c52":["63a3550ed15a7106c8349f6bb7df67ca50068de7"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"2aafd88401639311b0404e67c94e829e123a0e45":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["3242a09f703274d3b9283f2064a1a33064b53a1b","63a3550ed15a7106c8349f6bb7df67ca50068de7"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","174bd836a1bc4454a9c6fea803cff8bc8f519c52"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["a0e45742e10e8e3b98e854babe6dbb07a4197b71"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["29ef99d61cda9641b6250bf9567329a6e65f901d","f83af14a2a8131b14d7aee6274c740334e0363d3"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["f83af14a2a8131b14d7aee6274c740334e0363d3"],"63a3550ed15a7106c8349f6bb7df67ca50068de7":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["1f653cfcf159baeaafe5d01682a911e95bba4012","63a3550ed15a7106c8349f6bb7df67ca50068de7"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","174bd836a1bc4454a9c6fea803cff8bc8f519c52"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e45742e10e8e3b98e854babe6dbb07a4197b71":["3242a09f703274d3b9283f2064a1a33064b53a1b","1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"f83af14a2a8131b14d7aee6274c740334e0363d3":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"174bd836a1bc4454a9c6fea803cff8bc8f519c52":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","f83af14a2a8131b14d7aee6274c740334e0363d3","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"2aafd88401639311b0404e67c94e829e123a0e45":["a0e45742e10e8e3b98e854babe6dbb07a4197b71","3242a09f703274d3b9283f2064a1a33064b53a1b"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["63a3550ed15a7106c8349f6bb7df67ca50068de7","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"63a3550ed15a7106c8349f6bb7df67ca50068de7":["174bd836a1bc4454a9c6fea803cff8bc8f519c52","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["2aafd88401639311b0404e67c94e829e123a0e45"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}