{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getDocsWithField(FieldInfo).mjava","commits":[{"id":"8106bc60c7452250f84c65cdb43ab6b1d8eb1534","date":1401906364,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getDocsWithField(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Bits getDocsWithField(FieldInfo field) throws IOException {\n    switch(field.getDocValuesType()) {\n      case SORTED_SET:\n        return DocValues.docsWithValue(getSortedSet(field), maxDoc);\n      case SORTED:\n        return DocValues.docsWithValue(getSorted(field), maxDoc);\n      case BINARY:\n        BinaryEntry be = binaries.get(field.number);\n        return getMissingBits(be.missingOffset);\n      case NUMERIC:\n        NumericEntry ne = numerics.get(field.number);\n        return getMissingBits(ne.missingOffset);\n      default:\n        throw new AssertionError();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14ffaac9c4a4a2c750bf0cd956506802561e062","date":1402602036,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getDocsWithField(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getDocsWithField(FieldInfo).mjava","sourceNew":"  @Override\n  public Bits getDocsWithField(FieldInfo field) throws IOException {\n    switch(field.getDocValuesType()) {\n      case SORTED_SET:\n        return DocValues.docsWithValue(getSortedSet(field), maxDoc);\n      case SORTED_NUMERIC:\n        return DocValues.docsWithValue(getSortedNumeric(field), maxDoc);\n      case SORTED:\n        return DocValues.docsWithValue(getSorted(field), maxDoc);\n      case BINARY:\n        BinaryEntry be = binaries.get(field.number);\n        return getMissingBits(be.missingOffset);\n      case NUMERIC:\n        NumericEntry ne = numerics.get(field.number);\n        return getMissingBits(ne.missingOffset);\n      default:\n        throw new AssertionError();\n    }\n  }\n\n","sourceOld":"  @Override\n  public Bits getDocsWithField(FieldInfo field) throws IOException {\n    switch(field.getDocValuesType()) {\n      case SORTED_SET:\n        return DocValues.docsWithValue(getSortedSet(field), maxDoc);\n      case SORTED:\n        return DocValues.docsWithValue(getSorted(field), maxDoc);\n      case BINARY:\n        BinaryEntry be = binaries.get(field.number);\n        return getMissingBits(be.missingOffset);\n      case NUMERIC:\n        NumericEntry ne = numerics.get(field.number);\n        return getMissingBits(ne.missingOffset);\n      default:\n        throw new AssertionError();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6f080a2ab37c464dd98db173f6cbf10dc74f211","date":1402946779,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getDocsWithField(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getDocsWithField(FieldInfo).mjava","sourceNew":"  @Override\n  public Bits getDocsWithField(FieldInfo field) throws IOException {\n    switch(field.getDocValuesType()) {\n      case SORTED_SET:\n        return DocValues.docsWithValue(getSortedSet(field), maxDoc);\n      case SORTED_NUMERIC:\n        return DocValues.docsWithValue(getSortedNumeric(field), maxDoc);\n      case SORTED:\n        return DocValues.docsWithValue(getSorted(field), maxDoc);\n      case BINARY:\n        BinaryEntry be = binaries.get(field.number);\n        return getMissingBits(be.missingOffset);\n      case NUMERIC:\n        NumericEntry ne = numerics.get(field.number);\n        return getMissingBits(ne.missingOffset);\n      default:\n        throw new AssertionError();\n    }\n  }\n\n","sourceOld":"  @Override\n  public Bits getDocsWithField(FieldInfo field) throws IOException {\n    switch(field.getDocValuesType()) {\n      case SORTED_SET:\n        return DocValues.docsWithValue(getSortedSet(field), maxDoc);\n      case SORTED:\n        return DocValues.docsWithValue(getSorted(field), maxDoc);\n      case BINARY:\n        BinaryEntry be = binaries.get(field.number);\n        return getMissingBits(be.missingOffset);\n      case NUMERIC:\n        NumericEntry ne = numerics.get(field.number);\n        return getMissingBits(ne.missingOffset);\n      default:\n        throw new AssertionError();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getDocsWithField(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getDocsWithField(FieldInfo).mjava","sourceNew":"  @Override\n  public Bits getDocsWithField(FieldInfo field) throws IOException {\n    switch(field.getDocValuesType()) {\n      case SORTED_SET:\n        return DocValues.docsWithValue(getSortedSet(field), maxDoc);\n      case SORTED_NUMERIC:\n        return DocValues.docsWithValue(getSortedNumeric(field), maxDoc);\n      case SORTED:\n        return DocValues.docsWithValue(getSorted(field), maxDoc);\n      case BINARY:\n        BinaryEntry be = binaries.get(field.number);\n        return getMissingBits(be.missingOffset);\n      case NUMERIC:\n        NumericEntry ne = numerics.get(field.number);\n        return getMissingBits(ne.missingOffset);\n      default:\n        throw new AssertionError();\n    }\n  }\n\n","sourceOld":"  @Override\n  public Bits getDocsWithField(FieldInfo field) throws IOException {\n    switch(field.getDocValuesType()) {\n      case SORTED_SET:\n        return DocValues.docsWithValue(getSortedSet(field), maxDoc);\n      case SORTED_NUMERIC:\n        return DocValues.docsWithValue(getSortedNumeric(field), maxDoc);\n      case SORTED:\n        return DocValues.docsWithValue(getSorted(field), maxDoc);\n      case BINARY:\n        BinaryEntry be = binaries.get(field.number);\n        return getMissingBits(be.missingOffset);\n      case NUMERIC:\n        NumericEntry ne = numerics.get(field.number);\n        return getMissingBits(ne.missingOffset);\n      default:\n        throw new AssertionError();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getDocsWithField(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene49/Lucene49DocValuesProducer#getDocsWithField(FieldInfo).mjava","sourceNew":"  @Override\n  public Bits getDocsWithField(FieldInfo field) throws IOException {\n    switch(field.getDocValuesType()) {\n      case SORTED_SET:\n        return DocValues.docsWithValue(getSortedSet(field), maxDoc);\n      case SORTED_NUMERIC:\n        return DocValues.docsWithValue(getSortedNumeric(field), maxDoc);\n      case SORTED:\n        return DocValues.docsWithValue(getSorted(field), maxDoc);\n      case BINARY:\n        BinaryEntry be = binaries.get(field.number);\n        return getMissingBits(be.missingOffset);\n      case NUMERIC:\n        NumericEntry ne = numerics.get(field.number);\n        return getMissingBits(ne.missingOffset);\n      default:\n        throw new AssertionError();\n    }\n  }\n\n","sourceOld":"  @Override\n  public Bits getDocsWithField(FieldInfo field) throws IOException {\n    switch(field.getDocValuesType()) {\n      case SORTED_SET:\n        return DocValues.docsWithValue(getSortedSet(field), maxDoc);\n      case SORTED_NUMERIC:\n        return DocValues.docsWithValue(getSortedNumeric(field), maxDoc);\n      case SORTED:\n        return DocValues.docsWithValue(getSorted(field), maxDoc);\n      case BINARY:\n        BinaryEntry be = binaries.get(field.number);\n        return getMissingBits(be.missingOffset);\n      case NUMERIC:\n        NumericEntry ne = numerics.get(field.number);\n        return getMissingBits(ne.missingOffset);\n      default:\n        throw new AssertionError();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["d14ffaac9c4a4a2c750bf0cd956506802561e062"],"8106bc60c7452250f84c65cdb43ab6b1d8eb1534":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534","d14ffaac9c4a4a2c750bf0cd956506802561e062"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"d14ffaac9c4a4a2c750bf0cd956506802561e062":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["d14ffaac9c4a4a2c750bf0cd956506802561e062","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"8106bc60c7452250f84c65cdb43ab6b1d8eb1534":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","d14ffaac9c4a4a2c750bf0cd956506802561e062"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":[],"d14ffaac9c4a4a2c750bf0cd956506802561e062":["4cc45c615dbb82bf79d5f9550286098367874fbf","c6f080a2ab37c464dd98db173f6cbf10dc74f211","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}