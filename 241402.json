{"path":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.BytesIterator#next().mjava","commits":[{"id":"75a2078fb7a7fce496e15f7a7ea829a778def1a5","date":1359508846,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.BytesIterator#next().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public BytesRef next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      if (upto < size) {\n        int length = (int) lengthsIterator.next();\n        value.grow(length);\n        try {\n          bytesReader.readBytes(value.bytes, 0, length);\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n        value.length = length;\n      } else {\n        value.length = 0;\n      }\n      upto++;\n      return value;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c447e0427ce53ca53d708ce8b64eaf8cfd372591","date":1359552077,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.BytesIterator#next().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.BytesIterator#next().mjava","sourceNew":"    @Override\n    public BytesRef next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      if (upto < size) {\n        int length = (int) lengthsIterator.next();\n        pool.readBytes(value, byteOffset, length);\n        byteOffset += length;\n      } else {\n        // This is to handle last N documents not having\n        // this DV field in the end of the segment:\n        value.length = 0;\n      }\n      upto++;\n      return value;\n    }\n\n","sourceOld":"    @Override\n    public BytesRef next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      if (upto < size) {\n        int length = (int) lengthsIterator.next();\n        value.grow(length);\n        try {\n          bytesReader.readBytes(value.bytes, 0, length);\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n        value.length = length;\n      } else {\n        value.length = 0;\n      }\n      upto++;\n      return value;\n    }\n\n","bugFix":null,"bugIntro":["c024a3e8fec0a081cbf9539845db12f0dc84d029"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2b3cc2f5fa15326949acef967166394fb5b4a5e8","date":1359739263,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.BytesIterator#next().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.BytesIterator#next().mjava","sourceNew":"    @Override\n    public BytesRef next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      if (upto < size) {\n        int length = (int) lengthsIterator.next();\n        value.grow(length);\n        value.length = length;\n        pool.readBytes(byteOffset, value.bytes, value.offset, value.length);\n        byteOffset += length;\n      } else {\n        // This is to handle last N documents not having\n        // this DV field in the end of the segment:\n        value.length = 0;\n      }\n      upto++;\n      return value;\n    }\n\n","sourceOld":"    @Override\n    public BytesRef next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      if (upto < size) {\n        int length = (int) lengthsIterator.next();\n        pool.readBytes(value, byteOffset, length);\n        byteOffset += length;\n      } else {\n        // This is to handle last N documents not having\n        // this DV field in the end of the segment:\n        value.length = 0;\n      }\n      upto++;\n      return value;\n    }\n\n","bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","c024a3e8fec0a081cbf9539845db12f0dc84d029"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.BytesIterator#next().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public BytesRef next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      if (upto < size) {\n        int length = (int) lengthsIterator.next();\n        value.grow(length);\n        value.length = length;\n        pool.readBytes(byteOffset, value.bytes, value.offset, value.length);\n        byteOffset += length;\n      } else {\n        // This is to handle last N documents not having\n        // this DV field in the end of the segment:\n        value.length = 0;\n      }\n      upto++;\n      return value;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9faa42f41b6adb98daf009cf99a4ee239189e469","date":1376648738,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.BytesIterator#next().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.BytesIterator#next().mjava","sourceNew":"    @Override\n    public BytesRef next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      final BytesRef v;\n      if (upto < size) {\n        int length = (int) lengthsIterator.next();\n        value.grow(length);\n        value.length = length;\n        pool.readBytes(byteOffset, value.bytes, value.offset, value.length);\n        byteOffset += length;\n        if (docsWithField.get(upto)) {\n          v = value;\n        } else {\n          v = null;\n        }\n      } else {\n        v = null;\n      }\n      upto++;\n      return v;\n    }\n\n","sourceOld":"    @Override\n    public BytesRef next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      if (upto < size) {\n        int length = (int) lengthsIterator.next();\n        value.grow(length);\n        value.length = length;\n        pool.readBytes(byteOffset, value.bytes, value.offset, value.length);\n        byteOffset += length;\n      } else {\n        // This is to handle last N documents not having\n        // this DV field in the end of the segment:\n        value.length = 0;\n      }\n      upto++;\n      return value;\n    }\n\n","bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c024a3e8fec0a081cbf9539845db12f0dc84d029","date":1376654698,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.BytesIterator#next().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.BytesIterator#next().mjava","sourceNew":"    @Override\n    public BytesRef next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      if (upto < size) {\n        int length = (int) lengthsIterator.next();\n        value.grow(length);\n        value.length = length;\n        try {\n          bytesIterator.readBytes(value.bytes, value.offset, value.length);\n        } catch (IOException ioe) {\n          // Should never happen!\n          throw new RuntimeException(ioe);\n        }\n      } else {\n        // This is to handle last N documents not having\n        // this DV field in the end of the segment:\n        value.length = 0;\n      }\n      upto++;\n      return value;\n    }\n\n","sourceOld":"    @Override\n    public BytesRef next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      if (upto < size) {\n        int length = (int) lengthsIterator.next();\n        value.grow(length);\n        value.length = length;\n        pool.readBytes(byteOffset, value.bytes, value.offset, value.length);\n        byteOffset += length;\n      } else {\n        // This is to handle last N documents not having\n        // this DV field in the end of the segment:\n        value.length = 0;\n      }\n      upto++;\n      return value;\n    }\n\n","bugFix":["c447e0427ce53ca53d708ce8b64eaf8cfd372591","2b3cc2f5fa15326949acef967166394fb5b4a5e8"],"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2ceca04c06658aeb20e0a319ade784ad9a0576dd","date":1376662287,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.BytesIterator#next().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.BytesIterator#next().mjava","sourceNew":"    @Override\n    public BytesRef next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      final BytesRef v;\n      if (upto < size) {\n        int length = (int) lengthsIterator.next();\n        value.grow(length);\n        value.length = length;\n        try {\n          bytesIterator.readBytes(value.bytes, value.offset, value.length);\n        } catch (IOException ioe) {\n          // Should never happen!\n          throw new RuntimeException(ioe);\n        }\n        if (docsWithField.get(upto)) {\n          v = value;\n        } else {\n          v = null;\n        }\n      } else {\n        v = null;\n      }\n      upto++;\n      return v;\n    }\n\n","sourceOld":"    @Override\n    public BytesRef next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      final BytesRef v;\n      if (upto < size) {\n        int length = (int) lengthsIterator.next();\n        value.grow(length);\n        value.length = length;\n        pool.readBytes(byteOffset, value.bytes, value.offset, value.length);\n        byteOffset += length;\n        if (docsWithField.get(upto)) {\n          v = value;\n        } else {\n          v = null;\n        }\n      } else {\n        v = null;\n      }\n      upto++;\n      return v;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.BytesIterator#next().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.BytesIterator#next().mjava","sourceNew":"    @Override\n    public BytesRef next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      final BytesRef v;\n      if (upto < size) {\n        int length = (int) lengthsIterator.next();\n        value.grow(length);\n        value.length = length;\n        try {\n          bytesIterator.readBytes(value.bytes, value.offset, value.length);\n        } catch (IOException ioe) {\n          // Should never happen!\n          throw new RuntimeException(ioe);\n        }\n        if (docsWithField.get(upto)) {\n          v = value;\n        } else {\n          v = null;\n        }\n      } else {\n        v = null;\n      }\n      upto++;\n      return v;\n    }\n\n","sourceOld":"    @Override\n    public BytesRef next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      if (upto < size) {\n        int length = (int) lengthsIterator.next();\n        value.grow(length);\n        value.length = length;\n        try {\n          bytesIterator.readBytes(value.bytes, value.offset, value.length);\n        } catch (IOException ioe) {\n          // Should never happen!\n          throw new RuntimeException(ioe);\n        }\n      } else {\n        // This is to handle last N documents not having\n        // this DV field in the end of the segment:\n        value.length = 0;\n      }\n      upto++;\n      return value;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.BytesIterator#next().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.BytesIterator#next().mjava","sourceNew":"    @Override\n    public BytesRef next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      final BytesRef v;\n      if (upto < size) {\n        int length = (int) lengthsIterator.next();\n        value.grow(length);\n        value.length = length;\n        try {\n          bytesIterator.readBytes(value.bytes, value.offset, value.length);\n        } catch (IOException ioe) {\n          // Should never happen!\n          throw new RuntimeException(ioe);\n        }\n        if (docsWithField.get(upto)) {\n          v = value;\n        } else {\n          v = null;\n        }\n      } else {\n        v = null;\n      }\n      upto++;\n      return v;\n    }\n\n","sourceOld":"    @Override\n    public BytesRef next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      if (upto < size) {\n        int length = (int) lengthsIterator.next();\n        value.grow(length);\n        value.length = length;\n        pool.readBytes(byteOffset, value.bytes, value.offset, value.length);\n        byteOffset += length;\n      } else {\n        // This is to handle last N documents not having\n        // this DV field in the end of the segment:\n        value.length = 0;\n      }\n      upto++;\n      return value;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.BytesIterator#next().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.BytesIterator#next().mjava","sourceNew":"    @Override\n    public BytesRef next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      final BytesRef v;\n      if (upto < size) {\n        int length = (int) lengthsIterator.next();\n        value.grow(length);\n        value.setLength(length);\n        try {\n          bytesIterator.readBytes(value.bytes(), 0, value.length());\n        } catch (IOException ioe) {\n          // Should never happen!\n          throw new RuntimeException(ioe);\n        }\n        if (docsWithField.get(upto)) {\n          v = value.get();\n        } else {\n          v = null;\n        }\n      } else {\n        v = null;\n      }\n      upto++;\n      return v;\n    }\n\n","sourceOld":"    @Override\n    public BytesRef next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      final BytesRef v;\n      if (upto < size) {\n        int length = (int) lengthsIterator.next();\n        value.grow(length);\n        value.length = length;\n        try {\n          bytesIterator.readBytes(value.bytes, value.offset, value.length);\n        } catch (IOException ioe) {\n          // Should never happen!\n          throw new RuntimeException(ioe);\n        }\n        if (docsWithField.get(upto)) {\n          v = value;\n        } else {\n          v = null;\n        }\n      } else {\n        v = null;\n      }\n      upto++;\n      return v;\n    }\n\n","bugFix":["c024a3e8fec0a081cbf9539845db12f0dc84d029","9faa42f41b6adb98daf009cf99a4ee239189e469","2b3cc2f5fa15326949acef967166394fb5b4a5e8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.BytesIterator#next().mjava","sourceNew":null,"sourceOld":"    @Override\n    public BytesRef next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      final BytesRef v;\n      if (upto < size) {\n        int length = (int) lengthsIterator.next();\n        value.grow(length);\n        value.setLength(length);\n        try {\n          bytesIterator.readBytes(value.bytes(), 0, value.length());\n        } catch (IOException ioe) {\n          // Should never happen!\n          throw new RuntimeException(ioe);\n        }\n        if (docsWithField.get(upto)) {\n          v = value.get();\n        } else {\n          v = null;\n        }\n      } else {\n        v = null;\n      }\n      upto++;\n      return v;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.BytesIterator#next().mjava","sourceNew":null,"sourceOld":"    @Override\n    public BytesRef next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      final BytesRef v;\n      if (upto < size) {\n        int length = (int) lengthsIterator.next();\n        value.grow(length);\n        value.setLength(length);\n        try {\n          bytesIterator.readBytes(value.bytes(), 0, value.length());\n        } catch (IOException ioe) {\n          // Should never happen!\n          throw new RuntimeException(ioe);\n        }\n        if (docsWithField.get(upto)) {\n          v = value.get();\n        } else {\n          v = null;\n        }\n      } else {\n        v = null;\n      }\n      upto++;\n      return v;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/BinaryDocValuesWriter.BytesIterator#next().mjava","sourceNew":null,"sourceOld":"    @Override\n    public BytesRef next() {\n      if (!hasNext()) {\n        throw new NoSuchElementException();\n      }\n      final BytesRef v;\n      if (upto < size) {\n        int length = (int) lengthsIterator.next();\n        value.grow(length);\n        value.setLength(length);\n        try {\n          bytesIterator.readBytes(value.bytes(), 0, value.length());\n        } catch (IOException ioe) {\n          // Should never happen!\n          throw new RuntimeException(ioe);\n        }\n        if (docsWithField.get(upto)) {\n          v = value.get();\n        } else {\n          v = null;\n        }\n      } else {\n        v = null;\n      }\n      upto++;\n      return v;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2b3cc2f5fa15326949acef967166394fb5b4a5e8":["c447e0427ce53ca53d708ce8b64eaf8cfd372591"],"9faa42f41b6adb98daf009cf99a4ee239189e469":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["d4d69c535930b5cce125cff868d40f6373dc27d4","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["c024a3e8fec0a081cbf9539845db12f0dc84d029","2ceca04c06658aeb20e0a319ade784ad9a0576dd"],"2ceca04c06658aeb20e0a319ade784ad9a0576dd":["9faa42f41b6adb98daf009cf99a4ee239189e469","c024a3e8fec0a081cbf9539845db12f0dc84d029"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"c447e0427ce53ca53d708ce8b64eaf8cfd372591":["75a2078fb7a7fce496e15f7a7ea829a778def1a5"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2b3cc2f5fa15326949acef967166394fb5b4a5e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"c024a3e8fec0a081cbf9539845db12f0dc84d029":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"75a2078fb7a7fce496e15f7a7ea829a778def1a5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"2b3cc2f5fa15326949acef967166394fb5b4a5e8":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"9faa42f41b6adb98daf009cf99a4ee239189e469":["2ceca04c06658aeb20e0a319ade784ad9a0576dd"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"2ceca04c06658aeb20e0a319ade784ad9a0576dd":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"c447e0427ce53ca53d708ce8b64eaf8cfd372591":["2b3cc2f5fa15326949acef967166394fb5b4a5e8"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["9faa42f41b6adb98daf009cf99a4ee239189e469","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","c024a3e8fec0a081cbf9539845db12f0dc84d029"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","75a2078fb7a7fce496e15f7a7ea829a778def1a5"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"c024a3e8fec0a081cbf9539845db12f0dc84d029":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","2ceca04c06658aeb20e0a319ade784ad9a0576dd"],"75a2078fb7a7fce496e15f7a7ea829a778def1a5":["c447e0427ce53ca53d708ce8b64eaf8cfd372591"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}