{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/RegExp#toCaseInsensitiveString(int).mjava","commits":[{"id":"0785d1d3506a0f4d8fd4adc2efe29f0e1a9c2601","date":1594220892,"type":0,"author":"markharwood","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/RegExp#toCaseInsensitiveString(int).mjava","pathOld":"/dev/null","sourceNew":"  private Automaton toCaseInsensitiveString(int maxDeterminizedStates) {\n    List<Automaton> list = new ArrayList<>();\n    \n    Iterator<Integer> iter = s.codePoints().iterator();\n    while (iter.hasNext()) {\n      list.add(toCaseInsensitiveChar(iter.next(), maxDeterminizedStates));\n    }\n    Automaton a = Operations.concatenate(list);\n    a = MinimizationOperations.minimize(a, maxDeterminizedStates);\n    return a;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0785d1d3506a0f4d8fd4adc2efe29f0e1a9c2601":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0785d1d3506a0f4d8fd4adc2efe29f0e1a9c2601"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0785d1d3506a0f4d8fd4adc2efe29f0e1a9c2601"],"0785d1d3506a0f4d8fd4adc2efe29f0e1a9c2601":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}