{"path":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#addField(IndexableField,FieldInfo).mjava","commits":[{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#addField(IndexableField,FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#addField(Fieldable,FieldInfo).mjava","sourceNew":"  public void addField(IndexableField field, FieldInfo fieldInfo) throws IOException {\n    if (numStoredFields == storedFields.length) {\n      int newSize = ArrayUtil.oversize(numStoredFields + 1, RamUsageEstimator.NUM_BYTES_OBJECT_REF);\n      IndexableField[] newArray = new IndexableField[newSize];\n      System.arraycopy(storedFields, 0, newArray, 0, numStoredFields);\n      storedFields = newArray;\n    }\n\n    if (numStoredFields == fieldNumbers.length) {\n      fieldNumbers = ArrayUtil.grow(fieldNumbers);\n    }\n\n    storedFields[numStoredFields] = field;\n    fieldNumbers[numStoredFields] = fieldInfo.number;\n    numStoredFields++;\n\n    assert docState.testPoint(\"StoredFieldsWriterPerThread.processFields.writeField\");\n  }\n\n","sourceOld":"  public void addField(Fieldable field, FieldInfo fieldInfo) throws IOException {\n    if (numStoredFields == storedFields.length) {\n      int newSize = ArrayUtil.oversize(numStoredFields + 1, RamUsageEstimator.NUM_BYTES_OBJECT_REF);\n      Fieldable[] newArray = new Fieldable[newSize];\n      System.arraycopy(storedFields, 0, newArray, 0, numStoredFields);\n      storedFields = newArray;\n    }\n\n    if (numStoredFields == fieldNumbers.length) {\n      fieldNumbers = ArrayUtil.grow(fieldNumbers);\n    }\n\n    storedFields[numStoredFields] = field;\n    fieldNumbers[numStoredFields] = fieldInfo.number;\n    numStoredFields++;\n\n    assert docState.testPoint(\"StoredFieldsWriterPerThread.processFields.writeField\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/StoredFieldsConsumer#addField(IndexableField,FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#addField(IndexableField,FieldInfo).mjava","sourceNew":"  public void addField(IndexableField field, FieldInfo fieldInfo) throws IOException {\n    if (numStoredFields == storedFields.length) {\n      int newSize = ArrayUtil.oversize(numStoredFields + 1, RamUsageEstimator.NUM_BYTES_OBJECT_REF);\n      IndexableField[] newArray = new IndexableField[newSize];\n      System.arraycopy(storedFields, 0, newArray, 0, numStoredFields);\n      storedFields = newArray;\n    }\n\n    if (numStoredFields == fieldNumbers.length) {\n      fieldNumbers = ArrayUtil.grow(fieldNumbers);\n    }\n\n    storedFields[numStoredFields] = field;\n    fieldNumbers[numStoredFields] = fieldInfo.number;\n    numStoredFields++;\n\n    assert docState.testPoint(\"StoredFieldsWriterPerThread.processFields.writeField\");\n  }\n\n","sourceOld":"  public void addField(IndexableField field, FieldInfo fieldInfo) throws IOException {\n    if (numStoredFields == storedFields.length) {\n      int newSize = ArrayUtil.oversize(numStoredFields + 1, RamUsageEstimator.NUM_BYTES_OBJECT_REF);\n      IndexableField[] newArray = new IndexableField[newSize];\n      System.arraycopy(storedFields, 0, newArray, 0, numStoredFields);\n      storedFields = newArray;\n    }\n\n    if (numStoredFields == fieldNumbers.length) {\n      fieldNumbers = ArrayUtil.grow(fieldNumbers);\n    }\n\n    storedFields[numStoredFields] = field;\n    fieldNumbers[numStoredFields] = fieldInfo.number;\n    numStoredFields++;\n\n    assert docState.testPoint(\"StoredFieldsWriterPerThread.processFields.writeField\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"06584e6e98d592b34e1329b384182f368d2025e8":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06584e6e98d592b34e1329b384182f368d2025e8"]},"commit2Childs":{"06584e6e98d592b34e1329b384182f368d2025e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["06584e6e98d592b34e1329b384182f368d2025e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}