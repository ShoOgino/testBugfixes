{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonBoundsCase1().mjava","commits":[{"id":"40aa98241c87d86a0077beb8023713d93a0becfe","date":1459784560,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonBoundsCase1().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPolygonBoundsCase1() {\n    GeoPolygon c;\n    LatLonBounds b;\n    List<GeoPoint> points;\n    XYZBounds xyzb;\n    GeoPoint point1;\n    GeoPoint point2;\n    GeoArea area;\n    \n    // Build the polygon\n    points = new ArrayList<>();\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.7769776943105245, -2.157536559188766));\n    points.add(new GeoPoint(PlanetModel.WGS84, -0.9796549195552824, -0.25078026625235256));\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.17644522781457245, 2.4225312555674967));\n    points.add(new GeoPoint(PlanetModel.WGS84, -1.4459804612164617, -1.2970934639728127));\n    c = GeoPolygonFactory.makeGeoPolygon(PlanetModel.WGS84, points, 3);\n    // GeoCompositeMembershipShape: {[GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n    // [[lat=0.17644522781457245, lon=2.4225312555674967], \n    //  [lat=-1.4459804612164617, lon=-1.2970934639728127], \n    // [lat=0.7769776943105245, lon=-2.157536559188766]]}, \n    // GeoConcavePolygon: {planetmodel=PlanetModel.WGS84, points=\n    // [[lat=-0.9796549195552824, lon=-0.25078026625235256],\n    //  [lat=0.17644522781457245, lon=2.4225312555674967], \n    //  [lat=0.7769776943105245, lon=-2.157536559188766]]}]}\n    point1 = new GeoPoint(PlanetModel.WGS84, -1.2013743680763862, 0.48458963747230094);\n    point2 = new GeoPoint(0.3189285805649921, 0.16790264636909197, -0.9308557496413026);\n    \n    assertTrue(c.isWithin(point1));\n    assertTrue(c.isWithin(point2));\n    \n    // Now try bounds\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    area = GeoAreaFactory.makeGeoArea(PlanetModel.WGS84,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n      \n    assertTrue(area.isWithin(point1));\n    assertTrue(area.isWithin(point2));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09af2c9610ce53a4b25fd99344299b40318a4a1a","date":1459876565,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonBoundsCase1().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPolygonBoundsCase1() {\n    GeoPolygon c;\n    LatLonBounds b;\n    List<GeoPoint> points;\n    XYZBounds xyzb;\n    GeoPoint point1;\n    GeoPoint point2;\n    GeoArea area;\n    \n    // Build the polygon\n    points = new ArrayList<>();\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.7769776943105245, -2.157536559188766));\n    points.add(new GeoPoint(PlanetModel.WGS84, -0.9796549195552824, -0.25078026625235256));\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.17644522781457245, 2.4225312555674967));\n    points.add(new GeoPoint(PlanetModel.WGS84, -1.4459804612164617, -1.2970934639728127));\n    c = GeoPolygonFactory.makeGeoPolygon(PlanetModel.WGS84, points, 3);\n    // GeoCompositeMembershipShape: {[GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n    // [[lat=0.17644522781457245, lon=2.4225312555674967], \n    //  [lat=-1.4459804612164617, lon=-1.2970934639728127], \n    // [lat=0.7769776943105245, lon=-2.157536559188766]]}, \n    // GeoConcavePolygon: {planetmodel=PlanetModel.WGS84, points=\n    // [[lat=-0.9796549195552824, lon=-0.25078026625235256],\n    //  [lat=0.17644522781457245, lon=2.4225312555674967], \n    //  [lat=0.7769776943105245, lon=-2.157536559188766]]}]}\n    point1 = new GeoPoint(PlanetModel.WGS84, -1.2013743680763862, 0.48458963747230094);\n    point2 = new GeoPoint(0.3189285805649921, 0.16790264636909197, -0.9308557496413026);\n    \n    assertTrue(c.isWithin(point1));\n    assertTrue(c.isWithin(point2));\n    \n    // Now try bounds\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    area = GeoAreaFactory.makeGeoArea(PlanetModel.WGS84,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n      \n    assertTrue(area.isWithin(point1));\n    assertTrue(area.isWithin(point2));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"414425421ced68c7064f08c9da6a2c95399226d9","date":1460921822,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonBoundsCase1().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testPolygonBoundsCase1().mjava","sourceNew":"  @Test\n  public void testPolygonBoundsCase1() {\n    GeoPolygon c;\n    LatLonBounds b;\n    List<GeoPoint> points;\n    XYZBounds xyzb;\n    GeoPoint point1;\n    GeoPoint point2;\n    GeoArea area;\n    \n    // Build the polygon\n    points = new ArrayList<>();\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.7769776943105245, -2.157536559188766));\n    points.add(new GeoPoint(PlanetModel.WGS84, -0.9796549195552824, -0.25078026625235256));\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.17644522781457245, 2.4225312555674967));\n    points.add(new GeoPoint(PlanetModel.WGS84, -1.4459804612164617, -1.2970934639728127));\n    c = GeoPolygonFactory.makeGeoPolygon(PlanetModel.WGS84, points);\n    // GeoCompositeMembershipShape: {[GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n    // [[lat=0.17644522781457245, lon=2.4225312555674967], \n    //  [lat=-1.4459804612164617, lon=-1.2970934639728127], \n    // [lat=0.7769776943105245, lon=-2.157536559188766]]}, \n    // GeoConcavePolygon: {planetmodel=PlanetModel.WGS84, points=\n    // [[lat=-0.9796549195552824, lon=-0.25078026625235256],\n    //  [lat=0.17644522781457245, lon=2.4225312555674967], \n    //  [lat=0.7769776943105245, lon=-2.157536559188766]]}]}\n    point1 = new GeoPoint(PlanetModel.WGS84, -1.2013743680763862, 0.48458963747230094);\n    point2 = new GeoPoint(0.3189285805649921, 0.16790264636909197, -0.9308557496413026);\n    \n    assertTrue(c.isWithin(point1));\n    assertTrue(c.isWithin(point2));\n    \n    // Now try bounds\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    area = GeoAreaFactory.makeGeoArea(PlanetModel.WGS84,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n      \n    assertTrue(area.isWithin(point1));\n    assertTrue(area.isWithin(point2));\n  }\n\n","sourceOld":"  @Test\n  public void testPolygonBoundsCase1() {\n    GeoPolygon c;\n    LatLonBounds b;\n    List<GeoPoint> points;\n    XYZBounds xyzb;\n    GeoPoint point1;\n    GeoPoint point2;\n    GeoArea area;\n    \n    // Build the polygon\n    points = new ArrayList<>();\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.7769776943105245, -2.157536559188766));\n    points.add(new GeoPoint(PlanetModel.WGS84, -0.9796549195552824, -0.25078026625235256));\n    points.add(new GeoPoint(PlanetModel.WGS84, 0.17644522781457245, 2.4225312555674967));\n    points.add(new GeoPoint(PlanetModel.WGS84, -1.4459804612164617, -1.2970934639728127));\n    c = GeoPolygonFactory.makeGeoPolygon(PlanetModel.WGS84, points, 3);\n    // GeoCompositeMembershipShape: {[GeoConvexPolygon: {planetmodel=PlanetModel.WGS84, points=\n    // [[lat=0.17644522781457245, lon=2.4225312555674967], \n    //  [lat=-1.4459804612164617, lon=-1.2970934639728127], \n    // [lat=0.7769776943105245, lon=-2.157536559188766]]}, \n    // GeoConcavePolygon: {planetmodel=PlanetModel.WGS84, points=\n    // [[lat=-0.9796549195552824, lon=-0.25078026625235256],\n    //  [lat=0.17644522781457245, lon=2.4225312555674967], \n    //  [lat=0.7769776943105245, lon=-2.157536559188766]]}]}\n    point1 = new GeoPoint(PlanetModel.WGS84, -1.2013743680763862, 0.48458963747230094);\n    point2 = new GeoPoint(0.3189285805649921, 0.16790264636909197, -0.9308557496413026);\n    \n    assertTrue(c.isWithin(point1));\n    assertTrue(c.isWithin(point2));\n    \n    // Now try bounds\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    area = GeoAreaFactory.makeGeoArea(PlanetModel.WGS84,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n      \n    assertTrue(area.isWithin(point1));\n    assertTrue(area.isWithin(point2));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"09af2c9610ce53a4b25fd99344299b40318a4a1a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","40aa98241c87d86a0077beb8023713d93a0becfe"],"414425421ced68c7064f08c9da6a2c95399226d9":["40aa98241c87d86a0077beb8023713d93a0becfe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"40aa98241c87d86a0077beb8023713d93a0becfe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["414425421ced68c7064f08c9da6a2c95399226d9"]},"commit2Childs":{"09af2c9610ce53a4b25fd99344299b40318a4a1a":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09af2c9610ce53a4b25fd99344299b40318a4a1a","40aa98241c87d86a0077beb8023713d93a0becfe"],"414425421ced68c7064f08c9da6a2c95399226d9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"40aa98241c87d86a0077beb8023713d93a0becfe":["09af2c9610ce53a4b25fd99344299b40318a4a1a","414425421ced68c7064f08c9da6a2c95399226d9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09af2c9610ce53a4b25fd99344299b40318a4a1a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}