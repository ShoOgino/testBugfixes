{"path":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotWhiteBoxTest#doTestRefinementRequest().mjava","commits":[{"id":"4c18a95e9168a30be855f5d5e7d61a863186fdc5","date":1415142581,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotWhiteBoxTest#doTestRefinementRequest().mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * recreates a pivot refinement request to a shard in a distributed query\n   * confirming that the per-pivot stats are returned, but not the top level stats\n   * because they shouldn't be overcounted.\n   */\n  private void doTestRefinementRequest() throws Exception {\n    SolrParams params = params(\"facet.missing\", \"true\",\n                               \"facet\", \"true\", \n                               \"facet.limit\", \"4\", \n                               \"distrib\", \"false\", \n                               // \"wt\", \"javabin\",\n                               // \"version\", \"2\", \n                               \"rows\", \"0\", \n                               \"facet.sort\", \"index\",\n                               \"fpt0\", \"~krakow\",\n                               \"facet.pivot.mincount\", \"-1\", \n                               \"isShard\", \"true\", \n                               \"facet.pivot\", \"{!fpt=0 stats=st1}place_t,company_t\",\n                               \"stats\", \"false\", \n                               \"stats.field\", \"{!key=sk1 tag=st1,st2}price_ti\");\n    QueryResponse rsp = clients.get(0).query(new ModifiableSolrParams(params));\n\n    assertNull(\"pivot refine request should *NOT* include top level stats\", \n               rsp.getFieldStatsInfo());\n\n    List<PivotField> placePivots = rsp.getFacetPivot().get(\"place_t,company_t\");\n\n    assertEquals(\"asked to refine exactly one place\",\n                 1, placePivots.size());\n    assertFalse(\"pivot stats should not be empty in refinement request\",\n                placePivots.get(0).getFieldStatsInfo().isEmpty());\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4c18a95e9168a30be855f5d5e7d61a863186fdc5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4c18a95e9168a30be855f5d5e7d61a863186fdc5"]},"commit2Childs":{"4c18a95e9168a30be855f5d5e7d61a863186fdc5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4c18a95e9168a30be855f5d5e7d61a863186fdc5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}