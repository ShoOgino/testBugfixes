{"path":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringFieldWriter#write(int,LeafReader,Writer,int).mjava","commits":[{"id":"bf0d17d4afd2792a63ee45b11039e70a4e4bb4a9","date":1454264470,"type":1,"author":"jbernste","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringFieldWriter#write(int,LeafReader,Writer,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringFieldWriter#write(int,LeafReader,Writer).mjava","sourceNew":"    public boolean write(int docId, LeafReader reader, Writer out, int fieldIndex) throws IOException {\n      SortedDocValues vals = DocValues.getSorted(reader, this.field);\n      int ord = vals.getOrd(docId);\n      if(ord == -1) {\n        return false;\n      }\n\n      BytesRef ref = vals.lookupOrd(ord);\n      fieldType.indexedToReadable(ref, cref);\n      if(fieldIndex > 0) {\n        out.write(',');\n      }\n      out.write('\"');\n      out.write(this.field);\n      out.write('\"');\n      out.write(\":\");\n      out.write('\"');\n      writeStr(cref.toString(), out);\n      out.write('\"');\n      return true;\n    }\n\n","sourceOld":"    public void write(int docId, LeafReader reader, Writer out) throws IOException {\n      SortedDocValues vals = reader.getSortedDocValues(this.field);\n      BytesRef ref = vals.get(docId);\n      fieldType.indexedToReadable(ref, cref);\n      out.write('\"');\n      out.write(this.field);\n      out.write('\"');\n      out.write(\":\");\n      out.write('\"');\n      writeStr(cref.toString(), out);\n      out.write('\"');\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringFieldWriter#write(int,LeafReader,Writer,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringFieldWriter#write(int,LeafReader,Writer).mjava","sourceNew":"    public boolean write(int docId, LeafReader reader, Writer out, int fieldIndex) throws IOException {\n      SortedDocValues vals = DocValues.getSorted(reader, this.field);\n      int ord = vals.getOrd(docId);\n      if(ord == -1) {\n        return false;\n      }\n\n      BytesRef ref = vals.lookupOrd(ord);\n      fieldType.indexedToReadable(ref, cref);\n      if(fieldIndex > 0) {\n        out.write(',');\n      }\n      out.write('\"');\n      out.write(this.field);\n      out.write('\"');\n      out.write(\":\");\n      out.write('\"');\n      writeStr(cref.toString(), out);\n      out.write('\"');\n      return true;\n    }\n\n","sourceOld":"    public void write(int docId, LeafReader reader, Writer out) throws IOException {\n      SortedDocValues vals = reader.getSortedDocValues(this.field);\n      BytesRef ref = vals.get(docId);\n      fieldType.indexedToReadable(ref, cref);\n      out.write('\"');\n      out.write(this.field);\n      out.write('\"');\n      out.write(\":\");\n      out.write('\"');\n      writeStr(cref.toString(), out);\n      out.write('\"');\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringFieldWriter#write(int,LeafReader,Writer,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringFieldWriter#write(int,LeafReader,Writer,int).mjava","sourceNew":"    public boolean write(int docId, LeafReader reader, Writer out, int fieldIndex) throws IOException {\n      SortedDocValues vals = DocValues.getSorted(reader, this.field);\n      if (vals.advance(docId) != docId) {\n        return false;\n      }\n      int ord = vals.ordValue();\n\n      BytesRef ref = vals.lookupOrd(ord);\n      fieldType.indexedToReadable(ref, cref);\n      if(fieldIndex > 0) {\n        out.write(',');\n      }\n      out.write('\"');\n      out.write(this.field);\n      out.write('\"');\n      out.write(\":\");\n      out.write('\"');\n      writeStr(cref.toString(), out);\n      out.write('\"');\n      return true;\n    }\n\n","sourceOld":"    public boolean write(int docId, LeafReader reader, Writer out, int fieldIndex) throws IOException {\n      SortedDocValues vals = DocValues.getSorted(reader, this.field);\n      int ord = vals.getOrd(docId);\n      if(ord == -1) {\n        return false;\n      }\n\n      BytesRef ref = vals.lookupOrd(ord);\n      fieldType.indexedToReadable(ref, cref);\n      if(fieldIndex > 0) {\n        out.write(',');\n      }\n      out.write('\"');\n      out.write(this.field);\n      out.write('\"');\n      out.write(\":\");\n      out.write('\"');\n      writeStr(cref.toString(), out);\n      out.write('\"');\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringFieldWriter#write(int,LeafReader,Writer,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringFieldWriter#write(int,LeafReader,Writer,int).mjava","sourceNew":"    public boolean write(int docId, LeafReader reader, Writer out, int fieldIndex) throws IOException {\n      SortedDocValues vals = DocValues.getSorted(reader, this.field);\n      if (vals.advance(docId) != docId) {\n        return false;\n      }\n      int ord = vals.ordValue();\n\n      BytesRef ref = vals.lookupOrd(ord);\n      fieldType.indexedToReadable(ref, cref);\n      if(fieldIndex > 0) {\n        out.write(',');\n      }\n      out.write('\"');\n      out.write(this.field);\n      out.write('\"');\n      out.write(\":\");\n      out.write('\"');\n      writeStr(cref.toString(), out);\n      out.write('\"');\n      return true;\n    }\n\n","sourceOld":"    public boolean write(int docId, LeafReader reader, Writer out, int fieldIndex) throws IOException {\n      SortedDocValues vals = DocValues.getSorted(reader, this.field);\n      int ord = vals.getOrd(docId);\n      if(ord == -1) {\n        return false;\n      }\n\n      BytesRef ref = vals.lookupOrd(ord);\n      fieldType.indexedToReadable(ref, cref);\n      if(fieldIndex > 0) {\n        out.write(',');\n      }\n      out.write('\"');\n      out.write(this.field);\n      out.write('\"');\n      out.write(\":\");\n      out.write('\"');\n      writeStr(cref.toString(), out);\n      out.write('\"');\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringFieldWriter#write(int,LeafReader,Writer,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringFieldWriter#write(int,LeafReader,Writer,int).mjava","sourceNew":"    public boolean write(int docId, LeafReader reader, Writer out, int fieldIndex) throws IOException {\n      SortedDocValues vals = DocValues.getSorted(reader, this.field);\n      if (vals.advance(docId) != docId) {\n        return false;\n      }\n      int ord = vals.ordValue();\n\n      BytesRef ref = vals.lookupOrd(ord);\n      fieldType.indexedToReadable(ref, cref);\n      if(fieldIndex > 0) {\n        out.write(',');\n      }\n      out.write('\"');\n      out.write(this.field);\n      out.write('\"');\n      out.write(\":\");\n      out.write('\"');\n      writeStr(cref.toString(), out);\n      out.write('\"');\n      return true;\n    }\n\n","sourceOld":"    public boolean write(int docId, LeafReader reader, Writer out, int fieldIndex) throws IOException {\n      SortedDocValues vals = DocValues.getSorted(reader, this.field);\n      int ord = vals.getOrd(docId);\n      if(ord == -1) {\n        return false;\n      }\n\n      BytesRef ref = vals.lookupOrd(ord);\n      fieldType.indexedToReadable(ref, cref);\n      if(fieldIndex > 0) {\n        out.write(',');\n      }\n      out.write('\"');\n      out.write(this.field);\n      out.write('\"');\n      out.write(\":\");\n      out.write('\"');\n      writeStr(cref.toString(), out);\n      out.write('\"');\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"50f05d6b69cfaabd51b5d26cba4e3122f51fff83","date":1478603228,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SortingResponseWriter[ExportWriter].StringFieldWriter#write(int,LeafReader,Writer,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringFieldWriter#write(int,LeafReader,Writer,int).mjava","sourceNew":"    public boolean write(int docId, LeafReader reader, Writer out, int fieldIndex) throws IOException {\n      SortedDocValues vals = DocValues.getSorted(reader, this.field);\n      if (vals.advance(docId) != docId) {\n        return false;\n      }\n      int ord = vals.ordValue();\n\n      BytesRef ref = vals.lookupOrd(ord);\n      fieldType.indexedToReadable(ref, cref);\n      if(fieldIndex > 0) {\n        out.write(',');\n      }\n      out.write('\"');\n      out.write(this.field);\n      out.write('\"');\n      out.write(\":\");\n      out.write('\"');\n      writeStr(cref.toString(), out);\n      out.write('\"');\n      return true;\n    }\n\n","sourceOld":"    public boolean write(int docId, LeafReader reader, Writer out, int fieldIndex) throws IOException {\n      SortedDocValues vals = DocValues.getSorted(reader, this.field);\n      if (vals.advance(docId) != docId) {\n        return false;\n      }\n      int ord = vals.ordValue();\n\n      BytesRef ref = vals.lookupOrd(ord);\n      fieldType.indexedToReadable(ref, cref);\n      if(fieldIndex > 0) {\n        out.write(',');\n      }\n      out.write('\"');\n      out.write(this.field);\n      out.write('\"');\n      out.write(\":\");\n      out.write('\"');\n      writeStr(cref.toString(), out);\n      out.write('\"');\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.StringFieldWriter#write(int,LeafReader,Writer,int).mjava","sourceNew":null,"sourceOld":"    public boolean write(int docId, LeafReader reader, Writer out, int fieldIndex) throws IOException {\n      SortedDocValues vals = DocValues.getSorted(reader, this.field);\n      if (vals.advance(docId) != docId) {\n        return false;\n      }\n      int ord = vals.ordValue();\n\n      BytesRef ref = vals.lookupOrd(ord);\n      fieldType.indexedToReadable(ref, cref);\n      if(fieldIndex > 0) {\n        out.write(',');\n      }\n      out.write('\"');\n      out.write(this.field);\n      out.write('\"');\n      out.write(\":\");\n      out.write('\"');\n      writeStr(cref.toString(), out);\n      out.write('\"');\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"50f05d6b69cfaabd51b5d26cba4e3122f51fff83":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["bf0d17d4afd2792a63ee45b11039e70a4e4bb4a9","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["bf0d17d4afd2792a63ee45b11039e70a4e4bb4a9"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bf0d17d4afd2792a63ee45b11039e70a4e4bb4a9"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","50f05d6b69cfaabd51b5d26cba4e3122f51fff83"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["bf0d17d4afd2792a63ee45b11039e70a4e4bb4a9","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["50f05d6b69cfaabd51b5d26cba4e3122f51fff83"],"bf0d17d4afd2792a63ee45b11039e70a4e4bb4a9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"50f05d6b69cfaabd51b5d26cba4e3122f51fff83":["199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["50f05d6b69cfaabd51b5d26cba4e3122f51fff83","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","bf0d17d4afd2792a63ee45b11039e70a4e4bb4a9"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["199dfa410f1fdbfd3294106b04096cce5ed34b21"],"bf0d17d4afd2792a63ee45b11039e70a4e4bb4a9":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","1e6acbaae7af722f17204ceccf0f7db5753eccf3","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}