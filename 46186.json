{"path":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#CompoundFileDirectory(Directory,String,int).mjava","commits":[{"id":"0aab6e810b4b0d3743d6a048be0602801f4b3920","date":1308671625,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#CompoundFileDirectory(Directory,String,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a new CompoundFileDirectory.\n   * <p>\n   * NOTE: subclasses must call {@link #initForRead(Map)} before the directory can be used.\n   */\n  public CompoundFileDirectory(Directory directory, String fileName, int readBufferSize) throws IOException {\n    assert !(directory instanceof CompoundFileDirectory) : \"compound file inside of compound file: \" + fileName;\n    this.directory = directory;\n    this.fileName = fileName;\n    this.readBufferSize = readBufferSize;\n    this.isOpen = false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#CompoundFileDirectory(Directory,String,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a new CompoundFileDirectory.\n   * <p>\n   * NOTE: subclasses must call {@link #initForRead(Map)} before the directory can be used.\n   */\n  public CompoundFileDirectory(Directory directory, String fileName, int readBufferSize) throws IOException {\n    assert !(directory instanceof CompoundFileDirectory) : \"compound file inside of compound file: \" + fileName;\n    this.directory = directory;\n    this.fileName = fileName;\n    this.readBufferSize = readBufferSize;\n    this.isOpen = false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc0b8069918917b33f361011899a1af0cdd2d462","date":1310039336,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#CompoundFileDirectory(Directory,String,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#CompoundFileDirectory(Directory,String,int).mjava","sourceNew":"  /**\n   * Create a new CompoundFileDirectory.\n   * <p>\n   * NOTE: subclasses must call {@link #initForRead(Map)} before the directory can be used.\n   */\n  public CompoundFileDirectory(Directory directory, String fileName, int readBufferSize) throws IOException {\n\n    this.directory = directory;\n    this.fileName = fileName;\n    this.readBufferSize = readBufferSize;\n    this.isOpen = false;\n  }\n\n","sourceOld":"  /**\n   * Create a new CompoundFileDirectory.\n   * <p>\n   * NOTE: subclasses must call {@link #initForRead(Map)} before the directory can be used.\n   */\n  public CompoundFileDirectory(Directory directory, String fileName, int readBufferSize) throws IOException {\n    assert !(directory instanceof CompoundFileDirectory) : \"compound file inside of compound file: \" + fileName;\n    this.directory = directory;\n    this.fileName = fileName;\n    this.readBufferSize = readBufferSize;\n    this.isOpen = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#CompoundFileDirectory(Directory,String,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#CompoundFileDirectory(Directory,String,int).mjava","sourceNew":"  /**\n   * Create a new CompoundFileDirectory.\n   * <p>\n   * NOTE: subclasses must call {@link #initForRead(Map)} before the directory can be used.\n   */\n  public CompoundFileDirectory(Directory directory, String fileName, int readBufferSize) throws IOException {\n\n    this.directory = directory;\n    this.fileName = fileName;\n    this.readBufferSize = readBufferSize;\n    this.isOpen = false;\n  }\n\n","sourceOld":"  /**\n   * Create a new CompoundFileDirectory.\n   * <p>\n   * NOTE: subclasses must call {@link #initForRead(Map)} before the directory can be used.\n   */\n  public CompoundFileDirectory(Directory directory, String fileName, int readBufferSize) throws IOException {\n    assert !(directory instanceof CompoundFileDirectory) : \"compound file inside of compound file: \" + fileName;\n    this.directory = directory;\n    this.fileName = fileName;\n    this.readBufferSize = readBufferSize;\n    this.isOpen = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#CompoundFileDirectory(Directory,String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#CompoundFileDirectory(Directory,String,int).mjava","sourceNew":"  /**\n   * Create a new CompoundFileDirectory.\n   * <p>\n   * NOTE: subclasses must call {@link #initForRead(Map)} before the directory can be used.\n   */\n  public CompoundFileDirectory(Directory directory, String fileName, IOContext context) throws IOException {\n\n    this.directory = directory;\n    this.fileName = fileName;\n    this.readBufferSize = BufferedIndexInput.bufferSize(context);\n    this.isOpen = false;\n  }\n\n","sourceOld":"  /**\n   * Create a new CompoundFileDirectory.\n   * <p>\n   * NOTE: subclasses must call {@link #initForRead(Map)} before the directory can be used.\n   */\n  public CompoundFileDirectory(Directory directory, String fileName, int readBufferSize) throws IOException {\n\n    this.directory = directory;\n    this.fileName = fileName;\n    this.readBufferSize = readBufferSize;\n    this.isOpen = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#CompoundFileDirectory(Directory,String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileDirectory#CompoundFileDirectory(Directory,String,int).mjava","sourceNew":"  /**\n   * Create a new CompoundFileDirectory.\n   * <p>\n   * NOTE: subclasses must call {@link #initForRead(Map)} before the directory can be used.\n   */\n  public CompoundFileDirectory(Directory directory, String fileName, IOContext context) throws IOException {\n\n    this.directory = directory;\n    this.fileName = fileName;\n    this.readBufferSize = BufferedIndexInput.bufferSize(context);\n    this.isOpen = false;\n  }\n\n","sourceOld":"  /**\n   * Create a new CompoundFileDirectory.\n   * <p>\n   * NOTE: subclasses must call {@link #initForRead(Map)} before the directory can be used.\n   */\n  public CompoundFileDirectory(Directory directory, String fileName, int readBufferSize) throws IOException {\n\n    this.directory = directory;\n    this.fileName = fileName;\n    this.readBufferSize = readBufferSize;\n    this.isOpen = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f0b9507caf22f292ac0e5e59f62db4275adf4511":["2553b00f699380c64959ccb27991289aae87be2e","bc0b8069918917b33f361011899a1af0cdd2d462"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bc0b8069918917b33f361011899a1af0cdd2d462":["0aab6e810b4b0d3743d6a048be0602801f4b3920"],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["f0b9507caf22f292ac0e5e59f62db4275adf4511","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["bc0b8069918917b33f361011899a1af0cdd2d462","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2553b00f699380c64959ccb27991289aae87be2e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0aab6e810b4b0d3743d6a048be0602801f4b3920"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ddc4c914be86e34b54f70023f45a60fa7f04e929"]},"commit2Childs":{"f0b9507caf22f292ac0e5e59f62db4275adf4511":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0aab6e810b4b0d3743d6a048be0602801f4b3920","ddc4c914be86e34b54f70023f45a60fa7f04e929","2553b00f699380c64959ccb27991289aae87be2e"],"bc0b8069918917b33f361011899a1af0cdd2d462":["f0b9507caf22f292ac0e5e59f62db4275adf4511","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["bc0b8069918917b33f361011899a1af0cdd2d462","2553b00f699380c64959ccb27991289aae87be2e"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2553b00f699380c64959ccb27991289aae87be2e":["f0b9507caf22f292ac0e5e59f62db4275adf4511"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}