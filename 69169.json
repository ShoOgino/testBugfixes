{"path":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String,String,String).mjava","commits":[{"id":"7116474e2e390259937401cf928323e0cbc75e60","date":1372780249,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,CoreContainer.Initializer).mjava","sourceNew":"  /**\n   * @param coreName to initialize\n   * @param dataDir path for index data, will not be cleaned up\n   * @param solrConfig solrconfig resource name\n   * @param indexSchema schema resource name\n   */\n  public TestHarness(String coreName, String dataDir, String solrConfig, String indexSchema) {\n    try {\n      if (coreName == null)\n        coreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n      this.coreName = coreName;\n\n      SolrResourceLoader loader = new SolrResourceLoader(SolrResourceLoader.locateSolrHome());\n      ConfigSolr config = getTestHarnessConfig(coreName, dataDir, solrConfig, indexSchema);\n      container = new CoreContainer(loader, config);\n      container.load();\n\n      updater = new UpdateRequestHandler();\n      updater.init( null );\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  public TestHarness(String coreName, CoreContainer.Initializer init) {\n    try {\n\n      container = init.initialize();\n      if (coreName == null)\n        coreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n\n      this.coreName = coreName;\n\n      updater = new UpdateRequestHandler();\n      updater.init( null );\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @param coreName to initialize\n   * @param dataDir path for index data, will not be cleaned up\n   * @param solrConfig solrconfig resource name\n   * @param indexSchema schema resource name\n   */\n  public TestHarness(String coreName, String dataDir, String solrConfig, String indexSchema) {\n    try {\n      if (coreName == null)\n        coreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n      this.coreName = coreName;\n\n      SolrResourceLoader loader = new SolrResourceLoader(SolrResourceLoader.locateSolrHome());\n      ConfigSolr config = getTestHarnessConfig(coreName, dataDir, solrConfig, indexSchema);\n      container = new CoreContainer(loader, config);\n      container.load();\n\n      updater = new UpdateRequestHandler();\n      updater.init( null );\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92a4da96826f502cf1a56a096929b37ce73e523a","date":1374584011,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String,String,String).mjava","sourceNew":"  /**\n   * @param coreName to initialize\n   * @param dataDir path for index data, will not be cleaned up\n   * @param solrConfig solrconfig resource name\n   * @param indexSchema schema resource name\n   */\n  public TestHarness(String coreName, String dataDir, String solrConfig, String indexSchema) {\n    try {\n      if (coreName == null)\n        coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n      this.coreName = coreName;\n\n      SolrResourceLoader loader = new SolrResourceLoader(SolrResourceLoader.locateSolrHome());\n      ConfigSolr config = getTestHarnessConfig(coreName, dataDir, solrConfig, indexSchema);\n      container = new CoreContainer(loader, config);\n      container.load();\n\n      updater = new UpdateRequestHandler();\n      updater.init( null );\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /**\n   * @param coreName to initialize\n   * @param dataDir path for index data, will not be cleaned up\n   * @param solrConfig solrconfig resource name\n   * @param indexSchema schema resource name\n   */\n  public TestHarness(String coreName, String dataDir, String solrConfig, String indexSchema) {\n    try {\n      if (coreName == null)\n        coreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n      this.coreName = coreName;\n\n      SolrResourceLoader loader = new SolrResourceLoader(SolrResourceLoader.locateSolrHome());\n      ConfigSolr config = getTestHarnessConfig(coreName, dataDir, solrConfig, indexSchema);\n      container = new CoreContainer(loader, config);\n      container.load();\n\n      updater = new UpdateRequestHandler();\n      updater.init( null );\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String,String,String).mjava","sourceNew":"  /**\n   * @param coreName to initialize\n   * @param dataDir path for index data, will not be cleaned up\n   * @param solrConfig solrconfig resource name\n   * @param indexSchema schema resource name\n   */\n  public TestHarness(String coreName, String dataDir, String solrConfig, String indexSchema) {\n    try {\n      if (coreName == null)\n        coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n      this.coreName = coreName;\n\n      SolrResourceLoader loader = new SolrResourceLoader(SolrResourceLoader.locateSolrHome());\n      ConfigSolr config = getTestHarnessConfig(coreName, dataDir, solrConfig, indexSchema);\n      container = new CoreContainer(loader, config);\n      container.load();\n\n      updater = new UpdateRequestHandler();\n      updater.init( null );\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /**\n   * @param coreName to initialize\n   * @param dataDir path for index data, will not be cleaned up\n   * @param solrConfig solrconfig resource name\n   * @param indexSchema schema resource name\n   */\n  public TestHarness(String coreName, String dataDir, String solrConfig, String indexSchema) {\n    try {\n      if (coreName == null)\n        coreName = CoreContainer.DEFAULT_DEFAULT_CORE_NAME;\n      this.coreName = coreName;\n\n      SolrResourceLoader loader = new SolrResourceLoader(SolrResourceLoader.locateSolrHome());\n      ConfigSolr config = getTestHarnessConfig(coreName, dataDir, solrConfig, indexSchema);\n      container = new CoreContainer(loader, config);\n      container.load();\n\n      updater = new UpdateRequestHandler();\n      updater.init( null );\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77993852b2d2185c378b115f8842c0adaeb8f709","date":1392036304,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String,String,String).mjava","sourceNew":"  /**\n   * @param coreName to initialize\n   * @param dataDir path for index data, will not be cleaned up\n   * @param solrConfig solrconfig resource name\n   * @param indexSchema schema resource name\n   */\n  public TestHarness(String coreName, String dataDir, String solrConfig, String indexSchema) {\n    try {\n      if (coreName == null)\n        coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n      this.coreName = coreName;\n\n      SolrResourceLoader loader = new SolrResourceLoader(SolrResourceLoader.locateSolrHome());\n      ConfigSolr config = getTestHarnessConfig(loader, coreName, dataDir, solrConfig, indexSchema);\n      container = new CoreContainer(loader, config);\n      container.load();\n\n      updater = new UpdateRequestHandler();\n      updater.init( null );\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /**\n   * @param coreName to initialize\n   * @param dataDir path for index data, will not be cleaned up\n   * @param solrConfig solrconfig resource name\n   * @param indexSchema schema resource name\n   */\n  public TestHarness(String coreName, String dataDir, String solrConfig, String indexSchema) {\n    try {\n      if (coreName == null)\n        coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n      this.coreName = coreName;\n\n      SolrResourceLoader loader = new SolrResourceLoader(SolrResourceLoader.locateSolrHome());\n      ConfigSolr config = getTestHarnessConfig(coreName, dataDir, solrConfig, indexSchema);\n      container = new CoreContainer(loader, config);\n      container.load();\n\n      updater = new UpdateRequestHandler();\n      updater.init( null );\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":["7116474e2e390259937401cf928323e0cbc75e60"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String,String,String).mjava","sourceNew":"  /**\n   * @param coreName to initialize\n   * @param dataDir path for index data, will not be cleaned up\n   * @param solrConfig solrconfig resource name\n   * @param indexSchema schema resource name\n   */\n  public TestHarness(String coreName, String dataDir, String solrConfig, String indexSchema) {\n    this(new TestConfigSolr(new SolrResourceLoader(SolrResourceLoader.locateSolrHome()),\n                                                    coreName, dataDir, solrConfig, indexSchema));\n    this.coreName = (coreName == null) ? SolrTestCaseJ4.DEFAULT_TEST_CORENAME : coreName;\n  }\n\n","sourceOld":"  /**\n   * @param coreName to initialize\n   * @param dataDir path for index data, will not be cleaned up\n   * @param solrConfig solrconfig resource name\n   * @param indexSchema schema resource name\n   */\n  public TestHarness(String coreName, String dataDir, String solrConfig, String indexSchema) {\n    try {\n      if (coreName == null)\n        coreName = ConfigSolrXmlOld.DEFAULT_DEFAULT_CORE_NAME;\n      this.coreName = coreName;\n\n      SolrResourceLoader loader = new SolrResourceLoader(SolrResourceLoader.locateSolrHome());\n      ConfigSolr config = getTestHarnessConfig(loader, coreName, dataDir, solrConfig, indexSchema);\n      container = new CoreContainer(loader, config);\n      container.load();\n\n      updater = new UpdateRequestHandler();\n      updater.init( null );\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e15199583d3635cb940942caed05132dd6c4c7c6","date":1424875551,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String,String,String).mjava","sourceNew":"  /**\n   * @param coreName to initialize\n   * @param dataDir path for index data, will not be cleaned up\n   * @param solrConfig solrconfig resource name\n   * @param indexSchema schema resource name\n   */\n  public TestHarness(String coreName, String dataDir, String solrConfig, String indexSchema) {\n    this(buildTestNodeConfig(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())),\n        new TestCoresLocator(coreName, dataDir, solrConfig, indexSchema));\n    this.coreName = (coreName == null) ? SolrTestCaseJ4.DEFAULT_TEST_CORENAME : coreName;\n  }\n\n","sourceOld":"  /**\n   * @param coreName to initialize\n   * @param dataDir path for index data, will not be cleaned up\n   * @param solrConfig solrconfig resource name\n   * @param indexSchema schema resource name\n   */\n  public TestHarness(String coreName, String dataDir, String solrConfig, String indexSchema) {\n    this(new TestConfigSolr(new SolrResourceLoader(SolrResourceLoader.locateSolrHome()),\n                                                    coreName, dataDir, solrConfig, indexSchema));\n    this.coreName = (coreName == null) ? SolrTestCaseJ4.DEFAULT_TEST_CORENAME : coreName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String,String,String).mjava","sourceNew":"  /**\n   * @param coreName to initialize\n   * @param dataDir path for index data, will not be cleaned up\n   * @param solrConfig solrconfig resource name\n   * @param indexSchema schema resource name\n   */\n  public TestHarness(String coreName, String dataDir, String solrConfig, String indexSchema) {\n    this(buildTestNodeConfig(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())),\n        new TestCoresLocator(coreName, dataDir, solrConfig, indexSchema));\n    this.coreName = (coreName == null) ? SolrTestCaseJ4.DEFAULT_TEST_CORENAME : coreName;\n  }\n\n","sourceOld":"  /**\n   * @param coreName to initialize\n   * @param dataDir path for index data, will not be cleaned up\n   * @param solrConfig solrconfig resource name\n   * @param indexSchema schema resource name\n   */\n  public TestHarness(String coreName, String dataDir, String solrConfig, String indexSchema) {\n    this(new TestConfigSolr(new SolrResourceLoader(SolrResourceLoader.locateSolrHome()),\n                                                    coreName, dataDir, solrConfig, indexSchema));\n    this.coreName = (coreName == null) ? SolrTestCaseJ4.DEFAULT_TEST_CORENAME : coreName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String,String,String).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#TestHarness(String,String,String,String).mjava","sourceNew":"  /**\n   * @param coreName to initialize\n   * @param dataDir path for index data, will not be cleaned up\n   * @param solrConfig solrconfig resource name\n   * @param indexSchema schema resource name\n   */\n  public TestHarness(String coreName, String dataDir, String solrConfig, String indexSchema) {\n    this(buildTestNodeConfig(SolrPaths.locateSolrHome()),\n        new TestCoresLocator(coreName, dataDir, solrConfig, indexSchema));\n    this.coreName = (coreName == null) ? SolrTestCaseJ4.DEFAULT_TEST_CORENAME : coreName;\n  }\n\n","sourceOld":"  /**\n   * @param coreName to initialize\n   * @param dataDir path for index data, will not be cleaned up\n   * @param solrConfig solrconfig resource name\n   * @param indexSchema schema resource name\n   */\n  public TestHarness(String coreName, String dataDir, String solrConfig, String indexSchema) {\n    this(buildTestNodeConfig(new SolrResourceLoader(SolrResourceLoader.locateSolrHome())),\n        new TestCoresLocator(coreName, dataDir, solrConfig, indexSchema));\n    this.coreName = (coreName == null) ? SolrTestCaseJ4.DEFAULT_TEST_CORENAME : coreName;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39","e15199583d3635cb940942caed05132dd6c4c7c6"],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["e15199583d3635cb940942caed05132dd6c4c7c6"],"7116474e2e390259937401cf928323e0cbc75e60":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["37a0f60745e53927c4c876cfe5b5a58170f0646c","92a4da96826f502cf1a56a096929b37ce73e523a"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7116474e2e390259937401cf928323e0cbc75e60"],"92a4da96826f502cf1a56a096929b37ce73e523a":["7116474e2e390259937401cf928323e0cbc75e60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["77993852b2d2185c378b115f8842c0adaeb8f709"],"77993852b2d2185c378b115f8842c0adaeb8f709":["92a4da96826f502cf1a56a096929b37ce73e523a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"e15199583d3635cb940942caed05132dd6c4c7c6":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7116474e2e390259937401cf928323e0cbc75e60":["37a0f60745e53927c4c876cfe5b5a58170f0646c","92a4da96826f502cf1a56a096929b37ce73e523a"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7116474e2e390259937401cf928323e0cbc75e60","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"92a4da96826f502cf1a56a096929b37ce73e523a":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","77993852b2d2185c378b115f8842c0adaeb8f709"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","e15199583d3635cb940942caed05132dd6c4c7c6"],"77993852b2d2185c378b115f8842c0adaeb8f709":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"e15199583d3635cb940942caed05132dd6c4c7c6":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}