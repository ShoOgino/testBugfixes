{"path":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getTopLevelFolders(Store).mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getTopLevelFolders(Store).mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getTopLevelFolders(Store).mjava","sourceNew":"    private void getTopLevelFolders(Store mailBox) {\n      if (folderNames != null)\n        topLevelFolders = Arrays.asList(folderNames.split(\",\"));\n      for (int i = 0; topLevelFolders != null && i < topLevelFolders.size(); i++) {\n        try {\n          folders.add(mailbox.getFolder(topLevelFolders.get(i)));\n        } catch (MessagingException e) {\n          // skip bad ones unless its the last one and still no good folder\n          if (folders.size() == 0 && i == topLevelFolders.size() - 1)\n            throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n                    \"Folder retreival failed\");\n        }\n      }\n      if (topLevelFolders == null || topLevelFolders.size() == 0) {\n        try {\n          folders.add(mailBox.getDefaultFolder());\n        } catch (MessagingException e) {\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n                  \"Folder retreival failed\");\n        }\n      }\n    }\n\n","sourceOld":"    private void getTopLevelFolders(Store mailBox) {\n      if (folderNames != null)\n        topLevelFolders = Arrays.asList(folderNames.split(\",\"));\n      for (int i = 0; topLevelFolders != null && i < topLevelFolders.size(); i++) {\n        try {\n          folders.add(mailbox.getFolder(topLevelFolders.get(i)));\n        } catch (MessagingException e) {\n          // skip bad ones unless its the last one and still no good folder\n          if (folders.size() == 0 && i == topLevelFolders.size() - 1)\n            throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n                    \"Folder retreival failed\");\n        }\n      }\n      if (topLevelFolders == null || topLevelFolders.size() == 0) {\n        try {\n          folders.add(mailBox.getDefaultFolder());\n        } catch (MessagingException e) {\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n                  \"Folder retreival failed\");\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getTopLevelFolders(Store).mjava","pathOld":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getTopLevelFolders(Store).mjava","sourceNew":"    private void getTopLevelFolders(Store mailBox) {\n      if (folderNames != null)\n        topLevelFolders = Arrays.asList(folderNames.split(\",\"));\n      for (int i = 0; topLevelFolders != null && i < topLevelFolders.size(); i++) {\n        try {\n          folders.add(mailbox.getFolder(topLevelFolders.get(i)));\n        } catch (MessagingException e) {\n          // skip bad ones unless its the last one and still no good folder\n          if (folders.size() == 0 && i == topLevelFolders.size() - 1)\n            throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n                    \"Folder retreival failed\");\n        }\n      }\n      if (topLevelFolders == null || topLevelFolders.size() == 0) {\n        try {\n          folders.add(mailBox.getDefaultFolder());\n        } catch (MessagingException e) {\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n                  \"Folder retreival failed\");\n        }\n      }\n    }\n\n","sourceOld":"    private void getTopLevelFolders(Store mailBox) {\n      if (folderNames != null)\n        topLevelFolders = Arrays.asList(folderNames.split(\",\"));\n      for (int i = 0; topLevelFolders != null && i < topLevelFolders.size(); i++) {\n        try {\n          folders.add(mailbox.getFolder(topLevelFolders.get(i)));\n        } catch (MessagingException e) {\n          // skip bad ones unless its the last one and still no good folder\n          if (folders.size() == 0 && i == topLevelFolders.size() - 1)\n            throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n                    \"Folder retreival failed\");\n        }\n      }\n      if (topLevelFolders == null || topLevelFolders.size() == 0) {\n        try {\n          folders.add(mailBox.getDefaultFolder());\n        } catch (MessagingException e) {\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n                  \"Folder retreival failed\");\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36113efe922ae370819b20fba837a1a37d3dd2d8","date":1404234826,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getTopLevelFolders(Store).mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getTopLevelFolders(Store).mjava","sourceNew":"    private void getTopLevelFolders(Store mailBox) {\n      if (folderNames != null) topLevelFolders = Arrays.asList(folderNames\n          .split(\",\"));\n      for (int i = 0; topLevelFolders != null && i < topLevelFolders.size(); i++) {\n        try {\n          folders.add(mailbox.getFolder(topLevelFolders.get(i)));\n        } catch (MessagingException e) {\n          // skip bad ones unless its the last one and still no good folder\n          if (folders.size() == 0 && i == topLevelFolders.size() - 1) throw new DataImportHandlerException(\n              DataImportHandlerException.SEVERE, \"Folder retreival failed\");\n        }\n      }\n      if (topLevelFolders == null || topLevelFolders.size() == 0) {\n        try {\n          folders.add(mailBox.getDefaultFolder());\n        } catch (MessagingException e) {\n          throw new DataImportHandlerException(\n              DataImportHandlerException.SEVERE, \"Folder retreival failed\");\n        }\n      }\n    }\n\n","sourceOld":"    private void getTopLevelFolders(Store mailBox) {\n      if (folderNames != null)\n        topLevelFolders = Arrays.asList(folderNames.split(\",\"));\n      for (int i = 0; topLevelFolders != null && i < topLevelFolders.size(); i++) {\n        try {\n          folders.add(mailbox.getFolder(topLevelFolders.get(i)));\n        } catch (MessagingException e) {\n          // skip bad ones unless its the last one and still no good folder\n          if (folders.size() == 0 && i == topLevelFolders.size() - 1)\n            throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n                    \"Folder retreival failed\");\n        }\n      }\n      if (topLevelFolders == null || topLevelFolders.size() == 0) {\n        try {\n          folders.add(mailBox.getDefaultFolder());\n        } catch (MessagingException e) {\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n                  \"Folder retreival failed\");\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0bac5e4f5082317c9a942b1deeeb22d6700ecff7","date":1404338458,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getTopLevelFolders(Store).mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getTopLevelFolders(Store).mjava","sourceNew":"    private void getTopLevelFolders(Store mailBox) {\n      if (folderNames != null)\n        topLevelFolders = Arrays.asList(folderNames.split(\",\"));\n      for (int i = 0; topLevelFolders != null && i < topLevelFolders.size(); i++) {\n        try {\n          folders.add(mailbox.getFolder(topLevelFolders.get(i)));\n        } catch (MessagingException e) {\n          // skip bad ones unless its the last one and still no good folder\n          if (folders.size() == 0 && i == topLevelFolders.size() - 1)\n            throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n                    \"Folder retreival failed\");\n        }\n      }\n      if (topLevelFolders == null || topLevelFolders.size() == 0) {\n        try {\n          folders.add(mailBox.getDefaultFolder());\n        } catch (MessagingException e) {\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n                  \"Folder retreival failed\");\n        }\n      }\n    }\n\n","sourceOld":"    private void getTopLevelFolders(Store mailBox) {\n      if (folderNames != null) topLevelFolders = Arrays.asList(folderNames\n          .split(\",\"));\n      for (int i = 0; topLevelFolders != null && i < topLevelFolders.size(); i++) {\n        try {\n          folders.add(mailbox.getFolder(topLevelFolders.get(i)));\n        } catch (MessagingException e) {\n          // skip bad ones unless its the last one and still no good folder\n          if (folders.size() == 0 && i == topLevelFolders.size() - 1) throw new DataImportHandlerException(\n              DataImportHandlerException.SEVERE, \"Folder retreival failed\");\n        }\n      }\n      if (topLevelFolders == null || topLevelFolders.size() == 0) {\n        try {\n          folders.add(mailBox.getDefaultFolder());\n        } catch (MessagingException e) {\n          throw new DataImportHandlerException(\n              DataImportHandlerException.SEVERE, \"Folder retreival failed\");\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0cd303657ee7726e12c45f9fd39b0285acf10c07","date":1405460668,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getTopLevelFolders(Store).mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getTopLevelFolders(Store).mjava","sourceNew":"    private void getTopLevelFolders(Store mailBox) {\n      if (folderNames != null) topLevelFolders = Arrays.asList(folderNames\n          .split(\",\"));\n      for (int i = 0; topLevelFolders != null && i < topLevelFolders.size(); i++) {\n        try {\n          folders.add(mailbox.getFolder(topLevelFolders.get(i)));\n        } catch (MessagingException e) {\n          // skip bad ones unless its the last one and still no good folder\n          if (folders.size() == 0 && i == topLevelFolders.size() - 1) throw new DataImportHandlerException(\n              DataImportHandlerException.SEVERE, \"Folder retreival failed\");\n        }\n      }\n      if (topLevelFolders == null || topLevelFolders.size() == 0) {\n        try {\n          folders.add(mailBox.getDefaultFolder());\n        } catch (MessagingException e) {\n          throw new DataImportHandlerException(\n              DataImportHandlerException.SEVERE, \"Folder retreival failed\");\n        }\n      }\n    }\n\n","sourceOld":"    private void getTopLevelFolders(Store mailBox) {\n      if (folderNames != null)\n        topLevelFolders = Arrays.asList(folderNames.split(\",\"));\n      for (int i = 0; topLevelFolders != null && i < topLevelFolders.size(); i++) {\n        try {\n          folders.add(mailbox.getFolder(topLevelFolders.get(i)));\n        } catch (MessagingException e) {\n          // skip bad ones unless its the last one and still no good folder\n          if (folders.size() == 0 && i == topLevelFolders.size() - 1)\n            throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n                    \"Folder retreival failed\");\n        }\n      }\n      if (topLevelFolders == null || topLevelFolders.size() == 0) {\n        try {\n          folders.add(mailBox.getDefaultFolder());\n        } catch (MessagingException e) {\n          throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n                  \"Folder retreival failed\");\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getTopLevelFolders(Store).mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getTopLevelFolders(Store).mjava","sourceNew":"    private void getTopLevelFolders(Store mailBox) {\n      if (folderNames != null) topLevelFolders = Arrays.asList(folderNames\n          .split(\",\"));\n      for (int i = 0; topLevelFolders != null && i < topLevelFolders.size(); i++) {\n        try {\n          folders.add(mailbox.getFolder(topLevelFolders.get(i)));\n        } catch (MessagingException e) {\n          // skip bad ones unless it's the last one and still no good folder\n          if (folders.size() == 0 && i == topLevelFolders.size() - 1) throw new DataImportHandlerException(\n              DataImportHandlerException.SEVERE, \"Folder retreival failed\");\n        }\n      }\n      if (topLevelFolders == null || topLevelFolders.size() == 0) {\n        try {\n          folders.add(mailBox.getDefaultFolder());\n        } catch (MessagingException e) {\n          throw new DataImportHandlerException(\n              DataImportHandlerException.SEVERE, \"Folder retreival failed\");\n        }\n      }\n    }\n\n","sourceOld":"    private void getTopLevelFolders(Store mailBox) {\n      if (folderNames != null) topLevelFolders = Arrays.asList(folderNames\n          .split(\",\"));\n      for (int i = 0; topLevelFolders != null && i < topLevelFolders.size(); i++) {\n        try {\n          folders.add(mailbox.getFolder(topLevelFolders.get(i)));\n        } catch (MessagingException e) {\n          // skip bad ones unless its the last one and still no good folder\n          if (folders.size() == 0 && i == topLevelFolders.size() - 1) throw new DataImportHandlerException(\n              DataImportHandlerException.SEVERE, \"Folder retreival failed\");\n        }\n      }\n      if (topLevelFolders == null || topLevelFolders.size() == 0) {\n        try {\n          folders.add(mailBox.getDefaultFolder());\n        } catch (MessagingException e) {\n          throw new DataImportHandlerException(\n              DataImportHandlerException.SEVERE, \"Folder retreival failed\");\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor.FolderIterator#getTopLevelFolders(Store).mjava","sourceNew":null,"sourceOld":"    private void getTopLevelFolders(Store mailBox) {\n      if (folderNames != null) topLevelFolders = Arrays.asList(folderNames\n          .split(\",\"));\n      for (int i = 0; topLevelFolders != null && i < topLevelFolders.size(); i++) {\n        try {\n          folders.add(mailbox.getFolder(topLevelFolders.get(i)));\n        } catch (MessagingException e) {\n          // skip bad ones unless it's the last one and still no good folder\n          if (folders.size() == 0 && i == topLevelFolders.size() - 1) throw new DataImportHandlerException(\n              DataImportHandlerException.SEVERE, \"Folder retreival failed\");\n        }\n      }\n      if (topLevelFolders == null || topLevelFolders.size() == 0) {\n        try {\n          folders.add(mailBox.getDefaultFolder());\n        } catch (MessagingException e) {\n          throw new DataImportHandlerException(\n              DataImportHandlerException.SEVERE, \"Folder retreival failed\");\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["0cd303657ee7726e12c45f9fd39b0285acf10c07"],"36113efe922ae370819b20fba837a1a37d3dd2d8":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"0bac5e4f5082317c9a942b1deeeb22d6700ecff7":["36113efe922ae370819b20fba837a1a37d3dd2d8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0cd303657ee7726e12c45f9fd39b0285acf10c07":["0bac5e4f5082317c9a942b1deeeb22d6700ecff7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"36113efe922ae370819b20fba837a1a37d3dd2d8":["0bac5e4f5082317c9a942b1deeeb22d6700ecff7"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["36113efe922ae370819b20fba837a1a37d3dd2d8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"0bac5e4f5082317c9a942b1deeeb22d6700ecff7":["0cd303657ee7726e12c45f9fd39b0285acf10c07"],"0cd303657ee7726e12c45f9fd39b0285acf10c07":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}