{"path":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#addMBean(SolrQueryRequest,NamedList[NamedList[NamedList[Object]]],Set[String],String,SolrInfoBean).mjava","commits":[{"id":"816521ebaad5add9cb96bb88c577394e2938c40b","date":1491931343,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#addMBean(SolrQueryRequest,NamedList[NamedList[NamedList[Object]]],Set[String],String,SolrInfoBean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#addMBean(SolrQueryRequest,NamedList[NamedList[NamedList[Object]]],Set[String],String,SolrInfoMBean).mjava","sourceNew":"  private void addMBean(SolrQueryRequest req, NamedList<NamedList<NamedList<Object>>> cats, Set<String> requestedKeys, String key, SolrInfoBean m) {\n    if ( ! ( requestedKeys.isEmpty() || requestedKeys.contains(key) ) ) return;\n    NamedList<NamedList<Object>> catInfo = cats.get(m.getCategory().name());\n    if ( null == catInfo ) return;\n    NamedList<Object> mBeanInfo = new SimpleOrderedMap<>();\n    mBeanInfo.add(\"class\", m.getName());\n    mBeanInfo.add(\"description\", m.getDescription());\n\n    if (req.getParams().getFieldBool(key, \"stats\", false))\n      mBeanInfo.add(\"stats\", m.getMetricsSnapshot());\n\n    catInfo.add(key, mBeanInfo);\n  }\n\n","sourceOld":"  private void addMBean(SolrQueryRequest req, NamedList<NamedList<NamedList<Object>>> cats, Set<String> requestedKeys, String key, SolrInfoMBean m) {\n    if ( ! ( requestedKeys.isEmpty() || requestedKeys.contains(key) ) ) return;\n    NamedList<NamedList<Object>> catInfo = cats.get(m.getCategory().name());\n    if ( null == catInfo ) return;\n    NamedList<Object> mBeanInfo = new SimpleOrderedMap<>();\n    mBeanInfo.add(\"class\", m.getName());\n    mBeanInfo.add(\"version\", m.getVersion());\n    mBeanInfo.add(\"description\", m.getDescription());\n    mBeanInfo.add(\"src\", m.getSource());\n\n    // Use an external form\n    URL[] urls = m.getDocs();\n    if(urls!=null) {\n      List<String> docs = new ArrayList<>(urls.length);\n      for(URL url : urls) {\n        docs.add(url.toExternalForm());\n      }\n      mBeanInfo.add(\"docs\", docs);\n    }\n\n    if (req.getParams().getFieldBool(key, \"stats\", false))\n      mBeanInfo.add(\"stats\", m.getStatistics());\n\n    catInfo.add(key, mBeanInfo);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#addMBean(SolrQueryRequest,NamedList[NamedList[NamedList[Object]]],Set[String],String,SolrInfoBean).mjava","pathOld":"/dev/null","sourceNew":"  private void addMBean(SolrQueryRequest req, NamedList<NamedList<NamedList<Object>>> cats, Set<String> requestedKeys, String key, SolrInfoBean m) {\n    if ( ! ( requestedKeys.isEmpty() || requestedKeys.contains(key) ) ) return;\n    NamedList<NamedList<Object>> catInfo = cats.get(m.getCategory().name());\n    if ( null == catInfo ) return;\n    NamedList<Object> mBeanInfo = new SimpleOrderedMap<>();\n    mBeanInfo.add(\"class\", m.getName());\n    mBeanInfo.add(\"description\", m.getDescription());\n\n    if (req.getParams().getFieldBool(key, \"stats\", false))\n      mBeanInfo.add(\"stats\", m.getMetricsSnapshot());\n\n    catInfo.add(key, mBeanInfo);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c2af5a711bd6e2d33e0221ced0f47ac596ed275","date":1572877903,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#addMBean(SolrQueryRequest,NamedList[NamedList[NamedList[Object]]],Set[String],String,SolrInfoBean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#addMBean(SolrQueryRequest,NamedList[NamedList[NamedList[Object]]],Set[String],String,SolrInfoBean).mjava","sourceNew":"  private void addMBean(SolrQueryRequest req, NamedList<NamedList<NamedList<Object>>> cats, Set<String> requestedKeys, String key, SolrInfoBean m) {\n    if ( ! ( requestedKeys.isEmpty() || requestedKeys.contains(key) ) ) return;\n    NamedList<NamedList<Object>> catInfo = cats.get(m.getCategory().name());\n    if ( null == catInfo ) return;\n    NamedList<Object> mBeanInfo = new SimpleOrderedMap<>();\n    mBeanInfo.add(\"class\", m.getName());\n    mBeanInfo.add(\"description\", m.getDescription());\n\n    if (req.getParams().getFieldBool(key, \"stats\", false) && m.getSolrMetricsContext() != null)\n      mBeanInfo.add(\"stats\", m.getSolrMetricsContext().getMetricsSnapshot());\n\n    catInfo.add(key, mBeanInfo);\n  }\n\n","sourceOld":"  private void addMBean(SolrQueryRequest req, NamedList<NamedList<NamedList<Object>>> cats, Set<String> requestedKeys, String key, SolrInfoBean m) {\n    if ( ! ( requestedKeys.isEmpty() || requestedKeys.contains(key) ) ) return;\n    NamedList<NamedList<Object>> catInfo = cats.get(m.getCategory().name());\n    if ( null == catInfo ) return;\n    NamedList<Object> mBeanInfo = new SimpleOrderedMap<>();\n    mBeanInfo.add(\"class\", m.getName());\n    mBeanInfo.add(\"description\", m.getDescription());\n\n    if (req.getParams().getFieldBool(key, \"stats\", false))\n      mBeanInfo.add(\"stats\", m.getMetricsSnapshot());\n\n    catInfo.add(key, mBeanInfo);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c2af5a711bd6e2d33e0221ced0f47ac596ed275":["816521ebaad5add9cb96bb88c577394e2938c40b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"816521ebaad5add9cb96bb88c577394e2938c40b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c2af5a711bd6e2d33e0221ced0f47ac596ed275"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"7c2af5a711bd6e2d33e0221ced0f47ac596ed275":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","816521ebaad5add9cb96bb88c577394e2938c40b"],"816521ebaad5add9cb96bb88c577394e2938c40b":["7c2af5a711bd6e2d33e0221ced0f47ac596ed275"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}