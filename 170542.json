{"path":"solr/core/src/java/org/apache/solr/core/PluginRegistry.LazyPluginHolder#createInst().mjava","commits":[{"id":"9aea0485ecacb6734c17da2d02569816c23a69c1","date":1425707735,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginRegistry.LazyPluginHolder#createInst().mjava","pathOld":"/dev/null","sourceNew":"    protected synchronized void createInst() {\n      if (inst != null) return;\n      log.info(\"Going to create a new {} with {} \", pluginMeta.tag, pluginInfo.toString());\n      if (resourceLoader instanceof MemClassLoader) {\n        MemClassLoader loader = (MemClassLoader) resourceLoader;\n        loader.loadJars();\n      }\n      Class<T> clazz = (Class<T>) pluginMeta.clazz;\n      inst = core.createInstance(pluginInfo.className, clazz, pluginMeta.tag, null, resourceLoader);\n      initInstance(inst, pluginInfo, core);\n      if (inst instanceof SolrCoreAware) {\n        SolrResourceLoader.assertAwareCompatibility(SolrCoreAware.class, inst);\n        ((SolrCoreAware) inst).inform(core);\n      }\n      if (inst instanceof ResourceLoaderAware) {\n        SolrResourceLoader.assertAwareCompatibility(ResourceLoaderAware.class, inst);\n        try {\n          ((ResourceLoaderAware) inst).inform(core.getResourceLoader());\n        } catch (IOException e) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"error initializing component\", e);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["55a86e1831066267af63feede06bff6aa3141a40"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"69cad0546debf9ce9d44e309ecfa26760fecd5d8","date":1425846082,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/PluginBag.LazyPluginHolder#createInst().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/PluginRegistry.LazyPluginHolder#createInst().mjava","sourceNew":"    protected synchronized void createInst() {\n      if (inst != null) return;\n      log.info(\"Going to create a new {} with {} \", pluginMeta.tag, pluginInfo.toString());\n      if (resourceLoader instanceof MemClassLoader) {\n        MemClassLoader loader = (MemClassLoader) resourceLoader;\n        loader.loadJars();\n      }\n      Class<T> clazz = (Class<T>) pluginMeta.clazz;\n      inst = core.createInstance(pluginInfo.className, clazz, pluginMeta.tag, null, resourceLoader);\n      initInstance(inst, pluginInfo, core);\n      if (inst instanceof SolrCoreAware) {\n        SolrResourceLoader.assertAwareCompatibility(SolrCoreAware.class, inst);\n        ((SolrCoreAware) inst).inform(core);\n      }\n      if (inst instanceof ResourceLoaderAware) {\n        SolrResourceLoader.assertAwareCompatibility(ResourceLoaderAware.class, inst);\n        try {\n          ((ResourceLoaderAware) inst).inform(core.getResourceLoader());\n        } catch (IOException e) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"error initializing component\", e);\n        }\n      }\n    }\n\n","sourceOld":"    protected synchronized void createInst() {\n      if (inst != null) return;\n      log.info(\"Going to create a new {} with {} \", pluginMeta.tag, pluginInfo.toString());\n      if (resourceLoader instanceof MemClassLoader) {\n        MemClassLoader loader = (MemClassLoader) resourceLoader;\n        loader.loadJars();\n      }\n      Class<T> clazz = (Class<T>) pluginMeta.clazz;\n      inst = core.createInstance(pluginInfo.className, clazz, pluginMeta.tag, null, resourceLoader);\n      initInstance(inst, pluginInfo, core);\n      if (inst instanceof SolrCoreAware) {\n        SolrResourceLoader.assertAwareCompatibility(SolrCoreAware.class, inst);\n        ((SolrCoreAware) inst).inform(core);\n      }\n      if (inst instanceof ResourceLoaderAware) {\n        SolrResourceLoader.assertAwareCompatibility(ResourceLoaderAware.class, inst);\n        try {\n          ((ResourceLoaderAware) inst).inform(core.getResourceLoader());\n        } catch (IOException e) {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"error initializing component\", e);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"69cad0546debf9ce9d44e309ecfa26760fecd5d8":["9aea0485ecacb6734c17da2d02569816c23a69c1"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["69cad0546debf9ce9d44e309ecfa26760fecd5d8"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9aea0485ecacb6734c17da2d02569816c23a69c1"],"69cad0546debf9ce9d44e309ecfa26760fecd5d8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9aea0485ecacb6734c17da2d02569816c23a69c1":["69cad0546debf9ce9d44e309ecfa26760fecd5d8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}