{"path":"lucene/core/src/java/org/apache/lucene/index/SoftDeletesRetentionMergePolicy#keepFullyDeletedSegment(IOSupplier[CodecReader]).mjava","commits":[{"id":"15e716649e2bd79a98b5e68c464154ea4c44677a","date":1523975212,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SoftDeletesRetentionMergePolicy#keepFullyDeletedSegment(IOSupplier[CodecReader]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SoftDeletesRetentionMergePolicy#keepFullyDeletedSegment(CodecReader).mjava","sourceNew":"  @Override\n  public boolean keepFullyDeletedSegment(IOSupplier<CodecReader> readerIOSupplier) throws IOException {\n    CodecReader reader = readerIOSupplier.get();\n    /* we only need a single hit to keep it no need for soft deletes to be checked*/\n    Scorer scorer = getScorer(retentionQuerySupplier.get(), wrapLiveDocs(reader, null, reader.maxDoc()));\n    if (scorer != null) {\n      DocIdSetIterator iterator = scorer.iterator();\n      boolean atLeastOneHit = iterator.nextDoc() != DocIdSetIterator.NO_MORE_DOCS;\n      return atLeastOneHit;\n    }\n    return super.keepFullyDeletedSegment(readerIOSupplier) ;\n  }\n\n","sourceOld":"  @Override\n  public boolean keepFullyDeletedSegment(CodecReader reader) throws IOException {\n    /* we only need a single hit to keep it no need for soft deletes to be checked*/\n    Scorer scorer = getScorer(retentionQuerySupplier.get(), wrapLiveDocs(reader, null, reader.maxDoc()));\n    if (scorer != null) {\n      DocIdSetIterator iterator = scorer.iterator();\n      boolean atLeastOneHit = iterator.nextDoc() != DocIdSetIterator.NO_MORE_DOCS;\n      return atLeastOneHit;\n    }\n    return super.keepFullyDeletedSegment(reader) ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c652f4c2c731f462e41a528ed4f97245915206d5","date":1530728194,"type":3,"author":"Nhat Nguyen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SoftDeletesRetentionMergePolicy#keepFullyDeletedSegment(IOSupplier[CodecReader]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SoftDeletesRetentionMergePolicy#keepFullyDeletedSegment(IOSupplier[CodecReader]).mjava","sourceNew":"  @Override\n  public boolean keepFullyDeletedSegment(IOSupplier<CodecReader> readerIOSupplier) throws IOException {\n    CodecReader reader = readerIOSupplier.get();\n    /* we only need a single hit to keep it no need for soft deletes to be checked*/\n    Scorer scorer = getScorer(retentionQuerySupplier.get(), FilterCodecReader.wrapLiveDocs(reader, null, reader.maxDoc()));\n    if (scorer != null) {\n      DocIdSetIterator iterator = scorer.iterator();\n      boolean atLeastOneHit = iterator.nextDoc() != DocIdSetIterator.NO_MORE_DOCS;\n      return atLeastOneHit;\n    }\n    return super.keepFullyDeletedSegment(readerIOSupplier) ;\n  }\n\n","sourceOld":"  @Override\n  public boolean keepFullyDeletedSegment(IOSupplier<CodecReader> readerIOSupplier) throws IOException {\n    CodecReader reader = readerIOSupplier.get();\n    /* we only need a single hit to keep it no need for soft deletes to be checked*/\n    Scorer scorer = getScorer(retentionQuerySupplier.get(), wrapLiveDocs(reader, null, reader.maxDoc()));\n    if (scorer != null) {\n      DocIdSetIterator iterator = scorer.iterator();\n      boolean atLeastOneHit = iterator.nextDoc() != DocIdSetIterator.NO_MORE_DOCS;\n      return atLeastOneHit;\n    }\n    return super.keepFullyDeletedSegment(readerIOSupplier) ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SoftDeletesRetentionMergePolicy#keepFullyDeletedSegment(IOSupplier[CodecReader]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SoftDeletesRetentionMergePolicy#keepFullyDeletedSegment(IOSupplier[CodecReader]).mjava","sourceNew":"  @Override\n  public boolean keepFullyDeletedSegment(IOSupplier<CodecReader> readerIOSupplier) throws IOException {\n    CodecReader reader = readerIOSupplier.get();\n    /* we only need a single hit to keep it no need for soft deletes to be checked*/\n    Scorer scorer = getScorer(retentionQuerySupplier.get(), FilterCodecReader.wrapLiveDocs(reader, null, reader.maxDoc()));\n    if (scorer != null) {\n      DocIdSetIterator iterator = scorer.iterator();\n      boolean atLeastOneHit = iterator.nextDoc() != DocIdSetIterator.NO_MORE_DOCS;\n      return atLeastOneHit;\n    }\n    return super.keepFullyDeletedSegment(readerIOSupplier) ;\n  }\n\n","sourceOld":"  @Override\n  public boolean keepFullyDeletedSegment(IOSupplier<CodecReader> readerIOSupplier) throws IOException {\n    CodecReader reader = readerIOSupplier.get();\n    /* we only need a single hit to keep it no need for soft deletes to be checked*/\n    Scorer scorer = getScorer(retentionQuerySupplier.get(), wrapLiveDocs(reader, null, reader.maxDoc()));\n    if (scorer != null) {\n      DocIdSetIterator iterator = scorer.iterator();\n      boolean atLeastOneHit = iterator.nextDoc() != DocIdSetIterator.NO_MORE_DOCS;\n      return atLeastOneHit;\n    }\n    return super.keepFullyDeletedSegment(readerIOSupplier) ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SoftDeletesRetentionMergePolicy#keepFullyDeletedSegment(IOSupplier[CodecReader]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SoftDeletesRetentionMergePolicy#keepFullyDeletedSegment(IOSupplier[CodecReader]).mjava","sourceNew":"  @Override\n  public boolean keepFullyDeletedSegment(IOSupplier<CodecReader> readerIOSupplier) throws IOException {\n    CodecReader reader = readerIOSupplier.get();\n    /* we only need a single hit to keep it no need for soft deletes to be checked*/\n    Scorer scorer = getScorer(retentionQuerySupplier.get(), FilterCodecReader.wrapLiveDocs(reader, null, reader.maxDoc()));\n    if (scorer != null) {\n      DocIdSetIterator iterator = scorer.iterator();\n      boolean atLeastOneHit = iterator.nextDoc() != DocIdSetIterator.NO_MORE_DOCS;\n      return atLeastOneHit;\n    }\n    return super.keepFullyDeletedSegment(readerIOSupplier) ;\n  }\n\n","sourceOld":"  @Override\n  public boolean keepFullyDeletedSegment(IOSupplier<CodecReader> readerIOSupplier) throws IOException {\n    CodecReader reader = readerIOSupplier.get();\n    /* we only need a single hit to keep it no need for soft deletes to be checked*/\n    Scorer scorer = getScorer(retentionQuerySupplier.get(), wrapLiveDocs(reader, null, reader.maxDoc()));\n    if (scorer != null) {\n      DocIdSetIterator iterator = scorer.iterator();\n      boolean atLeastOneHit = iterator.nextDoc() != DocIdSetIterator.NO_MORE_DOCS;\n      return atLeastOneHit;\n    }\n    return super.keepFullyDeletedSegment(readerIOSupplier) ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["15e716649e2bd79a98b5e68c464154ea4c44677a","c652f4c2c731f462e41a528ed4f97245915206d5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c652f4c2c731f462e41a528ed4f97245915206d5":["15e716649e2bd79a98b5e68c464154ea4c44677a"],"15e716649e2bd79a98b5e68c464154ea4c44677a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c652f4c2c731f462e41a528ed4f97245915206d5"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["15e716649e2bd79a98b5e68c464154ea4c44677a","c652f4c2c731f462e41a528ed4f97245915206d5"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["15e716649e2bd79a98b5e68c464154ea4c44677a"],"15e716649e2bd79a98b5e68c464154ea4c44677a":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","c652f4c2c731f462e41a528ed4f97245915206d5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"c652f4c2c731f462e41a528ed4f97245915206d5":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}