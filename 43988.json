{"path":"lucene/src/java/org/apache/lucene/store/FSLockFactory#setLockDir(File).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/FSLockFactory#setLockDir(File).mjava","pathOld":"src/java/org/apache/lucene/store/FSLockFactory#setLockDir(File).mjava","sourceNew":"  /**\n   * Set the lock directory. This method can be only called\n   * once to initialize the lock directory. It is used by {@link FSDirectory}\n   * to set the lock directory to itsself.\n   * Subclasses can also use this method to set the directory\n   * in the constructor.\n   */\n  protected final void setLockDir(File lockDir) {\n    if (this.lockDir != null)\n      throw new IllegalStateException(\"You can set the lock directory for this factory only once.\");\n    this.lockDir = lockDir;\n  }\n\n","sourceOld":"  /**\n   * Set the lock directory. This method can be only called\n   * once to initialize the lock directory. It is used by {@link FSDirectory}\n   * to set the lock directory to itsself.\n   * Subclasses can also use this method to set the directory\n   * in the constructor.\n   */\n  protected final void setLockDir(File lockDir) {\n    if (this.lockDir != null)\n      throw new IllegalStateException(\"You can set the lock directory for this factory only once.\");\n    this.lockDir = lockDir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7235f072992928845d8cfd2dfc1c90362360e1e","date":1296426876,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/FSLockFactory#setLockDir(File).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSLockFactory#setLockDir(File).mjava","sourceNew":"  /**\n   * Set the lock directory. This method can be only called\n   * once to initialize the lock directory. It is used by {@link FSDirectory}\n   * to set the lock directory to itself.\n   * Subclasses can also use this method to set the directory\n   * in the constructor.\n   */\n  protected final void setLockDir(File lockDir) {\n    if (this.lockDir != null)\n      throw new IllegalStateException(\"You can set the lock directory for this factory only once.\");\n    this.lockDir = lockDir;\n  }\n\n","sourceOld":"  /**\n   * Set the lock directory. This method can be only called\n   * once to initialize the lock directory. It is used by {@link FSDirectory}\n   * to set the lock directory to itsself.\n   * Subclasses can also use this method to set the directory\n   * in the constructor.\n   */\n  protected final void setLockDir(File lockDir) {\n    if (this.lockDir != null)\n      throw new IllegalStateException(\"You can set the lock directory for this factory only once.\");\n    this.lockDir = lockDir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/FSLockFactory#setLockDir(File).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSLockFactory#setLockDir(File).mjava","sourceNew":"  /**\n   * Set the lock directory. This method can be only called\n   * once to initialize the lock directory. It is used by {@link FSDirectory}\n   * to set the lock directory to itself.\n   * Subclasses can also use this method to set the directory\n   * in the constructor.\n   */\n  protected final void setLockDir(File lockDir) {\n    if (this.lockDir != null)\n      throw new IllegalStateException(\"You can set the lock directory for this factory only once.\");\n    this.lockDir = lockDir;\n  }\n\n","sourceOld":"  /**\n   * Set the lock directory. This method can be only called\n   * once to initialize the lock directory. It is used by {@link FSDirectory}\n   * to set the lock directory to itsself.\n   * Subclasses can also use this method to set the directory\n   * in the constructor.\n   */\n  protected final void setLockDir(File lockDir) {\n    if (this.lockDir != null)\n      throw new IllegalStateException(\"You can set the lock directory for this factory only once.\");\n    this.lockDir = lockDir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/FSLockFactory#setLockDir(File).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSLockFactory#setLockDir(File).mjava","sourceNew":"  /**\n   * Set the lock directory. This method can be only called\n   * once to initialize the lock directory. It is used by {@link FSDirectory}\n   * to set the lock directory to itself.\n   * Subclasses can also use this method to set the directory\n   * in the constructor.\n   */\n  protected final void setLockDir(File lockDir) {\n    if (this.lockDir != null)\n      throw new IllegalStateException(\"You can set the lock directory for this factory only once.\");\n    this.lockDir = lockDir;\n  }\n\n","sourceOld":"  /**\n   * Set the lock directory. This method can be only called\n   * once to initialize the lock directory. It is used by {@link FSDirectory}\n   * to set the lock directory to itsself.\n   * Subclasses can also use this method to set the directory\n   * in the constructor.\n   */\n  protected final void setLockDir(File lockDir) {\n    if (this.lockDir != null)\n      throw new IllegalStateException(\"You can set the lock directory for this factory only once.\");\n    this.lockDir = lockDir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSLockFactory#setLockDir(File).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSLockFactory#setLockDir(File).mjava","sourceNew":"  /**\n   * Set the lock directory. This method can be only called\n   * once to initialize the lock directory. It is used by {@link FSDirectory}\n   * to set the lock directory to itself.\n   * Subclasses can also use this method to set the directory\n   * in the constructor.\n   */\n  protected final void setLockDir(File lockDir) {\n    if (this.lockDir != null)\n      throw new IllegalStateException(\"You can set the lock directory for this factory only once.\");\n    this.lockDir = lockDir;\n  }\n\n","sourceOld":"  /**\n   * Set the lock directory. This method can be only called\n   * once to initialize the lock directory. It is used by {@link FSDirectory}\n   * to set the lock directory to itself.\n   * Subclasses can also use this method to set the directory\n   * in the constructor.\n   */\n  protected final void setLockDir(File lockDir) {\n    if (this.lockDir != null)\n      throw new IllegalStateException(\"You can set the lock directory for this factory only once.\");\n    this.lockDir = lockDir;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c7235f072992928845d8cfd2dfc1c90362360e1e"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["9454a6510e2db155fb01faa5c049b06ece95fab9","c7235f072992928845d8cfd2dfc1c90362360e1e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c7235f072992928845d8cfd2dfc1c90362360e1e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["9454a6510e2db155fb01faa5c049b06ece95fab9","c7235f072992928845d8cfd2dfc1c90362360e1e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"c7235f072992928845d8cfd2dfc1c90362360e1e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["29ef99d61cda9641b6250bf9567329a6e65f901d","c7235f072992928845d8cfd2dfc1c90362360e1e","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}