{"path":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#acquire().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#acquire().mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#acquire().mjava","sourceNew":"    // Get the current (fresh) searcher for this node\n    public ShardIndexSearcher acquire() {\n      final ShardIndexSearcher s = currentShardSearcher;\n      // TODO: this isn't thread safe.... in theory the\n      // reader could get decRef'd to 0 before we have a\n      // chance to incRef, ie if a reopen happens right\n      // after the above line, this thread gets stalled, and\n      // the old IR is closed.  But because we use SLM in\n      // this test, this will be exceptionally rare:\n      s.getIndexReader().incRef();\n      return s;\n    }\n\n","sourceOld":"    // Get the current (fresh) searcher for this node\n    public ShardIndexSearcher acquire() {\n      final ShardIndexSearcher s = currentShardSearcher;\n      // TODO: this isn't thread safe.... in theory the\n      // reader could get decRef'd to 0 before we have a\n      // chance to incRef, ie if a reopen happens right\n      // after the above line, this thread gets stalled, and\n      // the old IR is closed.  But because we use SLM in\n      // this test, this will be exceptionally rare:\n      s.getIndexReader().incRef();\n      return s;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3637879f4155d2f76e6305ebb86a606433ed0f","date":1346080817,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#acquire().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#acquire().mjava","sourceNew":"    // Get the current (fresh) searcher for this node\n    public ShardIndexSearcher acquire() {\n      while(true) {\n        final ShardIndexSearcher s = currentShardSearcher;\n        // In theory the reader could get decRef'd to 0\n        // before we have a chance to incRef, ie if a reopen\n        // happens right after the above line, this thread\n        // gets stalled, and the old IR is closed.  So we\n        // must try/retry until incRef succeeds:\n        if (s.getIndexReader().tryIncRef()) {\n          return s;\n        }\n      }\n    }\n\n","sourceOld":"    // Get the current (fresh) searcher for this node\n    public ShardIndexSearcher acquire() {\n      final ShardIndexSearcher s = currentShardSearcher;\n      // TODO: this isn't thread safe.... in theory the\n      // reader could get decRef'd to 0 before we have a\n      // chance to incRef, ie if a reopen happens right\n      // after the above line, this thread gets stalled, and\n      // the old IR is closed.  But because we use SLM in\n      // this test, this will be exceptionally rare:\n      s.getIndexReader().incRef();\n      return s;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#acquire().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#acquire().mjava","sourceNew":"    // Get the current (fresh) searcher for this node\n    public ShardIndexSearcher acquire() {\n      while(true) {\n        final ShardIndexSearcher s = currentShardSearcher;\n        // In theory the reader could get decRef'd to 0\n        // before we have a chance to incRef, ie if a reopen\n        // happens right after the above line, this thread\n        // gets stalled, and the old IR is closed.  So we\n        // must try/retry until incRef succeeds:\n        if (s.getIndexReader().tryIncRef()) {\n          return s;\n        }\n      }\n    }\n\n","sourceOld":"    // Get the current (fresh) searcher for this node\n    public ShardIndexSearcher acquire() {\n      final ShardIndexSearcher s = currentShardSearcher;\n      // TODO: this isn't thread safe.... in theory the\n      // reader could get decRef'd to 0 before we have a\n      // chance to incRef, ie if a reopen happens right\n      // after the above line, this thread gets stalled, and\n      // the old IR is closed.  But because we use SLM in\n      // this test, this will be exceptionally rare:\n      s.getIndexReader().incRef();\n      return s;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2a3637879f4155d2f76e6305ebb86a606433ed0f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05a14b2611ead08655a2b2bdc61632eb31316e57":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","2a3637879f4155d2f76e6305ebb86a606433ed0f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2a3637879f4155d2f76e6305ebb86a606433ed0f"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["2a3637879f4155d2f76e6305ebb86a606433ed0f","05a14b2611ead08655a2b2bdc61632eb31316e57"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2a3637879f4155d2f76e6305ebb86a606433ed0f":["05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}