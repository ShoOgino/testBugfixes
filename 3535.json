{"path":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/server/Service#updateEntry(GDataRequest,GDataResponse).mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/server/Service#updateEntry(GDataRequest,GDataResponse).mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/server/Service#updateEntry(GDataRequest,GDataResponse).mjava","sourceNew":"    /** \n     * Service method to update an existing entry in a existing feed context. \n     * The entry version will be checked and a <code>ServiceException</code> \n     * will be thrown if the version to update is outdated. The new entry will \n     * be passed to the indexing component to make the version accessable via \n     * <i>get-queries</i>. \n     *  \n     * @param request - \n     *            the current FeedRequest \n     * @param response - \n     *            the current FeedResponse \n     * @return - the entry wich has been updated \n     * @throws ServiceException - \n     *             if the corresponding feed does not exist, the storage can not \n     *             be accessed or the version to update is out of date. \n     */ \n    public abstract BaseEntry  updateEntry(final GDataRequest request, \n            final GDataResponse response) throws ServiceException; \n\n","sourceOld":"    /** \n     * Service method to update an existing entry in a existing feed context. \n     * The entry version will be checked and a <code>ServiceException</code> \n     * will be thrown if the version to update is outdated. The new entry will \n     * be passed to the indexing component to make the version accessable via \n     * <i>get-queries</i>. \n     *  \n     * @param request - \n     *            the current FeedRequest \n     * @param response - \n     *            the current FeedResponse \n     * @return - the entry wich has been updated \n     * @throws ServiceException - \n     *             if the corresponding feed does not exist, the storage can not \n     *             be accessed or the version to update is out of date. \n     */ \n    public abstract BaseEntry  updateEntry(final GDataRequest request, \n            final GDataResponse response) throws ServiceException; \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/server/Service#updateEntry(GDataRequest,GDataResponse).mjava","sourceNew":null,"sourceOld":"    /** \n     * Service method to update an existing entry in a existing feed context. \n     * The entry version will be checked and a <code>ServiceException</code> \n     * will be thrown if the version to update is outdated. The new entry will \n     * be passed to the indexing component to make the version accessable via \n     * <i>get-queries</i>. \n     *  \n     * @param request - \n     *            the current FeedRequest \n     * @param response - \n     *            the current FeedResponse \n     * @return - the entry wich has been updated \n     * @throws ServiceException - \n     *             if the corresponding feed does not exist, the storage can not \n     *             be accessed or the version to update is out of date. \n     */ \n    public abstract BaseEntry  updateEntry(final GDataRequest request, \n            final GDataResponse response) throws ServiceException; \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}