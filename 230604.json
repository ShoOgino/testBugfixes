{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testTokenizer().mjava","commits":[{"id":"3241e06e642196396b80bb293acd9c0814d079e0","date":1343094999,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testTokenizer().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestWikipediaTokenizerFactory#testTokenizer().mjava","sourceNew":"  public void testTokenizer() throws IOException {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    WikipediaTokenizerFactory factory = new WikipediaTokenizerFactory();\n    Tokenizer tokenizer = factory.create(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","sourceOld":"  public void testTokenizer() throws IOException {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    WikipediaTokenizerFactory factory = new WikipediaTokenizerFactory();\n    Tokenizer tokenizer = factory.create(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testTokenizer().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestWikipediaTokenizerFactory#testTokenizer().mjava","sourceNew":"  public void testTokenizer() throws IOException {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    WikipediaTokenizerFactory factory = new WikipediaTokenizerFactory();\n    Tokenizer tokenizer = factory.create(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","sourceOld":"  public void testTokenizer() throws IOException {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    WikipediaTokenizerFactory factory = new WikipediaTokenizerFactory();\n    Tokenizer tokenizer = factory.create(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testTokenizer().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestWikipediaTokenizerFactory#testTokenizer().mjava","sourceNew":"  public void testTokenizer() throws IOException {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    WikipediaTokenizerFactory factory = new WikipediaTokenizerFactory();\n    Tokenizer tokenizer = factory.create(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","sourceOld":"  public void testTokenizer() throws IOException {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    WikipediaTokenizerFactory factory = new WikipediaTokenizerFactory();\n    Tokenizer tokenizer = factory.create(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testTokenizer().mjava","pathOld":"solr/core/src/test/org/apache/solr/analysis/TestWikipediaTokenizerFactory#testTokenizer().mjava","sourceNew":"  public void testTokenizer() throws IOException {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    WikipediaTokenizerFactory factory = new WikipediaTokenizerFactory();\n    Tokenizer tokenizer = factory.create(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","sourceOld":"  public void testTokenizer() throws IOException {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    WikipediaTokenizerFactory factory = new WikipediaTokenizerFactory();\n    Tokenizer tokenizer = factory.create(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testTokenizer().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testTokenizer().mjava","sourceNew":"  public void testTokenizer() throws Exception {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    Tokenizer tokenizer = tokenizerFactory(\"Wikipedia\").create(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","sourceOld":"  public void testTokenizer() throws IOException {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    WikipediaTokenizerFactory factory = new WikipediaTokenizerFactory();\n    Tokenizer tokenizer = factory.create(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testTokenizer().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testTokenizer().mjava","sourceNew":"  public void testTokenizer() throws Exception {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    Tokenizer tokenizer = tokenizerFactory(\"Wikipedia\").create();\n    tokenizer.setReader(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","sourceOld":"  public void testTokenizer() throws Exception {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    Tokenizer tokenizer = tokenizerFactory(\"Wikipedia\").create(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75","date":1399205975,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testTokenizer().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testTokenizer().mjava","sourceNew":"  public void testTokenizer() throws Exception {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    Tokenizer tokenizer = tokenizerFactory(\"Wikipedia\").create(newAttributeFactory());\n    tokenizer.setReader(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","sourceOld":"  public void testTokenizer() throws Exception {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    Tokenizer tokenizer = tokenizerFactory(\"Wikipedia\").create();\n    tokenizer.setReader(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ff0aa05c1ae214397beec2eae8ce7b214dd4c4","date":1496825484,"type":3,"author":"jpgilaberte","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testTokenizer().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testTokenizer().mjava","sourceNew":"  public void testTokenizer() throws Exception {\n    String text = \"This is a [[Category:foo]]\";\n    Tokenizer tf = tokenizerFactory(WIKIPEDIA).create(newAttributeFactory());\n    tf.setReader(new StringReader(text));\n    assertTokenStreamContents(tf,\n                              new String[] { \"This\", \"is\", \"a\", \"foo\" },\n                              new int[] { 0, 5, 8, 21 },\n                              new int[] { 4, 7, 9, 24 },\n                              new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n                              new int[] { 1, 1, 1, 1, },\n                              text.length());\n  }\n\n","sourceOld":"  public void testTokenizer() throws Exception {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    Tokenizer tokenizer = tokenizerFactory(\"Wikipedia\").create(newAttributeFactory());\n    tokenizer.setReader(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f344bb33ca91f48e99c061980115b46fa84fc8f5","date":1496903283,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testTokenizer().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testTokenizer().mjava","sourceNew":"  public void testTokenizer() throws Exception {\n    String text = \"This is a [[Category:foo]]\";\n    Tokenizer tf = tokenizerFactory(WIKIPEDIA).create(newAttributeFactory());\n    tf.setReader(new StringReader(text));\n    assertTokenStreamContents(tf,\n                              new String[] { \"This\", \"is\", \"a\", \"foo\" },\n                              new int[] { 0, 5, 8, 21 },\n                              new int[] { 4, 7, 9, 24 },\n                              new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n                              new int[] { 1, 1, 1, 1, },\n                              text.length());\n  }\n\n","sourceOld":"  public void testTokenizer() throws Exception {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    Tokenizer tokenizer = tokenizerFactory(\"Wikipedia\").create(newAttributeFactory());\n    tokenizer.setReader(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testTokenizer().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testTokenizer().mjava","sourceNew":"  public void testTokenizer() throws Exception {\n    String text = \"This is a [[Category:foo]]\";\n    Tokenizer tf = tokenizerFactory(WIKIPEDIA).create(newAttributeFactory());\n    tf.setReader(new StringReader(text));\n    assertTokenStreamContents(tf,\n                              new String[] { \"This\", \"is\", \"a\", \"foo\" },\n                              new int[] { 0, 5, 8, 21 },\n                              new int[] { 4, 7, 9, 24 },\n                              new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n                              new int[] { 1, 1, 1, 1, },\n                              text.length());\n  }\n\n","sourceOld":"  public void testTokenizer() throws Exception {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    Tokenizer tokenizer = tokenizerFactory(\"Wikipedia\").create(newAttributeFactory());\n    tokenizer.setReader(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testTokenizer().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/wikipedia/TestWikipediaTokenizerFactory#testTokenizer().mjava","sourceNew":"  public void testTokenizer() throws Exception {\n    String text = \"This is a [[Category:foo]]\";\n    Tokenizer tf = tokenizerFactory(WIKIPEDIA).create(newAttributeFactory());\n    tf.setReader(new StringReader(text));\n    assertTokenStreamContents(tf,\n                              new String[] { \"This\", \"is\", \"a\", \"foo\" },\n                              new int[] { 0, 5, 8, 21 },\n                              new int[] { 4, 7, 9, 24 },\n                              new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n                              new int[] { 1, 1, 1, 1, },\n                              text.length());\n  }\n\n","sourceOld":"  public void testTokenizer() throws Exception {\n    Reader reader = new StringReader(\"This is a [[Category:foo]]\");\n    Tokenizer tokenizer = tokenizerFactory(\"Wikipedia\").create(newAttributeFactory());\n    tokenizer.setReader(reader);\n    assertTokenStreamContents(tokenizer,\n        new String[] { \"This\", \"is\", \"a\", \"foo\" },\n        new int[] { 0, 5, 8, 21 },\n        new int[] { 4, 7, 9, 24 },\n        new String[] { \"<ALPHANUM>\", \"<ALPHANUM>\", \"<ALPHANUM>\", WikipediaTokenizer.CATEGORY },\n        new int[] { 1, 1, 1, 1, });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"f344bb33ca91f48e99c061980115b46fa84fc8f5":["923f36bb0db6f793cf62dbb68723ae3bfbaf1d75","a9ff0aa05c1ae214397beec2eae8ce7b214dd4c4"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3241e06e642196396b80bb293acd9c0814d079e0"],"28288370235ed02234a64753cdbf0c6ec096304a":["923f36bb0db6f793cf62dbb68723ae3bfbaf1d75","f344bb33ca91f48e99c061980115b46fa84fc8f5"],"a9ff0aa05c1ae214397beec2eae8ce7b214dd4c4":["923f36bb0db6f793cf62dbb68723ae3bfbaf1d75"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a1a22b1ad88b436661458df567f3fdb446392a4"],"3241e06e642196396b80bb293acd9c0814d079e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["923f36bb0db6f793cf62dbb68723ae3bfbaf1d75","f344bb33ca91f48e99c061980115b46fa84fc8f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["923f36bb0db6f793cf62dbb68723ae3bfbaf1d75"],"923f36bb0db6f793cf62dbb68723ae3bfbaf1d75":["f344bb33ca91f48e99c061980115b46fa84fc8f5","28288370235ed02234a64753cdbf0c6ec096304a","a9ff0aa05c1ae214397beec2eae8ce7b214dd4c4","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"f344bb33ca91f48e99c061980115b46fa84fc8f5":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd","aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a9ff0aa05c1ae214397beec2eae8ce7b214dd4c4":["f344bb33ca91f48e99c061980115b46fa84fc8f5"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a1a22b1ad88b436661458df567f3fdb446392a4","aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","3241e06e642196396b80bb293acd9c0814d079e0"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"3241e06e642196396b80bb293acd9c0814d079e0":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}