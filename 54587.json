{"path":"src/java/org/apache/lucene/search/spans/NearSpansOrdered#next().mjava","commits":[{"id":"98bc22650ab0fe51f9c00513397bfa42a64fc663","date":1161986633,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/NearSpansOrdered#next().mjava","pathOld":"/dev/null","sourceNew":"  // inherit javadocs\n  public boolean next() throws IOException {\n    if (firstTime) {\n      firstTime = false;\n      for (int i = 0; i < subSpans.length; i++) {\n        if (! subSpans[i].next()) {\n          more = false;\n          return false;\n        }\n      }\n      more = true;\n    }\n    return advanceAfterOrdered();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd5947db4de866f035b932f219674c03562d904e","date":1219248396,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/NearSpansOrdered#next().mjava","pathOld":"src/java/org/apache/lucene/search/spans/NearSpansOrdered#next().mjava","sourceNew":"  // inherit javadocs\n  public boolean next() throws IOException {\n    if (firstTime) {\n      firstTime = false;\n      for (int i = 0; i < subSpans.length; i++) {\n        if (! subSpans[i].next()) {\n          more = false;\n          return false;\n        }\n      }\n      more = true;\n    }\n    matchPayload.clear();\n    return advanceAfterOrdered();\n  }\n\n","sourceOld":"  // inherit javadocs\n  public boolean next() throws IOException {\n    if (firstTime) {\n      firstTime = false;\n      for (int i = 0; i < subSpans.length; i++) {\n        if (! subSpans[i].next()) {\n          more = false;\n          return false;\n        }\n      }\n      more = true;\n    }\n    return advanceAfterOrdered();\n  }\n\n","bugFix":null,"bugIntro":["b00d44ccb616bf40482a9ba5302cb256c26c6e4c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b00d44ccb616bf40482a9ba5302cb256c26c6e4c","date":1249308735,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/NearSpansOrdered#next().mjava","pathOld":"src/java/org/apache/lucene/search/spans/NearSpansOrdered#next().mjava","sourceNew":"  // inherit javadocs\n  public boolean next() throws IOException {\n    if (firstTime) {\n      firstTime = false;\n      for (int i = 0; i < subSpans.length; i++) {\n        if (! subSpans[i].next()) {\n          more = false;\n          return false;\n        }\n      }\n      more = true;\n    }\n    if(collectPayloads) {\n      matchPayload.clear();\n    }\n    return advanceAfterOrdered();\n  }\n\n","sourceOld":"  // inherit javadocs\n  public boolean next() throws IOException {\n    if (firstTime) {\n      firstTime = false;\n      for (int i = 0; i < subSpans.length; i++) {\n        if (! subSpans[i].next()) {\n          more = false;\n          return false;\n        }\n      }\n      more = true;\n    }\n    matchPayload.clear();\n    return advanceAfterOrdered();\n  }\n\n","bugFix":["fd5947db4de866f035b932f219674c03562d904e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/spans/NearSpansOrdered#next().mjava","pathOld":"src/java/org/apache/lucene/search/spans/NearSpansOrdered#next().mjava","sourceNew":"  // inherit javadocs\n  @Override\n  public boolean next() throws IOException {\n    if (firstTime) {\n      firstTime = false;\n      for (int i = 0; i < subSpans.length; i++) {\n        if (! subSpans[i].next()) {\n          more = false;\n          return false;\n        }\n      }\n      more = true;\n    }\n    if(collectPayloads) {\n      matchPayload.clear();\n    }\n    return advanceAfterOrdered();\n  }\n\n","sourceOld":"  // inherit javadocs\n  public boolean next() throws IOException {\n    if (firstTime) {\n      firstTime = false;\n      for (int i = 0; i < subSpans.length; i++) {\n        if (! subSpans[i].next()) {\n          more = false;\n          return false;\n        }\n      }\n      more = true;\n    }\n    if(collectPayloads) {\n      matchPayload.clear();\n    }\n    return advanceAfterOrdered();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/spans/NearSpansOrdered#next().mjava","pathOld":"src/java/org/apache/lucene/search/spans/NearSpansOrdered#next().mjava","sourceNew":"  // inherit javadocs\n  @Override\n  public boolean next() throws IOException {\n    if (firstTime) {\n      firstTime = false;\n      for (int i = 0; i < subSpans.length; i++) {\n        if (! subSpans[i].next()) {\n          more = false;\n          return false;\n        }\n      }\n      more = true;\n    }\n    if(collectPayloads) {\n      matchPayload.clear();\n    }\n    return advanceAfterOrdered();\n  }\n\n","sourceOld":"  // inherit javadocs\n  @Override\n  public boolean next() throws IOException {\n    if (firstTime) {\n      firstTime = false;\n      for (int i = 0; i < subSpans.length; i++) {\n        if (! subSpans[i].next()) {\n          more = false;\n          return false;\n        }\n      }\n      more = true;\n    }\n    if(collectPayloads) {\n      matchPayload.clear();\n    }\n    return advanceAfterOrdered();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b00d44ccb616bf40482a9ba5302cb256c26c6e4c":["fd5947db4de866f035b932f219674c03562d904e"],"98bc22650ab0fe51f9c00513397bfa42a64fc663":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8a9e385641d717e641408d8fbbc62be8fc766357":["b00d44ccb616bf40482a9ba5302cb256c26c6e4c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd5947db4de866f035b932f219674c03562d904e":["98bc22650ab0fe51f9c00513397bfa42a64fc663"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"b00d44ccb616bf40482a9ba5302cb256c26c6e4c":["8a9e385641d717e641408d8fbbc62be8fc766357"],"98bc22650ab0fe51f9c00513397bfa42a64fc663":["fd5947db4de866f035b932f219674c03562d904e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["98bc22650ab0fe51f9c00513397bfa42a64fc663"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"fd5947db4de866f035b932f219674c03562d904e":["b00d44ccb616bf40482a9ba5302cb256c26c6e4c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}