{"path":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#advanceForExplainOnly(int).mjava","commits":[{"id":"b64a4420c88dd81303e7f7959057baf9f3b45f94","date":1346077333,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#advanceForExplainOnly(int).mjava","pathOld":"/dev/null","sourceNew":"    private int advanceForExplainOnly(int target) throws IOException {\n      int docId;\n      do {\n        docId = nextDoc();\n        if (docId < target) {\n          int tempDocId = docsEnum.advance(target);\n          if (tempDocId == target) {\n            docId = tempDocId;\n            break;\n          }\n        } else if (docId == target) {\n          break;\n        }\n        docsEnum = null; // goto the next ord.\n      } while (docId != DocIdSetIterator.NO_MORE_DOCS);\n      return docId;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#advanceForExplainOnly(int).mjava","pathOld":"/dev/null","sourceNew":"    private int advanceForExplainOnly(int target) throws IOException {\n      int docId;\n      do {\n        docId = nextDoc();\n        if (docId < target) {\n          int tempDocId = docsEnum.advance(target);\n          if (tempDocId == target) {\n            docId = tempDocId;\n            break;\n          }\n        } else if (docId == target) {\n          break;\n        }\n        docsEnum = null; // goto the next ord.\n      } while (docId != DocIdSetIterator.NO_MORE_DOCS);\n      return docId;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173","date":1365631993,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#advanceForExplainOnly(int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#advanceForExplainOnly(int).mjava","sourceNew":"    private int advanceForExplainOnly(int target) throws IOException {\n      int docId;\n      do {\n        docId = nextDocOutOfOrder();\n        if (docId < target) {\n          int tempDocId = docsEnum.advance(target);\n          if (tempDocId == target) {\n            docId = tempDocId;\n            break;\n          }\n        } else if (docId == target) {\n          break;\n        }\n        docsEnum = null; // goto the next ord.\n      } while (docId != DocIdSetIterator.NO_MORE_DOCS);\n      return docId;\n    }\n\n","sourceOld":"    private int advanceForExplainOnly(int target) throws IOException {\n      int docId;\n      do {\n        docId = nextDoc();\n        if (docId < target) {\n          int tempDocId = docsEnum.advance(target);\n          if (tempDocId == target) {\n            docId = tempDocId;\n            break;\n          }\n        } else if (docId == target) {\n          break;\n        }\n        docsEnum = null; // goto the next ord.\n      } while (docId != DocIdSetIterator.NO_MORE_DOCS);\n      return docId;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e18c86f811939bfa8cd24046c96ed026f2e9b34","date":1393893071,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#explain(int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#advanceForExplainOnly(int).mjava","sourceNew":"    private Explanation explain(int target) throws IOException {\n      int docId;\n      do {\n        docId = nextDocOutOfOrder();\n        if (docId < target) {\n          int tempDocId = docsEnum.advance(target);\n          if (tempDocId == target) {\n            docId = tempDocId;\n            break;\n          }\n        } else if (docId == target) {\n          break;\n        }\n        docsEnum = null; // goto the next ord.\n      } while (docId != DocIdSetIterator.NO_MORE_DOCS);\n\n      return new ComplexExplanation(true, scores[ords[scoreUpto]], \"Score based on join value \" + termsEnum.term().utf8ToString());\n    }\n\n","sourceOld":"    private int advanceForExplainOnly(int target) throws IOException {\n      int docId;\n      do {\n        docId = nextDocOutOfOrder();\n        if (docId < target) {\n          int tempDocId = docsEnum.advance(target);\n          if (tempDocId == target) {\n            docId = tempDocId;\n            break;\n          }\n        } else if (docId == target) {\n          break;\n        }\n        docsEnum = null; // goto the next ord.\n      } while (docId != DocIdSetIterator.NO_MORE_DOCS);\n      return docId;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acf00221f44c5f08ccea014f2492b53af15ecd66","date":1394568293,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#explain(int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#advanceForExplainOnly(int).mjava","sourceNew":"    private Explanation explain(int target) throws IOException {\n      int docId;\n      do {\n        docId = nextDocOutOfOrder();\n        if (docId < target) {\n          int tempDocId = docsEnum.advance(target);\n          if (tempDocId == target) {\n            docId = tempDocId;\n            break;\n          }\n        } else if (docId == target) {\n          break;\n        }\n        docsEnum = null; // goto the next ord.\n      } while (docId != DocIdSetIterator.NO_MORE_DOCS);\n\n      return new ComplexExplanation(true, scores[ords[scoreUpto]], \"Score based on join value \" + termsEnum.term().utf8ToString());\n    }\n\n","sourceOld":"    private int advanceForExplainOnly(int target) throws IOException {\n      int docId;\n      do {\n        docId = nextDocOutOfOrder();\n        if (docId < target) {\n          int tempDocId = docsEnum.advance(target);\n          if (tempDocId == target) {\n            docId = tempDocId;\n            break;\n          }\n        } else if (docId == target) {\n          break;\n        }\n        docsEnum = null; // goto the next ord.\n      } while (docId != DocIdSetIterator.NO_MORE_DOCS);\n      return docId;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173":["b64a4420c88dd81303e7f7959057baf9f3b45f94"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173","2e18c86f811939bfa8cd24046c96ed026f2e9b34"],"05a14b2611ead08655a2b2bdc61632eb31316e57":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b64a4420c88dd81303e7f7959057baf9f3b45f94"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"b64a4420c88dd81303e7f7959057baf9f3b45f94":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05a14b2611ead08655a2b2bdc61632eb31316e57","b64a4420c88dd81303e7f7959057baf9f3b45f94"],"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173":["2e18c86f811939bfa8cd24046c96ed026f2e9b34","acf00221f44c5f08ccea014f2492b53af15ecd66"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"b64a4420c88dd81303e7f7959057baf9f3b45f94":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173","05a14b2611ead08655a2b2bdc61632eb31316e57"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}