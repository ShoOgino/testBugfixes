{"path":"solr/core/src/java/org/apache/solr/core/RAMDirectoryFactory#exists(String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RAMDirectoryFactory#exists(String).mjava","pathOld":"solr/src/java/org/apache/solr/core/RAMDirectoryFactory#exists(String).mjava","sourceNew":"  @Override\n  public boolean exists(String path) {\n    synchronized (RAMDirectoryFactory.class) {\n      RefCntRamDirectory directory = directories.get(path);\n      if (directory == null || !directory.isOpen()) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean exists(String path) {\n    synchronized (RAMDirectoryFactory.class) {\n      RefCntRamDirectory directory = directories.get(path);\n      if (directory == null || !directory.isOpen()) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RAMDirectoryFactory#exists(String).mjava","pathOld":"solr/src/java/org/apache/solr/core/RAMDirectoryFactory#exists(String).mjava","sourceNew":"  @Override\n  public boolean exists(String path) {\n    synchronized (RAMDirectoryFactory.class) {\n      RefCntRamDirectory directory = directories.get(path);\n      if (directory == null || !directory.isOpen()) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean exists(String path) {\n    synchronized (RAMDirectoryFactory.class) {\n      RefCntRamDirectory directory = directories.get(path);\n      if (directory == null || !directory.isOpen()) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/RAMDirectoryFactory#exists(String).mjava","pathOld":"solr/src/java/org/apache/solr/core/RAMDirectoryFactory#exists(String).mjava","sourceNew":"  @Override\n  public boolean exists(String path) {\n    synchronized (RAMDirectoryFactory.class) {\n      RefCntRamDirectory directory = directories.get(path);\n      if (directory == null || !directory.isOpen()) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean exists(String path) {\n    synchronized (RAMDirectoryFactory.class) {\n      RefCntRamDirectory directory = directories.get(path);\n      if (directory == null || !directory.isOpen()) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e22ffe8cc51a892ae103df018822d7873e901c2a","date":1313696790,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RAMDirectoryFactory#exists(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/RAMDirectoryFactory#exists(String).mjava","sourceNew":"  @Override\n  public boolean exists(String path) {\n    String fullPath = new File(path).getAbsolutePath();\n    synchronized (DirectoryFactory.class) {\n      CacheValue cacheValue = byPathCache.get(fullPath);\n      Directory directory = null;\n      if (cacheValue != null) {\n        directory = cacheValue.directory;\n      }\n      if (directory == null) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean exists(String path) {\n    synchronized (RAMDirectoryFactory.class) {\n      RefCntRamDirectory directory = directories.get(path);\n      if (directory == null || !directory.isOpen()) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n\n","bugFix":["ec10d7f440570f813952960ef905138a95114a45","b2de4fce4f00c1fd8ccf5d361b57f970d8be986e"],"bugIntro":["9ccb4c3e605204023927d82828f0d09208be3319","1b9ba9bf38fb09b392a86a15ce4ff88440f3acb9","1b9ba9bf38fb09b392a86a15ce4ff88440f3acb9"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9ccb4c3e605204023927d82828f0d09208be3319","date":1348614134,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/RAMDirectoryFactory#exists(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/RAMDirectoryFactory#exists(String).mjava","sourceNew":"  @Override\n  public boolean exists(String path) {\n    String fullPath = new File(path).getAbsolutePath();\n    synchronized (this) {\n      CacheValue cacheValue = byPathCache.get(fullPath);\n      Directory directory = null;\n      if (cacheValue != null) {\n        directory = cacheValue.directory;\n      }\n      if (directory == null) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean exists(String path) {\n    String fullPath = new File(path).getAbsolutePath();\n    synchronized (DirectoryFactory.class) {\n      CacheValue cacheValue = byPathCache.get(fullPath);\n      Directory directory = null;\n      if (cacheValue != null) {\n        directory = cacheValue.directory;\n      }\n      if (directory == null) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n\n","bugFix":["e22ffe8cc51a892ae103df018822d7873e901c2a"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d9405f486872f1e416304dfe389741f4ee2f8a4d","date":1351276739,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/EphemeralDirectoryFactory#exists(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/RAMDirectoryFactory#exists(String).mjava","sourceNew":"  @Override\n  public boolean exists(String path) {\n    String fullPath = new File(path).getAbsolutePath();\n    synchronized (this) {\n      CacheValue cacheValue = byPathCache.get(fullPath);\n      Directory directory = null;\n      if (cacheValue != null) {\n        directory = cacheValue.directory;\n      }\n      if (directory == null) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean exists(String path) {\n    String fullPath = new File(path).getAbsolutePath();\n    synchronized (this) {\n      CacheValue cacheValue = byPathCache.get(fullPath);\n      Directory directory = null;\n      if (cacheValue != null) {\n        directory = cacheValue.directory;\n      }\n      if (directory == null) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/EphemeralDirectoryFactory#exists(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/RAMDirectoryFactory#exists(String).mjava","sourceNew":"  @Override\n  public boolean exists(String path) {\n    String fullPath = new File(path).getAbsolutePath();\n    synchronized (this) {\n      CacheValue cacheValue = byPathCache.get(fullPath);\n      Directory directory = null;\n      if (cacheValue != null) {\n        directory = cacheValue.directory;\n      }\n      if (directory == null) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public boolean exists(String path) {\n    String fullPath = new File(path).getAbsolutePath();\n    synchronized (this) {\n      CacheValue cacheValue = byPathCache.get(fullPath);\n      Directory directory = null;\n      if (cacheValue != null) {\n        directory = cacheValue.directory;\n      }\n      if (directory == null) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ccb4c3e605204023927d82828f0d09208be3319":["e22ffe8cc51a892ae103df018822d7873e901c2a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["9ccb4c3e605204023927d82828f0d09208be3319"],"f2126b84bd093fa3d921582a109a0ee578c28126":["9ccb4c3e605204023927d82828f0d09208be3319","d9405f486872f1e416304dfe389741f4ee2f8a4d"],"e22ffe8cc51a892ae103df018822d7873e901c2a":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d9405f486872f1e416304dfe389741f4ee2f8a4d"]},"commit2Childs":{"9ccb4c3e605204023927d82828f0d09208be3319":["d9405f486872f1e416304dfe389741f4ee2f8a4d","f2126b84bd093fa3d921582a109a0ee578c28126"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["e22ffe8cc51a892ae103df018822d7873e901c2a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"e22ffe8cc51a892ae103df018822d7873e901c2a":["9ccb4c3e605204023927d82828f0d09208be3319"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}