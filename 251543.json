{"path":"solr/core/src/java/org/apache/solr/update/HdfsUpdateLog#dropBufferedUpdates().mjava","commits":[{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/HdfsUpdateLog#dropBufferedUpdates().mjava","pathOld":"/dev/null","sourceNew":"  // HACK\n  // while waiting for HDFS-3107, instead of quickly\n  // dropping, we slowly apply\n  // This is somewhat brittle, but current usage\n  // allows for it\n  @Override\n  public boolean dropBufferedUpdates() {\n    Future<RecoveryInfo> future = applyBufferedUpdates();\n    if (future != null) {\n      try {\n        future.get();\n      } catch (InterruptedException e) {\n        throw new RuntimeException(e);\n      } catch (ExecutionException e) {\n        throw new RuntimeException(e);\n      }\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["544e751ea8abe820efa92de64e989a80f837a506"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/HdfsUpdateLog#dropBufferedUpdates().mjava","pathOld":"/dev/null","sourceNew":"  // HACK\n  // while waiting for HDFS-3107, instead of quickly\n  // dropping, we slowly apply\n  // This is somewhat brittle, but current usage\n  // allows for it\n  @Override\n  public boolean dropBufferedUpdates() {\n    Future<RecoveryInfo> future = applyBufferedUpdates();\n    if (future != null) {\n      try {\n        future.get();\n      } catch (InterruptedException e) {\n        throw new RuntimeException(e);\n      } catch (ExecutionException e) {\n        throw new RuntimeException(e);\n      }\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6e1dc1bb4254226c8d7151b596cc1be40671751","date":1421876355,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/HdfsUpdateLog#dropBufferedUpdates().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/HdfsUpdateLog#dropBufferedUpdates().mjava","sourceNew":"  // HACK\n  // while waiting for HDFS-3107, instead of quickly\n  // dropping, we slowly apply\n  // This is somewhat brittle, but current usage\n  // allows for it\n  @Override\n  public boolean dropBufferedUpdates() {\n    Future<RecoveryInfo> future = applyBufferedUpdates();\n    if (future != null) {\n      try {\n        future.get();\n      } catch (InterruptedException | ExecutionException e) {\n        throw new RuntimeException(e);\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  // HACK\n  // while waiting for HDFS-3107, instead of quickly\n  // dropping, we slowly apply\n  // This is somewhat brittle, but current usage\n  // allows for it\n  @Override\n  public boolean dropBufferedUpdates() {\n    Future<RecoveryInfo> future = applyBufferedUpdates();\n    if (future != null) {\n      try {\n        future.get();\n      } catch (InterruptedException e) {\n        throw new RuntimeException(e);\n      } catch (ExecutionException e) {\n        throw new RuntimeException(e);\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":["544e751ea8abe820efa92de64e989a80f837a506"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"544e751ea8abe820efa92de64e989a80f837a506","date":1443966851,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/HdfsUpdateLog#dropBufferedUpdates().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/HdfsUpdateLog#dropBufferedUpdates().mjava","sourceNew":"  // HACK\n  // while waiting for HDFS-3107, instead of quickly\n  // dropping, we slowly apply\n  // This is somewhat brittle, but current usage\n  // allows for it\n  @Override\n  public boolean dropBufferedUpdates() {\n    versionInfo.blockUpdates();\n    try {\n      if (state != State.BUFFERING) return false;\n      \n      if (log.isInfoEnabled()) {\n        log.info(\"Dropping buffered updates \" + this);\n      }\n      \n      // since we blocked updates, this synchronization shouldn't strictly be\n      // necessary.\n      synchronized (this) {\n        if (tlog != null) {\n          // tlog.rollback(recoveryInfo.positionOfStart);\n        }\n      }\n      \n      state = State.ACTIVE;\n      operationFlags &= ~FLAG_GAP;\n    } finally {\n      versionInfo.unblockUpdates();\n    }\n    return true;\n  }\n\n","sourceOld":"  // HACK\n  // while waiting for HDFS-3107, instead of quickly\n  // dropping, we slowly apply\n  // This is somewhat brittle, but current usage\n  // allows for it\n  @Override\n  public boolean dropBufferedUpdates() {\n    Future<RecoveryInfo> future = applyBufferedUpdates();\n    if (future != null) {\n      try {\n        future.get();\n      } catch (InterruptedException | ExecutionException e) {\n        throw new RuntimeException(e);\n      }\n    }\n    return true;\n  }\n\n","bugFix":["c6e1dc1bb4254226c8d7151b596cc1be40671751","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1455c941cc4ce652efc776fc23471b0e499246f6","date":1528086751,"type":4,"author":"Cao Manh Dat","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/HdfsUpdateLog#dropBufferedUpdates().mjava","sourceNew":null,"sourceOld":"  // HACK\n  // while waiting for HDFS-3107, instead of quickly\n  // dropping, we slowly apply\n  // This is somewhat brittle, but current usage\n  // allows for it\n  @Override\n  public boolean dropBufferedUpdates() {\n    versionInfo.blockUpdates();\n    try {\n      if (state != State.BUFFERING) return false;\n      \n      if (log.isInfoEnabled()) {\n        log.info(\"Dropping buffered updates \" + this);\n      }\n      \n      // since we blocked updates, this synchronization shouldn't strictly be\n      // necessary.\n      synchronized (this) {\n        if (tlog != null) {\n          // tlog.rollback(recoveryInfo.positionOfStart);\n        }\n      }\n      \n      state = State.ACTIVE;\n      operationFlags &= ~FLAG_GAP;\n    } finally {\n      versionInfo.unblockUpdates();\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":4,"author":"Michael Braun","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/HdfsUpdateLog#dropBufferedUpdates().mjava","sourceNew":null,"sourceOld":"  // HACK\n  // while waiting for HDFS-3107, instead of quickly\n  // dropping, we slowly apply\n  // This is somewhat brittle, but current usage\n  // allows for it\n  @Override\n  public boolean dropBufferedUpdates() {\n    versionInfo.blockUpdates();\n    try {\n      if (state != State.BUFFERING) return false;\n      \n      if (log.isInfoEnabled()) {\n        log.info(\"Dropping buffered updates \" + this);\n      }\n      \n      // since we blocked updates, this synchronization shouldn't strictly be\n      // necessary.\n      synchronized (this) {\n        if (tlog != null) {\n          // tlog.rollback(recoveryInfo.positionOfStart);\n        }\n      }\n      \n      state = State.ACTIVE;\n      operationFlags &= ~FLAG_GAP;\n    } finally {\n      versionInfo.unblockUpdates();\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/HdfsUpdateLog#dropBufferedUpdates().mjava","sourceNew":null,"sourceOld":"  // HACK\n  // while waiting for HDFS-3107, instead of quickly\n  // dropping, we slowly apply\n  // This is somewhat brittle, but current usage\n  // allows for it\n  @Override\n  public boolean dropBufferedUpdates() {\n    versionInfo.blockUpdates();\n    try {\n      if (state != State.BUFFERING) return false;\n      \n      if (log.isInfoEnabled()) {\n        log.info(\"Dropping buffered updates \" + this);\n      }\n      \n      // since we blocked updates, this synchronization shouldn't strictly be\n      // necessary.\n      synchronized (this) {\n        if (tlog != null) {\n          // tlog.rollback(recoveryInfo.positionOfStart);\n        }\n      }\n      \n      state = State.ACTIVE;\n      operationFlags &= ~FLAG_GAP;\n    } finally {\n      versionInfo.unblockUpdates();\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c6e1dc1bb4254226c8d7151b596cc1be40671751":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"544e751ea8abe820efa92de64e989a80f837a506":["c6e1dc1bb4254226c8d7151b596cc1be40671751"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["544e751ea8abe820efa92de64e989a80f837a506","1455c941cc4ce652efc776fc23471b0e499246f6"],"f592209545c71895260367152601e9200399776d":["544e751ea8abe820efa92de64e989a80f837a506","1455c941cc4ce652efc776fc23471b0e499246f6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1455c941cc4ce652efc776fc23471b0e499246f6"],"1455c941cc4ce652efc776fc23471b0e499246f6":["544e751ea8abe820efa92de64e989a80f837a506"]},"commit2Childs":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["c6e1dc1bb4254226c8d7151b596cc1be40671751","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"c6e1dc1bb4254226c8d7151b596cc1be40671751":["544e751ea8abe820efa92de64e989a80f837a506"],"544e751ea8abe820efa92de64e989a80f837a506":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","1455c941cc4ce652efc776fc23471b0e499246f6"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["849494cf2f3a96af5c8c84995108ddd8456fcd04","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"f592209545c71895260367152601e9200399776d":[],"1455c941cc4ce652efc776fc23471b0e499246f6":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}