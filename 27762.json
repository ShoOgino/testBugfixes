{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#updateIncludeFileDisableAuth(File).mjava","commits":[{"id":"f5eb842cfee458c37a15154f49502a6a00fc662f","date":1494313961,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#updateIncludeFileDisableAuth(File).mjava","pathOld":"/dev/null","sourceNew":"    private void updateIncludeFileDisableAuth(File includeFile) throws IOException {\n      List<String> includeFileLines = FileUtils.readLines(includeFile, StandardCharsets.UTF_8);\n      boolean hasChanged = false;\n      for (int i=0; i<includeFileLines.size(); i++) {\n        String line = includeFileLines.get(i);\n        if (authenticationVariables.contains(line.trim().split(\"=\")[0].trim())) { // Non-Windows\n          includeFileLines.set(i, \"# \" + line);\n          hasChanged = true;\n        }\n        if (line.trim().split(\"=\")[0].trim().startsWith(\"set \")\n            && authenticationVariables.contains(line.trim().split(\"=\")[0].trim().substring(4))) { // Windows\n          includeFileLines.set(i, \"REM \" + line);\n          hasChanged = true;\n        }\n      }\n      if (hasChanged) {\n        FileUtils.writeLines(includeFile, StandardCharsets.UTF_8.name(), includeFileLines);\n        System.out.println(\"Commented out necessary lines from \" + includeFile.getAbsolutePath());\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#updateIncludeFileDisableAuth(File).mjava","pathOld":"/dev/null","sourceNew":"    private void updateIncludeFileDisableAuth(File includeFile) throws IOException {\n      List<String> includeFileLines = FileUtils.readLines(includeFile, StandardCharsets.UTF_8);\n      boolean hasChanged = false;\n      for (int i=0; i<includeFileLines.size(); i++) {\n        String line = includeFileLines.get(i);\n        if (authenticationVariables.contains(line.trim().split(\"=\")[0].trim())) { // Non-Windows\n          includeFileLines.set(i, \"# \" + line);\n          hasChanged = true;\n        }\n        if (line.trim().split(\"=\")[0].trim().startsWith(\"set \")\n            && authenticationVariables.contains(line.trim().split(\"=\")[0].trim().substring(4))) { // Windows\n          includeFileLines.set(i, \"REM \" + line);\n          hasChanged = true;\n        }\n      }\n      if (hasChanged) {\n        FileUtils.writeLines(includeFile, StandardCharsets.UTF_8.name(), includeFileLines);\n        System.out.println(\"Commented out necessary lines from \" + includeFile.getAbsolutePath());\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86d2df3ca94d97c62f70b0d321f5f597de2d3eb3","date":1503399053,"type":5,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#updateIncludeFileDisableAuth(File,CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#updateIncludeFileDisableAuth(File).mjava","sourceNew":"    private void updateIncludeFileDisableAuth(File includeFile, CommandLine cli) throws IOException {\n      List<String> includeFileLines = FileUtils.readLines(includeFile, StandardCharsets.UTF_8);\n      boolean hasChanged = false;\n      for (int i=0; i<includeFileLines.size(); i++) {\n        String line = includeFileLines.get(i);\n        if (authenticationVariables.contains(line.trim().split(\"=\")[0].trim())) { // Non-Windows\n          includeFileLines.set(i, \"# \" + line);\n          hasChanged = true;\n        }\n        if (line.trim().split(\"=\")[0].trim().startsWith(\"set \")\n            && authenticationVariables.contains(line.trim().split(\"=\")[0].trim().substring(4))) { // Windows\n          includeFileLines.set(i, \"REM \" + line);\n          hasChanged = true;\n        }\n      }\n      if (hasChanged) {\n        FileUtils.writeLines(includeFile, StandardCharsets.UTF_8.name(), includeFileLines);\n        echoIfVerbose(\"Commented out necessary lines from \" + includeFile.getAbsolutePath(), cli);\n      }\n    }\n\n","sourceOld":"    private void updateIncludeFileDisableAuth(File includeFile) throws IOException {\n      List<String> includeFileLines = FileUtils.readLines(includeFile, StandardCharsets.UTF_8);\n      boolean hasChanged = false;\n      for (int i=0; i<includeFileLines.size(); i++) {\n        String line = includeFileLines.get(i);\n        if (authenticationVariables.contains(line.trim().split(\"=\")[0].trim())) { // Non-Windows\n          includeFileLines.set(i, \"# \" + line);\n          hasChanged = true;\n        }\n        if (line.trim().split(\"=\")[0].trim().startsWith(\"set \")\n            && authenticationVariables.contains(line.trim().split(\"=\")[0].trim().substring(4))) { // Windows\n          includeFileLines.set(i, \"REM \" + line);\n          hasChanged = true;\n        }\n      }\n      if (hasChanged) {\n        FileUtils.writeLines(includeFile, StandardCharsets.UTF_8.name(), includeFileLines);\n        System.out.println(\"Commented out necessary lines from \" + includeFile.getAbsolutePath());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":5,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#updateIncludeFileDisableAuth(File,CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.AuthTool#updateIncludeFileDisableAuth(File).mjava","sourceNew":"    private void updateIncludeFileDisableAuth(File includeFile, CommandLine cli) throws IOException {\n      List<String> includeFileLines = FileUtils.readLines(includeFile, StandardCharsets.UTF_8);\n      boolean hasChanged = false;\n      for (int i=0; i<includeFileLines.size(); i++) {\n        String line = includeFileLines.get(i);\n        if (authenticationVariables.contains(line.trim().split(\"=\")[0].trim())) { // Non-Windows\n          includeFileLines.set(i, \"# \" + line);\n          hasChanged = true;\n        }\n        if (line.trim().split(\"=\")[0].trim().startsWith(\"set \")\n            && authenticationVariables.contains(line.trim().split(\"=\")[0].trim().substring(4))) { // Windows\n          includeFileLines.set(i, \"REM \" + line);\n          hasChanged = true;\n        }\n      }\n      if (hasChanged) {\n        FileUtils.writeLines(includeFile, StandardCharsets.UTF_8.name(), includeFileLines);\n        echoIfVerbose(\"Commented out necessary lines from \" + includeFile.getAbsolutePath(), cli);\n      }\n    }\n\n","sourceOld":"    private void updateIncludeFileDisableAuth(File includeFile) throws IOException {\n      List<String> includeFileLines = FileUtils.readLines(includeFile, StandardCharsets.UTF_8);\n      boolean hasChanged = false;\n      for (int i=0; i<includeFileLines.size(); i++) {\n        String line = includeFileLines.get(i);\n        if (authenticationVariables.contains(line.trim().split(\"=\")[0].trim())) { // Non-Windows\n          includeFileLines.set(i, \"# \" + line);\n          hasChanged = true;\n        }\n        if (line.trim().split(\"=\")[0].trim().startsWith(\"set \")\n            && authenticationVariables.contains(line.trim().split(\"=\")[0].trim().substring(4))) { // Windows\n          includeFileLines.set(i, \"REM \" + line);\n          hasChanged = true;\n        }\n      }\n      if (hasChanged) {\n        FileUtils.writeLines(includeFile, StandardCharsets.UTF_8.name(), includeFileLines);\n        System.out.println(\"Commented out necessary lines from \" + includeFile.getAbsolutePath());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f5eb842cfee458c37a15154f49502a6a00fc662f"],"f5eb842cfee458c37a15154f49502a6a00fc662f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["e9017cf144952056066919f1ebc7897ff9bd71b1","86d2df3ca94d97c62f70b0d321f5f597de2d3eb3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"86d2df3ca94d97c62f70b0d321f5f597de2d3eb3":["f5eb842cfee458c37a15154f49502a6a00fc662f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["86d2df3ca94d97c62f70b0d321f5f597de2d3eb3"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["3a7809d1d753b67f48b1a706e17034bf8b624ea3"],"f5eb842cfee458c37a15154f49502a6a00fc662f":["e9017cf144952056066919f1ebc7897ff9bd71b1","86d2df3ca94d97c62f70b0d321f5f597de2d3eb3"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","f5eb842cfee458c37a15154f49502a6a00fc662f"],"86d2df3ca94d97c62f70b0d321f5f597de2d3eb3":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}