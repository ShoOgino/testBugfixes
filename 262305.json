{"path":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#advance(int).mjava","commits":[{"id":"77855215e331ce146763531cb9b0c050726f6ae5","date":1338323851,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#advance(int).mjava","pathOld":"/dev/null","sourceNew":"    public int advance(int target) throws IOException {\n      int docId;\n      do {\n        docId = nextDoc();\n        if (docId < target) {\n          int tempDocId = docsEnum.advance(target);\n          if (tempDocId == target) {\n            docId = tempDocId;\n            break;\n          }\n        } else if (docId == target) {\n          break;\n        }\n        docsEnum = null; // goto the next ord.\n      } while (docId != DocIdSetIterator.NO_MORE_DOCS);\n      return docId;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b64a4420c88dd81303e7f7959057baf9f3b45f94","date":1346077333,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#advance(int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#advance(int).mjava","sourceNew":"    public int advance(int target) throws IOException {\n      throw new UnsupportedOperationException(\"advance() isn't supported because doc ids are emitted out of order\");\n    }\n\n","sourceOld":"    public int advance(int target) throws IOException {\n      int docId;\n      do {\n        docId = nextDoc();\n        if (docId < target) {\n          int tempDocId = docsEnum.advance(target);\n          if (tempDocId == target) {\n            docId = tempDocId;\n            break;\n          }\n        } else if (docId == target) {\n          break;\n        }\n        docsEnum = null; // goto the next ord.\n      } while (docId != DocIdSetIterator.NO_MORE_DOCS);\n      return docId;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#advance(int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#advance(int).mjava","sourceNew":"    public int advance(int target) throws IOException {\n      throw new UnsupportedOperationException(\"advance() isn't supported because doc ids are emitted out of order\");\n    }\n\n","sourceOld":"    public int advance(int target) throws IOException {\n      int docId;\n      do {\n        docId = nextDoc();\n        if (docId < target) {\n          int tempDocId = docsEnum.advance(target);\n          if (tempDocId == target) {\n            docId = tempDocId;\n            break;\n          }\n        } else if (docId == target) {\n          break;\n        }\n        docsEnum = null; // goto the next ord.\n      } while (docId != DocIdSetIterator.NO_MORE_DOCS);\n      return docId;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#advance(int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#advance(int).mjava","sourceNew":"    @Override\n    public int advance(int target) throws IOException {\n      throw new UnsupportedOperationException(\"advance() isn't supported because doc ids are emitted out of order\");\n    }\n\n","sourceOld":"    public int advance(int target) throws IOException {\n      throw new UnsupportedOperationException(\"advance() isn't supported because doc ids are emitted out of order\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#advance(int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#advance(int).mjava","sourceNew":"    @Override\n    public int advance(int target) throws IOException {\n      throw new UnsupportedOperationException(\"advance() isn't supported because doc ids are emitted out of order\");\n    }\n\n","sourceOld":"    public int advance(int target) throws IOException {\n      throw new UnsupportedOperationException(\"advance() isn't supported because doc ids are emitted out of order\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e18c86f811939bfa8cd24046c96ed026f2e9b34","date":1393893071,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#advance(int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public int advance(int target) throws IOException {\n      throw new UnsupportedOperationException(\"advance() isn't supported because doc ids are emitted out of order\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acf00221f44c5f08ccea014f2492b53af15ecd66","date":1394568293,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#advance(int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public int advance(int target) throws IOException {\n      throw new UnsupportedOperationException(\"advance() isn't supported because doc ids are emitted out of order\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["7530de27b87b961b51f01bd1299b7004d46e8823"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b64a4420c88dd81303e7f7959057baf9f3b45f94","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77855215e331ce146763531cb9b0c050726f6ae5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["7530de27b87b961b51f01bd1299b7004d46e8823","2e18c86f811939bfa8cd24046c96ed026f2e9b34"],"05a14b2611ead08655a2b2bdc61632eb31316e57":["77855215e331ce146763531cb9b0c050726f6ae5","b64a4420c88dd81303e7f7959057baf9f3b45f94"],"7530de27b87b961b51f01bd1299b7004d46e8823":["b64a4420c88dd81303e7f7959057baf9f3b45f94"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"b64a4420c88dd81303e7f7959057baf9f3b45f94":["77855215e331ce146763531cb9b0c050726f6ae5"]},"commit2Childs":{"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["77855215e331ce146763531cb9b0c050726f6ae5"],"77855215e331ce146763531cb9b0c050726f6ae5":["05a14b2611ead08655a2b2bdc61632eb31316e57","b64a4420c88dd81303e7f7959057baf9f3b45f94"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["2e18c86f811939bfa8cd24046c96ed026f2e9b34","d3fcb70cf561547c7bb1506e0cf32ca7b1287064","acf00221f44c5f08ccea014f2492b53af15ecd66"],"b64a4420c88dd81303e7f7959057baf9f3b45f94":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","05a14b2611ead08655a2b2bdc61632eb31316e57","7530de27b87b961b51f01bd1299b7004d46e8823"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}