{"path":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/WeightedFragListBuilderTest#testCase(Query,int,String,double).mjava","commits":[{"id":"3f678348ac6e145f874f56992e8c0f78a1ff3c46","date":1385743501,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/WeightedFragListBuilderTest#testCase(Query,int,String,double).mjava","pathOld":"/dev/null","sourceNew":"  private void testCase( Query query, int fragCharSize, String expectedFragInfo,\n      double expectedTotalSubInfoBoost ) throws Exception {\n    makeIndexLongMV();\n\n    FieldQuery fq = new FieldQuery( query, true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    WeightedFragListBuilder wflb = new WeightedFragListBuilder();\n    FieldFragList ffl = wflb.createFieldFragList( fpl, fragCharSize );\n    assertEquals( 1, ffl.getFragInfos().size() );\n    assertEquals( expectedFragInfo, ffl.getFragInfos().get( 0 ).toString() );\n\n    float totalSubInfoBoost = 0;\n    for ( WeightedFragInfo info : ffl.getFragInfos() ) {\n      for ( SubInfo subInfo : info.getSubInfos() ) {\n        totalSubInfoBoost += subInfo.getBoost();\n      }\n    }\n    assertEquals( expectedTotalSubInfoBoost, totalSubInfoBoost, .0000001 );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/WeightedFragListBuilderTest#testCase(Query,int,String,double).mjava","pathOld":"/dev/null","sourceNew":"  private void testCase( Query query, int fragCharSize, String expectedFragInfo,\n      double expectedTotalSubInfoBoost ) throws Exception {\n    makeIndexLongMV();\n\n    FieldQuery fq = new FieldQuery( query, true, true );\n    FieldTermStack stack = new FieldTermStack( reader, 0, F, fq );\n    FieldPhraseList fpl = new FieldPhraseList( stack, fq );\n    WeightedFragListBuilder wflb = new WeightedFragListBuilder();\n    FieldFragList ffl = wflb.createFieldFragList( fpl, fragCharSize );\n    assertEquals( 1, ffl.getFragInfos().size() );\n    assertEquals( expectedFragInfo, ffl.getFragInfos().get( 0 ).toString() );\n\n    float totalSubInfoBoost = 0;\n    for ( WeightedFragInfo info : ffl.getFragInfos() ) {\n      for ( SubInfo subInfo : info.getSubInfos() ) {\n        totalSubInfoBoost += subInfo.getBoost();\n      }\n    }\n    assertEquals( expectedTotalSubInfoBoost, totalSubInfoBoost, .0000001 );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f678348ac6e145f874f56992e8c0f78a1ff3c46":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3f678348ac6e145f874f56992e8c0f78a1ff3c46"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f678348ac6e145f874f56992e8c0f78a1ff3c46"]},"commit2Childs":{"3f678348ac6e145f874f56992e8c0f78a1ff3c46":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3f678348ac6e145f874f56992e8c0f78a1ff3c46","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}