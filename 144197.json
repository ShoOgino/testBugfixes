{"path":"solr/core/src/java/org/apache/solr/update/TimedVersionBucket#[T,R]_runWithLock(int,CheckedFunction[T,R]).mjava","commits":[{"id":"9b3824fcbd3256db359391630ae05b3917ab369a","date":1556656304,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/TimedVersionBucket#[T,R]_runWithLock(int,CheckedFunction[T,R]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * This will run the function with the lock. It will throw exception if it can't obtain the lock within\n   * <code>lockTimeoutMs</code>.\n   */\n  @Override\n  public <T,R> R runWithLock(int lockTimeoutMs, CheckedFunction<T,R> function) throws IOException {\n    if (tryLock(lockTimeoutMs)) {\n      return function.apply();\n    } else {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"Unable to get version bucket lock in \" + lockTimeoutMs + \" ms\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9b3824fcbd3256db359391630ae05b3917ab369a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9b3824fcbd3256db359391630ae05b3917ab369a"]},"commit2Childs":{"9b3824fcbd3256db359391630ae05b3917ab369a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9b3824fcbd3256db359391630ae05b3917ab369a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}