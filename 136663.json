{"path":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","commits":[{"id":"d3c3c2404d1200c39220fa15054fae854db4e1ee","date":1140827958,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","pathOld":"/dev/null","sourceNew":"\t/*\r\n\t * @see TestCase#setUp()\r\n\t */\r\n\tprotected void setUp() throws Exception {\r\n\t\tsuper.setUp();\r\n\t\t\r\n\t\t//initialize the parser\r\n\t\tbuilder=new CorePlusExtensionsParser(analyzer,new QueryParser(\"contents\", analyzer));\r\n\t\t\r\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\r\n\t\tif(dir==null)\r\n\t\t{\r\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \r\n\t\t\tdir=new RAMDirectory();\r\n\t\t\tIndexWriter writer=new IndexWriter(dir,analyzer,true);\r\n\t\t\tString line = d.readLine();\t\t\r\n\t\t\twhile(line!=null)\r\n\t\t\t{\r\n\t\t\t\tint endOfDate=line.indexOf('\\t');\r\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\r\n\t\t\t\tString content=line.substring(endOfDate).trim();\r\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\r\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.TOKENIZED));\r\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.TOKENIZED));\r\n\t\t\t\twriter.addDocument(doc);\r\n\t\t\t\tline=d.readLine();\r\n\t\t\t}\t\t\t\r\n\t\t\td.close();\r\n\t\t}\r\n\t\treader=IndexReader.open(dir);\r\n\t\tsearcher=new IndexSearcher(reader);\r\n\t\t\r\n\t}\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4350b17bd363cd13a95171b8df1ca62ea4c3e71c","date":1183562198,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","pathOld":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t/*\r\n\t * @see TestCase#setUp()\r\n\t */\r\n\tprotected void setUp() throws Exception {\r\n\t\tsuper.setUp();\r\n\t\t\r\n\t\t//initialize the parser\r\n\t\tbuilder=new CorePlusExtensionsParser(analyzer,new QueryParser(\"contents\", analyzer));\r\n\t\t\r\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\r\n\t\tif(dir==null)\r\n\t\t{\r\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \r\n\t\t\tdir=new RAMDirectory();\r\n\t\t\tIndexWriter writer=new IndexWriter(dir,analyzer,true);\r\n\t\t\tString line = d.readLine();\t\t\r\n\t\t\twhile(line!=null)\r\n\t\t\t{\r\n\t\t\t\tint endOfDate=line.indexOf('\\t');\r\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\r\n\t\t\t\tString content=line.substring(endOfDate).trim();\r\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\r\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.TOKENIZED));\r\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.TOKENIZED));\r\n\t\t\t\twriter.addDocument(doc);\r\n\t\t\t\tline=d.readLine();\r\n\t\t\t}\t\t\t\r\n\t\t\td.close();\r\n                        writer.close();\r\n\t\t}\r\n\t\treader=IndexReader.open(dir);\r\n\t\tsearcher=new IndexSearcher(reader);\r\n\t\t\r\n\t}\r\n\n","sourceOld":"\t/*\r\n\t * @see TestCase#setUp()\r\n\t */\r\n\tprotected void setUp() throws Exception {\r\n\t\tsuper.setUp();\r\n\t\t\r\n\t\t//initialize the parser\r\n\t\tbuilder=new CorePlusExtensionsParser(analyzer,new QueryParser(\"contents\", analyzer));\r\n\t\t\r\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\r\n\t\tif(dir==null)\r\n\t\t{\r\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \r\n\t\t\tdir=new RAMDirectory();\r\n\t\t\tIndexWriter writer=new IndexWriter(dir,analyzer,true);\r\n\t\t\tString line = d.readLine();\t\t\r\n\t\t\twhile(line!=null)\r\n\t\t\t{\r\n\t\t\t\tint endOfDate=line.indexOf('\\t');\r\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\r\n\t\t\t\tString content=line.substring(endOfDate).trim();\r\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\r\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.TOKENIZED));\r\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.TOKENIZED));\r\n\t\t\t\twriter.addDocument(doc);\r\n\t\t\t\tline=d.readLine();\r\n\t\t\t}\t\t\t\r\n\t\t\td.close();\r\n\t\t}\r\n\t\treader=IndexReader.open(dir);\r\n\t\tsearcher=new IndexSearcher(reader);\r\n\t\t\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"82632e9d88b0fa1aa99de5b6dbba336eaca33fae","date":1203287578,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","pathOld":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t/*\r\n\t * @see TestCase#setUp()\r\n\t */\r\n\tprotected void setUp() throws Exception {\r\n\t\tsuper.setUp();\r\n\t\t\r\n\t\t//initialize the parser\r\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\r\n\t\t\r\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\r\n\t\tif(dir==null)\r\n\t\t{\r\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \r\n\t\t\tdir=new RAMDirectory();\r\n\t\t\tIndexWriter writer=new IndexWriter(dir,analyzer,true);\r\n\t\t\tString line = d.readLine();\t\t\r\n\t\t\twhile(line!=null)\r\n\t\t\t{\r\n\t\t\t\tint endOfDate=line.indexOf('\\t');\r\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\r\n\t\t\t\tString content=line.substring(endOfDate).trim();\r\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\r\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.TOKENIZED));\r\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.TOKENIZED));\r\n\t\t\t\twriter.addDocument(doc);\r\n\t\t\t\tline=d.readLine();\r\n\t\t\t}\t\t\t\r\n\t\t\td.close();\r\n                        writer.close();\r\n\t\t}\r\n\t\treader=IndexReader.open(dir);\r\n\t\tsearcher=new IndexSearcher(reader);\r\n\t\t\r\n\t}\r\n\n","sourceOld":"\t/*\r\n\t * @see TestCase#setUp()\r\n\t */\r\n\tprotected void setUp() throws Exception {\r\n\t\tsuper.setUp();\r\n\t\t\r\n\t\t//initialize the parser\r\n\t\tbuilder=new CorePlusExtensionsParser(analyzer,new QueryParser(\"contents\", analyzer));\r\n\t\t\r\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\r\n\t\tif(dir==null)\r\n\t\t{\r\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \r\n\t\t\tdir=new RAMDirectory();\r\n\t\t\tIndexWriter writer=new IndexWriter(dir,analyzer,true);\r\n\t\t\tString line = d.readLine();\t\t\r\n\t\t\twhile(line!=null)\r\n\t\t\t{\r\n\t\t\t\tint endOfDate=line.indexOf('\\t');\r\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\r\n\t\t\t\tString content=line.substring(endOfDate).trim();\r\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\r\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.TOKENIZED));\r\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.TOKENIZED));\r\n\t\t\t\twriter.addDocument(doc);\r\n\t\t\t\tline=d.readLine();\r\n\t\t\t}\t\t\t\r\n\t\t\td.close();\r\n                        writer.close();\r\n\t\t}\r\n\t\treader=IndexReader.open(dir);\r\n\t\tsearcher=new IndexSearcher(reader);\r\n\t\t\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","pathOld":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t/*\r\n\t * @see TestCase#setUp()\r\n\t */\r\n\tprotected void setUp() throws Exception {\r\n\t\tsuper.setUp();\r\n\t\t\r\n\t\t//initialize the parser\r\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\r\n\t\t\r\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\r\n\t\tif(dir==null)\r\n\t\t{\r\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \r\n\t\t\tdir=new RAMDirectory();\r\n\t\t\tIndexWriter writer=new IndexWriter(dir,analyzer,true);\r\n\t\t\tString line = d.readLine();\t\t\r\n\t\t\twhile(line!=null)\r\n\t\t\t{\r\n\t\t\t\tint endOfDate=line.indexOf('\\t');\r\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\r\n\t\t\t\tString content=line.substring(endOfDate).trim();\r\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\r\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\r\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\r\n\t\t\t\twriter.addDocument(doc);\r\n\t\t\t\tline=d.readLine();\r\n\t\t\t}\t\t\t\r\n\t\t\td.close();\r\n                        writer.close();\r\n\t\t}\r\n\t\treader=IndexReader.open(dir);\r\n\t\tsearcher=new IndexSearcher(reader);\r\n\t\t\r\n\t}\r\n\n","sourceOld":"\t/*\r\n\t * @see TestCase#setUp()\r\n\t */\r\n\tprotected void setUp() throws Exception {\r\n\t\tsuper.setUp();\r\n\t\t\r\n\t\t//initialize the parser\r\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\r\n\t\t\r\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\r\n\t\tif(dir==null)\r\n\t\t{\r\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \r\n\t\t\tdir=new RAMDirectory();\r\n\t\t\tIndexWriter writer=new IndexWriter(dir,analyzer,true);\r\n\t\t\tString line = d.readLine();\t\t\r\n\t\t\twhile(line!=null)\r\n\t\t\t{\r\n\t\t\t\tint endOfDate=line.indexOf('\\t');\r\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\r\n\t\t\t\tString content=line.substring(endOfDate).trim();\r\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\r\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.TOKENIZED));\r\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.TOKENIZED));\r\n\t\t\t\twriter.addDocument(doc);\r\n\t\t\t\tline=d.readLine();\r\n\t\t\t}\t\t\t\r\n\t\t\td.close();\r\n                        writer.close();\r\n\t\t}\r\n\t\treader=IndexReader.open(dir);\r\n\t\tsearcher=new IndexSearcher(reader);\r\n\t\t\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a361a621b184d9b73c9c9a37323a9845b8f8260","date":1226370946,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","pathOld":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer=new IndexWriter(dir,analyzer,true);\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n                        writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","sourceOld":"\t/*\r\n\t * @see TestCase#setUp()\r\n\t */\r\n\tprotected void setUp() throws Exception {\r\n\t\tsuper.setUp();\r\n\t\t\r\n\t\t//initialize the parser\r\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\r\n\t\t\r\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\r\n\t\tif(dir==null)\r\n\t\t{\r\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \r\n\t\t\tdir=new RAMDirectory();\r\n\t\t\tIndexWriter writer=new IndexWriter(dir,analyzer,true);\r\n\t\t\tString line = d.readLine();\t\t\r\n\t\t\twhile(line!=null)\r\n\t\t\t{\r\n\t\t\t\tint endOfDate=line.indexOf('\\t');\r\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\r\n\t\t\t\tString content=line.substring(endOfDate).trim();\r\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\r\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\r\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\r\n\t\t\t\twriter.addDocument(doc);\r\n\t\t\t\tline=d.readLine();\r\n\t\t\t}\t\t\t\r\n\t\t\td.close();\r\n                        writer.close();\r\n\t\t}\r\n\t\treader=IndexReader.open(dir);\r\n\t\tsearcher=new IndexSearcher(reader);\r\n\t\t\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1816ba8f6fa964838bde24b7fba744ac37ee3b47","date":1234180173,"type":3,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","pathOld":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer=new IndexWriter(dir,analyzer,true);\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","sourceOld":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer=new IndexWriter(dir,analyzer,true);\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n                        writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4256bc1b3c94786287ccdfc751230374521843cf","date":1254612273,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","pathOld":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer=new IndexWriter(dir,analyzer,true);\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","sourceOld":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer=new IndexWriter(dir,analyzer,true);\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87c966e9308847938a7c905c2e46a56d8df788b8","date":1255035452,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","pathOld":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer=new IndexWriter(dir,analyzer,true, IndexWriter.MaxFieldLength.UNLIMITED);\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","sourceOld":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer=new IndexWriter(dir,analyzer,true);\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","pathOld":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer=new IndexWriter(dir,analyzer,true, IndexWriter.MaxFieldLength.UNLIMITED);\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","sourceOld":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer=new IndexWriter(dir,analyzer,true, IndexWriter.MaxFieldLength.UNLIMITED);\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","pathOld":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_24).setAnalyzer(analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","sourceOld":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer=new IndexWriter(dir,analyzer,true, IndexWriter.MaxFieldLength.UNLIMITED);\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","pathOld":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer=new IndexWriter(dir,analyzer,true, IndexWriter.MaxFieldLength.UNLIMITED);\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","sourceOld":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_24).setAnalyzer(analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","pathOld":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_24, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","sourceOld":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer=new IndexWriter(dir,analyzer,true, IndexWriter.MaxFieldLength.UNLIMITED);\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","pathOld":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#setUp().mjava","sourceNew":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_24, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","sourceOld":"\t/*\n\t * @see TestCase#setUp()\n\t */\n\t@Override\n\tprotected void setUp() throws Exception {\n\t\tsuper.setUp();\n\t\t\n\t\t//initialize the parser\n\t\tbuilder=new CorePlusExtensionsParser(\"contents\",analyzer);\n\t\t\n\t\t//initialize the index (done once, then cached in static data for use with ALL tests)\t\t\n\t\tif(dir==null)\n\t\t{\n\t\t\tBufferedReader d = new BufferedReader(new InputStreamReader(TestParser.class.getResourceAsStream(\"reuters21578.txt\"))); \n\t\t\tdir=new RAMDirectory();\n\t\t\tIndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_24, analyzer));\n\t\t\tString line = d.readLine();\t\t\n\t\t\twhile(line!=null)\n\t\t\t{\n\t\t\t\tint endOfDate=line.indexOf('\\t');\n\t\t\t\tString date=line.substring(0,endOfDate).trim();\n\t\t\t\tString content=line.substring(endOfDate).trim();\n\t\t\t\torg.apache.lucene.document.Document doc =new org.apache.lucene.document.Document();\n\t\t\t\tdoc.add(new Field(\"date\",date,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\tdoc.add(new Field(\"contents\",content,Field.Store.YES,Field.Index.ANALYZED));\n\t\t\t\twriter.addDocument(doc);\n\t\t\t\tline=d.readLine();\n\t\t\t}\t\t\t\n\t\t\td.close();\n      writer.close();\n\t\t}\n\t\treader=IndexReader.open(dir, true);\n\t\tsearcher=new IndexSearcher(reader);\n\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1816ba8f6fa964838bde24b7fba744ac37ee3b47":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["87c966e9308847938a7c905c2e46a56d8df788b8"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["82632e9d88b0fa1aa99de5b6dbba336eaca33fae"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"4256bc1b3c94786287ccdfc751230374521843cf":["1816ba8f6fa964838bde24b7fba744ac37ee3b47"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["d3c3c2404d1200c39220fa15054fae854db4e1ee"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"82632e9d88b0fa1aa99de5b6dbba336eaca33fae":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d3c3c2404d1200c39220fa15054fae854db4e1ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"87c966e9308847938a7c905c2e46a56d8df788b8":["4256bc1b3c94786287ccdfc751230374521843cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"1816ba8f6fa964838bde24b7fba744ac37ee3b47":["4256bc1b3c94786287ccdfc751230374521843cf"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["1816ba8f6fa964838bde24b7fba744ac37ee3b47"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"4256bc1b3c94786287ccdfc751230374521843cf":["87c966e9308847938a7c905c2e46a56d8df788b8"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["82632e9d88b0fa1aa99de5b6dbba336eaca33fae"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"82632e9d88b0fa1aa99de5b6dbba336eaca33fae":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3c3c2404d1200c39220fa15054fae854db4e1ee"],"d3c3c2404d1200c39220fa15054fae854db4e1ee":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"87c966e9308847938a7c905c2e46a56d8df788b8":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}