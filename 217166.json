{"path":"contrib/queries/src/test/org/apache/lucene/search/trie/TestLongTrieRangeQuery#testEqualsAndHash().mjava","commits":[{"id":"5571adef62aa974cb3f662b64e50637b452cb9d0","date":1241171701,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queries/src/test/org/apache/lucene/search/trie/TestLongTrieRangeQuery#testEqualsAndHash().mjava","pathOld":"/dev/null","sourceNew":"  public void testEqualsAndHash() throws Exception {\n    QueryUtils.checkHashEquals(new LongTrieRangeQuery(\"test1\", 4, new Long(10L), new Long(20L), true, true));\n    QueryUtils.checkHashEquals(new LongTrieRangeQuery(\"test2\", 4, new Long(10L), new Long(20L), false, true));\n    QueryUtils.checkHashEquals(new LongTrieRangeQuery(\"test3\", 4, new Long(10L), new Long(20L), true, false));\n    QueryUtils.checkHashEquals(new LongTrieRangeQuery(\"test4\", 4, new Long(10L), new Long(20L), false, false));\n    QueryUtils.checkHashEquals(new LongTrieRangeQuery(\"test5\", 4, new Long(10L), null, true, true));\n    QueryUtils.checkHashEquals(new LongTrieRangeQuery(\"test6\", 4, null, new Long(20L), true, true));\n    QueryUtils.checkHashEquals(new LongTrieRangeQuery(\"test7\", 4, null, null, true, true));\n    QueryUtils.checkEqual(\n      new LongTrieRangeQuery(\"test8\", 4, new Long(10L), new Long(20L), true, true), \n      new LongTrieRangeQuery(\"test8\", 4, new Long(10L), new Long(20L), true, true)\n     );\n    QueryUtils.checkUnequal(\n      new LongTrieRangeQuery(\"test9\", 4, new Long(10L), new Long(20L), true, true), \n      new LongTrieRangeQuery(\"test9\", 8, new Long(10L), new Long(20L), true, true)\n     );\n    QueryUtils.checkUnequal(\n      new LongTrieRangeQuery(\"test10a\", 4, new Long(10L), new Long(20L), true, true), \n      new LongTrieRangeQuery(\"test10b\", 4, new Long(10L), new Long(20L), true, true)\n     );\n    QueryUtils.checkUnequal(\n      new LongTrieRangeQuery(\"test11\", 4, new Long(10L), new Long(20L), true, true), \n      new LongTrieRangeQuery(\"test11\", 4, new Long(20L), new Long(10L), true, true)\n     );\n    QueryUtils.checkUnequal(\n      new LongTrieRangeQuery(\"test12\", 4, new Long(10L), new Long(20L), true, true), \n      new LongTrieRangeQuery(\"test12\", 4, new Long(10L), new Long(20L), false, true)\n     );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7997e20249c312f7420d4e348cde0a36c22d9a8c","date":1245413812,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/queries/src/test/org/apache/lucene/search/trie/TestLongTrieRangeQuery#testEqualsAndHash().mjava","sourceNew":null,"sourceOld":"  public void testEqualsAndHash() throws Exception {\n    QueryUtils.checkHashEquals(new LongTrieRangeQuery(\"test1\", 4, new Long(10L), new Long(20L), true, true));\n    QueryUtils.checkHashEquals(new LongTrieRangeQuery(\"test2\", 4, new Long(10L), new Long(20L), false, true));\n    QueryUtils.checkHashEquals(new LongTrieRangeQuery(\"test3\", 4, new Long(10L), new Long(20L), true, false));\n    QueryUtils.checkHashEquals(new LongTrieRangeQuery(\"test4\", 4, new Long(10L), new Long(20L), false, false));\n    QueryUtils.checkHashEquals(new LongTrieRangeQuery(\"test5\", 4, new Long(10L), null, true, true));\n    QueryUtils.checkHashEquals(new LongTrieRangeQuery(\"test6\", 4, null, new Long(20L), true, true));\n    QueryUtils.checkHashEquals(new LongTrieRangeQuery(\"test7\", 4, null, null, true, true));\n    QueryUtils.checkEqual(\n      new LongTrieRangeQuery(\"test8\", 4, new Long(10L), new Long(20L), true, true), \n      new LongTrieRangeQuery(\"test8\", 4, new Long(10L), new Long(20L), true, true)\n     );\n    QueryUtils.checkUnequal(\n      new LongTrieRangeQuery(\"test9\", 4, new Long(10L), new Long(20L), true, true), \n      new LongTrieRangeQuery(\"test9\", 8, new Long(10L), new Long(20L), true, true)\n     );\n    QueryUtils.checkUnequal(\n      new LongTrieRangeQuery(\"test10a\", 4, new Long(10L), new Long(20L), true, true), \n      new LongTrieRangeQuery(\"test10b\", 4, new Long(10L), new Long(20L), true, true)\n     );\n    QueryUtils.checkUnequal(\n      new LongTrieRangeQuery(\"test11\", 4, new Long(10L), new Long(20L), true, true), \n      new LongTrieRangeQuery(\"test11\", 4, new Long(20L), new Long(10L), true, true)\n     );\n    QueryUtils.checkUnequal(\n      new LongTrieRangeQuery(\"test12\", 4, new Long(10L), new Long(20L), true, true), \n      new LongTrieRangeQuery(\"test12\", 4, new Long(10L), new Long(20L), false, true)\n     );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7997e20249c312f7420d4e348cde0a36c22d9a8c":["5571adef62aa974cb3f662b64e50637b452cb9d0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5571adef62aa974cb3f662b64e50637b452cb9d0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7997e20249c312f7420d4e348cde0a36c22d9a8c"]},"commit2Childs":{"7997e20249c312f7420d4e348cde0a36c22d9a8c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5571adef62aa974cb3f662b64e50637b452cb9d0"],"5571adef62aa974cb3f662b64e50637b452cb9d0":["7997e20249c312f7420d4e348cde0a36c22d9a8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}