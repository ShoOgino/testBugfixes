{"path":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldReader.SegmentTermsEnum#docs(Bits,DocsEnum,boolean).mjava","commits":[{"id":"872cff1d3a554e0cd64014cd97f88d3002b0f491","date":1323024658,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldReader.SegmentTermsEnum#docs(Bits,DocsEnum,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldReader.SegmentTermsEnum#docs(Bits,DocsEnum).mjava","sourceNew":"      @Override\n      public DocsEnum docs(Bits liveDocs, DocsEnum reuse, boolean needsFreqs) throws IOException {\n        //System.out.println(\"BTR.docs this=\" + this);\n        decodeMetaData();\n        //System.out.println(\"BTR.docs:  state.docFreq=\" + state.docFreq);\n        return postingsReader.docs(fieldInfo, state, liveDocs, reuse, needsFreqs);\n      }\n\n","sourceOld":"      @Override\n      public DocsEnum docs(Bits liveDocs, DocsEnum reuse) throws IOException {\n        //System.out.println(\"BTR.docs this=\" + this);\n        decodeMetaData();\n        //System.out.println(\"BTR.docs:  state.docFreq=\" + state.docFreq);\n        final DocsEnum docsEnum = postingsReader.docs(fieldInfo, state, liveDocs, reuse);\n        assert docsEnum != null;\n        //System.out.println(\"BTR.docs:  return docsEnum=\" + docsEnum);\n        return docsEnum;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b65b350ca9588f9fc76ce7d6804160d06c45ff42","date":1323026297,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldReader.SegmentTermsEnum#docs(Bits,DocsEnum,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldReader.SegmentTermsEnum#docs(Bits,DocsEnum).mjava","sourceNew":"      @Override\n      public DocsEnum docs(Bits liveDocs, DocsEnum reuse, boolean needsFreqs) throws IOException {\n        //System.out.println(\"BTR.docs this=\" + this);\n        decodeMetaData();\n        //System.out.println(\"BTR.docs:  state.docFreq=\" + state.docFreq);\n        return postingsReader.docs(fieldInfo, state, liveDocs, reuse, needsFreqs);\n      }\n\n","sourceOld":"      @Override\n      public DocsEnum docs(Bits liveDocs, DocsEnum reuse) throws IOException {\n        //System.out.println(\"BTR.docs this=\" + this);\n        decodeMetaData();\n        //System.out.println(\"BTR.docs:  state.docFreq=\" + state.docFreq);\n        final DocsEnum docsEnum = postingsReader.docs(fieldInfo, state, liveDocs, reuse);\n        assert docsEnum != null;\n        //System.out.println(\"BTR.docs:  return docsEnum=\" + docsEnum);\n        return docsEnum;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/BlockTermsReader.FieldReader.SegmentTermsEnum#docs(Bits,DocsEnum,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTermsReader.FieldReader.SegmentTermsEnum#docs(Bits,DocsEnum,boolean).mjava","sourceNew":"      @Override\n      public DocsEnum docs(Bits liveDocs, DocsEnum reuse, boolean needsFreqs) throws IOException {\n        //System.out.println(\"BTR.docs this=\" + this);\n        decodeMetaData();\n        //System.out.println(\"BTR.docs:  state.docFreq=\" + state.docFreq);\n        return postingsReader.docs(fieldInfo, state, liveDocs, reuse, needsFreqs);\n      }\n\n","sourceOld":"      @Override\n      public DocsEnum docs(Bits liveDocs, DocsEnum reuse, boolean needsFreqs) throws IOException {\n        //System.out.println(\"BTR.docs this=\" + this);\n        decodeMetaData();\n        //System.out.println(\"BTR.docs:  state.docFreq=\" + state.docFreq);\n        return postingsReader.docs(fieldInfo, state, liveDocs, reuse, needsFreqs);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b65b350ca9588f9fc76ce7d6804160d06c45ff42":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","872cff1d3a554e0cd64014cd97f88d3002b0f491"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["872cff1d3a554e0cd64014cd97f88d3002b0f491"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"b65b350ca9588f9fc76ce7d6804160d06c45ff42":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","872cff1d3a554e0cd64014cd97f88d3002b0f491"],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b65b350ca9588f9fc76ce7d6804160d06c45ff42","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}