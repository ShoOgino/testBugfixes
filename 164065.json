{"path":"lucene/core/src/test/org/apache/lucene/codecs/TestCompetitiveFreqNormAccumulator#testOmitNorms().mjava","commits":[{"id":"622a708571e534680618b3c5e0c28ac539a47776","date":1517406892,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/TestCompetitiveFreqNormAccumulator#testOmitNorms().mjava","pathOld":"/dev/null","sourceNew":"  public void testOmitNorms() {\n    CompetitiveFreqNormAccumulator acc = new CompetitiveFreqNormAccumulator();\n\n    acc.add(5, 1);\n    acc.add(7, 1);\n    acc.add(4, 1);\n\n    assertEquals(Collections.singleton(new FreqAndNorm(7, 1)), acc.getCompetitiveFreqNormPairs());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a692be6c8e120ef6dbfcd5dde3de42815813cd2","date":1525265372,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/TestCompetitiveFreqNormAccumulator#testOmitNorms().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/TestCompetitiveFreqNormAccumulator#testOmitNorms().mjava","sourceNew":"  public void testOmitNorms() {\n    CompetitiveImpactAccumulator acc = new CompetitiveImpactAccumulator();\n\n    acc.add(5, 1);\n    acc.add(7, 1);\n    acc.add(4, 1);\n\n    assertEquals(Collections.singleton(new Impact(7, 1)), acc.getCompetitiveFreqNormPairs());\n  }\n\n","sourceOld":"  public void testOmitNorms() {\n    CompetitiveFreqNormAccumulator acc = new CompetitiveFreqNormAccumulator();\n\n    acc.add(5, 1);\n    acc.add(7, 1);\n    acc.add(4, 1);\n\n    assertEquals(Collections.singleton(new FreqAndNorm(7, 1)), acc.getCompetitiveFreqNormPairs());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f50c9e80683584f12bcb862485e917b70cad163f","date":1574765397,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/TestCompetitiveFreqNormAccumulator#testOmitNorms().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/TestCompetitiveFreqNormAccumulator#testOmitNorms().mjava","sourceNew":"  public void testOmitNorms() {\n    CompetitiveImpactAccumulator acc = new CompetitiveImpactAccumulator();\n\n    acc.add(5, 1);\n    acc.add(7, 1);\n    acc.add(4, 1);\n\n    assertEquals(Collections.singletonList(new Impact(7, 1)), List.copyOf(acc.getCompetitiveFreqNormPairs()));\n  }\n\n","sourceOld":"  public void testOmitNorms() {\n    CompetitiveImpactAccumulator acc = new CompetitiveImpactAccumulator();\n\n    acc.add(5, 1);\n    acc.add(7, 1);\n    acc.add(4, 1);\n\n    assertEquals(Collections.singleton(new Impact(7, 1)), acc.getCompetitiveFreqNormPairs());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6a692be6c8e120ef6dbfcd5dde3de42815813cd2":["622a708571e534680618b3c5e0c28ac539a47776"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"622a708571e534680618b3c5e0c28ac539a47776":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f50c9e80683584f12bcb862485e917b70cad163f":["6a692be6c8e120ef6dbfcd5dde3de42815813cd2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f50c9e80683584f12bcb862485e917b70cad163f"]},"commit2Childs":{"6a692be6c8e120ef6dbfcd5dde3de42815813cd2":["f50c9e80683584f12bcb862485e917b70cad163f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["622a708571e534680618b3c5e0c28ac539a47776"],"622a708571e534680618b3c5e0c28ac539a47776":["6a692be6c8e120ef6dbfcd5dde3de42815813cd2"],"f50c9e80683584f12bcb862485e917b70cad163f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}