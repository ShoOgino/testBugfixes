{"path":"solr/solrj/src/java/org/apache/noggit/JSONParser#nextEvent().mjava","commits":[{"id":"80931fa1f3b04650bde7b20e61b02063a7093ced","date":1333130683,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/noggit/JSONParser#nextEvent().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the next event encountered in the JSON stream, one of\n   * <ul>\n   * <li>{@link #STRING}</li>\n   * <li>{@link #LONG}</li>\n   * <li>{@link #NUMBER}</li>\n   * <li>{@link #BIGNUMBER}</li>\n   * <li>{@link #BOOLEAN}</li>\n   * <li>{@link #NULL}</li>\n   * <li>{@link #OBJECT_START}</li>\n   * <li>{@link #OBJECT_END}</li>\n   * <li>{@link #OBJECT_END}</li>\n   * <li>{@link #ARRAY_START}</li>\n   * <li>{@link #ARRAY_END}</li>\n   * <li>{@link #EOF}</li>\n   * </ul>\n   */\n  public int nextEvent() throws IOException {\n    if (valstate==STRING) {\n      readStringChars2(devNull,start);\n    }\n    else if (valstate==BIGNUMBER) {\n      continueNumber(devNull);\n    }\n\n    valstate=0;\n\n    int ch;   // TODO: factor out getCharNWS() to here and check speed\n    switch (state) {\n      case 0:\n        return event = next(getCharNWS());\n      case DID_OBJSTART:\n        ch = getCharNWS();\n        if (ch=='}') {\n          pop();\n          return event = OBJECT_END;\n        }\n        if (ch != '\"') {\n          throw err(\"Expected string\");\n        }\n        state = DID_MEMNAME;\n        valstate = STRING;\n        return event = STRING;\n      case DID_MEMNAME:\n        ch = getCharNWS();\n        if (ch!=':') {\n          throw err(\"Expected key,value separator ':'\");\n        }\n        state = DID_MEMVAL;  // set state first because it might be pushed...\n        return event = next(getChar());\n      case DID_MEMVAL:\n        ch = getCharNWS();\n        if (ch=='}') {\n          pop();\n          return event = OBJECT_END;\n        } else if (ch!=',') {\n          throw err(\"Expected ',' or '}'\");\n        }\n        ch = getCharNWS();\n        if (ch != '\"') {\n          throw err(\"Expected string\");\n        }\n        state = DID_MEMNAME;\n        valstate = STRING;\n        return event = STRING;\n      case DID_ARRSTART:\n        ch = getCharNWS();\n        if (ch==']') {\n          pop();\n          return event = ARRAY_END;\n        }\n        state = DID_ARRELEM;  // set state first, might be pushed...\n        return event = next(ch);\n      case DID_ARRELEM:\n        ch = getCharNWS();\n        if (ch==']') {\n          pop();\n          return event = ARRAY_END;\n        } else if (ch!=',') {\n          throw err(\"Expected ',' or ']'\");\n        }\n        // state = DID_ARRELEM;\n        return event = next(getChar());\n    }\n    return 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b8e1f25987b9ba1d8b8eda2fa49f64d904cc1c8","date":1363620515,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/noggit/JSONParser#nextEvent().mjava","sourceNew":null,"sourceOld":"  /** Returns the next event encountered in the JSON stream, one of\n   * <ul>\n   * <li>{@link #STRING}</li>\n   * <li>{@link #LONG}</li>\n   * <li>{@link #NUMBER}</li>\n   * <li>{@link #BIGNUMBER}</li>\n   * <li>{@link #BOOLEAN}</li>\n   * <li>{@link #NULL}</li>\n   * <li>{@link #OBJECT_START}</li>\n   * <li>{@link #OBJECT_END}</li>\n   * <li>{@link #OBJECT_END}</li>\n   * <li>{@link #ARRAY_START}</li>\n   * <li>{@link #ARRAY_END}</li>\n   * <li>{@link #EOF}</li>\n   * </ul>\n   */\n  public int nextEvent() throws IOException {\n    if (valstate==STRING) {\n      readStringChars2(devNull,start);\n    }\n    else if (valstate==BIGNUMBER) {\n      continueNumber(devNull);\n    }\n\n    valstate=0;\n\n    int ch;   // TODO: factor out getCharNWS() to here and check speed\n    switch (state) {\n      case 0:\n        return event = next(getCharNWS());\n      case DID_OBJSTART:\n        ch = getCharNWS();\n        if (ch=='}') {\n          pop();\n          return event = OBJECT_END;\n        }\n        if (ch != '\"') {\n          throw err(\"Expected string\");\n        }\n        state = DID_MEMNAME;\n        valstate = STRING;\n        return event = STRING;\n      case DID_MEMNAME:\n        ch = getCharNWS();\n        if (ch!=':') {\n          throw err(\"Expected key,value separator ':'\");\n        }\n        state = DID_MEMVAL;  // set state first because it might be pushed...\n        return event = next(getChar());\n      case DID_MEMVAL:\n        ch = getCharNWS();\n        if (ch=='}') {\n          pop();\n          return event = OBJECT_END;\n        } else if (ch!=',') {\n          throw err(\"Expected ',' or '}'\");\n        }\n        ch = getCharNWS();\n        if (ch != '\"') {\n          throw err(\"Expected string\");\n        }\n        state = DID_MEMNAME;\n        valstate = STRING;\n        return event = STRING;\n      case DID_ARRSTART:\n        ch = getCharNWS();\n        if (ch==']') {\n          pop();\n          return event = ARRAY_END;\n        }\n        state = DID_ARRELEM;  // set state first, might be pushed...\n        return event = next(ch);\n      case DID_ARRELEM:\n        ch = getCharNWS();\n        if (ch==']') {\n          pop();\n          return event = ARRAY_END;\n        } else if (ch!=',') {\n          throw err(\"Expected ',' or ']'\");\n        }\n        // state = DID_ARRELEM;\n        return event = next(getChar());\n    }\n    return 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b8e1f25987b9ba1d8b8eda2fa49f64d904cc1c8":["80931fa1f3b04650bde7b20e61b02063a7093ced"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80931fa1f3b04650bde7b20e61b02063a7093ced":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4b8e1f25987b9ba1d8b8eda2fa49f64d904cc1c8"]},"commit2Childs":{"4b8e1f25987b9ba1d8b8eda2fa49f64d904cc1c8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["80931fa1f3b04650bde7b20e61b02063a7093ced"],"80931fa1f3b04650bde7b20e61b02063a7093ced":["4b8e1f25987b9ba1d8b8eda2fa49f64d904cc1c8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}