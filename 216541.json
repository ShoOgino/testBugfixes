{"path":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/search/analysis/TestKeywordStrategy#testProcessIndexable().mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/search/analysis/TestKeywordStrategy#testProcessIndexable().mjava","pathOld":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/search/analysis/TestKeywordStrategy#testProcessIndexable().mjava","sourceNew":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.analysis.PlainTextStrategy.processIndexable(Indexable<?\n     * extends Node, ? extends ServerBaseEntry>)'\n     */\n    public void testProcessIndexable() throws NotIndexableException {\n        IndexableStub stub = new IndexableStub();\n        stub.setReturnNull(true);\n        try {\n            this.strategy.processIndexable(stub);\n            fail(\"retun value is null must fail\");\n        } catch (NotIndexableException e) {\n        }\n        assertNull(this.strategy.content);\n        try {\n            this.strategy.createLuceneField();\n            fail(\"content is not set\");\n        } catch (GdataIndexerException e) {\n        }\n\n        String content = \"fooBar\";\n        stub.setReturnNull(false);\n        stub.setReturnValueTextContent(content);\n        this.strategy.processIndexable(stub);\n        assertNotNull(this.strategy.content);\n        assertEquals(content, this.strategy.content);\n\n        Field[] fields = this.strategy.createLuceneField();\n        assertEquals(1, fields.length);\n        assertEquals(this.field.getName(), fields[0].name());\n        assertEquals(content, fields[0].stringValue());\n        // this is also stored an untok.\n        assertTrue(fields[0].isStored());\n        assertFalse(fields[0].isTokenized());\n        \n        \n        // test for xpath exc.\n        this.field.setPath(null);\n        this.strategy = new KeywordStrategy(field);\n        try {\n            this.strategy.processIndexable(stub);\n            fail(\"path is null must fail\");\n        } catch (NotIndexableException e) {\n        }\n        try {\n            this.strategy.createLuceneField();\n            fail(\"content is not set\");\n        } catch (GdataIndexerException e) {\n        }\n\n    }\n\n","sourceOld":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.analysis.PlainTextStrategy.processIndexable(Indexable<?\n     * extends Node, ? extends ServerBaseEntry>)'\n     */\n    public void testProcessIndexable() throws NotIndexableException {\n        IndexableStub stub = new IndexableStub();\n        stub.setReturnNull(true);\n        try {\n            this.strategy.processIndexable(stub);\n            fail(\"retun value is null must fail\");\n        } catch (NotIndexableException e) {\n        }\n        assertNull(this.strategy.content);\n        try {\n            this.strategy.createLuceneField();\n            fail(\"content is not set\");\n        } catch (GdataIndexerException e) {\n        }\n\n        String content = \"fooBar\";\n        stub.setReturnNull(false);\n        stub.setReturnValueTextContent(content);\n        this.strategy.processIndexable(stub);\n        assertNotNull(this.strategy.content);\n        assertEquals(content, this.strategy.content);\n\n        Field[] fields = this.strategy.createLuceneField();\n        assertEquals(1, fields.length);\n        assertEquals(this.field.getName(), fields[0].name());\n        assertEquals(content, fields[0].stringValue());\n        // this is also stored an untok.\n        assertTrue(fields[0].isStored());\n        assertFalse(fields[0].isTokenized());\n        \n        \n        // test for xpath exc.\n        this.field.setPath(null);\n        this.strategy = new KeywordStrategy(field);\n        try {\n            this.strategy.processIndexable(stub);\n            fail(\"path is null must fail\");\n        } catch (NotIndexableException e) {\n        }\n        try {\n            this.strategy.createLuceneField();\n            fail(\"content is not set\");\n        } catch (GdataIndexerException e) {\n        }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/search/analysis/TestKeywordStrategy#testProcessIndexable().mjava","sourceNew":null,"sourceOld":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.analysis.PlainTextStrategy.processIndexable(Indexable<?\n     * extends Node, ? extends ServerBaseEntry>)'\n     */\n    public void testProcessIndexable() throws NotIndexableException {\n        IndexableStub stub = new IndexableStub();\n        stub.setReturnNull(true);\n        try {\n            this.strategy.processIndexable(stub);\n            fail(\"retun value is null must fail\");\n        } catch (NotIndexableException e) {\n        }\n        assertNull(this.strategy.content);\n        try {\n            this.strategy.createLuceneField();\n            fail(\"content is not set\");\n        } catch (GdataIndexerException e) {\n        }\n\n        String content = \"fooBar\";\n        stub.setReturnNull(false);\n        stub.setReturnValueTextContent(content);\n        this.strategy.processIndexable(stub);\n        assertNotNull(this.strategy.content);\n        assertEquals(content, this.strategy.content);\n\n        Field[] fields = this.strategy.createLuceneField();\n        assertEquals(1, fields.length);\n        assertEquals(this.field.getName(), fields[0].name());\n        assertEquals(content, fields[0].stringValue());\n        // this is also stored an untok.\n        assertTrue(fields[0].isStored());\n        assertFalse(fields[0].isTokenized());\n        \n        \n        // test for xpath exc.\n        this.field.setPath(null);\n        this.strategy = new KeywordStrategy(field);\n        try {\n            this.strategy.processIndexable(stub);\n            fail(\"path is null must fail\");\n        } catch (NotIndexableException e) {\n        }\n        try {\n            this.strategy.createLuceneField();\n            fail(\"content is not set\");\n        } catch (GdataIndexerException e) {\n        }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}