{"path":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromInputStream(SolrResourceLoader,InputStream).mjava","commits":[{"id":"d264f386d864b5751209060e8886ca9845f70469","date":1372172126,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromInputStream(SolrResourceLoader,InputStream).mjava","pathOld":"/dev/null","sourceNew":"  public static ConfigSolr fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      Config config = new Config(loader, null, new InputSource(is), null, false);\n      //config.substituteProperties();\n      return fromConfig(config);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"354983dcdf70c800bf2573d10b54a7391b1dc167","date":1372183171,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromInputStream(SolrResourceLoader,InputStream).mjava","sourceNew":null,"sourceOld":"  public static ConfigSolr fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      Config config = new Config(loader, null, new InputSource(is), null, false);\n      //config.substituteProperties();\n      return fromConfig(config);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7116474e2e390259937401cf928323e0cbc75e60","date":1372780249,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromInputStream(SolrResourceLoader,InputStream).mjava","pathOld":"/dev/null","sourceNew":"  public static ConfigSolr fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      Config config = new Config(loader, null, new InputSource(is), null, false);\n      //config.substituteProperties();\n      return fromConfig(config);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromInputStream(SolrResourceLoader,InputStream,File,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromInputStream(SolrResourceLoader,InputStream).mjava","sourceNew":"  public static ConfigSolr fromInputStream(SolrResourceLoader loader, InputStream is, File file, String originalXml) {\n    try {\n      Config config = new Config(loader, null, new InputSource(is), null, false);\n      return fromConfig(config, file, originalXml);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  public static ConfigSolr fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      Config config = new Config(loader, null, new InputSource(is), null, false);\n      //config.substituteProperties();\n      return fromConfig(config);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7917a219001fa51c4289d6a8e1a98606995170b7","date":1376673362,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromInputStream(SolrResourceLoader,InputStream).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromInputStream(SolrResourceLoader,InputStream,File,String).mjava","sourceNew":"  public static ConfigSolr fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      ByteArrayOutputStream baos = new ByteArrayOutputStream();\n      ByteStreams.copy(is, baos);\n      String originalXml = IOUtils.toString(new ByteArrayInputStream(baos.toByteArray()), \"UTF-8\");\n      ByteArrayInputStream dup = new ByteArrayInputStream(baos.toByteArray());\n      Config config = new Config(loader, null, new InputSource(dup), null, false);\n      return fromConfig(config, originalXml);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  public static ConfigSolr fromInputStream(SolrResourceLoader loader, InputStream is, File file, String originalXml) {\n    try {\n      Config config = new Config(loader, null, new InputSource(is), null, false);\n      return fromConfig(config, file, originalXml);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31d4861802ca404d78ca1d15f4550eec415b9199","date":1376947894,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromInputStream(SolrResourceLoader,InputStream).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromInputStream(SolrResourceLoader,InputStream,File,String).mjava","sourceNew":"  public static ConfigSolr fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      ByteArrayOutputStream baos = new ByteArrayOutputStream();\n      ByteStreams.copy(is, baos);\n      String originalXml = IOUtils.toString(new ByteArrayInputStream(baos.toByteArray()), \"UTF-8\");\n      ByteArrayInputStream dup = new ByteArrayInputStream(baos.toByteArray());\n      Config config = new Config(loader, null, new InputSource(dup), null, false);\n      return fromConfig(config, originalXml);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  public static ConfigSolr fromInputStream(SolrResourceLoader loader, InputStream is, File file, String originalXml) {\n    try {\n      Config config = new Config(loader, null, new InputSource(is), null, false);\n      return fromConfig(config, file, originalXml);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromInputStream(SolrResourceLoader,InputStream).mjava","pathOld":"/dev/null","sourceNew":"  public static ConfigSolr fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      ByteArrayOutputStream baos = new ByteArrayOutputStream();\n      ByteStreams.copy(is, baos);\n      String originalXml = IOUtils.toString(new ByteArrayInputStream(baos.toByteArray()), \"UTF-8\");\n      ByteArrayInputStream dup = new ByteArrayInputStream(baos.toByteArray());\n      Config config = new Config(loader, null, new InputSource(dup), null, false);\n      return fromConfig(config, originalXml);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d3d365762604952e436b51980101dfc84cc1b3e","date":1396298116,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromInputStream(SolrResourceLoader,InputStream).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromInputStream(SolrResourceLoader,InputStream).mjava","sourceNew":"  public static ConfigSolr fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      byte[] buf = IOUtils.toByteArray(is);\n      String originalXml = new String(buf, StandardCharsets.UTF_8);\n      ByteArrayInputStream dup = new ByteArrayInputStream(buf);\n      Config config = new Config(loader, null, new InputSource(dup), null, false);\n      return fromConfig(config, originalXml);\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  public static ConfigSolr fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      ByteArrayOutputStream baos = new ByteArrayOutputStream();\n      ByteStreams.copy(is, baos);\n      String originalXml = IOUtils.toString(new ByteArrayInputStream(baos.toByteArray()), \"UTF-8\");\n      ByteArrayInputStream dup = new ByteArrayInputStream(baos.toByteArray());\n      Config config = new Config(loader, null, new InputSource(dup), null, false);\n      return fromConfig(config, originalXml);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":["a877077e0a22a42eebce7d1052c58e97d3afb12d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromInputStream(SolrResourceLoader,InputStream).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromInputStream(SolrResourceLoader,InputStream).mjava","sourceNew":"  public static ConfigSolr fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      byte[] buf = IOUtils.toByteArray(is);\n      String originalXml = new String(buf, StandardCharsets.UTF_8);\n      ByteArrayInputStream dup = new ByteArrayInputStream(buf);\n      Config config = new Config(loader, null, new InputSource(dup), null, false);\n      return fromConfig(config, originalXml);\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  public static ConfigSolr fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      ByteArrayOutputStream baos = new ByteArrayOutputStream();\n      ByteStreams.copy(is, baos);\n      String originalXml = IOUtils.toString(new ByteArrayInputStream(baos.toByteArray()), \"UTF-8\");\n      ByteArrayInputStream dup = new ByteArrayInputStream(baos.toByteArray());\n      Config config = new Config(loader, null, new InputSource(dup), null, false);\n      return fromConfig(config, originalXml);\n    }\n    catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a877077e0a22a42eebce7d1052c58e97d3afb12d","date":1405981118,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromInputStream(SolrResourceLoader,InputStream).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromInputStream(SolrResourceLoader,InputStream).mjava","sourceNew":"  public static ConfigSolr fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      byte[] buf = IOUtils.toByteArray(is);\n      String originalXml = new String(buf, StandardCharsets.UTF_8);\n      try (ByteArrayInputStream dup = new ByteArrayInputStream(buf)) {\n        Config config = new Config(loader, null, new InputSource(dup), null, false);\n        return fromConfig(config, originalXml);\n      }\n    } catch (SolrException exc) {\n      throw exc;\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  public static ConfigSolr fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      byte[] buf = IOUtils.toByteArray(is);\n      String originalXml = new String(buf, StandardCharsets.UTF_8);\n      ByteArrayInputStream dup = new ByteArrayInputStream(buf);\n      Config config = new Config(loader, null, new InputSource(dup), null, false);\n      return fromConfig(config, originalXml);\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":["9d3d365762604952e436b51980101dfc84cc1b3e","7917a219001fa51c4289d6a8e1a98606995170b7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromInputStream(SolrResourceLoader,InputStream).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromInputStream(SolrResourceLoader,InputStream).mjava","sourceNew":"  public static ConfigSolr fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      byte[] buf = IOUtils.toByteArray(is);\n      try (ByteArrayInputStream dup = new ByteArrayInputStream(buf)) {\n        Config config = new Config(loader, null, new InputSource(dup), null, false);\n        return new ConfigSolrXml(config);\n      }\n    } catch (SolrException exc) {\n      throw exc;\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  public static ConfigSolr fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      byte[] buf = IOUtils.toByteArray(is);\n      String originalXml = new String(buf, StandardCharsets.UTF_8);\n      try (ByteArrayInputStream dup = new ByteArrayInputStream(buf)) {\n        Config config = new Config(loader, null, new InputSource(dup), null, false);\n        return fromConfig(config, originalXml);\n      }\n    } catch (SolrException exc) {\n      throw exc;\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e15199583d3635cb940942caed05132dd6c4c7c6","date":1424875551,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrXmlConfig#fromInputStream(SolrResourceLoader,InputStream).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromInputStream(SolrResourceLoader,InputStream).mjava","sourceNew":"  public static NodeConfig fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      byte[] buf = IOUtils.toByteArray(is);\n      try (ByteArrayInputStream dup = new ByteArrayInputStream(buf)) {\n        Config config = new Config(loader, null, new InputSource(dup), null, false);\n        return fromConfig(config);\n      }\n    } catch (SolrException exc) {\n      throw exc;\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","sourceOld":"  public static ConfigSolr fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      byte[] buf = IOUtils.toByteArray(is);\n      try (ByteArrayInputStream dup = new ByteArrayInputStream(buf)) {\n        Config config = new Config(loader, null, new InputSource(dup), null, false);\n        return new ConfigSolrXml(config);\n      }\n    } catch (SolrException exc) {\n      throw exc;\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolr#fromInputStream(SolrResourceLoader,InputStream).mjava","sourceNew":null,"sourceOld":"  public static ConfigSolr fromInputStream(SolrResourceLoader loader, InputStream is) {\n    try {\n      byte[] buf = IOUtils.toByteArray(is);\n      try (ByteArrayInputStream dup = new ByteArrayInputStream(buf)) {\n        Config config = new Config(loader, null, new InputSource(dup), null, false);\n        return new ConfigSolrXml(config);\n      }\n    } catch (SolrException exc) {\n      throw exc;\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["7917a219001fa51c4289d6a8e1a98606995170b7","9d3d365762604952e436b51980101dfc84cc1b3e"],"7116474e2e390259937401cf928323e0cbc75e60":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7917a219001fa51c4289d6a8e1a98606995170b7"],"31d4861802ca404d78ca1d15f4550eec415b9199":["6e764e9a107f93be9fa3c922bc6a197b3eec387e","7917a219001fa51c4289d6a8e1a98606995170b7"],"354983dcdf70c800bf2573d10b54a7391b1dc167":["d264f386d864b5751209060e8886ca9845f70469"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["a877077e0a22a42eebce7d1052c58e97d3afb12d"],"a877077e0a22a42eebce7d1052c58e97d3afb12d":["9d3d365762604952e436b51980101dfc84cc1b3e"],"7917a219001fa51c4289d6a8e1a98606995170b7":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"d264f386d864b5751209060e8886ca9845f70469":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e15199583d3635cb940942caed05132dd6c4c7c6":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39","e15199583d3635cb940942caed05132dd6c4c7c6"],"9d3d365762604952e436b51980101dfc84cc1b3e":["7917a219001fa51c4289d6a8e1a98606995170b7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["7116474e2e390259937401cf928323e0cbc75e60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e15199583d3635cb940942caed05132dd6c4c7c6"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"7116474e2e390259937401cf928323e0cbc75e60":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"31d4861802ca404d78ca1d15f4550eec415b9199":[],"354983dcdf70c800bf2573d10b54a7391b1dc167":["7116474e2e390259937401cf928323e0cbc75e60"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["e15199583d3635cb940942caed05132dd6c4c7c6","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"a877077e0a22a42eebce7d1052c58e97d3afb12d":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"7917a219001fa51c4289d6a8e1a98606995170b7":["5eb2511ababf862ea11e10761c70ee560cd84510","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","9d3d365762604952e436b51980101dfc84cc1b3e"],"d264f386d864b5751209060e8886ca9845f70469":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"e15199583d3635cb940942caed05132dd6c4c7c6":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"9d3d365762604952e436b51980101dfc84cc1b3e":["5eb2511ababf862ea11e10761c70ee560cd84510","a877077e0a22a42eebce7d1052c58e97d3afb12d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","d264f386d864b5751209060e8886ca9845f70469"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["31d4861802ca404d78ca1d15f4550eec415b9199","7917a219001fa51c4289d6a8e1a98606995170b7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}