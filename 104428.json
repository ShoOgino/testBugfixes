{"path":"lucene/core/src/java/org/apache/lucene/search/ReqExclScorer#iterator().mjava","commits":[{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ReqExclScorer#iterator().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocIdSetIterator iterator() {\n    return new DocIdSetIterator() {\n\n      /** Advance to the next non-excluded doc. */\n      private int toNonExcluded(int doc) throws IOException {\n        int exclDoc = exclApproximation.docID();\n        for (;; doc = reqApproximation.nextDoc()) {\n          if (doc == NO_MORE_DOCS) {\n            return NO_MORE_DOCS;\n          }\n          if (exclDoc < doc) {\n            exclDoc = exclApproximation.advance(doc);\n          }\n          if (matches(doc, exclDoc, reqTwoPhaseIterator, exclTwoPhaseIterator)) {\n            return doc;\n          }\n        }\n      }\n\n      @Override\n      public int nextDoc() throws IOException {\n        return toNonExcluded(reqApproximation.nextDoc());\n      }\n\n      @Override\n      public int advance(int target) throws IOException {\n        return toNonExcluded(reqApproximation.advance(target));\n      }\n\n      @Override\n      public int docID() {\n        return reqApproximation.docID();\n      }\n\n      @Override\n      public long cost() {\n        return reqApproximation.cost();\n      }\n\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"507fb221fedb6f40fd72e9764803053dd3a2ba15","date":1450357860,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ReqExclScorer#iterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ReqExclScorer#iterator().mjava","sourceNew":"  @Override\n  public DocIdSetIterator iterator() {\n    return TwoPhaseIterator.asDocIdSetIterator(twoPhaseIterator());\n  }\n\n","sourceOld":"  @Override\n  public DocIdSetIterator iterator() {\n    return new DocIdSetIterator() {\n\n      /** Advance to the next non-excluded doc. */\n      private int toNonExcluded(int doc) throws IOException {\n        int exclDoc = exclApproximation.docID();\n        for (;; doc = reqApproximation.nextDoc()) {\n          if (doc == NO_MORE_DOCS) {\n            return NO_MORE_DOCS;\n          }\n          if (exclDoc < doc) {\n            exclDoc = exclApproximation.advance(doc);\n          }\n          if (matches(doc, exclDoc, reqTwoPhaseIterator, exclTwoPhaseIterator)) {\n            return doc;\n          }\n        }\n      }\n\n      @Override\n      public int nextDoc() throws IOException {\n        return toNonExcluded(reqApproximation.nextDoc());\n      }\n\n      @Override\n      public int advance(int target) throws IOException {\n        return toNonExcluded(reqApproximation.advance(target));\n      }\n\n      @Override\n      public int docID() {\n        return reqApproximation.docID();\n      }\n\n      @Override\n      public long cost() {\n        return reqApproximation.cost();\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"507fb221fedb6f40fd72e9764803053dd3a2ba15":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["507fb221fedb6f40fd72e9764803053dd3a2ba15"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"507fb221fedb6f40fd72e9764803053dd3a2ba15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["507fb221fedb6f40fd72e9764803053dd3a2ba15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}