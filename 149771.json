{"path":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader#files(Directory,SegmentInfo,Set[String]).mjava","commits":[{"id":"5013b6ff92e8f7f62cd228936ce019f8819b092b","date":1326844034,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader#files(Directory,SegmentInfo,Set[String]).mjava","pathOld":"/dev/null","sourceNew":"  public static void files(Directory dir, SegmentInfo info, Set<String> files) throws IOException {\n    if (info.getHasVectors()) {\n      if (info.getDocStoreOffset() != -1) {\n        assert info.getDocStoreSegment() != null;\n        if (!info.getDocStoreIsCompoundFile()) {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_INDEX_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_FIELDS_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_DOCUMENTS_EXTENSION));\n        }\n      } else {\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_INDEX_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_FIELDS_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_DOCUMENTS_EXTENSION));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"78977ccc47b451a8e645b77504e2ef0a05e4b1a3","date":1327846052,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader#files(SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader#files(Directory,SegmentInfo,Set[String]).mjava","sourceNew":"  public static void files(SegmentInfo info, Set<String> files) throws IOException {\n    if (info.getHasVectors()) {\n      if (info.getDocStoreOffset() != -1) {\n        assert info.getDocStoreSegment() != null;\n        if (!info.getDocStoreIsCompoundFile()) {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_INDEX_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_FIELDS_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_DOCUMENTS_EXTENSION));\n        }\n      } else {\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_INDEX_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_FIELDS_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_DOCUMENTS_EXTENSION));\n      }\n    }\n  }\n\n","sourceOld":"  public static void files(Directory dir, SegmentInfo info, Set<String> files) throws IOException {\n    if (info.getHasVectors()) {\n      if (info.getDocStoreOffset() != -1) {\n        assert info.getDocStoreSegment() != null;\n        if (!info.getDocStoreIsCompoundFile()) {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_INDEX_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_FIELDS_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_DOCUMENTS_EXTENSION));\n        }\n      } else {\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_INDEX_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_FIELDS_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_DOCUMENTS_EXTENSION));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296df632fd63421ea20756fa11ad36fbc6f4c8a9","date":1327957998,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader#files(SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader#files(Directory,SegmentInfo,Set[String]).mjava","sourceNew":"  // note: if there are shared docstores, we are also called by Lucene3xCodec even in \n  // the CFS case. so logic here must handle this.\n  public static void files(SegmentInfo info, Set<String> files) throws IOException {\n    if (info.getHasVectors()) {\n      if (info.getDocStoreOffset() != -1) {\n        assert info.getDocStoreSegment() != null;\n        if (info.getDocStoreIsCompoundFile()) {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", Lucene3xCodec.COMPOUND_FILE_STORE_EXTENSION));\n        } else {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_INDEX_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_FIELDS_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_DOCUMENTS_EXTENSION));\n        }\n      } else if (!info.getUseCompoundFile()) {\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_INDEX_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_FIELDS_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_DOCUMENTS_EXTENSION));\n      }\n    }\n  }\n\n","sourceOld":"  public static void files(Directory dir, SegmentInfo info, Set<String> files) throws IOException {\n    if (info.getHasVectors()) {\n      if (info.getDocStoreOffset() != -1) {\n        assert info.getDocStoreSegment() != null;\n        if (!info.getDocStoreIsCompoundFile()) {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_INDEX_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_FIELDS_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_DOCUMENTS_EXTENSION));\n        }\n      } else {\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_INDEX_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_FIELDS_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_DOCUMENTS_EXTENSION));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"410e066f093e407222d9681429d209084e783149","date":1327958394,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader#files(SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader#files(Directory,SegmentInfo,Set[String]).mjava","sourceNew":"  // note: if there are shared docstores, we are also called by Lucene3xCodec even in \n  // the CFS case. so logic here must handle this.\n  public static void files(SegmentInfo info, Set<String> files) throws IOException {\n    if (info.getHasVectors()) {\n      if (info.getDocStoreOffset() != -1) {\n        assert info.getDocStoreSegment() != null;\n        if (info.getDocStoreIsCompoundFile()) {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", Lucene3xCodec.COMPOUND_FILE_STORE_EXTENSION));\n        } else {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_INDEX_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_FIELDS_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_DOCUMENTS_EXTENSION));\n        }\n      } else if (!info.getUseCompoundFile()) {\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_INDEX_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_FIELDS_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_DOCUMENTS_EXTENSION));\n      }\n    }\n  }\n\n","sourceOld":"  public static void files(Directory dir, SegmentInfo info, Set<String> files) throws IOException {\n    if (info.getHasVectors()) {\n      if (info.getDocStoreOffset() != -1) {\n        assert info.getDocStoreSegment() != null;\n        if (!info.getDocStoreIsCompoundFile()) {\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_INDEX_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_FIELDS_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(info.getDocStoreSegment(), \"\", VECTORS_DOCUMENTS_EXTENSION));\n        }\n      } else {\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_INDEX_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_FIELDS_EXTENSION));\n        files.add(IndexFileNames.segmentFileName(info.name, \"\", VECTORS_DOCUMENTS_EXTENSION));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5013b6ff92e8f7f62cd228936ce019f8819b092b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"410e066f093e407222d9681429d209084e783149":["5013b6ff92e8f7f62cd228936ce019f8819b092b","296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78977ccc47b451a8e645b77504e2ef0a05e4b1a3":["5013b6ff92e8f7f62cd228936ce019f8819b092b"],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["5013b6ff92e8f7f62cd228936ce019f8819b092b","78977ccc47b451a8e645b77504e2ef0a05e4b1a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"]},"commit2Childs":{"5013b6ff92e8f7f62cd228936ce019f8819b092b":["410e066f093e407222d9681429d209084e783149","78977ccc47b451a8e645b77504e2ef0a05e4b1a3","296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"410e066f093e407222d9681429d209084e783149":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5013b6ff92e8f7f62cd228936ce019f8819b092b"],"78977ccc47b451a8e645b77504e2ef0a05e4b1a3":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["410e066f093e407222d9681429d209084e783149","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["410e066f093e407222d9681429d209084e783149","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}