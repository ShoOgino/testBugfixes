{"path":"contrib/analyzers/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#assertAnalyzesTo(Analyzer,String,String[]).mjava","commits":[{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/analyzers/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#assertAnalyzesTo(Analyzer,String,String[]).mjava","pathOld":"sandbox/contributions/analyzers/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#assertAnalyzesTo(Analyzer,String,String[]).mjava","sourceNew":"\t// Method copied from TestAnalyzers, maybe should be refactored\n\tpublic void assertAnalyzesTo(Analyzer a, String input, String[] output)\n\t\tthrows Exception {\n\n\t\tTokenStream ts = a.tokenStream(\"dummy\", new StringReader(input));\n\n\t\tfor (int i = 0; i < output.length; i++) {\n\t\t\tToken t = ts.next();\n\t\t\tassertNotNull(t);\n\t\t\tassertEquals(t.termText(), output[i]);\n\t\t}\n\t\tassertNull(ts.next());\n\t\tts.close();\n\t}\n\n","sourceOld":"\t// Method copied from TestAnalyzers, maybe should be refactored\n\tpublic void assertAnalyzesTo(Analyzer a, String input, String[] output)\n\t\tthrows Exception {\n\n\t\tTokenStream ts = a.tokenStream(\"dummy\", new StringReader(input));\n\n\t\tfor (int i = 0; i < output.length; i++) {\n\t\t\tToken t = ts.next();\n\t\t\tassertNotNull(t);\n\t\t\tassertEquals(t.termText(), output[i]);\n\t\t}\n\t\tassertNull(ts.next());\n\t\tts.close();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e2cb543b41c145f33390f460ee743d6693c9c6c","date":1219243087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#assertAnalyzesTo(Analyzer,String,String[]).mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#assertAnalyzesTo(Analyzer,String,String[]).mjava","sourceNew":"\t// Method copied from TestAnalyzers, maybe should be refactored\n\tpublic void assertAnalyzesTo(Analyzer a, String input, String[] output)\n\t\tthrows Exception {\n\n\t\tTokenStream ts = a.tokenStream(\"dummy\", new StringReader(input));\n\n                final Token reusableToken = new Token();\n\t\tfor (int i = 0; i < output.length; i++) {\n\t\t\tToken nextToken = ts.next(reusableToken);\n\t\t\tassertNotNull(nextToken);\n\t\t\tassertEquals(nextToken.term(), output[i]);\n\t\t}\n\t\tassertNull(ts.next(reusableToken));\n\t\tts.close();\n\t}\n\n","sourceOld":"\t// Method copied from TestAnalyzers, maybe should be refactored\n\tpublic void assertAnalyzesTo(Analyzer a, String input, String[] output)\n\t\tthrows Exception {\n\n\t\tTokenStream ts = a.tokenStream(\"dummy\", new StringReader(input));\n\n\t\tfor (int i = 0; i < output.length; i++) {\n\t\t\tToken t = ts.next();\n\t\t\tassertNotNull(t);\n\t\t\tassertEquals(t.termText(), output[i]);\n\t\t}\n\t\tassertNull(ts.next());\n\t\tts.close();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#assertAnalyzesTo(Analyzer,String,String[]).mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/fr/TestFrenchAnalyzer#assertAnalyzesTo(Analyzer,String,String[]).mjava","sourceNew":"\t// Method copied from TestAnalyzers, maybe should be refactored\n\tpublic void assertAnalyzesTo(Analyzer a, String input, String[] output)\n\t\tthrows Exception {\n\n\t\tTokenStream ts = a.tokenStream(\"dummy\", new StringReader(input));\n\n                final Token reusableToken = new Token();\n\t\tfor (int i = 0; i < output.length; i++) {\n\t\t\tToken nextToken = ts.next(reusableToken);\n\t\t\tassertNotNull(nextToken);\n\t\t\tassertEquals(nextToken.term(), output[i]);\n\t\t}\n\t\tassertNull(ts.next(reusableToken));\n\t\tts.close();\n\t}\n\n","sourceOld":"\t// Method copied from TestAnalyzers, maybe should be refactored\n\tpublic void assertAnalyzesTo(Analyzer a, String input, String[] output)\n\t\tthrows Exception {\n\n\t\tTokenStream ts = a.tokenStream(\"dummy\", new StringReader(input));\n\n                final Token reusableToken = new Token();\n\t\tfor (int i = 0; i < output.length; i++) {\n\t\t\tToken nextToken = ts.next(reusableToken);\n\t\t\tassertNotNull(nextToken);\n\t\t\tassertEquals(nextToken.term(), output[i]);\n\t\t}\n\t\tassertNull(ts.next(reusableToken));\n\t\tts.close();\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"]},"commit2Childs":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}