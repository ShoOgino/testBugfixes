{"path":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testArrnvpWriterLacksMethodsOfItsOwn().mjava","commits":[{"id":"be24bc5afb9111e35bec7963fc84f96ebd98d9ee","date":1477912779,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testArrnvpWriterLacksMethodsOfItsOwn().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testArrnvpWriterLacksMethodsOfItsOwn() {\n    final Class<?> subClass = ArrayOfNamedValuePairJSONWriter.class;\n    final Class<?> superClass = subClass.getSuperclass();\n    // ArrayOfNamedValuePairJSONWriter is a simple sub-class\n    // which should have (almost) no methods of its own\n    for (final Method subClassMethod : subClass.getDeclaredMethods()) {\n      // only own private method of its own\n      if (subClassMethod.getName().equals(\"ifNeededWriteTypeAsKey\")) continue;\n      try {\n        final Method superClassMethod = superClass.getDeclaredMethod(\n            subClassMethod.getName(),\n            subClassMethod.getParameterTypes());\n\n          assertEquals(\"getReturnType() difference\",\n              subClassMethod.getReturnType(),\n              superClassMethod.getReturnType());\n      } catch (NoSuchMethodException e) {\n          fail(subClass + \" should not have '\" + subClassMethod + \"' method of its own\");\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"320888923ec13b91f53082558f01f4c9960dd226","date":1477926871,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testArrnvpWriterLacksMethodsOfItsOwn().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testArrnvpWriterLacksMethodsOfItsOwn() {\n    final Class<?> subClass = ArrayOfNamedValuePairJSONWriter.class;\n    final Class<?> superClass = subClass.getSuperclass();\n    // ArrayOfNamedValuePairJSONWriter is a simple sub-class\n    // which should have (almost) no methods of its own\n    for (final Method subClassMethod : subClass.getDeclaredMethods()) {\n      // only own private method of its own\n      if (subClassMethod.getName().equals(\"ifNeededWriteTypeAsKey\")) continue;\n      try {\n        final Method superClassMethod = superClass.getDeclaredMethod(\n            subClassMethod.getName(),\n            subClassMethod.getParameterTypes());\n\n          assertEquals(\"getReturnType() difference\",\n              subClassMethod.getReturnType(),\n              superClassMethod.getReturnType());\n      } catch (NoSuchMethodException e) {\n          fail(subClass + \" should not have '\" + subClassMethod + \"' method of its own\");\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87f40a063571d1870bae89b6d191c3cb53b10f5e","date":1482933535,"type":5,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testArrntvWriterLacksMethodsOfItsOwn().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testArrnvpWriterLacksMethodsOfItsOwn().mjava","sourceNew":"  @Test\n  public void testArrntvWriterLacksMethodsOfItsOwn() {\n    final Class<?> subClass = ArrayOfNameTypeValueJSONWriter.class;\n    final Class<?> superClass = subClass.getSuperclass();\n    // ArrayOfNamedValuePairJSONWriter is a simple sub-class\n    // which should have (almost) no methods of its own\n    for (final Method subClassMethod : subClass.getDeclaredMethods()) {\n      // only own private method of its own\n      if (subClassMethod.getName().equals(\"ifNeededWriteTypeAndValueKey\")) continue;\n      try {\n        final Method superClassMethod = superClass.getDeclaredMethod(\n            subClassMethod.getName(),\n            subClassMethod.getParameterTypes());\n\n          assertEquals(\"getReturnType() difference\",\n              subClassMethod.getReturnType(),\n              superClassMethod.getReturnType());\n      } catch (NoSuchMethodException e) {\n          fail(subClass + \" should not have '\" + subClassMethod + \"' method of its own\");\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testArrnvpWriterLacksMethodsOfItsOwn() {\n    final Class<?> subClass = ArrayOfNamedValuePairJSONWriter.class;\n    final Class<?> superClass = subClass.getSuperclass();\n    // ArrayOfNamedValuePairJSONWriter is a simple sub-class\n    // which should have (almost) no methods of its own\n    for (final Method subClassMethod : subClass.getDeclaredMethods()) {\n      // only own private method of its own\n      if (subClassMethod.getName().equals(\"ifNeededWriteTypeAsKey\")) continue;\n      try {\n        final Method superClassMethod = superClass.getDeclaredMethod(\n            subClassMethod.getName(),\n            subClassMethod.getParameterTypes());\n\n          assertEquals(\"getReturnType() difference\",\n              subClassMethod.getReturnType(),\n              superClassMethod.getReturnType());\n      } catch (NoSuchMethodException e) {\n          fail(subClass + \" should not have '\" + subClassMethod + \"' method of its own\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testArrnvpWriterLacksMethodsOfItsOwn().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testArrnvpWriterLacksMethodsOfItsOwn() {\n    final Class<?> subClass = ArrayOfNamedValuePairJSONWriter.class;\n    final Class<?> superClass = subClass.getSuperclass();\n    // ArrayOfNamedValuePairJSONWriter is a simple sub-class\n    // which should have (almost) no methods of its own\n    for (final Method subClassMethod : subClass.getDeclaredMethods()) {\n      // only own private method of its own\n      if (subClassMethod.getName().equals(\"ifNeededWriteTypeAsKey\")) continue;\n      try {\n        final Method superClassMethod = superClass.getDeclaredMethod(\n            subClassMethod.getName(),\n            subClassMethod.getParameterTypes());\n\n          assertEquals(\"getReturnType() difference\",\n              subClassMethod.getReturnType(),\n              superClassMethod.getReturnType());\n      } catch (NoSuchMethodException e) {\n          fail(subClass + \" should not have '\" + subClassMethod + \"' method of its own\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"be24bc5afb9111e35bec7963fc84f96ebd98d9ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"87f40a063571d1870bae89b6d191c3cb53b10f5e":["be24bc5afb9111e35bec7963fc84f96ebd98d9ee"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"320888923ec13b91f53082558f01f4c9960dd226":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","be24bc5afb9111e35bec7963fc84f96ebd98d9ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["87f40a063571d1870bae89b6d191c3cb53b10f5e"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["320888923ec13b91f53082558f01f4c9960dd226","87f40a063571d1870bae89b6d191c3cb53b10f5e"]},"commit2Childs":{"be24bc5afb9111e35bec7963fc84f96ebd98d9ee":["87f40a063571d1870bae89b6d191c3cb53b10f5e","320888923ec13b91f53082558f01f4c9960dd226"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be24bc5afb9111e35bec7963fc84f96ebd98d9ee","320888923ec13b91f53082558f01f4c9960dd226"],"87f40a063571d1870bae89b6d191c3cb53b10f5e":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"320888923ec13b91f53082558f01f4c9960dd226":["f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}