{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharArraySet#CharArraySet(int,boolean).mjava","commits":[{"id":"9dd42aeb8984bdfef80056722e7c1c239b7e3c07","date":1274826512,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharArraySet#CharArraySet(int,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/CharArraySet#CharArraySet(int,boolean).mjava","sourceNew":"  /**\n   * Creates a set with enough capacity to hold startSize terms\n   * \n   * @param startSize\n   *          the initial capacity\n   * @param ignoreCase\n   *          <code>false</code> if and only if the set should be case sensitive\n   *          otherwise <code>true</code>.\n   * @deprecated use {@link #CharArraySet(Version, int, boolean)} instead\n   */\n  @Deprecated\n  public CharArraySet(int startSize, boolean ignoreCase) {\n    this(Version.LUCENE_30, startSize, ignoreCase);\n  }\n\n","sourceOld":"  /**\n   * Creates a set with enough capacity to hold startSize terms\n   * \n   * @param startSize\n   *          the initial capacity\n   * @param ignoreCase\n   *          <code>false</code> if and only if the set should be case sensitive\n   *          otherwise <code>true</code>.\n   * @deprecated use {@link #CharArraySet(Version, int, boolean)} instead\n   */\n  @Deprecated\n  public CharArraySet(int startSize, boolean ignoreCase) {\n    this(Version.LUCENE_30, startSize, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharArraySet#CharArraySet(int,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a set with enough capacity to hold startSize terms\n   * \n   * @param startSize\n   *          the initial capacity\n   * @param ignoreCase\n   *          <code>false</code> if and only if the set should be case sensitive\n   *          otherwise <code>true</code>.\n   * @deprecated use {@link #CharArraySet(Version, int, boolean)} instead\n   */\n  @Deprecated\n  public CharArraySet(int startSize, boolean ignoreCase) {\n    this(Version.LUCENE_30, startSize, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharArraySet#CharArraySet(int,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a set with enough capacity to hold startSize terms\n   * \n   * @param startSize\n   *          the initial capacity\n   * @param ignoreCase\n   *          <code>false</code> if and only if the set should be case sensitive\n   *          otherwise <code>true</code>.\n   * @deprecated use {@link #CharArraySet(Version, int, boolean)} instead\n   */\n  @Deprecated\n  public CharArraySet(int startSize, boolean ignoreCase) {\n    this(Version.LUCENE_30, startSize, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharArraySet#CharArraySet(int,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a set with enough capacity to hold startSize terms\n   * \n   * @param startSize\n   *          the initial capacity\n   * @param ignoreCase\n   *          <code>false</code> if and only if the set should be case sensitive\n   *          otherwise <code>true</code>.\n   * @deprecated use {@link #CharArraySet(Version, int, boolean)} instead\n   */\n  @Deprecated\n  public CharArraySet(int startSize, boolean ignoreCase) {\n    this(Version.LUCENE_30, startSize, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9dd42aeb8984bdfef80056722e7c1c239b7e3c07":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9dd42aeb8984bdfef80056722e7c1c239b7e3c07","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"3bb13258feba31ab676502787ab2e1779f129b7a":["9dd42aeb8984bdfef80056722e7c1c239b7e3c07","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["9dd42aeb8984bdfef80056722e7c1c239b7e3c07"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9dd42aeb8984bdfef80056722e7c1c239b7e3c07"],"9dd42aeb8984bdfef80056722e7c1c239b7e3c07":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}