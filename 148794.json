{"path":"solr/core/src/java/org/apache/solr/core/InitParams#InitParams(PluginInfo).mjava","commits":[{"id":"bb537081ae8ce706dd40a122f57a9e7b8a112be8","date":1411065946,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/InitParams#InitParams(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ParamSet#ParamSet(PluginInfo).mjava","sourceNew":"  public InitParams(PluginInfo p) {\n    this.name = p.attributes.get(\"name\");\n    Set<String> paths = null;\n    String pathStr = p.attributes.get(\"path\");\n    if(pathStr!=null) {\n      paths = Collections.unmodifiableSet(new HashSet<>(StrUtils.splitSmart(pathStr, ',')));\n    }\n    this.paths = paths;\n    NamedList nl = (NamedList) p.initArgs.get(PluginInfo.DEFAULTS);\n    defaults = nl == null ? null: nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(PluginInfo.INVARIANTS);\n    invariants = nl == null ? null: nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(PluginInfo.APPENDS);\n    appends = nl == null ? null: nl.getImmutableCopy();\n  }\n\n","sourceOld":"  public ParamSet(PluginInfo p) {\n    this.name = p.attributes.get(\"name\");\n    Set<String> paths = null;\n    String pathStr = p.attributes.get(\"path\");\n    if(pathStr!=null) {\n      paths = Collections.unmodifiableSet(new HashSet<>(StrUtils.splitSmart(pathStr, ',')));\n    }\n    this.paths = paths;\n    NamedList nl = (NamedList) p.initArgs.get(PluginInfo.DEFAULTS);\n    defaults = nl == null ? null: nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(PluginInfo.INVARIANTS);\n    invariants = nl == null ? null: nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(PluginInfo.APPENDS);\n    appends = nl == null ? null: nl.getImmutableCopy();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2330174b38007b9942205a2679db9ddffe35af89","date":1423653924,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/InitParams#InitParams(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/InitParams#InitParams(PluginInfo).mjava","sourceNew":"  public InitParams(PluginInfo p) {\n    this.name = p.attributes.get(\"name\");\n    Set<String> paths = null;\n    String pathStr = p.attributes.get(\"path\");\n    if (pathStr != null) {\n      paths = Collections.unmodifiableSet(new HashSet<>(StrUtils.splitSmart(pathStr, ',')));\n    }\n    this.paths = paths;\n    NamedList nl = (NamedList) p.initArgs.get(PluginInfo.DEFAULTS);\n    defaults = nl == null ? null : nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(PluginInfo.INVARIANTS);\n    invariants = nl == null ? null : nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(PluginInfo.APPENDS);\n    appends = nl == null ? null : nl.getImmutableCopy();\n  }\n\n","sourceOld":"  public InitParams(PluginInfo p) {\n    this.name = p.attributes.get(\"name\");\n    Set<String> paths = null;\n    String pathStr = p.attributes.get(\"path\");\n    if(pathStr!=null) {\n      paths = Collections.unmodifiableSet(new HashSet<>(StrUtils.splitSmart(pathStr, ',')));\n    }\n    this.paths = paths;\n    NamedList nl = (NamedList) p.initArgs.get(PluginInfo.DEFAULTS);\n    defaults = nl == null ? null: nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(PluginInfo.INVARIANTS);\n    invariants = nl == null ? null: nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(PluginInfo.APPENDS);\n    appends = nl == null ? null: nl.getImmutableCopy();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1390137e395d2f07f9ba5b8c43d293befe84d563","date":1427947685,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/InitParams#InitParams(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/InitParams#InitParams(PluginInfo).mjava","sourceNew":"  public InitParams(PluginInfo p) {\n    this.name = p.attributes.get(NAME);\n    Set<String> paths = null;\n    String pathStr = p.attributes.get(PATH);\n    if (pathStr != null) {\n      paths = Collections.unmodifiableSet(new HashSet<>(StrUtils.splitSmart(pathStr, ',')));\n    }\n    this.paths = paths;\n    NamedList nl = (NamedList) p.initArgs.get(DEFAULTS);\n    defaults = nl == null ? null : nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(INVARIANTS);\n    invariants = nl == null ? null : nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(APPENDS);\n    appends = nl == null ? null : nl.getImmutableCopy();\n  }\n\n","sourceOld":"  public InitParams(PluginInfo p) {\n    this.name = p.attributes.get(\"name\");\n    Set<String> paths = null;\n    String pathStr = p.attributes.get(\"path\");\n    if (pathStr != null) {\n      paths = Collections.unmodifiableSet(new HashSet<>(StrUtils.splitSmart(pathStr, ',')));\n    }\n    this.paths = paths;\n    NamedList nl = (NamedList) p.initArgs.get(PluginInfo.DEFAULTS);\n    defaults = nl == null ? null : nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(PluginInfo.INVARIANTS);\n    invariants = nl == null ? null : nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(PluginInfo.APPENDS);\n    appends = nl == null ? null : nl.getImmutableCopy();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2638f781be724518ff6c2263d14a48cf6e68017","date":1427989059,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/InitParams#InitParams(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/InitParams#InitParams(PluginInfo).mjava","sourceNew":"  public InitParams(PluginInfo p) {\n    this.name = p.attributes.get(NAME);\n    Set<String> paths = null;\n    String pathStr = p.attributes.get(PATH);\n    if (pathStr != null) {\n      paths = Collections.unmodifiableSet(new HashSet<>(StrUtils.splitSmart(pathStr, ',')));\n    }\n    this.paths = paths;\n    NamedList nl = (NamedList) p.initArgs.get(DEFAULTS);\n    defaults = nl == null ? null : nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(INVARIANTS);\n    invariants = nl == null ? null : nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(APPENDS);\n    appends = nl == null ? null : nl.getImmutableCopy();\n  }\n\n","sourceOld":"  public InitParams(PluginInfo p) {\n    this.name = p.attributes.get(\"name\");\n    Set<String> paths = null;\n    String pathStr = p.attributes.get(\"path\");\n    if (pathStr != null) {\n      paths = Collections.unmodifiableSet(new HashSet<>(StrUtils.splitSmart(pathStr, ',')));\n    }\n    this.paths = paths;\n    NamedList nl = (NamedList) p.initArgs.get(PluginInfo.DEFAULTS);\n    defaults = nl == null ? null : nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(PluginInfo.INVARIANTS);\n    invariants = nl == null ? null : nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(PluginInfo.APPENDS);\n    appends = nl == null ? null : nl.getImmutableCopy();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f8f89a6aa847dba1c4be0f18c506864db8f3d41","date":1429792475,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/InitParams#InitParams(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/InitParams#InitParams(PluginInfo).mjava","sourceNew":"  public InitParams(PluginInfo p) {\n    this.pluginInfo = p;\n    this.name = p.attributes.get(NAME);\n    Set<String> paths = null;\n    String pathStr = p.attributes.get(PATH);\n    if (pathStr != null) {\n      paths = Collections.unmodifiableSet(new HashSet<>(StrUtils.splitSmart(pathStr, ',')));\n    }\n    this.paths = paths;\n    NamedList nl = (NamedList) p.initArgs.get(DEFAULTS);\n    defaults = nl == null ? null : nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(INVARIANTS);\n    invariants = nl == null ? null : nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(APPENDS);\n    appends = nl == null ? null : nl.getImmutableCopy();\n  }\n\n","sourceOld":"  public InitParams(PluginInfo p) {\n    this.name = p.attributes.get(NAME);\n    Set<String> paths = null;\n    String pathStr = p.attributes.get(PATH);\n    if (pathStr != null) {\n      paths = Collections.unmodifiableSet(new HashSet<>(StrUtils.splitSmart(pathStr, ',')));\n    }\n    this.paths = paths;\n    NamedList nl = (NamedList) p.initArgs.get(DEFAULTS);\n    defaults = nl == null ? null : nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(INVARIANTS);\n    invariants = nl == null ? null : nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(APPENDS);\n    appends = nl == null ? null : nl.getImmutableCopy();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7211cffa9ca30fcd9ff33fb1059543d95773b8b1","date":1566595888,"type":3,"author":"Atri Sharma","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/InitParams#InitParams(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/InitParams#InitParams(PluginInfo).mjava","sourceNew":"  public InitParams(PluginInfo p) {\n    this.pluginInfo = p;\n    this.name = p.attributes.get(NAME);\n    Set<String> paths = null;\n    String pathStr = p.attributes.get(PATH);\n    if (pathStr != null) {\n      paths = Set.copyOf(StrUtils.splitSmart(pathStr, ','));\n    }\n    this.paths = paths;\n    NamedList nl = (NamedList) p.initArgs.get(DEFAULTS);\n    defaults = nl == null ? null : nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(INVARIANTS);\n    invariants = nl == null ? null : nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(APPENDS);\n    appends = nl == null ? null : nl.getImmutableCopy();\n  }\n\n","sourceOld":"  public InitParams(PluginInfo p) {\n    this.pluginInfo = p;\n    this.name = p.attributes.get(NAME);\n    Set<String> paths = null;\n    String pathStr = p.attributes.get(PATH);\n    if (pathStr != null) {\n      paths = Collections.unmodifiableSet(new HashSet<>(StrUtils.splitSmart(pathStr, ',')));\n    }\n    this.paths = paths;\n    NamedList nl = (NamedList) p.initArgs.get(DEFAULTS);\n    defaults = nl == null ? null : nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(INVARIANTS);\n    invariants = nl == null ? null : nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(APPENDS);\n    appends = nl == null ? null : nl.getImmutableCopy();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75237075d8425856bf4bbf52a6be4f9162b8187d","date":1591103291,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/InitParams#InitParams(PluginInfo).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/InitParams#InitParams(PluginInfo).mjava","sourceNew":"  public InitParams(PluginInfo p) {\n    this.pluginInfo = p;\n    this.name = p.attributes.get(NAME);\n    Set<String> paths = null;\n    String pathStr = p.attributes.get(PATH);\n    if (pathStr != null) {\n      paths = Set.copyOf(StrUtils.splitSmart(pathStr, ','));\n    }\n    this.paths = paths;\n    @SuppressWarnings({\"rawtypes\"})\n    NamedList nl = (NamedList) p.initArgs.get(DEFAULTS);\n    defaults = nl == null ? null : nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(INVARIANTS);\n    invariants = nl == null ? null : nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(APPENDS);\n    appends = nl == null ? null : nl.getImmutableCopy();\n  }\n\n","sourceOld":"  public InitParams(PluginInfo p) {\n    this.pluginInfo = p;\n    this.name = p.attributes.get(NAME);\n    Set<String> paths = null;\n    String pathStr = p.attributes.get(PATH);\n    if (pathStr != null) {\n      paths = Set.copyOf(StrUtils.splitSmart(pathStr, ','));\n    }\n    this.paths = paths;\n    NamedList nl = (NamedList) p.initArgs.get(DEFAULTS);\n    defaults = nl == null ? null : nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(INVARIANTS);\n    invariants = nl == null ? null : nl.getImmutableCopy();\n    nl = (NamedList) p.initArgs.get(APPENDS);\n    appends = nl == null ? null : nl.getImmutableCopy();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb537081ae8ce706dd40a122f57a9e7b8a112be8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"75237075d8425856bf4bbf52a6be4f9162b8187d":["7211cffa9ca30fcd9ff33fb1059543d95773b8b1"],"2330174b38007b9942205a2679db9ddffe35af89":["bb537081ae8ce706dd40a122f57a9e7b8a112be8"],"1390137e395d2f07f9ba5b8c43d293befe84d563":["2330174b38007b9942205a2679db9ddffe35af89"],"7211cffa9ca30fcd9ff33fb1059543d95773b8b1":["3f8f89a6aa847dba1c4be0f18c506864db8f3d41"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2638f781be724518ff6c2263d14a48cf6e68017":["2330174b38007b9942205a2679db9ddffe35af89","1390137e395d2f07f9ba5b8c43d293befe84d563"],"3f8f89a6aa847dba1c4be0f18c506864db8f3d41":["1390137e395d2f07f9ba5b8c43d293befe84d563"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["75237075d8425856bf4bbf52a6be4f9162b8187d"]},"commit2Childs":{"bb537081ae8ce706dd40a122f57a9e7b8a112be8":["2330174b38007b9942205a2679db9ddffe35af89"],"75237075d8425856bf4bbf52a6be4f9162b8187d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2330174b38007b9942205a2679db9ddffe35af89":["1390137e395d2f07f9ba5b8c43d293befe84d563","d2638f781be724518ff6c2263d14a48cf6e68017"],"1390137e395d2f07f9ba5b8c43d293befe84d563":["d2638f781be724518ff6c2263d14a48cf6e68017","3f8f89a6aa847dba1c4be0f18c506864db8f3d41"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb537081ae8ce706dd40a122f57a9e7b8a112be8"],"7211cffa9ca30fcd9ff33fb1059543d95773b8b1":["75237075d8425856bf4bbf52a6be4f9162b8187d"],"d2638f781be724518ff6c2263d14a48cf6e68017":[],"3f8f89a6aa847dba1c4be0f18c506864db8f3d41":["7211cffa9ca30fcd9ff33fb1059543d95773b8b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d2638f781be724518ff6c2263d14a48cf6e68017","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}