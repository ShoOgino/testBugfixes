{"path":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedPostingsReader#docsAndPositions(FieldInfo,BlockTermState,Bits,DocsAndPositionsEnum,boolean).mjava","commits":[{"id":"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","date":1343686506,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedPostingsReader#docsAndPositions(FieldInfo,BlockTermState,Bits,DocsAndPositionsEnum,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocsAndPositionsEnum docsAndPositions(FieldInfo fieldInfo, BlockTermState termState, Bits liveDocs,\n                                               DocsAndPositionsEnum reuse, boolean needsOffsets)\n    throws IOException {\n\n    // nocommit use needsPayloads here:\n    if (!needsOffsets && !fieldInfo.hasPayloads()) {\n      BlockDocsAndPositionsEnum docsAndPositionsEnum;\n      if (reuse instanceof BlockDocsAndPositionsEnum) {\n        docsAndPositionsEnum = (BlockDocsAndPositionsEnum) reuse;\n        if (!docsAndPositionsEnum.canReuse(docIn, fieldInfo)) {\n          docsAndPositionsEnum = new BlockDocsAndPositionsEnum(fieldInfo);\n        }\n      } else {\n        docsAndPositionsEnum = new BlockDocsAndPositionsEnum(fieldInfo);\n      }\n      return docsAndPositionsEnum.reset(liveDocs, (IntBlockTermState) termState);\n    } else {\n      EverythingEnum everythingEnum;\n      if (reuse instanceof EverythingEnum) {\n        everythingEnum = (EverythingEnum) reuse;\n        if (!everythingEnum.canReuse(docIn, fieldInfo)) {\n          everythingEnum = new EverythingEnum(fieldInfo);\n        }\n      } else {\n        everythingEnum = new EverythingEnum(fieldInfo);\n      }\n      return everythingEnum.reset(liveDocs, (IntBlockTermState) termState);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedPostingsReader#docsAndPositions(FieldInfo,BlockTermState,Bits,DocsAndPositionsEnum,boolean).mjava","sourceNew":null,"sourceOld":"  @Override\n  public DocsAndPositionsEnum docsAndPositions(FieldInfo fieldInfo, BlockTermState termState, Bits liveDocs,\n                                               DocsAndPositionsEnum reuse, boolean needsOffsets)\n    throws IOException {\n\n    // nocommit use needsPayloads here:\n    if (!needsOffsets && !fieldInfo.hasPayloads()) {\n      BlockDocsAndPositionsEnum docsAndPositionsEnum;\n      if (reuse instanceof BlockDocsAndPositionsEnum) {\n        docsAndPositionsEnum = (BlockDocsAndPositionsEnum) reuse;\n        if (!docsAndPositionsEnum.canReuse(docIn, fieldInfo)) {\n          docsAndPositionsEnum = new BlockDocsAndPositionsEnum(fieldInfo);\n        }\n      } else {\n        docsAndPositionsEnum = new BlockDocsAndPositionsEnum(fieldInfo);\n      }\n      return docsAndPositionsEnum.reset(liveDocs, (IntBlockTermState) termState);\n    } else {\n      EverythingEnum everythingEnum;\n      if (reuse instanceof EverythingEnum) {\n        everythingEnum = (EverythingEnum) reuse;\n        if (!everythingEnum.canReuse(docIn, fieldInfo)) {\n          everythingEnum = new EverythingEnum(fieldInfo);\n        }\n      } else {\n        everythingEnum = new EverythingEnum(fieldInfo);\n      }\n      return everythingEnum.reset(liveDocs, (IntBlockTermState) termState);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}