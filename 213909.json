{"path":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopen().mjava","commits":[{"id":"cca56866c19997e28ef073622656669c15210540","date":1307449014,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopen().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopenFS().mjava","sourceNew":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopen () throws IOException {\n    Directory dir = newDirectory();\n    doTestReopenWithCommit(random, dir, true);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopenFS () throws IOException {\n    Directory dir = newFSDirectory(indexDir);\n    doTestReopenWithCommit(random, dir, true);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopen().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopenFS().mjava","sourceNew":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopen () throws IOException {\n    Directory dir = newDirectory();\n    doTestReopenWithCommit(random, dir, true);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopenFS () throws IOException {\n    Directory dir = newFSDirectory(indexDir);\n    doTestReopenWithCommit(random, dir, true);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopen().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopen () throws IOException {\n    Directory dir = newDirectory();\n    doTestReopenWithCommit(random, dir, true);\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopen().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testCommitReopen().mjava","sourceNew":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopen () throws IOException {\n    Directory dir = newDirectory();\n    doTestReopenWithCommit(random, dir, true);\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-1228: IndexWriter.commit() does not update the index version\n  // populate an index in iterations.\n  // at the end of every iteration, commit the index and reopen/recreate the reader.\n  // in each iteration verify the work of previous iteration. \n  // try this once with reopen once recreate, on both RAMDir and FSDir.\n  public void testCommitReopen () throws IOException {\n    Directory dir = newDirectory();\n    doTestReopenWithCommit(random, dir, true);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cca56866c19997e28ef073622656669c15210540"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cca56866c19997e28ef073622656669c15210540"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cca56866c19997e28ef073622656669c15210540"],"cca56866c19997e28ef073622656669c15210540":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cca56866c19997e28ef073622656669c15210540"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"cca56866c19997e28ef073622656669c15210540":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","3a119bbc8703c10faa329ec201c654b3a35a1e3e","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}