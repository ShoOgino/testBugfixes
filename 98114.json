{"path":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,DataImporter.RequestParams,SolrQueryRequest).mjava","commits":[{"id":"5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa","date":1293733647,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,DataImporter.RequestParams,SolrQueryRequest).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,DataImporter.RequestParams).mjava","sourceNew":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader, final DataImporter.RequestParams requestParams, SolrQueryRequest req) {\n\n    return new SolrWriter(processor, loader.getConfigDir(), myName, req) {\n\n      @Override\n      public boolean upload(SolrInputDocument document) {\n        try {\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n          }\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.error( \"Exception while adding: \" + document, e);\n          return false;\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader, final DataImporter.RequestParams requestParams) {\n\n    return new SolrWriter(processor, loader.getConfigDir(), myName) {\n\n      @Override\n      public boolean upload(SolrInputDocument document) {\n        try {\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n          }\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.error( \"Exception while adding: \" + document, e);\n          return false;\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","date":1294014627,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,DataImporter.RequestParams,SolrQueryRequest).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,DataImporter.RequestParams).mjava","sourceNew":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader, final DataImporter.RequestParams requestParams, SolrQueryRequest req) {\n\n    return new SolrWriter(processor, loader.getConfigDir(), myName, req) {\n\n      @Override\n      public boolean upload(SolrInputDocument document) {\n        try {\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n          }\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.error( \"Exception while adding: \" + document, e);\n          return false;\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader, final DataImporter.RequestParams requestParams) {\n\n    return new SolrWriter(processor, loader.getConfigDir(), myName) {\n\n      @Override\n      public boolean upload(SolrInputDocument document) {\n        try {\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n          }\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.error( \"Exception while adding: \" + document, e);\n          return false;\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,DataImporter.RequestParams,SolrQueryRequest).mjava","pathOld":"/dev/null","sourceNew":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader, final DataImporter.RequestParams requestParams, SolrQueryRequest req) {\n\n    return new SolrWriter(processor, loader.getConfigDir(), myName, req) {\n\n      @Override\n      public boolean upload(SolrInputDocument document) {\n        try {\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n          }\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.error( \"Exception while adding: \" + document, e);\n          return false;\n        }\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,DataImporter.RequestParams,SolrQueryRequest).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,DataImporter.RequestParams,SolrQueryRequest).mjava","sourceNew":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader, final DataImporter.RequestParams requestParams, SolrQueryRequest req) {\n\n    return new SolrWriter(processor, loader.getConfigDir(), myName, req) {\n\n      @Override\n      public boolean upload(SolrInputDocument document) {\n        try {\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n          }\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.error( \"Exception while adding: \" + document, e);\n          return false;\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader, final DataImporter.RequestParams requestParams, SolrQueryRequest req) {\n\n    return new SolrWriter(processor, loader.getConfigDir(), myName, req) {\n\n      @Override\n      public boolean upload(SolrInputDocument document) {\n        try {\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n          }\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.error( \"Exception while adding: \" + document, e);\n          return false;\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,DataImporter.RequestParams,SolrQueryRequest).mjava","pathOld":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/DataImportHandler#getSolrWriter(UpdateRequestProcessor,SolrResourceLoader,DataImporter.RequestParams,SolrQueryRequest).mjava","sourceNew":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader, final DataImporter.RequestParams requestParams, SolrQueryRequest req) {\n\n    return new SolrWriter(processor, loader.getConfigDir(), myName, req) {\n\n      @Override\n      public boolean upload(SolrInputDocument document) {\n        try {\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n          }\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.error( \"Exception while adding: \" + document, e);\n          return false;\n        }\n      }\n    };\n  }\n\n","sourceOld":"  private SolrWriter getSolrWriter(final UpdateRequestProcessor processor,\n                                   final SolrResourceLoader loader, final DataImporter.RequestParams requestParams, SolrQueryRequest req) {\n\n    return new SolrWriter(processor, loader.getConfigDir(), myName, req) {\n\n      @Override\n      public boolean upload(SolrInputDocument document) {\n        try {\n          if (requestParams.debug) {\n            if (debugDocuments == null)\n              debugDocuments = new ArrayList<SolrInputDocument>();\n            debugDocuments.add(document);\n          }\n          return super.upload(document);\n        } catch (RuntimeException e) {\n          LOG.error( \"Exception while adding: \" + document, e);\n          return false;\n        }\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa","5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"c26f00b574427b55127e869b935845554afde1fa":["5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":[],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa"],"5ae62bcdfd4a0689a745ab1d38c6bd1c7c390cfa":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}