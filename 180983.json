{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testAddAll().mjava","commits":[{"id":"3e4eeaf7f7ec614137572a5645be1b62b86a5eec","date":1499368967,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testAddAll().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testAddAll() throws Exception {\n    String cexpr = \"addAll(array(1, 2, 3), array(4.5, 5.5, 6.5), array(7,8,9))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 9);\n    assertTrue(out.get(0).intValue() == 1);\n    assertTrue(out.get(1).intValue() == 2);\n    assertTrue(out.get(2).intValue() == 3);\n    assertTrue(out.get(3).doubleValue() == 4.5D);\n    assertTrue(out.get(4).doubleValue() == 5.5D);\n    assertTrue(out.get(5).doubleValue() == 6.5D);\n    assertTrue(out.get(6).intValue() == 7);\n    assertTrue(out.get(7).intValue() == 8);\n    assertTrue(out.get(8).intValue() == 9);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e73d8d559120669b47658108d818b637df5456ea","date":1499401413,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testAddAll().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testAddAll() throws Exception {\n    String cexpr = \"addAll(array(1, 2, 3), array(4.5, 5.5, 6.5), array(7,8,9))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 9);\n    assertTrue(out.get(0).intValue() == 1);\n    assertTrue(out.get(1).intValue() == 2);\n    assertTrue(out.get(2).intValue() == 3);\n    assertTrue(out.get(3).doubleValue() == 4.5D);\n    assertTrue(out.get(4).doubleValue() == 5.5D);\n    assertTrue(out.get(5).doubleValue() == 6.5D);\n    assertTrue(out.get(6).intValue() == 7);\n    assertTrue(out.get(7).intValue() == 8);\n    assertTrue(out.get(8).intValue() == 9);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf","date":1522951207,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testAddAll().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testAddAll().mjava","sourceNew":"  @Test\n  public void testAddAll() throws Exception {\n    String cexpr = \"addAll(array(1, 2, 3), array(4.5, 5.5, 6.5), array(7,8,9))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 9);\n    assertTrue(out.get(0).intValue() == 1);\n    assertTrue(out.get(1).intValue() == 2);\n    assertTrue(out.get(2).intValue() == 3);\n    assertTrue(out.get(3).doubleValue() == 4.5D);\n    assertTrue(out.get(4).doubleValue() == 5.5D);\n    assertTrue(out.get(5).doubleValue() == 6.5D);\n    assertTrue(out.get(6).intValue() == 7);\n    assertTrue(out.get(7).intValue() == 8);\n    assertTrue(out.get(8).intValue() == 9);\n  }\n\n","sourceOld":"  @Test\n  public void testAddAll() throws Exception {\n    String cexpr = \"addAll(array(1, 2, 3), array(4.5, 5.5, 6.5), array(7,8,9))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 9);\n    assertTrue(out.get(0).intValue() == 1);\n    assertTrue(out.get(1).intValue() == 2);\n    assertTrue(out.get(2).intValue() == 3);\n    assertTrue(out.get(3).doubleValue() == 4.5D);\n    assertTrue(out.get(4).doubleValue() == 5.5D);\n    assertTrue(out.get(5).doubleValue() == 6.5D);\n    assertTrue(out.get(6).intValue() == 7);\n    assertTrue(out.get(7).intValue() == 8);\n    assertTrue(out.get(8).intValue() == 9);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e4eeaf7f7ec614137572a5645be1b62b86a5eec":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e73d8d559120669b47658108d818b637df5456ea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3e4eeaf7f7ec614137572a5645be1b62b86a5eec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["3e4eeaf7f7ec614137572a5645be1b62b86a5eec"]},"commit2Childs":{"3e4eeaf7f7ec614137572a5645be1b62b86a5eec":["e73d8d559120669b47658108d818b637df5456ea","8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e4eeaf7f7ec614137572a5645be1b62b86a5eec","e73d8d559120669b47658108d818b637df5456ea"],"e73d8d559120669b47658108d818b637df5456ea":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["e73d8d559120669b47658108d818b637df5456ea","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}