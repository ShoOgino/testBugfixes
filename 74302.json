{"path":"src/java/org/apache/lucene/index/Term#compareTo(Term).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/Term#compareTo(Term).mjava","pathOld":"/dev/null","sourceNew":"  /** Compares two terms, returning an integer which is less than zero iff this\n    term belongs after the argument, equal zero iff this term is equal to the\n    argument, and greater than zero iff this term belongs after the argument.\n\n    The ordering of terms is first by field, then by text.*/\n  public final int compareTo(Term other) {\n    if (field == other.field)\t\t\t  // fields are interned\n      return text.compareTo(other.text);\n    else\n      return field.compareTo(other.field);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"50b36fbb9ac1744bf3c7891a3d5e4f92ef1102a5","date":1098492631,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/Term#compareTo(Term).mjava","pathOld":"src/java/org/apache/lucene/index/Term#compareTo(Term).mjava","sourceNew":"  /** Compares two terms, returning a negative integer iff this\n    term belongs before the argument, zero iff this term is equal to the\n    argument, and a positive integer iff this term belongs after the argument.\n\n    The ordering of terms is first by field, then by text.*/\n  public final int compareTo(Term other) {\n    if (field == other.field)\t\t\t  // fields are interned\n      return text.compareTo(other.text);\n    else\n      return field.compareTo(other.field);\n  }\n\n","sourceOld":"  /** Compares two terms, returning an integer which is less than zero iff this\n    term belongs after the argument, equal zero iff this term is equal to the\n    argument, and greater than zero iff this term belongs after the argument.\n\n    The ordering of terms is first by field, then by text.*/\n  public final int compareTo(Term other) {\n    if (field == other.field)\t\t\t  // fields are interned\n      return text.compareTo(other.text);\n    else\n      return field.compareTo(other.field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f8d1ecefa6a79b34987035e04fd7ae3bed43e5a","date":1112008473,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/Term#compareTo(Term).mjava","pathOld":"src/java/org/apache/lucene/index/Term#compareTo(Term).mjava","sourceNew":"  /** Compares two terms, returning a negative integer if this\n    term belongs before the argument, zero if this term is equal to the\n    argument, and a positive integer if this term belongs after the argument.\n\n    The ordering of terms is first by field, then by text.*/\n  public final int compareTo(Term other) {\n    if (field == other.field)\t\t\t  // fields are interned\n      return text.compareTo(other.text);\n    else\n      return field.compareTo(other.field);\n  }\n\n","sourceOld":"  /** Compares two terms, returning a negative integer iff this\n    term belongs before the argument, zero iff this term is equal to the\n    argument, and a positive integer iff this term belongs after the argument.\n\n    The ordering of terms is first by field, then by text.*/\n  public final int compareTo(Term other) {\n    if (field == other.field)\t\t\t  // fields are interned\n      return text.compareTo(other.text);\n    else\n      return field.compareTo(other.field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/Term#compareTo(Term).mjava","pathOld":"src/java/org/apache/lucene/index/Term#compareTo(Term).mjava","sourceNew":"  /** Compares two terms, returning a negative integer if this\n    term belongs before the argument, zero if this term is equal to the\n    argument, and a positive integer if this term belongs after the argument.\n\n    The ordering of terms is first by field, then by text.*/\n  public final int compareTo(Term other) {\n    if (field == other.field)\t\t\t  // fields are interned\n      return text.compareTo(other.text);\n    else\n      return field.compareTo(other.field);\n  }\n\n","sourceOld":"  /** Compares two terms, returning a negative integer if this\n    term belongs before the argument, zero if this term is equal to the\n    argument, and a positive integer if this term belongs after the argument.\n\n    The ordering of terms is first by field, then by text.*/\n  public final int compareTo(Term other) {\n    if (field == other.field)\t\t\t  // fields are interned\n      return text.compareTo(other.text);\n    else\n      return field.compareTo(other.field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"50b36fbb9ac1744bf3c7891a3d5e4f92ef1102a5":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4f8d1ecefa6a79b34987035e04fd7ae3bed43e5a":["50b36fbb9ac1744bf3c7891a3d5e4f92ef1102a5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4f8d1ecefa6a79b34987035e04fd7ae3bed43e5a"]},"commit2Childs":{"50b36fbb9ac1744bf3c7891a3d5e4f92ef1102a5":["4f8d1ecefa6a79b34987035e04fd7ae3bed43e5a"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["50b36fbb9ac1744bf3c7891a3d5e4f92ef1102a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"4f8d1ecefa6a79b34987035e04fd7ae3bed43e5a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}