{"path":"lucene/backwards/src/java/org/apache/lucene/store/MMapDirectory#setMaxChunkSize(int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/store/MMapDirectory#setMaxChunkSize(int).mjava","pathOld":"backwards/src/java/org/apache/lucene/store/MMapDirectory#setMaxChunkSize(int).mjava","sourceNew":"  /**\n   * Sets the maximum chunk size (default is {@link Integer#MAX_VALUE} for\n   * 64 bit JVMs and 256 MiBytes for 32 bit JVMs) used for memory mapping.\n   * Especially on 32 bit platform, the address space can be very fragmented,\n   * so large index files cannot be mapped.\n   * Using a lower chunk size makes the directory implementation a little\n   * bit slower (as the correct chunk must be resolved on each seek)\n   * but the chance is higher that mmap does not fail. On 64 bit\n   * Java platforms, this parameter should always be {@link Integer#MAX_VALUE},\n   * as the address space is big enough.\n   */\n  public void setMaxChunkSize(final int maxBBuf) {\n    if (maxBBuf<=0)\n      throw new IllegalArgumentException(\"Maximum chunk size for mmap must be >0\");\n    this.maxBBuf=maxBBuf;\n  }\n\n","sourceOld":"  /**\n   * Sets the maximum chunk size (default is {@link Integer#MAX_VALUE} for\n   * 64 bit JVMs and 256 MiBytes for 32 bit JVMs) used for memory mapping.\n   * Especially on 32 bit platform, the address space can be very fragmented,\n   * so large index files cannot be mapped.\n   * Using a lower chunk size makes the directory implementation a little\n   * bit slower (as the correct chunk must be resolved on each seek)\n   * but the chance is higher that mmap does not fail. On 64 bit\n   * Java platforms, this parameter should always be {@link Integer#MAX_VALUE},\n   * as the address space is big enough.\n   */\n  public void setMaxChunkSize(final int maxBBuf) {\n    if (maxBBuf<=0)\n      throw new IllegalArgumentException(\"Maximum chunk size for mmap must be >0\");\n    this.maxBBuf=maxBBuf;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/store/MMapDirectory#setMaxChunkSize(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Sets the maximum chunk size (default is {@link Integer#MAX_VALUE} for\n   * 64 bit JVMs and 256 MiBytes for 32 bit JVMs) used for memory mapping.\n   * Especially on 32 bit platform, the address space can be very fragmented,\n   * so large index files cannot be mapped.\n   * Using a lower chunk size makes the directory implementation a little\n   * bit slower (as the correct chunk must be resolved on each seek)\n   * but the chance is higher that mmap does not fail. On 64 bit\n   * Java platforms, this parameter should always be {@link Integer#MAX_VALUE},\n   * as the address space is big enough.\n   */\n  public void setMaxChunkSize(final int maxBBuf) {\n    if (maxBBuf<=0)\n      throw new IllegalArgumentException(\"Maximum chunk size for mmap must be >0\");\n    this.maxBBuf=maxBBuf;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}