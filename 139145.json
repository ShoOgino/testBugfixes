{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs).mjava","commits":[{"id":"0415a016b37e58a017fed0a91234f733ab359971","date":1341458183,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs,T).mjava","sourceNew":"  /**\n   * Make a query which has a score based on the distance from the data to the query shape.\n   * The default implementation constructs a {@link FilteredQuery} based on\n   * {@link #makeFilter(org.apache.lucene.spatial.query.SpatialArgs)} and\n   * {@link #makeValueSource(org.apache.lucene.spatial.query.SpatialArgs)}.\n   */\n  public Query makeQuery(SpatialArgs args) {\n    Filter filter = makeFilter(args);\n    ValueSource vs = makeValueSource(args);\n    return new FilteredQuery(new FunctionQuery(vs), filter);\n  }\n\n","sourceOld":"  /**\n   * Make a query which has a score based on the distance from the data to the query shape.\n   * The default implementation constructs a {@link FilteredQuery} based on\n   * {@link #makeFilter(org.apache.lucene.spatial.query.SpatialArgs, SpatialFieldInfo)} and\n   * {@link #makeValueSource(org.apache.lucene.spatial.query.SpatialArgs, SpatialFieldInfo)}.\n   */\n  public Query makeQuery(SpatialArgs args, T fieldInfo) {\n    Filter filter = makeFilter(args, fieldInfo);\n    ValueSource vs = makeValueSource(args, fieldInfo);\n    return new FilteredQuery(new FunctionQuery(vs), filter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Make a query which has a score based on the distance from the data to the query shape.\n   * The default implementation constructs a {@link FilteredQuery} based on\n   * {@link #makeFilter(org.apache.lucene.spatial.query.SpatialArgs)} and\n   * {@link #makeValueSource(org.apache.lucene.spatial.query.SpatialArgs)}.\n   */\n  public Query makeQuery(SpatialArgs args) {\n    Filter filter = makeFilter(args);\n    ValueSource vs = makeValueSource(args);\n    return new FilteredQuery(new FunctionQuery(vs), filter);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28bce66b0b769a7827b1f4df30b3f50a2ed6c355","date":1347720564,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs).mjava","sourceNew":"  /**\n   * Make a (ConstantScore) Query based principally on {@link org.apache.lucene.spatial.query.SpatialOperation}\n   * and {@link Shape} from the supplied {@code args}.\n   * The default implementation is\n   * <pre>return new ConstantScoreQuery(makeFilter(args));</pre>\n   */\n  public ConstantScoreQuery makeQuery(SpatialArgs args) {\n    return new ConstantScoreQuery(makeFilter(args));\n  }\n\n","sourceOld":"  /**\n   * Make a query which has a score based on the distance from the data to the query shape.\n   * The default implementation constructs a {@link FilteredQuery} based on\n   * {@link #makeFilter(org.apache.lucene.spatial.query.SpatialArgs)} and\n   * {@link #makeValueSource(org.apache.lucene.spatial.query.SpatialArgs)}.\n   */\n  public Query makeQuery(SpatialArgs args) {\n    Filter filter = makeFilter(args);\n    ValueSource vs = makeValueSource(args);\n    return new FilteredQuery(new FunctionQuery(vs), filter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f65afee0ae7c7a78e3de849a5772a0af60c50ead","date":1348341124,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs).mjava","sourceNew":"  /**\n   * Make a (ConstantScore) Query based principally on {@link org.apache.lucene.spatial.query.SpatialOperation}\n   * and {@link Shape} from the supplied {@code args}.\n   * The default implementation is\n   * <pre>return new ConstantScoreQuery(makeFilter(args));</pre>\n   *\n   * @throws UnsupportedOperationException If the strategy does not support the shape in {@code args}\n   * @throws org.apache.lucene.spatial.query.UnsupportedSpatialOperation If the strategy does not support the {@link\n   * org.apache.lucene.spatial.query.SpatialOperation} in {@code args}.\n   */\n  public ConstantScoreQuery makeQuery(SpatialArgs args) {\n    return new ConstantScoreQuery(makeFilter(args));\n  }\n\n","sourceOld":"  /**\n   * Make a (ConstantScore) Query based principally on {@link org.apache.lucene.spatial.query.SpatialOperation}\n   * and {@link Shape} from the supplied {@code args}.\n   * The default implementation is\n   * <pre>return new ConstantScoreQuery(makeFilter(args));</pre>\n   */\n  public ConstantScoreQuery makeQuery(SpatialArgs args) {\n    return new ConstantScoreQuery(makeFilter(args));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1b736084616dfe537aed7028f099b04f58571f6b","date":1355167639,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs).mjava","sourceNew":"  /**\n   * Make a Query based principally on {@link org.apache.lucene.spatial.query.SpatialOperation}\n   * and {@link Shape} from the supplied {@code args}.\n   * The default implementation is\n   * <pre>return new ConstantScoreQuery(makeFilter(args));</pre>\n   *\n   * @throws UnsupportedOperationException If the strategy does not support the shape in {@code args}\n   * @throws org.apache.lucene.spatial.query.UnsupportedSpatialOperation If the strategy does not support the {@link\n   * org.apache.lucene.spatial.query.SpatialOperation} in {@code args}.\n   */\n  public Query makeQuery(SpatialArgs args) {\n    return new ConstantScoreQuery(makeFilter(args));\n  }\n\n","sourceOld":"  /**\n   * Make a (ConstantScore) Query based principally on {@link org.apache.lucene.spatial.query.SpatialOperation}\n   * and {@link Shape} from the supplied {@code args}.\n   * The default implementation is\n   * <pre>return new ConstantScoreQuery(makeFilter(args));</pre>\n   *\n   * @throws UnsupportedOperationException If the strategy does not support the shape in {@code args}\n   * @throws org.apache.lucene.spatial.query.UnsupportedSpatialOperation If the strategy does not support the {@link\n   * org.apache.lucene.spatial.query.SpatialOperation} in {@code args}.\n   */\n  public ConstantScoreQuery makeQuery(SpatialArgs args) {\n    return new ConstantScoreQuery(makeFilter(args));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs).mjava","sourceNew":"  /**\n   * Make a Query based principally on {@link org.apache.lucene.spatial.query.SpatialOperation}\n   * and {@link Shape} from the supplied {@code args}.\n   * The default implementation is\n   * <pre>return new ConstantScoreQuery(makeFilter(args));</pre>\n   *\n   * @throws UnsupportedOperationException If the strategy does not support the shape in {@code args}\n   * @throws org.apache.lucene.spatial.query.UnsupportedSpatialOperation If the strategy does not support the {@link\n   * org.apache.lucene.spatial.query.SpatialOperation} in {@code args}.\n   */\n  public Query makeQuery(SpatialArgs args) {\n    return new ConstantScoreQuery(makeFilter(args));\n  }\n\n","sourceOld":"  /**\n   * Make a (ConstantScore) Query based principally on {@link org.apache.lucene.spatial.query.SpatialOperation}\n   * and {@link Shape} from the supplied {@code args}.\n   * The default implementation is\n   * <pre>return new ConstantScoreQuery(makeFilter(args));</pre>\n   *\n   * @throws UnsupportedOperationException If the strategy does not support the shape in {@code args}\n   * @throws org.apache.lucene.spatial.query.UnsupportedSpatialOperation If the strategy does not support the {@link\n   * org.apache.lucene.spatial.query.SpatialOperation} in {@code args}.\n   */\n  public ConstantScoreQuery makeQuery(SpatialArgs args) {\n    return new ConstantScoreQuery(makeFilter(args));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"672b198fc3dce868916c727917cae58c2906763d","date":1443669960,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs).mjava","sourceNew":"  /**\n   * Make a Query based principally on {@link org.apache.lucene.spatial.query.SpatialOperation}\n   * and {@link Shape} from the supplied {@code args}.  It should be constant scoring of 1.\n   *\n   * @throws UnsupportedOperationException If the strategy does not support the shape in {@code args}\n   * @throws org.apache.lucene.spatial.query.UnsupportedSpatialOperation If the strategy does not support the {@link\n   * org.apache.lucene.spatial.query.SpatialOperation} in {@code args}.\n   */\n  public abstract Query makeQuery(SpatialArgs args);\n\n","sourceOld":"  /**\n   * Make a Query based principally on {@link org.apache.lucene.spatial.query.SpatialOperation}\n   * and {@link Shape} from the supplied {@code args}.\n   * The default implementation is\n   * <pre>return new ConstantScoreQuery(makeFilter(args));</pre>\n   *\n   * @throws UnsupportedOperationException If the strategy does not support the shape in {@code args}\n   * @throws org.apache.lucene.spatial.query.UnsupportedSpatialOperation If the strategy does not support the {@link\n   * org.apache.lucene.spatial.query.SpatialOperation} in {@code args}.\n   */\n  public Query makeQuery(SpatialArgs args) {\n    return new ConstantScoreQuery(makeFilter(args));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs).mjava","sourceNew":"  /**\n   * Make a Query based principally on {@link org.apache.lucene.spatial.query.SpatialOperation}\n   * and {@link Shape} from the supplied {@code args}.  It should be constant scoring of 1.\n   *\n   * @throws UnsupportedOperationException If the strategy does not support the shape in {@code args}\n   * @throws org.apache.lucene.spatial.query.UnsupportedSpatialOperation If the strategy does not support the {@link\n   * org.apache.lucene.spatial.query.SpatialOperation} in {@code args}.\n   */\n  public abstract Query makeQuery(SpatialArgs args);\n\n","sourceOld":"  /**\n   * Make a Query based principally on {@link org.apache.lucene.spatial.query.SpatialOperation}\n   * and {@link Shape} from the supplied {@code args}.  It should be constant scoring of 1.\n   *\n   * @throws UnsupportedOperationException If the strategy does not support the shape in {@code args}\n   * @throws org.apache.lucene.spatial.query.UnsupportedSpatialOperation If the strategy does not support the {@link\n   * org.apache.lucene.spatial.query.SpatialOperation} in {@code args}.\n   */\n  public abstract Query makeQuery(SpatialArgs args);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/SpatialStrategy#makeQuery(SpatialArgs).mjava","sourceNew":"  /**\n   * Make a Query based principally on {@link org.apache.lucene.spatial.query.SpatialOperation}\n   * and {@link Shape} from the supplied {@code args}.  It should be constant scoring of 1.\n   *\n   * @throws UnsupportedOperationException If the strategy does not support the shape in {@code args}\n   * @throws org.apache.lucene.spatial.query.UnsupportedSpatialOperation If the strategy does not support the {@link\n   * org.apache.lucene.spatial.query.SpatialOperation} in {@code args}.\n   */\n  public abstract Query makeQuery(SpatialArgs args);\n\n","sourceOld":"  /**\n   * Make a Query based principally on {@link org.apache.lucene.spatial.query.SpatialOperation}\n   * and {@link Shape} from the supplied {@code args}.  It should be constant scoring of 1.\n   *\n   * @throws UnsupportedOperationException If the strategy does not support the shape in {@code args}\n   * @throws org.apache.lucene.spatial.query.UnsupportedSpatialOperation If the strategy does not support the {@link\n   * org.apache.lucene.spatial.query.SpatialOperation} in {@code args}.\n   */\n  public abstract Query makeQuery(SpatialArgs args);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0415a016b37e58a017fed0a91234f733ab359971":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["f65afee0ae7c7a78e3de849a5772a0af60c50ead","1b736084616dfe537aed7028f099b04f58571f6b"],"af2638813028b254a88b418ebeafb541afb49653":["672b198fc3dce868916c727917cae58c2906763d","112d77ac8d3e10a362516ad834c9a11d35c94234"],"1b736084616dfe537aed7028f099b04f58571f6b":["f65afee0ae7c7a78e3de849a5772a0af60c50ead"],"672b198fc3dce868916c727917cae58c2906763d":["1b736084616dfe537aed7028f099b04f58571f6b"],"f65afee0ae7c7a78e3de849a5772a0af60c50ead":["28bce66b0b769a7827b1f4df30b3f50a2ed6c355"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0415a016b37e58a017fed0a91234f733ab359971"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["672b198fc3dce868916c727917cae58c2906763d"],"28bce66b0b769a7827b1f4df30b3f50a2ed6c355":["0415a016b37e58a017fed0a91234f733ab359971"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"0415a016b37e58a017fed0a91234f733ab359971":["fe33227f6805edab2036cbb80645cc4e2d1fa424","28bce66b0b769a7827b1f4df30b3f50a2ed6c355"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1b736084616dfe537aed7028f099b04f58571f6b":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","672b198fc3dce868916c727917cae58c2906763d"],"f65afee0ae7c7a78e3de849a5772a0af60c50ead":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","1b736084616dfe537aed7028f099b04f58571f6b"],"672b198fc3dce868916c727917cae58c2906763d":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0415a016b37e58a017fed0a91234f733ab359971","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"28bce66b0b769a7827b1f4df30b3f50a2ed6c355":["f65afee0ae7c7a78e3de849a5772a0af60c50ead"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}