{"path":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String,String).mjava","commits":[{"id":"bfc52860e6d13d034226a760813c59d984c6817a","date":1522229027,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  /**\n   * Initializes metrics specific to this producer\n   * @param manager an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param tag a symbolic tag that represents this instance of the producer,\n   * or a group of related instances that have the same life-cycle. This tag is\n   * used when managing life-cycle of some metrics and is set when\n   * {@link #initializeMetrics(SolrMetricManager, String, String, String)} is called.\n   * @param scope scope of the metrics (eg. handler name) to separate metrics of\n   */\n  void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope);\n\n","sourceOld":"  /**\n   * Initializes metrics specific to this producer\n   * @param manager an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param scope scope of the metrics (eg. handler name) to separate metrics of\n   *              instances of the same component executing in different contexts\n   */\n  void initializeMetrics(SolrMetricManager manager, String registry, String scope);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43564cbb30b064675027cfb569564e8531096e97","date":1522334265,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  /**\n   * Initializes metrics specific to this producer\n   * @param manager an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param tag a symbolic tag that represents this instance of the producer,\n   * or a group of related instances that have the same life-cycle. This tag is\n   * used when managing life-cycle of some metrics and is set when\n   * {@link #initializeMetrics(SolrMetricManager, String, String, String)} is called.\n   * @param scope scope of the metrics (eg. handler name) to separate metrics of\n   */\n  void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope);\n\n","sourceOld":"  /**\n   * Initializes metrics specific to this producer\n   * @param manager an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param scope scope of the metrics (eg. handler name) to separate metrics of\n   *              instances of the same component executing in different contexts\n   */\n  void initializeMetrics(SolrMetricManager manager, String registry, String scope);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a117d95183986014a31f25bb04e5464ca06d6068","date":1566208086,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String,String).mjava","sourceNew":"  /**\n   * Initializes metrics specific to this producer\n   *\n   * @param manager  an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param tag      a symbolic tag that represents this instance of the producer,\n   *                 or a group of related instances that have the same life-cycle. This tag is\n   *                 used when managing life-cycle of some metrics and is set when\n   *                 {@link #initializeMetrics(SolrMetricManager, String, String, String)} is called.\n   * @param scope    scope of the metrics (eg. handler name) to separate metrics of\n   */\n  default void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope) {\n    initializeMetrics(new SolrMetrics(manager, registry, tag, scope));\n\n  }\n\n","sourceOld":"  /**\n   * Initializes metrics specific to this producer\n   * @param manager an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param tag a symbolic tag that represents this instance of the producer,\n   * or a group of related instances that have the same life-cycle. This tag is\n   * used when managing life-cycle of some metrics and is set when\n   * {@link #initializeMetrics(SolrMetricManager, String, String, String)} is called.\n   * @param scope scope of the metrics (eg. handler name) to separate metrics of\n   */\n  void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17c468812fc0c60f3d66b176339dc70564d8c3cb","date":1567918667,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String,String).mjava","sourceNew":"  /**\n   * Initializes metrics specific to this producer\n   * @param manager  an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param tag      a symbolic tag that represents this instance of the producer,\n   *                 or a group of related instances that have the same life-cycle. This tag is\n   *                 used when managing life-cycle of some metrics and is set when\n   *                 {@link #initializeMetrics(SolrMetricManager, String, String, String)} is called.\n   * @param scope    scope of the metrics (eg. handler name) to separate metrics of\n   */\n  void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope);\n\n","sourceOld":"  /**\n   * Initializes metrics specific to this producer\n   *\n   * @param manager  an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param tag      a symbolic tag that represents this instance of the producer,\n   *                 or a group of related instances that have the same life-cycle. This tag is\n   *                 used when managing life-cycle of some metrics and is set when\n   *                 {@link #initializeMetrics(SolrMetricManager, String, String, String)} is called.\n   * @param scope    scope of the metrics (eg. handler name) to separate metrics of\n   */\n  default void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope) {\n    initializeMetrics(new SolrMetrics(manager, registry, tag, scope));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52275555c0ae3b55430cef26ad7fca3f02440944","date":1568033329,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String,String).mjava","sourceNew":"  /**\n   * Initializes metrics specific to this producer\n   * @param manager  an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param tag      a symbolic tag that represents this instance of the producer,\n   *                 or a group of related instances that have the same life-cycle. This tag is\n   *                 used when managing life-cycle of some metrics and is set when\n   *                 {@link #initializeMetrics(SolrMetricManager, String, String, String)} is called.\n   * @param scope    scope of the metrics (eg. handler name) to separate metrics of\n   */\n  void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope);\n\n","sourceOld":"  /**\n   * Initializes metrics specific to this producer\n   *\n   * @param manager  an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param tag      a symbolic tag that represents this instance of the producer,\n   *                 or a group of related instances that have the same life-cycle. This tag is\n   *                 used when managing life-cycle of some metrics and is set when\n   *                 {@link #initializeMetrics(SolrMetricManager, String, String, String)} is called.\n   * @param scope    scope of the metrics (eg. handler name) to separate metrics of\n   */\n  default void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope) {\n    initializeMetrics(new SolrMetrics(manager, registry, tag, scope));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String,String).mjava","sourceNew":"  /**\n   * Initializes metrics specific to this producer\n   * @param manager an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param tag a symbolic tag that represents this instance of the producer,\n   * or a group of related instances that have the same life-cycle. This tag is\n   * used when managing life-cycle of some metrics and is set when\n   * {@link #initializeMetrics(SolrMetricManager, String, String, String)} is called.\n   * @param scope scope of the metrics (eg. handler name) to separate metrics of\n   */\n  void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope);\n\n","sourceOld":"  /**\n   * Initializes metrics specific to this producer\n   * @param manager  an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param tag      a symbolic tag that represents this instance of the producer,\n   *                 or a group of related instances that have the same life-cycle. This tag is\n   *                 used when managing life-cycle of some metrics and is set when\n   *                 {@link #initializeMetrics(SolrMetricManager, String, String, String)} is called.\n   * @param scope    scope of the metrics (eg. handler name) to separate metrics of\n   */\n  void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String,String).mjava","sourceNew":"  /**\n   * Initializes metrics specific to this producer\n   * @param manager an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param tag a symbolic tag that represents this instance of the producer,\n   * or a group of related instances that have the same life-cycle. This tag is\n   * used when managing life-cycle of some metrics and is set when\n   * {@link #initializeMetrics(SolrMetricManager, String, String, String)} is called.\n   * @param scope scope of the metrics (eg. handler name) to separate metrics of\n   */\n  void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope);\n\n","sourceOld":"  /**\n   * Initializes metrics specific to this producer\n   * @param manager  an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param tag      a symbolic tag that represents this instance of the producer,\n   *                 or a group of related instances that have the same life-cycle. This tag is\n   *                 used when managing life-cycle of some metrics and is set when\n   *                 {@link #initializeMetrics(SolrMetricManager, String, String, String)} is called.\n   * @param scope    scope of the metrics (eg. handler name) to separate metrics of\n   */\n  void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa","date":1571411704,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String,String).mjava","sourceNew":"  /**\n   * Initializes metrics specific to this producer\n   *\n   * @param manager  an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param tag      a symbolic tag that represents this instance of the producer,\n   *                 or a group of related instances that have the same life-cycle. This tag is\n   *                 used when managing life-cycle of some metrics.\n   * @param scope    scope of the metrics (eg. handler name) to separate metrics of components with\n   *                 the same implementation but different scope.\n   * @deprecated use {@link #initializeMetrics(SolrMetricsContext, String)} instead\n   */\n  @Deprecated\n  default void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope) {\n    initializeMetrics(new SolrMetricsContext(manager, registry, tag), scope);\n\n  }\n\n","sourceOld":"  /**\n   * Initializes metrics specific to this producer\n   * @param manager an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param tag a symbolic tag that represents this instance of the producer,\n   * or a group of related instances that have the same life-cycle. This tag is\n   * used when managing life-cycle of some metrics and is set when\n   * {@link #initializeMetrics(SolrMetricManager, String, String, String)} is called.\n   * @param scope scope of the metrics (eg. handler name) to separate metrics of\n   */\n  void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e9e5eaf280a6aa21423126b8232aa157a9b7366","date":1571772228,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricProducer#initializeMetrics(SolrMetricManager,String,String,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Initializes metrics specific to this producer\n   *\n   * @param manager  an instance of {@link SolrMetricManager}\n   * @param registry registry name where metrics are registered\n   * @param tag      a symbolic tag that represents this instance of the producer,\n   *                 or a group of related instances that have the same life-cycle. This tag is\n   *                 used when managing life-cycle of some metrics.\n   * @param scope    scope of the metrics (eg. handler name) to separate metrics of components with\n   *                 the same implementation but different scope.\n   * @deprecated use {@link #initializeMetrics(SolrMetricsContext, String)} instead\n   */\n  @Deprecated\n  default void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope) {\n    initializeMetrics(new SolrMetricsContext(manager, registry, tag), scope);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bfc52860e6d13d034226a760813c59d984c6817a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"52275555c0ae3b55430cef26ad7fca3f02440944":["a117d95183986014a31f25bb04e5464ca06d6068","17c468812fc0c60f3d66b176339dc70564d8c3cb"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["c44cc06c26e456fe9c215072b79fce30babe3975"],"43564cbb30b064675027cfb569564e8531096e97":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bfc52860e6d13d034226a760813c59d984c6817a"],"2e9e5eaf280a6aa21423126b8232aa157a9b7366":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c44cc06c26e456fe9c215072b79fce30babe3975":["52275555c0ae3b55430cef26ad7fca3f02440944"],"a117d95183986014a31f25bb04e5464ca06d6068":["43564cbb30b064675027cfb569564e8531096e97"],"17c468812fc0c60f3d66b176339dc70564d8c3cb":["a117d95183986014a31f25bb04e5464ca06d6068"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2e9e5eaf280a6aa21423126b8232aa157a9b7366"],"b0b597c65628ca9e73913a07e81691f8229bae35":["52275555c0ae3b55430cef26ad7fca3f02440944","c44cc06c26e456fe9c215072b79fce30babe3975"]},"commit2Childs":{"bfc52860e6d13d034226a760813c59d984c6817a":["43564cbb30b064675027cfb569564e8531096e97"],"52275555c0ae3b55430cef26ad7fca3f02440944":["c44cc06c26e456fe9c215072b79fce30babe3975","b0b597c65628ca9e73913a07e81691f8229bae35"],"c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa":["2e9e5eaf280a6aa21423126b8232aa157a9b7366"],"43564cbb30b064675027cfb569564e8531096e97":["a117d95183986014a31f25bb04e5464ca06d6068"],"2e9e5eaf280a6aa21423126b8232aa157a9b7366":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bfc52860e6d13d034226a760813c59d984c6817a","43564cbb30b064675027cfb569564e8531096e97"],"a117d95183986014a31f25bb04e5464ca06d6068":["52275555c0ae3b55430cef26ad7fca3f02440944","17c468812fc0c60f3d66b176339dc70564d8c3cb"],"c44cc06c26e456fe9c215072b79fce30babe3975":["c959a64c5b52cc12eb8daa17f4f0ed9cf2dfcaaa","b0b597c65628ca9e73913a07e81691f8229bae35"],"17c468812fc0c60f3d66b176339dc70564d8c3cb":["52275555c0ae3b55430cef26ad7fca3f02440944"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}