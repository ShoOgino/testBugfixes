{"path":"modules/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,LuceneTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","commits":[{"id":"89f15687f60bd49cd3d9de427e85c17fd9397d61","date":1309381327,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,LuceneTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, LuceneTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = SimpleUtils.categoryPathArrayToList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      DocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new Field(SimpleUtils.TITLE, docTitles[docNum], Store.YES, Index.ANALYZED));\n      doc.add(new Field(SimpleUtils.TEXT, docTexts[docNum], Store.NO, Index.ANALYZED));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c0c33431a0dd360568640558ccdec0e004db476","date":1309438393,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,LuceneTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","pathOld":"modules/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,LuceneTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","sourceNew":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, LuceneTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      DocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new Field(SimpleUtils.TITLE, docTitles[docNum], Store.YES, Index.ANALYZED));\n      doc.add(new Field(SimpleUtils.TEXT, docTexts[docNum], Store.NO, Index.ANALYZED));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","sourceOld":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, LuceneTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = SimpleUtils.categoryPathArrayToList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      DocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new Field(SimpleUtils.TITLE, docTitles[docNum], Store.YES, Index.ANALYZED));\n      doc.add(new Field(SimpleUtils.TEXT, docTexts[docNum], Store.NO, Index.ANALYZED));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,LuceneTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, LuceneTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      DocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new Field(SimpleUtils.TITLE, docTitles[docNum], Store.YES, Index.ANALYZED));\n      doc.add(new Field(SimpleUtils.TEXT, docTexts[docNum], Store.NO, Index.ANALYZED));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,LuceneTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, LuceneTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      DocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new Field(SimpleUtils.TITLE, docTitles[docNum], Store.YES, Index.ANALYZED));\n      doc.add(new Field(SimpleUtils.TEXT, docTexts[docNum], Store.NO, Index.ANALYZED));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,LuceneTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","pathOld":"modules/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,LuceneTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","sourceNew":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, LuceneTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      DocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new Field(SimpleUtils.TITLE, TextField.TYPE_STORED, docTitles[docNum]));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum]));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","sourceOld":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, LuceneTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      DocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new Field(SimpleUtils.TITLE, docTitles[docNum], Store.YES, Index.ANALYZED));\n      doc.add(new Field(SimpleUtils.TEXT, docTexts[docNum], Store.NO, Index.ANALYZED));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd","date":1317197236,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,LuceneTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","pathOld":"modules/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,LuceneTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","sourceNew":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, LuceneTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      DocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new Field(SimpleUtils.TITLE, docTitles[docNum], TextField.TYPE_STORED));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum]));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","sourceOld":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, LuceneTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      DocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new Field(SimpleUtils.TITLE, TextField.TYPE_STORED, docTitles[docNum]));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum]));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c9ba41efd3b52721fdd028e8b8985602f4dad4b8","date":1320217627,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"modules/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,LuceneTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","pathOld":"modules/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,LuceneTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","sourceNew":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, LuceneTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      CategoryDocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new Field(SimpleUtils.TITLE, docTitles[docNum], TextField.TYPE_STORED));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum]));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","sourceOld":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, LuceneTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      DocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new Field(SimpleUtils.TITLE, docTitles[docNum], TextField.TYPE_STORED));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum]));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ea469eab8fd0f3032f4fcde1c644a721e8309d3b","date":1320301582,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"modules/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,DirectoryTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","pathOld":"modules/facet/src/examples/org/apache/lucene/facet/example/multiCL/MultiCLIndexer#index(IndexWriter,LuceneTaxonomyWriter,FacetIndexingParams,String[],String[],CategoryPath[][]).mjava","sourceNew":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, DirectoryTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      CategoryDocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new Field(SimpleUtils.TITLE, docTitles[docNum], TextField.TYPE_STORED));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum]));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","sourceOld":"  /**\n   * More advanced method for specifying custom indexing params, doc texts, \n   * doc titles and category paths.\n   * <p>\n   * Create an index, and adds to it sample documents and facets.\n   * @throws Exception\n   *             on error (no detailed exception handling here for sample\n   *             simplicity\n   */\n  public static void index(IndexWriter iw, LuceneTaxonomyWriter taxo,\n      FacetIndexingParams iParams, String[] docTitles,\n      String[] docTexts, CategoryPath[][] cPaths) throws Exception {\n\n    // loop over sample documents\n    int nDocsAdded = 0;\n    int nFacetsAdded = 0;\n    for (int docNum = 0; docNum < SimpleUtils.docTexts.length; docNum++) {\n      List<CategoryPath> facetList = Arrays.asList(cPaths[docNum]);\n\n      // we do not alter indexing parameters!\n      // a category document builder will add the categories to a document\n      // once build() is called\n      CategoryDocumentBuilder categoryDocBuilder = new CategoryDocumentBuilder(\n          taxo, iParams).setCategoryPaths(facetList);\n\n      // create a plain Lucene document and add some regular Lucene fields\n      // to it\n      Document doc = new Document();\n      doc.add(new Field(SimpleUtils.TITLE, docTitles[docNum], TextField.TYPE_STORED));\n      doc.add(new TextField(SimpleUtils.TEXT, docTexts[docNum]));\n\n      // finally add the document to the index\n      categoryDocBuilder.build(doc);\n      iw.addDocument(doc);\n      \n      nDocsAdded++;\n      nFacetsAdded += facetList.size();\n    }\n\n    // commit changes.\n    // we commit changes to the taxonomy index prior to committing them to\n    // the search index.\n    // this is important, so that all facets referred to by documents in the\n    // search index\n    // will indeed exist in the taxonomy index.\n    taxo.commit();\n    iw.commit();\n\n    // close the taxonomy index and the index - all modifications are\n    // now safely in the provided directories: indexDir and taxoDir.\n    taxo.close();\n    iw.close();\n\n    ExampleUtils.log(\"Indexed \" + nDocsAdded + \" documents with overall \"\n        + nFacetsAdded + \" facets.\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"0c0c33431a0dd360568640558ccdec0e004db476":["89f15687f60bd49cd3d9de427e85c17fd9397d61"],"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["c9ba41efd3b52721fdd028e8b8985602f4dad4b8"],"c9ba41efd3b52721fdd028e8b8985602f4dad4b8":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["0c0c33431a0dd360568640558ccdec0e004db476"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0c0c33431a0dd360568640558ccdec0e004db476"],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0c0c33431a0dd360568640558ccdec0e004db476"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["1509f151d7692d84fae414b2b799ac06ba60fcb4"]},"commit2Childs":{"0c0c33431a0dd360568640558ccdec0e004db476":["1509f151d7692d84fae414b2b799ac06ba60fcb4","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"ea469eab8fd0f3032f4fcde1c644a721e8309d3b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9ba41efd3b52721fdd028e8b8985602f4dad4b8":["ea469eab8fd0f3032f4fcde1c644a721e8309d3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d083e83f225b11e5fdd900e83d26ddb385b6955c","89f15687f60bd49cd3d9de427e85c17fd9397d61","817d8435e9135b756f08ce6710ab0baac51bdf88"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["0c0c33431a0dd360568640558ccdec0e004db476"],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["c9ba41efd3b52721fdd028e8b8985602f4dad4b8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}