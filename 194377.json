{"path":"lucene/test-framework/src/java/org/apache/lucene/search/spans/AssertingSpans#getPayload().mjava","commits":[{"id":"28b61f1c9cf357a13efbb645d116d056feb80cf6","date":1428863054,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/spans/AssertingSpans#getPayload().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Collection<byte[]> getPayload() throws IOException {\n    assert state == State.ITERATING : \"getPayload() called in illegal state: \" + state + \": \" + in;\n    return in.getPayload();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d530e71ed32ab23b34ca3fc72b080a554a40404","date":1432026158,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/spans/AssertingSpans#getPayload().mjava","sourceNew":null,"sourceOld":"  @Override\n  public Collection<byte[]> getPayload() throws IOException {\n    assert state == State.ITERATING : \"getPayload() called in illegal state: \" + state + \": \" + in;\n    return in.getPayload();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2d530e71ed32ab23b34ca3fc72b080a554a40404":["28b61f1c9cf357a13efbb645d116d056feb80cf6"],"28b61f1c9cf357a13efbb645d116d056feb80cf6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2d530e71ed32ab23b34ca3fc72b080a554a40404"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["28b61f1c9cf357a13efbb645d116d056feb80cf6"],"2d530e71ed32ab23b34ca3fc72b080a554a40404":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"28b61f1c9cf357a13efbb645d116d056feb80cf6":["2d530e71ed32ab23b34ca3fc72b080a554a40404"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}