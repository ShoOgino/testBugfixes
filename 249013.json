{"path":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#uninstallCodecsAfterClass().mjava","commits":[{"id":"558b125bbf6fa91eb5355da7e849d46edaf735bc","date":1314371299,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#uninstallCodecsAfterClass().mjava","pathOld":"/dev/null","sourceNew":"  /** uninstalls test codecs, returns description of the codec used for debugging */\n  private static String uninstallCodecsAfterClass() {\n    String codecDescription;\n    CodecProvider cp = CodecProvider.getDefault();\n\n    if (\"randomPerField\".equals(TEST_CODEC) && cp instanceof RandomCodecProvider) {\n      codecDescription = cp.toString();\n    } else {\n      codecDescription = codec.toString();\n    }\n\n    if (\"random\".equals(TEST_CODECPROVIDER) && CodecProvider.getDefault() == savedCodecProvider)\n      removeTestCodecs(codec, CodecProvider.getDefault());\n    CodecProvider.setDefault(savedCodecProvider);\n\n    return codecDescription;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#uninstallCodecsAfterClass().mjava","sourceNew":null,"sourceOld":"  /** uninstalls test codecs, returns description of the codec used for debugging */\n  private static String uninstallCodecsAfterClass() {\n    String codecDescription;\n    CodecProvider cp = CodecProvider.getDefault();\n\n    if (\"randomPerField\".equals(TEST_CODEC) && cp instanceof RandomCodecProvider) {\n      codecDescription = cp.toString();\n    } else {\n      codecDescription = codec.toString();\n    }\n\n    if (\"random\".equals(TEST_CODECPROVIDER) && CodecProvider.getDefault() == savedCodecProvider)\n      removeTestCodecs(codec, CodecProvider.getDefault());\n    CodecProvider.setDefault(savedCodecProvider);\n\n    return codecDescription;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["558b125bbf6fa91eb5355da7e849d46edaf735bc"],"558b125bbf6fa91eb5355da7e849d46edaf735bc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"558b125bbf6fa91eb5355da7e849d46edaf735bc":["7b91922b55d15444d554721b352861d028eb8278"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["558b125bbf6fa91eb5355da7e849d46edaf735bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}