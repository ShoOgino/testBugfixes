{"path":"src/test/org/apache/solr/client/solrj/SolrExampleTests#testCommitWithin().mjava","commits":[{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/client/solrj/SolrExampleTests#testCommitWithin().mjava","pathOld":"client/java/solrj/test/org/apache/solr/client/solrj/SolrExampleTests#testCommitWithin().mjava","sourceNew":"  /**\n   * query the example\n   */\n  public void testCommitWithin() throws Exception\n  {    \n    // make sure it is empty...\n    SolrServer server = getSolrServer();\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n    QueryResponse rsp = server.query( new SolrQuery( \"*:*\") );\n    Assert.assertEquals( 0, rsp.getResults().getNumFound() );\n\n    // Now try a timed commit...\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField( \"id\", \"id3\", 1.0f );\n    doc3.addField( \"name\", \"doc3\", 1.0f );\n    doc3.addField( \"price\", 10 );\n    UpdateRequest up = new UpdateRequest();\n    up.add( doc3 );\n    up.setCommitWithin( 100 );\n    up.process( server );\n    \n    rsp = server.query( new SolrQuery( \"*:*\") );\n    Assert.assertEquals( 0, rsp.getResults().getNumFound() );\n    \n    Thread.sleep( 500 ); // wait 1/2 seconds...\n\n    // now check that it comes out...\n    rsp = server.query( new SolrQuery( \"id:id3\") );\n    Assert.assertEquals( 1, rsp.getResults().getNumFound() );\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n  public void testCommitWithin() throws Exception\n  {    \n    // make sure it is empty...\n    SolrServer server = getSolrServer();\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n    QueryResponse rsp = server.query( new SolrQuery( \"*:*\") );\n    Assert.assertEquals( 0, rsp.getResults().getNumFound() );\n\n    // Now try a timed commit...\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField( \"id\", \"id3\", 1.0f );\n    doc3.addField( \"name\", \"doc3\", 1.0f );\n    doc3.addField( \"price\", 10 );\n    UpdateRequest up = new UpdateRequest();\n    up.add( doc3 );\n    up.setCommitWithin( 100 );\n    up.process( server );\n    \n    rsp = server.query( new SolrQuery( \"*:*\") );\n    Assert.assertEquals( 0, rsp.getResults().getNumFound() );\n    \n    Thread.sleep( 500 ); // wait 1/2 seconds...\n\n    // now check that it comes out...\n    rsp = server.query( new SolrQuery( \"id:id3\") );\n    Assert.assertEquals( 1, rsp.getResults().getNumFound() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"49e9d2a0f824c80169f059ac775f2a7715641293","date":1244477232,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/test/org/apache/solr/client/solrj/SolrExampleTests#testCommitWithin().mjava","pathOld":"src/test/org/apache/solr/client/solrj/SolrExampleTests#testCommitWithin().mjava","sourceNew":"  /**\n   * query the example\n   */\n  public void testCommitWithin() throws Exception\n  {    \n    // make sure it is empty...\n    SolrServer server = getSolrServer();\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n    QueryResponse rsp = server.query( new SolrQuery( \"*:*\") );\n    Assert.assertEquals( 0, rsp.getResults().getNumFound() );\n\n    // Now try a timed commit...\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField( \"id\", \"id3\", 1.0f );\n    doc3.addField( \"name\", \"doc3\", 1.0f );\n    doc3.addField( \"price\", 10 );\n    UpdateRequest up = new UpdateRequest();\n    up.add( doc3 );\n    up.setCommitWithin( 100 );\n    up.process( server );\n    \n    rsp = server.query( new SolrQuery( \"*:*\") );\n    Assert.assertEquals( 0, rsp.getResults().getNumFound() );\n    \n    Thread.sleep( 500 ); // wait 1/2 seconds...\n\n    // now check that it comes out...\n    rsp = server.query( new SolrQuery( \"id:id3\") );\n    \n    if(rsp.getResults().getNumFound() == 0) {\n      // wait and try again for slower machines\n      Thread.sleep( 2000 ); // wait 1/2 seconds...\n      \n      rsp = server.query( new SolrQuery( \"id:id3\") );\n    }\n    \n    Assert.assertEquals( 1, rsp.getResults().getNumFound() );\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n  public void testCommitWithin() throws Exception\n  {    \n    // make sure it is empty...\n    SolrServer server = getSolrServer();\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n    QueryResponse rsp = server.query( new SolrQuery( \"*:*\") );\n    Assert.assertEquals( 0, rsp.getResults().getNumFound() );\n\n    // Now try a timed commit...\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField( \"id\", \"id3\", 1.0f );\n    doc3.addField( \"name\", \"doc3\", 1.0f );\n    doc3.addField( \"price\", 10 );\n    UpdateRequest up = new UpdateRequest();\n    up.add( doc3 );\n    up.setCommitWithin( 100 );\n    up.process( server );\n    \n    rsp = server.query( new SolrQuery( \"*:*\") );\n    Assert.assertEquals( 0, rsp.getResults().getNumFound() );\n    \n    Thread.sleep( 500 ); // wait 1/2 seconds...\n\n    // now check that it comes out...\n    rsp = server.query( new SolrQuery( \"id:id3\") );\n    Assert.assertEquals( 1, rsp.getResults().getNumFound() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44a148de2b2be810c49f1ef231dd37a4b33dcf7","date":1244477310,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/test/org/apache/solr/client/solrj/SolrExampleTests#testCommitWithin().mjava","pathOld":"src/test/org/apache/solr/client/solrj/SolrExampleTests#testCommitWithin().mjava","sourceNew":"  /**\n   * query the example\n   */\n  public void testCommitWithin() throws Exception\n  {    \n    // make sure it is empty...\n    SolrServer server = getSolrServer();\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n    QueryResponse rsp = server.query( new SolrQuery( \"*:*\") );\n    Assert.assertEquals( 0, rsp.getResults().getNumFound() );\n\n    // Now try a timed commit...\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField( \"id\", \"id3\", 1.0f );\n    doc3.addField( \"name\", \"doc3\", 1.0f );\n    doc3.addField( \"price\", 10 );\n    UpdateRequest up = new UpdateRequest();\n    up.add( doc3 );\n    up.setCommitWithin( 100 );\n    up.process( server );\n    \n    rsp = server.query( new SolrQuery( \"*:*\") );\n    Assert.assertEquals( 0, rsp.getResults().getNumFound() );\n    \n    Thread.sleep( 500 ); // wait 1/2 seconds...\n\n    // now check that it comes out...\n    rsp = server.query( new SolrQuery( \"id:id3\") );\n    \n    if(rsp.getResults().getNumFound() == 0) {\n      // wait and try again for slower machines\n      Thread.sleep( 2000 ); // wait 2 seconds...\n      \n      rsp = server.query( new SolrQuery( \"id:id3\") );\n    }\n    \n    Assert.assertEquals( 1, rsp.getResults().getNumFound() );\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n  public void testCommitWithin() throws Exception\n  {    \n    // make sure it is empty...\n    SolrServer server = getSolrServer();\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n    QueryResponse rsp = server.query( new SolrQuery( \"*:*\") );\n    Assert.assertEquals( 0, rsp.getResults().getNumFound() );\n\n    // Now try a timed commit...\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField( \"id\", \"id3\", 1.0f );\n    doc3.addField( \"name\", \"doc3\", 1.0f );\n    doc3.addField( \"price\", 10 );\n    UpdateRequest up = new UpdateRequest();\n    up.add( doc3 );\n    up.setCommitWithin( 100 );\n    up.process( server );\n    \n    rsp = server.query( new SolrQuery( \"*:*\") );\n    Assert.assertEquals( 0, rsp.getResults().getNumFound() );\n    \n    Thread.sleep( 500 ); // wait 1/2 seconds...\n\n    // now check that it comes out...\n    rsp = server.query( new SolrQuery( \"id:id3\") );\n    \n    if(rsp.getResults().getNumFound() == 0) {\n      // wait and try again for slower machines\n      Thread.sleep( 2000 ); // wait 1/2 seconds...\n      \n      rsp = server.query( new SolrQuery( \"id:id3\") );\n    }\n    \n    Assert.assertEquals( 1, rsp.getResults().getNumFound() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71c47d5bed9b52c16bd820ac08785594cccce6b1","date":1250519274,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/client/solrj/SolrExampleTests#testCommitWithin().mjava","pathOld":"src/test/org/apache/solr/client/solrj/SolrExampleTests#testCommitWithin().mjava","sourceNew":"  /**\n   * query the example\n   */\n  public void testCommitWithin() throws Exception\n  {    \n    // make sure it is empty...\n    SolrServer server = getSolrServer();\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n    QueryResponse rsp = server.query( new SolrQuery( \"*:*\") );\n    Assert.assertEquals( 0, rsp.getResults().getNumFound() );\n\n    // Now try a timed commit...\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField( \"id\", \"id3\", 1.0f );\n    doc3.addField( \"name\", \"doc3\", 1.0f );\n    doc3.addField( \"price\", 10 );\n    UpdateRequest up = new UpdateRequest();\n    up.add( doc3 );\n    up.setCommitWithin( 500 );  // a smaller commitWithin caused failures on the following assert\n    up.process( server );\n    \n    rsp = server.query( new SolrQuery( \"*:*\") );\n    Assert.assertEquals( 0, rsp.getResults().getNumFound() );\n    \n    Thread.sleep( 1000 ); // wait 1 sec\n\n    // now check that it comes out...\n    rsp = server.query( new SolrQuery( \"id:id3\") );\n    \n    if(rsp.getResults().getNumFound() == 0) {\n      // wait and try again for slower machines\n      Thread.sleep( 2000 ); // wait 2 seconds...\n      \n      rsp = server.query( new SolrQuery( \"id:id3\") );\n    }\n    \n    Assert.assertEquals( 1, rsp.getResults().getNumFound() );\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n  public void testCommitWithin() throws Exception\n  {    \n    // make sure it is empty...\n    SolrServer server = getSolrServer();\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n    QueryResponse rsp = server.query( new SolrQuery( \"*:*\") );\n    Assert.assertEquals( 0, rsp.getResults().getNumFound() );\n\n    // Now try a timed commit...\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField( \"id\", \"id3\", 1.0f );\n    doc3.addField( \"name\", \"doc3\", 1.0f );\n    doc3.addField( \"price\", 10 );\n    UpdateRequest up = new UpdateRequest();\n    up.add( doc3 );\n    up.setCommitWithin( 100 );\n    up.process( server );\n    \n    rsp = server.query( new SolrQuery( \"*:*\") );\n    Assert.assertEquals( 0, rsp.getResults().getNumFound() );\n    \n    Thread.sleep( 500 ); // wait 1/2 seconds...\n\n    // now check that it comes out...\n    rsp = server.query( new SolrQuery( \"id:id3\") );\n    \n    if(rsp.getResults().getNumFound() == 0) {\n      // wait and try again for slower machines\n      Thread.sleep( 2000 ); // wait 2 seconds...\n      \n      rsp = server.query( new SolrQuery( \"id:id3\") );\n    }\n    \n    Assert.assertEquals( 1, rsp.getResults().getNumFound() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testCommitWithin().mjava","pathOld":"src/test/org/apache/solr/client/solrj/SolrExampleTests#testCommitWithin().mjava","sourceNew":"  /**\n   * query the example\n   */\n  public void testCommitWithin() throws Exception\n  {    \n    // make sure it is empty...\n    SolrServer server = getSolrServer();\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n    QueryResponse rsp = server.query( new SolrQuery( \"*:*\") );\n    Assert.assertEquals( 0, rsp.getResults().getNumFound() );\n\n    // Now try a timed commit...\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField( \"id\", \"id3\", 1.0f );\n    doc3.addField( \"name\", \"doc3\", 1.0f );\n    doc3.addField( \"price\", 10 );\n    UpdateRequest up = new UpdateRequest();\n    up.add( doc3 );\n    up.setCommitWithin( 500 );  // a smaller commitWithin caused failures on the following assert\n    up.process( server );\n    \n    rsp = server.query( new SolrQuery( \"*:*\") );\n    Assert.assertEquals( 0, rsp.getResults().getNumFound() );\n    \n    Thread.sleep( 1000 ); // wait 1 sec\n\n    // now check that it comes out...\n    rsp = server.query( new SolrQuery( \"id:id3\") );\n    \n    if(rsp.getResults().getNumFound() == 0) {\n      // wait and try again for slower machines\n      Thread.sleep( 2000 ); // wait 2 seconds...\n      \n      rsp = server.query( new SolrQuery( \"id:id3\") );\n    }\n    \n    Assert.assertEquals( 1, rsp.getResults().getNumFound() );\n  }\n\n","sourceOld":"  /**\n   * query the example\n   */\n  public void testCommitWithin() throws Exception\n  {    \n    // make sure it is empty...\n    SolrServer server = getSolrServer();\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    server.commit();\n    QueryResponse rsp = server.query( new SolrQuery( \"*:*\") );\n    Assert.assertEquals( 0, rsp.getResults().getNumFound() );\n\n    // Now try a timed commit...\n    SolrInputDocument doc3 = new SolrInputDocument();\n    doc3.addField( \"id\", \"id3\", 1.0f );\n    doc3.addField( \"name\", \"doc3\", 1.0f );\n    doc3.addField( \"price\", 10 );\n    UpdateRequest up = new UpdateRequest();\n    up.add( doc3 );\n    up.setCommitWithin( 500 );  // a smaller commitWithin caused failures on the following assert\n    up.process( server );\n    \n    rsp = server.query( new SolrQuery( \"*:*\") );\n    Assert.assertEquals( 0, rsp.getResults().getNumFound() );\n    \n    Thread.sleep( 1000 ); // wait 1 sec\n\n    // now check that it comes out...\n    rsp = server.query( new SolrQuery( \"id:id3\") );\n    \n    if(rsp.getResults().getNumFound() == 0) {\n      // wait and try again for slower machines\n      Thread.sleep( 2000 ); // wait 2 seconds...\n      \n      rsp = server.query( new SolrQuery( \"id:id3\") );\n    }\n    \n    Assert.assertEquals( 1, rsp.getResults().getNumFound() );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"c44a148de2b2be810c49f1ef231dd37a4b33dcf7":["49e9d2a0f824c80169f059ac775f2a7715641293"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"49e9d2a0f824c80169f059ac775f2a7715641293":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"ad94625fb8d088209f46650c8097196fec67f00c":["71c47d5bed9b52c16bd820ac08785594cccce6b1"],"71c47d5bed9b52c16bd820ac08785594cccce6b1":["c44a148de2b2be810c49f1ef231dd37a4b33dcf7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["49e9d2a0f824c80169f059ac775f2a7715641293"],"c44a148de2b2be810c49f1ef231dd37a4b33dcf7":["71c47d5bed9b52c16bd820ac08785594cccce6b1"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"49e9d2a0f824c80169f059ac775f2a7715641293":["c44a148de2b2be810c49f1ef231dd37a4b33dcf7"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"71c47d5bed9b52c16bd820ac08785594cccce6b1":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}