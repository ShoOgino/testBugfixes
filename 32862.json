{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/bn/TestBengaliFilters#testStemmer().mjava","commits":[{"id":"62eea7860808033f1893fbbbe121e77735482870","date":1503576322,"type":0,"author":"Md. Abdulla-Al-Sun","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/bn/TestBengaliFilters#testStemmer().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test BengaliStemFilterFactory\n   */\n  public void testStemmer() throws Exception {\n    Reader reader = new StringReader(\"বাড়ী\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = tokenFilterFactory(\"IndicNormalization\").create(stream);\n    stream = tokenFilterFactory(\"BengaliNormalization\").create(stream);\n    stream = tokenFilterFactory(\"BengaliStem\").create(stream);\n    assertTokenStreamContents(stream, new String[] {\"বার\"});\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f3268584f93f4a1a69c3a8732a46f665cd15f89b","date":1504651522,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/bn/TestBengaliFilters#testStemmer().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test BengaliStemFilterFactory\n   */\n  public void testStemmer() throws Exception {\n    Reader reader = new StringReader(\"বাড়ী\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = tokenFilterFactory(\"IndicNormalization\").create(stream);\n    stream = tokenFilterFactory(\"BengaliNormalization\").create(stream);\n    stream = tokenFilterFactory(\"BengaliStem\").create(stream);\n    assertTokenStreamContents(stream, new String[] {\"বার\"});\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21283ed01203901a7257aa4b7f0a0899c86e56e","date":1504689720,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/bn/TestBengaliFilters#testStemmer().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test BengaliStemFilterFactory\n   */\n  public void testStemmer() throws Exception {\n    Reader reader = new StringReader(\"বাড়ী\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = tokenFilterFactory(\"IndicNormalization\").create(stream);\n    stream = tokenFilterFactory(\"BengaliNormalization\").create(stream);\n    stream = tokenFilterFactory(\"BengaliStem\").create(stream);\n    assertTokenStreamContents(stream, new String[] {\"বার\"});\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"104a3f62ee393d48b5596de76ed4d9a4e0ea6de7","date":1504848000,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/bn/TestBengaliFilters#testStemmer().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test BengaliStemFilterFactory\n   */\n  public void testStemmer() throws Exception {\n    Reader reader = new StringReader(\"বাড়ী\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = tokenFilterFactory(\"IndicNormalization\").create(stream);\n    stream = tokenFilterFactory(\"BengaliNormalization\").create(stream);\n    stream = tokenFilterFactory(\"BengaliStem\").create(stream);\n    assertTokenStreamContents(stream, new String[] {\"বার\"});\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"685bd38810c206c93e9058f3c2cfa9827c086c27","date":1505751821,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/bn/TestBengaliFilters#testStemmer().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test BengaliStemFilterFactory\n   */\n  public void testStemmer() throws Exception {\n    Reader reader = new StringReader(\"বাড়ী\");\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = tokenFilterFactory(\"IndicNormalization\").create(stream);\n    stream = tokenFilterFactory(\"BengaliNormalization\").create(stream);\n    stream = tokenFilterFactory(\"BengaliStem\").create(stream);\n    assertTokenStreamContents(stream, new String[] {\"বার\"});\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b21283ed01203901a7257aa4b7f0a0899c86e56e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f3268584f93f4a1a69c3a8732a46f665cd15f89b"],"685bd38810c206c93e9058f3c2cfa9827c086c27":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","104a3f62ee393d48b5596de76ed4d9a4e0ea6de7"],"104a3f62ee393d48b5596de76ed4d9a4e0ea6de7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b21283ed01203901a7257aa4b7f0a0899c86e56e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f3268584f93f4a1a69c3a8732a46f665cd15f89b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","62eea7860808033f1893fbbbe121e77735482870"],"62eea7860808033f1893fbbbe121e77735482870":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["104a3f62ee393d48b5596de76ed4d9a4e0ea6de7"]},"commit2Childs":{"b21283ed01203901a7257aa4b7f0a0899c86e56e":["104a3f62ee393d48b5596de76ed4d9a4e0ea6de7"],"685bd38810c206c93e9058f3c2cfa9827c086c27":[],"104a3f62ee393d48b5596de76ed4d9a4e0ea6de7":["685bd38810c206c93e9058f3c2cfa9827c086c27","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b21283ed01203901a7257aa4b7f0a0899c86e56e","685bd38810c206c93e9058f3c2cfa9827c086c27","104a3f62ee393d48b5596de76ed4d9a4e0ea6de7","f3268584f93f4a1a69c3a8732a46f665cd15f89b","62eea7860808033f1893fbbbe121e77735482870"],"f3268584f93f4a1a69c3a8732a46f665cd15f89b":["b21283ed01203901a7257aa4b7f0a0899c86e56e"],"62eea7860808033f1893fbbbe121e77735482870":["f3268584f93f4a1a69c3a8732a46f665cd15f89b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["685bd38810c206c93e9058f3c2cfa9827c086c27","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}