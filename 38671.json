{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#getPerThreadsIterator(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#getPerThreadsIterator(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#getPerThreadsIterator(int).mjava","sourceNew":"  private Iterator<ThreadState> getPerThreadsIterator(final int upto) {\n    return new Iterator<ThreadState>() {\n      int i = 0;\n\n      public boolean hasNext() {\n        return i < upto;\n      }\n\n      public ThreadState next() {\n        return perThreads[i++];\n      }\n\n      public void remove() {\n        throw new UnsupportedOperationException(\"remove() not supported.\");\n      }\n    };\n  }\n\n","sourceOld":"  private Iterator<ThreadState> getPerThreadsIterator(final int upto) {\n    return new Iterator<ThreadState>() {\n      int i = 0;\n\n      public boolean hasNext() {\n        return i < upto;\n      }\n\n      public ThreadState next() {\n        return perThreads[i++];\n      }\n\n      public void remove() {\n        throw new UnsupportedOperationException(\"remove() not supported.\");\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f64b5c281a42c5a4634b39a4fcb8f21a0cba1600","date":1329061481,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl#getPerThreadsIterator(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThreadPool#getPerThreadsIterator(int).mjava","sourceNew":"  private Iterator<ThreadState> getPerThreadsIterator(final int upto) {\n    return new Iterator<ThreadState>() {\n      int i = 0;\n\n      public boolean hasNext() {\n        return i < upto;\n      }\n\n      public ThreadState next() {\n        return perThreadPool.getThreadState(i++);\n      }\n\n      public void remove() {\n        throw new UnsupportedOperationException(\"remove() not supported.\");\n      }\n    };\n  }\n\n","sourceOld":"  private Iterator<ThreadState> getPerThreadsIterator(final int upto) {\n    return new Iterator<ThreadState>() {\n      int i = 0;\n\n      public boolean hasNext() {\n        return i < upto;\n      }\n\n      public ThreadState next() {\n        return perThreads[i++];\n      }\n\n      public void remove() {\n        throw new UnsupportedOperationException(\"remove() not supported.\");\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f64b5c281a42c5a4634b39a4fcb8f21a0cba1600"],"f64b5c281a42c5a4634b39a4fcb8f21a0cba1600":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f64b5c281a42c5a4634b39a4fcb8f21a0cba1600"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f64b5c281a42c5a4634b39a4fcb8f21a0cba1600":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}