{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/OrdinalsCache#getCachedOrds(AtomicReaderContext,CategoryListParams).mjava","commits":[{"id":"136bf9d69957766255ca222d35e715158cd0aa9c","date":1360686043,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/OrdinalsCache#getCachedOrds(AtomicReaderContext,CategoryListParams).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the {@link CachedOrds} relevant to the given\n   * {@link AtomicReaderContext}, or {@code null} if there is no\n   * {@link BinaryDocValues} in this reader for the requested\n   * {@link CategoryListParams#field}.\n   */\n  public static synchronized CachedOrds getCachedOrds(AtomicReaderContext context, CategoryListParams clp) throws IOException {\n    BinaryDocValues dv = context.reader().getBinaryDocValues(clp.field);\n    if (dv == null) {\n      return null;\n    }\n    CachedOrds ci = intsCache.get(dv);\n    if (ci == null) {\n      ci = new CachedOrds(dv, context.reader().maxDoc(), clp);\n      intsCache.put(dv, ci);\n    }\n    return ci;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb","date":1360780178,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/OrdinalsCache#getCachedOrds(AtomicReaderContext,CategoryListParams).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the {@link CachedOrds} relevant to the given\n   * {@link AtomicReaderContext}, or {@code null} if there is no\n   * {@link BinaryDocValues} in this reader for the requested\n   * {@link CategoryListParams#field}.\n   */\n  public static synchronized CachedOrds getCachedOrds(AtomicReaderContext context, CategoryListParams clp) throws IOException {\n    BinaryDocValues dv = context.reader().getBinaryDocValues(clp.field);\n    if (dv == null) {\n      return null;\n    }\n    CachedOrds ci = intsCache.get(dv);\n    if (ci == null) {\n      ci = new CachedOrds(dv, context.reader().maxDoc(), clp);\n      intsCache.put(dv, ci);\n    }\n    return ci;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ea97e9a1d0f5c3c323186e9c56052e1dff5e04b","date":1382560833,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/OrdinalsCache#getCachedOrds(AtomicReaderContext,CategoryListParams).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/OrdinalsCache#getCachedOrds(AtomicReaderContext,CategoryListParams).mjava","sourceNew":"  /**\n   * Returns the {@link CachedOrds} relevant to the given\n   * {@link AtomicReaderContext}, or {@code null} if there is no\n   * {@link BinaryDocValues} in this reader for the requested\n   * {@link CategoryListParams#field}.\n   */\n  public static synchronized CachedOrds getCachedOrds(AtomicReaderContext context, CategoryListParams clp) throws IOException {\n    BinaryDocValues dv = context.reader().getBinaryDocValues(clp.field);\n    if (dv == null) {\n      return null;\n    }\n    Map<String,CachedOrds> fieldCache = ordsCache.get(context.reader().getCoreCacheKey());\n    if (fieldCache == null) {\n      fieldCache = new HashMap<String,OrdinalsCache.CachedOrds>();\n      ordsCache.put(context.reader().getCoreCacheKey(), fieldCache);\n    }\n    CachedOrds co = fieldCache.get(clp.field);\n    if (co == null) {\n      co = new CachedOrds(dv, context.reader().maxDoc(), clp);\n      fieldCache.put(clp.field, co);\n    }\n    return co;\n  }\n\n","sourceOld":"  /**\n   * Returns the {@link CachedOrds} relevant to the given\n   * {@link AtomicReaderContext}, or {@code null} if there is no\n   * {@link BinaryDocValues} in this reader for the requested\n   * {@link CategoryListParams#field}.\n   */\n  public static synchronized CachedOrds getCachedOrds(AtomicReaderContext context, CategoryListParams clp) throws IOException {\n    BinaryDocValues dv = context.reader().getBinaryDocValues(clp.field);\n    if (dv == null) {\n      return null;\n    }\n    CachedOrds ci = intsCache.get(dv);\n    if (ci == null) {\n      ci = new CachedOrds(dv, context.reader().maxDoc(), clp);\n      intsCache.put(dv, ci);\n    }\n    return ci;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/OrdinalsCache#getCachedOrds(AtomicReaderContext,CategoryListParams).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns the {@link CachedOrds} relevant to the given\n   * {@link AtomicReaderContext}, or {@code null} if there is no\n   * {@link BinaryDocValues} in this reader for the requested\n   * {@link CategoryListParams#field}.\n   */\n  public static synchronized CachedOrds getCachedOrds(AtomicReaderContext context, CategoryListParams clp) throws IOException {\n    BinaryDocValues dv = context.reader().getBinaryDocValues(clp.field);\n    if (dv == null) {\n      return null;\n    }\n    Map<String,CachedOrds> fieldCache = ordsCache.get(context.reader().getCoreCacheKey());\n    if (fieldCache == null) {\n      fieldCache = new HashMap<String,OrdinalsCache.CachedOrds>();\n      ordsCache.put(context.reader().getCoreCacheKey(), fieldCache);\n    }\n    CachedOrds co = fieldCache.get(clp.field);\n    if (co == null) {\n      co = new CachedOrds(dv, context.reader().maxDoc(), clp);\n      fieldCache.put(clp.field, co);\n    }\n    return co;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/OrdinalsCache#getCachedOrds(AtomicReaderContext,CategoryListParams).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns the {@link CachedOrds} relevant to the given\n   * {@link AtomicReaderContext}, or {@code null} if there is no\n   * {@link BinaryDocValues} in this reader for the requested\n   * {@link CategoryListParams#field}.\n   */\n  public static synchronized CachedOrds getCachedOrds(AtomicReaderContext context, CategoryListParams clp) throws IOException {\n    BinaryDocValues dv = context.reader().getBinaryDocValues(clp.field);\n    if (dv == null) {\n      return null;\n    }\n    Map<String,CachedOrds> fieldCache = ordsCache.get(context.reader().getCoreCacheKey());\n    if (fieldCache == null) {\n      fieldCache = new HashMap<String,OrdinalsCache.CachedOrds>();\n      ordsCache.put(context.reader().getCoreCacheKey(), fieldCache);\n    }\n    CachedOrds co = fieldCache.get(clp.field);\n    if (co == null) {\n      co = new CachedOrds(dv, context.reader().maxDoc(), clp);\n      fieldCache.put(clp.field, co);\n    }\n    return co;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d33e19a97046248623a7591aeaa6547233fd15e2":["3ea97e9a1d0f5c3c323186e9c56052e1dff5e04b"],"3ea97e9a1d0f5c3c323186e9c56052e1dff5e04b":["136bf9d69957766255ca222d35e715158cd0aa9c"],"6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","136bf9d69957766255ca222d35e715158cd0aa9c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["3ea97e9a1d0f5c3c323186e9c56052e1dff5e04b","d33e19a97046248623a7591aeaa6547233fd15e2"],"136bf9d69957766255ca222d35e715158cd0aa9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3ea97e9a1d0f5c3c323186e9c56052e1dff5e04b":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13"],"6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb","136bf9d69957766255ca222d35e715158cd0aa9c"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"136bf9d69957766255ca222d35e715158cd0aa9c":["3ea97e9a1d0f5c3c323186e9c56052e1dff5e04b","6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}