{"path":"src/java/org/apache/lucene/index/IndexReader#incRef().mjava","commits":[{"id":"3b9d7142a399ac70a71ce5b40ee66695eda5b7e8","date":1195335263,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#incRef().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Increments the refCount of this IndexReader instance. RefCounts are used to determine\n   * when a reader can be closed safely, i. e. as soon as no other IndexReader is referencing\n   * it anymore.\n   */\n  protected synchronized void incRef() {\n    assert refCount > 0;\n    refCount++;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f3ff453bb43870ea139dcd068541a79fa8b38f98","date":1216725276,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#incRef().mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#incRef().mjava","sourceNew":"  /**\n   * Expert: increments the refCount of this IndexReader\n   * instance.  RefCounts are used to determine when a\n   * reader can be closed safely, i.e. as soon as there are\n   * no more references.  Be sure to always call a\n   * corresponding {@link #decRef}, in a finally clause;\n   * otherwise the reader may never be closed.  Note that\n   * {@link #close} simply calls decRef(), which means that\n   * the IndexReader will not really be closed until {@link\n   * #decRef} has been called for all outstanding\n   * references.\n   *\n   * @see #decRef\n   */\n  public synchronized void incRef() {\n    assert refCount > 0;\n    ensureOpen();\n    refCount++;\n  }\n\n","sourceOld":"  /**\n   * Increments the refCount of this IndexReader instance. RefCounts are used to determine\n   * when a reader can be closed safely, i. e. as soon as no other IndexReader is referencing\n   * it anymore.\n   */\n  protected synchronized void incRef() {\n    assert refCount > 0;\n    refCount++;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"351c5b8cb12f675814b970fabc3723ee7c78280d","date":1260964021,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#incRef().mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#incRef().mjava","sourceNew":"  /**\n   * Expert: increments the refCount of this IndexReader\n   * instance.  RefCounts are used to determine when a\n   * reader can be closed safely, i.e. as soon as there are\n   * no more references.  Be sure to always call a\n   * corresponding {@link #decRef}, in a finally clause;\n   * otherwise the reader may never be closed.  Note that\n   * {@link #close} simply calls decRef(), which means that\n   * the IndexReader will not really be closed until {@link\n   * #decRef} has been called for all outstanding\n   * references.\n   *\n   * @see #decRef\n   */\n  public void incRef() {\n    ensureOpen();\n    refCount.incrementAndGet();\n  }\n\n","sourceOld":"  /**\n   * Expert: increments the refCount of this IndexReader\n   * instance.  RefCounts are used to determine when a\n   * reader can be closed safely, i.e. as soon as there are\n   * no more references.  Be sure to always call a\n   * corresponding {@link #decRef}, in a finally clause;\n   * otherwise the reader may never be closed.  Note that\n   * {@link #close} simply calls decRef(), which means that\n   * the IndexReader will not really be closed until {@link\n   * #decRef} has been called for all outstanding\n   * references.\n   *\n   * @see #decRef\n   */\n  public synchronized void incRef() {\n    assert refCount > 0;\n    ensureOpen();\n    refCount++;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#incRef().mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#incRef().mjava","sourceNew":"  /**\n   * Expert: increments the refCount of this IndexReader\n   * instance.  RefCounts are used to determine when a\n   * reader can be closed safely, i.e. as soon as there are\n   * no more references.  Be sure to always call a\n   * corresponding {@link #decRef}, in a finally clause;\n   * otherwise the reader may never be closed.  Note that\n   * {@link #close} simply calls decRef(), which means that\n   * the IndexReader will not really be closed until {@link\n   * #decRef} has been called for all outstanding\n   * references.\n   *\n   * @see #decRef\n   */\n  public void incRef() {\n    ensureOpen();\n    refCount.incrementAndGet();\n  }\n\n","sourceOld":"  /**\n   * Expert: increments the refCount of this IndexReader\n   * instance.  RefCounts are used to determine when a\n   * reader can be closed safely, i.e. as soon as there are\n   * no more references.  Be sure to always call a\n   * corresponding {@link #decRef}, in a finally clause;\n   * otherwise the reader may never be closed.  Note that\n   * {@link #close} simply calls decRef(), which means that\n   * the IndexReader will not really be closed until {@link\n   * #decRef} has been called for all outstanding\n   * references.\n   *\n   * @see #decRef\n   */\n  public void incRef() {\n    ensureOpen();\n    refCount.incrementAndGet();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"351c5b8cb12f675814b970fabc3723ee7c78280d":["f3ff453bb43870ea139dcd068541a79fa8b38f98"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f3ff453bb43870ea139dcd068541a79fa8b38f98":["3b9d7142a399ac70a71ce5b40ee66695eda5b7e8"],"3b9d7142a399ac70a71ce5b40ee66695eda5b7e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["351c5b8cb12f675814b970fabc3723ee7c78280d"]},"commit2Childs":{"351c5b8cb12f675814b970fabc3723ee7c78280d":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b9d7142a399ac70a71ce5b40ee66695eda5b7e8"],"f3ff453bb43870ea139dcd068541a79fa8b38f98":["351c5b8cb12f675814b970fabc3723ee7c78280d"],"3b9d7142a399ac70a71ce5b40ee66695eda5b7e8":["f3ff453bb43870ea139dcd068541a79fa8b38f98"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}