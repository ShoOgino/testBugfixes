{"path":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","pathOld":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","sourceNew":"  private void helpTestDateFacets(final String fieldName, \n                                  final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    \n    // date faceting defaults to include both endpoints, \n    // range faceting defaults to including only lower\n    // doc exists with value @ 00:00:00.000 on July5\n    final String jul4 = rangeMode ? \"[.='1'  ]\" : \"[.='2'  ]\";\n\n    assertQ(\"check counts for month of facet by day\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 31 : 34)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-02T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-07T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-16T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-17T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-18T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-19T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-22T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-23T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-24T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-25T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-26T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-27T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-28T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-29T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-31T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            \n            );\n\n    assertQ(\"check counts for month of facet by day with global mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"facet.mincount\", \"1\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 8 : 11)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check counts for month of facet by day with field mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"f.\" + f + \".facet.mincount\", \"2\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 7)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+(rangeMode ? \"\" : \"/int[@name='1976-07-04T00:00:00Z']\" +jul4)\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check before is not inclusive of upper bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-05T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-07T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='5']\"\n            );\n    assertQ(\"check after is not inclusive of lower bound by default (for dates)\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-03T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-05T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            \n            ,meta+\"/int[@name='after' ][.='\"+(rangeMode ? 9 : 8)+\"']\"\n            );\n            \n\n    assertQ(\"check hardend=false\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"false\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='4'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='3']\"\n            ,meta+\"/int[@name='between'][.='9']\"\n            );\n\n    assertQ(\"check hardend=true\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"true\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='1'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='6']\"\n            ,meta+\"/int[@name='between'][.='6']\"\n            );\n    \n  }\n\n","sourceOld":"  private void helpTestDateFacets(final String fieldName, \n                                  final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    \n    // date faceting defaults to include both endpoints, \n    // range faceting defaults to including only lower\n    // doc exists with value @ 00:00:00.000 on July5\n    final String jul4 = rangeMode ? \"[.='1'  ]\" : \"[.='2'  ]\";\n\n    assertQ(\"check counts for month of facet by day\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 31 : 34)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-02T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-07T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-16T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-17T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-18T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-19T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-22T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-23T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-24T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-25T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-26T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-27T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-28T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-29T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-31T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            \n            );\n\n    assertQ(\"check counts for month of facet by day with global mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"facet.mincount\", \"1\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 8 : 11)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check counts for month of facet by day with field mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"f.\" + f + \".facet.mincount\", \"2\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 7)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+(rangeMode ? \"\" : \"/int[@name='1976-07-04T00:00:00Z']\" +jul4)\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check before is not inclusive of upper bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-05T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-07T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='5']\"\n            );\n    assertQ(\"check after is not inclusive of lower bound by default (for dates)\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-03T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-05T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            \n            ,meta+\"/int[@name='after' ][.='\"+(rangeMode ? 9 : 8)+\"']\"\n            );\n            \n\n    assertQ(\"check hardend=false\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"false\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='4'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='3']\"\n            ,meta+\"/int[@name='between'][.='9']\"\n            );\n\n    assertQ(\"check hardend=true\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"true\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='1'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='6']\"\n            ,meta+\"/int[@name='between'][.='6']\"\n            );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","pathOld":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","sourceNew":"  private void helpTestDateFacets(final String fieldName, \n                                  final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    \n    // date faceting defaults to include both endpoints, \n    // range faceting defaults to including only lower\n    // doc exists with value @ 00:00:00.000 on July5\n    final String jul4 = rangeMode ? \"[.='1'  ]\" : \"[.='2'  ]\";\n\n    assertQ(\"check counts for month of facet by day\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 31 : 34)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-02T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-07T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-16T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-17T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-18T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-19T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-22T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-23T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-24T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-25T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-26T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-27T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-28T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-29T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-31T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            \n            );\n\n    assertQ(\"check counts for month of facet by day with global mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"facet.mincount\", \"1\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 8 : 11)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check counts for month of facet by day with field mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"f.\" + f + \".facet.mincount\", \"2\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 7)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+(rangeMode ? \"\" : \"/int[@name='1976-07-04T00:00:00Z']\" +jul4)\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check before is not inclusive of upper bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-05T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-07T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='5']\"\n            );\n    assertQ(\"check after is not inclusive of lower bound by default (for dates)\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-03T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-05T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            \n            ,meta+\"/int[@name='after' ][.='\"+(rangeMode ? 9 : 8)+\"']\"\n            );\n            \n\n    assertQ(\"check hardend=false\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"false\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='4'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='3']\"\n            ,meta+\"/int[@name='between'][.='9']\"\n            );\n\n    assertQ(\"check hardend=true\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"true\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='1'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='6']\"\n            ,meta+\"/int[@name='between'][.='6']\"\n            );\n    \n  }\n\n","sourceOld":"  private void helpTestDateFacets(final String fieldName, \n                                  final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    \n    // date faceting defaults to include both endpoints, \n    // range faceting defaults to including only lower\n    // doc exists with value @ 00:00:00.000 on July5\n    final String jul4 = rangeMode ? \"[.='1'  ]\" : \"[.='2'  ]\";\n\n    assertQ(\"check counts for month of facet by day\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 31 : 34)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-02T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-07T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-16T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-17T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-18T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-19T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-22T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-23T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-24T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-25T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-26T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-27T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-28T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-29T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-31T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            \n            );\n\n    assertQ(\"check counts for month of facet by day with global mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"facet.mincount\", \"1\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 8 : 11)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check counts for month of facet by day with field mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"f.\" + f + \".facet.mincount\", \"2\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 7)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+(rangeMode ? \"\" : \"/int[@name='1976-07-04T00:00:00Z']\" +jul4)\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check before is not inclusive of upper bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-05T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-07T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='5']\"\n            );\n    assertQ(\"check after is not inclusive of lower bound by default (for dates)\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-03T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-05T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            \n            ,meta+\"/int[@name='after' ][.='\"+(rangeMode ? 9 : 8)+\"']\"\n            );\n            \n\n    assertQ(\"check hardend=false\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"false\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='4'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='3']\"\n            ,meta+\"/int[@name='between'][.='9']\"\n            );\n\n    assertQ(\"check hardend=true\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"true\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='1'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='6']\"\n            ,meta+\"/int[@name='between'][.='6']\"\n            );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","pathOld":"solr/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","sourceNew":"  private void helpTestDateFacets(final String fieldName, \n                                  final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    \n    // date faceting defaults to include both endpoints, \n    // range faceting defaults to including only lower\n    // doc exists with value @ 00:00:00.000 on July5\n    final String jul4 = rangeMode ? \"[.='1'  ]\" : \"[.='2'  ]\";\n\n    assertQ(\"check counts for month of facet by day\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 31 : 34)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-02T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-07T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-16T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-17T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-18T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-19T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-22T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-23T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-24T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-25T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-26T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-27T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-28T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-29T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-31T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            \n            );\n\n    assertQ(\"check counts for month of facet by day with global mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"facet.mincount\", \"1\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 8 : 11)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check counts for month of facet by day with field mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"f.\" + f + \".facet.mincount\", \"2\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 7)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+(rangeMode ? \"\" : \"/int[@name='1976-07-04T00:00:00Z']\" +jul4)\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check before is not inclusive of upper bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-05T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-07T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='5']\"\n            );\n    assertQ(\"check after is not inclusive of lower bound by default (for dates)\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-03T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-05T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            \n            ,meta+\"/int[@name='after' ][.='\"+(rangeMode ? 9 : 8)+\"']\"\n            );\n            \n\n    assertQ(\"check hardend=false\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"false\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='4'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='3']\"\n            ,meta+\"/int[@name='between'][.='9']\"\n            );\n\n    assertQ(\"check hardend=true\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"true\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='1'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='6']\"\n            ,meta+\"/int[@name='between'][.='6']\"\n            );\n    \n  }\n\n","sourceOld":"  private void helpTestDateFacets(final String fieldName, \n                                  final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    \n    // date faceting defaults to include both endpoints, \n    // range faceting defaults to including only lower\n    // doc exists with value @ 00:00:00.000 on July5\n    final String jul4 = rangeMode ? \"[.='1'  ]\" : \"[.='2'  ]\";\n\n    assertQ(\"check counts for month of facet by day\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 31 : 34)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-02T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-07T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-16T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-17T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-18T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-19T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-22T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-23T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-24T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-25T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-26T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-27T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-28T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-29T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-31T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            \n            );\n\n    assertQ(\"check counts for month of facet by day with global mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"facet.mincount\", \"1\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 8 : 11)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check counts for month of facet by day with field mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"f.\" + f + \".facet.mincount\", \"2\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 7)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+(rangeMode ? \"\" : \"/int[@name='1976-07-04T00:00:00Z']\" +jul4)\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check before is not inclusive of upper bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-05T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-07T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='5']\"\n            );\n    assertQ(\"check after is not inclusive of lower bound by default (for dates)\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-03T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-05T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            \n            ,meta+\"/int[@name='after' ][.='\"+(rangeMode ? 9 : 8)+\"']\"\n            );\n            \n\n    assertQ(\"check hardend=false\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"false\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='4'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='3']\"\n            ,meta+\"/int[@name='between'][.='9']\"\n            );\n\n    assertQ(\"check hardend=true\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"true\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='1'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='6']\"\n            ,meta+\"/int[@name='between'][.='6']\"\n            );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e135e47842b3fd6a4797b7e4787241b06817efa2","date":1429817254,"type":5,"author":"Tomas Eduardo Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean,FacetRangeMethod).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/SimpleFacetsTest#helpTestDateFacets(String,boolean).mjava","sourceNew":"  private void helpTestDateFacets(final String fieldName, \n                                  final boolean rangeMode, \n                                  final FacetRangeMethod rangeFacetMethod) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    \n    // date faceting defaults to include both endpoints, \n    // range faceting defaults to including only lower\n    // doc exists with value @ 00:00:00.000 on July5\n    final String jul4 = rangeMode ? \"[.='1'  ]\" : \"[.='2'  ]\";\n\n    assertQ(\"check counts for month of facet by day\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,p+\".method\", rangeFacetMethod.toString()  //This only applies to range faceting, won't be use for date faceting\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 31 : 34)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-02T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-07T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-16T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-17T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-18T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-19T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-22T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-23T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-24T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-25T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-26T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-27T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-28T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-29T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-31T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            \n            );\n\n    assertQ(\"check counts for month of facet by day with global mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"facet.mincount\", \"1\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 8 : 11)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check counts for month of facet by day with field mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"f.\" + f + \".facet.mincount\", \"2\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 7)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+(rangeMode ? \"\" : \"/int[@name='1976-07-04T00:00:00Z']\" +jul4)\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check before is not inclusive of upper bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-05T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-07T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='5']\"\n            );\n    assertQ(\"check after is not inclusive of lower bound by default (for dates)\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-03T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-05T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            \n            ,meta+\"/int[@name='after' ][.='\"+(rangeMode ? 9 : 8)+\"']\"\n            );\n            \n\n    assertQ(\"check hardend=false\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"false\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='4'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='3']\"\n            ,meta+\"/int[@name='between'][.='9']\"\n            );\n\n    assertQ(\"check hardend=true\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"true\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='1'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='6']\"\n            ,meta+\"/int[@name='between'][.='6']\"\n            );\n    \n  }\n\n","sourceOld":"  private void helpTestDateFacets(final String fieldName, \n                                  final boolean rangeMode) {\n    final String p = rangeMode ? \"facet.range\" : \"facet.date\";\n    final String b = rangeMode ? \"facet_ranges\" : \"facet_dates\";\n    final String f = fieldName;\n    final String c = (rangeMode ? \"/lst[@name='counts']\" : \"\");\n    final String pre = \"//lst[@name='\"+b+\"']/lst[@name='\"+f+\"']\" + c;\n    final String meta = pre + (rangeMode ? \"/../\" : \"\");\n\n    \n    // date faceting defaults to include both endpoints, \n    // range faceting defaults to including only lower\n    // doc exists with value @ 00:00:00.000 on July5\n    final String jul4 = rangeMode ? \"[.='1'  ]\" : \"[.='2'  ]\";\n\n    assertQ(\"check counts for month of facet by day\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 31 : 34)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-02T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-07T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-08T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-09T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-10T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-14T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-16T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-17T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-18T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-19T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-22T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-23T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-24T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-25T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-26T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-27T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-28T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-29T00:00:00Z'][.='0']\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-31T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            \n            );\n\n    assertQ(\"check counts for month of facet by day with global mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"facet.mincount\", \"1\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 8 : 11)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-12T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-13T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-21T00:00:00Z'][.='1'  ]\"\n            ,pre+\"/int[@name='1976-07-30T00:00:00Z'][.='1'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check counts for month of facet by day with field mincount = 1\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\", \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",   \"1976-07-01T00:00:00.000Z+1MONTH\"\n                ,p+\".gap\",   \"+1DAY\"\n                ,p+\".other\", \"all\"\n                ,\"f.\" + f + \".facet.mincount\", \"2\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 7)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+(rangeMode ? \"\" : \"/int[@name='1976-07-04T00:00:00Z']\" +jul4)\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-15T00:00:00Z'][.='2'  ]\"\n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='1']\"\n            ,meta+\"/int[@name='between'][.='11']\"\n            );\n\n    assertQ(\"check before is not inclusive of upper bound by default\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-05T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-07T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-05T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0']\"\n            \n            ,meta+\"/int[@name='before' ][.='5']\"\n            );\n    assertQ(\"check after is not inclusive of lower bound by default (for dates)\",\n            req(\"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-03T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-05T00:00:00.000Z\"\n                ,p+\".gap\",    \"+1DAY\"\n                ,p+\".other\",  \"all\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 2 : 5)+\"]\"\n            ,pre+\"/int[@name='1976-07-03T00:00:00Z'][.='2'  ]\"\n            ,pre+\"/int[@name='1976-07-04T00:00:00Z']\" + jul4\n            \n            ,meta+\"/int[@name='after' ][.='\"+(rangeMode ? 9 : 8)+\"']\"\n            );\n            \n\n    assertQ(\"check hardend=false\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"false\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='4'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='3']\"\n            ,meta+\"/int[@name='between'][.='9']\"\n            );\n\n    assertQ(\"check hardend=true\",\n            req( \"q\", \"*:*\"\n                ,\"rows\", \"0\"\n                ,\"facet\", \"true\"\n                ,p, f\n                ,p+\".start\",  \"1976-07-01T00:00:00.000Z\"\n                ,p+\".end\",    \"1976-07-13T00:00:00.000Z\"\n                ,p+\".gap\",    \"+5DAYS\"\n                ,p+\".other\",  \"all\"\n                ,p+\".hardend\",\"true\"\n                )\n            ,\"*[count(\"+pre+\"/int)=\"+(rangeMode ? 3 : 6)+\"]\"\n            ,pre+\"/int[@name='1976-07-01T00:00:00Z'][.='5'  ]\"\n            ,pre+\"/int[@name='1976-07-06T00:00:00Z'][.='0'  ]\"\n            ,pre+\"/int[@name='1976-07-11T00:00:00Z'][.='1'  ]\"\n            \n            ,meta+\"/int[@name='before' ][.='2']\"\n            ,meta+\"/int[@name='after'  ][.='6']\"\n            ,meta+\"/int[@name='between'][.='6']\"\n            );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e135e47842b3fd6a4797b7e4787241b06817efa2":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e135e47842b3fd6a4797b7e4787241b06817efa2"]},"commit2Childs":{"e135e47842b3fd6a4797b7e4787241b06817efa2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["e135e47842b3fd6a4797b7e4787241b06817efa2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}