{"path":"backwards/src/test/org/apache/lucene/search/TestSort#testNormalizedScores().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/search/TestSort#testNormalizedScores().mjava","pathOld":"/dev/null","sourceNew":"  // test that the relevancy scores are the same even if\n  // hits are sorted\n  public void testNormalizedScores() throws Exception {\n\n    // capture relevancy scores\n    HashMap scoresX = getScores (full.search (queryX, null, 1000).scoreDocs, full);\n    HashMap scoresY = getScores (full.search (queryY, null, 1000).scoreDocs, full);\n    HashMap scoresA = getScores (full.search (queryA, null, 1000).scoreDocs, full);\n\n    // we'll test searching locally, remote and multi\n    \n    MultiSearcher multi  = new MultiSearcher (new Searchable[] { searchX, searchY });\n\n    // change sorting and make sure relevancy stays the same\n\n    sort = new Sort();\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n    sort.setSort(SortField.FIELD_DOC);\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n    sort.setSort (new SortField(\"int\", SortField.INT));\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n    sort.setSort (new SortField(\"float\", SortField.FLOAT));\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n    sort.setSort (new SortField(\"string\", SortField.STRING));\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n    sort.setSort (new SortField(\"int\", SortField.INT),new SortField(\"float\", SortField.FLOAT));\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n    sort.setSort (new SortField (\"int\", SortField.INT, true), new SortField (null, SortField.DOC, true) );\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n    sort.setSort (new SortField(\"int\", SortField.INT),new SortField(\"string\", SortField.STRING));\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/search/TestSort#testNormalizedScores().mjava","pathOld":"backwards/src/test/org/apache/lucene/search/TestSort#testNormalizedScores().mjava","sourceNew":"  // test that the relevancy scores are the same even if\n  // hits are sorted\n  public void testNormalizedScores() throws Exception {\n\n    // capture relevancy scores\n    HashMap scoresX = getScores (full.search (queryX, null, 1000).scoreDocs, full);\n    HashMap scoresY = getScores (full.search (queryY, null, 1000).scoreDocs, full);\n    HashMap scoresA = getScores (full.search (queryA, null, 1000).scoreDocs, full);\n\n    // we'll test searching locally, remote and multi\n    \n    MultiSearcher multi  = new MultiSearcher (new Searchable[] { searchX, searchY });\n\n    // change sorting and make sure relevancy stays the same\n\n    sort = new Sort();\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n    sort.setSort(SortField.FIELD_DOC);\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n    sort.setSort (new SortField(\"int\", SortField.INT));\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n    sort.setSort (new SortField(\"float\", SortField.FLOAT));\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n    sort.setSort (new SortField(\"string\", SortField.STRING));\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n    sort.setSort (new SortField(\"int\", SortField.INT),new SortField(\"float\", SortField.FLOAT));\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n    sort.setSort (new SortField (\"int\", SortField.INT, true), new SortField (null, SortField.DOC, true) );\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n    sort.setSort (new SortField(\"int\", SortField.INT),new SortField(\"string\", SortField.STRING));\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n  }\n\n","sourceOld":"  // test that the relevancy scores are the same even if\n  // hits are sorted\n  public void testNormalizedScores() throws Exception {\n\n    // capture relevancy scores\n    HashMap scoresX = getScores (full.search (queryX, null, 1000).scoreDocs, full);\n    HashMap scoresY = getScores (full.search (queryY, null, 1000).scoreDocs, full);\n    HashMap scoresA = getScores (full.search (queryA, null, 1000).scoreDocs, full);\n\n    // we'll test searching locally, remote and multi\n    \n    MultiSearcher multi  = new MultiSearcher (new Searchable[] { searchX, searchY });\n\n    // change sorting and make sure relevancy stays the same\n\n    sort = new Sort();\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n    sort.setSort(SortField.FIELD_DOC);\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n    sort.setSort (new SortField(\"int\", SortField.INT));\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n    sort.setSort (new SortField(\"float\", SortField.FLOAT));\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n    sort.setSort (new SortField(\"string\", SortField.STRING));\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n    sort.setSort (new SortField(\"int\", SortField.INT),new SortField(\"float\", SortField.FLOAT));\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n    sort.setSort (new SortField (\"int\", SortField.INT, true), new SortField (null, SortField.DOC, true) );\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n    sort.setSort (new SortField(\"int\", SortField.INT),new SortField(\"string\", SortField.STRING));\n    assertSameValues (scoresX, getScores (full.search (queryX, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresX, getScores (multi.search (queryX, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresY, getScores (full.search (queryY, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresY, getScores (multi.search (queryY, null, 1000, sort).scoreDocs, multi));\n    assertSameValues (scoresA, getScores (full.search (queryA, null, 1000, sort).scoreDocs, full));\n    assertSameValues (scoresA, getScores (multi.search (queryA, null, 1000, sort).scoreDocs, multi));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}