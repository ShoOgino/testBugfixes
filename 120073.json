{"path":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter.DirectCFSIndexOutput#close().mjava","commits":[{"id":"0aab6e810b4b0d3743d6a048be0602801f4b3920","date":1308671625,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter.DirectCFSIndexOutput#close().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void close() throws IOException {\n      if (!closed) {\n        closed = true;\n        entry.length = writtenBytes;\n        if (isSeparate) {\n          // we are a separate file - push into the pending entries\n          pendingEntries.add(entry);\n        } else {\n          // we have been written into the CFS directly - release the lock\n          releaseOutputLock();\n        }\n        // now prune all pending entries and push them into the CFS\n        prunePendingEntries();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter.DirectCFSIndexOutput#close().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void close() throws IOException {\n      if (!closed) {\n        closed = true;\n        entry.length = writtenBytes;\n        if (isSeparate) {\n          // we are a separate file - push into the pending entries\n          pendingEntries.add(entry);\n        } else {\n          // we have been written into the CFS directly - release the lock\n          releaseOutputLock();\n        }\n        // now prune all pending entries and push them into the CFS\n        prunePendingEntries();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter.DirectCFSIndexOutput#close().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void close() throws IOException {\n      if (!closed) {\n        closed = true;\n        entry.length = writtenBytes;\n        if (isSeparate) {\n          // we are a separate file - push into the pending entries\n          pendingEntries.add(entry);\n        } else {\n          // we have been written into the CFS directly - release the lock\n          releaseOutputLock();\n        }\n        // now prune all pending entries and push them into the CFS\n        prunePendingEntries();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc0b8069918917b33f361011899a1af0cdd2d462","date":1310039336,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter.DirectCFSIndexOutput#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter.DirectCFSIndexOutput#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      if (!closed) {\n        closed = true;\n        entry.length = writtenBytes;\n        if (isSeparate) {\n          delegate.close();\n          // we are a separate file - push into the pending entries\n          pendingEntries.add(entry);\n        } else {\n          // we have been written into the CFS directly - release the lock\n          releaseOutputLock();\n        }\n        // now prune all pending entries and push them into the CFS\n        prunePendingEntries();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      if (!closed) {\n        closed = true;\n        entry.length = writtenBytes;\n        if (isSeparate) {\n          // we are a separate file - push into the pending entries\n          pendingEntries.add(entry);\n        } else {\n          // we have been written into the CFS directly - release the lock\n          releaseOutputLock();\n        }\n        // now prune all pending entries and push them into the CFS\n        prunePendingEntries();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter.DirectCFSIndexOutput#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter.DirectCFSIndexOutput#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      if (!closed) {\n        closed = true;\n        entry.length = writtenBytes;\n        if (isSeparate) {\n          delegate.close();\n          // we are a separate file - push into the pending entries\n          pendingEntries.add(entry);\n        } else {\n          // we have been written into the CFS directly - release the lock\n          releaseOutputLock();\n        }\n        // now prune all pending entries and push them into the CFS\n        prunePendingEntries();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      if (!closed) {\n        closed = true;\n        entry.length = writtenBytes;\n        if (isSeparate) {\n          // we are a separate file - push into the pending entries\n          pendingEntries.add(entry);\n        } else {\n          // we have been written into the CFS directly - release the lock\n          releaseOutputLock();\n        }\n        // now prune all pending entries and push them into the CFS\n        prunePendingEntries();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter.DirectCFSIndexOutput#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter.DirectCFSIndexOutput#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      if (!closed) {\n        closed = true;\n        entry.length = writtenBytes;\n        if (isSeparate) {\n          delegate.close();\n          // we are a separate file - push into the pending entries\n          pendingEntries.add(entry);\n        } else {\n          // we have been written into the CFS directly - release the lock\n          releaseOutputLock();\n        }\n        // now prune all pending entries and push them into the CFS\n        prunePendingEntries();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      if (!closed) {\n        closed = true;\n        entry.length = writtenBytes;\n        if (isSeparate) {\n          // we are a separate file - push into the pending entries\n          pendingEntries.add(entry);\n        } else {\n          // we have been written into the CFS directly - release the lock\n          releaseOutputLock();\n        }\n        // now prune all pending entries and push them into the CFS\n        prunePendingEntries();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/CompoundFileWriter.DirectCFSIndexOutput#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/CompoundFileWriter.DirectCFSIndexOutput#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      if (!closed) {\n        closed = true;\n        entry.length = writtenBytes;\n        if (isSeparate) {\n          delegate.close();\n          // we are a separate file - push into the pending entries\n          pendingEntries.add(entry);\n        } else {\n          // we have been written into the CFS directly - release the lock\n          releaseOutputLock();\n        }\n        // now prune all pending entries and push them into the CFS\n        prunePendingEntries();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      if (!closed) {\n        closed = true;\n        entry.length = writtenBytes;\n        if (isSeparate) {\n          delegate.close();\n          // we are a separate file - push into the pending entries\n          pendingEntries.add(entry);\n        } else {\n          // we have been written into the CFS directly - release the lock\n          releaseOutputLock();\n        }\n        // now prune all pending entries and push them into the CFS\n        prunePendingEntries();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1291e4568eb7d9463d751627596ef14baf4c1603":["d083e83f225b11e5fdd900e83d26ddb385b6955c","bc0b8069918917b33f361011899a1af0cdd2d462"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["2553b00f699380c64959ccb27991289aae87be2e","bc0b8069918917b33f361011899a1af0cdd2d462"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["bc0b8069918917b33f361011899a1af0cdd2d462"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bc0b8069918917b33f361011899a1af0cdd2d462":["0aab6e810b4b0d3743d6a048be0602801f4b3920"],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2553b00f699380c64959ccb27991289aae87be2e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0aab6e810b4b0d3743d6a048be0602801f4b3920"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0aab6e810b4b0d3743d6a048be0602801f4b3920"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"1291e4568eb7d9463d751627596ef14baf4c1603":[],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0aab6e810b4b0d3743d6a048be0602801f4b3920","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"bc0b8069918917b33f361011899a1af0cdd2d462":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["bc0b8069918917b33f361011899a1af0cdd2d462","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"2553b00f699380c64959ccb27991289aae87be2e":["f0b9507caf22f292ac0e5e59f62db4275adf4511"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["1291e4568eb7d9463d751627596ef14baf4c1603"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}