{"path":"solr/core/src/test/org/apache/solr/search/TestAddFieldRealTimeGet#initManagedSchemaCore().mjava","commits":[{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestAddFieldRealTimeGet#initManagedSchemaCore().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath\n        = TEMP_DIR + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    final String configFileName = \"solrconfig-tlog-mutable-managed-schema.xml\";\n    final String schemaFileName = \"schema-id-and-version-fields-only.xml\";\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, configFileName), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, schemaFileName), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    initCore(configFileName, schemaFileName, tmpSolrHome.getPath());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e0d5dcd5bcba76f5b672a85f179329a4969f456","date":1376419046,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestAddFieldRealTimeGet#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestAddFieldRealTimeGet#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath\n        = TEMP_DIR + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    final String configFileName = \"solrconfig-managed-schema.xml\";\n    final String schemaFileName = \"schema-id-and-version-fields-only.xml\";\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, configFileName), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, schemaFileName), tmpConfDir);\n     FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"true\");\n    initCore(configFileName, schemaFileName, tmpSolrHome.getPath());\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath\n        = TEMP_DIR + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    final String configFileName = \"solrconfig-tlog-mutable-managed-schema.xml\";\n    final String schemaFileName = \"schema-id-and-version-fields-only.xml\";\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, configFileName), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, schemaFileName), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    initCore(configFileName, schemaFileName, tmpSolrHome.getPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestAddFieldRealTimeGet#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestAddFieldRealTimeGet#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath\n        = TEMP_DIR + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    final String configFileName = \"solrconfig-managed-schema.xml\";\n    final String schemaFileName = \"schema-id-and-version-fields-only.xml\";\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, configFileName), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, schemaFileName), tmpConfDir);\n     FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"true\");\n    initCore(configFileName, schemaFileName, tmpSolrHome.getPath());\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath\n        = TEMP_DIR + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    final String configFileName = \"solrconfig-tlog-mutable-managed-schema.xml\";\n    final String schemaFileName = \"schema-id-and-version-fields-only.xml\";\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, configFileName), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, schemaFileName), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    initCore(configFileName, schemaFileName, tmpSolrHome.getPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestAddFieldRealTimeGet#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestAddFieldRealTimeGet#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName()).getAbsolutePath();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    final String configFileName = \"solrconfig-managed-schema.xml\";\n    final String schemaFileName = \"schema-id-and-version-fields-only.xml\";\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, configFileName), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, schemaFileName), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"true\");\n    initCore(configFileName, schemaFileName, tmpSolrHome.getPath());\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath\n        = TEMP_DIR + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    final String configFileName = \"solrconfig-managed-schema.xml\";\n    final String schemaFileName = \"schema-id-and-version-fields-only.xml\";\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, configFileName), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, schemaFileName), tmpConfDir);\n     FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"true\");\n    initCore(configFileName, schemaFileName, tmpSolrHome.getPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1416f9d09d016a6894cd17e1caac137dad2bba59","date":1395941020,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestAddFieldRealTimeGet#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestAddFieldRealTimeGet#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    final String tmpSolrHomePath\n        = dataDir + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    final String configFileName = \"solrconfig-managed-schema.xml\";\n    final String schemaFileName = \"schema-id-and-version-fields-only.xml\";\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, configFileName), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, schemaFileName), tmpConfDir);\n     FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"true\");\n    initCore(configFileName, schemaFileName, tmpSolrHome.getPath());\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath\n        = TEMP_DIR + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    final String configFileName = \"solrconfig-managed-schema.xml\";\n    final String schemaFileName = \"schema-id-and-version-fields-only.xml\";\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, configFileName), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, schemaFileName), tmpConfDir);\n     FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"true\");\n    initCore(configFileName, schemaFileName, tmpSolrHome.getPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestAddFieldRealTimeGet#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestAddFieldRealTimeGet#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    final String tmpSolrHomePath = createTempDir().getAbsolutePath();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    final String configFileName = \"solrconfig-managed-schema.xml\";\n    final String schemaFileName = \"schema-id-and-version-fields-only.xml\";\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, configFileName), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, schemaFileName), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"true\");\n    initCore(configFileName, schemaFileName, tmpSolrHome.getPath());\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    createTempDir();\n    final String tmpSolrHomePath = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName()).getAbsolutePath();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    final String configFileName = \"solrconfig-managed-schema.xml\";\n    final String schemaFileName = \"schema-id-and-version-fields-only.xml\";\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, configFileName), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, schemaFileName), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"true\");\n    initCore(configFileName, schemaFileName, tmpSolrHome.getPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestAddFieldRealTimeGet#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestAddFieldRealTimeGet#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    final String tmpSolrHomePath = createTempDir().getAbsolutePath();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    final String configFileName = \"solrconfig-managed-schema.xml\";\n    final String schemaFileName = \"schema-id-and-version-fields-only.xml\";\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, configFileName), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, schemaFileName), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"true\");\n    initCore(configFileName, schemaFileName, tmpSolrHome.getPath());\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    final String tmpSolrHomePath\n        = dataDir + File.separator + TestManagedSchema.class.getSimpleName() + System.currentTimeMillis();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    final String configFileName = \"solrconfig-managed-schema.xml\";\n    final String schemaFileName = \"schema-id-and-version-fields-only.xml\";\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, configFileName), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, schemaFileName), tmpConfDir);\n     FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"true\");\n    initCore(configFileName, schemaFileName, tmpSolrHome.getPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestAddFieldRealTimeGet#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestAddFieldRealTimeGet#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    final String tmpSolrHomePath = createTempDir().toFile().getAbsolutePath();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    final String configFileName = \"solrconfig-managed-schema.xml\";\n    final String schemaFileName = \"schema-id-and-version-fields-only.xml\";\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, configFileName), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, schemaFileName), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"true\");\n    initCore(configFileName, schemaFileName, tmpSolrHome.getPath());\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    final String tmpSolrHomePath = createTempDir().getAbsolutePath();\n    tmpSolrHome = new File(tmpSolrHomePath).getAbsoluteFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    final String configFileName = \"solrconfig-managed-schema.xml\";\n    final String schemaFileName = \"schema-id-and-version-fields-only.xml\";\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, configFileName), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, schemaFileName), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"true\");\n    initCore(configFileName, schemaFileName, tmpSolrHome.getPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["d0d579490a72f2e6297eaa648940611234c57cf1"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["1416f9d09d016a6894cd17e1caac137dad2bba59","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["1e0d5dcd5bcba76f5b672a85f179329a4969f456"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["08970e5b8411182a29412c177eff67ec1110095b","1e0d5dcd5bcba76f5b672a85f179329a4969f456"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"1e0d5dcd5bcba76f5b672a85f179329a4969f456":["08970e5b8411182a29412c177eff67ec1110095b"],"d0d579490a72f2e6297eaa648940611234c57cf1":["1e0d5dcd5bcba76f5b672a85f179329a4969f456"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4abec28b874149a7223e32cc7a01704c27790de"],"08970e5b8411182a29412c177eff67ec1110095b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["08970e5b8411182a29412c177eff67ec1110095b"],"d0d579490a72f2e6297eaa648940611234c57cf1":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"1e0d5dcd5bcba76f5b672a85f179329a4969f456":["1416f9d09d016a6894cd17e1caac137dad2bba59","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","d0d579490a72f2e6297eaa648940611234c57cf1"],"f4abec28b874149a7223e32cc7a01704c27790de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"08970e5b8411182a29412c177eff67ec1110095b":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","1e0d5dcd5bcba76f5b672a85f179329a4969f456"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}