{"path":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader#readAEOverridingParameters().mjava","commits":[{"id":"bcbe885ae2ce6f06da92061ec4deebdf19cdf6ca","date":1295834280,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader#readAEOverridingParameters().mjava","pathOld":"/dev/null","sourceNew":"  private Map<String, String> readAEOverridingParameters() {\n    Map<String, String> runtimeParameters = new HashMap<String, String>();\n    Node uimaConfigNode = solrConfig.getNode(AE_RUNTIME_PARAMETERS_NODE_PATH, true);\n\n    if (uimaConfigNode.hasChildNodes()) {\n      NodeList overridingNodes = uimaConfigNode.getChildNodes();\n      for (int i = 0; i < overridingNodes.getLength(); i++) {\n        Node overridingNode = overridingNodes.item(i);\n        if (overridingNode.getNodeType() != Node.TEXT_NODE) {\n          runtimeParameters.put(overridingNode.getNodeName(), overridingNode.getTextContent());\n        }\n      }\n    }\n\n    return runtimeParameters;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["0caa667d4d07122cb9a0b193fba0f478680d982e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader#readAEOverridingParameters().mjava","pathOld":"/dev/null","sourceNew":"  private Map<String, String> readAEOverridingParameters() {\n    Map<String, String> runtimeParameters = new HashMap<String, String>();\n    Node uimaConfigNode = solrConfig.getNode(AE_RUNTIME_PARAMETERS_NODE_PATH, true);\n\n    if (uimaConfigNode.hasChildNodes()) {\n      NodeList overridingNodes = uimaConfigNode.getChildNodes();\n      for (int i = 0; i < overridingNodes.getLength(); i++) {\n        Node overridingNode = overridingNodes.item(i);\n        if (overridingNode.getNodeType() != Node.TEXT_NODE) {\n          runtimeParameters.put(overridingNode.getNodeName(), overridingNode.getTextContent());\n        }\n      }\n    }\n\n    return runtimeParameters;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader#readAEOverridingParameters().mjava","pathOld":"/dev/null","sourceNew":"  private Map<String, String> readAEOverridingParameters() {\n    Map<String, String> runtimeParameters = new HashMap<String, String>();\n    Node uimaConfigNode = solrConfig.getNode(AE_RUNTIME_PARAMETERS_NODE_PATH, true);\n\n    if (uimaConfigNode.hasChildNodes()) {\n      NodeList overridingNodes = uimaConfigNode.getChildNodes();\n      for (int i = 0; i < overridingNodes.getLength(); i++) {\n        Node overridingNode = overridingNodes.item(i);\n        if (overridingNode.getNodeType() != Node.TEXT_NODE) {\n          runtimeParameters.put(overridingNode.getNodeName(), overridingNode.getTextContent());\n        }\n      }\n    }\n\n    return runtimeParameters;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0caa667d4d07122cb9a0b193fba0f478680d982e","date":1300755686,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader#readAEOverridingParameters().mjava","pathOld":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader#readAEOverridingParameters().mjava","sourceNew":"  private Map<String, Object> readAEOverridingParameters() {\n    Map<String, Object> runtimeParameters = new HashMap<String, Object>();\n    Node uimaConfigNode = solrConfig.getNode(AE_RUNTIME_PARAMETERS_NODE_PATH, true);\n\n    if (uimaConfigNode.hasChildNodes()) {\n      NodeList overridingNodes = uimaConfigNode.getChildNodes();\n      for (int i = 0; i < overridingNodes.getLength(); i++) {\n        Node overridingNode = overridingNodes.item(i);\n        if (overridingNode.getNodeType() != Node.TEXT_NODE && overridingNode.getNodeType() != Node.COMMENT_NODE) {\n          runtimeParameters.put(overridingNode.getNodeName(), overridingNode.getTextContent());\n        }\n      }\n    }\n\n    return runtimeParameters;\n  }\n\n","sourceOld":"  private Map<String, String> readAEOverridingParameters() {\n    Map<String, String> runtimeParameters = new HashMap<String, String>();\n    Node uimaConfigNode = solrConfig.getNode(AE_RUNTIME_PARAMETERS_NODE_PATH, true);\n\n    if (uimaConfigNode.hasChildNodes()) {\n      NodeList overridingNodes = uimaConfigNode.getChildNodes();\n      for (int i = 0; i < overridingNodes.getLength(); i++) {\n        Node overridingNode = overridingNodes.item(i);\n        if (overridingNode.getNodeType() != Node.TEXT_NODE) {\n          runtimeParameters.put(overridingNode.getNodeName(), overridingNode.getTextContent());\n        }\n      }\n    }\n\n    return runtimeParameters;\n  }\n\n","bugFix":["bcbe885ae2ce6f06da92061ec4deebdf19cdf6ca"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader#readAEOverridingParameters().mjava","pathOld":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader#readAEOverridingParameters().mjava","sourceNew":"  private Map<String, Object> readAEOverridingParameters() {\n    Map<String, Object> runtimeParameters = new HashMap<String, Object>();\n    Node uimaConfigNode = solrConfig.getNode(AE_RUNTIME_PARAMETERS_NODE_PATH, true);\n\n    if (uimaConfigNode.hasChildNodes()) {\n      NodeList overridingNodes = uimaConfigNode.getChildNodes();\n      for (int i = 0; i < overridingNodes.getLength(); i++) {\n        Node overridingNode = overridingNodes.item(i);\n        if (overridingNode.getNodeType() != Node.TEXT_NODE && overridingNode.getNodeType() != Node.COMMENT_NODE) {\n          runtimeParameters.put(overridingNode.getNodeName(), overridingNode.getTextContent());\n        }\n      }\n    }\n\n    return runtimeParameters;\n  }\n\n","sourceOld":"  private Map<String, String> readAEOverridingParameters() {\n    Map<String, String> runtimeParameters = new HashMap<String, String>();\n    Node uimaConfigNode = solrConfig.getNode(AE_RUNTIME_PARAMETERS_NODE_PATH, true);\n\n    if (uimaConfigNode.hasChildNodes()) {\n      NodeList overridingNodes = uimaConfigNode.getChildNodes();\n      for (int i = 0; i < overridingNodes.getLength(); i++) {\n        Node overridingNode = overridingNodes.item(i);\n        if (overridingNode.getNodeType() != Node.TEXT_NODE) {\n          runtimeParameters.put(overridingNode.getNodeName(), overridingNode.getTextContent());\n        }\n      }\n    }\n\n    return runtimeParameters;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader#readAEOverridingParameters().mjava","pathOld":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader#readAEOverridingParameters().mjava","sourceNew":"  private Map<String, Object> readAEOverridingParameters() {\n    Map<String, Object> runtimeParameters = new HashMap<String, Object>();\n    Node uimaConfigNode = solrConfig.getNode(AE_RUNTIME_PARAMETERS_NODE_PATH, true);\n\n    if (uimaConfigNode.hasChildNodes()) {\n      NodeList overridingNodes = uimaConfigNode.getChildNodes();\n      for (int i = 0; i < overridingNodes.getLength(); i++) {\n        Node overridingNode = overridingNodes.item(i);\n        if (overridingNode.getNodeType() != Node.TEXT_NODE && overridingNode.getNodeType() != Node.COMMENT_NODE) {\n          runtimeParameters.put(overridingNode.getNodeName(), overridingNode.getTextContent());\n        }\n      }\n    }\n\n    return runtimeParameters;\n  }\n\n","sourceOld":"  private Map<String, String> readAEOverridingParameters() {\n    Map<String, String> runtimeParameters = new HashMap<String, String>();\n    Node uimaConfigNode = solrConfig.getNode(AE_RUNTIME_PARAMETERS_NODE_PATH, true);\n\n    if (uimaConfigNode.hasChildNodes()) {\n      NodeList overridingNodes = uimaConfigNode.getChildNodes();\n      for (int i = 0; i < overridingNodes.getLength(); i++) {\n        Node overridingNode = overridingNodes.item(i);\n        if (overridingNode.getNodeType() != Node.TEXT_NODE) {\n          runtimeParameters.put(overridingNode.getNodeName(), overridingNode.getTextContent());\n        }\n      }\n    }\n\n    return runtimeParameters;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84e740e39a90ea9fbf66e3487ce9fc0396572954","date":1303645723,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader#readAEOverridingParameters().mjava","pathOld":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader#readAEOverridingParameters().mjava","sourceNew":"  @SuppressWarnings(\"rawtypes\")\n  private Map<String, Object> readAEOverridingParameters() {\n    Map<String, Object> runtimeParameters = new HashMap<String, Object>();\n    NamedList runtimeParams = (NamedList) args.get(\"runtimeParameters\");\n    for (int i = 0; i < runtimeParams.size(); i++) {\n      String name = runtimeParams.getName(i);\n      Object value = runtimeParams.getVal(i);\n      runtimeParameters.put(name, value);\n    }\n    return runtimeParameters;\n  }\n\n","sourceOld":"  private Map<String, Object> readAEOverridingParameters() {\n    Map<String, Object> runtimeParameters = new HashMap<String, Object>();\n    Node uimaConfigNode = solrConfig.getNode(AE_RUNTIME_PARAMETERS_NODE_PATH, true);\n\n    if (uimaConfigNode.hasChildNodes()) {\n      NodeList overridingNodes = uimaConfigNode.getChildNodes();\n      for (int i = 0; i < overridingNodes.getLength(); i++) {\n        Node overridingNode = overridingNodes.item(i);\n        if (overridingNode.getNodeType() != Node.TEXT_NODE && overridingNode.getNodeType() != Node.COMMENT_NODE) {\n          runtimeParameters.put(overridingNode.getNodeName(), overridingNode.getTextContent());\n        }\n      }\n    }\n\n    return runtimeParameters;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d5df8e07c035d62d982894b439322da40e0938","date":1303923139,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader#readAEOverridingParameters().mjava","pathOld":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader#readAEOverridingParameters().mjava","sourceNew":"  @SuppressWarnings(\"rawtypes\")\n  private Map<String, Object> readAEOverridingParameters() {\n    Map<String, Object> runtimeParameters = new HashMap<String, Object>();\n    NamedList runtimeParams = (NamedList) args.get(\"runtimeParameters\");\n    for (int i = 0; i < runtimeParams.size(); i++) {\n      String name = runtimeParams.getName(i);\n      Object value = runtimeParams.getVal(i);\n      runtimeParameters.put(name, value);\n    }\n    return runtimeParameters;\n  }\n\n","sourceOld":"  private Map<String, Object> readAEOverridingParameters() {\n    Map<String, Object> runtimeParameters = new HashMap<String, Object>();\n    Node uimaConfigNode = solrConfig.getNode(AE_RUNTIME_PARAMETERS_NODE_PATH, true);\n\n    if (uimaConfigNode.hasChildNodes()) {\n      NodeList overridingNodes = uimaConfigNode.getChildNodes();\n      for (int i = 0; i < overridingNodes.getLength(); i++) {\n        Node overridingNode = overridingNodes.item(i);\n        if (overridingNode.getNodeType() != Node.TEXT_NODE && overridingNode.getNodeType() != Node.COMMENT_NODE) {\n          runtimeParameters.put(overridingNode.getNodeName(), overridingNode.getTextContent());\n        }\n      }\n    }\n\n    return runtimeParameters;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader#readAEOverridingParameters().mjava","pathOld":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader#readAEOverridingParameters().mjava","sourceNew":"  @SuppressWarnings(\"rawtypes\")\n  private Map<String, Object> readAEOverridingParameters() {\n    Map<String, Object> runtimeParameters = new HashMap<String, Object>();\n    NamedList runtimeParams = (NamedList) args.get(\"runtimeParameters\");\n    for (int i = 0; i < runtimeParams.size(); i++) {\n      String name = runtimeParams.getName(i);\n      Object value = runtimeParams.getVal(i);\n      runtimeParameters.put(name, value);\n    }\n    return runtimeParameters;\n  }\n\n","sourceOld":"  private Map<String, Object> readAEOverridingParameters() {\n    Map<String, Object> runtimeParameters = new HashMap<String, Object>();\n    Node uimaConfigNode = solrConfig.getNode(AE_RUNTIME_PARAMETERS_NODE_PATH, true);\n\n    if (uimaConfigNode.hasChildNodes()) {\n      NodeList overridingNodes = uimaConfigNode.getChildNodes();\n      for (int i = 0; i < overridingNodes.getLength(); i++) {\n        Node overridingNode = overridingNodes.item(i);\n        if (overridingNode.getNodeType() != Node.TEXT_NODE && overridingNode.getNodeType() != Node.COMMENT_NODE) {\n          runtimeParameters.put(overridingNode.getNodeName(), overridingNode.getTextContent());\n        }\n      }\n    }\n\n    return runtimeParameters;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader#readAEOverridingParameters().mjava","pathOld":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader#readAEOverridingParameters().mjava","sourceNew":"  @SuppressWarnings(\"rawtypes\")\n  private Map<String, Object> readAEOverridingParameters() {\n    Map<String, Object> runtimeParameters = new HashMap<String, Object>();\n    NamedList runtimeParams = (NamedList) args.get(\"runtimeParameters\");\n    for (int i = 0; i < runtimeParams.size(); i++) {\n      String name = runtimeParams.getName(i);\n      Object value = runtimeParams.getVal(i);\n      runtimeParameters.put(name, value);\n    }\n    return runtimeParameters;\n  }\n\n","sourceOld":"  private Map<String, Object> readAEOverridingParameters() {\n    Map<String, Object> runtimeParameters = new HashMap<String, Object>();\n    Node uimaConfigNode = solrConfig.getNode(AE_RUNTIME_PARAMETERS_NODE_PATH, true);\n\n    if (uimaConfigNode.hasChildNodes()) {\n      NodeList overridingNodes = uimaConfigNode.getChildNodes();\n      for (int i = 0; i < overridingNodes.getLength(); i++) {\n        Node overridingNode = overridingNodes.item(i);\n        if (overridingNode.getNodeType() != Node.TEXT_NODE && overridingNode.getNodeType() != Node.COMMENT_NODE) {\n          runtimeParameters.put(overridingNode.getNodeName(), overridingNode.getTextContent());\n        }\n      }\n    }\n\n    return runtimeParameters;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/uima/src/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader#readAEOverridingParameters().mjava","pathOld":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader#readAEOverridingParameters().mjava","sourceNew":"  @SuppressWarnings(\"rawtypes\")\n  private Map<String, Object> readAEOverridingParameters() {\n    Map<String, Object> runtimeParameters = new HashMap<String, Object>();\n    NamedList runtimeParams = (NamedList) args.get(\"runtimeParameters\");\n    for (int i = 0; i < runtimeParams.size(); i++) {\n      String name = runtimeParams.getName(i);\n      Object value = runtimeParams.getVal(i);\n      runtimeParameters.put(name, value);\n    }\n    return runtimeParameters;\n  }\n\n","sourceOld":"  @SuppressWarnings(\"rawtypes\")\n  private Map<String, Object> readAEOverridingParameters() {\n    Map<String, Object> runtimeParameters = new HashMap<String, Object>();\n    NamedList runtimeParams = (NamedList) args.get(\"runtimeParameters\");\n    for (int i = 0; i < runtimeParams.size(); i++) {\n      String name = runtimeParams.getName(i);\n      Object value = runtimeParams.getVal(i);\n      runtimeParameters.put(name, value);\n    }\n    return runtimeParameters;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/uima/src/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader#readAEOverridingParameters().mjava","pathOld":"solr/contrib/uima/src/main/java/org/apache/solr/uima/processor/SolrUIMAConfigurationReader#readAEOverridingParameters().mjava","sourceNew":"  @SuppressWarnings(\"rawtypes\")\n  private Map<String, Object> readAEOverridingParameters() {\n    Map<String, Object> runtimeParameters = new HashMap<String, Object>();\n    NamedList runtimeParams = (NamedList) args.get(\"runtimeParameters\");\n    for (int i = 0; i < runtimeParams.size(); i++) {\n      String name = runtimeParams.getName(i);\n      Object value = runtimeParams.getVal(i);\n      runtimeParameters.put(name, value);\n    }\n    return runtimeParameters;\n  }\n\n","sourceOld":"  @SuppressWarnings(\"rawtypes\")\n  private Map<String, Object> readAEOverridingParameters() {\n    Map<String, Object> runtimeParameters = new HashMap<String, Object>();\n    NamedList runtimeParams = (NamedList) args.get(\"runtimeParameters\");\n    for (int i = 0; i < runtimeParams.size(); i++) {\n      String name = runtimeParams.getName(i);\n      Object value = runtimeParams.getVal(i);\n      runtimeParameters.put(name, value);\n    }\n    return runtimeParameters;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0caa667d4d07122cb9a0b193fba0f478680d982e":["bcbe885ae2ce6f06da92061ec4deebdf19cdf6ca"],"d4d5df8e07c035d62d982894b439322da40e0938":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","84e740e39a90ea9fbf66e3487ce9fc0396572954"],"84e740e39a90ea9fbf66e3487ce9fc0396572954":["0caa667d4d07122cb9a0b193fba0f478680d982e"],"c26f00b574427b55127e869b935845554afde1fa":["84e740e39a90ea9fbf66e3487ce9fc0396572954","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["d619839baa8ce5503e496b94a9e42ad6f079293f","84e740e39a90ea9fbf66e3487ce9fc0396572954"],"bcbe885ae2ce6f06da92061ec4deebdf19cdf6ca":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bcbe885ae2ce6f06da92061ec4deebdf19cdf6ca"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["bb9b72f7c3d7827c64dd4ec580ded81778da361d","0caa667d4d07122cb9a0b193fba0f478680d982e"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a3776dccca01c11e7046323cfad46a3b4a471233","84e740e39a90ea9fbf66e3487ce9fc0396572954"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["29ef99d61cda9641b6250bf9567329a6e65f901d","0caa667d4d07122cb9a0b193fba0f478680d982e"],"a3776dccca01c11e7046323cfad46a3b4a471233":["0caa667d4d07122cb9a0b193fba0f478680d982e","84e740e39a90ea9fbf66e3487ce9fc0396572954"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bcbe885ae2ce6f06da92061ec4deebdf19cdf6ca"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"0caa667d4d07122cb9a0b193fba0f478680d982e":["84e740e39a90ea9fbf66e3487ce9fc0396572954","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","a3776dccca01c11e7046323cfad46a3b4a471233"],"d4d5df8e07c035d62d982894b439322da40e0938":[],"84e740e39a90ea9fbf66e3487ce9fc0396572954":["d4d5df8e07c035d62d982894b439322da40e0938","c26f00b574427b55127e869b935845554afde1fa","135621f3a0670a9394eb563224a3b76cc4dddc0f","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","a3776dccca01c11e7046323cfad46a3b4a471233"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"bcbe885ae2ce6f06da92061ec4deebdf19cdf6ca":["0caa667d4d07122cb9a0b193fba0f478680d982e","bb9b72f7c3d7827c64dd4ec580ded81778da361d","29ef99d61cda9641b6250bf9567329a6e65f901d"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["d4d5df8e07c035d62d982894b439322da40e0938"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bcbe885ae2ce6f06da92061ec4deebdf19cdf6ca","bb9b72f7c3d7827c64dd4ec580ded81778da361d","29ef99d61cda9641b6250bf9567329a6e65f901d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d4d5df8e07c035d62d982894b439322da40e0938","135621f3a0670a9394eb563224a3b76cc4dddc0f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}