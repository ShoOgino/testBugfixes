{"path":"solr/core/src/java/org/apache/solr/update/processor/AtomicUpdateDocumentMerger#preparePatterns(Object).mjava","commits":[{"id":"2d3b450958a83a29a16e492fbff9d094a9a571b6","date":1421525067,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/AtomicUpdateDocumentMerger#preparePatterns(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DistributedUpdateProcessor#preparePatterns(Object).mjava","sourceNew":"  private Collection<Pattern> preparePatterns(Object fieldVal) {\n    final Collection<Pattern> patterns = new LinkedHashSet<>(1);\n    if (fieldVal instanceof Collection) {\n      Collection<String> patternVals = (Collection<String>) fieldVal;\n      for (String patternVal : patternVals) {\n        patterns.add(Pattern.compile(patternVal));\n      }\n    } else {\n      patterns.add(Pattern.compile(fieldVal.toString()));\n    }\n    return patterns;\n  }\n\n","sourceOld":"  private Collection<Pattern> preparePatterns(Object fieldVal) {\n    final Collection<Pattern> patterns = new LinkedHashSet<>(1);\n    if (fieldVal instanceof Collection) {\n      Collection<String> patternVals = (Collection<String>) fieldVal;\n      for (String patternVal : patternVals) {\n        patterns.add(Pattern.compile(patternVal));\n      }\n    } else {\n      patterns.add(Pattern.compile(fieldVal.toString()));\n    }\n    return patterns;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a25dacbb15b3a184ab77b437a6b4d54ff286b5d","date":1570469935,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/AtomicUpdateDocumentMerger#preparePatterns(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/AtomicUpdateDocumentMerger#preparePatterns(Object).mjava","sourceNew":"  private Collection<Pattern> preparePatterns(Object fieldVal) {\n    final Collection<Pattern> patterns = new LinkedHashSet<>(1);\n    if (fieldVal instanceof Collection) {\n      Collection<Object> patternVals = (Collection<Object>) fieldVal;\n      for (Object patternVal : patternVals) {\n        patterns.add(Pattern.compile(patternVal.toString()));\n      }\n    } else {\n      patterns.add(Pattern.compile(fieldVal.toString()));\n    }\n    return patterns;\n  }\n\n","sourceOld":"  private Collection<Pattern> preparePatterns(Object fieldVal) {\n    final Collection<Pattern> patterns = new LinkedHashSet<>(1);\n    if (fieldVal instanceof Collection) {\n      Collection<String> patternVals = (Collection<String>) fieldVal;\n      for (String patternVal : patternVals) {\n        patterns.add(Pattern.compile(patternVal));\n      }\n    } else {\n      patterns.add(Pattern.compile(fieldVal.toString()));\n    }\n    return patterns;\n  }\n\n","bugFix":["92cd1849f2fc9035639005768ae063a253af7aae"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/AtomicUpdateDocumentMerger#preparePatterns(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/AtomicUpdateDocumentMerger#preparePatterns(Object).mjava","sourceNew":"  private Collection<Pattern> preparePatterns(Object fieldVal) {\n    final Collection<Pattern> patterns = new LinkedHashSet<>(1);\n    if (fieldVal instanceof Collection) {\n      Collection<Object> patternVals = (Collection<Object>) fieldVal;\n      for (Object patternVal : patternVals) {\n        patterns.add(Pattern.compile(patternVal.toString()));\n      }\n    } else {\n      patterns.add(Pattern.compile(fieldVal.toString()));\n    }\n    return patterns;\n  }\n\n","sourceOld":"  private Collection<Pattern> preparePatterns(Object fieldVal) {\n    final Collection<Pattern> patterns = new LinkedHashSet<>(1);\n    if (fieldVal instanceof Collection) {\n      Collection<String> patternVals = (Collection<String>) fieldVal;\n      for (String patternVal : patternVals) {\n        patterns.add(Pattern.compile(patternVal));\n      }\n    } else {\n      patterns.add(Pattern.compile(fieldVal.toString()));\n    }\n    return patterns;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"018a36ff4088cb91ab12cbe44f696d81d1fadd77","date":1591657414,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/AtomicUpdateDocumentMerger#preparePatterns(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/AtomicUpdateDocumentMerger#preparePatterns(Object).mjava","sourceNew":"  private Collection<Pattern> preparePatterns(Object fieldVal) {\n    final Collection<Pattern> patterns = new LinkedHashSet<>(1);\n    if (fieldVal instanceof Collection) {\n      @SuppressWarnings({\"unchecked\"})\n      Collection<Object> patternVals = (Collection<Object>) fieldVal;\n      for (Object patternVal : patternVals) {\n        patterns.add(Pattern.compile(patternVal.toString()));\n      }\n    } else {\n      patterns.add(Pattern.compile(fieldVal.toString()));\n    }\n    return patterns;\n  }\n\n","sourceOld":"  private Collection<Pattern> preparePatterns(Object fieldVal) {\n    final Collection<Pattern> patterns = new LinkedHashSet<>(1);\n    if (fieldVal instanceof Collection) {\n      Collection<Object> patternVals = (Collection<Object>) fieldVal;\n      for (Object patternVal : patternVals) {\n        patterns.add(Pattern.compile(patternVal.toString()));\n      }\n    } else {\n      patterns.add(Pattern.compile(fieldVal.toString()));\n    }\n    return patterns;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"018a36ff4088cb91ab12cbe44f696d81d1fadd77":["6a25dacbb15b3a184ab77b437a6b4d54ff286b5d"],"6a25dacbb15b3a184ab77b437a6b4d54ff286b5d":["2d3b450958a83a29a16e492fbff9d094a9a571b6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2d3b450958a83a29a16e492fbff9d094a9a571b6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["018a36ff4088cb91ab12cbe44f696d81d1fadd77"],"b0b597c65628ca9e73913a07e81691f8229bae35":["2d3b450958a83a29a16e492fbff9d094a9a571b6","6a25dacbb15b3a184ab77b437a6b4d54ff286b5d"]},"commit2Childs":{"018a36ff4088cb91ab12cbe44f696d81d1fadd77":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6a25dacbb15b3a184ab77b437a6b4d54ff286b5d":["018a36ff4088cb91ab12cbe44f696d81d1fadd77","b0b597c65628ca9e73913a07e81691f8229bae35"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2d3b450958a83a29a16e492fbff9d094a9a571b6"],"2d3b450958a83a29a16e492fbff9d094a9a571b6":["6a25dacbb15b3a184ab77b437a6b4d54ff286b5d","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}