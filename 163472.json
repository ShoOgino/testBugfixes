{"path":"solr/solrj/src/test/org/noggit/TestObjectBuilder#_test(String,Object).mjava","commits":[{"id":"980f4ef5a16664be88d82c37e6af5c49a3d57c9c","date":1557969027,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/test/org/noggit/TestObjectBuilder#_test(String,Object).mjava","pathOld":"/dev/null","sourceNew":"  public void _test(String val, Object expected) throws IOException {\n    val = val.replace('\\'','\"');\n    Object v = ObjectBuilder.fromJSON(val);\n\n    String s1 = JSONUtil.toJSON(v,-1);\n    String s2 = JSONUtil.toJSON(expected,-1);\n    assertEquals(s1, s2);\n\n    // not make sure that it round-trips correctly\n    JSONParser p2 = TestJSONParser.getParser(s1);\n    Object v2 = ObjectBuilder.getVal(p2);\n    String s3 = JSONUtil.toJSON(v2,-1);\n    assertEquals(s1, s3);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61f55b4999c3f858f4f4acc9c6dc57af2c1acf99","date":1571689506,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/solrj/src/test/org/noggit/TestObjectBuilder#_test(String,Object).mjava","pathOld":"solr/solrj/src/test/org/noggit/TestObjectBuilder#_test(String,Object).mjava","sourceNew":"  public void _test(String val, Object expected) throws IOException {\n    val = val.replace('\\'','\"');\n    Object v = random().nextBoolean() ? ObjectBuilder.fromJSON(val) :\n      ObjectBuilder.fromJSONStrict(val) ;\n\n    String s1 = JSONUtil.toJSON(v,-1);\n    String s2 = JSONUtil.toJSON(expected,-1);\n    assertEquals(s1, s2);\n\n    // not make sure that it round-trips correctly\n    JSONParser p2 = TestJSONParser.getParser(s1);\n    Object v2 = ObjectBuilder.getVal(p2);\n    String s3 = JSONUtil.toJSON(v2,-1);\n    assertEquals(s1, s3);\n  }\n\n","sourceOld":"  public void _test(String val, Object expected) throws IOException {\n    val = val.replace('\\'','\"');\n    Object v = ObjectBuilder.fromJSON(val);\n\n    String s1 = JSONUtil.toJSON(v,-1);\n    String s2 = JSONUtil.toJSON(expected,-1);\n    assertEquals(s1, s2);\n\n    // not make sure that it round-trips correctly\n    JSONParser p2 = TestJSONParser.getParser(s1);\n    Object v2 = ObjectBuilder.getVal(p2);\n    String s3 = JSONUtil.toJSON(v2,-1);\n    assertEquals(s1, s3);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"980f4ef5a16664be88d82c37e6af5c49a3d57c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"61f55b4999c3f858f4f4acc9c6dc57af2c1acf99":["980f4ef5a16664be88d82c37e6af5c49a3d57c9c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["61f55b4999c3f858f4f4acc9c6dc57af2c1acf99"]},"commit2Childs":{"980f4ef5a16664be88d82c37e6af5c49a3d57c9c":["61f55b4999c3f858f4f4acc9c6dc57af2c1acf99"],"61f55b4999c3f858f4f4acc9c6dc57af2c1acf99":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["980f4ef5a16664be88d82c37e6af5c49a3d57c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}