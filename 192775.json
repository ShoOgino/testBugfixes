{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/BlendedInfixSuggester.LookUpComparator#compare(Lookup.LookupResult,Lookup.LookupResult).mjava","commits":[{"id":"f13ec1b606a28789743a563929e7c556e8218297","date":1389302034,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/BlendedInfixSuggester.LookUpComparator#compare(Lookup.LookupResult,Lookup.LookupResult).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int compare(Lookup.LookupResult o1, Lookup.LookupResult o2) {\n      // order on weight\n      if (o1.value > o2.value) {\n        return 1;\n      } else if (o1.value < o2.value) {\n        return 0;\n      }\n\n      // otherwise on alphabetic order\n      return CHARSEQUENCE_COMPARATOR.compare(o1.key, o2.key);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["2ec6c19dff256627e4b5aabbeb0ae45379f0cbb2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1b164dc1ecd988c4c93605661c68bb7a47742bca","date":1389717115,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/BlendedInfixSuggester.LookUpComparator#compare(Lookup.LookupResult,Lookup.LookupResult).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/BlendedInfixSuggester.LookUpComparator#compare(Lookup.LookupResult,Lookup.LookupResult).mjava","sourceNew":"    @Override\n    public int compare(Lookup.LookupResult o1, Lookup.LookupResult o2) {\n      // order on weight\n      if (o1.value > o2.value) {\n        return 1;\n      } else if (o1.value < o2.value) {\n        return -1;\n      }\n\n      // otherwise on alphabetic order\n      return CHARSEQUENCE_COMPARATOR.compare(o1.key, o2.key);\n    }\n\n","sourceOld":"    @Override\n    public int compare(Lookup.LookupResult o1, Lookup.LookupResult o2) {\n      // order on weight\n      if (o1.value > o2.value) {\n        return 1;\n      } else if (o1.value < o2.value) {\n        return 0;\n      }\n\n      // otherwise on alphabetic order\n      return CHARSEQUENCE_COMPARATOR.compare(o1.key, o2.key);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2ec6c19dff256627e4b5aabbeb0ae45379f0cbb2","date":1436996676,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/BlendedInfixSuggester.LookUpComparator#compare(Lookup.LookupResult,Lookup.LookupResult).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/BlendedInfixSuggester.LookUpComparator#compare(Lookup.LookupResult,Lookup.LookupResult).mjava","sourceNew":"    @Override\n    public int compare(Lookup.LookupResult o1, Lookup.LookupResult o2) {\n      // order on weight\n      if (o1.value > o2.value) {\n        return 1;\n      } else if (o1.value < o2.value) {\n        return -1;\n      }\n\n      // otherwise on alphabetic order\n      int keyCompare = CHARSEQUENCE_COMPARATOR.compare(o1.key, o2.key);\n\n      if (keyCompare != 0) {\n        return keyCompare;\n      }\n\n      // if same weight and title, use the payload if there is one\n      if (o1.payload != null) {\n        return o1.payload.compareTo(o2.payload);\n      }\n\n      return 0;\n    }\n\n","sourceOld":"    @Override\n    public int compare(Lookup.LookupResult o1, Lookup.LookupResult o2) {\n      // order on weight\n      if (o1.value > o2.value) {\n        return 1;\n      } else if (o1.value < o2.value) {\n        return -1;\n      }\n\n      // otherwise on alphabetic order\n      return CHARSEQUENCE_COMPARATOR.compare(o1.key, o2.key);\n    }\n\n","bugFix":["f13ec1b606a28789743a563929e7c556e8218297"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1b164dc1ecd988c4c93605661c68bb7a47742bca":["f13ec1b606a28789743a563929e7c556e8218297"],"f13ec1b606a28789743a563929e7c556e8218297":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2ec6c19dff256627e4b5aabbeb0ae45379f0cbb2":["1b164dc1ecd988c4c93605661c68bb7a47742bca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ec6c19dff256627e4b5aabbeb0ae45379f0cbb2"]},"commit2Childs":{"1b164dc1ecd988c4c93605661c68bb7a47742bca":["2ec6c19dff256627e4b5aabbeb0ae45379f0cbb2"],"f13ec1b606a28789743a563929e7c556e8218297":["1b164dc1ecd988c4c93605661c68bb7a47742bca"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f13ec1b606a28789743a563929e7c556e8218297"],"2ec6c19dff256627e4b5aabbeb0ae45379f0cbb2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}