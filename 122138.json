{"path":"lucene/core/src/java/org/apache/lucene/util/BroadWord#rank9(long).mjava","commits":[{"id":"0debe908d97b40345a206ca1671a9fd299833558","date":1373663120,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BroadWord#rank9(long).mjava","pathOld":"/dev/null","sourceNew":"  /** Bit count of a long.\n   * Only here to compare the implementation with {@link #select9(long,int)},\n   * normally {@link Long#bitCount} is preferable.\n   * @return The total number of 1 bits in x.\n   */\n  static int rank9(long x) {\n    // Step 0 leaves in each pair of bits the number of ones originally contained in that pair:\n    x = x - ((x & 0xAAAAAAAAAAAAAAAAL) >>> 1);\n    // Step 1, idem for each nibble:\n    x = (x & 0x3333333333333333L) + ((x >>> 2) & 0x3333333333333333L);\n    // Step 2, idem for each byte:\n    x = (x + (x >>> 4)) & 0x0F0F0F0F0F0F0F0FL;\n    // Multiply to sum them all into the high byte, and return the high byte:\n    return (int) ((x * L8_L) >>> 56);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BroadWord#rank9(long).mjava","pathOld":"/dev/null","sourceNew":"  /** Bit count of a long.\n   * Only here to compare the implementation with {@link #select9(long,int)},\n   * normally {@link Long#bitCount} is preferable.\n   * @return The total number of 1 bits in x.\n   */\n  static int rank9(long x) {\n    // Step 0 leaves in each pair of bits the number of ones originally contained in that pair:\n    x = x - ((x & 0xAAAAAAAAAAAAAAAAL) >>> 1);\n    // Step 1, idem for each nibble:\n    x = (x & 0x3333333333333333L) + ((x >>> 2) & 0x3333333333333333L);\n    // Step 2, idem for each byte:\n    x = (x + (x >>> 4)) & 0x0F0F0F0F0F0F0F0FL;\n    // Multiply to sum them all into the high byte, and return the high byte:\n    return (int) ((x * L8_L) >>> 56);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"423470dff9e19aa0db92590e282e2ca12e34d65a","date":1381851051,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BroadWord#bitCount(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BroadWord#rank9(long).mjava","sourceNew":"  /** Bit count of a long.\n   * Only here to compare the implementation with {@link #select(long,int)},\n   * normally {@link Long#bitCount} is preferable.\n   * @return The total number of 1 bits in x.\n   */\n  static int bitCount(long x) {\n    // Step 0 leaves in each pair of bits the number of ones originally contained in that pair:\n    x = x - ((x & 0xAAAAAAAAAAAAAAAAL) >>> 1);\n    // Step 1, idem for each nibble:\n    x = (x & 0x3333333333333333L) + ((x >>> 2) & 0x3333333333333333L);\n    // Step 2, idem for each byte:\n    x = (x + (x >>> 4)) & 0x0F0F0F0F0F0F0F0FL;\n    // Multiply to sum them all into the high byte, and return the high byte:\n    return (int) ((x * L8_L) >>> 56);\n  }\n\n","sourceOld":"  /** Bit count of a long.\n   * Only here to compare the implementation with {@link #select9(long,int)},\n   * normally {@link Long#bitCount} is preferable.\n   * @return The total number of 1 bits in x.\n   */\n  static int rank9(long x) {\n    // Step 0 leaves in each pair of bits the number of ones originally contained in that pair:\n    x = x - ((x & 0xAAAAAAAAAAAAAAAAL) >>> 1);\n    // Step 1, idem for each nibble:\n    x = (x & 0x3333333333333333L) + ((x >>> 2) & 0x3333333333333333L);\n    // Step 2, idem for each byte:\n    x = (x + (x >>> 4)) & 0x0F0F0F0F0F0F0F0FL;\n    // Multiply to sum them all into the high byte, and return the high byte:\n    return (int) ((x * L8_L) >>> 56);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0debe908d97b40345a206ca1671a9fd299833558"],"423470dff9e19aa0db92590e282e2ca12e34d65a":["0debe908d97b40345a206ca1671a9fd299833558"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["423470dff9e19aa0db92590e282e2ca12e34d65a"],"0debe908d97b40345a206ca1671a9fd299833558":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"423470dff9e19aa0db92590e282e2ca12e34d65a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","0debe908d97b40345a206ca1671a9fd299833558"],"0debe908d97b40345a206ca1671a9fd299833558":["37a0f60745e53927c4c876cfe5b5a58170f0646c","423470dff9e19aa0db92590e282e2ca12e34d65a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}