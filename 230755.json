{"path":"lucene/core/src/test/org/apache/lucene/util/TestArrayUtil#testEmptyArraySort().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestArrayUtil#testEmptyArraySort().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/TestArrayUtil#testEmptyArraySort().mjava","sourceNew":"  // should produce no exceptions\n  public void testEmptyArraySort() {\n    Integer[] a = new Integer[0];\n    ArrayUtil.quickSort(a);\n    ArrayUtil.mergeSort(a);\n    ArrayUtil.insertionSort(a);\n    ArrayUtil.quickSort(a, Collections.reverseOrder());\n    ArrayUtil.mergeSort(a, Collections.reverseOrder());\n    ArrayUtil.insertionSort(a, Collections.reverseOrder());\n  }\n\n","sourceOld":"  // should produce no exceptions\n  public void testEmptyArraySort() {\n    Integer[] a = new Integer[0];\n    ArrayUtil.quickSort(a);\n    ArrayUtil.mergeSort(a);\n    ArrayUtil.insertionSort(a);\n    ArrayUtil.quickSort(a, Collections.reverseOrder());\n    ArrayUtil.mergeSort(a, Collections.reverseOrder());\n    ArrayUtil.insertionSort(a, Collections.reverseOrder());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d666f5b596b5ce43296739e9453ff761c7ddde3f","date":1363451610,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestArrayUtil#testEmptyArraySort().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestArrayUtil#testEmptyArraySort().mjava","sourceNew":"  // should produce no exceptions\n  public void testEmptyArraySort() {\n    Integer[] a = new Integer[0];\n    ArrayUtil.quickSort(a);\n    ArrayUtil.mergeSort(a);\n    ArrayUtil.insertionSort(a);\n    ArrayUtil.binarySort(a);\n    ArrayUtil.timSort(a);\n    ArrayUtil.quickSort(a, Collections.reverseOrder());\n    ArrayUtil.mergeSort(a, Collections.reverseOrder());\n    ArrayUtil.timSort(a, Collections.reverseOrder());\n    ArrayUtil.insertionSort(a, Collections.reverseOrder());\n    ArrayUtil.binarySort(a, Collections.reverseOrder());\n  }\n\n","sourceOld":"  // should produce no exceptions\n  public void testEmptyArraySort() {\n    Integer[] a = new Integer[0];\n    ArrayUtil.quickSort(a);\n    ArrayUtil.mergeSort(a);\n    ArrayUtil.insertionSort(a);\n    ArrayUtil.quickSort(a, Collections.reverseOrder());\n    ArrayUtil.mergeSort(a, Collections.reverseOrder());\n    ArrayUtil.insertionSort(a, Collections.reverseOrder());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dcc555744b1a581a4beccd0b75f8d3fe49735a2f","date":1367588265,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestArrayUtil#testEmptyArraySort().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestArrayUtil#testEmptyArraySort().mjava","sourceNew":"  // should produce no exceptions\n  public void testEmptyArraySort() {\n    Integer[] a = new Integer[0];\n    ArrayUtil.introSort(a);\n    ArrayUtil.timSort(a);\n    ArrayUtil.introSort(a, Collections.reverseOrder());\n    ArrayUtil.timSort(a, Collections.reverseOrder());\n  }\n\n","sourceOld":"  // should produce no exceptions\n  public void testEmptyArraySort() {\n    Integer[] a = new Integer[0];\n    ArrayUtil.quickSort(a);\n    ArrayUtil.mergeSort(a);\n    ArrayUtil.insertionSort(a);\n    ArrayUtil.binarySort(a);\n    ArrayUtil.timSort(a);\n    ArrayUtil.quickSort(a, Collections.reverseOrder());\n    ArrayUtil.mergeSort(a, Collections.reverseOrder());\n    ArrayUtil.timSort(a, Collections.reverseOrder());\n    ArrayUtil.insertionSort(a, Collections.reverseOrder());\n    ArrayUtil.binarySort(a, Collections.reverseOrder());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d666f5b596b5ce43296739e9453ff761c7ddde3f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dcc555744b1a581a4beccd0b75f8d3fe49735a2f":["d666f5b596b5ce43296739e9453ff761c7ddde3f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dcc555744b1a581a4beccd0b75f8d3fe49735a2f"]},"commit2Childs":{"d666f5b596b5ce43296739e9453ff761c7ddde3f":["dcc555744b1a581a4beccd0b75f8d3fe49735a2f"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d666f5b596b5ce43296739e9453ff761c7ddde3f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"dcc555744b1a581a4beccd0b75f8d3fe49735a2f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}