{"path":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilder#createFieldFragList(FieldPhraseList,int).mjava","commits":[{"id":"36f91bf9cfc9d0c3155edab43359e7670ea8a5af","date":1269580873,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilder#createFieldFragList(FieldPhraseList,int).mjava","pathOld":"lucene/contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilder#createFieldFragList(FieldPhraseList,int).mjava","sourceNew":"  public FieldFragList createFieldFragList(FieldPhraseList fieldPhraseList, int fragCharSize) {\n    if( fragCharSize < MIN_FRAG_CHAR_SIZE )\n      throw new IllegalArgumentException( \"fragCharSize(\" + fragCharSize + \") is too small. It must be \" +\n          MIN_FRAG_CHAR_SIZE + \" or higher.\" );\n\n    FieldFragList ffl = new FieldFragList( fragCharSize );\n\n    List<WeightedPhraseInfo> wpil = new ArrayList<WeightedPhraseInfo>();\n    Iterator<WeightedPhraseInfo> ite = fieldPhraseList.phraseList.iterator();\n    WeightedPhraseInfo phraseInfo = null;\n    int startOffset = 0;\n    boolean taken = false;\n    while( true ){\n      if( !taken ){\n        if( !ite.hasNext() ) break;\n        phraseInfo = ite.next();\n      }\n      taken = false;\n      if( phraseInfo == null ) break;\n\n      // if the phrase violates the border of previous fragment, discard it and try next phrase\n      if( phraseInfo.getStartOffset() < startOffset ) continue;\n\n      wpil.clear();\n      wpil.add( phraseInfo );\n      int st = phraseInfo.getStartOffset() - MARGIN < startOffset ?\n          startOffset : phraseInfo.getStartOffset() - MARGIN;\n      int en = st + fragCharSize;\n      if( phraseInfo.getEndOffset() > en )\n        en = phraseInfo.getEndOffset();\n      startOffset = en;\n\n      while( true ){\n        if( ite.hasNext() ){\n          phraseInfo = ite.next();\n          taken = true;\n          if( phraseInfo == null ) break;\n        }\n        else\n          break;\n        if( phraseInfo.getEndOffset() <= en )\n          wpil.add( phraseInfo );\n        else\n          break;\n      }\n      ffl.add( st, en, wpil );\n    }\n    return ffl;\n  }\n\n","sourceOld":"  public FieldFragList createFieldFragList(FieldPhraseList fieldPhraseList, int fragCharSize) {\n    if( fragCharSize < MIN_FRAG_CHAR_SIZE )\n      throw new IllegalArgumentException( \"fragCharSize(\" + fragCharSize + \") is too small. It must be \" +\n          MIN_FRAG_CHAR_SIZE + \" or higher.\" );\n\n    FieldFragList ffl = new FieldFragList( fragCharSize );\n\n    List<WeightedPhraseInfo> wpil = new ArrayList<WeightedPhraseInfo>();\n    Iterator<WeightedPhraseInfo> ite = fieldPhraseList.phraseList.iterator();\n    WeightedPhraseInfo phraseInfo = null;\n    int startOffset = 0;\n    boolean taken = false;\n    while( true ){\n      if( !taken ){\n        if( !ite.hasNext() ) break;\n        phraseInfo = ite.next();\n      }\n      taken = false;\n      if( phraseInfo == null ) break;\n\n      // if the phrase violates the border of previous fragment, discard it and try next phrase\n      if( phraseInfo.getStartOffset() < startOffset ) continue;\n\n      wpil.clear();\n      wpil.add( phraseInfo );\n      int st = phraseInfo.getStartOffset() - MARGIN < startOffset ?\n          startOffset : phraseInfo.getStartOffset() - MARGIN;\n      int en = st + fragCharSize;\n      if( phraseInfo.getEndOffset() > en )\n        en = phraseInfo.getEndOffset();\n      startOffset = en;\n\n      while( true ){\n        if( ite.hasNext() ){\n          phraseInfo = ite.next();\n          taken = true;\n          if( phraseInfo == null ) break;\n        }\n        else\n          break;\n        if( phraseInfo.getEndOffset() <= en )\n          wpil.add( phraseInfo );\n        else\n          break;\n      }\n      ffl.add( st, en, wpil );\n    }\n    return ffl;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85d0acb3b55835ac0beceb830e95f243418a97f4","date":1318736734,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilder#createFieldFragList(FieldPhraseList,int).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilder#createFieldFragList(FieldPhraseList,int).mjava","sourceNew":"  public FieldFragList createFieldFragList(FieldPhraseList fieldPhraseList, int fragCharSize) {\n    if( fragCharSize < minFragCharSize )\n      throw new IllegalArgumentException( \"fragCharSize(\" + fragCharSize + \") is too small. It must be \" +\n          minFragCharSize + \" or higher.\" );\n\n    FieldFragList ffl = new FieldFragList( fragCharSize );\n\n    List<WeightedPhraseInfo> wpil = new ArrayList<WeightedPhraseInfo>();\n    Iterator<WeightedPhraseInfo> ite = fieldPhraseList.phraseList.iterator();\n    WeightedPhraseInfo phraseInfo = null;\n    int startOffset = 0;\n    boolean taken = false;\n    while( true ){\n      if( !taken ){\n        if( !ite.hasNext() ) break;\n        phraseInfo = ite.next();\n      }\n      taken = false;\n      if( phraseInfo == null ) break;\n\n      // if the phrase violates the border of previous fragment, discard it and try next phrase\n      if( phraseInfo.getStartOffset() < startOffset ) continue;\n\n      wpil.clear();\n      wpil.add( phraseInfo );\n      int st = phraseInfo.getStartOffset() - margin < startOffset ?\n          startOffset : phraseInfo.getStartOffset() - margin;\n      int en = st + fragCharSize;\n      if( phraseInfo.getEndOffset() > en )\n        en = phraseInfo.getEndOffset();\n      startOffset = en;\n\n      while( true ){\n        if( ite.hasNext() ){\n          phraseInfo = ite.next();\n          taken = true;\n          if( phraseInfo == null ) break;\n        }\n        else\n          break;\n        if( phraseInfo.getEndOffset() <= en )\n          wpil.add( phraseInfo );\n        else\n          break;\n      }\n      ffl.add( st, en, wpil );\n    }\n    return ffl;\n  }\n\n","sourceOld":"  public FieldFragList createFieldFragList(FieldPhraseList fieldPhraseList, int fragCharSize) {\n    if( fragCharSize < MIN_FRAG_CHAR_SIZE )\n      throw new IllegalArgumentException( \"fragCharSize(\" + fragCharSize + \") is too small. It must be \" +\n          MIN_FRAG_CHAR_SIZE + \" or higher.\" );\n\n    FieldFragList ffl = new FieldFragList( fragCharSize );\n\n    List<WeightedPhraseInfo> wpil = new ArrayList<WeightedPhraseInfo>();\n    Iterator<WeightedPhraseInfo> ite = fieldPhraseList.phraseList.iterator();\n    WeightedPhraseInfo phraseInfo = null;\n    int startOffset = 0;\n    boolean taken = false;\n    while( true ){\n      if( !taken ){\n        if( !ite.hasNext() ) break;\n        phraseInfo = ite.next();\n      }\n      taken = false;\n      if( phraseInfo == null ) break;\n\n      // if the phrase violates the border of previous fragment, discard it and try next phrase\n      if( phraseInfo.getStartOffset() < startOffset ) continue;\n\n      wpil.clear();\n      wpil.add( phraseInfo );\n      int st = phraseInfo.getStartOffset() - MARGIN < startOffset ?\n          startOffset : phraseInfo.getStartOffset() - MARGIN;\n      int en = st + fragCharSize;\n      if( phraseInfo.getEndOffset() > en )\n        en = phraseInfo.getEndOffset();\n      startOffset = en;\n\n      while( true ){\n        if( ite.hasNext() ){\n          phraseInfo = ite.next();\n          taken = true;\n          if( phraseInfo == null ) break;\n        }\n        else\n          break;\n        if( phraseInfo.getEndOffset() <= en )\n          wpil.add( phraseInfo );\n        else\n          break;\n      }\n      ffl.add( st, en, wpil );\n    }\n    return ffl;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilder#createFieldFragList(FieldPhraseList,int).mjava","pathOld":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/vectorhighlight/SimpleFragListBuilder#createFieldFragList(FieldPhraseList,int).mjava","sourceNew":"  public FieldFragList createFieldFragList(FieldPhraseList fieldPhraseList, int fragCharSize) {\n    if( fragCharSize < minFragCharSize )\n      throw new IllegalArgumentException( \"fragCharSize(\" + fragCharSize + \") is too small. It must be \" +\n          minFragCharSize + \" or higher.\" );\n\n    FieldFragList ffl = new FieldFragList( fragCharSize );\n\n    List<WeightedPhraseInfo> wpil = new ArrayList<WeightedPhraseInfo>();\n    Iterator<WeightedPhraseInfo> ite = fieldPhraseList.phraseList.iterator();\n    WeightedPhraseInfo phraseInfo = null;\n    int startOffset = 0;\n    boolean taken = false;\n    while( true ){\n      if( !taken ){\n        if( !ite.hasNext() ) break;\n        phraseInfo = ite.next();\n      }\n      taken = false;\n      if( phraseInfo == null ) break;\n\n      // if the phrase violates the border of previous fragment, discard it and try next phrase\n      if( phraseInfo.getStartOffset() < startOffset ) continue;\n\n      wpil.clear();\n      wpil.add( phraseInfo );\n      int st = phraseInfo.getStartOffset() - margin < startOffset ?\n          startOffset : phraseInfo.getStartOffset() - margin;\n      int en = st + fragCharSize;\n      if( phraseInfo.getEndOffset() > en )\n        en = phraseInfo.getEndOffset();\n      startOffset = en;\n\n      while( true ){\n        if( ite.hasNext() ){\n          phraseInfo = ite.next();\n          taken = true;\n          if( phraseInfo == null ) break;\n        }\n        else\n          break;\n        if( phraseInfo.getEndOffset() <= en )\n          wpil.add( phraseInfo );\n        else\n          break;\n      }\n      ffl.add( st, en, wpil );\n    }\n    return ffl;\n  }\n\n","sourceOld":"  public FieldFragList createFieldFragList(FieldPhraseList fieldPhraseList, int fragCharSize) {\n    if( fragCharSize < minFragCharSize )\n      throw new IllegalArgumentException( \"fragCharSize(\" + fragCharSize + \") is too small. It must be \" +\n          minFragCharSize + \" or higher.\" );\n\n    FieldFragList ffl = new FieldFragList( fragCharSize );\n\n    List<WeightedPhraseInfo> wpil = new ArrayList<WeightedPhraseInfo>();\n    Iterator<WeightedPhraseInfo> ite = fieldPhraseList.phraseList.iterator();\n    WeightedPhraseInfo phraseInfo = null;\n    int startOffset = 0;\n    boolean taken = false;\n    while( true ){\n      if( !taken ){\n        if( !ite.hasNext() ) break;\n        phraseInfo = ite.next();\n      }\n      taken = false;\n      if( phraseInfo == null ) break;\n\n      // if the phrase violates the border of previous fragment, discard it and try next phrase\n      if( phraseInfo.getStartOffset() < startOffset ) continue;\n\n      wpil.clear();\n      wpil.add( phraseInfo );\n      int st = phraseInfo.getStartOffset() - margin < startOffset ?\n          startOffset : phraseInfo.getStartOffset() - margin;\n      int en = st + fragCharSize;\n      if( phraseInfo.getEndOffset() > en )\n        en = phraseInfo.getEndOffset();\n      startOffset = en;\n\n      while( true ){\n        if( ite.hasNext() ){\n          phraseInfo = ite.next();\n          taken = true;\n          if( phraseInfo == null ) break;\n        }\n        else\n          break;\n        if( phraseInfo.getEndOffset() <= en )\n          wpil.add( phraseInfo );\n        else\n          break;\n      }\n      ffl.add( st, en, wpil );\n    }\n    return ffl;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["85d0acb3b55835ac0beceb830e95f243418a97f4"],"85d0acb3b55835ac0beceb830e95f243418a97f4":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"85d0acb3b55835ac0beceb830e95f243418a97f4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"36f91bf9cfc9d0c3155edab43359e7670ea8a5af":["85d0acb3b55835ac0beceb830e95f243418a97f4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["36f91bf9cfc9d0c3155edab43359e7670ea8a5af"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}