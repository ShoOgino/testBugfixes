{"path":"lucene/core/src/test/org/apache/lucene/codecs/intblock/TestIntBlockCodec#testSimpleIntBlocks().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/intblock/TestIntBlockCodec#testSimpleIntBlocks().mjava","pathOld":"lucene/src/test/org/apache/lucene/codecs/intblock/TestIntBlockCodec#testSimpleIntBlocks().mjava","sourceNew":"  public void testSimpleIntBlocks() throws Exception {\n    Directory dir = newDirectory();\n\n    IntStreamFactory f = new MockFixedIntBlockPostingsFormat(128).getIntFactory();\n\n    IntIndexOutput out = f.createOutput(dir, \"test\", newIOContext(random));\n    for(int i=0;i<11777;i++) {\n      out.write(i);\n    }\n    out.close();\n\n    IntIndexInput in = f.openInput(dir, \"test\", newIOContext(random));\n    IntIndexInput.Reader r = in.reader();\n\n    for(int i=0;i<11777;i++) {\n      assertEquals(i, r.next());\n    }\n    in.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testSimpleIntBlocks() throws Exception {\n    Directory dir = newDirectory();\n\n    IntStreamFactory f = new MockFixedIntBlockPostingsFormat(128).getIntFactory();\n\n    IntIndexOutput out = f.createOutput(dir, \"test\", newIOContext(random));\n    for(int i=0;i<11777;i++) {\n      out.write(i);\n    }\n    out.close();\n\n    IntIndexInput in = f.openInput(dir, \"test\", newIOContext(random));\n    IntIndexInput.Reader r = in.reader();\n\n    for(int i=0;i<11777;i++) {\n      assertEquals(i, r.next());\n    }\n    in.close();\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/intblock/TestIntBlockCodec#testSimpleIntBlocks().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/intblock/TestIntBlockCodec#testSimpleIntBlocks().mjava","sourceNew":"  public void testSimpleIntBlocks() throws Exception {\n    Directory dir = newDirectory();\n\n    IntStreamFactory f = new MockFixedIntBlockPostingsFormat(128).getIntFactory();\n\n    IntIndexOutput out = f.createOutput(dir, \"test\", newIOContext(random()));\n    for(int i=0;i<11777;i++) {\n      out.write(i);\n    }\n    out.close();\n\n    IntIndexInput in = f.openInput(dir, \"test\", newIOContext(random()));\n    IntIndexInput.Reader r = in.reader();\n\n    for(int i=0;i<11777;i++) {\n      assertEquals(i, r.next());\n    }\n    in.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testSimpleIntBlocks() throws Exception {\n    Directory dir = newDirectory();\n\n    IntStreamFactory f = new MockFixedIntBlockPostingsFormat(128).getIntFactory();\n\n    IntIndexOutput out = f.createOutput(dir, \"test\", newIOContext(random));\n    for(int i=0;i<11777;i++) {\n      out.write(i);\n    }\n    out.close();\n\n    IntIndexInput in = f.openInput(dir, \"test\", newIOContext(random));\n    IntIndexInput.Reader r = in.reader();\n\n    for(int i=0;i<11777;i++) {\n      assertEquals(i, r.next());\n    }\n    in.close();\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/test/org/apache/lucene/codecs/intblock/TestIntBlockCodec#testSimpleIntBlocks().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/intblock/TestIntBlockCodec#testSimpleIntBlocks().mjava","sourceNew":"  public void testSimpleIntBlocks() throws Exception {\n    Directory dir = newDirectory();\n\n    IntStreamFactory f = new MockFixedIntBlockPostingsFormat(128).getIntFactory();\n\n    IntIndexOutput out = f.createOutput(dir, \"test\", newIOContext(random()));\n    for(int i=0;i<11777;i++) {\n      out.write(i);\n    }\n    out.close();\n\n    IntIndexInput in = f.openInput(dir, \"test\", newIOContext(random()));\n    IntIndexInput.Reader r = in.reader();\n\n    for(int i=0;i<11777;i++) {\n      assertEquals(i, r.next());\n    }\n    in.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  public void testSimpleIntBlocks() throws Exception {\n    Directory dir = newDirectory();\n\n    IntStreamFactory f = new MockFixedIntBlockPostingsFormat(128).getIntFactory();\n\n    IntIndexOutput out = f.createOutput(dir, \"test\", newIOContext(random()));\n    for(int i=0;i<11777;i++) {\n      out.write(i);\n    }\n    out.close();\n\n    IntIndexInput in = f.openInput(dir, \"test\", newIOContext(random()));\n    IntIndexInput.Reader r = in.reader();\n\n    for(int i=0;i<11777;i++) {\n      assertEquals(i, r.next());\n    }\n    in.close();\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"]},"commit2Childs":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}