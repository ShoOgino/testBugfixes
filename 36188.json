{"path":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessorFactory#canCreateTombstoneDocument(IndexSchema).mjava","commits":[{"id":"667eea18b7ca87af38d05d81d479f943a717a6b1","date":1548452298,"type":0,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessorFactory#canCreateTombstoneDocument(IndexSchema).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Validates that the schema would allow tombstones to be created by DocBasedVersionConstraintsProcessor by\n   * checking if the required fields are of known types\n   */\n  protected boolean canCreateTombstoneDocument(IndexSchema schema) {\n    Set<String> requiredFieldNames = schema.getRequiredFields().stream()\n        .filter(field -> field.getDefaultValue() == null)\n        .map(field -> field.getName())\n        .collect(Collectors.toSet());\n    if (tombstoneConfig != null) {\n      tombstoneConfig.forEach((k,v) -> requiredFieldNames.remove(k));\n    }\n    requiredFieldNames.remove(schema.getUniqueKeyField().getName());\n    if (versionFields != null) {\n      versionFields.forEach(field -> requiredFieldNames.remove(field));\n    }\n    if (!requiredFieldNames.isEmpty()) {\n      log.warn(\"The schema \\\"{}\\\" has required fields that aren't added in the tombstone.\"\n          + \" This can cause deletes to fail if those aren't being added in some other way. Required Fields={}\",\n          schema.getSchemaName(),\n          requiredFieldNames);\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"740d649f013f07efbeb73ca854f106c60166e7c0","date":1587431295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessorFactory#canCreateTombstoneDocument(IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessorFactory#canCreateTombstoneDocument(IndexSchema).mjava","sourceNew":"  /**\n   * Validates that the schema would allow tombstones to be created by DocBasedVersionConstraintsProcessor by\n   * checking if the required fields are of known types\n   */\n  protected boolean canCreateTombstoneDocument(IndexSchema schema) {\n    Set<String> requiredFieldNames = schema.getRequiredFields().stream()\n        .filter(field -> field.getDefaultValue() == null)\n        .map(field -> field.getName())\n        .collect(Collectors.toSet());\n    if (tombstoneConfig != null) {\n      tombstoneConfig.forEach((k,v) -> requiredFieldNames.remove(k));\n    }\n    requiredFieldNames.remove(schema.getUniqueKeyField().getName());\n    if (versionFields != null) {\n      versionFields.forEach(field -> requiredFieldNames.remove(field));\n    }\n    if (!requiredFieldNames.isEmpty()) {\n      if (log.isWarnEnabled()) {\n        log.warn(\"The schema '{}' has required fields that aren't added in the tombstone.\"\n                + \" This can cause deletes to fail if those aren't being added in some other way. Required Fields={}\",\n            schema.getSchemaName(),\n            requiredFieldNames);\n      }\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Validates that the schema would allow tombstones to be created by DocBasedVersionConstraintsProcessor by\n   * checking if the required fields are of known types\n   */\n  protected boolean canCreateTombstoneDocument(IndexSchema schema) {\n    Set<String> requiredFieldNames = schema.getRequiredFields().stream()\n        .filter(field -> field.getDefaultValue() == null)\n        .map(field -> field.getName())\n        .collect(Collectors.toSet());\n    if (tombstoneConfig != null) {\n      tombstoneConfig.forEach((k,v) -> requiredFieldNames.remove(k));\n    }\n    requiredFieldNames.remove(schema.getUniqueKeyField().getName());\n    if (versionFields != null) {\n      versionFields.forEach(field -> requiredFieldNames.remove(field));\n    }\n    if (!requiredFieldNames.isEmpty()) {\n      log.warn(\"The schema \\\"{}\\\" has required fields that aren't added in the tombstone.\"\n          + \" This can cause deletes to fail if those aren't being added in some other way. Required Fields={}\",\n          schema.getSchemaName(),\n          requiredFieldNames);\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"575e66bd4b2349209027f6801184da7fc3cba13f","date":1587609169,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessorFactory#canCreateTombstoneDocument(IndexSchema).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/DocBasedVersionConstraintsProcessorFactory#canCreateTombstoneDocument(IndexSchema).mjava","sourceNew":"  /**\n   * Validates that the schema would allow tombstones to be created by DocBasedVersionConstraintsProcessor by\n   * checking if the required fields are of known types\n   */\n  protected boolean canCreateTombstoneDocument(IndexSchema schema) {\n    Set<String> requiredFieldNames = schema.getRequiredFields().stream()\n        .filter(field -> field.getDefaultValue() == null)\n        .map(field -> field.getName())\n        .collect(Collectors.toSet());\n    if (tombstoneConfig != null) {\n      tombstoneConfig.forEach((k,v) -> requiredFieldNames.remove(k));\n    }\n    requiredFieldNames.remove(schema.getUniqueKeyField().getName());\n    if (versionFields != null) {\n      versionFields.forEach(field -> requiredFieldNames.remove(field));\n    }\n    if (!requiredFieldNames.isEmpty()) {\n      log.warn(\"The schema '{}' has required fields that aren't added in the tombstone.  This can cause deletes to fail if those aren't being added in some other way. Required Fields={}\",\n          schema.getSchemaName(),\n          requiredFieldNames);\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Validates that the schema would allow tombstones to be created by DocBasedVersionConstraintsProcessor by\n   * checking if the required fields are of known types\n   */\n  protected boolean canCreateTombstoneDocument(IndexSchema schema) {\n    Set<String> requiredFieldNames = schema.getRequiredFields().stream()\n        .filter(field -> field.getDefaultValue() == null)\n        .map(field -> field.getName())\n        .collect(Collectors.toSet());\n    if (tombstoneConfig != null) {\n      tombstoneConfig.forEach((k,v) -> requiredFieldNames.remove(k));\n    }\n    requiredFieldNames.remove(schema.getUniqueKeyField().getName());\n    if (versionFields != null) {\n      versionFields.forEach(field -> requiredFieldNames.remove(field));\n    }\n    if (!requiredFieldNames.isEmpty()) {\n      if (log.isWarnEnabled()) {\n        log.warn(\"The schema '{}' has required fields that aren't added in the tombstone.\"\n                + \" This can cause deletes to fail if those aren't being added in some other way. Required Fields={}\",\n            schema.getSchemaName(),\n            requiredFieldNames);\n      }\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"740d649f013f07efbeb73ca854f106c60166e7c0":["667eea18b7ca87af38d05d81d479f943a717a6b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"575e66bd4b2349209027f6801184da7fc3cba13f":["740d649f013f07efbeb73ca854f106c60166e7c0"],"667eea18b7ca87af38d05d81d479f943a717a6b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["575e66bd4b2349209027f6801184da7fc3cba13f"]},"commit2Childs":{"740d649f013f07efbeb73ca854f106c60166e7c0":["575e66bd4b2349209027f6801184da7fc3cba13f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["667eea18b7ca87af38d05d81d479f943a717a6b1"],"667eea18b7ca87af38d05d81d479f943a717a6b1":["740d649f013f07efbeb73ca854f106c60166e7c0"],"575e66bd4b2349209027f6801184da7fc3cba13f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}