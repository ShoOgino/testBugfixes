{"path":"src/java/org/apache/solr/spelling/SpellingResult#get(Token).mjava","commits":[{"id":"84b6c001c19319635b53dd80ee9fc1ba9a5b4574","date":1213883214,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/spelling/SpellingResult#get(Token).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Get the suggestions for the given token\n   *\n   * @param token The {@link org.apache.lucene.analysis.Token} to look up\n   * @return A LinkedHashMap of the suggestions.  Key is the suggestion, value is the token frequency in the index, else {@link #NO_FREQUENCY_INFO}.\n   *\n   * The suggestions are added in sorted order (i.e. best suggestion first) then the iterator will return the suggestions in order\n   */\n  public LinkedHashMap<String, Integer> get(Token token) {\n    return suggestions.get(token);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00fc15ea1c4eed67f5d090c697cc57ede49f70a8","date":1218745675,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/solr/spelling/SpellingResult#get(Token).mjava","pathOld":"src/java/org/apache/solr/spelling/SpellingResult#get(Token).mjava","sourceNew":"  /**\n   * Gets the suggestions for the given token.\n   *\n   * @param token The {@link org.apache.lucene.analysis.Token} to look up\n   * @return A LinkedHashMap of the suggestions.  Key is the suggestion, value is the token frequency in the index, else {@link #NO_FREQUENCY_INFO}.\n   *\n   * The suggestions are added in sorted order (i.e. best suggestion first) then the iterator will return the suggestions in order\n   */\n  public LinkedHashMap<String, Integer> get(Token token) {\n    return suggestions.get(token);\n  }\n\n","sourceOld":"  /**\n   * Get the suggestions for the given token\n   *\n   * @param token The {@link org.apache.lucene.analysis.Token} to look up\n   * @return A LinkedHashMap of the suggestions.  Key is the suggestion, value is the token frequency in the index, else {@link #NO_FREQUENCY_INFO}.\n   *\n   * The suggestions are added in sorted order (i.e. best suggestion first) then the iterator will return the suggestions in order\n   */\n  public LinkedHashMap<String, Integer> get(Token token) {\n    return suggestions.get(token);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/spelling/SpellingResult#get(Token).mjava","pathOld":"src/java/org/apache/solr/spelling/SpellingResult#get(Token).mjava","sourceNew":"  /**\n   * Gets the suggestions for the given token.\n   *\n   * @param token The {@link org.apache.lucene.analysis.Token} to look up\n   * @return A LinkedHashMap of the suggestions.  Key is the suggestion, value is the token frequency in the index, else {@link #NO_FREQUENCY_INFO}.\n   *\n   * The suggestions are added in sorted order (i.e. best suggestion first) then the iterator will return the suggestions in order\n   */\n  public LinkedHashMap<String, Integer> get(Token token) {\n    return suggestions.get(token);\n  }\n\n","sourceOld":"  /**\n   * Gets the suggestions for the given token.\n   *\n   * @param token The {@link org.apache.lucene.analysis.Token} to look up\n   * @return A LinkedHashMap of the suggestions.  Key is the suggestion, value is the token frequency in the index, else {@link #NO_FREQUENCY_INFO}.\n   *\n   * The suggestions are added in sorted order (i.e. best suggestion first) then the iterator will return the suggestions in order\n   */\n  public LinkedHashMap<String, Integer> get(Token token) {\n    return suggestions.get(token);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"84b6c001c19319635b53dd80ee9fc1ba9a5b4574":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["00fc15ea1c4eed67f5d090c697cc57ede49f70a8"],"00fc15ea1c4eed67f5d090c697cc57ede49f70a8":["84b6c001c19319635b53dd80ee9fc1ba9a5b4574"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"84b6c001c19319635b53dd80ee9fc1ba9a5b4574":["00fc15ea1c4eed67f5d090c697cc57ede49f70a8"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["84b6c001c19319635b53dd80ee9fc1ba9a5b4574"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"00fc15ea1c4eed67f5d090c697cc57ede49f70a8":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}