{"path":"lucene/test-framework/src/java/org/apache/lucene/util/CloseableFile#close().mjava","commits":[{"id":"5da0b42730b6b99b31389ef94cb97384e83b9ede","date":1337107665,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/CloseableFile#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n    if (file.exists()) {\n      try {\n        _TestUtil.rmDir(file);\n      } catch (IOException e) {\n        // Ignore the exception from rmDir.\n      }\n\n      // Re-check.\n      if (file.exists()) {\n        throw new IOException(\n            \"Could not remove: \" + file.getAbsolutePath());\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"765293980c33173623f760deb48458d0f47dc8c3","date":1345119992,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/CloseableFile#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/CloseableFile#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // only if there were no other test failures.\n    if (failureMarker.wasSuccessful()) {\n      if (file.exists()) {\n        try {\n          _TestUtil.rmDir(file);\n        } catch (IOException e) {\n          // Ignore the exception from rmDir.\n        }\n\n        // Re-check.\n        if (file.exists()) {\n          throw new IOException(\n            \"Could not remove: \" + file.getAbsolutePath());\n        }\n    }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (file.exists()) {\n      try {\n        _TestUtil.rmDir(file);\n      } catch (IOException e) {\n        // Ignore the exception from rmDir.\n      }\n\n      // Re-check.\n      if (file.exists()) {\n        throw new IOException(\n            \"Could not remove: \" + file.getAbsolutePath());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70fa1c0f4d75735ff2e1485e059d9bc5efa50598","date":1345296911,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/CloseableFile#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/CloseableFile#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // only if there were no other test failures.\n    if (failureMarker.wasSuccessful()) {\n      if (file.exists()) {\n        try {\n          _TestUtil.rmDir(file);\n        } catch (IOException e) {\n          // Ignore the exception from rmDir.\n        }\n\n        // Re-check.\n        if (file.exists()) {\n          throw new IOException(\n            \"Could not remove: \" + file.getAbsolutePath());\n        }\n    }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (file.exists()) {\n      try {\n        _TestUtil.rmDir(file);\n      } catch (IOException e) {\n        // Ignore the exception from rmDir.\n      }\n\n      // Re-check.\n      if (file.exists()) {\n        throw new IOException(\n            \"Could not remove: \" + file.getAbsolutePath());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"616c1830142ff5c1ddedec1ed898733b73c8e23b","date":1345368925,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/CloseableFile#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/CloseableFile#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // only if there were no other test failures.\n    if (failureMarker.wasSuccessful()) {\n      if (file.exists()) {\n        try {\n          _TestUtil.rmDir(file);\n        } catch (IOException e) {\n          // Ignore the exception from rmDir.\n        }\n\n        // Re-check.\n        if (file.exists()) {\n          throw new IOException(\n            \"Could not remove: \" + file.getAbsolutePath());\n        }\n    }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    if (file.exists()) {\n      try {\n        _TestUtil.rmDir(file);\n      } catch (IOException e) {\n        // Ignore the exception from rmDir.\n      }\n\n      // Re-check.\n      if (file.exists()) {\n        throw new IOException(\n            \"Could not remove: \" + file.getAbsolutePath());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/CloseableFile#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/CloseableFile#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // only if there were no other test failures.\n    if (failureMarker.wasSuccessful()) {\n      if (file.exists()) {\n        try {\n          TestUtil.rmDir(file);\n        } catch (IOException e) {\n          // Ignore the exception from rmDir.\n        }\n\n        // Re-check.\n        if (file.exists()) {\n          throw new IOException(\n            \"Could not remove: \" + file.getAbsolutePath());\n        }\n    }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    // only if there were no other test failures.\n    if (failureMarker.wasSuccessful()) {\n      if (file.exists()) {\n        try {\n          _TestUtil.rmDir(file);\n        } catch (IOException e) {\n          // Ignore the exception from rmDir.\n        }\n\n        // Re-check.\n        if (file.exists()) {\n          throw new IOException(\n            \"Could not remove: \" + file.getAbsolutePath());\n        }\n    }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/CloseableFile#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/CloseableFile#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // only if there were no other test failures.\n    if (failureMarker.wasSuccessful()) {\n      if (file.exists()) {\n        if (file.listFiles().length > 0) {\n          // throw new IOException(\"Temporary folder not clean: \" + file.getAbsolutePath() + \". Created at stack trace:\\n\" + creationStack); \n        }\n\n        try {\n          TestUtil.rmDir(file);\n        } catch (IOException e) {\n          // Ignore the exception from rmDir.\n        }\n\n        // Re-check.\n        if (file.exists()) {\n          throw new IOException(\n            \"Could not remove temporary folder: \" + file.getAbsolutePath() + \". Created at stack trace:\\n\" + creationStack);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    // only if there were no other test failures.\n    if (failureMarker.wasSuccessful()) {\n      if (file.exists()) {\n        try {\n          TestUtil.rmDir(file);\n        } catch (IOException e) {\n          // Ignore the exception from rmDir.\n        }\n\n        // Re-check.\n        if (file.exists()) {\n          throw new IOException(\n            \"Could not remove: \" + file.getAbsolutePath());\n        }\n    }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be04a7534a8a0679382542b62556ea5fba6cfb7f","date":1396613089,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/RemoveUponClose#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/CloseableFile#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // only if there were no other test failures.\n    if (failureMarker.wasSuccessful()) {\n      if (file.exists()) {\n        try {\n          TestUtil.rm(file);\n        } catch (IOException e) {\n          throw new IOException(\n              \"Could not remove temporary location '\" \n                  + file.getAbsolutePath() + \"', created at stack trace:\\n\" + creationStack, e);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    // only if there were no other test failures.\n    if (failureMarker.wasSuccessful()) {\n      if (file.exists()) {\n        if (file.listFiles().length > 0) {\n          // throw new IOException(\"Temporary folder not clean: \" + file.getAbsolutePath() + \". Created at stack trace:\\n\" + creationStack); \n        }\n\n        try {\n          TestUtil.rmDir(file);\n        } catch (IOException e) {\n          // Ignore the exception from rmDir.\n        }\n\n        // Re-check.\n        if (file.exists()) {\n          throw new IOException(\n            \"Could not remove temporary folder: \" + file.getAbsolutePath() + \". Created at stack trace:\\n\" + creationStack);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["cbc3688252d4a8045d69a164236b2cf87b721f17","cbc3688252d4a8045d69a164236b2cf87b721f17"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":5,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/RemoveUponClose#close().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/CloseableFile#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    // only if there were no other test failures.\n    if (failureMarker.wasSuccessful()) {\n      if (file.exists()) {\n        try {\n          TestUtil.rm(file);\n        } catch (IOException e) {\n          throw new IOException(\n              \"Could not remove temporary location '\" \n                  + file.getAbsolutePath() + \"', created at stack trace:\\n\" + creationStack, e);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    // only if there were no other test failures.\n    if (failureMarker.wasSuccessful()) {\n      if (file.exists()) {\n        try {\n          TestUtil.rmDir(file);\n        } catch (IOException e) {\n          // Ignore the exception from rmDir.\n        }\n\n        // Re-check.\n        if (file.exists()) {\n          throw new IOException(\n            \"Could not remove: \" + file.getAbsolutePath());\n        }\n    }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"616c1830142ff5c1ddedec1ed898733b73c8e23b":["5da0b42730b6b99b31389ef94cb97384e83b9ede","765293980c33173623f760deb48458d0f47dc8c3"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["6613659748fe4411a7dcf85266e55db1f95f7315","be04a7534a8a0679382542b62556ea5fba6cfb7f"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6613659748fe4411a7dcf85266e55db1f95f7315":["765293980c33173623f760deb48458d0f47dc8c3"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":["5da0b42730b6b99b31389ef94cb97384e83b9ede","765293980c33173623f760deb48458d0f47dc8c3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"765293980c33173623f760deb48458d0f47dc8c3":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"d0d579490a72f2e6297eaa648940611234c57cf1":["6613659748fe4411a7dcf85266e55db1f95f7315"],"be04a7534a8a0679382542b62556ea5fba6cfb7f":["d0d579490a72f2e6297eaa648940611234c57cf1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"]},"commit2Childs":{"616c1830142ff5c1ddedec1ed898733b73c8e23b":[],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","765293980c33173623f760deb48458d0f47dc8c3"],"6613659748fe4411a7dcf85266e55db1f95f7315":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","d0d579490a72f2e6297eaa648940611234c57cf1"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"765293980c33173623f760deb48458d0f47dc8c3":["616c1830142ff5c1ddedec1ed898733b73c8e23b","6613659748fe4411a7dcf85266e55db1f95f7315","70fa1c0f4d75735ff2e1485e059d9bc5efa50598"],"d0d579490a72f2e6297eaa648940611234c57cf1":["be04a7534a8a0679382542b62556ea5fba6cfb7f"],"be04a7534a8a0679382542b62556ea5fba6cfb7f":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}