{"path":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/GeoPathTest#testPathBounds().mjava","commits":[{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/GeoPathTest#testPathBounds().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoPathTest#testPathBounds().mjava","sourceNew":"  @Test\n  public void testPathBounds() {\n    GeoPath c;\n    Bounds b;\n\n    c = new GeoPath(PlanetModel.SPHERE, 0.1);\n    c.addPoint(-0.3, -0.3);\n    c.addPoint(0.3, 0.3);\n    c.done();\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-0.4046919, b.getLeftLongitude(), 0.000001);\n    assertEquals(0.4046919, b.getRightLongitude(), 0.000001);\n    assertEquals(-0.3999999, b.getMinLatitude(), 0.000001);\n    assertEquals(0.3999999, b.getMaxLatitude(), 0.000001);\n\n  }\n\n","sourceOld":"  @Test\n  public void testPathBounds() {\n    GeoPath c;\n    Bounds b;\n\n    c = new GeoPath(PlanetModel.SPHERE, 0.1);\n    c.addPoint(-0.3, -0.3);\n    c.addPoint(0.3, 0.3);\n    c.done();\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-0.4046919, b.getLeftLongitude(), 0.000001);\n    assertEquals(0.4046919, b.getRightLongitude(), 0.000001);\n    assertEquals(-0.3999999, b.getMinLatitude(), 0.000001);\n    assertEquals(0.3999999, b.getMaxLatitude(), 0.000001);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f64b7098768253180859cd8faeae6b1a185b06ed","date":1441223971,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/GeoPathTest#testPathBounds().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/GeoPathTest#testPathBounds().mjava","sourceNew":"  @Test\n  public void testPathBounds() {\n    GeoPath c;\n    LatLonBounds b;\n    XYZBounds xyzb;\n    GeoPoint point;\n    int relationship;\n    GeoArea area;\n\n    c = new GeoPath(PlanetModel.WGS84, 0.6894050545377601);\n    c.addPoint(-0.0788176065762948, 0.9431251741731624);\n    c.addPoint(0.510387871458147, 0.5327078872484678);\n    c.addPoint(-0.5624521609859962, 1.5398841746888388);\n    c.addPoint(-0.5025171434638661, -0.5895998642788894);\n    c.done();\n    point = new GeoPoint(PlanetModel.WGS84, 0.023652082107211682, 0.023131910152748437);\n    //System.err.println(\"Point.x = \"+point.x+\"; point.y=\"+point.y+\"; point.z=\"+point.z);\n    assertTrue(c.isWithin(point));\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    area = GeoAreaFactory.makeGeoArea(PlanetModel.WGS84,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n    //System.err.println(\"minx=\"+xyzb.getMinimumX()+\" maxx=\"+xyzb.getMaximumX()+\" miny=\"+xyzb.getMinimumY()+\" maxy=\"+xyzb.getMaximumY()+\" minz=\"+xyzb.getMinimumZ()+\" maxz=\"+xyzb.getMaximumZ());\n    //System.err.println(\"point.x=\"+point.x+\" point.y=\"+point.y+\" point.z=\"+point.z);\n    relationship = area.getRelationship(c);\n    assertTrue(relationship == GeoArea.WITHIN || relationship == GeoArea.OVERLAPS);\n    assertTrue(area.isWithin(point));\n    \n    c = new GeoPath(PlanetModel.WGS84, 0.7766715171374766);\n    c.addPoint(-0.2751718361148076, -0.7786721269011477);\n    c.addPoint(0.5728375851539309, -1.2700115736820465);\n    c.done();\n    point = new GeoPoint(PlanetModel.WGS84, -0.01580760332365284, -0.03956004622490505);\n    assertTrue(c.isWithin(point));\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    area = GeoAreaFactory.makeGeoArea(PlanetModel.WGS84,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n    //System.err.println(\"minx=\"+xyzb.getMinimumX()+\" maxx=\"+xyzb.getMaximumX()+\" miny=\"+xyzb.getMinimumY()+\" maxy=\"+xyzb.getMaximumY()+\" minz=\"+xyzb.getMinimumZ()+\" maxz=\"+xyzb.getMaximumZ());\n    //System.err.println(\"point.x=\"+point.x+\" point.y=\"+point.y+\" point.z=\"+point.z);\n    relationship = area.getRelationship(c);\n    assertTrue(relationship == GeoArea.WITHIN || relationship == GeoArea.OVERLAPS);\n    assertTrue(area.isWithin(point));\n\n    c = new GeoPath(PlanetModel.SPHERE, 0.1);\n    c.addPoint(-0.3, -0.3);\n    c.addPoint(0.3, 0.3);\n    c.done();\n\n    b = new LatLonBounds();\n    c.getBounds(b);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-0.4046919, b.getLeftLongitude(), 0.000001);\n    assertEquals(0.4046919, b.getRightLongitude(), 0.000001);\n    assertEquals(-0.3999999, b.getMinLatitude(), 0.000001);\n    assertEquals(0.3999999, b.getMaxLatitude(), 0.000001);\n\n  }\n\n","sourceOld":"  @Test\n  public void testPathBounds() {\n    GeoPath c;\n    Bounds b;\n\n    c = new GeoPath(PlanetModel.SPHERE, 0.1);\n    c.addPoint(-0.3, -0.3);\n    c.addPoint(0.3, 0.3);\n    c.done();\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-0.4046919, b.getLeftLongitude(), 0.000001);\n    assertEquals(0.4046919, b.getRightLongitude(), 0.000001);\n    assertEquals(-0.3999999, b.getMinLatitude(), 0.000001);\n    assertEquals(0.3999999, b.getMaxLatitude(), 0.000001);\n\n  }\n\n","bugFix":null,"bugIntro":["d8f71af177fad4bbfdf462d318247e573faac27f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d8f71af177fad4bbfdf462d318247e573faac27f","date":1441729530,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/GeoPathTest#testPathBounds().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/GeoPathTest#testPathBounds().mjava","sourceNew":"  @Test\n  public void testPathBounds() {\n    GeoPath c;\n    LatLonBounds b;\n    XYZBounds xyzb;\n    GeoPoint point;\n    int relationship;\n    GeoArea area;\n    PlanetModel planetModel;\n    \n    planetModel = new PlanetModel(0.751521665790406,1.248478334209594);\n    c = new GeoPath(planetModel, 0.7504915783575618);\n    c.addPoint(0.10869761172400265, 0.08895880215465272);\n    c.addPoint(0.22467878641991612, 0.10972973084229565);\n    c.addPoint(-0.7398772468744732, -0.4465812941383364);\n    c.addPoint(-0.18462055300079366, -0.6713857796763727);\n    c.done();\n    point = new GeoPoint(planetModel,-0.626645355125733,-1.409304625439381);\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    area = GeoAreaFactory.makeGeoArea(planetModel,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n    relationship = area.getRelationship(c);\n    assertTrue(relationship == GeoArea.WITHIN || relationship == GeoArea.OVERLAPS);\n    assertTrue(area.isWithin(point));\n    // No longer true due to fixed GeoPath waypoints.\n    //assertTrue(c.isWithin(point));\n    \n    c = new GeoPath(PlanetModel.WGS84, 0.6894050545377601);\n    c.addPoint(-0.0788176065762948, 0.9431251741731624);\n    c.addPoint(0.510387871458147, 0.5327078872484678);\n    c.addPoint(-0.5624521609859962, 1.5398841746888388);\n    c.addPoint(-0.5025171434638661, -0.5895998642788894);\n    c.done();\n    point = new GeoPoint(PlanetModel.WGS84, 0.023652082107211682, 0.023131910152748437);\n    //System.err.println(\"Point.x = \"+point.x+\"; point.y=\"+point.y+\"; point.z=\"+point.z);\n    assertTrue(c.isWithin(point));\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    area = GeoAreaFactory.makeGeoArea(PlanetModel.WGS84,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n    //System.err.println(\"minx=\"+xyzb.getMinimumX()+\" maxx=\"+xyzb.getMaximumX()+\" miny=\"+xyzb.getMinimumY()+\" maxy=\"+xyzb.getMaximumY()+\" minz=\"+xyzb.getMinimumZ()+\" maxz=\"+xyzb.getMaximumZ());\n    //System.err.println(\"point.x=\"+point.x+\" point.y=\"+point.y+\" point.z=\"+point.z);\n    relationship = area.getRelationship(c);\n    assertTrue(relationship == GeoArea.WITHIN || relationship == GeoArea.OVERLAPS);\n    assertTrue(area.isWithin(point));\n    \n    c = new GeoPath(PlanetModel.WGS84, 0.7766715171374766);\n    c.addPoint(-0.2751718361148076, -0.7786721269011477);\n    c.addPoint(0.5728375851539309, -1.2700115736820465);\n    c.done();\n    point = new GeoPoint(PlanetModel.WGS84, -0.01580760332365284, -0.03956004622490505);\n    assertTrue(c.isWithin(point));\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    area = GeoAreaFactory.makeGeoArea(PlanetModel.WGS84,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n    //System.err.println(\"minx=\"+xyzb.getMinimumX()+\" maxx=\"+xyzb.getMaximumX()+\" miny=\"+xyzb.getMinimumY()+\" maxy=\"+xyzb.getMaximumY()+\" minz=\"+xyzb.getMinimumZ()+\" maxz=\"+xyzb.getMaximumZ());\n    //System.err.println(\"point.x=\"+point.x+\" point.y=\"+point.y+\" point.z=\"+point.z);\n    relationship = area.getRelationship(c);\n    assertTrue(relationship == GeoArea.WITHIN || relationship == GeoArea.OVERLAPS);\n    assertTrue(area.isWithin(point));\n\n    c = new GeoPath(PlanetModel.SPHERE, 0.1);\n    c.addPoint(-0.3, -0.3);\n    c.addPoint(0.3, 0.3);\n    c.done();\n\n    b = new LatLonBounds();\n    c.getBounds(b);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-0.4046919, b.getLeftLongitude(), 0.000001);\n    assertEquals(0.4046919, b.getRightLongitude(), 0.000001);\n    assertEquals(-0.3999999, b.getMinLatitude(), 0.000001);\n    assertEquals(0.3999999, b.getMaxLatitude(), 0.000001);\n\n  }\n\n","sourceOld":"  @Test\n  public void testPathBounds() {\n    GeoPath c;\n    LatLonBounds b;\n    XYZBounds xyzb;\n    GeoPoint point;\n    int relationship;\n    GeoArea area;\n\n    c = new GeoPath(PlanetModel.WGS84, 0.6894050545377601);\n    c.addPoint(-0.0788176065762948, 0.9431251741731624);\n    c.addPoint(0.510387871458147, 0.5327078872484678);\n    c.addPoint(-0.5624521609859962, 1.5398841746888388);\n    c.addPoint(-0.5025171434638661, -0.5895998642788894);\n    c.done();\n    point = new GeoPoint(PlanetModel.WGS84, 0.023652082107211682, 0.023131910152748437);\n    //System.err.println(\"Point.x = \"+point.x+\"; point.y=\"+point.y+\"; point.z=\"+point.z);\n    assertTrue(c.isWithin(point));\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    area = GeoAreaFactory.makeGeoArea(PlanetModel.WGS84,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n    //System.err.println(\"minx=\"+xyzb.getMinimumX()+\" maxx=\"+xyzb.getMaximumX()+\" miny=\"+xyzb.getMinimumY()+\" maxy=\"+xyzb.getMaximumY()+\" minz=\"+xyzb.getMinimumZ()+\" maxz=\"+xyzb.getMaximumZ());\n    //System.err.println(\"point.x=\"+point.x+\" point.y=\"+point.y+\" point.z=\"+point.z);\n    relationship = area.getRelationship(c);\n    assertTrue(relationship == GeoArea.WITHIN || relationship == GeoArea.OVERLAPS);\n    assertTrue(area.isWithin(point));\n    \n    c = new GeoPath(PlanetModel.WGS84, 0.7766715171374766);\n    c.addPoint(-0.2751718361148076, -0.7786721269011477);\n    c.addPoint(0.5728375851539309, -1.2700115736820465);\n    c.done();\n    point = new GeoPoint(PlanetModel.WGS84, -0.01580760332365284, -0.03956004622490505);\n    assertTrue(c.isWithin(point));\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    area = GeoAreaFactory.makeGeoArea(PlanetModel.WGS84,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n    //System.err.println(\"minx=\"+xyzb.getMinimumX()+\" maxx=\"+xyzb.getMaximumX()+\" miny=\"+xyzb.getMinimumY()+\" maxy=\"+xyzb.getMaximumY()+\" minz=\"+xyzb.getMinimumZ()+\" maxz=\"+xyzb.getMaximumZ());\n    //System.err.println(\"point.x=\"+point.x+\" point.y=\"+point.y+\" point.z=\"+point.z);\n    relationship = area.getRelationship(c);\n    assertTrue(relationship == GeoArea.WITHIN || relationship == GeoArea.OVERLAPS);\n    assertTrue(area.isWithin(point));\n\n    c = new GeoPath(PlanetModel.SPHERE, 0.1);\n    c.addPoint(-0.3, -0.3);\n    c.addPoint(0.3, 0.3);\n    c.done();\n\n    b = new LatLonBounds();\n    c.getBounds(b);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-0.4046919, b.getLeftLongitude(), 0.000001);\n    assertEquals(0.4046919, b.getRightLongitude(), 0.000001);\n    assertEquals(-0.3999999, b.getMinLatitude(), 0.000001);\n    assertEquals(0.3999999, b.getMaxLatitude(), 0.000001);\n\n  }\n\n","bugFix":["f64b7098768253180859cd8faeae6b1a185b06ed"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPathTest#testPathBounds().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/GeoPathTest#testPathBounds().mjava","sourceNew":"  @Test\n  public void testPathBounds() {\n    GeoPath c;\n    LatLonBounds b;\n    XYZBounds xyzb;\n    GeoPoint point;\n    int relationship;\n    GeoArea area;\n    PlanetModel planetModel;\n    \n    planetModel = new PlanetModel(0.751521665790406,1.248478334209594);\n    c = new GeoPath(planetModel, 0.7504915783575618);\n    c.addPoint(0.10869761172400265, 0.08895880215465272);\n    c.addPoint(0.22467878641991612, 0.10972973084229565);\n    c.addPoint(-0.7398772468744732, -0.4465812941383364);\n    c.addPoint(-0.18462055300079366, -0.6713857796763727);\n    c.done();\n    point = new GeoPoint(planetModel,-0.626645355125733,-1.409304625439381);\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    area = GeoAreaFactory.makeGeoArea(planetModel,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n    relationship = area.getRelationship(c);\n    assertTrue(relationship == GeoArea.WITHIN || relationship == GeoArea.OVERLAPS);\n    assertTrue(area.isWithin(point));\n    // No longer true due to fixed GeoPath waypoints.\n    //assertTrue(c.isWithin(point));\n    \n    c = new GeoPath(PlanetModel.WGS84, 0.6894050545377601);\n    c.addPoint(-0.0788176065762948, 0.9431251741731624);\n    c.addPoint(0.510387871458147, 0.5327078872484678);\n    c.addPoint(-0.5624521609859962, 1.5398841746888388);\n    c.addPoint(-0.5025171434638661, -0.5895998642788894);\n    c.done();\n    point = new GeoPoint(PlanetModel.WGS84, 0.023652082107211682, 0.023131910152748437);\n    //System.err.println(\"Point.x = \"+point.x+\"; point.y=\"+point.y+\"; point.z=\"+point.z);\n    assertTrue(c.isWithin(point));\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    area = GeoAreaFactory.makeGeoArea(PlanetModel.WGS84,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n    //System.err.println(\"minx=\"+xyzb.getMinimumX()+\" maxx=\"+xyzb.getMaximumX()+\" miny=\"+xyzb.getMinimumY()+\" maxy=\"+xyzb.getMaximumY()+\" minz=\"+xyzb.getMinimumZ()+\" maxz=\"+xyzb.getMaximumZ());\n    //System.err.println(\"point.x=\"+point.x+\" point.y=\"+point.y+\" point.z=\"+point.z);\n    relationship = area.getRelationship(c);\n    assertTrue(relationship == GeoArea.WITHIN || relationship == GeoArea.OVERLAPS);\n    assertTrue(area.isWithin(point));\n    \n    c = new GeoPath(PlanetModel.WGS84, 0.7766715171374766);\n    c.addPoint(-0.2751718361148076, -0.7786721269011477);\n    c.addPoint(0.5728375851539309, -1.2700115736820465);\n    c.done();\n    point = new GeoPoint(PlanetModel.WGS84, -0.01580760332365284, -0.03956004622490505);\n    assertTrue(c.isWithin(point));\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    area = GeoAreaFactory.makeGeoArea(PlanetModel.WGS84,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n    //System.err.println(\"minx=\"+xyzb.getMinimumX()+\" maxx=\"+xyzb.getMaximumX()+\" miny=\"+xyzb.getMinimumY()+\" maxy=\"+xyzb.getMaximumY()+\" minz=\"+xyzb.getMinimumZ()+\" maxz=\"+xyzb.getMaximumZ());\n    //System.err.println(\"point.x=\"+point.x+\" point.y=\"+point.y+\" point.z=\"+point.z);\n    relationship = area.getRelationship(c);\n    assertTrue(relationship == GeoArea.WITHIN || relationship == GeoArea.OVERLAPS);\n    assertTrue(area.isWithin(point));\n\n    c = new GeoPath(PlanetModel.SPHERE, 0.1);\n    c.addPoint(-0.3, -0.3);\n    c.addPoint(0.3, 0.3);\n    c.done();\n\n    b = new LatLonBounds();\n    c.getBounds(b);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-0.4046919, b.getLeftLongitude(), 0.000001);\n    assertEquals(0.4046919, b.getRightLongitude(), 0.000001);\n    assertEquals(-0.3999999, b.getMinLatitude(), 0.000001);\n    assertEquals(0.3999999, b.getMaxLatitude(), 0.000001);\n\n  }\n\n","sourceOld":"  @Test\n  public void testPathBounds() {\n    GeoPath c;\n    LatLonBounds b;\n    XYZBounds xyzb;\n    GeoPoint point;\n    int relationship;\n    GeoArea area;\n    PlanetModel planetModel;\n    \n    planetModel = new PlanetModel(0.751521665790406,1.248478334209594);\n    c = new GeoPath(planetModel, 0.7504915783575618);\n    c.addPoint(0.10869761172400265, 0.08895880215465272);\n    c.addPoint(0.22467878641991612, 0.10972973084229565);\n    c.addPoint(-0.7398772468744732, -0.4465812941383364);\n    c.addPoint(-0.18462055300079366, -0.6713857796763727);\n    c.done();\n    point = new GeoPoint(planetModel,-0.626645355125733,-1.409304625439381);\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    area = GeoAreaFactory.makeGeoArea(planetModel,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n    relationship = area.getRelationship(c);\n    assertTrue(relationship == GeoArea.WITHIN || relationship == GeoArea.OVERLAPS);\n    assertTrue(area.isWithin(point));\n    // No longer true due to fixed GeoPath waypoints.\n    //assertTrue(c.isWithin(point));\n    \n    c = new GeoPath(PlanetModel.WGS84, 0.6894050545377601);\n    c.addPoint(-0.0788176065762948, 0.9431251741731624);\n    c.addPoint(0.510387871458147, 0.5327078872484678);\n    c.addPoint(-0.5624521609859962, 1.5398841746888388);\n    c.addPoint(-0.5025171434638661, -0.5895998642788894);\n    c.done();\n    point = new GeoPoint(PlanetModel.WGS84, 0.023652082107211682, 0.023131910152748437);\n    //System.err.println(\"Point.x = \"+point.x+\"; point.y=\"+point.y+\"; point.z=\"+point.z);\n    assertTrue(c.isWithin(point));\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    area = GeoAreaFactory.makeGeoArea(PlanetModel.WGS84,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n    //System.err.println(\"minx=\"+xyzb.getMinimumX()+\" maxx=\"+xyzb.getMaximumX()+\" miny=\"+xyzb.getMinimumY()+\" maxy=\"+xyzb.getMaximumY()+\" minz=\"+xyzb.getMinimumZ()+\" maxz=\"+xyzb.getMaximumZ());\n    //System.err.println(\"point.x=\"+point.x+\" point.y=\"+point.y+\" point.z=\"+point.z);\n    relationship = area.getRelationship(c);\n    assertTrue(relationship == GeoArea.WITHIN || relationship == GeoArea.OVERLAPS);\n    assertTrue(area.isWithin(point));\n    \n    c = new GeoPath(PlanetModel.WGS84, 0.7766715171374766);\n    c.addPoint(-0.2751718361148076, -0.7786721269011477);\n    c.addPoint(0.5728375851539309, -1.2700115736820465);\n    c.done();\n    point = new GeoPoint(PlanetModel.WGS84, -0.01580760332365284, -0.03956004622490505);\n    assertTrue(c.isWithin(point));\n    xyzb = new XYZBounds();\n    c.getBounds(xyzb);\n    area = GeoAreaFactory.makeGeoArea(PlanetModel.WGS84,\n      xyzb.getMinimumX(), xyzb.getMaximumX(), xyzb.getMinimumY(), xyzb.getMaximumY(), xyzb.getMinimumZ(), xyzb.getMaximumZ());\n    //System.err.println(\"minx=\"+xyzb.getMinimumX()+\" maxx=\"+xyzb.getMaximumX()+\" miny=\"+xyzb.getMinimumY()+\" maxy=\"+xyzb.getMaximumY()+\" minz=\"+xyzb.getMinimumZ()+\" maxz=\"+xyzb.getMaximumZ());\n    //System.err.println(\"point.x=\"+point.x+\" point.y=\"+point.y+\" point.z=\"+point.z);\n    relationship = area.getRelationship(c);\n    assertTrue(relationship == GeoArea.WITHIN || relationship == GeoArea.OVERLAPS);\n    assertTrue(area.isWithin(point));\n\n    c = new GeoPath(PlanetModel.SPHERE, 0.1);\n    c.addPoint(-0.3, -0.3);\n    c.addPoint(0.3, 0.3);\n    c.done();\n\n    b = new LatLonBounds();\n    c.getBounds(b);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-0.4046919, b.getLeftLongitude(), 0.000001);\n    assertEquals(0.4046919, b.getRightLongitude(), 0.000001);\n    assertEquals(-0.3999999, b.getMinLatitude(), 0.000001);\n    assertEquals(0.3999999, b.getMaxLatitude(), 0.000001);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d8f71af177fad4bbfdf462d318247e573faac27f":["f64b7098768253180859cd8faeae6b1a185b06ed"],"f64b7098768253180859cd8faeae6b1a185b06ed":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3022be5842502b7c2a57a5124199bbc30236f0a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b4e444678504caf66a8060b1d514383aa4feac0c":["d8f71af177fad4bbfdf462d318247e573faac27f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b4e444678504caf66a8060b1d514383aa4feac0c"]},"commit2Childs":{"d8f71af177fad4bbfdf462d318247e573faac27f":["b4e444678504caf66a8060b1d514383aa4feac0c"],"f64b7098768253180859cd8faeae6b1a185b06ed":["d8f71af177fad4bbfdf462d318247e573faac27f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["f64b7098768253180859cd8faeae6b1a185b06ed"],"b4e444678504caf66a8060b1d514383aa4feac0c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}