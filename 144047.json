{"path":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#topDocsToMap(TopDocs).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#topDocsToMap(TopDocs).mjava","pathOld":"modules/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#topDocsToMap(TopDocs).mjava","sourceNew":"  // since custom scoring modifies the order of docs, map results \n  // by doc ids so that we can later compare/verify them \n  private Map<Integer,Float> topDocsToMap(TopDocs td) {\n    Map<Integer,Float> h = new HashMap<Integer,Float>();\n    for (int i=0; i<td.totalHits; i++) {\n      h.put(td.scoreDocs[i].doc, td.scoreDocs[i].score);\n    }\n    return h;\n  }\n\n","sourceOld":"  // since custom scoring modifies the order of docs, map results \n  // by doc ids so that we can later compare/verify them \n  private Map<Integer,Float> topDocsToMap(TopDocs td) {\n    Map<Integer,Float> h = new HashMap<Integer,Float>();\n    for (int i=0; i<td.totalHits; i++) {\n      h.put(td.scoreDocs[i].doc, td.scoreDocs[i].score);\n    }\n    return h;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#topDocsToMap(TopDocs).mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#topDocsToMap(TopDocs).mjava","sourceNew":"  // since custom scoring modifies the order of docs, map results \n  // by doc ids so that we can later compare/verify them \n  private Map<Integer,Float> topDocsToMap(TopDocs td) {\n    Map<Integer,Float> h = new HashMap<Integer,Float>();\n    for (int i=0; i<td.totalHits; i++) {\n      h.put(td.scoreDocs[i].doc, td.scoreDocs[i].score);\n    }\n    return h;\n  }\n\n","sourceOld":"  // since custom scoring modifies the order of docs, map results \n  // by doc ids so that we can later compare/verify them \n  private Map<Integer,Float> topDocsToMap(TopDocs td) {\n    Map<Integer,Float> h = new HashMap<Integer,Float>();\n    for (int i=0; i<td.totalHits; i++) {\n      h.put(td.scoreDocs[i].doc, td.scoreDocs[i].score);\n    }\n    return h;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#topDocsToMap(TopDocs).mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#topDocsToMap(TopDocs).mjava","sourceNew":"  // since custom scoring modifies the order of docs, map results \n  // by doc ids so that we can later compare/verify them \n  private Map<Integer,Float> topDocsToMap(TopDocs td) {\n    Map<Integer,Float> h = new HashMap<Integer,Float>();\n    for (int i=0; i<td.totalHits; i++) {\n      h.put(td.scoreDocs[i].doc, td.scoreDocs[i].score);\n    }\n    return h;\n  }\n\n","sourceOld":"  // since custom scoring modifies the order of docs, map results \n  // by doc ids so that we can later compare/verify them \n  private Map<Integer,Float> topDocsToMap(TopDocs td) {\n    Map<Integer,Float> h = new HashMap<Integer,Float>();\n    for (int i=0; i<td.totalHits; i++) {\n      h.put(td.scoreDocs[i].doc, td.scoreDocs[i].score);\n    }\n    return h;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#topDocsToMap(TopDocs).mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#topDocsToMap(TopDocs).mjava","sourceNew":"  // since custom scoring modifies the order of docs, map results \n  // by doc ids so that we can later compare/verify them \n  private Map<Integer,Float> topDocsToMap(TopDocs td) {\n    Map<Integer,Float> h = new HashMap<>();\n    for (int i=0; i<td.totalHits; i++) {\n      h.put(td.scoreDocs[i].doc, td.scoreDocs[i].score);\n    }\n    return h;\n  }\n\n","sourceOld":"  // since custom scoring modifies the order of docs, map results \n  // by doc ids so that we can later compare/verify them \n  private Map<Integer,Float> topDocsToMap(TopDocs td) {\n    Map<Integer,Float> h = new HashMap<Integer,Float>();\n    for (int i=0; i<td.totalHits; i++) {\n      h.put(td.scoreDocs[i].doc, td.scoreDocs[i].score);\n    }\n    return h;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a82662cae660e76ded4de1e9b451633e523d83e1","date":1513619223,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/TestCustomScoreQuery#topDocsToMap(TopDocs).mjava","sourceNew":null,"sourceOld":"  // since custom scoring modifies the order of docs, map results \n  // by doc ids so that we can later compare/verify them \n  private Map<Integer,Float> topDocsToMap(TopDocs td) {\n    Map<Integer,Float> h = new HashMap<>();\n    for (int i=0; i<td.totalHits; i++) {\n      h.put(td.scoreDocs[i].doc, td.scoreDocs[i].score);\n    }\n    return h;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a82662cae660e76ded4de1e9b451633e523d83e1":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a82662cae660e76ded4de1e9b451633e523d83e1"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["a82662cae660e76ded4de1e9b451633e523d83e1"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a82662cae660e76ded4de1e9b451633e523d83e1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}