{"path":"modules/analysis/stempel/src/java/org/egothor/stemmer/Row#getCellsPnt().mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/stempel/src/java/org/egothor/stemmer/Row#getCellsPnt().mjava","pathOld":"lucene/contrib/analyzers/stempel/src/java/org/egothor/stemmer/Row#getCellsPnt().mjava","sourceNew":"  /**\n   * Return the number of references (how many transitions) to other rows.\n   * \n   * @return the number of references\n   */\n  public int getCellsPnt() {\n    Iterator<Character> i = cells.keySet().iterator();\n    int size = 0;\n    for (; i.hasNext();) {\n      Character c = i.next();\n      Cell e = at(c);\n      if (e.ref >= 0) {\n        size++;\n      }\n    }\n    return size;\n  }\n\n","sourceOld":"  /**\n   * Return the number of references (how many transitions) to other rows.\n   * \n   * @return the number of references\n   */\n  public int getCellsPnt() {\n    Iterator<Character> i = cells.keySet().iterator();\n    int size = 0;\n    for (; i.hasNext();) {\n      Character c = i.next();\n      Cell e = at(c);\n      if (e.ref >= 0) {\n        size++;\n      }\n    }\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/stempel/src/java/org/egothor/stemmer/Row#getCellsPnt().mjava","pathOld":"modules/analysis/stempel/src/java/org/egothor/stemmer/Row#getCellsPnt().mjava","sourceNew":"  /**\n   * Return the number of references (how many transitions) to other rows.\n   * \n   * @return the number of references\n   */\n  public int getCellsPnt() {\n    Iterator<Character> i = cells.keySet().iterator();\n    int size = 0;\n    for (; i.hasNext();) {\n      Character c = i.next();\n      Cell e = at(c);\n      if (e.ref >= 0) {\n        size++;\n      }\n    }\n    return size;\n  }\n\n","sourceOld":"  /**\n   * Return the number of references (how many transitions) to other rows.\n   * \n   * @return the number of references\n   */\n  public int getCellsPnt() {\n    Iterator<Character> i = cells.keySet().iterator();\n    int size = 0;\n    for (; i.hasNext();) {\n      Character c = i.next();\n      Cell e = at(c);\n      if (e.ref >= 0) {\n        size++;\n      }\n    }\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}