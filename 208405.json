{"path":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#initializeMetrics(SolrMetricManager,String,String,String).mjava","commits":[{"id":"bfc52860e6d13d034226a760813c59d984c6817a","date":1522229027,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope) {\n    this.metricTag = tag;\n    String expandedScope = SolrMetricManager.mkName(scope, SolrInfoBean.Category.QUERY.name());\n    clientConnectionManager.initializeMetrics(manager, registry, tag, expandedScope);\n    httpRequestExecutor.initializeMetrics(manager, registry, tag, expandedScope);\n    commExecutor = MetricUtils.instrumentedExecutorService(commExecutor, null,\n        manager.registry(registry),\n        SolrMetricManager.mkName(\"httpShardExecutor\", expandedScope, \"threadPool\"));\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n    String expandedScope = SolrMetricManager.mkName(scope, SolrInfoBean.Category.QUERY.name());\n    clientConnectionManager.initializeMetrics(manager, registry, expandedScope);\n    httpRequestExecutor.initializeMetrics(manager, registry, expandedScope);\n    commExecutor = MetricUtils.instrumentedExecutorService(commExecutor, null,\n        manager.registry(registry),\n        SolrMetricManager.mkName(\"httpShardExecutor\", expandedScope, \"threadPool\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43564cbb30b064675027cfb569564e8531096e97","date":1522334265,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#initializeMetrics(SolrMetricManager,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope) {\n    this.metricTag = tag;\n    String expandedScope = SolrMetricManager.mkName(scope, SolrInfoBean.Category.QUERY.name());\n    clientConnectionManager.initializeMetrics(manager, registry, tag, expandedScope);\n    httpRequestExecutor.initializeMetrics(manager, registry, tag, expandedScope);\n    commExecutor = MetricUtils.instrumentedExecutorService(commExecutor, null,\n        manager.registry(registry),\n        SolrMetricManager.mkName(\"httpShardExecutor\", expandedScope, \"threadPool\"));\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String scope) {\n    String expandedScope = SolrMetricManager.mkName(scope, SolrInfoBean.Category.QUERY.name());\n    clientConnectionManager.initializeMetrics(manager, registry, expandedScope);\n    httpRequestExecutor.initializeMetrics(manager, registry, expandedScope);\n    commExecutor = MetricUtils.instrumentedExecutorService(commExecutor, null,\n        manager.registry(registry),\n        SolrMetricManager.mkName(\"httpShardExecutor\", expandedScope, \"threadPool\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a77e5e21cbd575a8240b0e3926164f15295f4e8","date":1544979500,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#initializeMetrics(SolrMetricManager,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#initializeMetrics(SolrMetricManager,String,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope) {\n    String expandedScope = SolrMetricManager.mkName(scope, SolrInfoBean.Category.QUERY.name());\n    httpListenerFactory.initializeMetrics(manager, registry, tag, expandedScope);\n    commExecutor = MetricUtils.instrumentedExecutorService(commExecutor, null,\n        manager.registry(registry),\n        SolrMetricManager.mkName(\"httpShardExecutor\", expandedScope, \"threadPool\"));\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope) {\n    this.metricTag = tag;\n    String expandedScope = SolrMetricManager.mkName(scope, SolrInfoBean.Category.QUERY.name());\n    clientConnectionManager.initializeMetrics(manager, registry, tag, expandedScope);\n    httpRequestExecutor.initializeMetrics(manager, registry, tag, expandedScope);\n    commExecutor = MetricUtils.instrumentedExecutorService(commExecutor, null,\n        manager.registry(registry),\n        SolrMetricManager.mkName(\"httpShardExecutor\", expandedScope, \"threadPool\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e9e5eaf280a6aa21423126b8232aa157a9b7366","date":1571772228,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#initializeMetrics(SolrMetricsContext,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory#initializeMetrics(SolrMetricManager,String,String,String).mjava","sourceNew":"  @Override\n  public void initializeMetrics(SolrMetricsContext parentContext, String scope) {\n    solrMetricsContext = parentContext.getChildContext(this);\n    String expandedScope = SolrMetricManager.mkName(scope, SolrInfoBean.Category.QUERY.name());\n    httpListenerFactory.initializeMetrics(solrMetricsContext, expandedScope);\n    commExecutor = MetricUtils.instrumentedExecutorService(commExecutor, null,\n        solrMetricsContext.getMetricRegistry(),\n        SolrMetricManager.mkName(\"httpShardExecutor\", expandedScope, \"threadPool\"));\n  }\n\n","sourceOld":"  @Override\n  public void initializeMetrics(SolrMetricManager manager, String registry, String tag, String scope) {\n    String expandedScope = SolrMetricManager.mkName(scope, SolrInfoBean.Category.QUERY.name());\n    httpListenerFactory.initializeMetrics(manager, registry, tag, expandedScope);\n    commExecutor = MetricUtils.instrumentedExecutorService(commExecutor, null,\n        manager.registry(registry),\n        SolrMetricManager.mkName(\"httpShardExecutor\", expandedScope, \"threadPool\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["43564cbb30b064675027cfb569564e8531096e97"],"bfc52860e6d13d034226a760813c59d984c6817a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"43564cbb30b064675027cfb569564e8531096e97":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bfc52860e6d13d034226a760813c59d984c6817a"],"2e9e5eaf280a6aa21423126b8232aa157a9b7366":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2e9e5eaf280a6aa21423126b8232aa157a9b7366"]},"commit2Childs":{"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["2e9e5eaf280a6aa21423126b8232aa157a9b7366"],"bfc52860e6d13d034226a760813c59d984c6817a":["43564cbb30b064675027cfb569564e8531096e97"],"43564cbb30b064675027cfb569564e8531096e97":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"2e9e5eaf280a6aa21423126b8232aa157a9b7366":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bfc52860e6d13d034226a760813c59d984c6817a","43564cbb30b064675027cfb569564e8531096e97"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}