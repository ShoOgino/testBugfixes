{"path":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenizer#reset(Reader).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenizer#reset(Reader).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/analysis/MockTokenizer#reset(Reader).mjava","sourceNew":"  @Override\n  public void reset(Reader input) throws IOException {\n    super.reset(input);\n    assert !enableChecks || streamState == State.CLOSE : \"setReader() called in wrong state: \" + streamState;\n    streamState = State.SETREADER;\n  }\n\n","sourceOld":"  @Override\n  public void reset(Reader input) throws IOException {\n    super.reset(input);\n    assert !enableChecks || streamState == State.CLOSE : \"setReader() called in wrong state: \" + streamState;\n    streamState = State.SETREADER;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b893541afcaa76dcbac2fcd24bbfa05ca6b41129","date":1342450620,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenizer#setReader(Reader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenizer#reset(Reader).mjava","sourceNew":"  @Override\n  public void setReader(Reader input) throws IOException {\n    super.setReader(input);\n    assert !enableChecks || streamState == State.CLOSE : \"setReader() called in wrong state: \" + streamState;\n    streamState = State.SETREADER;\n  }\n\n","sourceOld":"  @Override\n  public void reset(Reader input) throws IOException {\n    super.reset(input);\n    assert !enableChecks || streamState == State.CLOSE : \"setReader() called in wrong state: \" + streamState;\n    streamState = State.SETREADER;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenizer#reset(Reader).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void reset(Reader input) throws IOException {\n    super.reset(input);\n    assert !enableChecks || streamState == State.CLOSE : \"setReader() called in wrong state: \" + streamState;\n    streamState = State.SETREADER;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/analysis/MockTokenizer#reset(Reader).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void reset(Reader input) throws IOException {\n    super.reset(input);\n    assert !enableChecks || streamState == State.CLOSE : \"setReader() called in wrong state: \" + streamState;\n    streamState = State.SETREADER;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b893541afcaa76dcbac2fcd24bbfa05ca6b41129":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"aba371508186796cc6151d8223a5b4e16d02e26e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","b893541afcaa76dcbac2fcd24bbfa05ca6b41129"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","b893541afcaa76dcbac2fcd24bbfa05ca6b41129"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b893541afcaa76dcbac2fcd24bbfa05ca6b41129"]},"commit2Childs":{"b893541afcaa76dcbac2fcd24bbfa05ca6b41129":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b893541afcaa76dcbac2fcd24bbfa05ca6b41129","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}