{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#getContentWriter(String).mjava","commits":[{"id":"33138637f13378b80c31543ed4d8c44c00269c1d","date":1509606571,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#getContentWriter(String).mjava","pathOld":"/dev/null","sourceNew":"  public RequestWriter.ContentWriter getContentWriter(String expectedType) {\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0b2a87a0a56ee3348c1c40d20544efd1583fb24f","date":1510039612,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#getContentWriter(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#getContentWriter(String).mjava","sourceNew":"  /**\n   * If a request object wants to do a push write, implement this method.\n   *\n   * @param expectedType This is the type that the RequestWriter would like to get. But, it is OK to send any format\n   */\n  public RequestWriter.ContentWriter getContentWriter(String expectedType) {\n    return null;\n  }\n\n","sourceOld":"  public RequestWriter.ContentWriter getContentWriter(String expectedType) {\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d523b8189b211dd1630166aa77b8c88bb48b3fcc","date":1510144168,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#getContentWriter(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrRequest#getContentWriter(String).mjava","sourceNew":"  /**\n   * If a request object wants to do a push write, implement this method.\n   *\n   * @param expectedType This is the type that the RequestWriter would like to get. But, it is OK to send any format\n   */\n  public RequestWriter.ContentWriter getContentWriter(String expectedType) {\n    return null;\n  }\n\n","sourceOld":"  public RequestWriter.ContentWriter getContentWriter(String expectedType) {\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["33138637f13378b80c31543ed4d8c44c00269c1d","0b2a87a0a56ee3348c1c40d20544efd1583fb24f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0b2a87a0a56ee3348c1c40d20544efd1583fb24f":["33138637f13378b80c31543ed4d8c44c00269c1d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"33138637f13378b80c31543ed4d8c44c00269c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["33138637f13378b80c31543ed4d8c44c00269c1d"],"0b2a87a0a56ee3348c1c40d20544efd1583fb24f":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"33138637f13378b80c31543ed4d8c44c00269c1d":["d523b8189b211dd1630166aa77b8c88bb48b3fcc","0b2a87a0a56ee3348c1c40d20544efd1583fb24f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}