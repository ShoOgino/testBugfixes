{"path":"lucene/src/test/org/apache/lucene/util/TestSentinelIntSet#test().mjava","commits":[{"id":"1d0561cea94adff1867218e77bb763c7583be279","date":1324334341,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/TestSentinelIntSet#test().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void test() throws Exception {\n    SentinelIntSet set = new SentinelIntSet(10, -1);\n    assertFalse(set.exists(50));\n    set.put(50);\n    assertTrue(set.exists(50));\n    assertEquals(1, set.size());\n    assertEquals(-11, set.find(10));\n    assertEquals(1, set.size());\n    set.clear();\n    assertEquals(0, set.size());\n    assertEquals(50, set.hash(50));\n    //force a rehash\n    for (int i = 0; i < 20; i++){\n      set.put(i);\n    }\n    assertEquals(20, set.size());\n    assertEquals(24, set.rehashCount);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestSentinelIntSet#test().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/TestSentinelIntSet#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    SentinelIntSet set = new SentinelIntSet(10, -1);\n    assertFalse(set.exists(50));\n    set.put(50);\n    assertTrue(set.exists(50));\n    assertEquals(1, set.size());\n    assertEquals(-11, set.find(10));\n    assertEquals(1, set.size());\n    set.clear();\n    assertEquals(0, set.size());\n    assertEquals(50, set.hash(50));\n    //force a rehash\n    for (int i = 0; i < 20; i++){\n      set.put(i);\n    }\n    assertEquals(20, set.size());\n    assertEquals(24, set.rehashCount);\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    SentinelIntSet set = new SentinelIntSet(10, -1);\n    assertFalse(set.exists(50));\n    set.put(50);\n    assertTrue(set.exists(50));\n    assertEquals(1, set.size());\n    assertEquals(-11, set.find(10));\n    assertEquals(1, set.size());\n    set.clear();\n    assertEquals(0, set.size());\n    assertEquals(50, set.hash(50));\n    //force a rehash\n    for (int i = 0; i < 20; i++){\n      set.put(i);\n    }\n    assertEquals(20, set.size());\n    assertEquals(24, set.rehashCount);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1d0561cea94adff1867218e77bb763c7583be279"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1d0561cea94adff1867218e77bb763c7583be279":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d0561cea94adff1867218e77bb763c7583be279"],"1d0561cea94adff1867218e77bb763c7583be279":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}