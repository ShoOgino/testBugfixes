{"path":"lucene/monitor/src/java/org/apache/lucene/monitor/MultipassTermFilteredPresearcher#buildQueryDocument(QueryTree).mjava","commits":[{"id":"7c529b189e09de25455d82ebd7260748cf11ee14","date":1560415257,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/monitor/src/java/org/apache/lucene/monitor/MultipassTermFilteredPresearcher#buildQueryDocument(QueryTree).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Document buildQueryDocument(QueryTree querytree) {\n\n    Document doc = new Document();\n\n    for (int i = 0; i < passes; i++) {\n      Map<String, BytesRefHash> fieldTerms = collectTerms(querytree);\n      for (Map.Entry<String, BytesRefHash> entry : fieldTerms.entrySet()) {\n        // we add the index terms once under a suffixed field for the multipass query, and\n        // once under the plan field name for the TermsEnumTokenFilter\n        doc.add(new Field(field(entry.getKey(), i),\n            new TermsEnumTokenStream(new BytesRefHashIterator(entry.getValue())), QUERYFIELDTYPE));\n        doc.add(new Field(entry.getKey(),\n            new TermsEnumTokenStream(new BytesRefHashIterator(entry.getValue())), QUERYFIELDTYPE));\n      }\n      querytree.advancePhase(minWeight);\n    }\n\n    return doc;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c529b189e09de25455d82ebd7260748cf11ee14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c529b189e09de25455d82ebd7260748cf11ee14"]},"commit2Childs":{"7c529b189e09de25455d82ebd7260748cf11ee14":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c529b189e09de25455d82ebd7260748cf11ee14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}