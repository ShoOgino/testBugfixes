{"path":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#fileToStringArr(String).mjava","commits":[{"id":"ff403346522eaa9de75403763e297e83a3ea585c","date":1384904731,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#fileToStringArr(String).mjava","pathOld":"/dev/null","sourceNew":"  public static String[] fileToStringArr(String fileName) throws FileNotFoundException {\n    Scanner file = new Scanner(new File(ExternalPaths.SOURCE_HOME, fileName), \"UTF-8\");\n    ArrayList<String> strList = new ArrayList<String>();\n    while (file.hasNextLine()) {\n      String line = file.nextLine();\n      if (line.length()<2) {\n        continue;\n      }\n      String[] param = line.split(\"=\");\n      strList.add(param[0]);\n      strList.add(param[1]);\n    }\n    return strList.toArray(new String[0]);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b035f2b3f6fe0e60179e9f949a11950ad532cde","date":1385472320,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#fileToStringArr(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#fileToStringArr(String).mjava","sourceNew":"  public static String[] fileToStringArr(String fileName) throws FileNotFoundException {\n    Scanner file = new Scanner(new File(ExternalPaths.SOURCE_HOME, fileName), \"UTF-8\");\n    ArrayList<String> strList = new ArrayList<String>();\n    while (file.hasNextLine()) {\n      String line = file.nextLine();\n      if (line.length() < 2) {\n        continue;\n      }\n      String[] param = line.split(\"=\");\n      strList.add(param[0]);\n      strList.add(param[1]);\n    }\n    return strList.toArray(new String[0]);\n  }\n\n","sourceOld":"  public static String[] fileToStringArr(String fileName) throws FileNotFoundException {\n    Scanner file = new Scanner(new File(ExternalPaths.SOURCE_HOME, fileName), \"UTF-8\");\n    ArrayList<String> strList = new ArrayList<String>();\n    while (file.hasNextLine()) {\n      String line = file.nextLine();\n      if (line.length()<2) {\n        continue;\n      }\n      String[] param = line.split(\"=\");\n      strList.add(param[0]);\n      strList.add(param[1]);\n    }\n    return strList.toArray(new String[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#fileToStringArr(String).mjava","pathOld":"/dev/null","sourceNew":"  public static String[] fileToStringArr(String fileName) throws FileNotFoundException {\n    Scanner file = new Scanner(new File(ExternalPaths.SOURCE_HOME, fileName), \"UTF-8\");\n    ArrayList<String> strList = new ArrayList<String>();\n    while (file.hasNextLine()) {\n      String line = file.nextLine();\n      if (line.length() < 2) {\n        continue;\n      }\n      String[] param = line.split(\"=\");\n      strList.add(param[0]);\n      strList.add(param[1]);\n    }\n    return strList.toArray(new String[0]);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a475a1c165e02515bff766b3b7be0c42edf1870c","date":1393099333,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/analytics/expression/ExpressionTest#fileToStringArr(String).mjava","sourceNew":null,"sourceOld":"  public static String[] fileToStringArr(String fileName) throws FileNotFoundException {\n    Scanner file = new Scanner(new File(ExternalPaths.SOURCE_HOME, fileName), \"UTF-8\");\n    ArrayList<String> strList = new ArrayList<String>();\n    while (file.hasNextLine()) {\n      String line = file.nextLine();\n      if (line.length() < 2) {\n        continue;\n      }\n      String[] param = line.split(\"=\");\n      strList.add(param[0]);\n      strList.add(param[1]);\n    }\n    return strList.toArray(new String[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8b035f2b3f6fe0e60179e9f949a11950ad532cde":["ff403346522eaa9de75403763e297e83a3ea585c"],"a475a1c165e02515bff766b3b7be0c42edf1870c":["8b035f2b3f6fe0e60179e9f949a11950ad532cde"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8b035f2b3f6fe0e60179e9f949a11950ad532cde"],"ff403346522eaa9de75403763e297e83a3ea585c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a475a1c165e02515bff766b3b7be0c42edf1870c"]},"commit2Childs":{"8b035f2b3f6fe0e60179e9f949a11950ad532cde":["a475a1c165e02515bff766b3b7be0c42edf1870c","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"a475a1c165e02515bff766b3b7be0c42edf1870c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","ff403346522eaa9de75403763e297e83a3ea585c"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"ff403346522eaa9de75403763e297e83a3ea585c":["8b035f2b3f6fe0e60179e9f949a11950ad532cde"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}