{"path":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testBasic().mjava","commits":[{"id":"28ac5cee8abf30398e12bc016a5ce9d441831a63","date":1384691298,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testBasic().mjava","pathOld":"/dev/null","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\");\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), taxoWriter, config);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleDrillSideways ds = new SimpleDrillSideways(searcher, config, taxoReader);\n\n    // Simple case: drill-down on a single field; in this\n    // case the drill-sideways + drill-down counts ==\n    // drill-down of just the query: \n    SimpleDrillDownQuery ddq = new SimpleDrillDownQuery();\n    ddq.add(new FacetLabel(\"Author\", \"Lisa\"));\n    SimpleDrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Same simple case, but no baseQuery (pure browse):\n    // drill-down on a single field; in this case the\n    // drill-sideways + drill-down counts == drill-down of\n    // just the query:\n    ddq = new SimpleDrillDownQuery();\n    ddq.add(new FacetLabel(\"Author\", \"Lisa\"));\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Another simple case: drill-down on on single fields\n    // but OR of two values\n    ddq = new SimpleDrillDownQuery();\n    ddq.add(new FacetLabel(\"Author\", \"Lisa\"), new FacetLabel(\"Author\", \"Bob\"));\n    r = ds.search(null, ddq, 10);\n    assertEquals(3, r.hits.totalHits);\n    // Publish Date is only drill-down: Lisa and Bob\n    // (drill-down) published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // More interesting case: drill-down on two fields\n    ddq = new SimpleDrillDownQuery();\n    ddq.add(new FacetLabel(\"Author\", \"Lisa\"));\n    ddq.add(new FacetLabel(\"Publish Date\", \"2010\"));\n    r = ds.search(null, ddq, 10);\n    assertEquals(1, r.hits.totalHits);\n    // Publish Date is drill-sideways + drill-down: Lisa\n    // (drill-down) published once in 2010 and once in 2012:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Even more interesting case: drill down on two fields,\n    // but one of them is OR\n    ddq = new SimpleDrillDownQuery();\n\n    // Drill down on Lisa or Bob:\n    ddq.add(new FacetLabel(\"Author\", \"Lisa\"),\n            new FacetLabel(\"Author\", \"Bob\"));\n    ddq.add(new FacetLabel(\"Publish Date\", \"2010\"));\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is both drill-sideways + drill-down:\n    // Lisa or Bob published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Test drilling down on invalid field:\n    ddq = new SimpleDrillDownQuery();\n    ddq.add(new FacetLabel(\"Foobar\", \"Baz\"));\n    r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Foobar\"));\n\n    // Test drilling down on valid term or'd with invalid term:\n    ddq = new SimpleDrillDownQuery();\n    ddq.add(new FacetLabel(\"Author\", \"Lisa\"),\n            new FacetLabel(\"Author\", \"Tom\"));\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // LUCENE-4915: test drilling down on a dimension but\n    // NOT facet counting it:\n    ddq = new SimpleDrillDownQuery();\n    ddq.add(new FacetLabel(\"Author\", \"Lisa\"),\n            new FacetLabel(\"Author\", \"Tom\"));\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Test main query gets null scorer:\n    ddq = new SimpleDrillDownQuery(new TermQuery(new Term(\"foobar\", \"baz\")));\n    ddq.add(new FacetLabel(\"Author\", \"Lisa\"));\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Author\"));\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["6e36d54295a482663caa1b849aa6172b8f868feb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9fdb15e93058f718a65d564872aadbed5ca78296","date":1384720267,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\");\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), taxoWriter, config);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleDrillSideways ds = new SimpleDrillSideways(searcher, config, taxoReader);\n\n    // Simple case: drill-down on a single field; in this\n    // case the drill-sideways + drill-down counts ==\n    // drill-down of just the query: \n    SimpleDrillDownQuery ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    SimpleDrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Same simple case, but no baseQuery (pure browse):\n    // drill-down on a single field; in this case the\n    // drill-sideways + drill-down counts == drill-down of\n    // just the query:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Another simple case: drill-down on on single fields\n    // but OR of two values\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(3, r.hits.totalHits);\n    // Publish Date is only drill-down: Lisa and Bob\n    // (drill-down) published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // More interesting case: drill-down on two fields\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(1, r.hits.totalHits);\n    // Publish Date is drill-sideways + drill-down: Lisa\n    // (drill-down) published once in 2010 and once in 2012:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Even more interesting case: drill down on two fields,\n    // but one of them is OR\n    ddq = new SimpleDrillDownQuery(config);\n\n    // Drill down on Lisa or Bob:\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is both drill-sideways + drill-down:\n    // Lisa or Bob published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Test drilling down on invalid field:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Foobar\", \"Baz\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Foobar\"));\n\n    // Test drilling down on valid term or'd with invalid term:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // LUCENE-4915: test drilling down on a dimension but\n    // NOT facet counting it:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Test main query gets null scorer:\n    ddq = new SimpleDrillDownQuery(config, new TermQuery(new Term(\"foobar\", \"baz\")));\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Author\"));\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\");\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), taxoWriter, config);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleDrillSideways ds = new SimpleDrillSideways(searcher, config, taxoReader);\n\n    // Simple case: drill-down on a single field; in this\n    // case the drill-sideways + drill-down counts ==\n    // drill-down of just the query: \n    SimpleDrillDownQuery ddq = new SimpleDrillDownQuery();\n    ddq.add(new FacetLabel(\"Author\", \"Lisa\"));\n    SimpleDrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Same simple case, but no baseQuery (pure browse):\n    // drill-down on a single field; in this case the\n    // drill-sideways + drill-down counts == drill-down of\n    // just the query:\n    ddq = new SimpleDrillDownQuery();\n    ddq.add(new FacetLabel(\"Author\", \"Lisa\"));\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Another simple case: drill-down on on single fields\n    // but OR of two values\n    ddq = new SimpleDrillDownQuery();\n    ddq.add(new FacetLabel(\"Author\", \"Lisa\"), new FacetLabel(\"Author\", \"Bob\"));\n    r = ds.search(null, ddq, 10);\n    assertEquals(3, r.hits.totalHits);\n    // Publish Date is only drill-down: Lisa and Bob\n    // (drill-down) published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // More interesting case: drill-down on two fields\n    ddq = new SimpleDrillDownQuery();\n    ddq.add(new FacetLabel(\"Author\", \"Lisa\"));\n    ddq.add(new FacetLabel(\"Publish Date\", \"2010\"));\n    r = ds.search(null, ddq, 10);\n    assertEquals(1, r.hits.totalHits);\n    // Publish Date is drill-sideways + drill-down: Lisa\n    // (drill-down) published once in 2010 and once in 2012:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Even more interesting case: drill down on two fields,\n    // but one of them is OR\n    ddq = new SimpleDrillDownQuery();\n\n    // Drill down on Lisa or Bob:\n    ddq.add(new FacetLabel(\"Author\", \"Lisa\"),\n            new FacetLabel(\"Author\", \"Bob\"));\n    ddq.add(new FacetLabel(\"Publish Date\", \"2010\"));\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is both drill-sideways + drill-down:\n    // Lisa or Bob published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Test drilling down on invalid field:\n    ddq = new SimpleDrillDownQuery();\n    ddq.add(new FacetLabel(\"Foobar\", \"Baz\"));\n    r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Foobar\"));\n\n    // Test drilling down on valid term or'd with invalid term:\n    ddq = new SimpleDrillDownQuery();\n    ddq.add(new FacetLabel(\"Author\", \"Lisa\"),\n            new FacetLabel(\"Author\", \"Tom\"));\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // LUCENE-4915: test drilling down on a dimension but\n    // NOT facet counting it:\n    ddq = new SimpleDrillDownQuery();\n    ddq.add(new FacetLabel(\"Author\", \"Lisa\"),\n            new FacetLabel(\"Author\", \"Tom\"));\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Test main query gets null scorer:\n    ddq = new SimpleDrillDownQuery(new TermQuery(new Term(\"foobar\", \"baz\")));\n    ddq.add(new FacetLabel(\"Author\", \"Lisa\"));\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Author\"));\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7554009c97f9365492660c1df175b6349f7ec05c","date":1384886154,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\");\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, config);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleDrillSideways ds = new SimpleDrillSideways(searcher, config, taxoReader);\n\n    // Simple case: drill-down on a single field; in this\n    // case the drill-sideways + drill-down counts ==\n    // drill-down of just the query: \n    SimpleDrillDownQuery ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    SimpleDrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Same simple case, but no baseQuery (pure browse):\n    // drill-down on a single field; in this case the\n    // drill-sideways + drill-down counts == drill-down of\n    // just the query:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Another simple case: drill-down on on single fields\n    // but OR of two values\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(3, r.hits.totalHits);\n    // Publish Date is only drill-down: Lisa and Bob\n    // (drill-down) published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // More interesting case: drill-down on two fields\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(1, r.hits.totalHits);\n    // Publish Date is drill-sideways + drill-down: Lisa\n    // (drill-down) published once in 2010 and once in 2012:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Even more interesting case: drill down on two fields,\n    // but one of them is OR\n    ddq = new SimpleDrillDownQuery(config);\n\n    // Drill down on Lisa or Bob:\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is both drill-sideways + drill-down:\n    // Lisa or Bob published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Test drilling down on invalid field:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Foobar\", \"Baz\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Foobar\"));\n\n    // Test drilling down on valid term or'd with invalid term:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // LUCENE-4915: test drilling down on a dimension but\n    // NOT facet counting it:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Test main query gets null scorer:\n    ddq = new SimpleDrillDownQuery(config, new TermQuery(new Term(\"foobar\", \"baz\")));\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Author\"));\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\");\n\n    IndexWriter writer = new FacetIndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())), taxoWriter, config);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(doc);\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(DirectoryReader.open(writer, true));\n    writer.close();\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleDrillSideways ds = new SimpleDrillSideways(searcher, config, taxoReader);\n\n    // Simple case: drill-down on a single field; in this\n    // case the drill-sideways + drill-down counts ==\n    // drill-down of just the query: \n    SimpleDrillDownQuery ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    SimpleDrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Same simple case, but no baseQuery (pure browse):\n    // drill-down on a single field; in this case the\n    // drill-sideways + drill-down counts == drill-down of\n    // just the query:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Another simple case: drill-down on on single fields\n    // but OR of two values\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(3, r.hits.totalHits);\n    // Publish Date is only drill-down: Lisa and Bob\n    // (drill-down) published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // More interesting case: drill-down on two fields\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(1, r.hits.totalHits);\n    // Publish Date is drill-sideways + drill-down: Lisa\n    // (drill-down) published once in 2010 and once in 2012:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Even more interesting case: drill down on two fields,\n    // but one of them is OR\n    ddq = new SimpleDrillDownQuery(config);\n\n    // Drill down on Lisa or Bob:\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is both drill-sideways + drill-down:\n    // Lisa or Bob published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Test drilling down on invalid field:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Foobar\", \"Baz\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Foobar\"));\n\n    // Test drilling down on valid term or'd with invalid term:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // LUCENE-4915: test drilling down on a dimension but\n    // NOT facet counting it:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Test main query gets null scorer:\n    ddq = new SimpleDrillDownQuery(config, new TermQuery(new Term(\"foobar\", \"baz\")));\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Author\"));\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"006838107b0cd2051371f3470740d23ec91b1886","date":1384950816,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, config);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleDrillSideways ds = new SimpleDrillSideways(searcher, config, taxoReader);\n\n    // Simple case: drill-down on a single field; in this\n    // case the drill-sideways + drill-down counts ==\n    // drill-down of just the query: \n    SimpleDrillDownQuery ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    SimpleDrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Same simple case, but no baseQuery (pure browse):\n    // drill-down on a single field; in this case the\n    // drill-sideways + drill-down counts == drill-down of\n    // just the query:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Another simple case: drill-down on on single fields\n    // but OR of two values\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(3, r.hits.totalHits);\n    // Publish Date is only drill-down: Lisa and Bob\n    // (drill-down) published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // More interesting case: drill-down on two fields\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(1, r.hits.totalHits);\n    // Publish Date is drill-sideways + drill-down: Lisa\n    // (drill-down) published once in 2010 and once in 2012:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Even more interesting case: drill down on two fields,\n    // but one of them is OR\n    ddq = new SimpleDrillDownQuery(config);\n\n    // Drill down on Lisa or Bob:\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is both drill-sideways + drill-down:\n    // Lisa or Bob published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Test drilling down on invalid field:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Foobar\", \"Baz\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Foobar\"));\n\n    // Test drilling down on valid term or'd with invalid term:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // LUCENE-4915: test drilling down on a dimension but\n    // NOT facet counting it:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Test main query gets null scorer:\n    ddq = new SimpleDrillDownQuery(config, new TermQuery(new Term(\"foobar\", \"baz\")));\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Author\"));\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\");\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, config);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleDrillSideways ds = new SimpleDrillSideways(searcher, config, taxoReader);\n\n    // Simple case: drill-down on a single field; in this\n    // case the drill-sideways + drill-down counts ==\n    // drill-down of just the query: \n    SimpleDrillDownQuery ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    SimpleDrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Same simple case, but no baseQuery (pure browse):\n    // drill-down on a single field; in this case the\n    // drill-sideways + drill-down counts == drill-down of\n    // just the query:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Another simple case: drill-down on on single fields\n    // but OR of two values\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(3, r.hits.totalHits);\n    // Publish Date is only drill-down: Lisa and Bob\n    // (drill-down) published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // More interesting case: drill-down on two fields\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(1, r.hits.totalHits);\n    // Publish Date is drill-sideways + drill-down: Lisa\n    // (drill-down) published once in 2010 and once in 2012:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Even more interesting case: drill down on two fields,\n    // but one of them is OR\n    ddq = new SimpleDrillDownQuery(config);\n\n    // Drill down on Lisa or Bob:\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is both drill-sideways + drill-down:\n    // Lisa or Bob published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Test drilling down on invalid field:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Foobar\", \"Baz\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Foobar\"));\n\n    // Test drilling down on valid term or'd with invalid term:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // LUCENE-4915: test drilling down on a dimension but\n    // NOT facet counting it:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Test main query gets null scorer:\n    ddq = new SimpleDrillDownQuery(config, new TermQuery(new Term(\"foobar\", \"baz\")));\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Author\"));\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"19f5022544a8fc895776356d1b35a4b46d05945c","date":1385063323,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, config);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleDrillSideways ds = new SimpleDrillSideways(searcher, config, taxoReader);\n\n    // Simple case: drill-down on a single field; in this\n    // case the drill-sideways + drill-down counts ==\n    // drill-down of just the query: \n    SimpleDrillDownQuery ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    SimpleDrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Same simple case, but no baseQuery (pure browse):\n    // drill-down on a single field; in this case the\n    // drill-sideways + drill-down counts == drill-down of\n    // just the query:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Another simple case: drill-down on on single fields\n    // but OR of two values\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(3, r.hits.totalHits);\n    // Publish Date is only drill-down: Lisa and Bob\n    // (drill-down) published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // More interesting case: drill-down on two fields\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(1, r.hits.totalHits);\n    // Publish Date is drill-sideways + drill-down: Lisa\n    // (drill-down) published once in 2010 and once in 2012:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Even more interesting case: drill down on two fields,\n    // but one of them is OR\n    ddq = new SimpleDrillDownQuery(config);\n\n    // Drill down on Lisa or Bob:\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is both drill-sideways + drill-down:\n    // Lisa or Bob published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Test drilling down on invalid field:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Foobar\", \"Baz\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Foobar\"));\n\n    // Test drilling down on valid term or'd with invalid term:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // LUCENE-4915: test drilling down on a dimension but\n    // NOT facet counting it:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Test main query gets null scorer:\n    ddq = new SimpleDrillDownQuery(config, new TermQuery(new Term(\"foobar\", \"baz\")));\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Author\"));\n    IOUtils.close(searcher.getIndexReader(), taxoReader, writer, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, config);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n    writer.close();\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n    taxoWriter.close();\n\n    SimpleDrillSideways ds = new SimpleDrillSideways(searcher, config, taxoReader);\n\n    // Simple case: drill-down on a single field; in this\n    // case the drill-sideways + drill-down counts ==\n    // drill-down of just the query: \n    SimpleDrillDownQuery ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    SimpleDrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Same simple case, but no baseQuery (pure browse):\n    // drill-down on a single field; in this case the\n    // drill-sideways + drill-down counts == drill-down of\n    // just the query:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Another simple case: drill-down on on single fields\n    // but OR of two values\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(3, r.hits.totalHits);\n    // Publish Date is only drill-down: Lisa and Bob\n    // (drill-down) published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // More interesting case: drill-down on two fields\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(1, r.hits.totalHits);\n    // Publish Date is drill-sideways + drill-down: Lisa\n    // (drill-down) published once in 2010 and once in 2012:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Even more interesting case: drill down on two fields,\n    // but one of them is OR\n    ddq = new SimpleDrillDownQuery(config);\n\n    // Drill down on Lisa or Bob:\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is both drill-sideways + drill-down:\n    // Lisa or Bob published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Test drilling down on invalid field:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Foobar\", \"Baz\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Foobar\"));\n\n    // Test drilling down on valid term or'd with invalid term:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // LUCENE-4915: test drilling down on a dimension but\n    // NOT facet counting it:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Test main query gets null scorer:\n    ddq = new SimpleDrillDownQuery(config, new TermQuery(new Term(\"foobar\", \"baz\")));\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Author\"));\n    searcher.getIndexReader().close();\n    taxoReader.close();\n    dir.close();\n    taxoDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae75def1e2525383b6e1397ed97c44387da9941c","date":1385249238,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleDrillSideways ds = new SimpleDrillSideways(searcher, config, taxoReader);\n\n    // Simple case: drill-down on a single field; in this\n    // case the drill-sideways + drill-down counts ==\n    // drill-down of just the query: \n    SimpleDrillDownQuery ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    SimpleDrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Same simple case, but no baseQuery (pure browse):\n    // drill-down on a single field; in this case the\n    // drill-sideways + drill-down counts == drill-down of\n    // just the query:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Another simple case: drill-down on on single fields\n    // but OR of two values\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(3, r.hits.totalHits);\n    // Publish Date is only drill-down: Lisa and Bob\n    // (drill-down) published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // More interesting case: drill-down on two fields\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(1, r.hits.totalHits);\n    // Publish Date is drill-sideways + drill-down: Lisa\n    // (drill-down) published once in 2010 and once in 2012:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Even more interesting case: drill down on two fields,\n    // but one of them is OR\n    ddq = new SimpleDrillDownQuery(config);\n\n    // Drill down on Lisa or Bob:\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is both drill-sideways + drill-down:\n    // Lisa or Bob published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Test drilling down on invalid field:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Foobar\", \"Baz\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Foobar\"));\n\n    // Test drilling down on valid term or'd with invalid term:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // LUCENE-4915: test drilling down on a dimension but\n    // NOT facet counting it:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Test main query gets null scorer:\n    ddq = new SimpleDrillDownQuery(config, new TermQuery(new Term(\"foobar\", \"baz\")));\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Author\"));\n    IOUtils.close(searcher.getIndexReader(), taxoReader, writer, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, config);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleDrillSideways ds = new SimpleDrillSideways(searcher, config, taxoReader);\n\n    // Simple case: drill-down on a single field; in this\n    // case the drill-sideways + drill-down counts ==\n    // drill-down of just the query: \n    SimpleDrillDownQuery ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    SimpleDrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Same simple case, but no baseQuery (pure browse):\n    // drill-down on a single field; in this case the\n    // drill-sideways + drill-down counts == drill-down of\n    // just the query:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Another simple case: drill-down on on single fields\n    // but OR of two values\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(3, r.hits.totalHits);\n    // Publish Date is only drill-down: Lisa and Bob\n    // (drill-down) published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // More interesting case: drill-down on two fields\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(1, r.hits.totalHits);\n    // Publish Date is drill-sideways + drill-down: Lisa\n    // (drill-down) published once in 2010 and once in 2012:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Even more interesting case: drill down on two fields,\n    // but one of them is OR\n    ddq = new SimpleDrillDownQuery(config);\n\n    // Drill down on Lisa or Bob:\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is both drill-sideways + drill-down:\n    // Lisa or Bob published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Test drilling down on invalid field:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Foobar\", \"Baz\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Foobar\"));\n\n    // Test drilling down on valid term or'd with invalid term:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // LUCENE-4915: test drilling down on a dimension but\n    // NOT facet counting it:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Test main query gets null scorer:\n    ddq = new SimpleDrillDownQuery(config, new TermQuery(new Term(\"foobar\", \"baz\")));\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Author\"));\n    IOUtils.close(searcher.getIndexReader(), taxoReader, writer, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f01616d06510fc630b6ef0ec324bdebc2fc49b3c","date":1385331328,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleDrillSideways ds = new SimpleDrillSideways(searcher, config, taxoReader);\n\n    // Simple case: drill-down on a single field; in this\n    // case the drill-sideways + drill-down counts ==\n    // drill-down of just the query: \n    SimpleDrillDownQuery ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    SimpleDrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"value=2 childCount=2\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Same simple case, but no baseQuery (pure browse):\n    // drill-down on a single field; in this case the\n    // drill-sideways + drill-down counts == drill-down of\n    // just the query:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"value=2 childCount=2\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Another simple case: drill-down on on single fields\n    // but OR of two values\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(3, r.hits.totalHits);\n    // Publish Date is only drill-down: Lisa and Bob\n    // (drill-down) published twice in 2010 and once in 2012:\n    assertEquals(\"value=3 childCount=2\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // More interesting case: drill-down on two fields\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(1, r.hits.totalHits);\n    // Publish Date is drill-sideways + drill-down: Lisa\n    // (drill-down) published once in 2010 and once in 2012:\n    assertEquals(\"value=2 childCount=2\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Even more interesting case: drill down on two fields,\n    // but one of them is OR\n    ddq = new SimpleDrillDownQuery(config);\n\n    // Drill down on Lisa or Bob:\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is both drill-sideways + drill-down:\n    // Lisa or Bob published twice in 2010 and once in 2012:\n    assertEquals(\"value=3 childCount=2\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Test drilling down on invalid field:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Foobar\", \"Baz\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Foobar\"));\n\n    // Test drilling down on valid term or'd with invalid term:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"value=2 childCount=2\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // LUCENE-4915: test drilling down on a dimension but\n    // NOT facet counting it:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"value=2 childCount=2\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Test main query gets null scorer:\n    ddq = new SimpleDrillDownQuery(config, new TermQuery(new Term(\"foobar\", \"baz\")));\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Author\"));\n    IOUtils.close(searcher.getIndexReader(), taxoReader, writer, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleDrillSideways ds = new SimpleDrillSideways(searcher, config, taxoReader);\n\n    // Simple case: drill-down on a single field; in this\n    // case the drill-sideways + drill-down counts ==\n    // drill-down of just the query: \n    SimpleDrillDownQuery ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    SimpleDrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Same simple case, but no baseQuery (pure browse):\n    // drill-down on a single field; in this case the\n    // drill-sideways + drill-down counts == drill-down of\n    // just the query:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Another simple case: drill-down on on single fields\n    // but OR of two values\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(3, r.hits.totalHits);\n    // Publish Date is only drill-down: Lisa and Bob\n    // (drill-down) published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // More interesting case: drill-down on two fields\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(1, r.hits.totalHits);\n    // Publish Date is drill-sideways + drill-down: Lisa\n    // (drill-down) published once in 2010 and once in 2012:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Even more interesting case: drill down on two fields,\n    // but one of them is OR\n    ddq = new SimpleDrillDownQuery(config);\n\n    // Drill down on Lisa or Bob:\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is both drill-sideways + drill-down:\n    // Lisa or Bob published twice in 2010 and once in 2012:\n    assertEquals(\"Publish Date (3)\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"Author (2)\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Test drilling down on invalid field:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Foobar\", \"Baz\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Foobar\"));\n\n    // Test drilling down on valid term or'd with invalid term:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"Author (5)\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // LUCENE-4915: test drilling down on a dimension but\n    // NOT facet counting it:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"Publish Date (2)\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Test main query gets null scorer:\n    ddq = new SimpleDrillDownQuery(config, new TermQuery(new Term(\"foobar\", \"baz\")));\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Author\"));\n    IOUtils.close(searcher.getIndexReader(), taxoReader, writer, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testBasic().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testBasic().mjava","sourceNew":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n\n    //  case: drill-down on a single field; in this\n    // case the drill-sideways + drill-down counts ==\n    // drill-down of just the query: \n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    DrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"value=2 childCount=2\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Same simple case, but no baseQuery (pure browse):\n    // drill-down on a single field; in this case the\n    // drill-sideways + drill-down counts == drill-down of\n    // just the query:\n    ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"value=2 childCount=2\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Another simple case: drill-down on on single fields\n    // but OR of two values\n    ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(3, r.hits.totalHits);\n    // Publish Date is only drill-down: Lisa and Bob\n    // (drill-down) published twice in 2010 and once in 2012:\n    assertEquals(\"value=3 childCount=2\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // More interesting case: drill-down on two fields\n    ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(1, r.hits.totalHits);\n    // Publish Date is drill-sideways + drill-down: Lisa\n    // (drill-down) published once in 2010 and once in 2012:\n    assertEquals(\"value=2 childCount=2\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Even more interesting case: drill down on two fields,\n    // but one of them is OR\n    ddq = new DrillDownQuery(config);\n\n    // Drill down on Lisa or Bob:\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is both drill-sideways + drill-down:\n    // Lisa or Bob published twice in 2010 and once in 2012:\n    assertEquals(\"value=3 childCount=2\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Test drilling down on invalid field:\n    ddq = new DrillDownQuery(config);\n    ddq.add(\"Foobar\", \"Baz\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Foobar\"));\n\n    // Test drilling down on valid term or'd with invalid term:\n    ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"value=2 childCount=2\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // LUCENE-4915: test drilling down on a dimension but\n    // NOT facet counting it:\n    ddq = new DrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"value=2 childCount=2\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Test main query gets null scorer:\n    ddq = new DrillDownQuery(config, new TermQuery(new Term(\"foobar\", \"baz\")));\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Author\"));\n    IOUtils.close(searcher.getIndexReader(), taxoReader, writer, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testBasic() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setHierarchical(\"Publish Date\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"15\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2010\", \"10\", \"20\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Lisa\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"1\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Susan\"));\n    doc.add(new FacetField(\"Publish Date\", \"2012\", \"1\", \"7\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"Author\", \"Frank\"));\n    doc.add(new FacetField(\"Publish Date\", \"1999\", \"5\", \"5\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleDrillSideways ds = new SimpleDrillSideways(searcher, config, taxoReader);\n\n    // Simple case: drill-down on a single field; in this\n    // case the drill-sideways + drill-down counts ==\n    // drill-down of just the query: \n    SimpleDrillDownQuery ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    SimpleDrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"value=2 childCount=2\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Same simple case, but no baseQuery (pure browse):\n    // drill-down on a single field; in this case the\n    // drill-sideways + drill-down counts == drill-down of\n    // just the query:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"value=2 childCount=2\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Another simple case: drill-down on on single fields\n    // but OR of two values\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(3, r.hits.totalHits);\n    // Publish Date is only drill-down: Lisa and Bob\n    // (drill-down) published twice in 2010 and once in 2012:\n    assertEquals(\"value=3 childCount=2\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // More interesting case: drill-down on two fields\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(1, r.hits.totalHits);\n    // Publish Date is drill-sideways + drill-down: Lisa\n    // (drill-down) published once in 2010 and once in 2012:\n    assertEquals(\"value=2 childCount=2\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Even more interesting case: drill down on two fields,\n    // but one of them is OR\n    ddq = new SimpleDrillDownQuery(config);\n\n    // Drill down on Lisa or Bob:\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Publish Date\", \"2010\");\n    ddq.add(\"Author\", \"Bob\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is both drill-sideways + drill-down:\n    // Lisa or Bob published twice in 2010 and once in 2012:\n    assertEquals(\"value=3 childCount=2\\n  2010 (2)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down:\n    // only Lisa & Bob published (once each) in 2010:\n    assertEquals(\"value=2 childCount=2\\n  Bob (1)\\n  Lisa (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // Test drilling down on invalid field:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Foobar\", \"Baz\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Foobar\"));\n\n    // Test drilling down on valid term or'd with invalid term:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"value=2 childCount=2\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n    // Author is drill-sideways + drill-down: Lisa\n    // (drill-down) published twice, and Frank/Susan/Bob\n    // published once:\n    assertEquals(\"value=5 childCount=4\\n  Lisa (2)\\n  Bob (1)\\n  Susan (1)\\n  Frank (1)\\n\", r.facets.getTopChildren(10, \"Author\").toString());\n\n    // LUCENE-4915: test drilling down on a dimension but\n    // NOT facet counting it:\n    ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"Author\", \"Lisa\");\n    ddq.add(\"Author\", \"Tom\");\n    r = ds.search(null, ddq, 10);\n    assertEquals(2, r.hits.totalHits);\n    // Publish Date is only drill-down, and Lisa published\n    // one in 2012 and one in 2010:\n    assertEquals(\"value=2 childCount=2\\n  2010 (1)\\n  2012 (1)\\n\", r.facets.getTopChildren(10, \"Publish Date\").toString());\n\n    // Test main query gets null scorer:\n    ddq = new SimpleDrillDownQuery(config, new TermQuery(new Term(\"foobar\", \"baz\")));\n    ddq.add(\"Author\", \"Lisa\");\n    r = ds.search(null, ddq, 10);\n\n    assertEquals(0, r.hits.totalHits);\n    assertNull(r.facets.getTopChildren(10, \"Publish Date\"));\n    assertNull(r.facets.getTopChildren(10, \"Author\"));\n    IOUtils.close(searcher.getIndexReader(), taxoReader, writer, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7554009c97f9365492660c1df175b6349f7ec05c":["9fdb15e93058f718a65d564872aadbed5ca78296"],"28ac5cee8abf30398e12bc016a5ce9d441831a63":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9fdb15e93058f718a65d564872aadbed5ca78296":["28ac5cee8abf30398e12bc016a5ce9d441831a63"],"19f5022544a8fc895776356d1b35a4b46d05945c":["006838107b0cd2051371f3470740d23ec91b1886"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["f01616d06510fc630b6ef0ec324bdebc2fc49b3c"],"f01616d06510fc630b6ef0ec324bdebc2fc49b3c":["ae75def1e2525383b6e1397ed97c44387da9941c"],"006838107b0cd2051371f3470740d23ec91b1886":["7554009c97f9365492660c1df175b6349f7ec05c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae75def1e2525383b6e1397ed97c44387da9941c":["19f5022544a8fc895776356d1b35a4b46d05945c"]},"commit2Childs":{"7554009c97f9365492660c1df175b6349f7ec05c":["006838107b0cd2051371f3470740d23ec91b1886"],"28ac5cee8abf30398e12bc016a5ce9d441831a63":["9fdb15e93058f718a65d564872aadbed5ca78296"],"9fdb15e93058f718a65d564872aadbed5ca78296":["7554009c97f9365492660c1df175b6349f7ec05c"],"19f5022544a8fc895776356d1b35a4b46d05945c":["ae75def1e2525383b6e1397ed97c44387da9941c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["28ac5cee8abf30398e12bc016a5ce9d441831a63","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"21d36d0db865f7b84026b447bec653469a6e66df":[],"f01616d06510fc630b6ef0ec324bdebc2fc49b3c":["21d36d0db865f7b84026b447bec653469a6e66df"],"006838107b0cd2051371f3470740d23ec91b1886":["19f5022544a8fc895776356d1b35a4b46d05945c"],"ae75def1e2525383b6e1397ed97c44387da9941c":["f01616d06510fc630b6ef0ec324bdebc2fc49b3c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}