{"path":"solr/core/src/java/org/apache/solr/core/CoreContainer#addCoresAttrib(Map[String,String],String,String,String).mjava","commits":[{"id":"4901f8624f774c2b648e66567b63c59e901ac7c8","date":1329431044,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#addCoresAttrib(Map[String,String],String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void addCoresAttrib(Map<String,String> coresAttribs, String attribName, String attribValue, String defaultValue) {\n    if (cfg == null) {\n      coresAttribs.put(attribName, attribValue);\n      return;\n    }\n    \n    if (attribValue != null) {\n      String rawValue = cfg.get(\"solr/cores/@\" + attribName, null);\n      if (rawValue == null && defaultValue != null && attribValue.equals(defaultValue)) return;\n      if (attribValue.equals(DOMUtil.substituteProperty(rawValue, loader.getCoreProperties()))) {\n        coresAttribs.put(attribName, rawValue);\n      } else {\n        coresAttribs.put(attribName, attribValue);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a837c064b67fa63a9394136e31218b908cdcf783","date":1362186072,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#addCoresAttrib(Map[String,String],String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#addCoresAttrib(Map[String,String],String,String,String).mjava","sourceNew":"  private void addCoresAttrib(Map<String,String> coresAttribs, String attribName, String attribValue, String defaultValue) {\n    if (cfg == null) {\n      coresAttribs.put(attribName, attribValue);\n      return;\n    }\n    \n    if (attribValue != null) {\n      String rawValue = cfg.get(ConfigSolr.ConfLevel.SOLR_CORES, attribName, null);\n      if (rawValue == null && defaultValue != null && attribValue.equals(defaultValue)) return;\n\n      if (attribValue.equals(PropertiesUtil.substituteProperty(rawValue, loader.getCoreProperties()))) {\n        coresAttribs.put(attribName, rawValue);\n      } else {\n        coresAttribs.put(attribName, attribValue);\n      }\n    }\n  }\n\n","sourceOld":"  private void addCoresAttrib(Map<String,String> coresAttribs, String attribName, String attribValue, String defaultValue) {\n    if (cfg == null) {\n      coresAttribs.put(attribName, attribValue);\n      return;\n    }\n    \n    if (attribValue != null) {\n      String rawValue = cfg.get(\"solr/cores/@\" + attribName, null);\n      if (rawValue == null && defaultValue != null && attribValue.equals(defaultValue)) return;\n      if (attribValue.equals(DOMUtil.substituteProperty(rawValue, loader.getCoreProperties()))) {\n        coresAttribs.put(attribName, rawValue);\n      } else {\n        coresAttribs.put(attribName, attribValue);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e475642767c688ede5728d7918326f70b4e0bf3a","date":1366072489,"type":4,"author":"Erick Erickson","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#addCoresAttrib(Map[String,String],String,String,String).mjava","sourceNew":null,"sourceOld":"  private void addCoresAttrib(Map<String,String> coresAttribs, String attribName, String attribValue, String defaultValue) {\n    if (cfg == null) {\n      coresAttribs.put(attribName, attribValue);\n      return;\n    }\n    \n    if (attribValue != null) {\n      String rawValue = cfg.get(ConfigSolr.ConfLevel.SOLR_CORES, attribName, null);\n      if (rawValue == null && defaultValue != null && attribValue.equals(defaultValue)) return;\n\n      if (attribValue.equals(PropertiesUtil.substituteProperty(rawValue, loader.getCoreProperties()))) {\n        coresAttribs.put(attribName, rawValue);\n      } else {\n        coresAttribs.put(attribName, attribValue);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4901f8624f774c2b648e66567b63c59e901ac7c8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e475642767c688ede5728d7918326f70b4e0bf3a":["a837c064b67fa63a9394136e31218b908cdcf783"],"a837c064b67fa63a9394136e31218b908cdcf783":["4901f8624f774c2b648e66567b63c59e901ac7c8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e475642767c688ede5728d7918326f70b4e0bf3a"]},"commit2Childs":{"4901f8624f774c2b648e66567b63c59e901ac7c8":["a837c064b67fa63a9394136e31218b908cdcf783"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4901f8624f774c2b648e66567b63c59e901ac7c8"],"e475642767c688ede5728d7918326f70b4e0bf3a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a837c064b67fa63a9394136e31218b908cdcf783":["e475642767c688ede5728d7918326f70b4e0bf3a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}