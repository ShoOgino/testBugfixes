{"path":"src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","commits":[{"id":"1d6ca4f6b8a27a0523251c56d0abeb659ef5c1b0","date":1236796963,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","pathOld":"/dev/null","sourceNew":"  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    assertU(delQ(\"*:*\"));\n    long curTime = System.currentTimeMillis();\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      long date = curTime + i * 86400 * 1000;\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", format.format(new Date(date))));\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW+5DAYS]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["08fd846faeaddb28f2b20f569afe4f79b394f62d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1016ea06c56f46d6df9a058b065409e0504d76b4","date":1236852195,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","pathOld":"src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","sourceNew":"  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"))));\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    assertU(delQ(\"*:*\"));\n    long curTime = System.currentTimeMillis();\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      long date = curTime + i * 86400 * 1000;\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", format.format(new Date(date))));\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW+5DAYS]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"72a8882ee058bf838880e4cc9ac83bb0363e48d3","date":1237128822,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","pathOld":"src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","sourceNew":"  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"))));\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"67e78e430865fdfabb05d57a660840988d54ca59","date":1237128966,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","pathOld":"src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","sourceNew":"  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n  }\n\n","sourceOld":"  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d72e3710bede9618eb9b2b5c6936369f3d3f9579","date":1239534189,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","pathOld":"src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","sourceNew":"  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='2009-04-21T00:00:00Z']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='2009-04-12T00:00:00Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='2009-04-21T00:00:00Z']\");\n  }\n\n","sourceOld":"  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3ef36898d4e26c5fa6bececb4b33cdbef72954a5","date":1239612579,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","pathOld":"src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","sourceNew":"  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","sourceOld":"  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='2009-04-21T00:00:00Z']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='2009-04-12T00:00:00Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='2009-04-21T00:00:00Z']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","pathOld":"src/test/org/apache/solr/TestTrie#testTrieDateRangeSearch().mjava","sourceNew":"  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","sourceOld":"  public void testTrieDateRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", \"1995-12-31T23:\" + (i < 10 ? \"0\" + i : i) + \":59.999Z\"));\n    }\n    assertU(commit());\n    SolrQueryRequest req = req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO 1995-12-31T23:04:59.999Z]\");\n    assertQ(\"Range filter must match only 5 documents\", req, \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[1995-12-31T23:00:59.999Z to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[1995-12-31T23:00:59.999Z TO *]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to 1995-12-31T23:09:59.999Z] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO 1995-12-31T23:09:59.999Z]\"), \"//*[@numFound='10']\");\n    assertQ(\"Range filter tint:[* to *] must match 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n\n    // Test date math syntax\n    SimpleDateFormat format = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n    format.setTimeZone(TimeZone.getTimeZone(\"UTC\"));\n\n    assertU(delQ(\"*:*\"));\n    DateMathParser dmp = new DateMathParser(DateField.UTC, Locale.US);\n    String largestDate = \"\";\n    for (int i = 0; i < 10; i++) {\n      // index 10 days starting with today\n      String d = format.format(i == 0 ? dmp.parseMath(\"/DAY\") : dmp.parseMath(\"/DAY+\" + i + \"DAYS\"));\n      assertU(adoc(\"id\", String.valueOf(i), \"tdate\", d));\n      if (i == 9) largestDate = d;\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 10 documents\", req(\"q\", \"*:*\", \"fq\", \"tdate:[* TO *]\"), \"//*[@numFound='10']\");\n    req = req(\"q\", \"*:*\", \"fq\", \"tdate:[NOW/DAY TO NOW/DAY+5DAYS]\");\n    assertQ(\"Range filter must match only 6 documents\", req, \"//*[@numFound='6']\");\n\n    // Test Term Queries\n    assertU(adoc(\"id\", \"11\", \"tdate\", \"1995-12-31T23:59:59.999Z\"));\n    assertU(commit());\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n    assertQ(\"Term query must match only 1 document\", req(\"q\", \"*:*\", \"fq\", \"tdate:1995-12-31T23\\\\:59\\\\:59.999Z\"), \"//*[@numFound='1']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate desc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n    assertQ(\"Sort ascending does not work correctly on tdate fields\", req(\"q\", \"*:*\", \"sort\", \"tdate asc\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='1995-12-31T23:59:59.999Z']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tdate fields\", req(\"q\", \"_val_:\\\"sum(tdate,1.0)\\\"\"), \"//*[@numFound='11']\", \"//date[@name='tdate'][.='\" + largestDate + \"']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3ef36898d4e26c5fa6bececb4b33cdbef72954a5":["d72e3710bede9618eb9b2b5c6936369f3d3f9579"],"72a8882ee058bf838880e4cc9ac83bb0363e48d3":["1016ea06c56f46d6df9a058b065409e0504d76b4"],"d72e3710bede9618eb9b2b5c6936369f3d3f9579":["67e78e430865fdfabb05d57a660840988d54ca59"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"1d6ca4f6b8a27a0523251c56d0abeb659ef5c1b0":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["3ef36898d4e26c5fa6bececb4b33cdbef72954a5"],"67e78e430865fdfabb05d57a660840988d54ca59":["72a8882ee058bf838880e4cc9ac83bb0363e48d3"],"1016ea06c56f46d6df9a058b065409e0504d76b4":["1d6ca4f6b8a27a0523251c56d0abeb659ef5c1b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3ef36898d4e26c5fa6bececb4b33cdbef72954a5":["ad94625fb8d088209f46650c8097196fec67f00c"],"72a8882ee058bf838880e4cc9ac83bb0363e48d3":["67e78e430865fdfabb05d57a660840988d54ca59"],"d72e3710bede9618eb9b2b5c6936369f3d3f9579":["3ef36898d4e26c5fa6bececb4b33cdbef72954a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["1d6ca4f6b8a27a0523251c56d0abeb659ef5c1b0"],"1d6ca4f6b8a27a0523251c56d0abeb659ef5c1b0":["1016ea06c56f46d6df9a058b065409e0504d76b4"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"1016ea06c56f46d6df9a058b065409e0504d76b4":["72a8882ee058bf838880e4cc9ac83bb0363e48d3"],"67e78e430865fdfabb05d57a660840988d54ca59":["d72e3710bede9618eb9b2b5c6936369f3d3f9579"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}