{"path":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","commits":[{"id":"ecc11368dc265bfdad90214f8bf5da99016ab1e2","date":1294144090,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","sourceNew":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          //the doc id is the first one in the page.  All other ids after that one can be ignored according to the schema\n          if (id == null) {\n            id = contents.toString();\n          }\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","sourceOld":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          //the doc id is the first one in the page.  All other ids after that one can be ignored according to the schema\n          if (id == null) {\n            id = contents.toString();\n          }\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","sourceNew":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          //the doc id is the first one in the page.  All other ids after that one can be ignored according to the schema\n          if (id == null) {\n            id = contents.toString();\n          }\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","sourceOld":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          //the doc id is the first one in the page.  All other ids after that one can be ignored according to the schema\n          if (id == null) {\n            id = contents.toString();\n          }\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","sourceNew":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          //the doc id is the first one in the page.  All other ids after that one can be ignored according to the schema\n          if (id == null) {\n            id = contents.toString();\n          }\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","sourceOld":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          //the doc id is the first one in the page.  All other ids after that one can be ignored according to the schema\n          if (id == null) {\n            id = contents.toString();\n          }\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/EnwikiContentSource.Parser#endElement(String,String,String).mjava","sourceNew":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          //the doc id is the first one in the page.  All other ids after that one can be ignored according to the schema\n          if (id == null) {\n            id = contents.toString();\n          }\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","sourceOld":"    @Override\n    public void endElement(String namespace, String simple, String qualified)\n      throws SAXException {\n      int elemType = getElementType(qualified);\n      switch (elemType) {\n        case PAGE:\n          // the body must be null and we either are keeping image docs or the\n          // title does not start with Image:\n          if (body != null && (keepImages || !title.startsWith(\"Image:\"))) {\n            String[] tmpTuple = new String[LENGTH];\n            tmpTuple[TITLE] = title.replace('\\t', ' ');\n            tmpTuple[DATE] = time.replace('\\t', ' ');\n            tmpTuple[BODY] = body.replaceAll(\"[\\t\\n]\", \" \");\n            tmpTuple[ID] = id;\n            synchronized(this) {\n              while (tuple != null) {\n                try {\n                  wait();\n                } catch (InterruptedException ie) {\n                  throw new ThreadInterruptedException(ie);\n                }\n              }\n              tuple = tmpTuple;\n              notify();\n            }\n          }\n          break;\n        case BODY:\n          body = contents.toString();\n          //workaround that startswith doesn't have an ignore case option, get at least 20 chars.\n          String startsWith = body.substring(0, Math.min(10, contents.length())).toLowerCase();\n          if (startsWith.startsWith(\"#redirect\")) {\n            body = null;\n          }\n          break;\n        case DATE:\n          time = time(contents.toString());\n          break;\n        case TITLE:\n          title = contents.toString();\n          break;\n        case ID:\n          //the doc id is the first one in the page.  All other ids after that one can be ignored according to the schema\n          if (id == null) {\n            id = contents.toString();\n          }\n          break;\n        default:\n          // this element should be discarded.\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["70ad682703b8585f5d0a637efec044d57ec05efb","b89678825b68eccaf09e6ab71675fc0b0af1e099","868da859b43505d9d2a023bfeae6dd0c795f5295"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","ecc11368dc265bfdad90214f8bf5da99016ab1e2","868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}