{"path":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#expireZkSession(JettySolrRunner).mjava","commits":[{"id":"5a02c54923e5f4de08097fa9028e09e8cf5caa82","date":1475573567,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#expireZkSession(JettySolrRunner).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Make the zookeeper session on a particular jetty expire\n   */\n  public void expireZkSession(JettySolrRunner jetty) {\n    CoreContainer cores = jetty.getCoreContainer();\n    if (cores != null) {\n      SolrZkClient zkClient = cores.getZkController().getZkClient();\n      zkClient.getSolrZooKeeper().closeCnxn();\n      long sessionId = zkClient.getSolrZooKeeper().getSessionId();\n      zkServer.expire(sessionId);\n      log.info(\"Expired zookeeper session {} from node {}\", sessionId, jetty.getBaseUrl());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1967bed916cc89da82a1c2085f27976da6d08cbd","date":1475588750,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#expireZkSession(JettySolrRunner).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Make the zookeeper session on a particular jetty expire\n   */\n  public void expireZkSession(JettySolrRunner jetty) {\n    CoreContainer cores = jetty.getCoreContainer();\n    if (cores != null) {\n      SolrZkClient zkClient = cores.getZkController().getZkClient();\n      zkClient.getSolrZooKeeper().closeCnxn();\n      long sessionId = zkClient.getSolrZooKeeper().getSessionId();\n      zkServer.expire(sessionId);\n      log.info(\"Expired zookeeper session {} from node {}\", sessionId, jetty.getBaseUrl());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#expireZkSession(JettySolrRunner).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Make the zookeeper session on a particular jetty expire\n   */\n  public void expireZkSession(JettySolrRunner jetty) {\n    CoreContainer cores = jetty.getCoreContainer();\n    if (cores != null) {\n      SolrZkClient zkClient = cores.getZkController().getZkClient();\n      zkClient.getSolrZooKeeper().closeCnxn();\n      long sessionId = zkClient.getSolrZooKeeper().getSessionId();\n      zkServer.expire(sessionId);\n      log.info(\"Expired zookeeper session {} from node {}\", sessionId, jetty.getBaseUrl());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#expireZkSession(JettySolrRunner).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#expireZkSession(JettySolrRunner).mjava","sourceNew":"  /**\n   * Make the zookeeper session on a particular jetty expire\n   */\n  public void expireZkSession(JettySolrRunner jetty) {\n    CoreContainer cores = jetty.getCoreContainer();\n    if (cores != null) {\n      SolrZkClient zkClient = cores.getZkController().getZkClient();\n      zkClient.getSolrZooKeeper().closeCnxn();\n      long sessionId = zkClient.getSolrZooKeeper().getSessionId();\n      zkServer.expire(sessionId);\n      if (log.isInfoEnabled()) {\n        log.info(\"Expired zookeeper session {} from node {}\", sessionId, jetty.getBaseUrl());\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Make the zookeeper session on a particular jetty expire\n   */\n  public void expireZkSession(JettySolrRunner jetty) {\n    CoreContainer cores = jetty.getCoreContainer();\n    if (cores != null) {\n      SolrZkClient zkClient = cores.getZkController().getZkClient();\n      zkClient.getSolrZooKeeper().closeCnxn();\n      long sessionId = zkClient.getSolrZooKeeper().getSessionId();\n      zkServer.expire(sessionId);\n      log.info(\"Expired zookeeper session {} from node {}\", sessionId, jetty.getBaseUrl());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1967bed916cc89da82a1c2085f27976da6d08cbd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a02c54923e5f4de08097fa9028e09e8cf5caa82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["1967bed916cc89da82a1c2085f27976da6d08cbd"],"5a02c54923e5f4de08097fa9028e09e8cf5caa82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1967bed916cc89da82a1c2085f27976da6d08cbd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a966532d92cf9ba2856f15a8140151bb6b518e4b"]},"commit2Childs":{"1967bed916cc89da82a1c2085f27976da6d08cbd":["a966532d92cf9ba2856f15a8140151bb6b518e4b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1967bed916cc89da82a1c2085f27976da6d08cbd","5a02c54923e5f4de08097fa9028e09e8cf5caa82","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5a02c54923e5f4de08097fa9028e09e8cf5caa82":["1967bed916cc89da82a1c2085f27976da6d08cbd"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}