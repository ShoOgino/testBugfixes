{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Modify#setAttribute(String,Object).mjava","commits":[{"id":"45fa1a53285f45ccee13cbb116cf56246a61eab8","date":1529933997,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Modify#setAttribute(String,Object).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Sets the collection attribute to the given value\n     *\n     * @param key   a string attribute key, must be one of the entries documented\n     *              in the <a href=\"https://lucene.apache.org/solr/guide/collections-api.html#modifycollection\">Modify Collection API documentation</a>\n     * @param value the attribute value for the given key\n     */\n    public Modify setAttribute(String key, Object value) {\n      if (key == null) {\n        throw new IllegalArgumentException(\"Attribute key cannot be null for the modify collection API\");\n      }\n      if (!MODIFIABLE_COLLECTION_PROPERTIES.contains(key)) {\n        throw new IllegalArgumentException(\"Unknown attribute key: \"\n            + key + \". Must be one of: \" + MODIFIABLE_COLLECTION_PROPERTIES);\n      }\n      if (value == null) {\n        throw new IllegalArgumentException(\"Value cannot be null for key: \" + key);\n      }\n      if (attributes == null) {\n        attributes = new HashMap<>();\n      }\n      attributes.put(key, value);\n      return this;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Modify#setAttribute(String,Object).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Sets the collection attribute to the given value\n     *\n     * @param key   a string attribute key, must be one of the entries documented\n     *              in the <a href=\"https://lucene.apache.org/solr/guide/collections-api.html#modifycollection\">Modify Collection API documentation</a>\n     * @param value the attribute value for the given key\n     */\n    public Modify setAttribute(String key, Object value) {\n      if (key == null) {\n        throw new IllegalArgumentException(\"Attribute key cannot be null for the modify collection API\");\n      }\n      if (!MODIFIABLE_COLLECTION_PROPERTIES.contains(key)) {\n        throw new IllegalArgumentException(\"Unknown attribute key: \"\n            + key + \". Must be one of: \" + MODIFIABLE_COLLECTION_PROPERTIES);\n      }\n      if (value == null) {\n        throw new IllegalArgumentException(\"Value cannot be null for key: \" + key);\n      }\n      if (attributes == null) {\n        attributes = new HashMap<>();\n      }\n      attributes.put(key, value);\n      return this;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/CollectionAdminRequest.Modify#setAttribute(String,Object).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Sets the collection attribute to the given value\n     *\n     * @param key   a string attribute key, must be one of the entries documented\n     *              in the <a href=\"https://lucene.apache.org/solr/guide/collections-api.html#modifycollection\">Modify Collection API documentation</a>\n     * @param value the attribute value for the given key\n     */\n    public Modify setAttribute(String key, Object value) {\n      if (key == null) {\n        throw new IllegalArgumentException(\"Attribute key cannot be null for the modify collection API\");\n      }\n      if (!MODIFIABLE_COLLECTION_PROPERTIES.contains(key)) {\n        throw new IllegalArgumentException(\"Unknown attribute key: \"\n            + key + \". Must be one of: \" + MODIFIABLE_COLLECTION_PROPERTIES);\n      }\n      if (value == null) {\n        throw new IllegalArgumentException(\"Value cannot be null for key: \" + key);\n      }\n      if (attributes == null) {\n        attributes = new HashMap<>();\n      }\n      attributes.put(key, value);\n      return this;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","45fa1a53285f45ccee13cbb116cf56246a61eab8"],"45fa1a53285f45ccee13cbb116cf56246a61eab8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["45fa1a53285f45ccee13cbb116cf56246a61eab8"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","45fa1a53285f45ccee13cbb116cf56246a61eab8"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"45fa1a53285f45ccee13cbb116cf56246a61eab8":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","45fa1a53285f45ccee13cbb116cf56246a61eab8","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}