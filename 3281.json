{"path":"lucene/core/src/java/org/apache/lucene/search/FieldCacheDocIdSet#bits().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldCacheDocIdSet#bits().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldCacheDocIdSet#bits().mjava","sourceNew":"  @Override\n  public final Bits bits() {\n    return (acceptDocs == null) ? new Bits() {\n      public boolean get(int docid) {\n        return matchDoc(docid);\n      }\n\n      public int length() {\n        return maxDoc;\n      }\n    } : new Bits() {\n      public boolean get(int docid) {\n        return matchDoc(docid) && acceptDocs.get(docid);\n      }\n\n      public int length() {\n        return maxDoc;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public final Bits bits() {\n    return (acceptDocs == null) ? new Bits() {\n      public boolean get(int docid) {\n        return matchDoc(docid);\n      }\n\n      public int length() {\n        return maxDoc;\n      }\n    } : new Bits() {\n      public boolean get(int docid) {\n        return matchDoc(docid) && acceptDocs.get(docid);\n      }\n\n      public int length() {\n        return maxDoc;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldCacheDocIdSet#bits().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCacheDocIdSet#bits().mjava","sourceNew":"  @Override\n  public final Bits bits() {\n    return (acceptDocs == null) ? new Bits() {\n      @Override\n      public boolean get(int docid) {\n        return matchDoc(docid);\n      }\n\n      @Override\n      public int length() {\n        return maxDoc;\n      }\n    } : new Bits() {\n      @Override\n      public boolean get(int docid) {\n        return matchDoc(docid) && acceptDocs.get(docid);\n      }\n\n      @Override\n      public int length() {\n        return maxDoc;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public final Bits bits() {\n    return (acceptDocs == null) ? new Bits() {\n      public boolean get(int docid) {\n        return matchDoc(docid);\n      }\n\n      public int length() {\n        return maxDoc;\n      }\n    } : new Bits() {\n      public boolean get(int docid) {\n        return matchDoc(docid) && acceptDocs.get(docid);\n      }\n\n      public int length() {\n        return maxDoc;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldCacheDocIdSet#bits().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCacheDocIdSet#bits().mjava","sourceNew":"  @Override\n  public final Bits bits() {\n    return (acceptDocs == null) ? new Bits() {\n      @Override\n      public boolean get(int docid) {\n        return matchDoc(docid);\n      }\n\n      @Override\n      public int length() {\n        return maxDoc;\n      }\n    } : new Bits() {\n      @Override\n      public boolean get(int docid) {\n        return matchDoc(docid) && acceptDocs.get(docid);\n      }\n\n      @Override\n      public int length() {\n        return maxDoc;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public final Bits bits() {\n    return (acceptDocs == null) ? new Bits() {\n      public boolean get(int docid) {\n        return matchDoc(docid);\n      }\n\n      public int length() {\n        return maxDoc;\n      }\n    } : new Bits() {\n      public boolean get(int docid) {\n        return matchDoc(docid) && acceptDocs.get(docid);\n      }\n\n      public int length() {\n        return maxDoc;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9274621789ce990dbfef455dabdf026bb3184821","date":1400046684,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DocValuesDocIdSet#bits().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCacheDocIdSet#bits().mjava","sourceNew":"  @Override\n  public final Bits bits() {\n    return (acceptDocs == null) ? new Bits() {\n      @Override\n      public boolean get(int docid) {\n        return matchDoc(docid);\n      }\n\n      @Override\n      public int length() {\n        return maxDoc;\n      }\n    } : new Bits() {\n      @Override\n      public boolean get(int docid) {\n        return matchDoc(docid) && acceptDocs.get(docid);\n      }\n\n      @Override\n      public int length() {\n        return maxDoc;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public final Bits bits() {\n    return (acceptDocs == null) ? new Bits() {\n      @Override\n      public boolean get(int docid) {\n        return matchDoc(docid);\n      }\n\n      @Override\n      public int length() {\n        return maxDoc;\n      }\n    } : new Bits() {\n      @Override\n      public boolean get(int docid) {\n        return matchDoc(docid) && acceptDocs.get(docid);\n      }\n\n      @Override\n      public int length() {\n        return maxDoc;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DocValuesDocIdSet#bits().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCacheDocIdSet#bits().mjava","sourceNew":"  @Override\n  public final Bits bits() {\n    return (acceptDocs == null) ? new Bits() {\n      @Override\n      public boolean get(int docid) {\n        return matchDoc(docid);\n      }\n\n      @Override\n      public int length() {\n        return maxDoc;\n      }\n    } : new Bits() {\n      @Override\n      public boolean get(int docid) {\n        return matchDoc(docid) && acceptDocs.get(docid);\n      }\n\n      @Override\n      public int length() {\n        return maxDoc;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public final Bits bits() {\n    return (acceptDocs == null) ? new Bits() {\n      @Override\n      public boolean get(int docid) {\n        return matchDoc(docid);\n      }\n\n      @Override\n      public int length() {\n        return maxDoc;\n      }\n    } : new Bits() {\n      @Override\n      public boolean get(int docid) {\n        return matchDoc(docid) && acceptDocs.get(docid);\n      }\n\n      @Override\n      public int length() {\n        return maxDoc;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/DocValuesDocIdSet#bits().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldCacheDocIdSet#bits().mjava","sourceNew":"  @Override\n  public final Bits bits() {\n    return (acceptDocs == null) ? new Bits() {\n      @Override\n      public boolean get(int docid) {\n        return matchDoc(docid);\n      }\n\n      @Override\n      public int length() {\n        return maxDoc;\n      }\n    } : new Bits() {\n      @Override\n      public boolean get(int docid) {\n        return matchDoc(docid) && acceptDocs.get(docid);\n      }\n\n      @Override\n      public int length() {\n        return maxDoc;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public final Bits bits() {\n    return (acceptDocs == null) ? new Bits() {\n      @Override\n      public boolean get(int docid) {\n        return matchDoc(docid);\n      }\n\n      @Override\n      public int length() {\n        return maxDoc;\n      }\n    } : new Bits() {\n      @Override\n      public boolean get(int docid) {\n        return matchDoc(docid) && acceptDocs.get(docid);\n      }\n\n      @Override\n      public int length() {\n        return maxDoc;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7530de27b87b961b51f01bd1299b7004d46e8823"],"9274621789ce990dbfef455dabdf026bb3184821":["7530de27b87b961b51f01bd1299b7004d46e8823"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["7530de27b87b961b51f01bd1299b7004d46e8823","9274621789ce990dbfef455dabdf026bb3184821"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"56572ec06f1407c066d6b7399413178b33176cd8":["7530de27b87b961b51f01bd1299b7004d46e8823","93dd449115a9247533e44bab47e8429e5dccbc6d"],"7530de27b87b961b51f01bd1299b7004d46e8823":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["93dd449115a9247533e44bab47e8429e5dccbc6d"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"9274621789ce990dbfef455dabdf026bb3184821":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","9274621789ce990dbfef455dabdf026bb3184821","93dd449115a9247533e44bab47e8429e5dccbc6d","56572ec06f1407c066d6b7399413178b33176cd8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}