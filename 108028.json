{"path":"lucene/backwards/src/java/org/apache/lucene/search/SortField#toString().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/SortField#toString().mjava","pathOld":"backwards/src/java/org/apache/lucene/search/SortField#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder buffer = new StringBuilder();\n    switch (type) {\n      case SCORE:\n        buffer.append(\"<score>\");\n        break;\n\n      case DOC:\n        buffer.append(\"<doc>\");\n        break;\n\n      case STRING:\n        buffer.append(\"<string: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case STRING_VAL:\n        buffer.append(\"<string_val: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case BYTE:\n        buffer.append(\"<byte: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case SHORT:\n        buffer.append(\"<short: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case INT:\n        buffer.append(\"<int: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case LONG:\n        buffer.append(\"<long: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case FLOAT:\n        buffer.append(\"<float: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case DOUBLE:\n        buffer.append(\"<double: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case CUSTOM:\n        buffer.append(\"<custom:\\\"\").append(field).append(\"\\\": \").append(comparatorSource).append('>');\n        break;\n\n      default:\n        buffer.append(\"<???: \\\"\").append(field).append(\"\\\">\");\n        break;\n    }\n\n    if (locale != null) buffer.append('(').append(locale).append(')');\n    if (parser != null) buffer.append('(').append(parser).append(')');\n    if (reverse) buffer.append('!');\n\n    return buffer.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder buffer = new StringBuilder();\n    switch (type) {\n      case SCORE:\n        buffer.append(\"<score>\");\n        break;\n\n      case DOC:\n        buffer.append(\"<doc>\");\n        break;\n\n      case STRING:\n        buffer.append(\"<string: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case STRING_VAL:\n        buffer.append(\"<string_val: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case BYTE:\n        buffer.append(\"<byte: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case SHORT:\n        buffer.append(\"<short: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case INT:\n        buffer.append(\"<int: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case LONG:\n        buffer.append(\"<long: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case FLOAT:\n        buffer.append(\"<float: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case DOUBLE:\n        buffer.append(\"<double: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case CUSTOM:\n        buffer.append(\"<custom:\\\"\").append(field).append(\"\\\": \").append(comparatorSource).append('>');\n        break;\n\n      default:\n        buffer.append(\"<???: \\\"\").append(field).append(\"\\\">\");\n        break;\n    }\n\n    if (locale != null) buffer.append('(').append(locale).append(')');\n    if (parser != null) buffer.append('(').append(parser).append(')');\n    if (reverse) buffer.append('!');\n\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/search/SortField#toString().mjava","sourceNew":null,"sourceOld":"  @Override\n  public String toString() {\n    StringBuilder buffer = new StringBuilder();\n    switch (type) {\n      case SCORE:\n        buffer.append(\"<score>\");\n        break;\n\n      case DOC:\n        buffer.append(\"<doc>\");\n        break;\n\n      case STRING:\n        buffer.append(\"<string: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case STRING_VAL:\n        buffer.append(\"<string_val: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case BYTE:\n        buffer.append(\"<byte: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case SHORT:\n        buffer.append(\"<short: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case INT:\n        buffer.append(\"<int: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case LONG:\n        buffer.append(\"<long: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case FLOAT:\n        buffer.append(\"<float: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case DOUBLE:\n        buffer.append(\"<double: \\\"\").append(field).append(\"\\\">\");\n        break;\n\n      case CUSTOM:\n        buffer.append(\"<custom:\\\"\").append(field).append(\"\\\": \").append(comparatorSource).append('>');\n        break;\n\n      default:\n        buffer.append(\"<???: \\\"\").append(field).append(\"\\\">\");\n        break;\n    }\n\n    if (locale != null) buffer.append('(').append(locale).append(')');\n    if (parser != null) buffer.append('(').append(parser).append(')');\n    if (reverse) buffer.append('!');\n\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}