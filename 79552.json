{"path":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory.WhitelistHostChecker#implGetShardsWhitelist(String).mjava","commits":[{"id":"4d51e7db479b42602c7e23ba871b177387268179","date":1547581497,"type":0,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory.WhitelistHostChecker#implGetShardsWhitelist(String).mjava","pathOld":"/dev/null","sourceNew":"    final static Set<String> implGetShardsWhitelist(final String shardsWhitelist) {\n      if (shardsWhitelist != null && !shardsWhitelist.isEmpty()) {\n        return StrUtils.splitSmart(shardsWhitelist, ',')\n            .stream()\n            .map(String::trim)\n            .map((hostUrl) -> {\n              URL url;\n              try {\n                if (!hostUrl.startsWith(\"http://\") && !hostUrl.startsWith(\"https://\")) {\n                  // It doesn't really matter which protocol we set here because we are not going to use it. We just need a full URL.\n                  url = new URL(\"http://\" + hostUrl);\n                } else {\n                  url = new URL(hostUrl);\n                }\n              } catch (MalformedURLException e) {\n                throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Invalid URL syntax in \\\"\" + INIT_SHARDS_WHITELIST + \"\\\": \" + shardsWhitelist, e);\n              }\n              if (url.getHost() == null || url.getPort() < 0) {\n                throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Invalid URL syntax in \\\"\" + INIT_SHARDS_WHITELIST + \"\\\": \" + shardsWhitelist);\n              }\n              return url.getHost() + \":\" + url.getPort();\n            }).collect(Collectors.toSet());\n      }\n      return null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"833432c363468a5df50f87446a68015404b1fbcf","date":1572302961,"type":3,"author":"Houston Putman","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory.WhitelistHostChecker#implGetShardsWhitelist(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/HttpShardHandlerFactory.WhitelistHostChecker#implGetShardsWhitelist(String).mjava","sourceNew":"    final static Set<String> implGetShardsWhitelist(final String shardsWhitelist) {\n      if (shardsWhitelist != null && !shardsWhitelist.isEmpty()) {\n        return StrUtils.splitSmart(shardsWhitelist, ',')\n            .stream()\n            .map(String::trim)\n            .map((hostUrl) -> {\n              URL url;\n              try {\n                if (!hostUrl.startsWith(\"http://\") && !hostUrl.startsWith(\"https://\")) {\n                  // It doesn't really matter which protocol we set here because we are not going to use it. We just need a full URL.\n                  url = new URL(\"http://\" + hostUrl);\n                } else {\n                  url = new URL(hostUrl);\n                }\n              } catch (MalformedURLException e) {\n                throw new SolrException(ErrorCode.SERVER_ERROR, \"Invalid URL syntax in \\\"\" + INIT_SHARDS_WHITELIST + \"\\\": \" + shardsWhitelist, e);\n              }\n              if (url.getHost() == null || url.getPort() < 0) {\n                throw new SolrException(ErrorCode.SERVER_ERROR, \"Invalid URL syntax in \\\"\" + INIT_SHARDS_WHITELIST + \"\\\": \" + shardsWhitelist);\n              }\n              return url.getHost() + \":\" + url.getPort();\n            }).collect(Collectors.toSet());\n      }\n      return null;\n    }\n\n","sourceOld":"    final static Set<String> implGetShardsWhitelist(final String shardsWhitelist) {\n      if (shardsWhitelist != null && !shardsWhitelist.isEmpty()) {\n        return StrUtils.splitSmart(shardsWhitelist, ',')\n            .stream()\n            .map(String::trim)\n            .map((hostUrl) -> {\n              URL url;\n              try {\n                if (!hostUrl.startsWith(\"http://\") && !hostUrl.startsWith(\"https://\")) {\n                  // It doesn't really matter which protocol we set here because we are not going to use it. We just need a full URL.\n                  url = new URL(\"http://\" + hostUrl);\n                } else {\n                  url = new URL(hostUrl);\n                }\n              } catch (MalformedURLException e) {\n                throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Invalid URL syntax in \\\"\" + INIT_SHARDS_WHITELIST + \"\\\": \" + shardsWhitelist, e);\n              }\n              if (url.getHost() == null || url.getPort() < 0) {\n                throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Invalid URL syntax in \\\"\" + INIT_SHARDS_WHITELIST + \"\\\": \" + shardsWhitelist);\n              }\n              return url.getHost() + \":\" + url.getPort();\n            }).collect(Collectors.toSet());\n      }\n      return null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"833432c363468a5df50f87446a68015404b1fbcf":["4d51e7db479b42602c7e23ba871b177387268179"],"4d51e7db479b42602c7e23ba871b177387268179":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["833432c363468a5df50f87446a68015404b1fbcf"]},"commit2Childs":{"833432c363468a5df50f87446a68015404b1fbcf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4d51e7db479b42602c7e23ba871b177387268179":["833432c363468a5df50f87446a68015404b1fbcf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d51e7db479b42602c7e23ba871b177387268179"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}