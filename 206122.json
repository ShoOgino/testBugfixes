{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#equals(Object).mjava","commits":[{"id":"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25","date":1499961129,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    AutoScalingConfig that = (AutoScalingConfig) o;\n\n    if (!getPolicy().equals(that.getPolicy())) return false;\n    if (!triggers.equals(that.triggers)) return false;\n    return listeners.equals(that.listeners);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    AutoScalingConfig that = (AutoScalingConfig) o;\n\n    if (!getPolicy().equals(that.getPolicy())) return false;\n    if (!triggers.equals(that.triggers)) return false;\n    return listeners.equals(that.listeners);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    AutoScalingConfig that = (AutoScalingConfig) o;\n\n    if (!getPolicy().equals(that.getPolicy())) return false;\n    if (!triggers.equals(that.triggers)) return false;\n    return listeners.equals(that.listeners);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85212dad4ed576c7f7e6c165ee19e597b7b4efc8","date":1507997740,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#equals(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    AutoScalingConfig that = (AutoScalingConfig) o;\n\n    if (!getPolicy().equals(that.getPolicy())) return false;\n    if (!getTriggerConfigs().equals(that.getTriggerConfigs())) return false;\n    return getTriggerListenerConfigs().equals(that.getTriggerListenerConfigs());\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    AutoScalingConfig that = (AutoScalingConfig) o;\n\n    if (!getPolicy().equals(that.getPolicy())) return false;\n    if (!triggers.equals(that.triggers)) return false;\n    return listeners.equals(that.listeners);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15ba547dfc0dd0b670e678cb3db8e5d27c694420","date":1511865512,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#equals(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    AutoScalingConfig that = (AutoScalingConfig) o;\n\n    if (!getPolicy().equals(that.getPolicy())) return false;\n    if (!getTriggerConfigs().equals(that.getTriggerConfigs())) return false;\n    if (!getTriggerListenerConfigs().equals(that.getTriggerListenerConfigs())) return false;\n    return getProperties().equals(that.getProperties());\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    AutoScalingConfig that = (AutoScalingConfig) o;\n\n    if (!getPolicy().equals(that.getPolicy())) return false;\n    if (!getTriggerConfigs().equals(that.getTriggerConfigs())) return false;\n    return getTriggerListenerConfigs().equals(that.getTriggerListenerConfigs());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1aad05eeff7818b0833c02ac6b743aa72054963b","date":1512093122,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#equals(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    AutoScalingConfig that = (AutoScalingConfig) o;\n\n    if (!getPolicy().equals(that.getPolicy())) return false;\n    if (!getTriggerConfigs().equals(that.getTriggerConfigs())) return false;\n    if (!getTriggerListenerConfigs().equals(that.getTriggerListenerConfigs())) return false;\n    return getProperties().equals(that.getProperties());\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    AutoScalingConfig that = (AutoScalingConfig) o;\n\n    if (!getPolicy().equals(that.getPolicy())) return false;\n    if (!getTriggerConfigs().equals(that.getTriggerConfigs())) return false;\n    return getTriggerListenerConfigs().equals(that.getTriggerListenerConfigs());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"527adea7ce767368d7317339023e18e39702132e","date":1592163810,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#equals(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    AutoScalingConfig that = (AutoScalingConfig) o;\n\n    if (!getPolicy().equals(that.getPolicy())) return false;\n    if (!getTriggerConfigs().equals(that.getTriggerConfigs())) return false;\n    if (!getTriggerListenerConfigs().equals(that.getTriggerListenerConfigs())) return false;\n    return getProperties().equals(that.getProperties());\n  }\n//  @Override\n//  public int hashCode() {\n//    throw new UnsupportedOperationException(\"TODO unimplemented\");\n//  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    AutoScalingConfig that = (AutoScalingConfig) o;\n\n    if (!getPolicy().equals(that.getPolicy())) return false;\n    if (!getTriggerConfigs().equals(that.getTriggerConfigs())) return false;\n    if (!getTriggerListenerConfigs().equals(that.getTriggerListenerConfigs())) return false;\n    return getProperties().equals(that.getProperties());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ede8e86146cd2da4145e0e6872c4d69ea1a308c0","date":1593117356,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#equals(Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    AutoScalingConfig that = (AutoScalingConfig) o;\n\n    if (!getPolicy().equals(that.getPolicy())) return false;\n    if (!getTriggerConfigs().equals(that.getTriggerConfigs())) return false;\n    if (!getTriggerListenerConfigs().equals(that.getTriggerListenerConfigs())) return false;\n    return getProperties().equals(that.getProperties());\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    AutoScalingConfig that = (AutoScalingConfig) o;\n\n    if (!getPolicy().equals(that.getPolicy())) return false;\n    if (!getTriggerConfigs().equals(that.getTriggerConfigs())) return false;\n    if (!getTriggerListenerConfigs().equals(that.getTriggerListenerConfigs())) return false;\n    return getProperties().equals(that.getProperties());\n  }\n//  @Override\n//  public int hashCode() {\n//    throw new UnsupportedOperationException(\"TODO unimplemented\");\n//  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/AutoScalingConfig#equals(Object).mjava","sourceNew":null,"sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    AutoScalingConfig that = (AutoScalingConfig) o;\n\n    if (!getPolicy().equals(that.getPolicy())) return false;\n    if (!getTriggerConfigs().equals(that.getTriggerConfigs())) return false;\n    if (!getTriggerListenerConfigs().equals(that.getTriggerListenerConfigs())) return false;\n    return getProperties().equals(that.getProperties());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1aad05eeff7818b0833c02ac6b743aa72054963b":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8","15ba547dfc0dd0b670e678cb3db8e5d27c694420"],"c304e97e7c1d472bc70e801b35ee78583916c6cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25"],"15ba547dfc0dd0b670e678cb3db8e5d27c694420":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8"],"3f504512a03d978990cbff30db0522b354e846db":["ede8e86146cd2da4145e0e6872c4d69ea1a308c0"],"ede8e86146cd2da4145e0e6872c4d69ea1a308c0":["527adea7ce767368d7317339023e18e39702132e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"527adea7ce767368d7317339023e18e39702132e":["1aad05eeff7818b0833c02ac6b743aa72054963b"],"85212dad4ed576c7f7e6c165ee19e597b7b4efc8":["560c18d71dad43d675158783c3840f8c80d6d39c"],"560c18d71dad43d675158783c3840f8c80d6d39c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"1aad05eeff7818b0833c02ac6b743aa72054963b":["527adea7ce767368d7317339023e18e39702132e"],"15ba547dfc0dd0b670e678cb3db8e5d27c694420":["1aad05eeff7818b0833c02ac6b743aa72054963b"],"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ede8e86146cd2da4145e0e6872c4d69ea1a308c0":["3f504512a03d978990cbff30db0522b354e846db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c304e97e7c1d472bc70e801b35ee78583916c6cd","560c18d71dad43d675158783c3840f8c80d6d39c","219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25"],"85212dad4ed576c7f7e6c165ee19e597b7b4efc8":["1aad05eeff7818b0833c02ac6b743aa72054963b","15ba547dfc0dd0b670e678cb3db8e5d27c694420"],"527adea7ce767368d7317339023e18e39702132e":["ede8e86146cd2da4145e0e6872c4d69ea1a308c0"],"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"560c18d71dad43d675158783c3840f8c80d6d39c":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}