{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#getPattern(String).mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#getPattern(String).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#getPattern(String).mjava","sourceNew":"  protected static String getPattern(String word) {\n    StringBuffer pat = new StringBuffer();\n    int len = word.length();\n    for (int i = 0; i < len; i++) {\n      if (!Character.isDigit(word.charAt(i))) {\n        pat.append(word.charAt(i));\n      }\n    }\n    return pat.toString();\n  }\n\n","sourceOld":"  protected static String getPattern(String word) {\n    StringBuffer pat = new StringBuffer();\n    int len = word.length();\n    for (int i = 0; i < len; i++) {\n      if (!Character.isDigit(word.charAt(i))) {\n        pat.append(word.charAt(i));\n      }\n    }\n    return pat.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c","date":1254521470,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#getPattern(String).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#getPattern(String).mjava","sourceNew":"  protected static String getPattern(String word) {\n    StringBuilder pat = new StringBuilder();\n    int len = word.length();\n    for (int i = 0; i < len; i++) {\n      if (!Character.isDigit(word.charAt(i))) {\n        pat.append(word.charAt(i));\n      }\n    }\n    return pat.toString();\n  }\n\n","sourceOld":"  protected static String getPattern(String word) {\n    StringBuffer pat = new StringBuffer();\n    int len = word.length();\n    for (int i = 0; i < len; i++) {\n      if (!Character.isDigit(word.charAt(i))) {\n        pat.append(word.charAt(i));\n      }\n    }\n    return pat.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#getPattern(String).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser#getPattern(String).mjava","sourceNew":"  protected static String getPattern(String word) {\n    StringBuilder pat = new StringBuilder();\n    int len = word.length();\n    for (int i = 0; i < len; i++) {\n      if (!Character.isDigit(word.charAt(i))) {\n        pat.append(word.charAt(i));\n      }\n    }\n    return pat.toString();\n  }\n\n","sourceOld":"  protected static String getPattern(String word) {\n    StringBuilder pat = new StringBuilder();\n    int len = word.length();\n    for (int i = 0; i < len; i++) {\n      if (!Character.isDigit(word.charAt(i))) {\n        pat.append(word.charAt(i));\n      }\n    }\n    return pat.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}