{"path":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(Node).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(Node).mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(Node).mjava","sourceNew":"  private Similarity readSimilarity(Node node) throws XPathExpressionException {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"));\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory.getSimilarity();\n    }\n  }\n\n","sourceOld":"  private Similarity readSimilarity(Node node) throws XPathExpressionException {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"));\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory.getSimilarity();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(Node).mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(Node).mjava","sourceNew":"  private Similarity readSimilarity(Node node) throws XPathExpressionException {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"));\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory.getSimilarity();\n    }\n  }\n\n","sourceOld":"  private Similarity readSimilarity(Node node) throws XPathExpressionException {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"));\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory.getSimilarity();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(Node).mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(Node).mjava","sourceNew":"  private Similarity readSimilarity(Node node) throws XPathExpressionException {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"));\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory.getSimilarity();\n    }\n  }\n\n","sourceOld":"  private Similarity readSimilarity(Node node) throws XPathExpressionException {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"));\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory.getSimilarity();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f09ac0abea5345f77c4cf8d9f0d531da9139debc","date":1311103501,"type":5,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(ResourceLoader,Node).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#readSimilarity(Node).mjava","sourceNew":"  static Similarity readSimilarity(ResourceLoader loader, Node node) throws XPathExpressionException {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"));\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory.getSimilarity();\n    }\n  }\n\n","sourceOld":"  private Similarity readSimilarity(Node node) throws XPathExpressionException {\n    if (node==null) {\n      return null;\n    } else {\n      SimilarityFactory similarityFactory;\n      final Object obj = loader.newInstance(((Element) node).getAttribute(\"class\"));\n      if (obj instanceof SimilarityFactory) {\n        // configure a factory, get a similarity back\n        SolrParams params = SolrParams.toSolrParams(DOMUtil.childNodesToNamedList(node));\n        similarityFactory = (SimilarityFactory)obj;\n        similarityFactory.init(params);\n      } else {\n        // just like always, assume it's a Similarity and get a ClassCastException - reasonable error handling\n        similarityFactory = new SimilarityFactory() {\n          @Override\n          public Similarity getSimilarity() {\n            return (Similarity) obj;\n          }\n        };\n      }\n      return similarityFactory.getSimilarity();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f09ac0abea5345f77c4cf8d9f0d531da9139debc"],"f09ac0abea5345f77c4cf8d9f0d531da9139debc":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["f09ac0abea5345f77c4cf8d9f0d531da9139debc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f09ac0abea5345f77c4cf8d9f0d531da9139debc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}