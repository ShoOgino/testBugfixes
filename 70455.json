{"path":"src/java/org/apache/lucene/index/IndexFileNames#segmentFileName(String,String).mjava","commits":[{"id":"4d17492f26096e19670d947d1be5e9adc52b1d3d","date":1224931200,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexFileNames#segmentFileName(String,String).mjava","pathOld":"/dev/null","sourceNew":"  static String segmentFileName(String segmentName, String ext) {\n    return segmentName + \".\" + ext;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"775efee7f959e0dd3df7960b93767d9e00b78751","date":1267203159,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexFileNames#segmentFileName(String,String).mjava","pathOld":"src/java/org/apache/lucene/index/IndexFileNames#segmentFileName(String,String).mjava","sourceNew":"  /**\n   * Returns the file name that matches the given segment name and extension.\n   * This method takes care to return the full file name in the form\n   * &lt;segmentName&gt;.&lt;ext&gt;, therefore you don't need to prefix the\n   * extension with a '.'.<br>\n   * <b>NOTE:</b> .&lt;ext&gt; is added to the result file name only if\n   * <code>ext</code> is not empty.\n   */\n  public static final String segmentFileName(String segmentName, String ext) {\n    if (ext.length() > 0) {\n      return new StringBuilder(segmentName.length() + 1 + ext.length()).append(\n          segmentName).append('.').append(ext).toString();\n    } else {\n      return segmentName;\n    }\n  }\n\n","sourceOld":"  static String segmentFileName(String segmentName, String ext) {\n    return segmentName + \".\" + ext;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexFileNames#segmentFileName(String,String).mjava","pathOld":"src/java/org/apache/lucene/index/IndexFileNames#segmentFileName(String,String).mjava","sourceNew":"  /**\n   * Returns the file name that matches the given segment name and extension.\n   * This method takes care to return the full file name in the form\n   * &lt;segmentName&gt;.&lt;ext&gt;, therefore you don't need to prefix the\n   * extension with a '.'.<br>\n   * <b>NOTE:</b> .&lt;ext&gt; is added to the result file name only if\n   * <code>ext</code> is not empty.\n   */\n  public static final String segmentFileName(String segmentName, String ext) {\n    if (ext.length() > 0) {\n      return new StringBuilder(segmentName.length() + 1 + ext.length()).append(\n          segmentName).append('.').append(ext).toString();\n    } else {\n      return segmentName;\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns the file name that matches the given segment name and extension.\n   * This method takes care to return the full file name in the form\n   * &lt;segmentName&gt;.&lt;ext&gt;, therefore you don't need to prefix the\n   * extension with a '.'.<br>\n   * <b>NOTE:</b> .&lt;ext&gt; is added to the result file name only if\n   * <code>ext</code> is not empty.\n   */\n  public static final String segmentFileName(String segmentName, String ext) {\n    if (ext.length() > 0) {\n      return new StringBuilder(segmentName.length() + 1 + ext.length()).append(\n          segmentName).append('.').append(ext).toString();\n    } else {\n      return segmentName;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"775efee7f959e0dd3df7960b93767d9e00b78751":["4d17492f26096e19670d947d1be5e9adc52b1d3d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d17492f26096e19670d947d1be5e9adc52b1d3d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["775efee7f959e0dd3df7960b93767d9e00b78751"]},"commit2Childs":{"775efee7f959e0dd3df7960b93767d9e00b78751":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d17492f26096e19670d947d1be5e9adc52b1d3d"],"4d17492f26096e19670d947d1be5e9adc52b1d3d":["775efee7f959e0dd3df7960b93767d9e00b78751"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}