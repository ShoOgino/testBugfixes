{"path":"solr/core/src/java/org/apache/solr/handler/admin/MetricsHistoryHandler#collectMetrics().mjava","commits":[{"id":"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a","date":1527582939,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/MetricsHistoryHandler#collectMetrics().mjava","pathOld":"/dev/null","sourceNew":"  private void collectMetrics() {\n    log.debug(\"-- collectMetrics\");\n    try {\n      checkSystemCollection();\n    } catch (Exception e) {\n      log.warn(\"Error checking for .system collection, keeping metrics history in memory\", e);\n      factory.setPersistent(false);\n    }\n    // get metrics\n    collectLocalReplicaMetrics();\n    collectGlobalMetrics();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b11c50db1921cb554d8de6fdb3a310b4db3b6c2","date":1555057273,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/MetricsHistoryHandler#collectMetrics().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/MetricsHistoryHandler#collectMetrics().mjava","sourceNew":"  private void collectMetrics() {\n    log.debug(\"-- collectMetrics\");\n    // Make sure we are a solr server thread, so we can use PKI auth, SOLR-12860\n    // This is a workaround since we could not instrument the ScheduledThreadPoolExecutor in ExecutorUtils\n    ExecutorUtil.setServerThreadFlag(true);\n    try {\n      checkSystemCollection();\n    } catch (Exception e) {\n      log.warn(\"Error checking for .system collection, keeping metrics history in memory\", e);\n      factory.setPersistent(false);\n    }\n    // get metrics\n    collectLocalReplicaMetrics();\n    collectGlobalMetrics();\n    ExecutorUtil.setServerThreadFlag(false);\n  }\n\n","sourceOld":"  private void collectMetrics() {\n    log.debug(\"-- collectMetrics\");\n    try {\n      checkSystemCollection();\n    } catch (Exception e) {\n      log.warn(\"Error checking for .system collection, keeping metrics history in memory\", e);\n      factory.setPersistent(false);\n    }\n    // get metrics\n    collectLocalReplicaMetrics();\n    collectGlobalMetrics();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6b11c50db1921cb554d8de6fdb3a310b4db3b6c2"],"6b11c50db1921cb554d8de6fdb3a310b4db3b6c2":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"]},"commit2Childs":{"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["6b11c50db1921cb554d8de6fdb3a310b4db3b6c2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"6b11c50db1921cb554d8de6fdb3a310b4db3b6c2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}