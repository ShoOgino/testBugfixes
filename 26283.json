{"path":"lucene/src/test/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","commits":[{"id":"be20f9fed1d3edcb1c84abcc39df87a90fab22df","date":1275590285,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","pathOld":"/dev/null","sourceNew":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n      //buffer[i] = (char) (97 + r.nextInt(26));\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"163fe85a71d778fd2b7747f65ca27b54829e2e57","date":1279898785,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","sourceNew":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n\n      int t = r.nextInt(5);\n\n      //buffer[i] = (char) (97 + r.nextInt(26));\n\n      /*\n      if (0 == t && i < end - 1) {\n        // hi\n        buffer[i++] = (char) 0xd800;\n        // lo\n        buffer[i] = (char) 0xdc00;\n      } else if (t <= 3) {\n        buffer[i] = 'a';\n      }  else if (4 == t) {\n        buffer[i] = 0xe000;\n      }\n      */\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n      //buffer[i] = (char) (97 + r.nextInt(26));\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b103252dee6afa1b6d7a622c773d178788eb85a","date":1280180143,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","sourceNew":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n      //buffer[i] = (char) (97 + r.nextInt(26));\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3242a09f703274d3b9283f2064a1a33064b53a1b","date":1280263474,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","sourceNew":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n      //buffer[i] = (char) (97 + r.nextInt(26));\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57d5dad190acf63cb17e05df3882de97b1105c1c","date":1280877729,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","sourceNew":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      // nocommit\n      //buffer[i] = (char) nextInt(r, 0x41, 0x61);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32dc7337f7ea413653ffe4f522bf8cc7ef86ab82","date":1280878018,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","sourceNew":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      // nocommit\n      //buffer[i] = (char) nextInt(r, 0x41, 0x61);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","sourceNew":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","sourceNew":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#randomUnicodeString(Random,int).mjava","sourceNew":"  /**\n   * Returns a random string up to a certain length.\n   */\n  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","sourceOld":"  public static String randomUnicodeString(Random r, int maxLength) {\n    final int end = r.nextInt(maxLength);\n    if (end == 0) {\n      // allow 0 length\n      return \"\";\n    }\n    final char[] buffer = new char[end];\n    for (int i = 0; i < end; i++) {\n      int t = r.nextInt(5);\n\n      if (0 == t && i < end - 1) {\n        // Make a surrogate pair\n        // High surrogate\n        buffer[i++] = (char) nextInt(r, 0xd800, 0xdbff);\n        // Low surrogate\n        buffer[i] = (char) nextInt(r, 0xdc00, 0xdfff);\n      }\n      else if (t <= 1) buffer[i] = (char) r.nextInt(0x80);\n      else if (2 == t) buffer[i] = (char) nextInt(r, 0x80, 0x800);\n      else if (3 == t) buffer[i] = (char) nextInt(r, 0x800, 0xd7ff);\n      else if (4 == t) buffer[i] = (char) nextInt(r, 0xe000, 0xffff);\n    }\n    return new String(buffer, 0, end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"be20f9fed1d3edcb1c84abcc39df87a90fab22df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["be20f9fed1d3edcb1c84abcc39df87a90fab22df","4b103252dee6afa1b6d7a622c773d178788eb85a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["be20f9fed1d3edcb1c84abcc39df87a90fab22df","163fe85a71d778fd2b7747f65ca27b54829e2e57"],"163fe85a71d778fd2b7747f65ca27b54829e2e57":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["32dc7337f7ea413653ffe4f522bf8cc7ef86ab82","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57d5dad190acf63cb17e05df3882de97b1105c1c":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"32dc7337f7ea413653ffe4f522bf8cc7ef86ab82":["57d5dad190acf63cb17e05df3882de97b1105c1c"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["3242a09f703274d3b9283f2064a1a33064b53a1b","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["32dc7337f7ea413653ffe4f522bf8cc7ef86ab82"]},"commit2Childs":{"be20f9fed1d3edcb1c84abcc39df87a90fab22df":["3242a09f703274d3b9283f2064a1a33064b53a1b","4b103252dee6afa1b6d7a622c773d178788eb85a","163fe85a71d778fd2b7747f65ca27b54829e2e57"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["3242a09f703274d3b9283f2064a1a33064b53a1b","57d5dad190acf63cb17e05df3882de97b1105c1c"],"163fe85a71d778fd2b7747f65ca27b54829e2e57":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"],"57d5dad190acf63cb17e05df3882de97b1105c1c":["32dc7337f7ea413653ffe4f522bf8cc7ef86ab82"],"32dc7337f7ea413653ffe4f522bf8cc7ef86ab82":["29ef99d61cda9641b6250bf9567329a6e65f901d","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}