{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrHttpRequestRetryHandler#SolrHttpRequestRetryHandler(int,Collection[Class[#-extends-IOException]]).mjava","commits":[{"id":"036a8cf905384ab37a3bc5c07283c3b44b773585","date":1452195789,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrHttpRequestRetryHandler#SolrHttpRequestRetryHandler(int,Collection[Class[#-extends-IOException]]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create the request retry handler using the specified IOException classes\n   *\n   * @param retryCount\n   *          how many times to retry; 0 means no retries\n   *          true if it's OK to retry requests that have been sent\n   * @param clazzes\n   *          the IOException types that should not be retried\n   */\n  protected SolrHttpRequestRetryHandler(final int retryCount, final Collection<Class<? extends IOException>> clazzes) {\n    super();\n    this.retryCount = retryCount;\n    this.nonRetriableClasses = new HashSet<Class<? extends IOException>>();\n    for (final Class<? extends IOException> clazz : clazzes) {\n      this.nonRetriableClasses.add(clazz);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"520e631af4fc5d80503526ad55712df42cab245b","date":1578056977,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrHttpRequestRetryHandler#SolrHttpRequestRetryHandler(int,Collection[Class[#-extends-IOException]]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrHttpRequestRetryHandler#SolrHttpRequestRetryHandler(int,Collection[Class[#-extends-IOException]]).mjava","sourceNew":"  /**\n   * Create the request retry handler using the specified IOException classes\n   *\n   * @param retryCount\n   *          how many times to retry; 0 means no retries\n   *          true if it's OK to retry requests that have been sent\n   * @param clazzes\n   *          the IOException types that should not be retried\n   */\n  protected SolrHttpRequestRetryHandler(final int retryCount, final Collection<Class<? extends IOException>> clazzes) {\n    super();\n    this.retryCount = retryCount;\n    this.nonRetriableClasses = new HashSet<>();\n    for (final Class<? extends IOException> clazz : clazzes) {\n      this.nonRetriableClasses.add(clazz);\n    }\n  }\n\n","sourceOld":"  /**\n   * Create the request retry handler using the specified IOException classes\n   *\n   * @param retryCount\n   *          how many times to retry; 0 means no retries\n   *          true if it's OK to retry requests that have been sent\n   * @param clazzes\n   *          the IOException types that should not be retried\n   */\n  protected SolrHttpRequestRetryHandler(final int retryCount, final Collection<Class<? extends IOException>> clazzes) {\n    super();\n    this.retryCount = retryCount;\n    this.nonRetriableClasses = new HashSet<Class<? extends IOException>>();\n    for (final Class<? extends IOException> clazz : clazzes) {\n      this.nonRetriableClasses.add(clazz);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3853758154105b7adcbf807a0b35f5dc21fdcbde","date":1578057143,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrHttpRequestRetryHandler#SolrHttpRequestRetryHandler(int,Collection[Class[#-extends-IOException]]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrHttpRequestRetryHandler#SolrHttpRequestRetryHandler(int,Collection[Class[#-extends-IOException]]).mjava","sourceNew":"  /**\n   * Create the request retry handler using the specified IOException classes\n   *\n   * @param retryCount\n   *          how many times to retry; 0 means no retries\n   *          true if it's OK to retry requests that have been sent\n   * @param clazzes\n   *          the IOException types that should not be retried\n   */\n  protected SolrHttpRequestRetryHandler(final int retryCount, final Collection<Class<? extends IOException>> clazzes) {\n    super();\n    this.retryCount = retryCount;\n    this.nonRetriableClasses = new HashSet<>();\n    for (final Class<? extends IOException> clazz : clazzes) {\n      this.nonRetriableClasses.add(clazz);\n    }\n  }\n\n","sourceOld":"  /**\n   * Create the request retry handler using the specified IOException classes\n   *\n   * @param retryCount\n   *          how many times to retry; 0 means no retries\n   *          true if it's OK to retry requests that have been sent\n   * @param clazzes\n   *          the IOException types that should not be retried\n   */\n  protected SolrHttpRequestRetryHandler(final int retryCount, final Collection<Class<? extends IOException>> clazzes) {\n    super();\n    this.retryCount = retryCount;\n    this.nonRetriableClasses = new HashSet<Class<? extends IOException>>();\n    for (final Class<? extends IOException> clazz : clazzes) {\n      this.nonRetriableClasses.add(clazz);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"036a8cf905384ab37a3bc5c07283c3b44b773585":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3853758154105b7adcbf807a0b35f5dc21fdcbde":["036a8cf905384ab37a3bc5c07283c3b44b773585"],"520e631af4fc5d80503526ad55712df42cab245b":["036a8cf905384ab37a3bc5c07283c3b44b773585"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3853758154105b7adcbf807a0b35f5dc21fdcbde"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["036a8cf905384ab37a3bc5c07283c3b44b773585"],"036a8cf905384ab37a3bc5c07283c3b44b773585":["3853758154105b7adcbf807a0b35f5dc21fdcbde","520e631af4fc5d80503526ad55712df42cab245b"],"3853758154105b7adcbf807a0b35f5dc21fdcbde":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"520e631af4fc5d80503526ad55712df42cab245b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["520e631af4fc5d80503526ad55712df42cab245b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}