{"path":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase#runCopyFrom(Directory,Directory).mjava","commits":[{"id":"f3adea0022cffaaa592081efed775a7b8bf86b51","date":1532414870,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase#runCopyFrom(Directory,Directory).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase#testCopyFromDestination().mjava","sourceNew":"  private void runCopyFrom(Directory source, Directory dest) throws IOException {\n    IndexOutput output = source.createOutput(\"foobar\", newIOContext(random()));\n\n    byte bytes[] = RandomBytes.randomBytesOfLength(random(), 20000);\n    output.writeBytes(bytes, bytes.length);\n    output.close();\n\n    dest.copyFrom(source, \"foobar\", \"foobaz\", newIOContext(random()));\n    assertTrue(slowFileExists(dest, \"foobaz\"));\n\n    IndexInput input = dest.openInput(\"foobaz\", newIOContext(random()));\n    byte bytes2[] = new byte[bytes.length];\n    input.readBytes(bytes2, 0, bytes2.length);\n    input.close();\n\n    assertArrayEquals(bytes, bytes2);\n  }\n\n","sourceOld":"  public void testCopyFromDestination() throws Exception {\n    Directory source = newDirectory();\n    Directory dest = getDirectory(createTempDir(\"testCopyDestination\"));\n    \n    IndexOutput output = source.createOutput(\"foobar\", newIOContext(random()));\n    int numBytes = random().nextInt(20000);\n    byte bytes[] = new byte[numBytes];\n    random().nextBytes(bytes);\n    output.writeBytes(bytes, bytes.length);\n    output.close();\n    \n    dest.copyFrom(source, \"foobar\", \"foobaz\", newIOContext(random()));\n    assertTrue(slowFileExists(dest, \"foobaz\"));\n    \n    IndexInput input = dest.openInput(\"foobaz\", newIOContext(random()));\n    byte bytes2[] = new byte[numBytes];\n    input.readBytes(bytes2, 0, bytes2.length);\n    assertEquals(input.length(), numBytes);\n    input.close();\n    \n    assertArrayEquals(bytes, bytes2);\n    \n    IOUtils.close(source, dest);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f3adea0022cffaaa592081efed775a7b8bf86b51":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f3adea0022cffaaa592081efed775a7b8bf86b51"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f3adea0022cffaaa592081efed775a7b8bf86b51"],"f3adea0022cffaaa592081efed775a7b8bf86b51":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}