{"path":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#newCloneInstance(String,ByteBuffer[],int,long).mjava","commits":[{"id":"f986320666d675a260eb4529a0c3c40595731441","date":1401729997,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#newCloneInstance(String,ByteBuffer[],int,long).mjava","pathOld":"/dev/null","sourceNew":"  /** Factory method that creates a suitable implementation of this class for the given ByteBuffers. */\n  @SuppressWarnings(\"resource\")\n  protected ByteBufferIndexInput newCloneInstance(String newResourceDescription, ByteBuffer[] newBuffers, int offset, long length) {\n    if (newBuffers.length == 1) {\n      newBuffers[0].position(offset);\n      return new SingleBufferImpl(newResourceDescription, newBuffers[0].slice(), length, chunkSizePower, this.cleaner, this.clones);\n    } else {\n      return (offset == 0) ?\n        new DefaultImpl(newResourceDescription, newBuffers, length, chunkSizePower, cleaner, clones) :\n        new WithOffsetImpl(newResourceDescription, newBuffers, offset, length, chunkSizePower, cleaner, clones);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9","date":1434069165,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#newCloneInstance(String,ByteBuffer[],int,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#newCloneInstance(String,ByteBuffer[],int,long).mjava","sourceNew":"  /** Factory method that creates a suitable implementation of this class for the given ByteBuffers. */\n  @SuppressWarnings(\"resource\")\n  protected ByteBufferIndexInput newCloneInstance(String newResourceDescription, ByteBuffer[] newBuffers, int offset, long length) {\n    if (newBuffers.length == 1) {\n      newBuffers[0].position(offset);\n      return new SingleBufferImpl(newResourceDescription, newBuffers[0].slice(), length, chunkSizePower, this.cleaner, this.clones);\n    } else {\n      return new MultiBufferImpl(newResourceDescription, newBuffers, offset, length, chunkSizePower, cleaner, clones);\n    }\n  }\n\n","sourceOld":"  /** Factory method that creates a suitable implementation of this class for the given ByteBuffers. */\n  @SuppressWarnings(\"resource\")\n  protected ByteBufferIndexInput newCloneInstance(String newResourceDescription, ByteBuffer[] newBuffers, int offset, long length) {\n    if (newBuffers.length == 1) {\n      newBuffers[0].position(offset);\n      return new SingleBufferImpl(newResourceDescription, newBuffers[0].slice(), length, chunkSizePower, this.cleaner, this.clones);\n    } else {\n      return (offset == 0) ?\n        new DefaultImpl(newResourceDescription, newBuffers, length, chunkSizePower, cleaner, clones) :\n        new WithOffsetImpl(newResourceDescription, newBuffers, offset, length, chunkSizePower, cleaner, clones);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71f8255d67554b78ea0a26a5cdb916a759261aab","date":1471024473,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#newCloneInstance(String,ByteBuffer[],int,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#newCloneInstance(String,ByteBuffer[],int,long).mjava","sourceNew":"  /** Factory method that creates a suitable implementation of this class for the given ByteBuffers. */\n  @SuppressWarnings(\"resource\")\n  protected ByteBufferIndexInput newCloneInstance(String newResourceDescription, ByteBuffer[] newBuffers, int offset, long length) {\n    if (newBuffers.length == 1) {\n      newBuffers[0].position(offset);\n      return new SingleBufferImpl(newResourceDescription, newBuffers[0].slice(), length, chunkSizePower, this.guard);\n    } else {\n      return new MultiBufferImpl(newResourceDescription, newBuffers, offset, length, chunkSizePower, guard);\n    }\n  }\n\n","sourceOld":"  /** Factory method that creates a suitable implementation of this class for the given ByteBuffers. */\n  @SuppressWarnings(\"resource\")\n  protected ByteBufferIndexInput newCloneInstance(String newResourceDescription, ByteBuffer[] newBuffers, int offset, long length) {\n    if (newBuffers.length == 1) {\n      newBuffers[0].position(offset);\n      return new SingleBufferImpl(newResourceDescription, newBuffers[0].slice(), length, chunkSizePower, this.cleaner, this.clones);\n    } else {\n      return new MultiBufferImpl(newResourceDescription, newBuffers, offset, length, chunkSizePower, cleaner, clones);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#newCloneInstance(String,ByteBuffer[],int,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#newCloneInstance(String,ByteBuffer[],int,long).mjava","sourceNew":"  /** Factory method that creates a suitable implementation of this class for the given ByteBuffers. */\n  @SuppressWarnings(\"resource\")\n  protected ByteBufferIndexInput newCloneInstance(String newResourceDescription, ByteBuffer[] newBuffers, int offset, long length) {\n    if (newBuffers.length == 1) {\n      newBuffers[0].position(offset);\n      return new SingleBufferImpl(newResourceDescription, newBuffers[0].slice(), length, chunkSizePower, this.guard);\n    } else {\n      return new MultiBufferImpl(newResourceDescription, newBuffers, offset, length, chunkSizePower, guard);\n    }\n  }\n\n","sourceOld":"  /** Factory method that creates a suitable implementation of this class for the given ByteBuffers. */\n  @SuppressWarnings(\"resource\")\n  protected ByteBufferIndexInput newCloneInstance(String newResourceDescription, ByteBuffer[] newBuffers, int offset, long length) {\n    if (newBuffers.length == 1) {\n      newBuffers[0].position(offset);\n      return new SingleBufferImpl(newResourceDescription, newBuffers[0].slice(), length, chunkSizePower, this.cleaner, this.clones);\n    } else {\n      return new MultiBufferImpl(newResourceDescription, newBuffers, offset, length, chunkSizePower, cleaner, clones);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#newCloneInstance(String,ByteBuffer[],int,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#newCloneInstance(String,ByteBuffer[],int,long).mjava","sourceNew":"  /** Factory method that creates a suitable implementation of this class for the given ByteBuffers. */\n  @SuppressWarnings(\"resource\")\n  protected ByteBufferIndexInput newCloneInstance(String newResourceDescription, ByteBuffer[] newBuffers, int offset, long length) {\n    if (newBuffers.length == 1) {\n      newBuffers[0].position(offset);\n      return new SingleBufferImpl(newResourceDescription, newBuffers[0].slice(), length, chunkSizePower, this.guard);\n    } else {\n      return new MultiBufferImpl(newResourceDescription, newBuffers, offset, length, chunkSizePower, guard);\n    }\n  }\n\n","sourceOld":"  /** Factory method that creates a suitable implementation of this class for the given ByteBuffers. */\n  @SuppressWarnings(\"resource\")\n  protected ByteBufferIndexInput newCloneInstance(String newResourceDescription, ByteBuffer[] newBuffers, int offset, long length) {\n    if (newBuffers.length == 1) {\n      newBuffers[0].position(offset);\n      return new SingleBufferImpl(newResourceDescription, newBuffers[0].slice(), length, chunkSizePower, this.cleaner, this.clones);\n    } else {\n      return new MultiBufferImpl(newResourceDescription, newBuffers, offset, length, chunkSizePower, cleaner, clones);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#newCloneInstance(String,ByteBuffer[],int,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ByteBufferIndexInput#newCloneInstance(String,ByteBuffer[],int,long).mjava","sourceNew":"  /** Factory method that creates a suitable implementation of this class for the given ByteBuffers. */\n  @SuppressWarnings(\"resource\")\n  protected ByteBufferIndexInput newCloneInstance(String newResourceDescription, ByteBuffer[] newBuffers, int offset, long length) {\n    if (newBuffers.length == 1) {\n      newBuffers[0].position(offset);\n      return new SingleBufferImpl(newResourceDescription, newBuffers[0].slice(), length, chunkSizePower, this.guard);\n    } else {\n      return new MultiBufferImpl(newResourceDescription, newBuffers, offset, length, chunkSizePower, guard);\n    }\n  }\n\n","sourceOld":"  /** Factory method that creates a suitable implementation of this class for the given ByteBuffers. */\n  @SuppressWarnings(\"resource\")\n  protected ByteBufferIndexInput newCloneInstance(String newResourceDescription, ByteBuffer[] newBuffers, int offset, long length) {\n    if (newBuffers.length == 1) {\n      newBuffers[0].position(offset);\n      return new SingleBufferImpl(newResourceDescription, newBuffers[0].slice(), length, chunkSizePower, this.cleaner, this.clones);\n    } else {\n      return new MultiBufferImpl(newResourceDescription, newBuffers, offset, length, chunkSizePower, cleaner, clones);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9":["f986320666d675a260eb4529a0c3c40595731441"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"f986320666d675a260eb4529a0c3c40595731441":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9","71f8255d67554b78ea0a26a5cdb916a759261aab"],"71f8255d67554b78ea0a26a5cdb916a759261aab":["96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["403d05f7f8d69b65659157eff1bc1d2717f04c66"]},"commit2Childs":{"96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9":["403d05f7f8d69b65659157eff1bc1d2717f04c66","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","71f8255d67554b78ea0a26a5cdb916a759261aab","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f986320666d675a260eb4529a0c3c40595731441":["96d86741fa6ad3b3a96fbf99f5e41bc74784c5f9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f986320666d675a260eb4529a0c3c40595731441"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"71f8255d67554b78ea0a26a5cdb916a759261aab":["2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}