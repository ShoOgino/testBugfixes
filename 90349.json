{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#Tag().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#Tag().mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#Tag().mjava","sourceNew":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase(Locale.ENGLISH);\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","sourceOld":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase(Locale.ENGLISH);\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9279c7cd47f17e1e8b674a3741ff5f040bc680be","date":1341675760,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#Tag().mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#Tag().mjava","sourceNew":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase(Locale.ROOT);\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase(Locale.ROOT);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase(Locale.ROOT);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","sourceOld":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase(Locale.ENGLISH);\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#Tag().mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#Tag().mjava","sourceNew":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase(Locale.ROOT);\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase(Locale.ROOT);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase(Locale.ROOT);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","sourceOld":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase(Locale.ENGLISH);\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#Tag().mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#Tag().mjava","sourceNew":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase(Locale.ROOT);\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase(Locale.ROOT);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase(Locale.ROOT);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","sourceOld":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase(Locale.ENGLISH);\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91e8768e9769f9e5175b1d99dcd27600bc9d4374","date":1342373687,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#Tag().mjava","sourceNew":null,"sourceOld":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase(Locale.ROOT);\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase(Locale.ROOT);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase(Locale.ROOT);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#Tag().mjava","sourceNew":null,"sourceOld":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase(Locale.ENGLISH);\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase(Locale.ENGLISH);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/demohtml/HTMLParser#Tag().mjava","sourceNew":null,"sourceOld":"  final public void Tag() throws ParseException, IOException {\n  Token t1, t2;\n  boolean inImg = false;\n    t1 = jj_consume_token(TagName);\n   String tagName = t1.image.toLowerCase(Locale.ROOT);\n   if(Tags.WS_ELEMS.contains(tagName) ) {\n      addSpace();\n    }\n    inTitle = tagName.equalsIgnoreCase(\"<title\"); // keep track if in <TITLE>\n    inMetaTag = tagName.equalsIgnoreCase(\"<META\"); // keep track if in <META>\n    inStyle = tagName.equalsIgnoreCase(\"<STYLE\"); // keep track if in <STYLE>\n    inImg = tagName.equalsIgnoreCase(\"<img\");     // keep track if in <IMG>\n\n    label_2:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgName:\n        ;\n        break;\n      default:\n        jj_la1[2] = jj_gen;\n        break label_2;\n      }\n      t1 = jj_consume_token(ArgName);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ArgEquals:\n        jj_consume_token(ArgEquals);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case ArgValue:\n        case ArgQuote1:\n        case ArgQuote2:\n          t2 = ArgValue();\n       if (inImg && t1.image.equalsIgnoreCase(\"alt\") && t2 != null)\n         addText(\"[\" + t2.image + \"]\");\n\n        if(inMetaTag &&\n                        (  t1.image.equalsIgnoreCase(\"name\") ||\n                           t1.image.equalsIgnoreCase(\"HTTP-EQUIV\")\n                        )\n           && t2 != null)\n        {\n                currentMetaTag=t2.image.toLowerCase(Locale.ROOT);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n        if(inMetaTag && t1.image.equalsIgnoreCase(\"content\") && t2 !=\nnull)\n        {\n                currentMetaContent=t2.image.toLowerCase(Locale.ROOT);\n                if(currentMetaTag != null && currentMetaContent != null) {\n                addMetaTag();\n                }\n        }\n          break;\n        default:\n          jj_la1[3] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[4] = jj_gen;\n        ;\n      }\n    }\n    jj_consume_token(TagEnd);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["46d8ada1fff8d18cb197c38c7983225162599948","91e8768e9769f9e5175b1d99dcd27600bc9d4374"],"91e8768e9769f9e5175b1d99dcd27600bc9d4374":["2acf500f78aa12b92e371fd89c719291986b6b90"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","91e8768e9769f9e5175b1d99dcd27600bc9d4374"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2acf500f78aa12b92e371fd89c719291986b6b90":["b89678825b68eccaf09e6ab71675fc0b0af1e099","9279c7cd47f17e1e8b674a3741ff5f040bc680be"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["91e8768e9769f9e5175b1d99dcd27600bc9d4374"],"46d8ada1fff8d18cb197c38c7983225162599948":["b89678825b68eccaf09e6ab71675fc0b0af1e099","2acf500f78aa12b92e371fd89c719291986b6b90"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fe33227f6805edab2036cbb80645cc4e2d1fa424","9279c7cd47f17e1e8b674a3741ff5f040bc680be","2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"91e8768e9769f9e5175b1d99dcd27600bc9d4374":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"9279c7cd47f17e1e8b674a3741ff5f040bc680be":["2acf500f78aa12b92e371fd89c719291986b6b90"],"2acf500f78aa12b92e371fd89c719291986b6b90":["91e8768e9769f9e5175b1d99dcd27600bc9d4374","46d8ada1fff8d18cb197c38c7983225162599948"],"46d8ada1fff8d18cb197c38c7983225162599948":["aba371508186796cc6151d8223a5b4e16d02e26e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}