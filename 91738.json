{"path":"src/java/org/apache/lucene/index/FieldsReader#skipField(boolean,boolean).mjava","commits":[{"id":"12d40284fd9481f79444bc63bc5d13847caddd3d","date":1149902602,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldsReader#skipField(boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Skip the field.  We still have to read some of the information about the field, but can skip past the actual content.\n   * This will have the most payoff on large fields.\n   */\n  private void skipField(boolean binary, boolean compressed) throws IOException {\n\n    int toRead = fieldsStream.readVInt();\n\n    if (binary || compressed) {\n      long pointer = fieldsStream.getFilePointer();\n      fieldsStream.seek(pointer + toRead);\n    } else {\n      //We need to skip chars.  This will slow us down, but still better\n      fieldsStream.skipChars(toRead);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f9ca773178dc09e3e8fb1c66dde5f8dbd6f4644","date":1170990980,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldsReader#skipField(boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/FieldsReader#skipField(boolean,boolean).mjava","sourceNew":"  /**\n   * Skip the field.  We still have to read some of the information about the field, but can skip past the actual content.\n   * This will have the most payoff on large fields.\n   */\n  private void skipField(boolean binary, boolean compressed) throws IOException {\n    skipField(binary, compressed, fieldsStream.readVInt());\n  }\n\n","sourceOld":"  /**\n   * Skip the field.  We still have to read some of the information about the field, but can skip past the actual content.\n   * This will have the most payoff on large fields.\n   */\n  private void skipField(boolean binary, boolean compressed) throws IOException {\n\n    int toRead = fieldsStream.readVInt();\n\n    if (binary || compressed) {\n      long pointer = fieldsStream.getFilePointer();\n      fieldsStream.seek(pointer + toRead);\n    } else {\n      //We need to skip chars.  This will slow us down, but still better\n      fieldsStream.skipChars(toRead);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e0c804f7aa477229414a7e12882af490c241f64d","date":1254963299,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldsReader#skipField(boolean).mjava","pathOld":"src/java/org/apache/lucene/index/FieldsReader#skipField(boolean,boolean).mjava","sourceNew":"  /**\n   * Skip the field.  We still have to read some of the information about the field, but can skip past the actual content.\n   * This will have the most payoff on large fields.\n   */\n  private void skipField(boolean binary) throws IOException {\n    skipField(binary, fieldsStream.readVInt());\n  }\n\n","sourceOld":"  /**\n   * Skip the field.  We still have to read some of the information about the field, but can skip past the actual content.\n   * This will have the most payoff on large fields.\n   */\n  private void skipField(boolean binary, boolean compressed) throws IOException {\n    skipField(binary, compressed, fieldsStream.readVInt());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab50480bb5a7c7abad9762badcf87f8b69efeabe","date":1256591817,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/FieldsReader#skipField(boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/FieldsReader#skipField(boolean).mjava","sourceNew":"  /**\n   * Skip the field.  We still have to read some of the information about the field, but can skip past the actual content.\n   * This will have the most payoff on large fields.\n   */\n  private void skipField(boolean binary, boolean compressed) throws IOException {\n    skipField(binary, compressed, fieldsStream.readVInt());\n  }\n\n","sourceOld":"  /**\n   * Skip the field.  We still have to read some of the information about the field, but can skip past the actual content.\n   * This will have the most payoff on large fields.\n   */\n  private void skipField(boolean binary) throws IOException {\n    skipField(binary, fieldsStream.readVInt());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsReader#skipField(boolean,boolean).mjava","pathOld":"src/java/org/apache/lucene/index/FieldsReader#skipField(boolean,boolean).mjava","sourceNew":"  /**\n   * Skip the field.  We still have to read some of the information about the field, but can skip past the actual content.\n   * This will have the most payoff on large fields.\n   */\n  private void skipField(boolean binary, boolean compressed) throws IOException {\n    skipField(binary, compressed, fieldsStream.readVInt());\n  }\n\n","sourceOld":"  /**\n   * Skip the field.  We still have to read some of the information about the field, but can skip past the actual content.\n   * This will have the most payoff on large fields.\n   */\n  private void skipField(boolean binary, boolean compressed) throws IOException {\n    skipField(binary, compressed, fieldsStream.readVInt());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ab50480bb5a7c7abad9762badcf87f8b69efeabe":["e0c804f7aa477229414a7e12882af490c241f64d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1f9ca773178dc09e3e8fb1c66dde5f8dbd6f4644":["12d40284fd9481f79444bc63bc5d13847caddd3d"],"12d40284fd9481f79444bc63bc5d13847caddd3d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e0c804f7aa477229414a7e12882af490c241f64d":["1f9ca773178dc09e3e8fb1c66dde5f8dbd6f4644"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ab50480bb5a7c7abad9762badcf87f8b69efeabe"]},"commit2Childs":{"ab50480bb5a7c7abad9762badcf87f8b69efeabe":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["12d40284fd9481f79444bc63bc5d13847caddd3d"],"1f9ca773178dc09e3e8fb1c66dde5f8dbd6f4644":["e0c804f7aa477229414a7e12882af490c241f64d"],"12d40284fd9481f79444bc63bc5d13847caddd3d":["1f9ca773178dc09e3e8fb1c66dde5f8dbd6f4644"],"e0c804f7aa477229414a7e12882af490c241f64d":["ab50480bb5a7c7abad9762badcf87f8b69efeabe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}