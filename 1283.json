{"path":"src/java/org/apache/lucene/index/IndexWriter#commitTransaction().mjava","commits":[{"id":"eeefd99c477417e5c7c574228461ebafe92469d4","date":1166460329,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#commitTransaction().mjava","pathOld":"/dev/null","sourceNew":"  /*\n   * Commits the transaction.  This will write the new\n   * segments file and remove and pending deletions we have\n   * accumulated during the transaction\n   */\n  private void commitTransaction() throws IOException {\n    if (commitPending) {\n      boolean success = false;\n      try {\n        // If we hit eg disk full during this write we have\n        // to rollback.:\n        segmentInfos.write(directory);         // commit changes\n        success = true;\n      } finally {\n        if (!success) {\n          rollbackTransaction();\n        }\n      }\n      deleter.commitPendingFiles();\n      commitPending = false;\n    }\n\n    clearTransaction();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["dbb18b6a222f2507f22fab7cc7eed06658d59772"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8b6187898fc4413ccd18229711786550a280383c","date":1173776782,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#commitTransaction().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#commitTransaction().mjava","sourceNew":"  /*\n   * Commits the transaction.  This will write the new\n   * segments file and remove and pending deletions we have\n   * accumulated during the transaction\n   */\n  private void commitTransaction() throws IOException {\n\n    // First restore autoCommit in case we hit an exception below:\n    autoCommit = localAutoCommit;\n\n    boolean success = false;\n    try {\n      checkpoint();\n      success = true;\n    } finally {\n      if (!success) {\n        rollbackTransaction();\n      }\n    }\n    localRollbackSegmentInfos = null;\n\n    // Give deleter a chance to remove files now:\n    deleter.checkpoint(segmentInfos, autoCommit);\n  }\n\n","sourceOld":"  /*\n   * Commits the transaction.  This will write the new\n   * segments file and remove and pending deletions we have\n   * accumulated during the transaction\n   */\n  private void commitTransaction() throws IOException {\n    if (commitPending) {\n      boolean success = false;\n      try {\n        // If we hit eg disk full during this write we have\n        // to rollback.:\n        segmentInfos.write(directory);         // commit changes\n        success = true;\n      } finally {\n        if (!success) {\n          rollbackTransaction();\n        }\n      }\n      deleter.commitPendingFiles();\n      commitPending = false;\n    }\n\n    clearTransaction();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6456e4ba6cdce20f5615173eb208f063c8cb74b7","date":1174828735,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#commitTransaction().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#commitTransaction().mjava","sourceNew":"  /*\n   * Commits the transaction.  This will write the new\n   * segments file and remove and pending deletions we have\n   * accumulated during the transaction\n   */\n  private void commitTransaction() throws IOException {\n\n    // First restore autoCommit in case we hit an exception below:\n    autoCommit = localAutoCommit;\n\n    boolean success = false;\n    try {\n      checkpoint();\n      success = true;\n    } finally {\n      if (!success) {\n        rollbackTransaction();\n      }\n    }\n\n    if (!autoCommit)\n      // Remove the incRef we did in startTransaction.\n      deleter.decRef(localRollbackSegmentInfos);\n\n    localRollbackSegmentInfos = null;\n\n    // Give deleter a chance to remove files now:\n    deleter.checkpoint(segmentInfos, autoCommit);\n  }\n\n","sourceOld":"  /*\n   * Commits the transaction.  This will write the new\n   * segments file and remove and pending deletions we have\n   * accumulated during the transaction\n   */\n  private void commitTransaction() throws IOException {\n\n    // First restore autoCommit in case we hit an exception below:\n    autoCommit = localAutoCommit;\n\n    boolean success = false;\n    try {\n      checkpoint();\n      success = true;\n    } finally {\n      if (!success) {\n        rollbackTransaction();\n      }\n    }\n    localRollbackSegmentInfos = null;\n\n    // Give deleter a chance to remove files now:\n    deleter.checkpoint(segmentInfos, autoCommit);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b1405362241b561f5590ff4a87d5d6e173bcd9cf","date":1190107634,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#commitTransaction().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#commitTransaction().mjava","sourceNew":"  /*\n   * Commits the transaction.  This will write the new\n   * segments file and remove and pending deletions we have\n   * accumulated during the transaction\n   */\n  private void commitTransaction() throws IOException {\n\n    if (infoStream != null)\n      message(\"now commit transaction\");\n\n    // First restore autoCommit in case we hit an exception below:\n    autoCommit = localAutoCommit;\n\n    boolean success = false;\n    try {\n      checkpoint();\n      success = true;\n    } finally {\n      if (!success) {\n        if (infoStream != null)\n          message(\"hit exception committing transaction\");\n\n        rollbackTransaction();\n      }\n    }\n\n    if (!autoCommit)\n      // Remove the incRef we did in startTransaction.\n      deleter.decRef(localRollbackSegmentInfos);\n\n    localRollbackSegmentInfos = null;\n\n    // Give deleter a chance to remove files now:\n    deleter.checkpoint(segmentInfos, autoCommit);\n  }\n\n","sourceOld":"  /*\n   * Commits the transaction.  This will write the new\n   * segments file and remove and pending deletions we have\n   * accumulated during the transaction\n   */\n  private void commitTransaction() throws IOException {\n\n    // First restore autoCommit in case we hit an exception below:\n    autoCommit = localAutoCommit;\n\n    boolean success = false;\n    try {\n      checkpoint();\n      success = true;\n    } finally {\n      if (!success) {\n        rollbackTransaction();\n      }\n    }\n\n    if (!autoCommit)\n      // Remove the incRef we did in startTransaction.\n      deleter.decRef(localRollbackSegmentInfos);\n\n    localRollbackSegmentInfos = null;\n\n    // Give deleter a chance to remove files now:\n    deleter.checkpoint(segmentInfos, autoCommit);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e82780afe6097066eb5befb86e9432f077667e3d","date":1202756169,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#commitTransaction().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#commitTransaction().mjava","sourceNew":"  /*\n   * Commits the transaction.  This will write the new\n   * segments file and remove and pending deletions we have\n   * accumulated during the transaction\n   */\n  private void commitTransaction() throws IOException {\n\n    if (infoStream != null)\n      message(\"now commit transaction\");\n\n    // First restore autoCommit in case we hit an exception below:\n    autoCommit = localAutoCommit;\n\n    // Give deleter a chance to remove files now:\n    checkpoint();\n\n    if (autoCommit) {\n      boolean success = false;\n      try {\n        sync(true, 0);\n        success = true;\n      } finally {\n        if (!success) {\n          if (infoStream != null)\n            message(\"hit exception committing transaction\");\n          rollbackTransaction();\n        }\n      }\n    } else\n      // Remove the incRef we did in startTransaction.\n      deleter.decRef(localRollbackSegmentInfos);\n\n    localRollbackSegmentInfos = null;\n  }\n\n","sourceOld":"  /*\n   * Commits the transaction.  This will write the new\n   * segments file and remove and pending deletions we have\n   * accumulated during the transaction\n   */\n  private void commitTransaction() throws IOException {\n\n    if (infoStream != null)\n      message(\"now commit transaction\");\n\n    // First restore autoCommit in case we hit an exception below:\n    autoCommit = localAutoCommit;\n\n    boolean success = false;\n    try {\n      checkpoint();\n      success = true;\n    } finally {\n      if (!success) {\n        if (infoStream != null)\n          message(\"hit exception committing transaction\");\n\n        rollbackTransaction();\n      }\n    }\n\n    if (!autoCommit)\n      // Remove the incRef we did in startTransaction.\n      deleter.decRef(localRollbackSegmentInfos);\n\n    localRollbackSegmentInfos = null;\n\n    // Give deleter a chance to remove files now:\n    deleter.checkpoint(segmentInfos, autoCommit);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be","date":1204801324,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#commitTransaction().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#commitTransaction().mjava","sourceNew":"  /*\n   * Commits the transaction.  This will write the new\n   * segments file and remove and pending deletions we have\n   * accumulated during the transaction\n   */\n  private void commitTransaction() throws IOException {\n\n    if (infoStream != null)\n      message(\"now commit transaction\");\n\n    // First restore autoCommit in case we hit an exception below:\n    autoCommit = localAutoCommit;\n\n    // Give deleter a chance to remove files now:\n    checkpoint();\n\n    if (autoCommit) {\n      boolean success = false;\n      try {\n        commit(true, 0);\n        success = true;\n      } finally {\n        if (!success) {\n          if (infoStream != null)\n            message(\"hit exception committing transaction\");\n          rollbackTransaction();\n        }\n      }\n    } else\n      // Remove the incRef we did in startTransaction.\n      deleter.decRef(localRollbackSegmentInfos);\n\n    localRollbackSegmentInfos = null;\n  }\n\n","sourceOld":"  /*\n   * Commits the transaction.  This will write the new\n   * segments file and remove and pending deletions we have\n   * accumulated during the transaction\n   */\n  private void commitTransaction() throws IOException {\n\n    if (infoStream != null)\n      message(\"now commit transaction\");\n\n    // First restore autoCommit in case we hit an exception below:\n    autoCommit = localAutoCommit;\n\n    // Give deleter a chance to remove files now:\n    checkpoint();\n\n    if (autoCommit) {\n      boolean success = false;\n      try {\n        sync(true, 0);\n        success = true;\n      } finally {\n        if (!success) {\n          if (infoStream != null)\n            message(\"hit exception committing transaction\");\n          rollbackTransaction();\n        }\n      }\n    } else\n      // Remove the incRef we did in startTransaction.\n      deleter.decRef(localRollbackSegmentInfos);\n\n    localRollbackSegmentInfos = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dbb18b6a222f2507f22fab7cc7eed06658d59772","date":1204804366,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#commitTransaction().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#commitTransaction().mjava","sourceNew":"  /*\n   * Commits the transaction.  This will write the new\n   * segments file and remove and pending deletions we have\n   * accumulated during the transaction\n   */\n  private synchronized void commitTransaction() throws IOException {\n\n    if (infoStream != null)\n      message(\"now commit transaction\");\n\n    // First restore autoCommit in case we hit an exception below:\n    autoCommit = localAutoCommit;\n\n    // Give deleter a chance to remove files now:\n    checkpoint();\n\n    if (autoCommit) {\n      boolean success = false;\n      try {\n        commit(true, 0);\n        success = true;\n      } finally {\n        if (!success) {\n          if (infoStream != null)\n            message(\"hit exception committing transaction\");\n          rollbackTransaction();\n        }\n      }\n    } else\n      // Remove the incRef we did in startTransaction.\n      deleter.decRef(localRollbackSegmentInfos);\n\n    localRollbackSegmentInfos = null;\n  }\n\n","sourceOld":"  /*\n   * Commits the transaction.  This will write the new\n   * segments file and remove and pending deletions we have\n   * accumulated during the transaction\n   */\n  private void commitTransaction() throws IOException {\n\n    if (infoStream != null)\n      message(\"now commit transaction\");\n\n    // First restore autoCommit in case we hit an exception below:\n    autoCommit = localAutoCommit;\n\n    // Give deleter a chance to remove files now:\n    checkpoint();\n\n    if (autoCommit) {\n      boolean success = false;\n      try {\n        commit(true, 0);\n        success = true;\n      } finally {\n        if (!success) {\n          if (infoStream != null)\n            message(\"hit exception committing transaction\");\n          rollbackTransaction();\n        }\n      }\n    } else\n      // Remove the incRef we did in startTransaction.\n      deleter.decRef(localRollbackSegmentInfos);\n\n    localRollbackSegmentInfos = null;\n  }\n\n","bugFix":["eeefd99c477417e5c7c574228461ebafe92469d4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"455aeff4fef915340c5b19d71d5e147034e83093","date":1210099270,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#commitTransaction().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#commitTransaction().mjava","sourceNew":"  /*\n   * Commits the transaction.  This will write the new\n   * segments file and remove and pending deletions we have\n   * accumulated during the transaction\n   */\n  private synchronized void commitTransaction() throws IOException {\n\n    if (infoStream != null)\n      message(\"now commit transaction\");\n\n    // First restore autoCommit in case we hit an exception below:\n    autoCommit = localAutoCommit;\n\n    // Give deleter a chance to remove files now:\n    checkpoint();\n\n    if (autoCommit) {\n      boolean success = false;\n      try {\n        commit(0);\n        success = true;\n      } finally {\n        if (!success) {\n          if (infoStream != null)\n            message(\"hit exception committing transaction\");\n          rollbackTransaction();\n        }\n      }\n    } else\n      // Remove the incRef we did in startTransaction.\n      deleter.decRef(localRollbackSegmentInfos);\n\n    localRollbackSegmentInfos = null;\n  }\n\n","sourceOld":"  /*\n   * Commits the transaction.  This will write the new\n   * segments file and remove and pending deletions we have\n   * accumulated during the transaction\n   */\n  private synchronized void commitTransaction() throws IOException {\n\n    if (infoStream != null)\n      message(\"now commit transaction\");\n\n    // First restore autoCommit in case we hit an exception below:\n    autoCommit = localAutoCommit;\n\n    // Give deleter a chance to remove files now:\n    checkpoint();\n\n    if (autoCommit) {\n      boolean success = false;\n      try {\n        commit(true, 0);\n        success = true;\n      } finally {\n        if (!success) {\n          if (infoStream != null)\n            message(\"hit exception committing transaction\");\n          rollbackTransaction();\n        }\n      }\n    } else\n      // Remove the incRef we did in startTransaction.\n      deleter.decRef(localRollbackSegmentInfos);\n\n    localRollbackSegmentInfos = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2586f96f60332eb97ecd2934b0763791462568b2","date":1220116589,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#commitTransaction().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#commitTransaction().mjava","sourceNew":"  /*\n   * Commits the transaction.  This will write the new\n   * segments file and remove and pending deletions we have\n   * accumulated during the transaction\n   */\n  private synchronized void commitTransaction() throws IOException {\n\n    if (infoStream != null)\n      message(\"now commit transaction\");\n\n    // First restore autoCommit in case we hit an exception below:\n    autoCommit = localAutoCommit;\n\n    // Give deleter a chance to remove files now:\n    checkpoint();\n\n    if (autoCommit) {\n      boolean success = false;\n      try {\n        commit(0);\n        success = true;\n      } finally {\n        if (!success) {\n          if (infoStream != null)\n            message(\"hit exception committing transaction\");\n          rollbackTransaction();\n        }\n      }\n    } else\n      // Remove the incRef we did in startTransaction.\n      deleter.decRef(localRollbackSegmentInfos);\n\n    localRollbackSegmentInfos = null;\n\n    assert !hasExternalSegments();\n\n    finishAddIndexes();\n  }\n\n","sourceOld":"  /*\n   * Commits the transaction.  This will write the new\n   * segments file and remove and pending deletions we have\n   * accumulated during the transaction\n   */\n  private synchronized void commitTransaction() throws IOException {\n\n    if (infoStream != null)\n      message(\"now commit transaction\");\n\n    // First restore autoCommit in case we hit an exception below:\n    autoCommit = localAutoCommit;\n\n    // Give deleter a chance to remove files now:\n    checkpoint();\n\n    if (autoCommit) {\n      boolean success = false;\n      try {\n        commit(0);\n        success = true;\n      } finally {\n        if (!success) {\n          if (infoStream != null)\n            message(\"hit exception committing transaction\");\n          rollbackTransaction();\n        }\n      }\n    } else\n      // Remove the incRef we did in startTransaction.\n      deleter.decRef(localRollbackSegmentInfos);\n\n    localRollbackSegmentInfos = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ce99e2b80b5a9cb2b9b59c01219e5397b081dcd8","date":1255049357,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#commitTransaction().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#commitTransaction().mjava","sourceNew":"  /*\n   * Commits the transaction.  This will write the new\n   * segments file and remove and pending deletions we have\n   * accumulated during the transaction\n   */\n  private synchronized void commitTransaction() throws IOException {\n\n    if (infoStream != null)\n      message(\"now commit transaction\");\n\n    // Give deleter a chance to remove files now:\n    checkpoint();\n\n    // Remove the incRef we did in startTransaction.\n    deleter.decRef(localRollbackSegmentInfos);\n\n    localRollbackSegmentInfos = null;\n\n    assert !hasExternalSegments();\n\n    finishAddIndexes();\n  }\n\n","sourceOld":"  /*\n   * Commits the transaction.  This will write the new\n   * segments file and remove and pending deletions we have\n   * accumulated during the transaction\n   */\n  private synchronized void commitTransaction() throws IOException {\n\n    if (infoStream != null)\n      message(\"now commit transaction\");\n\n    // First restore autoCommit in case we hit an exception below:\n    autoCommit = localAutoCommit;\n\n    // Give deleter a chance to remove files now:\n    checkpoint();\n\n    if (autoCommit) {\n      boolean success = false;\n      try {\n        commit(0);\n        success = true;\n      } finally {\n        if (!success) {\n          if (infoStream != null)\n            message(\"hit exception committing transaction\");\n          rollbackTransaction();\n        }\n      }\n    } else\n      // Remove the incRef we did in startTransaction.\n      deleter.decRef(localRollbackSegmentInfos);\n\n    localRollbackSegmentInfos = null;\n\n    assert !hasExternalSegments();\n\n    finishAddIndexes();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#commitTransaction().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#commitTransaction().mjava","sourceNew":"  /*\n   * Commits the transaction.  This will write the new\n   * segments file and remove and pending deletions we have\n   * accumulated during the transaction\n   */\n  private synchronized void commitTransaction() throws IOException {\n\n    if (infoStream != null)\n      message(\"now commit transaction\");\n\n    // Give deleter a chance to remove files now:\n    checkpoint();\n\n    // Remove the incRef we did in startTransaction.\n    deleter.decRef(localRollbackSegmentInfos);\n\n    localRollbackSegmentInfos = null;\n\n    assert !hasExternalSegments();\n\n    finishAddIndexes();\n  }\n\n","sourceOld":"  /*\n   * Commits the transaction.  This will write the new\n   * segments file and remove and pending deletions we have\n   * accumulated during the transaction\n   */\n  private synchronized void commitTransaction() throws IOException {\n\n    if (infoStream != null)\n      message(\"now commit transaction\");\n\n    // Give deleter a chance to remove files now:\n    checkpoint();\n\n    // Remove the incRef we did in startTransaction.\n    deleter.decRef(localRollbackSegmentInfos);\n\n    localRollbackSegmentInfos = null;\n\n    assert !hasExternalSegments();\n\n    finishAddIndexes();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b1405362241b561f5590ff4a87d5d6e173bcd9cf":["6456e4ba6cdce20f5615173eb208f063c8cb74b7"],"455aeff4fef915340c5b19d71d5e147034e83093":["dbb18b6a222f2507f22fab7cc7eed06658d59772"],"ce99e2b80b5a9cb2b9b59c01219e5397b081dcd8":["2586f96f60332eb97ecd2934b0763791462568b2"],"a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be":["e82780afe6097066eb5befb86e9432f077667e3d"],"dbb18b6a222f2507f22fab7cc7eed06658d59772":["a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be"],"6456e4ba6cdce20f5615173eb208f063c8cb74b7":["8b6187898fc4413ccd18229711786550a280383c"],"eeefd99c477417e5c7c574228461ebafe92469d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e82780afe6097066eb5befb86e9432f077667e3d":["b1405362241b561f5590ff4a87d5d6e173bcd9cf"],"8b6187898fc4413ccd18229711786550a280383c":["eeefd99c477417e5c7c574228461ebafe92469d4"],"2586f96f60332eb97ecd2934b0763791462568b2":["455aeff4fef915340c5b19d71d5e147034e83093"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ce99e2b80b5a9cb2b9b59c01219e5397b081dcd8"]},"commit2Childs":{"b1405362241b561f5590ff4a87d5d6e173bcd9cf":["e82780afe6097066eb5befb86e9432f077667e3d"],"455aeff4fef915340c5b19d71d5e147034e83093":["2586f96f60332eb97ecd2934b0763791462568b2"],"ce99e2b80b5a9cb2b9b59c01219e5397b081dcd8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be":["dbb18b6a222f2507f22fab7cc7eed06658d59772"],"dbb18b6a222f2507f22fab7cc7eed06658d59772":["455aeff4fef915340c5b19d71d5e147034e83093"],"6456e4ba6cdce20f5615173eb208f063c8cb74b7":["b1405362241b561f5590ff4a87d5d6e173bcd9cf"],"eeefd99c477417e5c7c574228461ebafe92469d4":["8b6187898fc4413ccd18229711786550a280383c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eeefd99c477417e5c7c574228461ebafe92469d4"],"e82780afe6097066eb5befb86e9432f077667e3d":["a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be"],"8b6187898fc4413ccd18229711786550a280383c":["6456e4ba6cdce20f5615173eb208f063c8cb74b7"],"2586f96f60332eb97ecd2934b0763791462568b2":["ce99e2b80b5a9cb2b9b59c01219e5397b081dcd8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}