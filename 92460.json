{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestQueryTemplateManager#setUp().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestQueryTemplateManager#setUp().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/TestQueryTemplateManager#setUp().mjava","sourceNew":"  /*\n    * @see TestCase#setUp()\n    */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    analyzer = new MockAnalyzer(random());\n    //Create an index\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (String docFieldValue : docFieldValues) {\n      w.addDocument(getDocumentFromString(docFieldValue));\n    }\n    w.forceMerge(1);\n    w.close();\n    reader = IndexReader.open(dir);\n    searcher = new IndexSearcher(reader);\n\n    //initialize the parser\n    builder = new CorePlusExtensionsParser(\"artist\", analyzer);\n\n  }\n\n","sourceOld":"  /*\n    * @see TestCase#setUp()\n    */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    analyzer = new MockAnalyzer(random());\n    //Create an index\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (String docFieldValue : docFieldValues) {\n      w.addDocument(getDocumentFromString(docFieldValue));\n    }\n    w.forceMerge(1);\n    w.close();\n    reader = IndexReader.open(dir);\n    searcher = new IndexSearcher(reader);\n\n    //initialize the parser\n    builder = new CorePlusExtensionsParser(\"artist\", analyzer);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestQueryTemplateManager#setUp().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestQueryTemplateManager#setUp().mjava","sourceNew":"  /*\n    * @see TestCase#setUp()\n    */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    analyzer = new MockAnalyzer(random());\n    //Create an index\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (String docFieldValue : docFieldValues) {\n      w.addDocument(getDocumentFromString(docFieldValue));\n    }\n    w.forceMerge(1);\n    w.close();\n    reader = DirectoryReader.open(dir);\n    searcher = new IndexSearcher(reader);\n\n    //initialize the parser\n    builder = new CorePlusExtensionsParser(\"artist\", analyzer);\n\n  }\n\n","sourceOld":"  /*\n    * @see TestCase#setUp()\n    */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    analyzer = new MockAnalyzer(random());\n    //Create an index\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (String docFieldValue : docFieldValues) {\n      w.addDocument(getDocumentFromString(docFieldValue));\n    }\n    w.forceMerge(1);\n    w.close();\n    reader = IndexReader.open(dir);\n    searcher = new IndexSearcher(reader);\n\n    //initialize the parser\n    builder = new CorePlusExtensionsParser(\"artist\", analyzer);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc","date":1366056945,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestQueryTemplateManager#setUp().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestQueryTemplateManager#setUp().mjava","sourceNew":"  /*\n    * @see TestCase#setUp()\n    */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    analyzer = new MockAnalyzer(random());\n    //Create an index\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (String docFieldValue : docFieldValues) {\n      w.addDocument(getDocumentFromString(docFieldValue));\n    }\n    w.forceMerge(1);\n    w.close();\n    reader = DirectoryReader.open(dir);\n    searcher = newSearcher(reader);\n\n    //initialize the parser\n    builder = new CorePlusExtensionsParser(\"artist\", analyzer);\n\n  }\n\n","sourceOld":"  /*\n    * @see TestCase#setUp()\n    */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    analyzer = new MockAnalyzer(random());\n    //Create an index\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (String docFieldValue : docFieldValues) {\n      w.addDocument(getDocumentFromString(docFieldValue));\n    }\n    w.forceMerge(1);\n    w.close();\n    reader = DirectoryReader.open(dir);\n    searcher = new IndexSearcher(reader);\n\n    //initialize the parser\n    builder = new CorePlusExtensionsParser(\"artist\", analyzer);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestQueryTemplateManager#setUp().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestQueryTemplateManager#setUp().mjava","sourceNew":"  /*\n    * @see TestCase#setUp()\n    */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    analyzer = new MockAnalyzer(random());\n    //Create an index\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (String docFieldValue : docFieldValues) {\n      w.addDocument(getDocumentFromString(docFieldValue));\n    }\n    w.forceMerge(1);\n    w.shutdown();\n    reader = DirectoryReader.open(dir);\n    searcher = newSearcher(reader);\n\n    //initialize the parser\n    builder = new CorePlusExtensionsParser(\"artist\", analyzer);\n\n  }\n\n","sourceOld":"  /*\n    * @see TestCase#setUp()\n    */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    analyzer = new MockAnalyzer(random());\n    //Create an index\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (String docFieldValue : docFieldValues) {\n      w.addDocument(getDocumentFromString(docFieldValue));\n    }\n    w.forceMerge(1);\n    w.close();\n    reader = DirectoryReader.open(dir);\n    searcher = newSearcher(reader);\n\n    //initialize the parser\n    builder = new CorePlusExtensionsParser(\"artist\", analyzer);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestQueryTemplateManager#setUp().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestQueryTemplateManager#setUp().mjava","sourceNew":"  /*\n    * @see TestCase#setUp()\n    */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    analyzer = new MockAnalyzer(random());\n    //Create an index\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(analyzer));\n    for (String docFieldValue : docFieldValues) {\n      w.addDocument(getDocumentFromString(docFieldValue));\n    }\n    w.forceMerge(1);\n    w.shutdown();\n    reader = DirectoryReader.open(dir);\n    searcher = newSearcher(reader);\n\n    //initialize the parser\n    builder = new CorePlusExtensionsParser(\"artist\", analyzer);\n\n  }\n\n","sourceOld":"  /*\n    * @see TestCase#setUp()\n    */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    analyzer = new MockAnalyzer(random());\n    //Create an index\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    for (String docFieldValue : docFieldValues) {\n      w.addDocument(getDocumentFromString(docFieldValue));\n    }\n    w.forceMerge(1);\n    w.shutdown();\n    reader = DirectoryReader.open(dir);\n    searcher = newSearcher(reader);\n\n    //initialize the parser\n    builder = new CorePlusExtensionsParser(\"artist\", analyzer);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestQueryTemplateManager#setUp().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestQueryTemplateManager#setUp().mjava","sourceNew":"  /*\n    * @see TestCase#setUp()\n    */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    analyzer = new MockAnalyzer(random());\n    //Create an index\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(analyzer));\n    for (String docFieldValue : docFieldValues) {\n      w.addDocument(getDocumentFromString(docFieldValue));\n    }\n    w.forceMerge(1);\n    w.close();\n    reader = DirectoryReader.open(dir);\n    searcher = newSearcher(reader);\n\n    //initialize the parser\n    builder = new CorePlusExtensionsParser(\"artist\", analyzer);\n\n  }\n\n","sourceOld":"  /*\n    * @see TestCase#setUp()\n    */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    analyzer = new MockAnalyzer(random());\n    //Create an index\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(analyzer));\n    for (String docFieldValue : docFieldValues) {\n      w.addDocument(getDocumentFromString(docFieldValue));\n    }\n    w.forceMerge(1);\n    w.shutdown();\n    reader = DirectoryReader.open(dir);\n    searcher = newSearcher(reader);\n\n    //initialize the parser\n    builder = new CorePlusExtensionsParser(\"artist\", analyzer);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef5efd612b12038e51f8da591d11b5359c5e176d","date":1526420099,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/TestQueryTemplateManager#setUp().mjava","sourceNew":null,"sourceOld":"  /*\n    * @see TestCase#setUp()\n    */\n  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n\n    analyzer = new MockAnalyzer(random());\n    //Create an index\n    dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(analyzer));\n    for (String docFieldValue : docFieldValues) {\n      w.addDocument(getDocumentFromString(docFieldValue));\n    }\n    w.forceMerge(1);\n    w.close();\n    reader = DirectoryReader.open(dir);\n    searcher = newSearcher(reader);\n\n    //initialize the parser\n    builder = new CorePlusExtensionsParser(\"artist\", analyzer);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"ef5efd612b12038e51f8da591d11b5359c5e176d":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ef5efd612b12038e51f8da591d11b5359c5e176d"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ef5efd612b12038e51f8da591d11b5359c5e176d"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ef5efd612b12038e51f8da591d11b5359c5e176d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}