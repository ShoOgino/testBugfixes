{"path":"lucene/contrib/queries/src/java/org/apache/lucene/search/SlowCollatedStringComparator#compareValues(BytesRef,BytesRef).mjava","commits":[{"id":"d4aa50b979cd392e00e5bc0f23f78cbd106cb968","date":1308150768,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/SlowCollatedStringComparator#compareValues(BytesRef,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int compareValues(BytesRef first, BytesRef second) {\n    if (first == null) {\n      if (second == null) {\n        return 0;\n      }\n      return -1;\n    } else if (second == null) {\n      return 1;\n    } else {\n      return collator.compare(first, second);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","date":1308291005,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/SlowCollatedStringComparator#compareValues(BytesRef,BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int compareValues(BytesRef first, BytesRef second) {\n    if (first == null) {\n      if (second == null) {\n        return 0;\n      }\n      return -1;\n    } else if (second == null) {\n      return 1;\n    } else {\n      return collator.compare(first, second);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1339b30c5298a1bbc583b1538dafe2dfe001c9c7","date":1309278655,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/SlowCollatedStringComparator#compareValues(String,String).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/SlowCollatedStringComparator#compareValues(BytesRef,BytesRef).mjava","sourceNew":"  @Override\n  public int compareValues(String first, String second) {\n    if (first == null) {\n      if (second == null) {\n        return 0;\n      }\n      return -1;\n    } else if (second == null) {\n      return 1;\n    } else {\n      return collator.compare(first, second);\n    }\n  }\n\n","sourceOld":"  @Override\n  public int compareValues(BytesRef first, BytesRef second) {\n    if (first == null) {\n      if (second == null) {\n        return 0;\n      }\n      return -1;\n    } else if (second == null) {\n      return 1;\n    } else {\n      return collator.compare(first, second);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/SlowCollatedStringComparator#compareValues(String,String).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/SlowCollatedStringComparator#compareValues(BytesRef,BytesRef).mjava","sourceNew":"  @Override\n  public int compareValues(String first, String second) {\n    if (first == null) {\n      if (second == null) {\n        return 0;\n      }\n      return -1;\n    } else if (second == null) {\n      return 1;\n    } else {\n      return collator.compare(first, second);\n    }\n  }\n\n","sourceOld":"  @Override\n  public int compareValues(BytesRef first, BytesRef second) {\n    if (first == null) {\n      if (second == null) {\n        return 0;\n      }\n      return -1;\n    } else if (second == null) {\n      return 1;\n    } else {\n      return collator.compare(first, second);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/SlowCollatedStringComparator#compareValues(BytesRef,BytesRef).mjava","sourceNew":null,"sourceOld":"  @Override\n  public int compareValues(BytesRef first, BytesRef second) {\n    if (first == null) {\n      if (second == null) {\n        return 0;\n      }\n      return -1;\n    } else if (second == null) {\n      return 1;\n    } else {\n      return collator.compare(first, second);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a2903ea38ae3e636b93a08c52a5e37ae939cf6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d4aa50b979cd392e00e5bc0f23f78cbd106cb968"],"1339b30c5298a1bbc583b1538dafe2dfe001c9c7":["d4aa50b979cd392e00e5bc0f23f78cbd106cb968"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d4aa50b979cd392e00e5bc0f23f78cbd106cb968":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2553b00f699380c64959ccb27991289aae87be2e":["0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","1339b30c5298a1bbc583b1538dafe2dfe001c9c7"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["d4aa50b979cd392e00e5bc0f23f78cbd106cb968","1339b30c5298a1bbc583b1538dafe2dfe001c9c7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1339b30c5298a1bbc583b1538dafe2dfe001c9c7"]},"commit2Childs":{"0a2903ea38ae3e636b93a08c52a5e37ae939cf6b":["2553b00f699380c64959ccb27991289aae87be2e"],"1339b30c5298a1bbc583b1538dafe2dfe001c9c7":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","d4aa50b979cd392e00e5bc0f23f78cbd106cb968"],"d4aa50b979cd392e00e5bc0f23f78cbd106cb968":["0a2903ea38ae3e636b93a08c52a5e37ae939cf6b","1339b30c5298a1bbc583b1538dafe2dfe001c9c7","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"2553b00f699380c64959ccb27991289aae87be2e":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}