{"path":"sandbox/contributions/snowball/src/java/net/sf/snowball/ext/German2Stemmer#r_prelude().mjava","commits":[{"id":"ce3264aee2497a01ca41ed78cac13087b6548ad7","date":1077649656,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"sandbox/contributions/snowball/src/java/net/sf/snowball/ext/German2Stemmer#r_prelude().mjava","pathOld":"/dev/null","sourceNew":"        private boolean r_prelude() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            // (, line 28\n            // test, line 30\n            v_1 = cursor;\n            // repeat, line 30\n            replab0: while(true)\n            {\n                v_2 = cursor;\n                lab1: do {\n                    // goto, line 30\n                    golab2: while(true)\n                    {\n                        v_3 = cursor;\n                        lab3: do {\n                            // (, line 30\n                            if (!(in_grouping(g_v, 97, 252)))\n                            {\n                                break lab3;\n                            }\n                            // [, line 31\n                            bra = cursor;\n                            // or, line 31\n                            lab4: do {\n                                v_4 = cursor;\n                                lab5: do {\n                                    // (, line 31\n                                    // literal, line 31\n                                    if (!(eq_s(1, \"u\")))\n                                    {\n                                        break lab5;\n                                    }\n                                    // ], line 31\n                                    ket = cursor;\n                                    if (!(in_grouping(g_v, 97, 252)))\n                                    {\n                                        break lab5;\n                                    }\n                                    // <-, line 31\n                                    slice_from(\"U\");\n                                    break lab4;\n                                } while (false);\n                                cursor = v_4;\n                                // (, line 32\n                                // literal, line 32\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab3;\n                                }\n                                // ], line 32\n                                ket = cursor;\n                                if (!(in_grouping(g_v, 97, 252)))\n                                {\n                                    break lab3;\n                                }\n                                // <-, line 32\n                                slice_from(\"Y\");\n                            } while (false);\n                            cursor = v_3;\n                            break golab2;\n                        } while (false);\n                        cursor = v_3;\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_2;\n                break replab0;\n            }\n            cursor = v_1;\n            // repeat, line 35\n            replab6: while(true)\n            {\n                v_5 = cursor;\n                lab7: do {\n                    // (, line 35\n                    // [, line 36\n                    bra = cursor;\n                    // substring, line 36\n                    among_var = find_among(a_0, 6);\n                    if (among_var == 0)\n                    {\n                        break lab7;\n                    }\n                    // ], line 36\n                    ket = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab7;\n                        case 1:\n                            // (, line 37\n                            // <-, line 37\n                            slice_from(\"ss\");\n                            break;\n                        case 2:\n                            // (, line 38\n                            // <-, line 38\n                            slice_from(\"\\u00E4\");\n                            break;\n                        case 3:\n                            // (, line 39\n                            // <-, line 39\n                            slice_from(\"\\u00F6\");\n                            break;\n                        case 4:\n                            // (, line 40\n                            // <-, line 40\n                            slice_from(\"\\u00FC\");\n                            break;\n                        case 5:\n                            // (, line 41\n                            // hop, line 41\n                            {\n                                int c = cursor + 2;\n                                if (0 > c || c > limit)\n                                {\n                                    break lab7;\n                                }\n                                cursor = c;\n                            }\n                            break;\n                        case 6:\n                            // (, line 42\n                            // next, line 42\n                            if (cursor >= limit)\n                            {\n                                break lab7;\n                            }\n                            cursor++;\n                            break;\n                    }\n                    continue replab6;\n                } while (false);\n                cursor = v_5;\n                break replab6;\n            }\n            return true;\n        }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/snowball/src/java/net/sf/snowball/ext/German2Stemmer#r_prelude().mjava","pathOld":"sandbox/contributions/snowball/src/java/net/sf/snowball/ext/German2Stemmer#r_prelude().mjava","sourceNew":"        private boolean r_prelude() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            // (, line 28\n            // test, line 30\n            v_1 = cursor;\n            // repeat, line 30\n            replab0: while(true)\n            {\n                v_2 = cursor;\n                lab1: do {\n                    // goto, line 30\n                    golab2: while(true)\n                    {\n                        v_3 = cursor;\n                        lab3: do {\n                            // (, line 30\n                            if (!(in_grouping(g_v, 97, 252)))\n                            {\n                                break lab3;\n                            }\n                            // [, line 31\n                            bra = cursor;\n                            // or, line 31\n                            lab4: do {\n                                v_4 = cursor;\n                                lab5: do {\n                                    // (, line 31\n                                    // literal, line 31\n                                    if (!(eq_s(1, \"u\")))\n                                    {\n                                        break lab5;\n                                    }\n                                    // ], line 31\n                                    ket = cursor;\n                                    if (!(in_grouping(g_v, 97, 252)))\n                                    {\n                                        break lab5;\n                                    }\n                                    // <-, line 31\n                                    slice_from(\"U\");\n                                    break lab4;\n                                } while (false);\n                                cursor = v_4;\n                                // (, line 32\n                                // literal, line 32\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab3;\n                                }\n                                // ], line 32\n                                ket = cursor;\n                                if (!(in_grouping(g_v, 97, 252)))\n                                {\n                                    break lab3;\n                                }\n                                // <-, line 32\n                                slice_from(\"Y\");\n                            } while (false);\n                            cursor = v_3;\n                            break golab2;\n                        } while (false);\n                        cursor = v_3;\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_2;\n                break replab0;\n            }\n            cursor = v_1;\n            // repeat, line 35\n            replab6: while(true)\n            {\n                v_5 = cursor;\n                lab7: do {\n                    // (, line 35\n                    // [, line 36\n                    bra = cursor;\n                    // substring, line 36\n                    among_var = find_among(a_0, 6);\n                    if (among_var == 0)\n                    {\n                        break lab7;\n                    }\n                    // ], line 36\n                    ket = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab7;\n                        case 1:\n                            // (, line 37\n                            // <-, line 37\n                            slice_from(\"ss\");\n                            break;\n                        case 2:\n                            // (, line 38\n                            // <-, line 38\n                            slice_from(\"\\u00E4\");\n                            break;\n                        case 3:\n                            // (, line 39\n                            // <-, line 39\n                            slice_from(\"\\u00F6\");\n                            break;\n                        case 4:\n                            // (, line 40\n                            // <-, line 40\n                            slice_from(\"\\u00FC\");\n                            break;\n                        case 5:\n                            // (, line 41\n                            // hop, line 41\n                            {\n                                int c = cursor + 2;\n                                if (0 > c || c > limit)\n                                {\n                                    break lab7;\n                                }\n                                cursor = c;\n                            }\n                            break;\n                        case 6:\n                            // (, line 42\n                            // next, line 42\n                            if (cursor >= limit)\n                            {\n                                break lab7;\n                            }\n                            cursor++;\n                            break;\n                    }\n                    continue replab6;\n                } while (false);\n                cursor = v_5;\n                break replab6;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_prelude() {\n            int among_var;\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            // (, line 28\n            // test, line 30\n            v_1 = cursor;\n            // repeat, line 30\n            replab0: while(true)\n            {\n                v_2 = cursor;\n                lab1: do {\n                    // goto, line 30\n                    golab2: while(true)\n                    {\n                        v_3 = cursor;\n                        lab3: do {\n                            // (, line 30\n                            if (!(in_grouping(g_v, 97, 252)))\n                            {\n                                break lab3;\n                            }\n                            // [, line 31\n                            bra = cursor;\n                            // or, line 31\n                            lab4: do {\n                                v_4 = cursor;\n                                lab5: do {\n                                    // (, line 31\n                                    // literal, line 31\n                                    if (!(eq_s(1, \"u\")))\n                                    {\n                                        break lab5;\n                                    }\n                                    // ], line 31\n                                    ket = cursor;\n                                    if (!(in_grouping(g_v, 97, 252)))\n                                    {\n                                        break lab5;\n                                    }\n                                    // <-, line 31\n                                    slice_from(\"U\");\n                                    break lab4;\n                                } while (false);\n                                cursor = v_4;\n                                // (, line 32\n                                // literal, line 32\n                                if (!(eq_s(1, \"y\")))\n                                {\n                                    break lab3;\n                                }\n                                // ], line 32\n                                ket = cursor;\n                                if (!(in_grouping(g_v, 97, 252)))\n                                {\n                                    break lab3;\n                                }\n                                // <-, line 32\n                                slice_from(\"Y\");\n                            } while (false);\n                            cursor = v_3;\n                            break golab2;\n                        } while (false);\n                        cursor = v_3;\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_2;\n                break replab0;\n            }\n            cursor = v_1;\n            // repeat, line 35\n            replab6: while(true)\n            {\n                v_5 = cursor;\n                lab7: do {\n                    // (, line 35\n                    // [, line 36\n                    bra = cursor;\n                    // substring, line 36\n                    among_var = find_among(a_0, 6);\n                    if (among_var == 0)\n                    {\n                        break lab7;\n                    }\n                    // ], line 36\n                    ket = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab7;\n                        case 1:\n                            // (, line 37\n                            // <-, line 37\n                            slice_from(\"ss\");\n                            break;\n                        case 2:\n                            // (, line 38\n                            // <-, line 38\n                            slice_from(\"\\u00E4\");\n                            break;\n                        case 3:\n                            // (, line 39\n                            // <-, line 39\n                            slice_from(\"\\u00F6\");\n                            break;\n                        case 4:\n                            // (, line 40\n                            // <-, line 40\n                            slice_from(\"\\u00FC\");\n                            break;\n                        case 5:\n                            // (, line 41\n                            // hop, line 41\n                            {\n                                int c = cursor + 2;\n                                if (0 > c || c > limit)\n                                {\n                                    break lab7;\n                                }\n                                cursor = c;\n                            }\n                            break;\n                        case 6:\n                            // (, line 42\n                            // next, line 42\n                            if (cursor >= limit)\n                            {\n                                break lab7;\n                            }\n                            cursor++;\n                            break;\n                    }\n                    continue replab6;\n                } while (false);\n                cursor = v_5;\n                break replab6;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["ce3264aee2497a01ca41ed78cac13087b6548ad7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ce3264aee2497a01ca41ed78cac13087b6548ad7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["043c298cb215f13ba7b9b81d20760704e8f93d66"]},"commit2Childs":{"043c298cb215f13ba7b9b81d20760704e8f93d66":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ce3264aee2497a01ca41ed78cac13087b6548ad7"],"ce3264aee2497a01ca41ed78cac13087b6548ad7":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}