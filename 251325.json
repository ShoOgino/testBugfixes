{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Temp40PostingsReader.SegmentFullPositionsEnum#nextPosition().mjava","commits":[{"id":"38f154048324ef4d19e56e818d0621cafb4fd453","date":1377246558,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Temp40PostingsReader.SegmentFullPositionsEnum#nextPosition().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int nextPosition() throws IOException {\n\n      if (lazyProxPointer != -1) {\n        proxIn.seek(lazyProxPointer);\n        lazyProxPointer = -1;\n      }\n      \n      if (payloadPending && payloadLength > 0) {\n        // payload of last position was never retrieved -- skip it\n        proxIn.seek(proxIn.getFilePointer() + payloadLength);\n        payloadPending = false;\n      }\n\n      // scan over any docs that were iterated without their positions\n      while(posPendingCount > freq) {\n        final int code = proxIn.readVInt();\n\n        if (storePayloads) {\n          if ((code & 1) != 0) {\n            // new payload length\n            payloadLength = proxIn.readVInt();\n            assert payloadLength >= 0;\n          }\n          assert payloadLength != -1;\n        }\n        \n        if (storeOffsets) {\n          if ((proxIn.readVInt() & 1) != 0) {\n            // new offset length\n            offsetLength = proxIn.readVInt();\n          }\n        }\n        \n        if (storePayloads) {\n          proxIn.seek(proxIn.getFilePointer() + payloadLength);\n        }\n\n        posPendingCount--;\n        position = 0;\n        startOffset = 0;\n        payloadPending = false;\n        //System.out.println(\"StandardR.D&PE skipPos\");\n      }\n\n      // read next position\n      if (payloadPending && payloadLength > 0) {\n        // payload wasn't retrieved for last position\n        proxIn.seek(proxIn.getFilePointer()+payloadLength);\n      }\n\n      int code = proxIn.readVInt();\n      if (storePayloads) {\n        if ((code & 1) != 0) {\n          // new payload length\n          payloadLength = proxIn.readVInt();\n          assert payloadLength >= 0;\n        }\n        assert payloadLength != -1;\n          \n        payloadPending = true;\n        code >>>= 1;\n      }\n      position += code;\n      \n      if (storeOffsets) {\n        int offsetCode = proxIn.readVInt();\n        if ((offsetCode & 1) != 0) {\n          // new offset length\n          offsetLength = proxIn.readVInt();\n        }\n        startOffset += offsetCode >>> 1;\n      }\n\n      posPendingCount--;\n\n      assert posPendingCount >= 0: \"nextPosition() was called too many times (more than freq() times) posPendingCount=\" + posPendingCount;\n\n      //System.out.println(\"StandardR.D&PE nextPos   return pos=\" + position);\n      return position;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Temp40PostingsReader.SegmentFullPositionsEnum#nextPosition().mjava","sourceNew":null,"sourceOld":"    @Override\n    public int nextPosition() throws IOException {\n\n      if (lazyProxPointer != -1) {\n        proxIn.seek(lazyProxPointer);\n        lazyProxPointer = -1;\n      }\n      \n      if (payloadPending && payloadLength > 0) {\n        // payload of last position was never retrieved -- skip it\n        proxIn.seek(proxIn.getFilePointer() + payloadLength);\n        payloadPending = false;\n      }\n\n      // scan over any docs that were iterated without their positions\n      while(posPendingCount > freq) {\n        final int code = proxIn.readVInt();\n\n        if (storePayloads) {\n          if ((code & 1) != 0) {\n            // new payload length\n            payloadLength = proxIn.readVInt();\n            assert payloadLength >= 0;\n          }\n          assert payloadLength != -1;\n        }\n        \n        if (storeOffsets) {\n          if ((proxIn.readVInt() & 1) != 0) {\n            // new offset length\n            offsetLength = proxIn.readVInt();\n          }\n        }\n        \n        if (storePayloads) {\n          proxIn.seek(proxIn.getFilePointer() + payloadLength);\n        }\n\n        posPendingCount--;\n        position = 0;\n        startOffset = 0;\n        payloadPending = false;\n        //System.out.println(\"StandardR.D&PE skipPos\");\n      }\n\n      // read next position\n      if (payloadPending && payloadLength > 0) {\n        // payload wasn't retrieved for last position\n        proxIn.seek(proxIn.getFilePointer()+payloadLength);\n      }\n\n      int code = proxIn.readVInt();\n      if (storePayloads) {\n        if ((code & 1) != 0) {\n          // new payload length\n          payloadLength = proxIn.readVInt();\n          assert payloadLength >= 0;\n        }\n        assert payloadLength != -1;\n          \n        payloadPending = true;\n        code >>>= 1;\n      }\n      position += code;\n      \n      if (storeOffsets) {\n        int offsetCode = proxIn.readVInt();\n        if ((offsetCode & 1) != 0) {\n          // new offset length\n          offsetLength = proxIn.readVInt();\n        }\n        startOffset += offsetCode >>> 1;\n      }\n\n      posPendingCount--;\n\n      assert posPendingCount >= 0: \"nextPosition() was called too many times (more than freq() times) posPendingCount=\" + posPendingCount;\n\n      //System.out.println(\"StandardR.D&PE nextPos   return pos=\" + position);\n      return position;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38f154048324ef4d19e56e818d0621cafb4fd453":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["38f154048324ef4d19e56e818d0621cafb4fd453"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"38f154048324ef4d19e56e818d0621cafb4fd453":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38f154048324ef4d19e56e818d0621cafb4fd453","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}