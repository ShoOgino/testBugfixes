{"path":"solr/src/test/org/apache/solr/request/JSONWriterTest#testPHPS().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/request/JSONWriterTest#testPHPS().mjava","pathOld":"/dev/null","sourceNew":"  public void testPHPS() throws IOException {\n    SolrQueryRequest req = req(\"dummy\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    QueryResponseWriter w = new PHPSerializedResponseWriter();\n\n    StringWriter buf = new StringWriter();\n    rsp.add(\"data1\", \"hello\");\n    rsp.add(\"data2\", 42);\n    rsp.add(\"data3\", true);\n    w.write(buf, req, rsp);\n    assertEquals(buf.toString(), \"a:3:{s:5:\\\"data1\\\";s:5:\\\"hello\\\";s:5:\\\"data2\\\";i:42;s:5:\\\"data3\\\";b:1;}\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/request/JSONWriterTest#testPHPS().mjava","sourceNew":null,"sourceOld":"  public void testPHPS() throws IOException {\n    SolrQueryRequest req = req(\"dummy\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    QueryResponseWriter w = new PHPSerializedResponseWriter();\n\n    StringWriter buf = new StringWriter();\n    rsp.add(\"data1\", \"hello\");\n    rsp.add(\"data2\", 42);\n    rsp.add(\"data3\", true);\n    w.write(buf, req, rsp);\n    assertEquals(buf.toString(), \"a:3:{s:5:\\\"data1\\\";s:5:\\\"hello\\\";s:5:\\\"data2\\\";i:42;s:5:\\\"data3\\\";b:1;}\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/request/JSONWriterTest#testPHPS().mjava","pathOld":"src/test/org/apache/solr/request/JSONWriterTest#testPHPS().mjava","sourceNew":"  public void testPHPS() throws IOException {\n    SolrQueryRequest req = req(\"dummy\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    QueryResponseWriter w = new PHPSerializedResponseWriter();\n\n    StringWriter buf = new StringWriter();\n    rsp.add(\"data1\", \"hello\");\n    rsp.add(\"data2\", 42);\n    rsp.add(\"data3\", true);\n    w.write(buf, req, rsp);\n    assertEquals(buf.toString(), \"a:3:{s:5:\\\"data1\\\";s:5:\\\"hello\\\";s:5:\\\"data2\\\";i:42;s:5:\\\"data3\\\";b:1;}\");\n  }\n\n","sourceOld":"  public void testPHPS() throws IOException {\n    SolrQueryRequest req = req(\"dummy\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    QueryResponseWriter w = new PHPSerializedResponseWriter();\n\n    StringWriter buf = new StringWriter();\n    rsp.add(\"data1\", \"hello\");\n    rsp.add(\"data2\", 42);\n    rsp.add(\"data3\", true);\n    w.write(buf, req, rsp);\n    assertEquals(buf.toString(), \"a:3:{s:5:\\\"data1\\\";s:5:\\\"hello\\\";s:5:\\\"data2\\\";i:42;s:5:\\\"data3\\\";b:1;}\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/request/JSONWriterTest#testPHPS().mjava","pathOld":"/dev/null","sourceNew":"  public void testPHPS() throws IOException {\n    SolrQueryRequest req = req(\"dummy\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    QueryResponseWriter w = new PHPSerializedResponseWriter();\n\n    StringWriter buf = new StringWriter();\n    rsp.add(\"data1\", \"hello\");\n    rsp.add(\"data2\", 42);\n    rsp.add(\"data3\", true);\n    w.write(buf, req, rsp);\n    assertEquals(buf.toString(), \"a:3:{s:5:\\\"data1\\\";s:5:\\\"hello\\\";s:5:\\\"data2\\\";i:42;s:5:\\\"data3\\\";b:1;}\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"afeb033b2bd36d8ce9d82142b197da4dde13068b","date":1269115863,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/request/JSONWriterTest#testPHPS().mjava","pathOld":"solr/src/test/org/apache/solr/request/JSONWriterTest#testPHPS().mjava","sourceNew":"  @Test\n  public void testPHPS() throws IOException {\n    SolrQueryRequest req = req(\"dummy\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    QueryResponseWriter w = new PHPSerializedResponseWriter();\n\n    StringWriter buf = new StringWriter();\n    rsp.add(\"data1\", \"hello\");\n    rsp.add(\"data2\", 42);\n    rsp.add(\"data3\", true);\n    w.write(buf, req, rsp);\n    assertEquals(buf.toString(), \"a:3:{s:5:\\\"data1\\\";s:5:\\\"hello\\\";s:5:\\\"data2\\\";i:42;s:5:\\\"data3\\\";b:1;}\");\n  }\n\n","sourceOld":"  public void testPHPS() throws IOException {\n    SolrQueryRequest req = req(\"dummy\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    QueryResponseWriter w = new PHPSerializedResponseWriter();\n\n    StringWriter buf = new StringWriter();\n    rsp.add(\"data1\", \"hello\");\n    rsp.add(\"data2\", 42);\n    rsp.add(\"data3\", true);\n    w.write(buf, req, rsp);\n    assertEquals(buf.toString(), \"a:3:{s:5:\\\"data1\\\";s:5:\\\"hello\\\";s:5:\\\"data2\\\";i:42;s:5:\\\"data3\\\";b:1;}\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"75b37fb54210d54c3353b3792654e257c77d38b3","date":1287360857,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/request/JSONWriterTest#testPHPS().mjava","pathOld":"solr/src/test/org/apache/solr/request/JSONWriterTest#testPHPS().mjava","sourceNew":"  @Test\n  public void testPHPS() throws IOException {\n    SolrQueryRequest req = req(\"dummy\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    QueryResponseWriter w = new PHPSerializedResponseWriter();\n\n    StringWriter buf = new StringWriter();\n    rsp.add(\"data1\", \"hello\");\n    rsp.add(\"data2\", 42);\n    rsp.add(\"data3\", true);\n    w.write(buf, req, rsp);\n    assertEquals(buf.toString(), \"a:3:{s:5:\\\"data1\\\";s:5:\\\"hello\\\";s:5:\\\"data2\\\";i:42;s:5:\\\"data3\\\";b:1;}\");\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testPHPS() throws IOException {\n    SolrQueryRequest req = req(\"dummy\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    QueryResponseWriter w = new PHPSerializedResponseWriter();\n\n    StringWriter buf = new StringWriter();\n    rsp.add(\"data1\", \"hello\");\n    rsp.add(\"data2\", 42);\n    rsp.add(\"data3\", true);\n    w.write(buf, req, rsp);\n    assertEquals(buf.toString(), \"a:3:{s:5:\\\"data1\\\";s:5:\\\"hello\\\";s:5:\\\"data2\\\";i:42;s:5:\\\"data3\\\";b:1;}\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/request/JSONWriterTest#testPHPS().mjava","pathOld":"solr/src/test/org/apache/solr/request/JSONWriterTest#testPHPS().mjava","sourceNew":"  @Test\n  public void testPHPS() throws IOException {\n    SolrQueryRequest req = req(\"dummy\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    QueryResponseWriter w = new PHPSerializedResponseWriter();\n\n    StringWriter buf = new StringWriter();\n    rsp.add(\"data1\", \"hello\");\n    rsp.add(\"data2\", 42);\n    rsp.add(\"data3\", true);\n    w.write(buf, req, rsp);\n    assertEquals(buf.toString(), \"a:3:{s:5:\\\"data1\\\";s:5:\\\"hello\\\";s:5:\\\"data2\\\";i:42;s:5:\\\"data3\\\";b:1;}\");\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testPHPS() throws IOException {\n    SolrQueryRequest req = req(\"dummy\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    QueryResponseWriter w = new PHPSerializedResponseWriter();\n\n    StringWriter buf = new StringWriter();\n    rsp.add(\"data1\", \"hello\");\n    rsp.add(\"data2\", 42);\n    rsp.add(\"data3\", true);\n    w.write(buf, req, rsp);\n    assertEquals(buf.toString(), \"a:3:{s:5:\\\"data1\\\";s:5:\\\"hello\\\";s:5:\\\"data2\\\";i:42;s:5:\\\"data3\\\";b:1;}\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/request/JSONWriterTest#testPHPS().mjava","pathOld":"solr/src/test/org/apache/solr/request/JSONWriterTest#testPHPS().mjava","sourceNew":"  @Test\n  public void testPHPS() throws IOException {\n    SolrQueryRequest req = req(\"dummy\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    QueryResponseWriter w = new PHPSerializedResponseWriter();\n\n    StringWriter buf = new StringWriter();\n    rsp.add(\"data1\", \"hello\");\n    rsp.add(\"data2\", 42);\n    rsp.add(\"data3\", true);\n    w.write(buf, req, rsp);\n    assertEquals(buf.toString(), \"a:3:{s:5:\\\"data1\\\";s:5:\\\"hello\\\";s:5:\\\"data2\\\";i:42;s:5:\\\"data3\\\";b:1;}\");\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testPHPS() throws IOException {\n    SolrQueryRequest req = req(\"dummy\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    QueryResponseWriter w = new PHPSerializedResponseWriter();\n\n    StringWriter buf = new StringWriter();\n    rsp.add(\"data1\", \"hello\");\n    rsp.add(\"data2\", 42);\n    rsp.add(\"data3\", true);\n    w.write(buf, req, rsp);\n    assertEquals(buf.toString(), \"a:3:{s:5:\\\"data1\\\";s:5:\\\"hello\\\";s:5:\\\"data2\\\";i:42;s:5:\\\"data3\\\";b:1;}\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c72bf2bc3472b7a18bcd6b95f91ccd4056a11774","date":1295386233,"type":5,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/response/TestPHPSerializedResponseWriter#testSimple().mjava","pathOld":"solr/src/test/org/apache/solr/request/JSONWriterTest#testPHPS().mjava","sourceNew":"  @Test\n  public void testSimple() throws IOException {\n    SolrQueryRequest req = req(\"dummy\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    QueryResponseWriter w = new PHPSerializedResponseWriter();\n\n    StringWriter buf = new StringWriter();\n    rsp.add(\"data1\", \"hello\");\n    rsp.add(\"data2\", 42);\n    rsp.add(\"data3\", true);\n    w.write(buf, req, rsp);\n    assertEquals(buf.toString(), \"a:3:{s:5:\\\"data1\\\";s:5:\\\"hello\\\";s:5:\\\"data2\\\";i:42;s:5:\\\"data3\\\";b:1;}\");\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testPHPS() throws IOException {\n    SolrQueryRequest req = req(\"dummy\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    QueryResponseWriter w = new PHPSerializedResponseWriter();\n\n    StringWriter buf = new StringWriter();\n    rsp.add(\"data1\", \"hello\");\n    rsp.add(\"data2\", 42);\n    rsp.add(\"data3\", true);\n    w.write(buf, req, rsp);\n    assertEquals(buf.toString(), \"a:3:{s:5:\\\"data1\\\";s:5:\\\"hello\\\";s:5:\\\"data2\\\";i:42;s:5:\\\"data3\\\";b:1;}\");\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/request/JSONWriterTest#testPHPS().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testPHPS() throws IOException {\n    SolrQueryRequest req = req(\"dummy\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    QueryResponseWriter w = new PHPSerializedResponseWriter();\n\n    StringWriter buf = new StringWriter();\n    rsp.add(\"data1\", \"hello\");\n    rsp.add(\"data2\", 42);\n    rsp.add(\"data3\", true);\n    w.write(buf, req, rsp);\n    assertEquals(buf.toString(), \"a:3:{s:5:\\\"data1\\\";s:5:\\\"hello\\\";s:5:\\\"data2\\\";i:42;s:5:\\\"data3\\\";b:1;}\");\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/request/JSONWriterTest#testPHPS().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testPHPS() throws IOException {\n    SolrQueryRequest req = req(\"dummy\");\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    QueryResponseWriter w = new PHPSerializedResponseWriter();\n\n    StringWriter buf = new StringWriter();\n    rsp.add(\"data1\", \"hello\");\n    rsp.add(\"data2\", 42);\n    rsp.add(\"data3\", true);\n    w.write(buf, req, rsp);\n    assertEquals(buf.toString(), \"a:3:{s:5:\\\"data1\\\";s:5:\\\"hello\\\";s:5:\\\"data2\\\";i:42;s:5:\\\"data3\\\";b:1;}\");\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"75b37fb54210d54c3353b3792654e257c77d38b3":["afeb033b2bd36d8ce9d82142b197da4dde13068b"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["afeb033b2bd36d8ce9d82142b197da4dde13068b","75b37fb54210d54c3353b3792654e257c77d38b3"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c72bf2bc3472b7a18bcd6b95f91ccd4056a11774"],"c72bf2bc3472b7a18bcd6b95f91ccd4056a11774":["75b37fb54210d54c3353b3792654e257c77d38b3"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","c72bf2bc3472b7a18bcd6b95f91ccd4056a11774"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afeb033b2bd36d8ce9d82142b197da4dde13068b":["1da8d55113b689b06716246649de6f62430f15c0"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["afeb033b2bd36d8ce9d82142b197da4dde13068b","75b37fb54210d54c3353b3792654e257c77d38b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c72bf2bc3472b7a18bcd6b95f91ccd4056a11774"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"75b37fb54210d54c3353b3792654e257c77d38b3":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c72bf2bc3472b7a18bcd6b95f91ccd4056a11774","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"c72bf2bc3472b7a18bcd6b95f91ccd4056a11774":["e79a6d080bdd5b2a8f56342cf571b5476de04180","29ef99d61cda9641b6250bf9567329a6e65f901d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1da8d55113b689b06716246649de6f62430f15c0":["afeb033b2bd36d8ce9d82142b197da4dde13068b"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"afeb033b2bd36d8ce9d82142b197da4dde13068b":["75b37fb54210d54c3353b3792654e257c77d38b3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e79a6d080bdd5b2a8f56342cf571b5476de04180","29ef99d61cda9641b6250bf9567329a6e65f901d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}