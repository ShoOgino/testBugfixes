{"path":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReader.SepDocsEnum#advance(int).mjava","commits":[{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReader.SepDocsEnum#advance(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReaderImpl.SepDocsEnum#advance(int).mjava","sourceNew":"    @Override\n    public int advance(int target) throws IOException {\n\n      if ((target - skipInterval) >= doc && docFreq >= skipMinimum) {\n\n        // There are enough docs in the posting to have\n        // skip data, and its not too close\n\n        if (skipper == null) {\n          // This DocsEnum has never done any skipping\n          skipper = new SepSkipListReader((IndexInput) skipIn.clone(),\n                                          freqIn,\n                                          docIn,\n                                          posIn,\n                                          maxSkipLevels, skipInterval);\n\n        }\n\n        if (!skipped) {\n          // We haven't yet skipped for this posting\n          skipper.init(skipFP,\n                       docIndex,\n                       freqIndex,\n                       posIndex,\n                       0,\n                       docFreq,\n                       storePayloads);\n          skipper.setIndexOptions(indexOptions);\n\n          skipped = true;\n        }\n\n        final int newCount = skipper.skipTo(target); \n\n        if (newCount > count) {\n\n          // Skipper did move\n          if (!omitTF) {\n            skipper.getFreqIndex().seek(freqReader);\n          }\n          skipper.getDocIndex().seek(docReader);\n          count = newCount;\n          doc = skipper.getDoc();\n        }\n      }\n        \n      // Now, linear scan for the rest:\n      do {\n        if (nextDoc() == NO_MORE_DOCS) {\n          return NO_MORE_DOCS;\n        }\n      } while (target > doc);\n\n      return doc;\n    }\n\n","sourceOld":"    @Override\n    public int advance(int target) throws IOException {\n\n      if ((target - skipInterval) >= doc && docFreq >= skipMinimum) {\n\n        // There are enough docs in the posting to have\n        // skip data, and its not too close\n\n        if (skipper == null) {\n          // This DocsEnum has never done any skipping\n          skipper = new SepSkipListReader((IndexInput) skipIn.clone(),\n                                          freqIn,\n                                          docIn,\n                                          posIn,\n                                          maxSkipLevels, skipInterval);\n\n        }\n\n        if (!skipped) {\n          // We haven't yet skipped for this posting\n          skipper.init(skipFP,\n                       docIndex,\n                       freqIndex,\n                       posIndex,\n                       0,\n                       docFreq,\n                       storePayloads);\n          skipper.setIndexOptions(indexOptions);\n\n          skipped = true;\n        }\n\n        final int newCount = skipper.skipTo(target); \n\n        if (newCount > count) {\n\n          // Skipper did move\n          if (!omitTF) {\n            skipper.getFreqIndex().seek(freqReader);\n          }\n          skipper.getDocIndex().seek(docReader);\n          count = newCount;\n          doc = skipper.getDoc();\n        }\n      }\n        \n      // Now, linear scan for the rest:\n      do {\n        if (nextDoc() == NO_MORE_DOCS) {\n          return NO_MORE_DOCS;\n        }\n      } while (target > doc);\n\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ed947d41796fd2096684c439e8a9b69aac940cf","date":1321538339,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReader.SepDocsEnum#advance(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReader.SepDocsEnum#advance(int).mjava","sourceNew":"    @Override\n    public int advance(int target) throws IOException {\n\n      if ((target - skipInterval) >= doc && docFreq >= skipMinimum) {\n\n        // There are enough docs in the posting to have\n        // skip data, and its not too close\n\n        if (skipper == null) {\n          // This DocsEnum has never done any skipping\n          skipper = new SepSkipListReader((IndexInput) skipIn.clone(),\n                                          freqIn,\n                                          docIn,\n                                          posIn,\n                                          maxSkipLevels, skipInterval);\n\n        }\n\n        if (!skipped) {\n          // We haven't yet skipped for this posting\n          skipper.init(skipFP,\n                       docIndex,\n                       freqIndex,\n                       posIndex,\n                       0,\n                       docFreq,\n                       storePayloads);\n          skipper.setIndexOptions(indexOptions);\n\n          skipped = true;\n        }\n\n        final int newCount = skipper.skipTo(target); \n\n        if (newCount > count) {\n\n          // Skipper did move\n          if (!omitTF) {\n            skipper.getFreqIndex().seek(freqReader);\n          }\n          skipper.getDocIndex().seek(docReader);\n          count = newCount;\n          doc = accum = skipper.getDoc();\n        }\n      }\n        \n      // Now, linear scan for the rest:\n      do {\n        if (nextDoc() == NO_MORE_DOCS) {\n          return NO_MORE_DOCS;\n        }\n      } while (target > doc);\n\n      return doc;\n    }\n\n","sourceOld":"    @Override\n    public int advance(int target) throws IOException {\n\n      if ((target - skipInterval) >= doc && docFreq >= skipMinimum) {\n\n        // There are enough docs in the posting to have\n        // skip data, and its not too close\n\n        if (skipper == null) {\n          // This DocsEnum has never done any skipping\n          skipper = new SepSkipListReader((IndexInput) skipIn.clone(),\n                                          freqIn,\n                                          docIn,\n                                          posIn,\n                                          maxSkipLevels, skipInterval);\n\n        }\n\n        if (!skipped) {\n          // We haven't yet skipped for this posting\n          skipper.init(skipFP,\n                       docIndex,\n                       freqIndex,\n                       posIndex,\n                       0,\n                       docFreq,\n                       storePayloads);\n          skipper.setIndexOptions(indexOptions);\n\n          skipped = true;\n        }\n\n        final int newCount = skipper.skipTo(target); \n\n        if (newCount > count) {\n\n          // Skipper did move\n          if (!omitTF) {\n            skipper.getFreqIndex().seek(freqReader);\n          }\n          skipper.getDocIndex().seek(docReader);\n          count = newCount;\n          doc = skipper.getDoc();\n        }\n      }\n        \n      // Now, linear scan for the rest:\n      do {\n        if (nextDoc() == NO_MORE_DOCS) {\n          return NO_MORE_DOCS;\n        }\n      } while (target > doc);\n\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/sep/SepPostingsReader.SepDocsEnum#advance(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepPostingsReader.SepDocsEnum#advance(int).mjava","sourceNew":"    @Override\n    public int advance(int target) throws IOException {\n\n      if ((target - skipInterval) >= doc && docFreq >= skipMinimum) {\n\n        // There are enough docs in the posting to have\n        // skip data, and its not too close\n\n        if (skipper == null) {\n          // This DocsEnum has never done any skipping\n          skipper = new SepSkipListReader((IndexInput) skipIn.clone(),\n                                          freqIn,\n                                          docIn,\n                                          posIn,\n                                          maxSkipLevels, skipInterval);\n\n        }\n\n        if (!skipped) {\n          // We haven't yet skipped for this posting\n          skipper.init(skipFP,\n                       docIndex,\n                       freqIndex,\n                       posIndex,\n                       0,\n                       docFreq,\n                       storePayloads);\n          skipper.setIndexOptions(indexOptions);\n\n          skipped = true;\n        }\n\n        final int newCount = skipper.skipTo(target); \n\n        if (newCount > count) {\n\n          // Skipper did move\n          if (!omitTF) {\n            skipper.getFreqIndex().seek(freqReader);\n          }\n          skipper.getDocIndex().seek(docReader);\n          count = newCount;\n          doc = accum = skipper.getDoc();\n        }\n      }\n        \n      // Now, linear scan for the rest:\n      do {\n        if (nextDoc() == NO_MORE_DOCS) {\n          return NO_MORE_DOCS;\n        }\n      } while (target > doc);\n\n      return doc;\n    }\n\n","sourceOld":"    @Override\n    public int advance(int target) throws IOException {\n\n      if ((target - skipInterval) >= doc && docFreq >= skipMinimum) {\n\n        // There are enough docs in the posting to have\n        // skip data, and its not too close\n\n        if (skipper == null) {\n          // This DocsEnum has never done any skipping\n          skipper = new SepSkipListReader((IndexInput) skipIn.clone(),\n                                          freqIn,\n                                          docIn,\n                                          posIn,\n                                          maxSkipLevels, skipInterval);\n\n        }\n\n        if (!skipped) {\n          // We haven't yet skipped for this posting\n          skipper.init(skipFP,\n                       docIndex,\n                       freqIndex,\n                       posIndex,\n                       0,\n                       docFreq,\n                       storePayloads);\n          skipper.setIndexOptions(indexOptions);\n\n          skipped = true;\n        }\n\n        final int newCount = skipper.skipTo(target); \n\n        if (newCount > count) {\n\n          // Skipper did move\n          if (!omitTF) {\n            skipper.getFreqIndex().seek(freqReader);\n          }\n          skipper.getDocIndex().seek(docReader);\n          count = newCount;\n          doc = accum = skipper.getDoc();\n        }\n      }\n        \n      // Now, linear scan for the rest:\n      do {\n        if (nextDoc() == NO_MORE_DOCS) {\n          return NO_MORE_DOCS;\n        }\n      } while (target > doc);\n\n      return doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1ed947d41796fd2096684c439e8a9b69aac940cf":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["1ed947d41796fd2096684c439e8a9b69aac940cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["1ed947d41796fd2096684c439e8a9b69aac940cf"],"1ed947d41796fd2096684c439e8a9b69aac940cf":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}