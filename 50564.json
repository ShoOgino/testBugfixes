{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/ByteRunAutomaton#ByteRunAutomaton(Automaton,boolean,int).mjava","commits":[{"id":"8b316f82baae88f5e279893a9cb7eee51fd8902f","date":1415131390,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/ByteRunAutomaton#ByteRunAutomaton(Automaton,boolean,int).mjava","pathOld":"/dev/null","sourceNew":"  /** expert: if utf8 is true, the input is already byte-based */\n  public ByteRunAutomaton(Automaton a, boolean utf8, int maxDeterminizedStates) {\n    super(utf8 ? a : new UTF32ToUTF8().convert(a), 256, true, maxDeterminizedStates);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e8715d826e588419327562287d5d6a8040d63d6","date":1427987148,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/ByteRunAutomaton#ByteRunAutomaton(Automaton,boolean,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/ByteRunAutomaton#ByteRunAutomaton(Automaton,boolean,int).mjava","sourceNew":"  /** expert: if utf8 is true, the input is already byte-based */\n  public ByteRunAutomaton(Automaton a, boolean isBinary, int maxDeterminizedStates) {\n    super(isBinary ? a : new UTF32ToUTF8().convert(a), 256, true, maxDeterminizedStates);\n  }\n\n","sourceOld":"  /** expert: if utf8 is true, the input is already byte-based */\n  public ByteRunAutomaton(Automaton a, boolean utf8, int maxDeterminizedStates) {\n    super(utf8 ? a : new UTF32ToUTF8().convert(a), 256, true, maxDeterminizedStates);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2638f781be724518ff6c2263d14a48cf6e68017","date":1427989059,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/ByteRunAutomaton#ByteRunAutomaton(Automaton,boolean,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/ByteRunAutomaton#ByteRunAutomaton(Automaton,boolean,int).mjava","sourceNew":"  /** expert: if utf8 is true, the input is already byte-based */\n  public ByteRunAutomaton(Automaton a, boolean isBinary, int maxDeterminizedStates) {\n    super(isBinary ? a : new UTF32ToUTF8().convert(a), 256, true, maxDeterminizedStates);\n  }\n\n","sourceOld":"  /** expert: if utf8 is true, the input is already byte-based */\n  public ByteRunAutomaton(Automaton a, boolean utf8, int maxDeterminizedStates) {\n    super(utf8 ? a : new UTF32ToUTF8().convert(a), 256, true, maxDeterminizedStates);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ddee54b1c3df60fd6198e3aa64c78038a1be8df","date":1487008231,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/ByteRunAutomaton#ByteRunAutomaton(Automaton,boolean,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/ByteRunAutomaton#ByteRunAutomaton(Automaton,boolean,int).mjava","sourceNew":"  /** expert: if isBinary is true, the input is already byte-based */\n  public ByteRunAutomaton(Automaton a, boolean isBinary, int maxDeterminizedStates) {\n    super(isBinary ? a : new UTF32ToUTF8().convert(a), 256, maxDeterminizedStates);\n  }\n\n","sourceOld":"  /** expert: if utf8 is true, the input is already byte-based */\n  public ByteRunAutomaton(Automaton a, boolean isBinary, int maxDeterminizedStates) {\n    super(isBinary ? a : new UTF32ToUTF8().convert(a), 256, true, maxDeterminizedStates);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"022a4de90e0479b604264ca9c2e134c996454ab3","date":1487118265,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/ByteRunAutomaton#ByteRunAutomaton(Automaton,boolean,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/ByteRunAutomaton#ByteRunAutomaton(Automaton,boolean,int).mjava","sourceNew":"  /** expert: if isBinary is true, the input is already byte-based */\n  public ByteRunAutomaton(Automaton a, boolean isBinary, int maxDeterminizedStates) {\n    super(isBinary ? a : new UTF32ToUTF8().convert(a), 256, maxDeterminizedStates);\n  }\n\n","sourceOld":"  /** expert: if utf8 is true, the input is already byte-based */\n  public ByteRunAutomaton(Automaton a, boolean isBinary, int maxDeterminizedStates) {\n    super(isBinary ? a : new UTF32ToUTF8().convert(a), 256, true, maxDeterminizedStates);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96","date":1487122334,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/ByteRunAutomaton#ByteRunAutomaton(Automaton,boolean,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/ByteRunAutomaton#ByteRunAutomaton(Automaton,boolean,int).mjava","sourceNew":"  /** expert: if utf8 is true, the input is already byte-based */\n  public ByteRunAutomaton(Automaton a, boolean isBinary, int maxDeterminizedStates) {\n    super(isBinary ? a : new UTF32ToUTF8().convert(a), 256, true, maxDeterminizedStates);\n  }\n\n","sourceOld":"  /** expert: if isBinary is true, the input is already byte-based */\n  public ByteRunAutomaton(Automaton a, boolean isBinary, int maxDeterminizedStates) {\n    super(isBinary ? a : new UTF32ToUTF8().convert(a), 256, maxDeterminizedStates);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"897b06b1364bd1f658a8be7591e43f0851458e7f","date":1487123008,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/ByteRunAutomaton#ByteRunAutomaton(Automaton,boolean,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/ByteRunAutomaton#ByteRunAutomaton(Automaton,boolean,int).mjava","sourceNew":"  /** expert: if isBinary is true, the input is already byte-based */\n  public ByteRunAutomaton(Automaton a, boolean isBinary, int maxDeterminizedStates) {\n    super(isBinary ? a : new UTF32ToUTF8().convert(a), 256, maxDeterminizedStates);\n  }\n\n","sourceOld":"  /** expert: if utf8 is true, the input is already byte-based */\n  public ByteRunAutomaton(Automaton a, boolean isBinary, int maxDeterminizedStates) {\n    super(isBinary ? a : new UTF32ToUTF8().convert(a), 256, true, maxDeterminizedStates);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96":["022a4de90e0479b604264ca9c2e134c996454ab3"],"022a4de90e0479b604264ca9c2e134c996454ab3":["3e8715d826e588419327562287d5d6a8040d63d6","5ddee54b1c3df60fd6198e3aa64c78038a1be8df"],"897b06b1364bd1f658a8be7591e43f0851458e7f":["b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2638f781be724518ff6c2263d14a48cf6e68017":["8b316f82baae88f5e279893a9cb7eee51fd8902f","3e8715d826e588419327562287d5d6a8040d63d6"],"8b316f82baae88f5e279893a9cb7eee51fd8902f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3e8715d826e588419327562287d5d6a8040d63d6":["8b316f82baae88f5e279893a9cb7eee51fd8902f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["897b06b1364bd1f658a8be7591e43f0851458e7f"],"5ddee54b1c3df60fd6198e3aa64c78038a1be8df":["3e8715d826e588419327562287d5d6a8040d63d6"]},"commit2Childs":{"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96":["897b06b1364bd1f658a8be7591e43f0851458e7f"],"022a4de90e0479b604264ca9c2e134c996454ab3":["b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96"],"897b06b1364bd1f658a8be7591e43f0851458e7f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8b316f82baae88f5e279893a9cb7eee51fd8902f"],"d2638f781be724518ff6c2263d14a48cf6e68017":[],"8b316f82baae88f5e279893a9cb7eee51fd8902f":["d2638f781be724518ff6c2263d14a48cf6e68017","3e8715d826e588419327562287d5d6a8040d63d6"],"3e8715d826e588419327562287d5d6a8040d63d6":["022a4de90e0479b604264ca9c2e134c996454ab3","d2638f781be724518ff6c2263d14a48cf6e68017","5ddee54b1c3df60fd6198e3aa64c78038a1be8df"],"5ddee54b1c3df60fd6198e3aa64c78038a1be8df":["022a4de90e0479b604264ca9c2e134c996454ab3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d2638f781be724518ff6c2263d14a48cf6e68017","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}