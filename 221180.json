{"path":"lucene/src/test/org/apache/lucene/search/TestMultiTermQueryRewrites#checkBooleanQueryBoosts(BooleanQuery).mjava","commits":[{"id":"33a8b1f99104f4144f210f5d068411c297cd7163","date":1287152748,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiTermQueryRewrites#checkBooleanQueryBoosts(BooleanQuery).mjava","pathOld":"/dev/null","sourceNew":"  private void checkBooleanQueryBoosts(BooleanQuery bq) {\n    for (BooleanClause clause : bq.clauses()) {\n      final TermQuery mtq = (TermQuery) clause.getQuery();\n      assertEquals(\"Parallel sorting of boosts in rewrite mode broken\",\n        Float.parseFloat(mtq.getTerm().text()), mtq.getBoost());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiTermQueryRewrites#checkBooleanQueryBoosts(BooleanQuery).mjava","pathOld":"/dev/null","sourceNew":"  private void checkBooleanQueryBoosts(BooleanQuery bq) {\n    for (BooleanClause clause : bq.clauses()) {\n      final TermQuery mtq = (TermQuery) clause.getQuery();\n      assertEquals(\"Parallel sorting of boosts in rewrite mode broken\",\n        Float.parseFloat(mtq.getTerm().text()), mtq.getBoost());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiTermQueryRewrites#checkBooleanQueryBoosts(BooleanQuery).mjava","pathOld":"/dev/null","sourceNew":"  private void checkBooleanQueryBoosts(BooleanQuery bq) {\n    for (BooleanClause clause : bq.clauses()) {\n      final TermQuery mtq = (TermQuery) clause.getQuery();\n      assertEquals(\"Parallel sorting of boosts in rewrite mode broken\",\n        Float.parseFloat(mtq.getTerm().text()), mtq.getBoost());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58f6129aa3cc4d7092fe2dacee662b263fb66e94","date":1315473880,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiTermQueryRewrites#checkBooleanQueryBoosts(BooleanQuery).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiTermQueryRewrites#checkBooleanQueryBoosts(BooleanQuery).mjava","sourceNew":"  private void checkBooleanQueryBoosts(BooleanQuery bq) {\n    for (BooleanClause clause : bq.clauses()) {\n      final TermQuery mtq = (TermQuery) clause.getQuery();\n      assertEquals(\"Parallel sorting of boosts in rewrite mode broken\",\n        Float.parseFloat(mtq.getTerm().text()), mtq.getBoost(), 0);\n    }\n  }\n\n","sourceOld":"  private void checkBooleanQueryBoosts(BooleanQuery bq) {\n    for (BooleanClause clause : bq.clauses()) {\n      final TermQuery mtq = (TermQuery) clause.getQuery();\n      assertEquals(\"Parallel sorting of boosts in rewrite mode broken\",\n        Float.parseFloat(mtq.getTerm().text()), mtq.getBoost());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiTermQueryRewrites#checkBooleanQueryBoosts(BooleanQuery).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiTermQueryRewrites#checkBooleanQueryBoosts(BooleanQuery).mjava","sourceNew":"  private void checkBooleanQueryBoosts(BooleanQuery bq) {\n    for (BooleanClause clause : bq.clauses()) {\n      final TermQuery mtq = (TermQuery) clause.getQuery();\n      assertEquals(\"Parallel sorting of boosts in rewrite mode broken\",\n        Float.parseFloat(mtq.getTerm().text()), mtq.getBoost(), 0);\n    }\n  }\n\n","sourceOld":"  private void checkBooleanQueryBoosts(BooleanQuery bq) {\n    for (BooleanClause clause : bq.clauses()) {\n      final TermQuery mtq = (TermQuery) clause.getQuery();\n      assertEquals(\"Parallel sorting of boosts in rewrite mode broken\",\n        Float.parseFloat(mtq.getTerm().text()), mtq.getBoost(), 0);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"33a8b1f99104f4144f210f5d068411c297cd7163":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"58f6129aa3cc4d7092fe2dacee662b263fb66e94":["33a8b1f99104f4144f210f5d068411c297cd7163"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["58f6129aa3cc4d7092fe2dacee662b263fb66e94"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","33a8b1f99104f4144f210f5d068411c297cd7163"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","33a8b1f99104f4144f210f5d068411c297cd7163"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"33a8b1f99104f4144f210f5d068411c297cd7163":["58f6129aa3cc4d7092fe2dacee662b263fb66e94","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"58f6129aa3cc4d7092fe2dacee662b263fb66e94":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["33a8b1f99104f4144f210f5d068411c297cd7163","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}