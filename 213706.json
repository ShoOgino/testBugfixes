{"path":"backwards/src/java/org/apache/lucene/document/AbstractField#isTermVectorStored().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/document/AbstractField#isTermVectorStored().mjava","pathOld":"/dev/null","sourceNew":"  /** True iff the term or terms used to index this field are stored as a term\n   *  vector, available from {@link org.apache.lucene.index.IndexReader#getTermFreqVector(int,String)}.\n   *  These methods do not provide access to the original content of the field,\n   *  only to terms used to index it. If the original content must be\n   *  preserved, use the <code>stored</code> attribute instead.\n   *\n   * @see org.apache.lucene.index.IndexReader#getTermFreqVector(int, String)\n   */\n  public final boolean isTermVectorStored() { return storeTermVector; }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/document/AbstractField#isTermVectorStored().mjava","pathOld":"backwards/src/java/org/apache/lucene/document/AbstractField#isTermVectorStored().mjava","sourceNew":"  /** True iff the term or terms used to index this field are stored as a term\n   *  vector, available from {@link org.apache.lucene.index.IndexReader#getTermFreqVector(int,String)}.\n   *  These methods do not provide access to the original content of the field,\n   *  only to terms used to index it. If the original content must be\n   *  preserved, use the <code>stored</code> attribute instead.\n   *\n   * @see org.apache.lucene.index.IndexReader#getTermFreqVector(int, String)\n   */\n  public final boolean isTermVectorStored() { return storeTermVector; }\n\n","sourceOld":"  /** True iff the term or terms used to index this field are stored as a term\n   *  vector, available from {@link org.apache.lucene.index.IndexReader#getTermFreqVector(int,String)}.\n   *  These methods do not provide access to the original content of the field,\n   *  only to terms used to index it. If the original content must be\n   *  preserved, use the <code>stored</code> attribute instead.\n   *\n   * @see org.apache.lucene.index.IndexReader#getTermFreqVector(int, String)\n   */\n  public final boolean isTermVectorStored() { return storeTermVector; }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":6,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/document/AbstractField#isTermVectorStored().mjava","pathOld":"backwards/src/java/org/apache/lucene/document/AbstractField#isTermVectorStored().mjava","sourceNew":"  /** True iff the term or terms used to index this field are stored as a term\n   *  vector, available from {@link org.apache.lucene.index.IndexReader#getTermFreqVector(int,String)}.\n   *  These methods do not provide access to the original content of the field,\n   *  only to terms used to index it. If the original content must be\n   *  preserved, use the <code>stored</code> attribute instead.\n   *\n   * @see org.apache.lucene.index.IndexReader#getTermFreqVector(int, String)\n   */\n  public final boolean isTermVectorStored() { return storeTermVector; }\n\n","sourceOld":"  /** True iff the term or terms used to index this field are stored as a term\n   *  vector, available from {@link org.apache.lucene.index.IndexReader#getTermFreqVector(int,String)}.\n   *  These methods do not provide access to the original content of the field,\n   *  only to terms used to index it. If the original content must be\n   *  preserved, use the <code>stored</code> attribute instead.\n   *\n   * @see org.apache.lucene.index.IndexReader#getTermFreqVector(int, String)\n   */\n  public final boolean isTermVectorStored() { return storeTermVector; }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}