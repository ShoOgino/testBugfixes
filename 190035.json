{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#Builder(String).mjava","commits":[{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#Builder(String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Create a Builder object, based on the provided Solr URL.\n     * \n     * @param baseSolrUrl the base URL of the Solr server that will be targeted by any created clients.\n     */\n    public Builder(String baseSolrUrl) {\n      this.baseSolrUrl = baseSolrUrl;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a94f5348e08612b1408bdaa533c56d77db63605e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#Builder(String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Create a Builder object, based on the provided Solr URL.\n     * \n     * @param baseSolrUrl the base URL of the Solr server that will be targeted by any created clients.\n     */\n    public Builder(String baseSolrUrl) {\n      this.baseSolrUrl = baseSolrUrl;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a94f5348e08612b1408bdaa533c56d77db63605e","date":1497307666,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#Builder(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#Builder(String).mjava","sourceNew":"    /**\n     * Create a Builder object, based on the provided Solr URL.\n     * \n     * Two different paths can be specified as a part of this URL:\n     * \n     * 1) A path pointing directly at a particular core\n     * <pre>\n     *   SolrClient client = new ConcurrentUpdateSolrClient.Builder(\"http://my-solr-server:8983/solr/core1\").build();\n     *   QueryResponse resp = client.query(new SolrQuery(\"*:*\"));\n     * </pre>\n     * Note that when a core is provided in the base URL, queries and other requests can be made without mentioning the\n     * core explicitly.  However, the client can only send requests to that core.\n     * \n     * 2) The path of the root Solr path (\"/solr\")\n     * <pre>\n     *   SolrClient client = new ConcurrentUpdateSolrClient.Builder(\"http://my-solr-server:8983/solr\").build();\n     *   QueryResponse resp = client.query(\"core1\", new SolrQuery(\"*:*\"));\n     * </pre>\n     * In this case the client is more flexible and can be used to send requests to any cores.  This flexibility though\n     * requires that the core be specified on all requests. \n     */\n    public Builder(String baseSolrUrl) {\n      this.baseSolrUrl = baseSolrUrl;\n    }\n\n","sourceOld":"    /**\n     * Create a Builder object, based on the provided Solr URL.\n     * \n     * @param baseSolrUrl the base URL of the Solr server that will be targeted by any created clients.\n     */\n    public Builder(String baseSolrUrl) {\n      this.baseSolrUrl = baseSolrUrl;\n    }\n\n","bugFix":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#Builder(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#Builder(String).mjava","sourceNew":"    /**\n     * Create a Builder object, based on the provided Solr URL.\n     * \n     * Two different paths can be specified as a part of this URL:\n     * \n     * 1) A path pointing directly at a particular core\n     * <pre>\n     *   SolrClient client = new ConcurrentUpdateSolrClient.Builder(\"http://my-solr-server:8983/solr/core1\").build();\n     *   QueryResponse resp = client.query(new SolrQuery(\"*:*\"));\n     * </pre>\n     * Note that when a core is provided in the base URL, queries and other requests can be made without mentioning the\n     * core explicitly.  However, the client can only send requests to that core.\n     * \n     * 2) The path of the root Solr path (\"/solr\")\n     * <pre>\n     *   SolrClient client = new ConcurrentUpdateSolrClient.Builder(\"http://my-solr-server:8983/solr\").build();\n     *   QueryResponse resp = client.query(\"core1\", new SolrQuery(\"*:*\"));\n     * </pre>\n     * In this case the client is more flexible and can be used to send requests to any cores.  This flexibility though\n     * requires that the core be specified on all requests. \n     */\n    public Builder(String baseSolrUrl) {\n      this.baseSolrUrl = baseSolrUrl;\n    }\n\n","sourceOld":"    /**\n     * Create a Builder object, based on the provided Solr URL.\n     * \n     * @param baseSolrUrl the base URL of the Solr server that will be targeted by any created clients.\n     */\n    public Builder(String baseSolrUrl) {\n      this.baseSolrUrl = baseSolrUrl;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#Builder(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClient.Builder#Builder(String).mjava","sourceNew":"    /**\n     * Create a Builder object, based on the provided Solr URL.\n     * \n     * Two different paths can be specified as a part of this URL:\n     * \n     * 1) A path pointing directly at a particular core\n     * <pre>\n     *   SolrClient client = new ConcurrentUpdateSolrClient.Builder(\"http://my-solr-server:8983/solr/core1\").build();\n     *   QueryResponse resp = client.query(new SolrQuery(\"*:*\"));\n     * </pre>\n     * Note that when a core is provided in the base URL, queries and other requests can be made without mentioning the\n     * core explicitly.  However, the client can only send requests to that core.\n     * \n     * 2) The path of the root Solr path (\"/solr\")\n     * <pre>\n     *   SolrClient client = new ConcurrentUpdateSolrClient.Builder(\"http://my-solr-server:8983/solr\").build();\n     *   QueryResponse resp = client.query(\"core1\", new SolrQuery(\"*:*\"));\n     * </pre>\n     * In this case the client is more flexible and can be used to send requests to any cores.  This flexibility though\n     * requires that the core be specified on all requests. \n     */\n    public Builder(String baseSolrUrl) {\n      this.baseSolrUrl = baseSolrUrl;\n    }\n\n","sourceOld":"    /**\n     * Create a Builder object, based on the provided Solr URL.\n     * \n     * @param baseSolrUrl the base URL of the Solr server that will be targeted by any created clients.\n     */\n    public Builder(String baseSolrUrl) {\n      this.baseSolrUrl = baseSolrUrl;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a94f5348e08612b1408bdaa533c56d77db63605e":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"28288370235ed02234a64753cdbf0c6ec096304a":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","a94f5348e08612b1408bdaa533c56d77db63605e"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","a94f5348e08612b1408bdaa533c56d77db63605e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"a94f5348e08612b1408bdaa533c56d77db63605e":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["a94f5348e08612b1408bdaa533c56d77db63605e","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}