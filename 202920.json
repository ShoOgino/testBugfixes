{"path":"lucene/src/java/org/apache/lucene/codecs/lucene40/values/PackedIntValues.PackedIntsReader#load().mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/values/PackedIntValues.PackedIntsReader#load().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/PackedIntValues.PackedIntsReader#load().mjava","sourceNew":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        \n        if (values == null) {\n          source = new PackedIntsSource(input, false);\n        } else {\n          source = values.newFromInput(input, numDocs);\n        }\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        \n        if (values == null) {\n          source = new PackedIntsSource(input, false);\n        } else {\n          source = values.newFromInput(input, numDocs);\n        }\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/PackedIntValues.PackedIntsReader#load().mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/values/PackedIntValues.PackedIntsReader#load().mjava","sourceNew":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        \n        if (values == null) {\n          source = new PackedIntsSource(input, false);\n        } else {\n          source = values.newFromInput(input, numDocs);\n        }\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","sourceOld":"    /**\n     * Loads the actual values. You may call this more than once, eg if you\n     * already previously loaded but then discarded the Source.\n     */\n    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      final Source source;\n      IndexInput input = null;\n      try {\n        input = (IndexInput) datIn.clone();\n        \n        if (values == null) {\n          source = new PackedIntsSource(input, false);\n        } else {\n          source = values.newFromInput(input, numDocs);\n        }\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(input, datIn);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}