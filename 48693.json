{"path":"lucene/src/java/org/apache/lucene/search/ReqExclScorer#toNonExcluded().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/ReqExclScorer#toNonExcluded().mjava","pathOld":"src/java/org/apache/lucene/search/ReqExclScorer#toNonExcluded().mjava","sourceNew":"  /** Advance to non excluded doc.\n   * <br>On entry:\n   * <ul>\n   * <li>reqScorer != null,\n   * <li>exclScorer != null,\n   * <li>reqScorer was advanced once via next() or skipTo()\n   *      and reqScorer.doc() may still be excluded.\n   * </ul>\n   * Advances reqScorer a non excluded required doc, if any.\n   * @return true iff there is a non excluded required doc.\n   */\n  private int toNonExcluded() throws IOException {\n    int exclDoc = exclDisi.docID();\n    int reqDoc = reqScorer.docID(); // may be excluded\n    do {  \n      if (reqDoc < exclDoc) {\n        return reqDoc; // reqScorer advanced to before exclScorer, ie. not excluded\n      } else if (reqDoc > exclDoc) {\n        exclDoc = exclDisi.advance(reqDoc);\n        if (exclDoc == NO_MORE_DOCS) {\n          exclDisi = null; // exhausted, no more exclusions\n          return reqDoc;\n        }\n        if (exclDoc > reqDoc) {\n          return reqDoc; // not excluded\n        }\n      }\n    } while ((reqDoc = reqScorer.nextDoc()) != NO_MORE_DOCS);\n    reqScorer = null; // exhausted, nothing left\n    return NO_MORE_DOCS;\n  }\n\n","sourceOld":"  /** Advance to non excluded doc.\n   * <br>On entry:\n   * <ul>\n   * <li>reqScorer != null,\n   * <li>exclScorer != null,\n   * <li>reqScorer was advanced once via next() or skipTo()\n   *      and reqScorer.doc() may still be excluded.\n   * </ul>\n   * Advances reqScorer a non excluded required doc, if any.\n   * @return true iff there is a non excluded required doc.\n   */\n  private int toNonExcluded() throws IOException {\n    int exclDoc = exclDisi.docID();\n    int reqDoc = reqScorer.docID(); // may be excluded\n    do {  \n      if (reqDoc < exclDoc) {\n        return reqDoc; // reqScorer advanced to before exclScorer, ie. not excluded\n      } else if (reqDoc > exclDoc) {\n        exclDoc = exclDisi.advance(reqDoc);\n        if (exclDoc == NO_MORE_DOCS) {\n          exclDisi = null; // exhausted, no more exclusions\n          return reqDoc;\n        }\n        if (exclDoc > reqDoc) {\n          return reqDoc; // not excluded\n        }\n      }\n    } while ((reqDoc = reqScorer.nextDoc()) != NO_MORE_DOCS);\n    reqScorer = null; // exhausted, nothing left\n    return NO_MORE_DOCS;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ReqExclScorer#toNonExcluded().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/ReqExclScorer#toNonExcluded().mjava","sourceNew":"  /** Advance to non excluded doc.\n   * <br>On entry:\n   * <ul>\n   * <li>reqScorer != null,\n   * <li>exclScorer != null,\n   * <li>reqScorer was advanced once via next() or skipTo()\n   *      and reqScorer.doc() may still be excluded.\n   * </ul>\n   * Advances reqScorer a non excluded required doc, if any.\n   * @return true iff there is a non excluded required doc.\n   */\n  private int toNonExcluded() throws IOException {\n    int exclDoc = exclDisi.docID();\n    int reqDoc = reqScorer.docID(); // may be excluded\n    do {  \n      if (reqDoc < exclDoc) {\n        return reqDoc; // reqScorer advanced to before exclScorer, ie. not excluded\n      } else if (reqDoc > exclDoc) {\n        exclDoc = exclDisi.advance(reqDoc);\n        if (exclDoc == NO_MORE_DOCS) {\n          exclDisi = null; // exhausted, no more exclusions\n          return reqDoc;\n        }\n        if (exclDoc > reqDoc) {\n          return reqDoc; // not excluded\n        }\n      }\n    } while ((reqDoc = reqScorer.nextDoc()) != NO_MORE_DOCS);\n    reqScorer = null; // exhausted, nothing left\n    return NO_MORE_DOCS;\n  }\n\n","sourceOld":"  /** Advance to non excluded doc.\n   * <br>On entry:\n   * <ul>\n   * <li>reqScorer != null,\n   * <li>exclScorer != null,\n   * <li>reqScorer was advanced once via next() or skipTo()\n   *      and reqScorer.doc() may still be excluded.\n   * </ul>\n   * Advances reqScorer a non excluded required doc, if any.\n   * @return true iff there is a non excluded required doc.\n   */\n  private int toNonExcluded() throws IOException {\n    int exclDoc = exclDisi.docID();\n    int reqDoc = reqScorer.docID(); // may be excluded\n    do {  \n      if (reqDoc < exclDoc) {\n        return reqDoc; // reqScorer advanced to before exclScorer, ie. not excluded\n      } else if (reqDoc > exclDoc) {\n        exclDoc = exclDisi.advance(reqDoc);\n        if (exclDoc == NO_MORE_DOCS) {\n          exclDisi = null; // exhausted, no more exclusions\n          return reqDoc;\n        }\n        if (exclDoc > reqDoc) {\n          return reqDoc; // not excluded\n        }\n      }\n    } while ((reqDoc = reqScorer.nextDoc()) != NO_MORE_DOCS);\n    reqScorer = null; // exhausted, nothing left\n    return NO_MORE_DOCS;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}