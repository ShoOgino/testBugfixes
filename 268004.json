{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#randomIndexSortField().mjava","commits":[{"id":"e065cebbdee472a02bde38052717a8cd7ee8ab3b","date":1479244971,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#randomIndexSortField().mjava","pathOld":"/dev/null","sourceNew":"  private SortField randomIndexSortField() {\n    boolean reversed = random().nextBoolean();\n    SortField sortField;\n    switch(random().nextInt(10)) {\n      case 0:\n        sortField = new SortField(TestUtil.randomSimpleString(random()), SortField.Type.INT, reversed);\n        if (random().nextBoolean()) {\n          sortField.setMissingValue(random().nextInt());\n        }\n        break;\n      case 1:\n        sortField = new SortedNumericSortField(TestUtil.randomSimpleString(random()), SortField.Type.INT, reversed);\n        if (random().nextBoolean()) {\n          sortField.setMissingValue(random().nextInt());\n        }\n        break;\n\n      case 2:\n        sortField = new SortField(TestUtil.randomSimpleString(random()), SortField.Type.LONG, reversed);\n        if (random().nextBoolean()) {\n          sortField.setMissingValue(random().nextLong());\n        }\n        break;\n      case 3:\n        sortField = new SortedNumericSortField(TestUtil.randomSimpleString(random()), SortField.Type.LONG, reversed);\n        if (random().nextBoolean()) {\n          sortField.setMissingValue(random().nextLong());\n        }\n        break;\n      case 4:\n        sortField = new SortField(TestUtil.randomSimpleString(random()), SortField.Type.FLOAT, reversed);\n        if (random().nextBoolean()) {\n          sortField.setMissingValue(random().nextFloat());\n        }\n        break;\n      case 5:\n        sortField = new SortedNumericSortField(TestUtil.randomSimpleString(random()), SortField.Type.FLOAT, reversed);\n        if (random().nextBoolean()) {\n          sortField.setMissingValue(random().nextFloat());\n        }\n        break;\n      case 6:\n        sortField = new SortField(TestUtil.randomSimpleString(random()), SortField.Type.DOUBLE, reversed);\n        if (random().nextBoolean()) {\n          sortField.setMissingValue(random().nextDouble());\n        }\n        break;\n      case 7:\n        sortField = new SortedNumericSortField(TestUtil.randomSimpleString(random()), SortField.Type.DOUBLE, reversed);\n        if (random().nextBoolean()) {\n          sortField.setMissingValue(random().nextDouble());\n        }\n        break;\n      case 8:\n        sortField = new SortField(TestUtil.randomSimpleString(random()), SortField.Type.STRING, reversed);\n        if (random().nextBoolean()) {\n          sortField.setMissingValue(SortField.STRING_LAST);\n        }\n        break;\n      case 9:\n        sortField = new SortedSetSortField(TestUtil.randomSimpleString(random()), reversed);\n        if (random().nextBoolean()) {\n          sortField.setMissingValue(SortField.STRING_LAST);\n        }\n        break;\n      default:\n        sortField = null;\n        fail();\n    }\n    return sortField;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a1ef55e1fff7ff44354432770ad8bc19be1fcc75","date":1479266056,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseSegmentInfoFormatTestCase#randomIndexSortField().mjava","pathOld":"/dev/null","sourceNew":"  private SortField randomIndexSortField() {\n    boolean reversed = random().nextBoolean();\n    SortField sortField;\n    switch(random().nextInt(10)) {\n      case 0:\n        sortField = new SortField(TestUtil.randomSimpleString(random()), SortField.Type.INT, reversed);\n        if (random().nextBoolean()) {\n          sortField.setMissingValue(random().nextInt());\n        }\n        break;\n      case 1:\n        sortField = new SortedNumericSortField(TestUtil.randomSimpleString(random()), SortField.Type.INT, reversed);\n        if (random().nextBoolean()) {\n          sortField.setMissingValue(random().nextInt());\n        }\n        break;\n\n      case 2:\n        sortField = new SortField(TestUtil.randomSimpleString(random()), SortField.Type.LONG, reversed);\n        if (random().nextBoolean()) {\n          sortField.setMissingValue(random().nextLong());\n        }\n        break;\n      case 3:\n        sortField = new SortedNumericSortField(TestUtil.randomSimpleString(random()), SortField.Type.LONG, reversed);\n        if (random().nextBoolean()) {\n          sortField.setMissingValue(random().nextLong());\n        }\n        break;\n      case 4:\n        sortField = new SortField(TestUtil.randomSimpleString(random()), SortField.Type.FLOAT, reversed);\n        if (random().nextBoolean()) {\n          sortField.setMissingValue(random().nextFloat());\n        }\n        break;\n      case 5:\n        sortField = new SortedNumericSortField(TestUtil.randomSimpleString(random()), SortField.Type.FLOAT, reversed);\n        if (random().nextBoolean()) {\n          sortField.setMissingValue(random().nextFloat());\n        }\n        break;\n      case 6:\n        sortField = new SortField(TestUtil.randomSimpleString(random()), SortField.Type.DOUBLE, reversed);\n        if (random().nextBoolean()) {\n          sortField.setMissingValue(random().nextDouble());\n        }\n        break;\n      case 7:\n        sortField = new SortedNumericSortField(TestUtil.randomSimpleString(random()), SortField.Type.DOUBLE, reversed);\n        if (random().nextBoolean()) {\n          sortField.setMissingValue(random().nextDouble());\n        }\n        break;\n      case 8:\n        sortField = new SortField(TestUtil.randomSimpleString(random()), SortField.Type.STRING, reversed);\n        if (random().nextBoolean()) {\n          sortField.setMissingValue(SortField.STRING_LAST);\n        }\n        break;\n      case 9:\n        sortField = new SortedSetSortField(TestUtil.randomSimpleString(random()), reversed);\n        if (random().nextBoolean()) {\n          sortField.setMissingValue(SortField.STRING_LAST);\n        }\n        break;\n      default:\n        sortField = null;\n        fail();\n    }\n    return sortField;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a1ef55e1fff7ff44354432770ad8bc19be1fcc75":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e065cebbdee472a02bde38052717a8cd7ee8ab3b"],"e065cebbdee472a02bde38052717a8cd7ee8ab3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e065cebbdee472a02bde38052717a8cd7ee8ab3b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a1ef55e1fff7ff44354432770ad8bc19be1fcc75","e065cebbdee472a02bde38052717a8cd7ee8ab3b"],"a1ef55e1fff7ff44354432770ad8bc19be1fcc75":[],"e065cebbdee472a02bde38052717a8cd7ee8ab3b":["a1ef55e1fff7ff44354432770ad8bc19be1fcc75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a1ef55e1fff7ff44354432770ad8bc19be1fcc75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}