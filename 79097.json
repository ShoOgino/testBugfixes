{"path":"contrib/gdata-server/src/test/org/apache/lucene/gdata/search/index/TestGdataIndexer#testDeleteDocument().mjava","commits":[{"id":"09fe963da2613c724ffe82353b4ca2364a1f93c6","date":1155249160,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/test/org/apache/lucene/gdata/search/index/TestGdataIndexer#testDeleteDocument().mjava","pathOld":"/dev/null","sourceNew":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.index.GDataIndexer.deleteDocument(IndexDocument)'\n     */\n    public void testDeleteDocument() throws IOException {\n        String id = \"myID\";\n        Field f = new Field(FIELD_ID, id, Field.Store.YES,\n                Field.Index.UN_TOKENIZED);\n        Document doc = new Document();\n        doc.add(f);\n        Term delTerm =  new Term(FIELD_ID, id);\n        IndexDocument iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.INSERT);\n        /*\n         * write doc to index\n         */\n        this.indexer.writer.addDocument(doc);\n       \n        this.indexer.closeWriter();\n        IndexSearcher s = new IndexSearcher(this.dir);\n        Hits h = s.search(new TermQuery(delTerm));\n        assertEquals(1, h.length());\n        s.close();\n        \n        /*\n         * del doc via indexer\n         */\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        this.indexer.deleteDocument(iDoc);\n        assertEquals(0,this.indexer.docsAdded.get());\n        assertEquals(1,this.indexer.docsDeleted.get());\n        assertEquals(0,this.indexer.docsUpdated.get());\n        this.indexer.commit(false);\n        s = new IndexSearcher(this.dir);\n        h = s.search(new TermQuery(delTerm));\n        assertEquals(0, h.length());\n        s.close();\n        \n        /*\n         * test insert / del without commit\n         */ \n        iDoc = new IndexDocumentStub(doc,delTerm,\n                 IndexAction.INSERT);\n        this.indexer.addDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        this.indexer.deleteDocument(iDoc);\n        this.indexer.commit(false);\n        s = new IndexSearcher(this.dir);\n        h = s.search(new TermQuery(delTerm));\n        assertEquals(0, h.length());\n        s.close();\n        \n        /*\n         * test insert / update / del without commit\n         */\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.INSERT);\n        this.indexer.addDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.UPDATE);\n        this.indexer.updateDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        this.indexer.deleteDocument(iDoc);\n        this.indexer.commit(false);\n        s = new IndexSearcher(this.dir);\n        h = s.search(new TermQuery(delTerm));\n        assertEquals(0, h.length());\n        s.close();\n        \n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.UPDATE);\n        try{\n            this.indexer.deleteDocument(iDoc);\n            fail(\"document has not delete action \");\n        }catch (GdataIndexerException e) {\n            \n        }\n        \n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"032a97fadd06b99cd75ebc3be22b74701f80e25d","date":1155763286,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/test/org/apache/lucene/gdata/search/index/TestGdataIndexer#testDeleteDocument().mjava","pathOld":"contrib/gdata-server/src/test/org/apache/lucene/gdata/search/index/TestGdataIndexer#testDeleteDocument().mjava","sourceNew":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.index.GDataIndexer.deleteDocument(IndexDocument)'\n     */\n    public void testDeleteDocument() throws IOException {\n        String id = \"myID\";\n        Field f = new Field(FIELD_ID, id, Field.Store.YES,\n                Field.Index.UN_TOKENIZED);\n        Document doc = new Document();\n        doc.add(f);\n        Term delTerm =  new Term(FIELD_ID, id);\n        IndexDocument iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.INSERT);\n        /*\n         * write doc to index\n         */\n        this.indexer.writer.addDocument(doc);\n       \n        this.indexer.closeWriter();\n        IndexSearcher s = new IndexSearcher(this.dir);\n        Hits h = s.search(new TermQuery(delTerm));\n        assertEquals(1, h.length());\n        s.close();\n        \n        /*\n         * del doc via indexer\n         */\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        this.indexer.deleteDocument(iDoc);\n        assertEquals(0,this.indexer.docsAdded.get());\n        assertEquals(1,this.indexer.docsDeleted.get());\n        assertEquals(0,this.indexer.docsUpdated.get());\n        this.indexer.commit(false);\n        s = new IndexSearcher(this.dir);\n        h = s.search(new TermQuery(delTerm));\n        assertEquals(0, h.length());\n        s.close();\n        \n        /*\n         * test insert / del without optimize\n         */ \n        iDoc = new IndexDocumentStub(doc,delTerm,\n                 IndexAction.INSERT);\n        this.indexer.addDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        this.indexer.deleteDocument(iDoc);\n        this.indexer.commit(false);\n        s = new IndexSearcher(this.dir);\n        h = s.search(new TermQuery(delTerm));\n        assertEquals(0, h.length());\n        s.close();\n        \n        \n        \n        /*\n         * test insert / del / update without optimize\n         */ \n        iDoc = new IndexDocumentStub(doc,delTerm,\n                 IndexAction.INSERT);\n        this.indexer.addDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        this.indexer.deleteDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.INSERT);\n       this.indexer.addDocument(iDoc);\n        this.indexer.commit(false);\n        s = new IndexSearcher(this.dir);\n        h = s.search(new TermQuery(delTerm));\n        assertEquals(1, h.length());\n        s.close();\n        \n        \n        \n        \n        /*\n         * test insert / update / del without optimize\n         */\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.INSERT);\n        this.indexer.addDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.UPDATE);\n        this.indexer.updateDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        this.indexer.deleteDocument(iDoc);\n        this.indexer.commit(false);\n        s = new IndexSearcher(this.dir);\n        h = s.search(new TermQuery(delTerm));\n        assertEquals(0, h.length());\n        s.close();\n        \n        \n        \n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.UPDATE);\n        try{\n            this.indexer.deleteDocument(iDoc);\n            fail(\"document has not delete action \");\n        }catch (GdataIndexerException e) {\n            \n        }\n        \n    }\n\n","sourceOld":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.index.GDataIndexer.deleteDocument(IndexDocument)'\n     */\n    public void testDeleteDocument() throws IOException {\n        String id = \"myID\";\n        Field f = new Field(FIELD_ID, id, Field.Store.YES,\n                Field.Index.UN_TOKENIZED);\n        Document doc = new Document();\n        doc.add(f);\n        Term delTerm =  new Term(FIELD_ID, id);\n        IndexDocument iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.INSERT);\n        /*\n         * write doc to index\n         */\n        this.indexer.writer.addDocument(doc);\n       \n        this.indexer.closeWriter();\n        IndexSearcher s = new IndexSearcher(this.dir);\n        Hits h = s.search(new TermQuery(delTerm));\n        assertEquals(1, h.length());\n        s.close();\n        \n        /*\n         * del doc via indexer\n         */\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        this.indexer.deleteDocument(iDoc);\n        assertEquals(0,this.indexer.docsAdded.get());\n        assertEquals(1,this.indexer.docsDeleted.get());\n        assertEquals(0,this.indexer.docsUpdated.get());\n        this.indexer.commit(false);\n        s = new IndexSearcher(this.dir);\n        h = s.search(new TermQuery(delTerm));\n        assertEquals(0, h.length());\n        s.close();\n        \n        /*\n         * test insert / del without commit\n         */ \n        iDoc = new IndexDocumentStub(doc,delTerm,\n                 IndexAction.INSERT);\n        this.indexer.addDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        this.indexer.deleteDocument(iDoc);\n        this.indexer.commit(false);\n        s = new IndexSearcher(this.dir);\n        h = s.search(new TermQuery(delTerm));\n        assertEquals(0, h.length());\n        s.close();\n        \n        /*\n         * test insert / update / del without commit\n         */\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.INSERT);\n        this.indexer.addDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.UPDATE);\n        this.indexer.updateDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        this.indexer.deleteDocument(iDoc);\n        this.indexer.commit(false);\n        s = new IndexSearcher(this.dir);\n        h = s.search(new TermQuery(delTerm));\n        assertEquals(0, h.length());\n        s.close();\n        \n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.UPDATE);\n        try{\n            this.indexer.deleteDocument(iDoc);\n            fail(\"document has not delete action \");\n        }catch (GdataIndexerException e) {\n            \n        }\n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/search/index/TestGdataIndexer#testDeleteDocument().mjava","pathOld":"contrib/gdata-server/src/test/org/apache/lucene/gdata/search/index/TestGdataIndexer#testDeleteDocument().mjava","sourceNew":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.index.GDataIndexer.deleteDocument(IndexDocument)'\n     */\n    public void testDeleteDocument() throws IOException {\n        String id = \"myID\";\n        Field f = new Field(FIELD_ID, id, Field.Store.YES,\n                Field.Index.UN_TOKENIZED);\n        Document doc = new Document();\n        doc.add(f);\n        Term delTerm =  new Term(FIELD_ID, id);\n        IndexDocument iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.INSERT);\n        /*\n         * write doc to index\n         */\n        this.indexer.writer.addDocument(doc);\n       \n        this.indexer.closeWriter();\n        IndexSearcher s = new IndexSearcher(this.dir);\n        Hits h = s.search(new TermQuery(delTerm));\n        assertEquals(1, h.length());\n        s.close();\n        \n        /*\n         * del doc via indexer\n         */\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        this.indexer.deleteDocument(iDoc);\n        assertEquals(0,this.indexer.docsAdded.get());\n        assertEquals(1,this.indexer.docsDeleted.get());\n        assertEquals(0,this.indexer.docsUpdated.get());\n        this.indexer.commit(false);\n        s = new IndexSearcher(this.dir);\n        h = s.search(new TermQuery(delTerm));\n        assertEquals(0, h.length());\n        s.close();\n        \n        /*\n         * test insert / del without optimize\n         */ \n        iDoc = new IndexDocumentStub(doc,delTerm,\n                 IndexAction.INSERT);\n        this.indexer.addDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        this.indexer.deleteDocument(iDoc);\n        this.indexer.commit(false);\n        s = new IndexSearcher(this.dir);\n        h = s.search(new TermQuery(delTerm));\n        assertEquals(0, h.length());\n        s.close();\n        \n        \n        \n        /*\n         * test insert / del / update without optimize\n         */ \n        iDoc = new IndexDocumentStub(doc,delTerm,\n                 IndexAction.INSERT);\n        this.indexer.addDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        this.indexer.deleteDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.INSERT);\n       this.indexer.addDocument(iDoc);\n        this.indexer.commit(false);\n        s = new IndexSearcher(this.dir);\n        h = s.search(new TermQuery(delTerm));\n        assertEquals(1, h.length());\n        s.close();\n        \n        \n        \n        \n        /*\n         * test insert / update / del without optimize\n         */\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.INSERT);\n        this.indexer.addDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.UPDATE);\n        this.indexer.updateDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        this.indexer.deleteDocument(iDoc);\n        this.indexer.commit(false);\n        s = new IndexSearcher(this.dir);\n        h = s.search(new TermQuery(delTerm));\n        assertEquals(0, h.length());\n        s.close();\n        \n        \n        \n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.UPDATE);\n        try{\n            this.indexer.deleteDocument(iDoc);\n            fail(\"document has not delete action \");\n        }catch (GdataIndexerException e) {\n            \n        }\n        \n    }\n\n","sourceOld":"    /*\n     * Test method for\n     * 'org.apache.lucene.gdata.search.index.GDataIndexer.deleteDocument(IndexDocument)'\n     */\n    public void testDeleteDocument() throws IOException {\n        String id = \"myID\";\n        Field f = new Field(FIELD_ID, id, Field.Store.YES,\n                Field.Index.UN_TOKENIZED);\n        Document doc = new Document();\n        doc.add(f);\n        Term delTerm =  new Term(FIELD_ID, id);\n        IndexDocument iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.INSERT);\n        /*\n         * write doc to index\n         */\n        this.indexer.writer.addDocument(doc);\n       \n        this.indexer.closeWriter();\n        IndexSearcher s = new IndexSearcher(this.dir);\n        Hits h = s.search(new TermQuery(delTerm));\n        assertEquals(1, h.length());\n        s.close();\n        \n        /*\n         * del doc via indexer\n         */\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        this.indexer.deleteDocument(iDoc);\n        assertEquals(0,this.indexer.docsAdded.get());\n        assertEquals(1,this.indexer.docsDeleted.get());\n        assertEquals(0,this.indexer.docsUpdated.get());\n        this.indexer.commit(false);\n        s = new IndexSearcher(this.dir);\n        h = s.search(new TermQuery(delTerm));\n        assertEquals(0, h.length());\n        s.close();\n        \n        /*\n         * test insert / del without optimize\n         */ \n        iDoc = new IndexDocumentStub(doc,delTerm,\n                 IndexAction.INSERT);\n        this.indexer.addDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        this.indexer.deleteDocument(iDoc);\n        this.indexer.commit(false);\n        s = new IndexSearcher(this.dir);\n        h = s.search(new TermQuery(delTerm));\n        assertEquals(0, h.length());\n        s.close();\n        \n        \n        \n        /*\n         * test insert / del / update without optimize\n         */ \n        iDoc = new IndexDocumentStub(doc,delTerm,\n                 IndexAction.INSERT);\n        this.indexer.addDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        this.indexer.deleteDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.INSERT);\n       this.indexer.addDocument(iDoc);\n        this.indexer.commit(false);\n        s = new IndexSearcher(this.dir);\n        h = s.search(new TermQuery(delTerm));\n        assertEquals(1, h.length());\n        s.close();\n        \n        \n        \n        \n        /*\n         * test insert / update / del without optimize\n         */\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.INSERT);\n        this.indexer.addDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.UPDATE);\n        this.indexer.updateDocument(iDoc);\n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.DELETE);\n        this.indexer.deleteDocument(iDoc);\n        this.indexer.commit(false);\n        s = new IndexSearcher(this.dir);\n        h = s.search(new TermQuery(delTerm));\n        assertEquals(0, h.length());\n        s.close();\n        \n        \n        \n        iDoc = new IndexDocumentStub(doc,delTerm,\n                IndexAction.UPDATE);\n        try{\n            this.indexer.deleteDocument(iDoc);\n            fail(\"document has not delete action \");\n        }catch (GdataIndexerException e) {\n            \n        }\n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"032a97fadd06b99cd75ebc3be22b74701f80e25d":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["032a97fadd06b99cd75ebc3be22b74701f80e25d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"]},"commit2Childs":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["032a97fadd06b99cd75ebc3be22b74701f80e25d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"032a97fadd06b99cd75ebc3be22b74701f80e25d":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}