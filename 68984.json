{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41DocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","commits":[{"id":"d7bf953a8ab9ae7d92835bdf9cbe5a268448868f","date":1358522034,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41DocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SimpleDocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","sourceNew":"  @Override\n  public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n    // write the ordinals as numerics\n    addNumericField(field, docToOrd);\n    \n    // write the values as FST\n    meta.writeVInt(field.number);\n    meta.writeByte(FST);\n    meta.writeLong(data.getFilePointer());\n    PositiveIntOutputs outputs = PositiveIntOutputs.getSingleton(true);\n    Builder<Long> builder = new Builder<Long>(INPUT_TYPE.BYTE1, outputs);\n    IntsRef scratch = new IntsRef();\n    long ord = 0;\n    for (BytesRef v : values) {\n      builder.add(Util.toIntsRef(v, scratch), ord);\n      ord++;\n    }\n    FST<Long> fst = builder.finish();\n    fst.save(data);\n    meta.writeVInt((int)ord);\n  }\n\n","sourceOld":"  @Override\n  public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n    // write the ordinals as numerics\n    addNumericField(field, docToOrd);\n    \n    // write the values as FST\n    meta.writeVInt(field.number);\n    meta.writeByte(FST);\n    meta.writeLong(data.getFilePointer());\n    PositiveIntOutputs outputs = PositiveIntOutputs.getSingleton(true);\n    Builder<Long> builder = new Builder<Long>(INPUT_TYPE.BYTE1, outputs);\n    IntsRef scratch = new IntsRef();\n    long ord = 0;\n    for (BytesRef v : values) {\n      builder.add(Util.toIntsRef(v, scratch), ord);\n      ord++;\n    }\n    FST<Long> fst = builder.finish();\n    fst.save(data);\n    meta.writeVInt((int)ord);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e","date":1358793943,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41DocValuesConsumer#addSortedField(FieldInfo,Iterable[BytesRef],Iterable[Number]).mjava","sourceNew":"  @Override\n  public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n    // write the ordinals as numerics\n    addNumericField(field, docToOrd);\n    \n    // write the values as FST\n    meta.writeVInt(field.number);\n    meta.writeByte(FST);\n    meta.writeLong(data.getFilePointer());\n    PositiveIntOutputs outputs = PositiveIntOutputs.getSingleton(true);\n    Builder<Long> builder = new Builder<Long>(INPUT_TYPE.BYTE1, outputs);\n    IntsRef scratch = new IntsRef();\n    long ord = 0;\n    for (BytesRef v : values) {\n      builder.add(Util.toIntsRef(v, scratch), ord);\n      ord++;\n    }\n    FST<Long> fst = builder.finish();\n    fst.save(data);\n    meta.writeVInt((int)ord);\n  }\n\n","sourceOld":"  @Override\n  public void addSortedField(FieldInfo field, Iterable<BytesRef> values, Iterable<Number> docToOrd) throws IOException {\n    // write the ordinals as numerics\n    addNumericField(field, docToOrd);\n    \n    // write the values as FST\n    meta.writeVInt(field.number);\n    meta.writeByte(FST);\n    meta.writeLong(data.getFilePointer());\n    PositiveIntOutputs outputs = PositiveIntOutputs.getSingleton(true);\n    Builder<Long> builder = new Builder<Long>(INPUT_TYPE.BYTE1, outputs);\n    IntsRef scratch = new IntsRef();\n    long ord = 0;\n    for (BytesRef v : values) {\n      builder.add(Util.toIntsRef(v, scratch), ord);\n      ord++;\n    }\n    FST<Long> fst = builder.finish();\n    fst.save(data);\n    meta.writeVInt((int)ord);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e":["d7bf953a8ab9ae7d92835bdf9cbe5a268448868f"],"d7bf953a8ab9ae7d92835bdf9cbe5a268448868f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e":[],"d7bf953a8ab9ae7d92835bdf9cbe5a268448868f":["3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d7bf953a8ab9ae7d92835bdf9cbe5a268448868f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3fe3dfb6cc2d72874c6ebeee5cf8b6818434714e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}