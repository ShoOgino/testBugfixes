{"path":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/SynonymTokenizer[HighlighterTest]#next().mjava","commits":[{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/SynonymTokenizer[HighlighterTest]#next().mjava","pathOld":"sandbox/contributions/highlighter/src/test/org/apache/lucene/search/highlight/SynonymTokenizer[HighlighterTest]#next().mjava","sourceNew":"\tpublic Token next() throws IOException\n\t{\n\t\tif (currentRealToken == null)\n\t\t{\n\t\t\tToken nextRealToken = realStream.next();\n\t\t\tif (nextRealToken == null)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tString expansions = (String) synonyms.get(nextRealToken.termText());\n\t\t\tif (expansions == null)\n\t\t\t{\n\t\t\t\treturn nextRealToken;\n\t\t\t}\n\t\t\tst = new StringTokenizer(expansions, \",\");\n\t\t\tif (st.hasMoreTokens())\n\t\t\t{\n\t\t\t\tcurrentRealToken = nextRealToken;\n\t\t\t}\n\t\t\treturn currentRealToken;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tString nextExpandedValue = st.nextToken();\n\t\t\tToken expandedToken =\n\t\t\t\tnew Token(\n\t\t\t\t\tnextExpandedValue,\n\t\t\t\t\tcurrentRealToken.startOffset(),\n\t\t\t\t\tcurrentRealToken.endOffset());\n\t\t\texpandedToken.setPositionIncrement(0);\n\t\t\tif (!st.hasMoreTokens())\n\t\t\t{\n\t\t\t\tcurrentRealToken = null;\n\t\t\t\tst = null;\n\t\t\t}\n\t\t\treturn expandedToken;\n\t\t}\n\t}\n\n","sourceOld":"\tpublic Token next() throws IOException\n\t{\n\t\tif (currentRealToken == null)\n\t\t{\n\t\t\tToken nextRealToken = realStream.next();\n\t\t\tif (nextRealToken == null)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tString expansions = (String) synonyms.get(nextRealToken.termText());\n\t\t\tif (expansions == null)\n\t\t\t{\n\t\t\t\treturn nextRealToken;\n\t\t\t}\n\t\t\tst = new StringTokenizer(expansions, \",\");\n\t\t\tif (st.hasMoreTokens())\n\t\t\t{\n\t\t\t\tcurrentRealToken = nextRealToken;\n\t\t\t}\n\t\t\treturn currentRealToken;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tString nextExpandedValue = st.nextToken();\n\t\t\tToken expandedToken =\n\t\t\t\tnew Token(\n\t\t\t\t\tnextExpandedValue,\n\t\t\t\t\tcurrentRealToken.startOffset(),\n\t\t\t\t\tcurrentRealToken.endOffset());\n\t\t\texpandedToken.setPositionIncrement(0);\n\t\t\tif (!st.hasMoreTokens())\n\t\t\t{\n\t\t\t\tcurrentRealToken = null;\n\t\t\t\tst = null;\n\t\t\t}\n\t\t\treturn expandedToken;\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296b8b38a87feb478921f77834a2302dfe77641c","date":1209506838,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/SynonymTokenizer[HighlighterTest]#next().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/SynonymTokenizer[HighlighterTest]#next().mjava","sourceNew":"  public Token next() throws IOException {\n    if (currentRealToken == null) {\n      Token nextRealToken = realStream.next();\n      if (nextRealToken == null) {\n        return null;\n      }\n      String expansions = (String) synonyms.get(nextRealToken.termText());\n      if (expansions == null) {\n        return nextRealToken;\n      }\n      st = new StringTokenizer(expansions, \",\");\n      if (st.hasMoreTokens()) {\n        currentRealToken = nextRealToken;\n      }\n      return currentRealToken;\n    } else {\n      String nextExpandedValue = st.nextToken();\n      Token expandedToken = new Token(nextExpandedValue, currentRealToken.startOffset(),\n          currentRealToken.endOffset());\n      expandedToken.setPositionIncrement(0);\n      if (!st.hasMoreTokens()) {\n        currentRealToken = null;\n        st = null;\n      }\n      return expandedToken;\n    }\n  }\n\n","sourceOld":"\tpublic Token next() throws IOException\n\t{\n\t\tif (currentRealToken == null)\n\t\t{\n\t\t\tToken nextRealToken = realStream.next();\n\t\t\tif (nextRealToken == null)\n\t\t\t{\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tString expansions = (String) synonyms.get(nextRealToken.termText());\n\t\t\tif (expansions == null)\n\t\t\t{\n\t\t\t\treturn nextRealToken;\n\t\t\t}\n\t\t\tst = new StringTokenizer(expansions, \",\");\n\t\t\tif (st.hasMoreTokens())\n\t\t\t{\n\t\t\t\tcurrentRealToken = nextRealToken;\n\t\t\t}\n\t\t\treturn currentRealToken;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tString nextExpandedValue = st.nextToken();\n\t\t\tToken expandedToken =\n\t\t\t\tnew Token(\n\t\t\t\t\tnextExpandedValue,\n\t\t\t\t\tcurrentRealToken.startOffset(),\n\t\t\t\t\tcurrentRealToken.endOffset());\n\t\t\texpandedToken.setPositionIncrement(0);\n\t\t\tif (!st.hasMoreTokens())\n\t\t\t{\n\t\t\t\tcurrentRealToken = null;\n\t\t\t\tst = null;\n\t\t\t}\n\t\t\treturn expandedToken;\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e2cb543b41c145f33390f460ee743d6693c9c6c","date":1219243087,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/SynonymTokenizer[HighlighterTest]#next(Token).mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/SynonymTokenizer[HighlighterTest]#next().mjava","sourceNew":"  public Token next(final Token reusableToken) throws IOException {\n    assert reusableToken != null;\n    if (currentRealToken == null) {\n      Token nextRealToken = realStream.next(reusableToken);\n      if (nextRealToken == null) {\n        return null;\n      }\n      String expansions = (String) synonyms.get(nextRealToken.term());\n      if (expansions == null) {\n        return nextRealToken;\n      }\n      st = new StringTokenizer(expansions, \",\");\n      if (st.hasMoreTokens()) {\n        currentRealToken = (Token) nextRealToken.clone();\n      }\n      return currentRealToken;\n    } else {\n      reusableToken.reinit(st.nextToken(),\n                           currentRealToken.startOffset(),\n                           currentRealToken.endOffset());\n      reusableToken.setPositionIncrement(0);\n      if (!st.hasMoreTokens()) {\n        currentRealToken = null;\n        st = null;\n      }\n      return reusableToken;\n    }\n  }\n\n","sourceOld":"  public Token next() throws IOException {\n    if (currentRealToken == null) {\n      Token nextRealToken = realStream.next();\n      if (nextRealToken == null) {\n        return null;\n      }\n      String expansions = (String) synonyms.get(nextRealToken.termText());\n      if (expansions == null) {\n        return nextRealToken;\n      }\n      st = new StringTokenizer(expansions, \",\");\n      if (st.hasMoreTokens()) {\n        currentRealToken = nextRealToken;\n      }\n      return currentRealToken;\n    } else {\n      String nextExpandedValue = st.nextToken();\n      Token expandedToken = new Token(nextExpandedValue, currentRealToken.startOffset(),\n          currentRealToken.endOffset());\n      expandedToken.setPositionIncrement(0);\n      if (!st.hasMoreTokens()) {\n        currentRealToken = null;\n        st = null;\n      }\n      return expandedToken;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["296b8b38a87feb478921f77834a2302dfe77641c"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"296b8b38a87feb478921f77834a2302dfe77641c":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7e2cb543b41c145f33390f460ee743d6693c9c6c"]},"commit2Childs":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["296b8b38a87feb478921f77834a2302dfe77641c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"296b8b38a87feb478921f77834a2302dfe77641c":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}