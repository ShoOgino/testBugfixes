{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingDocValuesFormat#fieldsProducer(SegmentReadState).mjava","commits":[{"id":"59d00acb12c9809438e21de7c24f016356973d46","date":1359349254,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingDocValuesFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocValuesProducer fieldsProducer(SegmentReadState state) throws IOException {\n    assert state.fieldInfos.hasDocValues();\n    DocValuesProducer producer = in.fieldsProducer(state);\n    assert producer != null;\n    return new AssertingDocValuesProducer(producer, state.segmentInfo.getDocCount());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingDocValuesFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocValuesProducer fieldsProducer(SegmentReadState state) throws IOException {\n    assert state.fieldInfos.hasDocValues();\n    DocValuesProducer producer = in.fieldsProducer(state);\n    assert producer != null;\n    return new AssertingDocValuesProducer(producer, state.segmentInfo.getDocCount());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0267c69e2456a3477a1ad785723f2135da3117e","date":1425317087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingDocValuesFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingDocValuesFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public DocValuesProducer fieldsProducer(SegmentReadState state) throws IOException {\n    assert state.fieldInfos.hasDocValues();\n    DocValuesProducer producer = in.fieldsProducer(state);\n    assert producer != null;\n    return new AssertingDocValuesProducer(producer, state.segmentInfo.maxDoc());\n  }\n\n","sourceOld":"  @Override\n  public DocValuesProducer fieldsProducer(SegmentReadState state) throws IOException {\n    assert state.fieldInfos.hasDocValues();\n    DocValuesProducer producer = in.fieldsProducer(state);\n    assert producer != null;\n    return new AssertingDocValuesProducer(producer, state.segmentInfo.getDocCount());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b06445ae1731e049327712db0454e5643ca9b7fe","date":1425329139,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingDocValuesFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingDocValuesFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public DocValuesProducer fieldsProducer(SegmentReadState state) throws IOException {\n    assert state.fieldInfos.hasDocValues();\n    DocValuesProducer producer = in.fieldsProducer(state);\n    assert producer != null;\n    return new AssertingDocValuesProducer(producer, state.segmentInfo.maxDoc());\n  }\n\n","sourceOld":"  @Override\n  public DocValuesProducer fieldsProducer(SegmentReadState state) throws IOException {\n    assert state.fieldInfos.hasDocValues();\n    DocValuesProducer producer = in.fieldsProducer(state);\n    assert producer != null;\n    return new AssertingDocValuesProducer(producer, state.segmentInfo.getDocCount());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingDocValuesFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingDocValuesFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public DocValuesProducer fieldsProducer(SegmentReadState state) throws IOException {\n    assert state.fieldInfos.hasDocValues();\n    DocValuesProducer producer = in.fieldsProducer(state);\n    assert producer != null;\n    return new AssertingDocValuesProducer(producer, state.segmentInfo.maxDoc());\n  }\n\n","sourceOld":"  @Override\n  public DocValuesProducer fieldsProducer(SegmentReadState state) throws IOException {\n    assert state.fieldInfos.hasDocValues();\n    DocValuesProducer producer = in.fieldsProducer(state);\n    assert producer != null;\n    return new AssertingDocValuesProducer(producer, state.segmentInfo.getDocCount());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dbc046116d49cd3d0c50f7169cabaa295bc23a4a","date":1552989114,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingDocValuesFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingDocValuesFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public DocValuesProducer fieldsProducer(SegmentReadState state) throws IOException {\n    assert state.fieldInfos.hasDocValues();\n    DocValuesProducer producer = in.fieldsProducer(state);\n    assert producer != null;\n    return new AssertingDocValuesProducer(producer, state.segmentInfo.maxDoc(), false);\n  }\n\n","sourceOld":"  @Override\n  public DocValuesProducer fieldsProducer(SegmentReadState state) throws IOException {\n    assert state.fieldInfos.hasDocValues();\n    DocValuesProducer producer = in.fieldsProducer(state);\n    assert producer != null;\n    return new AssertingDocValuesProducer(producer, state.segmentInfo.maxDoc());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"59d00acb12c9809438e21de7c24f016356973d46":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["d4d69c535930b5cce125cff868d40f6373dc27d4","b0267c69e2456a3477a1ad785723f2135da3117e"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","59d00acb12c9809438e21de7c24f016356973d46"],"b06445ae1731e049327712db0454e5643ca9b7fe":["d4d69c535930b5cce125cff868d40f6373dc27d4","b0267c69e2456a3477a1ad785723f2135da3117e"],"b0267c69e2456a3477a1ad785723f2135da3117e":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dbc046116d49cd3d0c50f7169cabaa295bc23a4a":["b0267c69e2456a3477a1ad785723f2135da3117e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dbc046116d49cd3d0c50f7169cabaa295bc23a4a"]},"commit2Childs":{"59d00acb12c9809438e21de7c24f016356973d46":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","b0267c69e2456a3477a1ad785723f2135da3117e"],"b06445ae1731e049327712db0454e5643ca9b7fe":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["59d00acb12c9809438e21de7c24f016356973d46","d4d69c535930b5cce125cff868d40f6373dc27d4"],"b0267c69e2456a3477a1ad785723f2135da3117e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","dbc046116d49cd3d0c50f7169cabaa295bc23a4a"],"dbc046116d49cd3d0c50f7169cabaa295bc23a4a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","b06445ae1731e049327712db0454e5643ca9b7fe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}