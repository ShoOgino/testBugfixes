{"path":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#uploadConfigSetWithAssertions(String,String,String).mjava","commits":[{"id":"c7612891097d4751617c396cdd7a092833799147","date":1600707827,"type":1,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#uploadConfigSetWithAssertions(String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#uploadConfigSetWithAssertions(String,String,String,String).mjava","sourceNew":"  private void uploadConfigSetWithAssertions(String configSetName, String suffix, String username) throws Exception {\n    SolrZkClient zkClient = new SolrZkClient(cluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n    try {\n      long statusCode = uploadConfigSet(configSetName, suffix, username, zkClient);\n      assertEquals(0l, statusCode);\n\n      assertTrue(\"managed-schema file should have been uploaded\",\n          zkClient.exists(\"/configs/\"+configSetName+suffix+\"/managed-schema\", true));\n      assertTrue(\"managed-schema file contents on zookeeper are not exactly same as that of the file uploaded in config\",\n          Arrays.equals(zkClient.getData(\"/configs/\"+configSetName+suffix+\"/managed-schema\", null, null, true),\n              readFile(\"solr/configsets/upload/\"+configSetName+\"/managed-schema\")));\n\n      assertTrue(\"solrconfig.xml file should have been uploaded\",\n          zkClient.exists(\"/configs/\"+configSetName+suffix+\"/solrconfig.xml\", true));\n      byte data[] = zkClient.getData(\"/configs/\"+configSetName+suffix, null, null, true);\n      //assertEquals(\"{\\\"trusted\\\": false}\", new String(data, StandardCharsets.UTF_8));\n      assertTrue(\"solrconfig.xml file contents on zookeeper are not exactly same as that of the file uploaded in config\",\n          Arrays.equals(zkClient.getData(\"/configs/\"+configSetName+suffix+\"/solrconfig.xml\", null, null, true),\n              readFile(\"solr/configsets/upload/\"+configSetName+\"/solrconfig.xml\")));\n    } finally {\n      zkClient.close();\n    }\n  }\n\n","sourceOld":"  private void uploadConfigSetWithAssertions(String configSetName, String suffix, String username, String password) throws Exception {\n    SolrZkClient zkClient = new SolrZkClient(solrCluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n    try {\n      long statusCode = uploadConfigSet(configSetName, suffix, username, password, zkClient);\n      assertEquals(0l, statusCode);\n\n      assertTrue(\"managed-schema file should have been uploaded\",\n          zkClient.exists(\"/configs/\"+configSetName+suffix+\"/managed-schema\", true));\n      assertTrue(\"managed-schema file contents on zookeeper are not exactly same as that of the file uploaded in config\",\n          Arrays.equals(zkClient.getData(\"/configs/\"+configSetName+suffix+\"/managed-schema\", null, null, true),\n              readFile(\"solr/configsets/upload/\"+configSetName+\"/managed-schema\")));\n\n      assertTrue(\"solrconfig.xml file should have been uploaded\",\n          zkClient.exists(\"/configs/\"+configSetName+suffix+\"/solrconfig.xml\", true));\n      byte data[] = zkClient.getData(\"/configs/\"+configSetName+suffix, null, null, true);\n      //assertEquals(\"{\\\"trusted\\\": false}\", new String(data, StandardCharsets.UTF_8));\n      assertTrue(\"solrconfig.xml file contents on zookeeper are not exactly same as that of the file uploaded in config\",\n          Arrays.equals(zkClient.getData(\"/configs/\"+configSetName+suffix+\"/solrconfig.xml\", null, null, true),\n              readFile(\"solr/configsets/upload/\"+configSetName+\"/solrconfig.xml\")));\n    } finally {\n      zkClient.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0709b256ed89906e7b5f558ba1a675826f0a858f","date":1600796219,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#uploadConfigSetWithAssertions(String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestConfigSetsAPI#uploadConfigSetWithAssertions(String,String,String).mjava","sourceNew":"  private void uploadConfigSetWithAssertions(String configSetName, String suffix, String username) throws Exception {\n    SolrZkClient zkClient = new SolrZkClient(cluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n    try {\n      long statusCode = uploadConfigSet(configSetName, suffix, username, zkClient);\n      assertEquals(0l, statusCode);\n      assertConfigsetFiles(configSetName, suffix, zkClient);\n    } finally {\n      zkClient.close();\n    }\n  }\n\n","sourceOld":"  private void uploadConfigSetWithAssertions(String configSetName, String suffix, String username) throws Exception {\n    SolrZkClient zkClient = new SolrZkClient(cluster.getZkServer().getZkAddress(),\n        AbstractZkTestCase.TIMEOUT, 45000, null);\n    try {\n      long statusCode = uploadConfigSet(configSetName, suffix, username, zkClient);\n      assertEquals(0l, statusCode);\n\n      assertTrue(\"managed-schema file should have been uploaded\",\n          zkClient.exists(\"/configs/\"+configSetName+suffix+\"/managed-schema\", true));\n      assertTrue(\"managed-schema file contents on zookeeper are not exactly same as that of the file uploaded in config\",\n          Arrays.equals(zkClient.getData(\"/configs/\"+configSetName+suffix+\"/managed-schema\", null, null, true),\n              readFile(\"solr/configsets/upload/\"+configSetName+\"/managed-schema\")));\n\n      assertTrue(\"solrconfig.xml file should have been uploaded\",\n          zkClient.exists(\"/configs/\"+configSetName+suffix+\"/solrconfig.xml\", true));\n      byte data[] = zkClient.getData(\"/configs/\"+configSetName+suffix, null, null, true);\n      //assertEquals(\"{\\\"trusted\\\": false}\", new String(data, StandardCharsets.UTF_8));\n      assertTrue(\"solrconfig.xml file contents on zookeeper are not exactly same as that of the file uploaded in config\",\n          Arrays.equals(zkClient.getData(\"/configs/\"+configSetName+suffix+\"/solrconfig.xml\", null, null, true),\n              readFile(\"solr/configsets/upload/\"+configSetName+\"/solrconfig.xml\")));\n    } finally {\n      zkClient.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7612891097d4751617c396cdd7a092833799147":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0709b256ed89906e7b5f558ba1a675826f0a858f":["c7612891097d4751617c396cdd7a092833799147"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0709b256ed89906e7b5f558ba1a675826f0a858f"]},"commit2Childs":{"c7612891097d4751617c396cdd7a092833799147":["0709b256ed89906e7b5f558ba1a675826f0a858f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7612891097d4751617c396cdd7a092833799147"],"0709b256ed89906e7b5f558ba1a675826f0a858f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}