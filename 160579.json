{"path":"solr/core/src/java/org/apache/solr/cloud/ZkController#setConfWatcher(String,Watcher,Stat).mjava","commits":[{"id":"98798900014e18f407b1910aa34db4d3ae76ecc6","date":1427307584,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#setConfWatcher(String,Watcher,Stat).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#setConfWatcher(String,Watcher).mjava","sourceNew":"  private void setConfWatcher(String zkDir, Watcher watcher, Stat stat) {\n    try {\n      Stat newStat = zkClient.exists(zkDir, watcher, true);\n      if (stat != null && newStat.getVersion() > stat.getVersion()) {\n        //a race condition where a we missed an even fired\n        //so fire the event listeners\n        fireEventListeners(zkDir);\n      }\n      zkClient.exists(zkDir, watcher, true);\n    } catch (KeeperException e) {\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    }\n  }\n\n","sourceOld":"  private void setConfWatcher(String zkDir, Watcher watcher) {\n    try {\n      zkClient.exists(zkDir, watcher, true);\n    } catch (KeeperException e) {\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a459b94e2efbfd9079ee913563d160b3b9ab9c1","date":1427330029,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#setConfWatcher(String,Watcher,Stat).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#setConfWatcher(String,Watcher,Stat).mjava","sourceNew":"  private void setConfWatcher(String zkDir, Watcher watcher, Stat stat) {\n    try {\n      Stat newStat = zkClient.exists(zkDir, watcher, true);\n      if (stat != null && newStat.getVersion() > stat.getVersion()) {\n        //a race condition where a we missed an even fired\n        //so fire the event listeners\n        fireEventListeners(zkDir);\n      }\n    } catch (KeeperException e) {\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    }\n  }\n\n","sourceOld":"  private void setConfWatcher(String zkDir, Watcher watcher, Stat stat) {\n    try {\n      Stat newStat = zkClient.exists(zkDir, watcher, true);\n      if (stat != null && newStat.getVersion() > stat.getVersion()) {\n        //a race condition where a we missed an even fired\n        //so fire the event listeners\n        fireEventListeners(zkDir);\n      }\n      zkClient.exists(zkDir, watcher, true);\n    } catch (KeeperException e) {\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#setConfWatcher(String,Watcher,Stat).mjava","pathOld":"/dev/null","sourceNew":"  private void setConfWatcher(String zkDir, Watcher watcher, Stat stat) {\n    try {\n      Stat newStat = zkClient.exists(zkDir, watcher, true);\n      if (stat != null && newStat.getVersion() > stat.getVersion()) {\n        //a race condition where a we missed an even fired\n        //so fire the event listeners\n        fireEventListeners(zkDir);\n      }\n    } catch (KeeperException e) {\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54bb8da55080e4569804e0661b83a3c72cbd8d4d","date":1429691126,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#setConfWatcher(String,Watcher,Stat).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#setConfWatcher(String,Watcher,Stat).mjava","sourceNew":"  private void setConfWatcher(String zkDir, Watcher watcher, Stat stat) {\n    try {\n      Stat newStat = zkClient.exists(zkDir, watcher, true);\n      if (stat != null && newStat.getVersion() > stat.getVersion()) {\n        //a race condition where a we missed an event fired\n        //so fire the event listeners\n        fireEventListeners(zkDir);\n      }\n    } catch (KeeperException e) {\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    }\n  }\n\n","sourceOld":"  private void setConfWatcher(String zkDir, Watcher watcher, Stat stat) {\n    try {\n      Stat newStat = zkClient.exists(zkDir, watcher, true);\n      if (stat != null && newStat.getVersion() > stat.getVersion()) {\n        //a race condition where a we missed an even fired\n        //so fire the event listeners\n        fireEventListeners(zkDir);\n      }\n    } catch (KeeperException e) {\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5a459b94e2efbfd9079ee913563d160b3b9ab9c1"],"54bb8da55080e4569804e0661b83a3c72cbd8d4d":["5a459b94e2efbfd9079ee913563d160b3b9ab9c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"98798900014e18f407b1910aa34db4d3ae76ecc6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a459b94e2efbfd9079ee913563d160b3b9ab9c1":["98798900014e18f407b1910aa34db4d3ae76ecc6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54bb8da55080e4569804e0661b83a3c72cbd8d4d"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"54bb8da55080e4569804e0661b83a3c72cbd8d4d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","98798900014e18f407b1910aa34db4d3ae76ecc6"],"98798900014e18f407b1910aa34db4d3ae76ecc6":["5a459b94e2efbfd9079ee913563d160b3b9ab9c1"],"5a459b94e2efbfd9079ee913563d160b3b9ab9c1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","54bb8da55080e4569804e0661b83a3c72cbd8d4d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}