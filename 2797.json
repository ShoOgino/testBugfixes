{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#readFieldInfos(SegmentCommitInfo).mjava","commits":[{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#readFieldInfos(SegmentCommitInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#readFieldInfos(SegmentInfoPerCommit).mjava","sourceNew":"  /**\n   * Reads the most recent {@link FieldInfos} of the given segment info.\n   * \n   * @lucene.internal\n   */\n  static FieldInfos readFieldInfos(SegmentCommitInfo info) throws IOException {\n    final Directory dir;\n    final boolean closeDir;\n    if (info.getFieldInfosGen() == -1 && info.info.getUseCompoundFile()) {\n      // no fieldInfos gen and segment uses a compound file\n      dir = new CompoundFileDirectory(info.info.dir,\n          IndexFileNames.segmentFileName(info.info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION),\n          IOContext.READONCE,\n          false);\n      closeDir = true;\n    } else {\n      // gen'd FIS are read outside CFS, or the segment doesn't use a compound file\n      dir = info.info.dir;\n      closeDir = false;\n    }\n    \n    try {\n      final String segmentSuffix = info.getFieldInfosGen() == -1 ? \"\" : Long.toString(info.getFieldInfosGen(), Character.MAX_RADIX);\n      return info.info.getCodec().fieldInfosFormat().getFieldInfosReader().read(dir, info.info.name, segmentSuffix, IOContext.READONCE);\n    } finally {\n      if (closeDir) {\n        dir.close();\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Reads the most recent {@link FieldInfos} of the given segment info.\n   * \n   * @lucene.internal\n   */\n  static FieldInfos readFieldInfos(SegmentInfoPerCommit info) throws IOException {\n    final Directory dir;\n    final boolean closeDir;\n    if (info.getFieldInfosGen() == -1 && info.info.getUseCompoundFile()) {\n      // no fieldInfos gen and segment uses a compound file\n      dir = new CompoundFileDirectory(info.info.dir,\n          IndexFileNames.segmentFileName(info.info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION),\n          IOContext.READONCE,\n          false);\n      closeDir = true;\n    } else {\n      // gen'd FIS are read outside CFS, or the segment doesn't use a compound file\n      dir = info.info.dir;\n      closeDir = false;\n    }\n    \n    try {\n      final String segmentSuffix = info.getFieldInfosGen() == -1 ? \"\" : Long.toString(info.getFieldInfosGen(), Character.MAX_RADIX);\n      return info.info.getCodec().fieldInfosFormat().getFieldInfosReader().read(dir, info.info.name, segmentSuffix, IOContext.READONCE);\n    } finally {\n      if (closeDir) {\n        dir.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"925e350e1b939d6381c12c2d73ce20aa438d482c","date":1399678506,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#readFieldInfos(SegmentCommitInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#readFieldInfos(SegmentCommitInfo).mjava","sourceNew":"  /**\n   * Reads the most recent {@link FieldInfos} of the given segment info.\n   * \n   * @lucene.internal\n   */\n  static FieldInfos readFieldInfos(SegmentCommitInfo info) throws IOException {\n    final Directory dir;\n    final boolean closeDir;\n    if (info.getFieldInfosGen() == -1 && info.info.getUseCompoundFile()) {\n      // no fieldInfos gen and segment uses a compound file\n      dir = new CompoundFileDirectory(info.info.dir,\n          IndexFileNames.segmentFileName(info.info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION),\n          IOContext.READONCE,\n          false);\n      closeDir = true;\n    } else {\n      // gen'd FIS are read outside CFS, or the segment doesn't use a compound file\n      dir = info.info.dir;\n      closeDir = false;\n    }\n    \n    try {\n      final String segmentSuffix = info.getFieldInfosGen() == -1 ? \"\" : Long.toString(info.getFieldInfosGen(), Character.MAX_RADIX);\n      Codec codec = info.info.getCodec();\n      FieldInfosFormat fisFormat = codec.fieldInfosFormat();\n      return fisFormat.getFieldInfosReader().read(dir, info.info.name, segmentSuffix, IOContext.READONCE);\n    } finally {\n      if (closeDir) {\n        dir.close();\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Reads the most recent {@link FieldInfos} of the given segment info.\n   * \n   * @lucene.internal\n   */\n  static FieldInfos readFieldInfos(SegmentCommitInfo info) throws IOException {\n    final Directory dir;\n    final boolean closeDir;\n    if (info.getFieldInfosGen() == -1 && info.info.getUseCompoundFile()) {\n      // no fieldInfos gen and segment uses a compound file\n      dir = new CompoundFileDirectory(info.info.dir,\n          IndexFileNames.segmentFileName(info.info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION),\n          IOContext.READONCE,\n          false);\n      closeDir = true;\n    } else {\n      // gen'd FIS are read outside CFS, or the segment doesn't use a compound file\n      dir = info.info.dir;\n      closeDir = false;\n    }\n    \n    try {\n      final String segmentSuffix = info.getFieldInfosGen() == -1 ? \"\" : Long.toString(info.getFieldInfosGen(), Character.MAX_RADIX);\n      return info.info.getCodec().fieldInfosFormat().getFieldInfosReader().read(dir, info.info.name, segmentSuffix, IOContext.READONCE);\n    } finally {\n      if (closeDir) {\n        dir.close();\n      }\n    }\n  }\n\n","bugFix":["8435160e9702b19398118ddf76b61c846612b6a4"],"bugIntro":["5f6bd27530a2846413fe2d00030493c0e2d3a072"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c65d2864d936ccf22dc7ec14dd48b4dff7bacceb","date":1411653326,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#readFieldInfos(SegmentCommitInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#readFieldInfos(SegmentCommitInfo).mjava","sourceNew":"  /**\n   * Reads the most recent {@link FieldInfos} of the given segment info.\n   * \n   * @lucene.internal\n   */\n  static FieldInfos readFieldInfos(SegmentCommitInfo info) throws IOException {\n    final Directory dir;\n    final boolean closeDir;\n    if (info.getFieldInfosGen() == -1 && info.info.getUseCompoundFile()) {\n      // no fieldInfos gen and segment uses a compound file\n      dir = new CompoundFileDirectory(info.info.dir,\n          IndexFileNames.segmentFileName(info.info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION),\n          IOContext.READONCE,\n          false);\n      closeDir = true;\n    } else {\n      // gen'd FIS are read outside CFS, or the segment doesn't use a compound file\n      dir = info.info.dir;\n      closeDir = false;\n    }\n    \n    try {\n      final String segmentSuffix = info.getFieldInfosGen() == -1 ? \"\" : Long.toString(info.getFieldInfosGen(), Character.MAX_RADIX);\n      Codec codec = info.info.getCodec();\n      FieldInfosFormat fisFormat = codec.fieldInfosFormat();\n      return fisFormat.getFieldInfosReader().read(dir, info.info, segmentSuffix, IOContext.READONCE);\n    } finally {\n      if (closeDir) {\n        dir.close();\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Reads the most recent {@link FieldInfos} of the given segment info.\n   * \n   * @lucene.internal\n   */\n  static FieldInfos readFieldInfos(SegmentCommitInfo info) throws IOException {\n    final Directory dir;\n    final boolean closeDir;\n    if (info.getFieldInfosGen() == -1 && info.info.getUseCompoundFile()) {\n      // no fieldInfos gen and segment uses a compound file\n      dir = new CompoundFileDirectory(info.info.dir,\n          IndexFileNames.segmentFileName(info.info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION),\n          IOContext.READONCE,\n          false);\n      closeDir = true;\n    } else {\n      // gen'd FIS are read outside CFS, or the segment doesn't use a compound file\n      dir = info.info.dir;\n      closeDir = false;\n    }\n    \n    try {\n      final String segmentSuffix = info.getFieldInfosGen() == -1 ? \"\" : Long.toString(info.getFieldInfosGen(), Character.MAX_RADIX);\n      Codec codec = info.info.getCodec();\n      FieldInfosFormat fisFormat = codec.fieldInfosFormat();\n      return fisFormat.getFieldInfosReader().read(dir, info.info.name, segmentSuffix, IOContext.READONCE);\n    } finally {\n      if (closeDir) {\n        dir.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f6bd27530a2846413fe2d00030493c0e2d3a072","date":1411811855,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#readFieldInfos(SegmentCommitInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#readFieldInfos(SegmentCommitInfo).mjava","sourceNew":"  /**\n   * Reads the most recent {@link FieldInfos} of the given segment info.\n   * \n   * @lucene.internal\n   */\n  static FieldInfos readFieldInfos(SegmentCommitInfo info) throws IOException {\n    final Directory dir;\n    final boolean closeDir;\n    if (info.getFieldInfosGen() == -1 && info.info.getUseCompoundFile()) {\n      // no fieldInfos gen and segment uses a compound file\n      dir = new CompoundFileDirectory(info.info.dir,\n          IndexFileNames.segmentFileName(info.info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION),\n          IOContext.READONCE,\n          false);\n      closeDir = true;\n    } else {\n      // gen'd FIS are read outside CFS, or the segment doesn't use a compound file\n      dir = info.info.dir;\n      closeDir = false;\n    }\n    \n    try {\n      final String segmentSuffix = info.getFieldInfosGen() == -1 ? \"\" : Long.toString(info.getFieldInfosGen(), Character.MAX_RADIX);\n      Codec codec = info.info.getCodec();\n      FieldInfosFormat fisFormat = codec.fieldInfosFormat();\n      return fisFormat.getFieldInfosReader().read(dir, info.info, segmentSuffix, IOContext.READONCE);\n    } finally {\n      if (closeDir) {\n        dir.close();\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Reads the most recent {@link FieldInfos} of the given segment info.\n   * \n   * @lucene.internal\n   */\n  static FieldInfos readFieldInfos(SegmentCommitInfo info) throws IOException {\n    final Directory dir;\n    final boolean closeDir;\n    if (info.getFieldInfosGen() == -1 && info.info.getUseCompoundFile()) {\n      // no fieldInfos gen and segment uses a compound file\n      dir = new CompoundFileDirectory(info.info.dir,\n          IndexFileNames.segmentFileName(info.info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION),\n          IOContext.READONCE,\n          false);\n      closeDir = true;\n    } else {\n      // gen'd FIS are read outside CFS, or the segment doesn't use a compound file\n      dir = info.info.dir;\n      closeDir = false;\n    }\n    \n    try {\n      final String segmentSuffix = info.getFieldInfosGen() == -1 ? \"\" : Long.toString(info.getFieldInfosGen(), Character.MAX_RADIX);\n      Codec codec = info.info.getCodec();\n      FieldInfosFormat fisFormat = codec.fieldInfosFormat();\n      return fisFormat.getFieldInfosReader().read(dir, info.info.name, segmentSuffix, IOContext.READONCE);\n    } finally {\n      if (closeDir) {\n        dir.close();\n      }\n    }\n  }\n\n","bugFix":["925e350e1b939d6381c12c2d73ce20aa438d482c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f382b2e9f4ca7dbe98e2f15da70983ecfc02b171","date":1412231650,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#readFieldInfos(SegmentCommitInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#readFieldInfos(SegmentCommitInfo).mjava","sourceNew":"  /**\n   * Reads the most recent {@link FieldInfos} of the given segment info.\n   * \n   * @lucene.internal\n   */\n  static FieldInfos readFieldInfos(SegmentCommitInfo info) throws IOException {\n    final Directory dir;\n    final boolean closeDir;\n    if (info.getFieldInfosGen() == -1 && info.info.getUseCompoundFile()) {\n      // no fieldInfos gen and segment uses a compound file\n      dir = new CompoundFileDirectory(info.info.getId(), info.info.dir,\n          IndexFileNames.segmentFileName(info.info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION),\n          IOContext.READONCE,\n          false);\n      closeDir = true;\n    } else {\n      // gen'd FIS are read outside CFS, or the segment doesn't use a compound file\n      dir = info.info.dir;\n      closeDir = false;\n    }\n    \n    try {\n      final String segmentSuffix = info.getFieldInfosGen() == -1 ? \"\" : Long.toString(info.getFieldInfosGen(), Character.MAX_RADIX);\n      Codec codec = info.info.getCodec();\n      FieldInfosFormat fisFormat = codec.fieldInfosFormat();\n      return fisFormat.getFieldInfosReader().read(dir, info.info, segmentSuffix, IOContext.READONCE);\n    } finally {\n      if (closeDir) {\n        dir.close();\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Reads the most recent {@link FieldInfos} of the given segment info.\n   * \n   * @lucene.internal\n   */\n  static FieldInfos readFieldInfos(SegmentCommitInfo info) throws IOException {\n    final Directory dir;\n    final boolean closeDir;\n    if (info.getFieldInfosGen() == -1 && info.info.getUseCompoundFile()) {\n      // no fieldInfos gen and segment uses a compound file\n      dir = new CompoundFileDirectory(info.info.dir,\n          IndexFileNames.segmentFileName(info.info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION),\n          IOContext.READONCE,\n          false);\n      closeDir = true;\n    } else {\n      // gen'd FIS are read outside CFS, or the segment doesn't use a compound file\n      dir = info.info.dir;\n      closeDir = false;\n    }\n    \n    try {\n      final String segmentSuffix = info.getFieldInfosGen() == -1 ? \"\" : Long.toString(info.getFieldInfosGen(), Character.MAX_RADIX);\n      Codec codec = info.info.getCodec();\n      FieldInfosFormat fisFormat = codec.fieldInfosFormat();\n      return fisFormat.getFieldInfosReader().read(dir, info.info, segmentSuffix, IOContext.READONCE);\n    } finally {\n      if (closeDir) {\n        dir.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"989d940c4bf402188f4f0ae13736836885227383","date":1412263633,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#readFieldInfos(SegmentCommitInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#readFieldInfos(SegmentCommitInfo).mjava","sourceNew":"  /**\n   * Reads the most recent {@link FieldInfos} of the given segment info.\n   * \n   * @lucene.internal\n   */\n  static FieldInfos readFieldInfos(SegmentCommitInfo info) throws IOException {\n    final Directory dir;\n    final boolean closeDir;\n    if (info.getFieldInfosGen() == -1 && info.info.getUseCompoundFile()) {\n      // no fieldInfos gen and segment uses a compound file\n      dir = info.info.getCodec().compoundFormat().getCompoundReader(info.info.dir, info.info, IOContext.READONCE);\n      closeDir = true;\n    } else {\n      // gen'd FIS are read outside CFS, or the segment doesn't use a compound file\n      dir = info.info.dir;\n      closeDir = false;\n    }\n    \n    try {\n      final String segmentSuffix = info.getFieldInfosGen() == -1 ? \"\" : Long.toString(info.getFieldInfosGen(), Character.MAX_RADIX);\n      Codec codec = info.info.getCodec();\n      FieldInfosFormat fisFormat = codec.fieldInfosFormat();\n      return fisFormat.getFieldInfosReader().read(dir, info.info, segmentSuffix, IOContext.READONCE);\n    } finally {\n      if (closeDir) {\n        dir.close();\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Reads the most recent {@link FieldInfos} of the given segment info.\n   * \n   * @lucene.internal\n   */\n  static FieldInfos readFieldInfos(SegmentCommitInfo info) throws IOException {\n    final Directory dir;\n    final boolean closeDir;\n    if (info.getFieldInfosGen() == -1 && info.info.getUseCompoundFile()) {\n      // no fieldInfos gen and segment uses a compound file\n      dir = new CompoundFileDirectory(info.info.getId(), info.info.dir,\n          IndexFileNames.segmentFileName(info.info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION),\n          IOContext.READONCE,\n          false);\n      closeDir = true;\n    } else {\n      // gen'd FIS are read outside CFS, or the segment doesn't use a compound file\n      dir = info.info.dir;\n      closeDir = false;\n    }\n    \n    try {\n      final String segmentSuffix = info.getFieldInfosGen() == -1 ? \"\" : Long.toString(info.getFieldInfosGen(), Character.MAX_RADIX);\n      Codec codec = info.info.getCodec();\n      FieldInfosFormat fisFormat = codec.fieldInfosFormat();\n      return fisFormat.getFieldInfosReader().read(dir, info.info, segmentSuffix, IOContext.READONCE);\n    } finally {\n      if (closeDir) {\n        dir.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"256a0e54e76f18e115a43e7fe793b54d4e9a3005","date":1412426514,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#readFieldInfos(SegmentCommitInfo).mjava","sourceNew":null,"sourceOld":"  /**\n   * Reads the most recent {@link FieldInfos} of the given segment info.\n   * \n   * @lucene.internal\n   */\n  static FieldInfos readFieldInfos(SegmentCommitInfo info) throws IOException {\n    final Directory dir;\n    final boolean closeDir;\n    if (info.getFieldInfosGen() == -1 && info.info.getUseCompoundFile()) {\n      // no fieldInfos gen and segment uses a compound file\n      dir = info.info.getCodec().compoundFormat().getCompoundReader(info.info.dir, info.info, IOContext.READONCE);\n      closeDir = true;\n    } else {\n      // gen'd FIS are read outside CFS, or the segment doesn't use a compound file\n      dir = info.info.dir;\n      closeDir = false;\n    }\n    \n    try {\n      final String segmentSuffix = info.getFieldInfosGen() == -1 ? \"\" : Long.toString(info.getFieldInfosGen(), Character.MAX_RADIX);\n      Codec codec = info.info.getCodec();\n      FieldInfosFormat fisFormat = codec.fieldInfosFormat();\n      return fisFormat.getFieldInfosReader().read(dir, info.info, segmentSuffix, IOContext.READONCE);\n    } finally {\n      if (closeDir) {\n        dir.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#readFieldInfos(SegmentCommitInfo).mjava","sourceNew":null,"sourceOld":"  /**\n   * Reads the most recent {@link FieldInfos} of the given segment info.\n   * \n   * @lucene.internal\n   */\n  static FieldInfos readFieldInfos(SegmentCommitInfo info) throws IOException {\n    final Directory dir;\n    final boolean closeDir;\n    if (info.getFieldInfosGen() == -1 && info.info.getUseCompoundFile()) {\n      // no fieldInfos gen and segment uses a compound file\n      dir = new CompoundFileDirectory(info.info.dir,\n          IndexFileNames.segmentFileName(info.info.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION),\n          IOContext.READONCE,\n          false);\n      closeDir = true;\n    } else {\n      // gen'd FIS are read outside CFS, or the segment doesn't use a compound file\n      dir = info.info.dir;\n      closeDir = false;\n    }\n    \n    try {\n      final String segmentSuffix = info.getFieldInfosGen() == -1 ? \"\" : Long.toString(info.getFieldInfosGen(), Character.MAX_RADIX);\n      Codec codec = info.info.getCodec();\n      FieldInfosFormat fisFormat = codec.fieldInfosFormat();\n      return fisFormat.getFieldInfosReader().read(dir, info.info, segmentSuffix, IOContext.READONCE);\n    } finally {\n      if (closeDir) {\n        dir.close();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"256a0e54e76f18e115a43e7fe793b54d4e9a3005":["989d940c4bf402188f4f0ae13736836885227383"],"989d940c4bf402188f4f0ae13736836885227383":["f382b2e9f4ca7dbe98e2f15da70983ecfc02b171"],"f382b2e9f4ca7dbe98e2f15da70983ecfc02b171":["c65d2864d936ccf22dc7ec14dd48b4dff7bacceb"],"9bb9a29a5e71a90295f175df8919802993142c9a":["5f6bd27530a2846413fe2d00030493c0e2d3a072","256a0e54e76f18e115a43e7fe793b54d4e9a3005"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["925e350e1b939d6381c12c2d73ce20aa438d482c","c65d2864d936ccf22dc7ec14dd48b4dff7bacceb"],"925e350e1b939d6381c12c2d73ce20aa438d482c":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9bb9a29a5e71a90295f175df8919802993142c9a"],"c65d2864d936ccf22dc7ec14dd48b4dff7bacceb":["925e350e1b939d6381c12c2d73ce20aa438d482c"]},"commit2Childs":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["925e350e1b939d6381c12c2d73ce20aa438d482c"],"256a0e54e76f18e115a43e7fe793b54d4e9a3005":["9bb9a29a5e71a90295f175df8919802993142c9a"],"989d940c4bf402188f4f0ae13736836885227383":["256a0e54e76f18e115a43e7fe793b54d4e9a3005"],"f382b2e9f4ca7dbe98e2f15da70983ecfc02b171":["989d940c4bf402188f4f0ae13736836885227383"],"9bb9a29a5e71a90295f175df8919802993142c9a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"5f6bd27530a2846413fe2d00030493c0e2d3a072":["9bb9a29a5e71a90295f175df8919802993142c9a"],"925e350e1b939d6381c12c2d73ce20aa438d482c":["5f6bd27530a2846413fe2d00030493c0e2d3a072","c65d2864d936ccf22dc7ec14dd48b4dff7bacceb"],"c65d2864d936ccf22dc7ec14dd48b4dff7bacceb":["f382b2e9f4ca7dbe98e2f15da70983ecfc02b171","5f6bd27530a2846413fe2d00030493c0e2d3a072"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}