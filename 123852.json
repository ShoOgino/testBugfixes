{"path":"backwards/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletesAfterClose().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletesAfterClose().mjava","pathOld":"/dev/null","sourceNew":"  public void testCrashReaderDeletesAfterClose() throws IOException {\n    \n    IndexWriter writer = initIndex();\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n    reader.close();\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(156, reader.numDocs());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletesAfterClose().mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestCrash#testCrashReaderDeletesAfterClose().mjava","sourceNew":"  public void testCrashReaderDeletesAfterClose() throws IOException {\n    \n    IndexWriter writer = initIndex();\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n    reader.close();\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(156, reader.numDocs());\n  }\n\n","sourceOld":"  public void testCrashReaderDeletesAfterClose() throws IOException {\n    \n    IndexWriter writer = initIndex();\n    MockRAMDirectory dir = (MockRAMDirectory) writer.getDirectory();\n\n    writer.close(false);\n    IndexReader reader = IndexReader.open(dir, false);\n    reader.deleteDocument(3);\n    reader.close();\n\n    dir.crash();\n\n    /*\n    String[] l = dir.list();\n    Arrays.sort(l);\n    for(int i=0;i<l.length;i++)\n      System.out.println(\"file \" + i + \" = \" + l[i] + \" \" + dir.fileLength(l[i]) + \" bytes\");\n    */\n    reader = IndexReader.open(dir, false);\n    assertEquals(156, reader.numDocs());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}