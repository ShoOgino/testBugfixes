{"path":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random, ctermsEnum, bits, null, false);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random, ctermsEnum, bits, null, false);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d08eba3d52b63561ebf936481ce73e6b6a14aa03","date":1333879759,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    InvertedFields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random, ctermsEnum, bits, null, false);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random, ctermsEnum, bits, null, false);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf","date":1333892281,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random, ctermsEnum, bits, null, false);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    InvertedFields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random, ctermsEnum, bits, null, false);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random(), ctermsEnum, bits, null, false);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public static int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random, ctermsEnum, bits, null, false);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":["02331260bb246364779cb6f04919ca47900d01bb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"02331260bb246364779cb6f04919ca47900d01bb","date":1343749884,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random(), ctermsEnum, bits, null, 0);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random(), ctermsEnum, bits, null, false);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","bugFix":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random(), ctermsEnum, bits, null, 0);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random(), ctermsEnum, bits, null, false);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random(), ctermsEnum, bits, null, 0);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random(), ctermsEnum, bits, null, false);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15250ca94ba8ab3bcdd476daf6bf3f3febb92640","date":1355200097,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random(), ctermsEnum, bits, null, DocsEnum.FLAG_NONE);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random(), ctermsEnum, bits, null, 0);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random(), ctermsEnum, bits, null, DocsEnum.FLAG_NONE);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random(), ctermsEnum, bits, null, 0);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8","date":1373996650,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()))) {\n      DocsEnum docsEnum = _TestUtil.docs(random(), ctermsEnum, bits, null, DocsEnum.FLAG_NONE);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random(), ctermsEnum, bits, null, DocsEnum.FLAG_NONE);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()))) {\n      DocsEnum docsEnum = _TestUtil.docs(random(), ctermsEnum, bits, null, DocsEnum.FLAG_NONE);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()), false)) {\n      DocsEnum docsEnum = _TestUtil.docs(random(), ctermsEnum, bits, null, DocsEnum.FLAG_NONE);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()))) {\n      DocsEnum docsEnum = TestUtil.docs(random(), ctermsEnum, bits, null, DocsEnum.FLAG_NONE);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()))) {\n      DocsEnum docsEnum = _TestUtil.docs(random(), ctermsEnum, bits, null, DocsEnum.FLAG_NONE);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()))) {\n      PostingsEnum postingsEnum = TestUtil.docs(random(), ctermsEnum, bits, null, PostingsEnum.FLAG_NONE);\n      return toArray(postingsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()))) {\n      DocsEnum docsEnum = TestUtil.docs(random(), ctermsEnum, bits, null, DocsEnum.FLAG_NONE);\n      return toArray(docsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e73063b92d958076ef4ae8beb5f493e8ccdcecb4","date":1424177215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()))) {\n      PostingsEnum postingsEnum = TestUtil.docs(random(), ctermsEnum, bits, null, PostingsEnum.NONE);\n      return toArray(postingsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()))) {\n      PostingsEnum postingsEnum = TestUtil.docs(random(), ctermsEnum, bits, null, PostingsEnum.FLAG_NONE);\n      return toArray(postingsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82","date":1428522487,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator();\n    if (ctermsEnum.seekExact(new BytesRef(term.text()))) {\n      PostingsEnum postingsEnum = TestUtil.docs(random(), ctermsEnum, bits, null, PostingsEnum.NONE);\n      return toArray(postingsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator(null);\n    if (ctermsEnum.seekExact(new BytesRef(term.text()))) {\n      PostingsEnum postingsEnum = TestUtil.docs(random(), ctermsEnum, bits, null, PostingsEnum.NONE);\n      return toArray(postingsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator();\n    if (ctermsEnum.seekExact(new BytesRef(term.text()))) {\n      PostingsEnum postingsEnum = TestUtil.docs(random(), ctermsEnum, null, PostingsEnum.NONE);\n      return toArray(postingsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator();\n    if (ctermsEnum.seekExact(new BytesRef(term.text()))) {\n      PostingsEnum postingsEnum = TestUtil.docs(random(), ctermsEnum, bits, null, PostingsEnum.NONE);\n      return toArray(postingsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e588e8c82e32e29ef3837c0b06a2ad34f3c51a2b","date":1497408244,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    TermsEnum ctermsEnum = MultiFields.getTerms(reader, term.field).iterator();\n    if (ctermsEnum.seekExact(new BytesRef(term.text()))) {\n      PostingsEnum postingsEnum = TestUtil.docs(random(), ctermsEnum, null, PostingsEnum.NONE);\n      return toArray(postingsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator();\n    if (ctermsEnum.seekExact(new BytesRef(term.text()))) {\n      PostingsEnum postingsEnum = TestUtil.docs(random(), ctermsEnum, null, PostingsEnum.NONE);\n      return toArray(postingsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    TermsEnum ctermsEnum = MultiFields.getTerms(reader, term.field).iterator();\n    if (ctermsEnum.seekExact(new BytesRef(term.text()))) {\n      PostingsEnum postingsEnum = TestUtil.docs(random(), ctermsEnum, null, PostingsEnum.NONE);\n      return toArray(postingsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator();\n    if (ctermsEnum.seekExact(new BytesRef(term.text()))) {\n      PostingsEnum postingsEnum = TestUtil.docs(random(), ctermsEnum, null, PostingsEnum.NONE);\n      return toArray(postingsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    TermsEnum ctermsEnum = MultiFields.getTerms(reader, term.field).iterator();\n    if (ctermsEnum.seekExact(new BytesRef(term.text()))) {\n      PostingsEnum postingsEnum = TestUtil.docs(random(), ctermsEnum, null, PostingsEnum.NONE);\n      return toArray(postingsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    Fields fields = MultiFields.getFields(reader);\n    Terms cterms = fields.terms(term.field);\n    TermsEnum ctermsEnum = cterms.iterator();\n    if (ctermsEnum.seekExact(new BytesRef(term.text()))) {\n      PostingsEnum postingsEnum = TestUtil.docs(random(), ctermsEnum, null, PostingsEnum.NONE);\n      return toArray(postingsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e775de416dd2d8067b10db1c8af975a1d5017e","date":1539906554,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestPerSegmentDeletes#toDocsArray(Term,Bits,IndexReader).mjava","sourceNew":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    TermsEnum ctermsEnum = MultiTerms.getTerms(reader, term.field).iterator();\n    if (ctermsEnum.seekExact(new BytesRef(term.text()))) {\n      PostingsEnum postingsEnum = TestUtil.docs(random(), ctermsEnum, null, PostingsEnum.NONE);\n      return toArray(postingsEnum);\n    }\n    return null;\n  }\n\n","sourceOld":"  public int[] toDocsArray(Term term, Bits bits, IndexReader reader)\n      throws IOException {\n    TermsEnum ctermsEnum = MultiFields.getTerms(reader, term.field).iterator();\n    if (ctermsEnum.seekExact(new BytesRef(term.text()))) {\n      PostingsEnum postingsEnum = TestUtil.docs(random(), ctermsEnum, null, PostingsEnum.NONE);\n      return toArray(postingsEnum);\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["e73063b92d958076ef4ae8beb5f493e8ccdcecb4"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["02331260bb246364779cb6f04919ca47900d01bb","15250ca94ba8ab3bcdd476daf6bf3f3febb92640"],"e588e8c82e32e29ef3837c0b06a2ad34f3c51a2b":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"6613659748fe4411a7dcf85266e55db1f95f7315":["eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"51f5280f31484820499077f41fcdfe92d527d9dc":["6613659748fe4411a7dcf85266e55db1f95f7315"],"28288370235ed02234a64753cdbf0c6ec096304a":["0f4464508ee83288c8c4585b533f9faaa93aa314","e588e8c82e32e29ef3837c0b06a2ad34f3c51a2b"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"],"e73063b92d958076ef4ae8beb5f493e8ccdcecb4":["51f5280f31484820499077f41fcdfe92d527d9dc"],"15250ca94ba8ab3bcdd476daf6bf3f3febb92640":["02331260bb246364779cb6f04919ca47900d01bb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","02331260bb246364779cb6f04919ca47900d01bb"],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["15250ca94ba8ab3bcdd476daf6bf3f3febb92640"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","02331260bb246364779cb6f04919ca47900d01bb"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["28288370235ed02234a64753cdbf0c6ec096304a"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["15250ca94ba8ab3bcdd476daf6bf3f3febb92640"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["0f4464508ee83288c8c4585b533f9faaa93aa314","e588e8c82e32e29ef3837c0b06a2ad34f3c51a2b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["04e775de416dd2d8067b10db1c8af975a1d5017e"],"02331260bb246364779cb6f04919ca47900d01bb":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"]},"commit2Childs":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"e588e8c82e32e29ef3837c0b06a2ad34f3c51a2b":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"6613659748fe4411a7dcf85266e55db1f95f7315":["51f5280f31484820499077f41fcdfe92d527d9dc"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d08eba3d52b63561ebf936481ce73e6b6a14aa03"],"d08eba3d52b63561ebf936481ce73e6b6a14aa03":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"51f5280f31484820499077f41fcdfe92d527d9dc":["e73063b92d958076ef4ae8beb5f493e8ccdcecb4"],"28288370235ed02234a64753cdbf0c6ec096304a":["04e775de416dd2d8067b10db1c8af975a1d5017e"],"e73063b92d958076ef4ae8beb5f493e8ccdcecb4":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["e588e8c82e32e29ef3837c0b06a2ad34f3c51a2b","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"15250ca94ba8ab3bcdd476daf6bf3f3febb92640":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"04e775de416dd2d8067b10db1c8af975a1d5017e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","02331260bb246364779cb6f04919ca47900d01bb"],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["6613659748fe4411a7dcf85266e55db1f95f7315"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"02331260bb246364779cb6f04919ca47900d01bb":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","15250ca94ba8ab3bcdd476daf6bf3f3febb92640","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","d6f074e73200c07d54f242d3880a8da5a35ff97b","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}