{"path":"sandbox/contributions/webcrawler-LARM/src/HTTPClient/HTTPConnection#setProxyServer(String,int).mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/HTTPClient/HTTPConnection#setProxyServer(String,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Sets the default proxy server to use. The proxy will only be used for new\n     * <var>HTTPConnection</var> s created after this call and will not affect\n     * currrent instances of <var>HTTPConnection</var> . A null or empty string\n     * <var>host</var> parameter disables the proxy. <P>\n     *\n     * In an application or using the Appletviewer an alternative to this method\n     * is to set the following properties (either in the properties file or on\n     * the command line): <var>http.proxyHost</var> and <var>http.proxyPort\n     * </var>. Whether <var>http.proxyHost</var> is set or not determines\n     * whether a proxy server is used. <P>\n     *\n     * If the proxy server requires authorization and you wish to set this\n     * authorization information in the code, then you may use any of the <var>\n     * AuthorizationInfo.addXXXAuthorization()</var> methods to do so. Specify\n     * the same <var>host</var> and <var>port</var> as in this method. If you\n     * have not given any authorization info and the proxy server requires\n     * authorization then you will be prompted for the necessary info via a\n     * popup the first time you do a request.\n     *\n     * @param host  the host on which the proxy server resides.\n     * @param port  the port the proxy server is listening on.\n     * @see         #setCurrentProxy(java.lang.String, int)\n     */\n    public static void setProxyServer(String host, int port)\n    {\n        if (host == null || host.trim().length() == 0)\n        {\n            Default_Proxy_Host = null;\n        }\n        else\n        {\n            Default_Proxy_Host = host.trim().toLowerCase();\n            Default_Proxy_Port = port;\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/HTTPClient/HTTPConnection#setProxyServer(String,int).mjava","sourceNew":null,"sourceOld":"    /**\n     * Sets the default proxy server to use. The proxy will only be used for new\n     * <var>HTTPConnection</var> s created after this call and will not affect\n     * currrent instances of <var>HTTPConnection</var> . A null or empty string\n     * <var>host</var> parameter disables the proxy. <P>\n     *\n     * In an application or using the Appletviewer an alternative to this method\n     * is to set the following properties (either in the properties file or on\n     * the command line): <var>http.proxyHost</var> and <var>http.proxyPort\n     * </var>. Whether <var>http.proxyHost</var> is set or not determines\n     * whether a proxy server is used. <P>\n     *\n     * If the proxy server requires authorization and you wish to set this\n     * authorization information in the code, then you may use any of the <var>\n     * AuthorizationInfo.addXXXAuthorization()</var> methods to do so. Specify\n     * the same <var>host</var> and <var>port</var> as in this method. If you\n     * have not given any authorization info and the proxy server requires\n     * authorization then you will be prompted for the necessary info via a\n     * popup the first time you do a request.\n     *\n     * @param host  the host on which the proxy server resides.\n     * @param port  the port the proxy server is listening on.\n     * @see         #setCurrentProxy(java.lang.String, int)\n     */\n    public static void setProxyServer(String host, int port)\n    {\n        if (host == null || host.trim().length() == 0)\n        {\n            Default_Proxy_Host = null;\n        }\n        else\n        {\n            Default_Proxy_Host = host.trim().toLowerCase();\n            Default_Proxy_Port = port;\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["05d36e0b328ec96237035fbcca240e73631396e5"],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05d36e0b328ec96237035fbcca240e73631396e5":["afc16d717d9ed1a8e45371668ca6de674164d624"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}