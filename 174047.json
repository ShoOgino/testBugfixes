{"path":"lucene/facet/src/java/org/apache/lucene/facet/enhancements/EnhancementsPayloadIterator#getCategoryData(CategoryEnhancement).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/enhancements/EnhancementsPayloadIterator#getCategoryData(CategoryEnhancement).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/enhancements/EnhancementsPayloadIterator#getCategoryData(CategoryEnhancement).mjava","sourceNew":"  /**\n   * Get the data of the current category and document for a certain\n   * enhancement, or {@code null} if no such enhancement exists.\n   * \n   * @param enhancedCategory\n   *            The category enhancement to apply.\n   * @return the data of the current category and document for a certain\n   *         enhancement, or {@code null} if no such enhancement exists.\n   */\n  public Object getCategoryData(CategoryEnhancement enhancedCategory) {\n    for (int i = 0; i < nEnhancements; i++) {\n      if (enhancedCategory.equals(EnhancedCategories[i])) {\n        return enhancedCategory.extractCategoryTokenData(buffer,\n            enhancementStart[i], enhancementLength[i]);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  /**\n   * Get the data of the current category and document for a certain\n   * enhancement, or {@code null} if no such enhancement exists.\n   * \n   * @param enhancedCategory\n   *            The category enhancement to apply.\n   * @return the data of the current category and document for a certain\n   *         enhancement, or {@code null} if no such enhancement exists.\n   */\n  public Object getCategoryData(CategoryEnhancement enhancedCategory) {\n    for (int i = 0; i < nEnhancements; i++) {\n      if (enhancedCategory.equals(EnhancedCategories[i])) {\n        return enhancedCategory.extractCategoryTokenData(buffer,\n            enhancementStart[i], enhancementLength[i]);\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b65d3e2c837614823b0652e54f44ff76463de22","date":1355144308,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/enhancements/EnhancementsPayloadIterator#getCategoryData(CategoryEnhancement).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/enhancements/EnhancementsPayloadIterator#getCategoryData(CategoryEnhancement).mjava","sourceNew":"  /**\n   * Get the data of the current category and document for a certain\n   * enhancement, or {@code null} if no such enhancement exists.\n   * \n   * @param enhancedCategory\n   *            The category enhancement to apply.\n   * @return the data of the current category and document for a certain\n   *         enhancement, or {@code null} if no such enhancement exists.\n   */\n  public Object getCategoryData(CategoryEnhancement enhancedCategory) {\n    for (int i = 0; i < nEnhancements; i++) {\n      if (enhancedCategory.equals(EnhancedCategories[i])) {\n        return enhancedCategory.extractCategoryTokenData(data.bytes,\n            enhancementStart[i], enhancementLength[i]);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  /**\n   * Get the data of the current category and document for a certain\n   * enhancement, or {@code null} if no such enhancement exists.\n   * \n   * @param enhancedCategory\n   *            The category enhancement to apply.\n   * @return the data of the current category and document for a certain\n   *         enhancement, or {@code null} if no such enhancement exists.\n   */\n  public Object getCategoryData(CategoryEnhancement enhancedCategory) {\n    for (int i = 0; i < nEnhancements; i++) {\n      if (enhancedCategory.equals(EnhancedCategories[i])) {\n        return enhancedCategory.extractCategoryTokenData(buffer,\n            enhancementStart[i], enhancementLength[i]);\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/enhancements/EnhancementsPayloadIterator#getCategoryData(CategoryEnhancement).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/enhancements/EnhancementsPayloadIterator#getCategoryData(CategoryEnhancement).mjava","sourceNew":"  /**\n   * Get the data of the current category and document for a certain\n   * enhancement, or {@code null} if no such enhancement exists.\n   * \n   * @param enhancedCategory\n   *            The category enhancement to apply.\n   * @return the data of the current category and document for a certain\n   *         enhancement, or {@code null} if no such enhancement exists.\n   */\n  public Object getCategoryData(CategoryEnhancement enhancedCategory) {\n    for (int i = 0; i < nEnhancements; i++) {\n      if (enhancedCategory.equals(EnhancedCategories[i])) {\n        return enhancedCategory.extractCategoryTokenData(data.bytes,\n            enhancementStart[i], enhancementLength[i]);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  /**\n   * Get the data of the current category and document for a certain\n   * enhancement, or {@code null} if no such enhancement exists.\n   * \n   * @param enhancedCategory\n   *            The category enhancement to apply.\n   * @return the data of the current category and document for a certain\n   *         enhancement, or {@code null} if no such enhancement exists.\n   */\n  public Object getCategoryData(CategoryEnhancement enhancedCategory) {\n    for (int i = 0; i < nEnhancements; i++) {\n      if (enhancedCategory.equals(EnhancedCategories[i])) {\n        return enhancedCategory.extractCategoryTokenData(buffer,\n            enhancementStart[i], enhancementLength[i]);\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a1037d9031f9702ee6912f8751ef1d5320da6d9","date":1357217787,"type":4,"author":"Shai Erera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/enhancements/EnhancementsPayloadIterator#getCategoryData(CategoryEnhancement).mjava","sourceNew":null,"sourceOld":"  /**\n   * Get the data of the current category and document for a certain\n   * enhancement, or {@code null} if no such enhancement exists.\n   * \n   * @param enhancedCategory\n   *            The category enhancement to apply.\n   * @return the data of the current category and document for a certain\n   *         enhancement, or {@code null} if no such enhancement exists.\n   */\n  public Object getCategoryData(CategoryEnhancement enhancedCategory) {\n    for (int i = 0; i < nEnhancements; i++) {\n      if (enhancedCategory.equals(EnhancedCategories[i])) {\n        return enhancedCategory.extractCategoryTokenData(data.bytes,\n            enhancementStart[i], enhancementLength[i]);\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/enhancements/EnhancementsPayloadIterator#getCategoryData(CategoryEnhancement).mjava","sourceNew":null,"sourceOld":"  /**\n   * Get the data of the current category and document for a certain\n   * enhancement, or {@code null} if no such enhancement exists.\n   * \n   * @param enhancedCategory\n   *            The category enhancement to apply.\n   * @return the data of the current category and document for a certain\n   *         enhancement, or {@code null} if no such enhancement exists.\n   */\n  public Object getCategoryData(CategoryEnhancement enhancedCategory) {\n    for (int i = 0; i < nEnhancements; i++) {\n      if (enhancedCategory.equals(EnhancedCategories[i])) {\n        return enhancedCategory.extractCategoryTokenData(data.bytes,\n            enhancementStart[i], enhancementLength[i]);\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["407687e67faf6e1f02a211ca078d8e3eed631027","7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["3b65d3e2c837614823b0652e54f44ff76463de22"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["b89678825b68eccaf09e6ab71675fc0b0af1e099","3b65d3e2c837614823b0652e54f44ff76463de22"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7a1037d9031f9702ee6912f8751ef1d5320da6d9"],"3b65d3e2c837614823b0652e54f44ff76463de22":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"7a1037d9031f9702ee6912f8751ef1d5320da6d9":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["407687e67faf6e1f02a211ca078d8e3eed631027","3b65d3e2c837614823b0652e54f44ff76463de22"],"407687e67faf6e1f02a211ca078d8e3eed631027":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"3b65d3e2c837614823b0652e54f44ff76463de22":["7a1037d9031f9702ee6912f8751ef1d5320da6d9","407687e67faf6e1f02a211ca078d8e3eed631027"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}