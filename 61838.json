{"path":"solr/core/src/java/org/apache/solr/util/PayloadUtils#getPayloadEncoder(FieldType).mjava","commits":[{"id":"03d1c7f08294f7d7e9ecf082aa1459f38d77f277","date":1493688929,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/PayloadUtils#getPayloadEncoder(FieldType).mjava","pathOld":"/dev/null","sourceNew":"  public static String getPayloadEncoder(FieldType fieldType) {\n    // TODO: support custom payload encoding fields too somehow - maybe someone has a custom component that encodes payloads as floats\n    String encoder = null;\n    Analyzer a = fieldType.getIndexAnalyzer();\n    if (a instanceof TokenizerChain) {\n      // examine the indexing analysis chain for DelimitedPayloadTokenFilterFactory or NumericPayloadTokenFilterFactory\n      TokenizerChain tc = (TokenizerChain)a;\n      TokenFilterFactory[] factories = tc.getTokenFilterFactories();\n      for (TokenFilterFactory factory : factories) {\n        if (factory instanceof DelimitedPayloadTokenFilterFactory) {\n          encoder = factory.getOriginalArgs().get(DelimitedPayloadTokenFilterFactory.ENCODER_ATTR);\n          break;\n        }\n\n        if (factory instanceof NumericPayloadTokenFilterFactory) {\n          // encodes using `PayloadHelper.encodeFloat(payload)`\n          encoder = \"float\";\n          break;\n        }\n      }\n    }\n\n    return encoder;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/PayloadUtils#getPayloadEncoder(FieldType).mjava","pathOld":"/dev/null","sourceNew":"  public static String getPayloadEncoder(FieldType fieldType) {\n    // TODO: support custom payload encoding fields too somehow - maybe someone has a custom component that encodes payloads as floats\n    String encoder = null;\n    Analyzer a = fieldType.getIndexAnalyzer();\n    if (a instanceof TokenizerChain) {\n      // examine the indexing analysis chain for DelimitedPayloadTokenFilterFactory or NumericPayloadTokenFilterFactory\n      TokenizerChain tc = (TokenizerChain)a;\n      TokenFilterFactory[] factories = tc.getTokenFilterFactories();\n      for (TokenFilterFactory factory : factories) {\n        if (factory instanceof DelimitedPayloadTokenFilterFactory) {\n          encoder = factory.getOriginalArgs().get(DelimitedPayloadTokenFilterFactory.ENCODER_ATTR);\n          break;\n        }\n\n        if (factory instanceof NumericPayloadTokenFilterFactory) {\n          // encodes using `PayloadHelper.encodeFloat(payload)`\n          encoder = \"float\";\n          break;\n        }\n      }\n    }\n\n    return encoder;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","03d1c7f08294f7d7e9ecf082aa1459f38d77f277"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["03d1c7f08294f7d7e9ecf082aa1459f38d77f277"],"03d1c7f08294f7d7e9ecf082aa1459f38d77f277":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","03d1c7f08294f7d7e9ecf082aa1459f38d77f277"],"03d1c7f08294f7d7e9ecf082aa1459f38d77f277":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}