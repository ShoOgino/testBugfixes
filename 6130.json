{"path":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValuesType,DocValuesType,Map[String,String]).mjava","commits":[{"id":"0837ab0472feecb3a54260729d845f839e1cbd72","date":1358283639,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValuesType,DocValuesType,Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sole Constructor.\n   *\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean indexed, int number, boolean storeTermVector, \n            boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, DocValuesType docValues, DocValuesType normsType, Map<String,String> attributes) {\n    this.name = name;\n    this.indexed = indexed;\n    this.number = number;\n    this.docValueType = docValues;\n    if (indexed) {\n      this.storeTermVector = storeTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n      this.normType = !omitNorms ? normsType : null;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = null;\n      this.normType = null;\n    }\n    this.attributes = attributes;\n    assert checkConsistency();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValuesType,DocValuesType,Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sole Constructor.\n   *\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean indexed, int number, boolean storeTermVector, \n            boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, DocValuesType docValues, DocValuesType normsType, Map<String,String> attributes) {\n    this.name = name;\n    this.indexed = indexed;\n    this.number = number;\n    this.docValueType = docValues;\n    if (indexed) {\n      this.storeTermVector = storeTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n      this.normType = !omitNorms ? normsType : null;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = null;\n      this.normType = null;\n    }\n    this.attributes = attributes;\n    assert checkConsistency();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8435160e9702b19398118ddf76b61c846612b6a4","date":1380349140,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValuesType,DocValuesType,Map[String,String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValuesType,DocValuesType,Map[String,String]).mjava","sourceNew":"  /**\n   * Sole Constructor.\n   *\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean indexed, int number, boolean storeTermVector, boolean omitNorms, \n      boolean storePayloads, IndexOptions indexOptions, DocValuesType docValues, DocValuesType normsType, \n      Map<String,String> attributes) {\n    this.name = name;\n    this.indexed = indexed;\n    this.number = number;\n    this.docValueType = docValues;\n    if (indexed) {\n      this.storeTermVector = storeTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n      this.normType = !omitNorms ? normsType : null;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = null;\n      this.normType = null;\n    }\n    this.attributes = attributes;\n    assert checkConsistency();\n  }\n\n","sourceOld":"  /**\n   * Sole Constructor.\n   *\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean indexed, int number, boolean storeTermVector, \n            boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, DocValuesType docValues, DocValuesType normsType, Map<String,String> attributes) {\n    this.name = name;\n    this.indexed = indexed;\n    this.number = number;\n    this.docValueType = docValues;\n    if (indexed) {\n      this.storeTermVector = storeTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n      this.normType = !omitNorms ? normsType : null;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = null;\n      this.normType = null;\n    }\n    this.attributes = attributes;\n    assert checkConsistency();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca02c6cbb1ba28fd0bd36bd0f8a2ac84be5f0e71","date":1400675008,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValuesType,DocValuesType,long,Map[String,String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValuesType,DocValuesType,Map[String,String]).mjava","sourceNew":"  /**\n   * Sole Constructor.\n   *\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean indexed, int number, boolean storeTermVector, boolean omitNorms, \n      boolean storePayloads, IndexOptions indexOptions, DocValuesType docValues, DocValuesType normsType, \n      long dvGen, Map<String,String> attributes) {\n    this.name = name;\n    this.indexed = indexed;\n    this.number = number;\n    this.docValueType = docValues;\n    if (indexed) {\n      this.storeTermVector = storeTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n      this.normType = !omitNorms ? normsType : null;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = null;\n      this.normType = null;\n    }\n    this.dvGen = dvGen;\n    this.attributes = attributes;\n    assert checkConsistency();\n  }\n\n","sourceOld":"  /**\n   * Sole Constructor.\n   *\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean indexed, int number, boolean storeTermVector, boolean omitNorms, \n      boolean storePayloads, IndexOptions indexOptions, DocValuesType docValues, DocValuesType normsType, \n      Map<String,String> attributes) {\n    this.name = name;\n    this.indexed = indexed;\n    this.number = number;\n    this.docValueType = docValues;\n    if (indexed) {\n      this.storeTermVector = storeTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n      this.normType = !omitNorms ? normsType : null;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = null;\n      this.normType = null;\n    }\n    this.attributes = attributes;\n    assert checkConsistency();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a656b32c3aa151037a8c52e9b134acc3cbf482bc","date":1400688195,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValuesType,DocValuesType,long,Map[String,String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValuesType,DocValuesType,Map[String,String]).mjava","sourceNew":"  /**\n   * Sole Constructor.\n   *\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean indexed, int number, boolean storeTermVector, boolean omitNorms, \n      boolean storePayloads, IndexOptions indexOptions, DocValuesType docValues, DocValuesType normsType, \n      long dvGen, Map<String,String> attributes) {\n    this.name = name;\n    this.indexed = indexed;\n    this.number = number;\n    this.docValueType = docValues;\n    if (indexed) {\n      this.storeTermVector = storeTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n      this.normType = !omitNorms ? normsType : null;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = null;\n      this.normType = null;\n    }\n    this.dvGen = dvGen;\n    this.attributes = attributes;\n    assert checkConsistency();\n  }\n\n","sourceOld":"  /**\n   * Sole Constructor.\n   *\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean indexed, int number, boolean storeTermVector, boolean omitNorms, \n      boolean storePayloads, IndexOptions indexOptions, DocValuesType docValues, DocValuesType normsType, \n      Map<String,String> attributes) {\n    this.name = name;\n    this.indexed = indexed;\n    this.number = number;\n    this.docValueType = docValues;\n    if (indexed) {\n      this.storeTermVector = storeTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n      this.normType = !omitNorms ? normsType : null;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = null;\n      this.normType = null;\n    }\n    this.attributes = attributes;\n    assert checkConsistency();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValuesType,DocValuesType,long,Map[String,String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValuesType,DocValuesType,Map[String,String]).mjava","sourceNew":"  /**\n   * Sole Constructor.\n   *\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean indexed, int number, boolean storeTermVector, boolean omitNorms, \n      boolean storePayloads, IndexOptions indexOptions, DocValuesType docValues, DocValuesType normsType, \n      long dvGen, Map<String,String> attributes) {\n    this.name = name;\n    this.indexed = indexed;\n    this.number = number;\n    this.docValueType = docValues;\n    if (indexed) {\n      this.storeTermVector = storeTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n      this.normType = !omitNorms ? normsType : null;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = null;\n      this.normType = null;\n    }\n    this.dvGen = dvGen;\n    this.attributes = attributes;\n    assert checkConsistency();\n  }\n\n","sourceOld":"  /**\n   * Sole Constructor.\n   *\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean indexed, int number, boolean storeTermVector, boolean omitNorms, \n      boolean storePayloads, IndexOptions indexOptions, DocValuesType docValues, DocValuesType normsType, \n      Map<String,String> attributes) {\n    this.name = name;\n    this.indexed = indexed;\n    this.number = number;\n    this.docValueType = docValues;\n    if (indexed) {\n      this.storeTermVector = storeTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n      this.normType = !omitNorms ? normsType : null;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = null;\n      this.normType = null;\n    }\n    this.attributes = attributes;\n    assert checkConsistency();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0837ab0472feecb3a54260729d845f839e1cbd72"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8435160e9702b19398118ddf76b61c846612b6a4":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a656b32c3aa151037a8c52e9b134acc3cbf482bc":["8435160e9702b19398118ddf76b61c846612b6a4","ca02c6cbb1ba28fd0bd36bd0f8a2ac84be5f0e71"],"0837ab0472feecb3a54260729d845f839e1cbd72":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b7605579001505896d48b07160075a5c8b8e128e":["8435160e9702b19398118ddf76b61c846612b6a4","ca02c6cbb1ba28fd0bd36bd0f8a2ac84be5f0e71"],"ca02c6cbb1ba28fd0bd36bd0f8a2ac84be5f0e71":["8435160e9702b19398118ddf76b61c846612b6a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ca02c6cbb1ba28fd0bd36bd0f8a2ac84be5f0e71"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["8435160e9702b19398118ddf76b61c846612b6a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","0837ab0472feecb3a54260729d845f839e1cbd72"],"8435160e9702b19398118ddf76b61c846612b6a4":["a656b32c3aa151037a8c52e9b134acc3cbf482bc","b7605579001505896d48b07160075a5c8b8e128e","ca02c6cbb1ba28fd0bd36bd0f8a2ac84be5f0e71"],"a656b32c3aa151037a8c52e9b134acc3cbf482bc":[],"0837ab0472feecb3a54260729d845f839e1cbd72":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"b7605579001505896d48b07160075a5c8b8e128e":[],"ca02c6cbb1ba28fd0bd36bd0f8a2ac84be5f0e71":["a656b32c3aa151037a8c52e9b134acc3cbf482bc","b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a656b32c3aa151037a8c52e9b134acc3cbf482bc","b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}