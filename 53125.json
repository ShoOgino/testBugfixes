{"path":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestPayloadExplanations#testAllFunctions(SpanQuery,int[]).mjava","commits":[{"id":"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4","date":1442407411,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestPayloadExplanations#testAllFunctions(SpanQuery,int[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadExplanations#testAllFunctions(SpanQuery,int[]).mjava","sourceNew":"  public void testAllFunctions(SpanQuery query, int[] expected) throws Exception {\n    for (PayloadFunction fn : functions) {\n      qtest(new PayloadScoreQuery(query, fn), expected);\n    }\n  }\n\n","sourceOld":"  public void testAllFunctions(SpanQuery query, int[] expected) throws Exception {\n    for (PayloadFunction fn : functions) {\n      qtest(new PayloadScoreQuery(query, fn), expected);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13406cad512adb18f0b9447f1f35385a56a7bd88","date":1445252017,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestPayloadExplanations#testAllFunctions(SpanQuery,int[]).mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestPayloadExplanations#testAllFunctions(SpanQuery,int[]).mjava","sourceNew":"  public void testAllFunctions(SpanQuery query, int[] expected) throws Exception {\n    for (PayloadFunction fn : functions) {\n      qtest(new PayloadScoreQuery(query, fn, random().nextBoolean()), expected);\n    }\n  }\n\n","sourceOld":"  public void testAllFunctions(SpanQuery query, int[] expected) throws Exception {\n    for (PayloadFunction fn : functions) {\n      qtest(new PayloadScoreQuery(query, fn), expected);\n    }\n  }\n\n","bugFix":["2e8525cf39738b3113cc2ef20025af7208403718"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d9b8e4987e93a0ea580f91defdc31ce5dd572e2","date":1510236334,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestPayloadExplanations#testAllFunctions(SpanQuery,int[]).mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestPayloadExplanations#testAllFunctions(SpanQuery,int[]).mjava","sourceNew":"  public void testAllFunctions(SpanQuery query, int[] expected) throws Exception {\n    for (PayloadFunction fn : functions) {\n      qtest(new PayloadScoreQuery(query, fn, PayloadDecoder.FLOAT_DECODER, random().nextBoolean()), expected);\n    }\n  }\n\n","sourceOld":"  public void testAllFunctions(SpanQuery query, int[] expected) throws Exception {\n    for (PayloadFunction fn : functions) {\n      qtest(new PayloadScoreQuery(query, fn, random().nextBoolean()), expected);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4d9b8e4987e93a0ea580f91defdc31ce5dd572e2":["13406cad512adb18f0b9447f1f35385a56a7bd88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"13406cad512adb18f0b9447f1f35385a56a7bd88":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d9b8e4987e93a0ea580f91defdc31ce5dd572e2"]},"commit2Childs":{"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["13406cad512adb18f0b9447f1f35385a56a7bd88"],"4d9b8e4987e93a0ea580f91defdc31ce5dd572e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"13406cad512adb18f0b9447f1f35385a56a7bd88":["4d9b8e4987e93a0ea580f91defdc31ce5dd572e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}