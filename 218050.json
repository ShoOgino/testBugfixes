{"path":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryComponentOptimizationTest#verifySinglePass(String...).mjava","commits":[{"id":"5ba39ba201a572fd944ed71d888de0cd4f2957af","date":1404307334,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryComponentOptimizationTest#verifySinglePass(String...).mjava","pathOld":"/dev/null","sourceNew":"  private void verifySinglePass(String... q) throws SolrServerException {\n    QueryResponse rsp;ModifiableSolrParams params = new ModifiableSolrParams();\n    for (int i = 0; i < q.length; i += 2) {\n      params.add(q[i].toString(), q[i + 1].toString());\n    }\n    params.add(\"shards\", getShardsString());\n    params.add(\"debug\", \"track\");\n    rsp = queryServer(new ModifiableSolrParams(params));\n    Map<String, Object> debugMap = rsp.getDebugMap();\n    SimpleOrderedMap<Object> track = (SimpleOrderedMap<Object>) debugMap.get(\"track\");\n    assertNotNull(track);\n    assertNotNull(track.get(\"EXECUTE_QUERY\"));\n    assertNull(\"A single pass request should not have a GET_FIELDS phase\", track.get(\"GET_FIELDS\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a05704e317032f0bcc6bc978b6c6c5af1cba5cd9","date":1424933272,"type":4,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryComponentOptimizationTest#verifySinglePass(String...).mjava","sourceNew":null,"sourceOld":"  private void verifySinglePass(String... q) throws SolrServerException {\n    QueryResponse rsp;ModifiableSolrParams params = new ModifiableSolrParams();\n    for (int i = 0; i < q.length; i += 2) {\n      params.add(q[i].toString(), q[i + 1].toString());\n    }\n    params.add(\"shards\", getShardsString());\n    params.add(\"debug\", \"track\");\n    rsp = queryServer(new ModifiableSolrParams(params));\n    Map<String, Object> debugMap = rsp.getDebugMap();\n    SimpleOrderedMap<Object> track = (SimpleOrderedMap<Object>) debugMap.get(\"track\");\n    assertNotNull(track);\n    assertNotNull(track.get(\"EXECUTE_QUERY\"));\n    assertNull(\"A single pass request should not have a GET_FIELDS phase\", track.get(\"GET_FIELDS\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryComponentOptimizationTest#verifySinglePass(String...).mjava","sourceNew":null,"sourceOld":"  private void verifySinglePass(String... q) throws SolrServerException {\n    QueryResponse rsp;ModifiableSolrParams params = new ModifiableSolrParams();\n    for (int i = 0; i < q.length; i += 2) {\n      params.add(q[i].toString(), q[i + 1].toString());\n    }\n    params.add(\"shards\", getShardsString());\n    params.add(\"debug\", \"track\");\n    rsp = queryServer(new ModifiableSolrParams(params));\n    Map<String, Object> debugMap = rsp.getDebugMap();\n    SimpleOrderedMap<Object> track = (SimpleOrderedMap<Object>) debugMap.get(\"track\");\n    assertNotNull(track);\n    assertNotNull(track.get(\"EXECUTE_QUERY\"));\n    assertNull(\"A single pass request should not have a GET_FIELDS phase\", track.get(\"GET_FIELDS\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a05704e317032f0bcc6bc978b6c6c5af1cba5cd9":["5ba39ba201a572fd944ed71d888de0cd4f2957af"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["5ba39ba201a572fd944ed71d888de0cd4f2957af","a05704e317032f0bcc6bc978b6c6c5af1cba5cd9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5ba39ba201a572fd944ed71d888de0cd4f2957af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a05704e317032f0bcc6bc978b6c6c5af1cba5cd9"]},"commit2Childs":{"a05704e317032f0bcc6bc978b6c6c5af1cba5cd9":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5ba39ba201a572fd944ed71d888de0cd4f2957af"],"5ba39ba201a572fd944ed71d888de0cd4f2957af":["a05704e317032f0bcc6bc978b6c6c5af1cba5cd9","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}