{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/DocValuesWriterBase#DocValuesWriterBase(PerDocWriteState,float).mjava","commits":[{"id":"4a470c93b2b0f8f51241f52705fc110a01f27ad2","date":1337969379,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/DocValuesWriterBase#DocValuesWriterBase(PerDocWriteState,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/DocValuesWriterBase#DocValuesWriterBase(PerDocWriteState,boolean).mjava","sourceNew":"  /**\n   * @param state The state to initiate a {@link PerDocConsumer} instance\n   * @param acceptableOverheadRatio\n   *          how to trade space for speed. This option is only applicable for\n   *          docvalues of type {@link Type#BYTES_FIXED_SORTED} and\n   *          {@link Type#BYTES_VAR_SORTED}.\n   * @see PackedInts#getReader(org.apache.lucene.store.DataInput)\n   */\n  protected DocValuesWriterBase(PerDocWriteState state, float acceptableOverheadRatio) {\n    this.segmentName = state.segmentName;\n    this.bytesUsed = state.bytesUsed;\n    this.context = state.context;\n    this.acceptableOverheadRatio = acceptableOverheadRatio;\n  }\n\n","sourceOld":"  /**\n   * @param state The state to initiate a {@link PerDocConsumer} instance\n   * @param fasterButMoreRam whether packed ints for docvalues should be optimized for speed by rounding up the bytes\n   *                         used for a value to either 8, 16, 32 or 64 bytes. This option is only applicable for\n   *                         docvalues of type {@link Type#BYTES_FIXED_SORTED} and {@link Type#BYTES_VAR_SORTED}.\n   */\n  protected DocValuesWriterBase(PerDocWriteState state, boolean fasterButMoreRam) {\n    this.segmentName = state.segmentName;\n    this.bytesUsed = state.bytesUsed;\n    this.context = state.context;\n    this.fasterButMoreRam = fasterButMoreRam;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/DocValuesWriterBase#DocValuesWriterBase(PerDocWriteState,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/DocValuesWriterBase#DocValuesWriterBase(PerDocWriteState,float).mjava","sourceNew":"  /**\n   * @param state The state to initiate a {@link PerDocConsumer} instance\n   * @param acceptableOverheadRatio\n   *          how to trade space for speed. This option is only applicable for\n   *          docvalues of type {@link Type#BYTES_FIXED_SORTED} and\n   *          {@link Type#BYTES_VAR_SORTED}.\n   * @see PackedInts#getReader(org.apache.lucene.store.DataInput)\n   */\n  protected DocValuesWriterBase(PerDocWriteState state, float acceptableOverheadRatio) {\n    this.segmentName = state.segmentInfo.name;\n    this.bytesUsed = state.bytesUsed;\n    this.context = state.context;\n    this.acceptableOverheadRatio = acceptableOverheadRatio;\n  }\n\n","sourceOld":"  /**\n   * @param state The state to initiate a {@link PerDocConsumer} instance\n   * @param acceptableOverheadRatio\n   *          how to trade space for speed. This option is only applicable for\n   *          docvalues of type {@link Type#BYTES_FIXED_SORTED} and\n   *          {@link Type#BYTES_VAR_SORTED}.\n   * @see PackedInts#getReader(org.apache.lucene.store.DataInput)\n   */\n  protected DocValuesWriterBase(PerDocWriteState state, float acceptableOverheadRatio) {\n    this.segmentName = state.segmentName;\n    this.bytesUsed = state.bytesUsed;\n    this.context = state.context;\n    this.acceptableOverheadRatio = acceptableOverheadRatio;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"519435fc0d6082a1b8081f9492b714f716877437","date":1348258553,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/DocValuesWriterBase#DocValuesWriterBase(PerDocWriteState,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/DocValuesWriterBase#DocValuesWriterBase(PerDocWriteState,float).mjava","sourceNew":"  /**\n   * Creates {@code DocValuesWriterBase}.\n   * @param state The state to initiate a {@link PerDocConsumer} instance\n   * @param acceptableOverheadRatio\n   *          how to trade space for speed. This option is only applicable for\n   *          docvalues of type {@link Type#BYTES_FIXED_SORTED} and\n   *          {@link Type#BYTES_VAR_SORTED}.\n   * @see PackedInts#getReader(org.apache.lucene.store.DataInput)\n   */\n  protected DocValuesWriterBase(PerDocWriteState state, float acceptableOverheadRatio) {\n    this.segmentName = state.segmentInfo.name;\n    this.bytesUsed = state.bytesUsed;\n    this.context = state.context;\n    this.acceptableOverheadRatio = acceptableOverheadRatio;\n  }\n\n","sourceOld":"  /**\n   * @param state The state to initiate a {@link PerDocConsumer} instance\n   * @param acceptableOverheadRatio\n   *          how to trade space for speed. This option is only applicable for\n   *          docvalues of type {@link Type#BYTES_FIXED_SORTED} and\n   *          {@link Type#BYTES_VAR_SORTED}.\n   * @see PackedInts#getReader(org.apache.lucene.store.DataInput)\n   */\n  protected DocValuesWriterBase(PerDocWriteState state, float acceptableOverheadRatio) {\n    this.segmentName = state.segmentInfo.name;\n    this.bytesUsed = state.bytesUsed;\n    this.context = state.context;\n    this.acceptableOverheadRatio = acceptableOverheadRatio;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0837ab0472feecb3a54260729d845f839e1cbd72","date":1358283639,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/DocValuesWriterBase#DocValuesWriterBase(PerDocWriteState,float).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates {@code DocValuesWriterBase}.\n   * @param state The state to initiate a {@link PerDocConsumer} instance\n   * @param acceptableOverheadRatio\n   *          how to trade space for speed. This option is only applicable for\n   *          docvalues of type {@link Type#BYTES_FIXED_SORTED} and\n   *          {@link Type#BYTES_VAR_SORTED}.\n   * @see PackedInts#getReader(org.apache.lucene.store.DataInput)\n   */\n  protected DocValuesWriterBase(PerDocWriteState state, float acceptableOverheadRatio) {\n    this.segmentName = state.segmentInfo.name;\n    this.bytesUsed = state.bytesUsed;\n    this.context = state.context;\n    this.acceptableOverheadRatio = acceptableOverheadRatio;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/values/DocValuesWriterBase#DocValuesWriterBase(PerDocWriteState,float).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates {@code DocValuesWriterBase}.\n   * @param state The state to initiate a {@link PerDocConsumer} instance\n   * @param acceptableOverheadRatio\n   *          how to trade space for speed. This option is only applicable for\n   *          docvalues of type {@link Type#BYTES_FIXED_SORTED} and\n   *          {@link Type#BYTES_VAR_SORTED}.\n   * @see PackedInts#getReader(org.apache.lucene.store.DataInput)\n   */\n  protected DocValuesWriterBase(PerDocWriteState state, float acceptableOverheadRatio) {\n    this.segmentName = state.segmentInfo.name;\n    this.bytesUsed = state.bytesUsed;\n    this.context = state.context;\n    this.acceptableOverheadRatio = acceptableOverheadRatio;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"519435fc0d6082a1b8081f9492b714f716877437":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["4a470c93b2b0f8f51241f52705fc110a01f27ad2","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["519435fc0d6082a1b8081f9492b714f716877437","0837ab0472feecb3a54260729d845f839e1cbd72"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0837ab0472feecb3a54260729d845f839e1cbd72":["519435fc0d6082a1b8081f9492b714f716877437"],"4a470c93b2b0f8f51241f52705fc110a01f27ad2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"519435fc0d6082a1b8081f9492b714f716877437":["d4d69c535930b5cce125cff868d40f6373dc27d4","0837ab0472feecb3a54260729d845f839e1cbd72"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["519435fc0d6082a1b8081f9492b714f716877437"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","4a470c93b2b0f8f51241f52705fc110a01f27ad2"],"0837ab0472feecb3a54260729d845f839e1cbd72":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"4a470c93b2b0f8f51241f52705fc110a01f27ad2":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}