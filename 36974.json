{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/DistanceValueSource#equals(Object).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/DistanceValueSource#equals(Object).mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/vector/DistanceValueSource#equals(Object).mjava","sourceNew":"  /**\n   * Determines if this ValueSource is equal to another.\n   * @param o the ValueSource to compare\n   * @return <code>true</code> if the two objects are based upon the same query envelope\n   */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    DistanceValueSource that = (DistanceValueSource) o;\n\n    if (calculator != null ? !calculator.equals(that.calculator) : that.calculator != null) return false;\n    if (fields != null ? !fields.equals(that.fields) : that.fields != null) return false;\n    if (from != null ? !from.equals(that.from) : that.from != null) return false;\n\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Determines if this ValueSource is equal to another.\n   * @param o the ValueSource to compare\n   * @return <code>true</code> if the two objects are based upon the same query envelope\n   */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    DistanceValueSource that = (DistanceValueSource) o;\n\n    if (calculator != null ? !calculator.equals(that.calculator) : that.calculator != null) return false;\n    if (fields != null ? !fields.equals(that.fields) : that.fields != null) return false;\n    if (from != null ? !from.equals(that.from) : that.from != null) return false;\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0415a016b37e58a017fed0a91234f733ab359971","date":1341458183,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/DistanceValueSource#equals(Object).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/DistanceValueSource#equals(Object).mjava","sourceNew":"  /**\n   * Determines if this ValueSource is equal to another.\n   * @param o the ValueSource to compare\n   * @return <code>true</code> if the two objects are based upon the same query envelope\n   */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    DistanceValueSource that = (DistanceValueSource) o;\n\n    if (calculator != null ? !calculator.equals(that.calculator) : that.calculator != null) return false;\n    if (strategy != null ? !strategy.equals(that.strategy) : that.strategy != null) return false;\n    if (from != null ? !from.equals(that.from) : that.from != null) return false;\n\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Determines if this ValueSource is equal to another.\n   * @param o the ValueSource to compare\n   * @return <code>true</code> if the two objects are based upon the same query envelope\n   */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    DistanceValueSource that = (DistanceValueSource) o;\n\n    if (calculator != null ? !calculator.equals(that.calculator) : that.calculator != null) return false;\n    if (fields != null ? !fields.equals(that.fields) : that.fields != null) return false;\n    if (from != null ? !from.equals(that.from) : that.from != null) return false;\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/DistanceValueSource#equals(Object).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/DistanceValueSource#equals(Object).mjava","sourceNew":"  /**\n   * Determines if this ValueSource is equal to another.\n   * @param o the ValueSource to compare\n   * @return <code>true</code> if the two objects are based upon the same query envelope\n   */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    DistanceValueSource that = (DistanceValueSource) o;\n\n    if (calculator != null ? !calculator.equals(that.calculator) : that.calculator != null) return false;\n    if (strategy != null ? !strategy.equals(that.strategy) : that.strategy != null) return false;\n    if (from != null ? !from.equals(that.from) : that.from != null) return false;\n\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Determines if this ValueSource is equal to another.\n   * @param o the ValueSource to compare\n   * @return <code>true</code> if the two objects are based upon the same query envelope\n   */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    DistanceValueSource that = (DistanceValueSource) o;\n\n    if (calculator != null ? !calculator.equals(that.calculator) : that.calculator != null) return false;\n    if (fields != null ? !fields.equals(that.fields) : that.fields != null) return false;\n    if (from != null ? !from.equals(that.from) : that.from != null) return false;\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28bce66b0b769a7827b1f4df30b3f50a2ed6c355","date":1347720564,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/DistanceValueSource#equals(Object).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/DistanceValueSource#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    DistanceValueSource that = (DistanceValueSource) o;\n\n    if (!from.equals(that.from)) return false;\n    if (!strategy.equals(that.strategy)) return false;\n\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Determines if this ValueSource is equal to another.\n   * @param o the ValueSource to compare\n   * @return <code>true</code> if the two objects are based upon the same query envelope\n   */\n  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    DistanceValueSource that = (DistanceValueSource) o;\n\n    if (calculator != null ? !calculator.equals(that.calculator) : that.calculator != null) return false;\n    if (strategy != null ? !strategy.equals(that.strategy) : that.strategy != null) return false;\n    if (from != null ? !from.equals(that.from) : that.from != null) return false;\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db81fe5f1911f062c87abbb053871c166d57d849","date":1374686410,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/DistanceValueSource#equals(Object).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/DistanceValueSource#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    DistanceValueSource that = (DistanceValueSource) o;\n\n    if (!from.equals(that.from)) return false;\n    if (!strategy.equals(that.strategy)) return false;\n    if (multiplier != that.multiplier) return false;\n\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    DistanceValueSource that = (DistanceValueSource) o;\n\n    if (!from.equals(that.from)) return false;\n    if (!strategy.equals(that.strategy)) return false;\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/DistanceValueSource#equals(Object).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/DistanceValueSource#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    DistanceValueSource that = (DistanceValueSource) o;\n\n    if (!from.equals(that.from)) return false;\n    if (!strategy.equals(that.strategy)) return false;\n    if (multiplier != that.multiplier) return false;\n\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    DistanceValueSource that = (DistanceValueSource) o;\n\n    if (!from.equals(that.from)) return false;\n    if (!strategy.equals(that.strategy)) return false;\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/vector/DistanceValueSource#equals(Object).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/DistanceValueSource#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    DistanceValueSource that = (DistanceValueSource) o;\n\n    if (!from.equals(that.from)) return false;\n    if (!strategy.equals(that.strategy)) return false;\n    if (multiplier != that.multiplier) return false;\n\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    DistanceValueSource that = (DistanceValueSource) o;\n\n    if (!from.equals(that.from)) return false;\n    if (!strategy.equals(that.strategy)) return false;\n    if (multiplier != that.multiplier) return false;\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/vector/DistanceValueSource#equals(Object).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/DistanceValueSource#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    DistanceValueSource that = (DistanceValueSource) o;\n\n    if (!from.equals(that.from)) return false;\n    if (!strategy.equals(that.strategy)) return false;\n    if (multiplier != that.multiplier) return false;\n\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (o == null || getClass() != o.getClass()) return false;\n\n    DistanceValueSource that = (DistanceValueSource) o;\n\n    if (!from.equals(that.from)) return false;\n    if (!strategy.equals(that.strategy)) return false;\n    if (multiplier != that.multiplier) return false;\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0415a016b37e58a017fed0a91234f733ab359971":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"af2638813028b254a88b418ebeafb541afb49653":["db81fe5f1911f062c87abbb053871c166d57d849","112d77ac8d3e10a362516ad834c9a11d35c94234"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","0415a016b37e58a017fed0a91234f733ab359971"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["db81fe5f1911f062c87abbb053871c166d57d849"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["28bce66b0b769a7827b1f4df30b3f50a2ed6c355"],"28bce66b0b769a7827b1f4df30b3f50a2ed6c355":["0415a016b37e58a017fed0a91234f733ab359971"],"db81fe5f1911f062c87abbb053871c166d57d849":["28bce66b0b769a7827b1f4df30b3f50a2ed6c355"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"0415a016b37e58a017fed0a91234f733ab359971":["fe33227f6805edab2036cbb80645cc4e2d1fa424","28bce66b0b769a7827b1f4df30b3f50a2ed6c355"],"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["0415a016b37e58a017fed0a91234f733ab359971","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"28bce66b0b769a7827b1f4df30b3f50a2ed6c355":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","db81fe5f1911f062c87abbb053871c166d57d849"],"db81fe5f1911f062c87abbb053871c166d57d849":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}