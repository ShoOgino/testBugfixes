{"path":"lucene/core/src/test/org/apache/lucene/util/TestPriorityQueue#testFixedSize().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestPriorityQueue#testFixedSize().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/TestPriorityQueue#testFixedSize().mjava","sourceNew":"    public void testFixedSize() {\n        PriorityQueue<Integer> pq = new IntegerQueue(3);\n        pq.insertWithOverflow(2);\n        pq.insertWithOverflow(3);\n        pq.insertWithOverflow(1);\n        pq.insertWithOverflow(5);\n        pq.insertWithOverflow(7);\n        pq.insertWithOverflow(1);\n        assertEquals(3, pq.size());\n        assertEquals((Integer) 3, pq.top());\n    }\n\n","sourceOld":"    public void testFixedSize() {\n        PriorityQueue<Integer> pq = new IntegerQueue(3);\n        pq.insertWithOverflow(2);\n        pq.insertWithOverflow(3);\n        pq.insertWithOverflow(1);\n        pq.insertWithOverflow(5);\n        pq.insertWithOverflow(7);\n        pq.insertWithOverflow(1);\n        assertEquals(3, pq.size());\n        assertEquals((Integer) 3, pq.top());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af7005974a7d7f71beef18cb9aa918b9d968d163","date":1532074399,"type":3,"author":"Jim Ferenczi","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestPriorityQueue#testFixedSize().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestPriorityQueue#testFixedSize().mjava","sourceNew":"  public void testFixedSize() {\n    PriorityQueue<Integer> pq = new IntegerQueue(3);\n    pq.insertWithOverflow(2);\n    pq.insertWithOverflow(3);\n    pq.insertWithOverflow(1);\n    pq.insertWithOverflow(5);\n    pq.insertWithOverflow(7);\n    pq.insertWithOverflow(1);\n    assertEquals(3, pq.size());\n    assertEquals((Integer) 3, pq.top());\n  }\n\n","sourceOld":"    public void testFixedSize() {\n        PriorityQueue<Integer> pq = new IntegerQueue(3);\n        pq.insertWithOverflow(2);\n        pq.insertWithOverflow(3);\n        pq.insertWithOverflow(1);\n        pq.insertWithOverflow(5);\n        pq.insertWithOverflow(7);\n        pq.insertWithOverflow(1);\n        assertEquals(3, pq.size());\n        assertEquals((Integer) 3, pq.top());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af7005974a7d7f71beef18cb9aa918b9d968d163"],"af7005974a7d7f71beef18cb9aa918b9d968d163":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["af7005974a7d7f71beef18cb9aa918b9d968d163"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"af7005974a7d7f71beef18cb9aa918b9d968d163":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}