{"path":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/server/GDataRequest#generateIdentificationProperties().mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/server/GDataRequest#generateIdentificationProperties().mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/server/GDataRequest#generateIdentificationProperties().mjava","sourceNew":"    private void generateIdentificationProperties()\n            throws GDataRequestException {\n        /* generate all needed data to identify the requested feed/entry */\n        String pathInfo = this.request.getPathInfo();\n              if (pathInfo.length() <= 1)\n            throw new GDataRequestException(\n                    \"No feed or entry specified for this request\",GDataResponse.BAD_REQUEST);\n        StringTokenizer tokenizer = new StringTokenizer(pathInfo, \"/\");\n        this.service = tokenizer.nextToken();\n        if (!tokenizer.hasMoreTokens())\n            throw new GDataRequestException(\n                    \"Can not find feed id in requested path \" + pathInfo,GDataResponse.BAD_REQUEST);\n        this.feedId = tokenizer.nextToken();\n\n        String appendix = tokenizer.hasMoreTokens() ? tokenizer.nextToken()\n                : null;\n        if (appendix == null){\n            this.isFeedRequest = true;\n            return;\n        }\n        if (appendix.equals(CATEGORY_QUERY_INDICATOR)) {\n            StringBuilder builder = new StringBuilder();\n            while (tokenizer.hasMoreTokens())\n                builder.append(\"/\").append(tokenizer.nextToken());\n            this.categoryQuery = builder.toString();\n        } else {\n            this.entryId = appendix;\n            this.entryVersion = tokenizer.hasMoreTokens() ? tokenizer\n                    .nextToken() : \"\";\n        }\n        this.isFeedRequest = (this.type == GDataRequestType.GET && (this.entryId == null\n                || this.entryId.length() == 0 || (this.entryId.equals('/'))));\n    }\n\n","sourceOld":"    private void generateIdentificationProperties()\n            throws GDataRequestException {\n        /* generate all needed data to identify the requested feed/entry */\n        String pathInfo = this.request.getPathInfo();\n              if (pathInfo.length() <= 1)\n            throw new GDataRequestException(\n                    \"No feed or entry specified for this request\",GDataResponse.BAD_REQUEST);\n        StringTokenizer tokenizer = new StringTokenizer(pathInfo, \"/\");\n        this.service = tokenizer.nextToken();\n        if (!tokenizer.hasMoreTokens())\n            throw new GDataRequestException(\n                    \"Can not find feed id in requested path \" + pathInfo,GDataResponse.BAD_REQUEST);\n        this.feedId = tokenizer.nextToken();\n\n        String appendix = tokenizer.hasMoreTokens() ? tokenizer.nextToken()\n                : null;\n        if (appendix == null){\n            this.isFeedRequest = true;\n            return;\n        }\n        if (appendix.equals(CATEGORY_QUERY_INDICATOR)) {\n            StringBuilder builder = new StringBuilder();\n            while (tokenizer.hasMoreTokens())\n                builder.append(\"/\").append(tokenizer.nextToken());\n            this.categoryQuery = builder.toString();\n        } else {\n            this.entryId = appendix;\n            this.entryVersion = tokenizer.hasMoreTokens() ? tokenizer\n                    .nextToken() : \"\";\n        }\n        this.isFeedRequest = (this.type == GDataRequestType.GET && (this.entryId == null\n                || this.entryId.length() == 0 || (this.entryId.equals('/'))));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/server/GDataRequest#generateIdentificationProperties().mjava","sourceNew":null,"sourceOld":"    private void generateIdentificationProperties()\n            throws GDataRequestException {\n        /* generate all needed data to identify the requested feed/entry */\n        String pathInfo = this.request.getPathInfo();\n              if (pathInfo.length() <= 1)\n            throw new GDataRequestException(\n                    \"No feed or entry specified for this request\",GDataResponse.BAD_REQUEST);\n        StringTokenizer tokenizer = new StringTokenizer(pathInfo, \"/\");\n        this.service = tokenizer.nextToken();\n        if (!tokenizer.hasMoreTokens())\n            throw new GDataRequestException(\n                    \"Can not find feed id in requested path \" + pathInfo,GDataResponse.BAD_REQUEST);\n        this.feedId = tokenizer.nextToken();\n\n        String appendix = tokenizer.hasMoreTokens() ? tokenizer.nextToken()\n                : null;\n        if (appendix == null){\n            this.isFeedRequest = true;\n            return;\n        }\n        if (appendix.equals(CATEGORY_QUERY_INDICATOR)) {\n            StringBuilder builder = new StringBuilder();\n            while (tokenizer.hasMoreTokens())\n                builder.append(\"/\").append(tokenizer.nextToken());\n            this.categoryQuery = builder.toString();\n        } else {\n            this.entryId = appendix;\n            this.entryVersion = tokenizer.hasMoreTokens() ? tokenizer\n                    .nextToken() : \"\";\n        }\n        this.isFeedRequest = (this.type == GDataRequestType.GET && (this.entryId == null\n                || this.entryId.length() == 0 || (this.entryId.equals('/'))));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}