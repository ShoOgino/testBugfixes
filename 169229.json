{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharTokenizer#CharTokenizer(Version,AttributeFactory,Reader).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharTokenizer#CharTokenizer(Version,AttributeFactory,Reader).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharTokenizer#CharTokenizer(Version,AttributeFactory,Reader).mjava","sourceNew":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match See {@link <a href=\"#version\">above</a>}\n   * @param factory\n   *          the attribute factory to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeFactory factory,\n      Reader input) {\n    super(factory, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match See {@link <a href=\"#version\">above</a>}\n   * @param factory\n   *          the attribute factory to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeFactory factory,\n      Reader input) {\n    super(factory, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharTokenizer#CharTokenizer(Version,AttributeFactory,Reader).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharTokenizer#CharTokenizer(Version,AttributeFactory,Reader).mjava","sourceNew":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match\n   * @param factory\n   *          the attribute factory to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeFactory factory,\n      Reader input) {\n    super(factory, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match See {@link <a href=\"#version\">above</a>}\n   * @param factory\n   *          the attribute factory to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeFactory factory,\n      Reader input) {\n    super(factory, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharTokenizer#CharTokenizer(Version,AttributeFactory).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharTokenizer#CharTokenizer(Version,AttributeFactory,Reader).mjava","sourceNew":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match\n   * @param factory\n   *          the attribute factory to use for this {@link Tokenizer}\n   */\n  public CharTokenizer(Version matchVersion, AttributeFactory factory) {\n    super(factory);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link CharTokenizer} instance\n   * \n   * @param matchVersion\n   *          Lucene version to match\n   * @param factory\n   *          the attribute factory to use for this {@link Tokenizer}\n   * @param input\n   *          the input to split up into tokens\n   */\n  public CharTokenizer(Version matchVersion, AttributeFactory factory,\n      Reader input) {\n    super(factory, input);\n    charUtils = CharacterUtils.getInstance(matchVersion);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}