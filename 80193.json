{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange]#doSubs(SimpleOrderedMap,int).mjava","commits":[{"id":"ad96108474aafa94aa3be9844152c42c7ed43fca","date":1430010887,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange]#doSubs(SimpleOrderedMap,int).mjava","pathOld":"/dev/null","sourceNew":"  private void doSubs(SimpleOrderedMap bucket, int slot) throws IOException {\n    // handle sub-facets for this bucket\n    if (freq.getSubFacets().size() > 0) {\n      DocSet subBase = intersections[slot];\n      if (subBase.size() == 0) return;\n      FacetContext subContext = fcontext.sub();\n      subContext.base = subBase;\n      try {\n        fillBucketSubs(bucket, subContext);\n      } finally {\n        // subContext.base.decref();  // OFF-HEAP\n        // subContext.base = null;  // do not modify context after creation... there may be deferred execution (i.e. streaming)\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"faf1236ae092482293a7e0659e347d172185ef6f","date":1430314113,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange]#doSubs(SimpleOrderedMap,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange]#doSubs(SimpleOrderedMap,int).mjava","sourceNew":"  private void doSubs(SimpleOrderedMap bucket, int slot) throws IOException {\n    // handle sub-facets for this bucket\n    if (freq.getSubFacets().size() > 0) {\n      DocSet subBase = intersections[slot];\n      try {\n        processSubs(bucket, filters[slot], subBase);\n      } finally {\n        // subContext.base.decref();  // OFF-HEAP\n        // subContext.base = null;  // do not modify context after creation... there may be deferred execution (i.e. streaming)\n      }\n    }\n  }\n\n","sourceOld":"  private void doSubs(SimpleOrderedMap bucket, int slot) throws IOException {\n    // handle sub-facets for this bucket\n    if (freq.getSubFacets().size() > 0) {\n      DocSet subBase = intersections[slot];\n      if (subBase.size() == 0) return;\n      FacetContext subContext = fcontext.sub();\n      subContext.base = subBase;\n      try {\n        fillBucketSubs(bucket, subContext);\n      } finally {\n        // subContext.base.decref();  // OFF-HEAP\n        // subContext.base = null;  // do not modify context after creation... there may be deferred execution (i.e. streaming)\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ec805ca8fedc0166461148c7182f1bcbbd18ee1","date":1489767223,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange]#doSubs(SimpleOrderedMap,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange]#doSubs(SimpleOrderedMap,int).mjava","sourceNew":"  private void doSubs(SimpleOrderedMap bucket, int slot) throws IOException {\n    // handle sub-facets for this bucket\n    if (freq.getSubFacets().size() > 0) {\n      DocSet subBase = intersections[slot];\n      try {\n        processSubs(bucket, filters[slot], subBase, false);\n      } finally {\n        // subContext.base.decref();  // OFF-HEAP\n        // subContext.base = null;  // do not modify context after creation... there may be deferred execution (i.e. streaming)\n      }\n    }\n  }\n\n","sourceOld":"  private void doSubs(SimpleOrderedMap bucket, int slot) throws IOException {\n    // handle sub-facets for this bucket\n    if (freq.getSubFacets().size() > 0) {\n      DocSet subBase = intersections[slot];\n      try {\n        processSubs(bucket, filters[slot], subBase);\n      } finally {\n        // subContext.base.decref();  // OFF-HEAP\n        // subContext.base = null;  // do not modify context after creation... there may be deferred execution (i.e. streaming)\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58b93c361b4f6fe193e84bfd27ea523366eada52","date":1490100167,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange]#doSubs(SimpleOrderedMap,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange]#doSubs(SimpleOrderedMap,int).mjava","sourceNew":"  private void doSubs(SimpleOrderedMap bucket, int slot) throws IOException {\n    // handle sub-facets for this bucket\n    if (freq.getSubFacets().size() > 0) {\n      DocSet subBase = intersections[slot];\n      try {\n        processSubs(bucket, filters[slot], subBase, false, null);\n      } finally {\n        // subContext.base.decref();  // OFF-HEAP\n        // subContext.base = null;  // do not modify context after creation... there may be deferred execution (i.e. streaming)\n      }\n    }\n  }\n\n","sourceOld":"  private void doSubs(SimpleOrderedMap bucket, int slot) throws IOException {\n    // handle sub-facets for this bucket\n    if (freq.getSubFacets().size() > 0) {\n      DocSet subBase = intersections[slot];\n      try {\n        processSubs(bucket, filters[slot], subBase, false);\n      } finally {\n        // subContext.base.decref();  // OFF-HEAP\n        // subContext.base = null;  // do not modify context after creation... there may be deferred execution (i.e. streaming)\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11ab475c994c79138885cc8a30b2641d929cdc43","date":1490280010,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange]#doSubs(SimpleOrderedMap,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange]#doSubs(SimpleOrderedMap,int).mjava","sourceNew":"  private void doSubs(SimpleOrderedMap bucket, int slot) throws IOException {\n    // handle sub-facets for this bucket\n    if (freq.getSubFacets().size() > 0) {\n      DocSet subBase = intersections[slot];\n      try {\n        processSubs(bucket, filters[slot], subBase, false);\n      } finally {\n        // subContext.base.decref();  // OFF-HEAP\n        // subContext.base = null;  // do not modify context after creation... there may be deferred execution (i.e. streaming)\n      }\n    }\n  }\n\n","sourceOld":"  private void doSubs(SimpleOrderedMap bucket, int slot) throws IOException {\n    // handle sub-facets for this bucket\n    if (freq.getSubFacets().size() > 0) {\n      DocSet subBase = intersections[slot];\n      try {\n        processSubs(bucket, filters[slot], subBase);\n      } finally {\n        // subContext.base.decref();  // OFF-HEAP\n        // subContext.base = null;  // do not modify context after creation... there may be deferred execution (i.e. streaming)\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8908009aaa8e9318b455c1c22b83e0e87738228a","date":1490280013,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange]#doSubs(SimpleOrderedMap,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange]#doSubs(SimpleOrderedMap,int).mjava","sourceNew":"  private void doSubs(SimpleOrderedMap bucket, int slot) throws IOException {\n    // handle sub-facets for this bucket\n    if (freq.getSubFacets().size() > 0) {\n      DocSet subBase = intersections[slot];\n      try {\n        processSubs(bucket, filters[slot], subBase, false, null);\n      } finally {\n        // subContext.base.decref();  // OFF-HEAP\n        // subContext.base = null;  // do not modify context after creation... there may be deferred execution (i.e. streaming)\n      }\n    }\n  }\n\n","sourceOld":"  private void doSubs(SimpleOrderedMap bucket, int slot) throws IOException {\n    // handle sub-facets for this bucket\n    if (freq.getSubFacets().size() > 0) {\n      DocSet subBase = intersections[slot];\n      try {\n        processSubs(bucket, filters[slot], subBase, false);\n      } finally {\n        // subContext.base.decref();  // OFF-HEAP\n        // subContext.base = null;  // do not modify context after creation... there may be deferred execution (i.e. streaming)\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56a9893014b284af4d1af451e6c02e7ffdf5b6e","date":1590065972,"type":5,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor#doSubs(SimpleOrderedMap,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange]#doSubs(SimpleOrderedMap,int).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  private void doSubs(SimpleOrderedMap bucket, int slot) throws IOException {\n    // handle sub-facets for this bucket\n    if (freq.getSubFacets().size() > 0) {\n      DocSet subBase = intersections[slot];\n      try {\n        processSubs(bucket, filters[slot], subBase, false, null);\n      } finally {\n        // subContext.base.decref();  // OFF-HEAP\n        // subContext.base = null;  // do not modify context after creation... there may be deferred execution (i.e. streaming)\n      }\n    }\n  }\n\n","sourceOld":"  private void doSubs(SimpleOrderedMap bucket, int slot) throws IOException {\n    // handle sub-facets for this bucket\n    if (freq.getSubFacets().size() > 0) {\n      DocSet subBase = intersections[slot];\n      try {\n        processSubs(bucket, filters[slot], subBase, false, null);\n      } finally {\n        // subContext.base.decref();  // OFF-HEAP\n        // subContext.base = null;  // do not modify context after creation... there may be deferred execution (i.e. streaming)\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["58b93c361b4f6fe193e84bfd27ea523366eada52"],"58b93c361b4f6fe193e84bfd27ea523366eada52":["8ec805ca8fedc0166461148c7182f1bcbbd18ee1"],"11ab475c994c79138885cc8a30b2641d929cdc43":["faf1236ae092482293a7e0659e347d172185ef6f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad96108474aafa94aa3be9844152c42c7ed43fca":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8ec805ca8fedc0166461148c7182f1bcbbd18ee1":["faf1236ae092482293a7e0659e347d172185ef6f"],"faf1236ae092482293a7e0659e347d172185ef6f":["ad96108474aafa94aa3be9844152c42c7ed43fca"],"8908009aaa8e9318b455c1c22b83e0e87738228a":["11ab475c994c79138885cc8a30b2641d929cdc43"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"]},"commit2Childs":{"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"58b93c361b4f6fe193e84bfd27ea523366eada52":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"],"11ab475c994c79138885cc8a30b2641d929cdc43":["8908009aaa8e9318b455c1c22b83e0e87738228a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ad96108474aafa94aa3be9844152c42c7ed43fca"],"ad96108474aafa94aa3be9844152c42c7ed43fca":["faf1236ae092482293a7e0659e347d172185ef6f"],"8ec805ca8fedc0166461148c7182f1bcbbd18ee1":["58b93c361b4f6fe193e84bfd27ea523366eada52"],"faf1236ae092482293a7e0659e347d172185ef6f":["11ab475c994c79138885cc8a30b2641d929cdc43","8ec805ca8fedc0166461148c7182f1bcbbd18ee1"],"8908009aaa8e9318b455c1c22b83e0e87738228a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8908009aaa8e9318b455c1c22b83e0e87738228a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}