{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/AnalyzerFactory#create().mjava","commits":[{"id":"7bb889a868ab9d608bde8136f42ed7234a3a927b","date":1359393528,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/AnalyzerFactory#create().mjava","pathOld":"/dev/null","sourceNew":"  public Analyzer create() {\n    return new Analyzer() {\n      private final Integer positionIncrementGap = AnalyzerFactory.this.positionIncrementGap;\n      private final Integer offsetGap = AnalyzerFactory.this.offsetGap;\n\n      @Override\n      public Reader initReader(String fieldName, Reader reader) {\n        if (charFilterFactories != null && charFilterFactories.size() > 0) {\n          Reader wrappedReader = reader;\n          for (CharFilterFactory charFilterFactory : charFilterFactories) {\n            wrappedReader = charFilterFactory.create(wrappedReader);\n          }\n          reader = wrappedReader;\n        }\n        return reader;\n      }\n\n      @Override\n      protected Analyzer.TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        final Tokenizer tokenizer = tokenizerFactory.create(reader);\n        TokenStream tokenStream = tokenizer;\n        for (TokenFilterFactory filterFactory : tokenFilterFactories) {\n          tokenStream = filterFactory.create(tokenStream);\n        }\n        return new TokenStreamComponents(tokenizer, tokenStream);\n      }\n\n      @Override\n      public int getPositionIncrementGap(String fieldName) {\n        return null == positionIncrementGap ? super.getPositionIncrementGap(fieldName) : positionIncrementGap;\n      }\n\n      @Override\n      public int getOffsetGap(String fieldName) {\n        return null == offsetGap ? super.getOffsetGap(fieldName) : offsetGap;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de522d9303bd67c8473a269a1319125d1f3700e0","date":1359477856,"type":0,"author":"Adrien Grand","isMerge":true,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/AnalyzerFactory#create().mjava","pathOld":"/dev/null","sourceNew":"  public Analyzer create() {\n    return new Analyzer() {\n      private final Integer positionIncrementGap = AnalyzerFactory.this.positionIncrementGap;\n      private final Integer offsetGap = AnalyzerFactory.this.offsetGap;\n\n      @Override\n      public Reader initReader(String fieldName, Reader reader) {\n        if (charFilterFactories != null && charFilterFactories.size() > 0) {\n          Reader wrappedReader = reader;\n          for (CharFilterFactory charFilterFactory : charFilterFactories) {\n            wrappedReader = charFilterFactory.create(wrappedReader);\n          }\n          reader = wrappedReader;\n        }\n        return reader;\n      }\n\n      @Override\n      protected Analyzer.TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        final Tokenizer tokenizer = tokenizerFactory.create(reader);\n        TokenStream tokenStream = tokenizer;\n        for (TokenFilterFactory filterFactory : tokenFilterFactories) {\n          tokenStream = filterFactory.create(tokenStream);\n        }\n        return new TokenStreamComponents(tokenizer, tokenStream);\n      }\n\n      @Override\n      public int getPositionIncrementGap(String fieldName) {\n        return null == positionIncrementGap ? super.getPositionIncrementGap(fieldName) : positionIncrementGap;\n      }\n\n      @Override\n      public int getOffsetGap(String fieldName) {\n        return null == offsetGap ? super.getOffsetGap(fieldName) : offsetGap;\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/AnalyzerFactory#create().mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/byTask/utils/AnalyzerFactory#create().mjava","sourceNew":"  public Analyzer create() {\n    return new Analyzer() {\n      private final Integer positionIncrementGap = AnalyzerFactory.this.positionIncrementGap;\n      private final Integer offsetGap = AnalyzerFactory.this.offsetGap;\n\n      @Override\n      public Reader initReader(String fieldName, Reader reader) {\n        if (charFilterFactories != null && charFilterFactories.size() > 0) {\n          Reader wrappedReader = reader;\n          for (CharFilterFactory charFilterFactory : charFilterFactories) {\n            wrappedReader = charFilterFactory.create(wrappedReader);\n          }\n          reader = wrappedReader;\n        }\n        return reader;\n      }\n\n      @Override\n      protected Analyzer.TokenStreamComponents createComponents(String fieldName) {\n        final Tokenizer tokenizer = tokenizerFactory.create();\n        TokenStream tokenStream = tokenizer;\n        for (TokenFilterFactory filterFactory : tokenFilterFactories) {\n          tokenStream = filterFactory.create(tokenStream);\n        }\n        return new TokenStreamComponents(tokenizer, tokenStream);\n      }\n\n      @Override\n      public int getPositionIncrementGap(String fieldName) {\n        return null == positionIncrementGap ? super.getPositionIncrementGap(fieldName) : positionIncrementGap;\n      }\n\n      @Override\n      public int getOffsetGap(String fieldName) {\n        return null == offsetGap ? super.getOffsetGap(fieldName) : offsetGap;\n      }\n    };\n  }\n\n","sourceOld":"  public Analyzer create() {\n    return new Analyzer() {\n      private final Integer positionIncrementGap = AnalyzerFactory.this.positionIncrementGap;\n      private final Integer offsetGap = AnalyzerFactory.this.offsetGap;\n\n      @Override\n      public Reader initReader(String fieldName, Reader reader) {\n        if (charFilterFactories != null && charFilterFactories.size() > 0) {\n          Reader wrappedReader = reader;\n          for (CharFilterFactory charFilterFactory : charFilterFactories) {\n            wrappedReader = charFilterFactory.create(wrappedReader);\n          }\n          reader = wrappedReader;\n        }\n        return reader;\n      }\n\n      @Override\n      protected Analyzer.TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        final Tokenizer tokenizer = tokenizerFactory.create(reader);\n        TokenStream tokenStream = tokenizer;\n        for (TokenFilterFactory filterFactory : tokenFilterFactories) {\n          tokenStream = filterFactory.create(tokenStream);\n        }\n        return new TokenStreamComponents(tokenizer, tokenStream);\n      }\n\n      @Override\n      public int getPositionIncrementGap(String fieldName) {\n        return null == positionIncrementGap ? super.getPositionIncrementGap(fieldName) : positionIncrementGap;\n      }\n\n      @Override\n      public int getOffsetGap(String fieldName) {\n        return null == offsetGap ? super.getOffsetGap(fieldName) : offsetGap;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["7bb889a868ab9d608bde8136f42ed7234a3a927b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7bb889a868ab9d608bde8136f42ed7234a3a927b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"de522d9303bd67c8473a269a1319125d1f3700e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7bb889a868ab9d608bde8136f42ed7234a3a927b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"]},"commit2Childs":{"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7bb889a868ab9d608bde8136f42ed7234a3a927b","de522d9303bd67c8473a269a1319125d1f3700e0"],"7bb889a868ab9d608bde8136f42ed7234a3a927b":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","de522d9303bd67c8473a269a1319125d1f3700e0"],"de522d9303bd67c8473a269a1319125d1f3700e0":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["de522d9303bd67c8473a269a1319125d1f3700e0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}