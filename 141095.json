{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<SolrInputDocument>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          log.info(\"Caught benign exception during commit: \" + e.getMessage());\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<SolrInputDocument>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          log.info(\"Caught benign exception during commit: \" + e.getMessage());\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<SolrInputDocument>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          log.info(\"Caught benign exception during commit: \" + e.getMessage());\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<SolrInputDocument>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          log.info(\"Caught benign exception during commit: \" + e.getMessage());\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<SolrInputDocument>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          log.info(\"Caught benign exception during commit: \" + e.getMessage());\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<SolrInputDocument>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          log.info(\"Caught benign exception during commit: \" + e.getMessage());\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          log.info(\"Caught benign exception during commit: \" + e.getMessage());\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<SolrInputDocument>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<SolrInputDocument>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          log.info(\"Caught benign exception during commit: \" + e.getMessage());\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c7856260bc28f285ae7bfefa99b28db4dca6daf","date":1395253500,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          log.info(\"Caught benign exception during commit: \" + e.getMessage());\n        }\n        if (!(tserver instanceof EmbeddedSolrServer)) {\n          tserver.shutdown();\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          log.info(\"Caught benign exception during commit: \" + e.getMessage());\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = client.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = client.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = client.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = client.commit();\n        assertEquals(0, resp.getStatus());\n        resp = client.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          log.info(\"Caught benign exception during commit: \" + e.getMessage());\n        }\n        if (!(client instanceof EmbeddedSolrServer)) {\n          client.shutdown();\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = tserver.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = tserver.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = tserver.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = tserver.commit();\n        assertEquals(0, resp.getStatus());\n        resp = tserver.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          log.info(\"Caught benign exception during commit: \" + e.getMessage());\n        }\n        if (!(tserver instanceof EmbeddedSolrServer)) {\n          tserver.shutdown();\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc3b13b430571c2e169f98fe38e1e7666f88522d","date":1422446157,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = client.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = client.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = client.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = client.commit();\n        assertEquals(0, resp.getStatus());\n        resp = client.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          log.info(\"Caught benign exception during commit: \" + e.getMessage());\n        }\n        if (!(client instanceof EmbeddedSolrServer)) {\n          client.close();\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = client.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = client.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = client.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = client.commit();\n        assertEquals(0, resp.getStatus());\n        resp = client.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          log.info(\"Caught benign exception during commit: \" + e.getMessage());\n        }\n        if (!(client instanceof EmbeddedSolrServer)) {\n          client.shutdown();\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6dc613ed6f75d1988140301ee8de8fdb056fa337","date":1588034757,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = client.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            if (log.isInfoEnabled()) {\n              log.info(\"{} - Committing {}\", getName(), i);\n            }\n            resp = client.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = client.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = client.commit();\n        assertEquals(0, resp.getStatus());\n        resp = client.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          if (log.isInfoEnabled()) {\n            log.info(\"Caught benign exception during commit: {}\", e.getMessage());\n          }\n        }\n        if (!(client instanceof EmbeddedSolrServer)) {\n          client.close();\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = client.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            log.info(getName() + \" - Committing \" + i);\n            resp = client.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = client.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = client.commit();\n        assertEquals(0, resp.getStatus());\n        resp = client.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          log.info(\"Caught benign exception during commit: \" + e.getMessage());\n        }\n        if (!(client instanceof EmbeddedSolrServer)) {\n          client.close();\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57c238f5fb83803b49b37b3a1a12224a64d47542","date":1593655679,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/LargeVolumeTestBase.DocThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = client.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            if (log.isInfoEnabled()) {\n              log.info(\"{} - Committing {}\", getName(), i);\n            }\n            resp = client.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = client.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = client.commit();\n        assertEquals(0, resp.getStatus());\n        resp = client.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          if (log.isInfoEnabled()) {\n            log.info(\"Caught benign exception during commit: \", e);\n          }\n        }\n        if (!(client instanceof EmbeddedSolrServer)) {\n          client.close();\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        UpdateResponse resp = null;\n        List<SolrInputDocument> docs = new ArrayList<>();\n        for (int i = 0; i < numdocs; i++) {\n          if (i > 0 && i % 200 == 0) {\n            resp = client.add(docs);\n            assertEquals(0, resp.getStatus());\n            docs = new ArrayList<>();\n          }\n          if (i > 0 && i % 5000 == 0) {\n            if (log.isInfoEnabled()) {\n              log.info(\"{} - Committing {}\", getName(), i);\n            }\n            resp = client.commit();\n            assertEquals(0, resp.getStatus());\n          }\n          SolrInputDocument doc = new SolrInputDocument();\n          doc.addField(\"id\", name+i );\n          doc.addField(\"cat\", \"foocat\");\n          docs.add(doc);\n        }\n        resp = client.add(docs);\n        assertEquals(0, resp.getStatus());\n\n        try {\n        resp = client.commit();\n        assertEquals(0, resp.getStatus());\n        resp = client.optimize();\n        assertEquals(0, resp.getStatus());\n        } catch (Exception e) {\n          // a commit/optimize can fail with a too many warming searchers exception\n          if (log.isInfoEnabled()) {\n            log.info(\"Caught benign exception during commit: {}\", e.getMessage());\n          }\n        }\n        if (!(client instanceof EmbeddedSolrServer)) {\n          client.close();\n        }\n\n      } catch (Exception e) {\n        e.printStackTrace();\n        fail( getName() + \"---\" + e.getMessage() );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["c26f00b574427b55127e869b935845554afde1fa"],"6dc613ed6f75d1988140301ee8de8fdb056fa337":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"4c7856260bc28f285ae7bfefa99b28db4dca6daf":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57c238f5fb83803b49b37b3a1a12224a64d47542":["6dc613ed6f75d1988140301ee8de8fdb056fa337"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["4c7856260bc28f285ae7bfefa99b28db4dca6daf"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57c238f5fb83803b49b37b3a1a12224a64d47542"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["4c7856260bc28f285ae7bfefa99b28db4dca6daf"],"6dc613ed6f75d1988140301ee8de8fdb056fa337":["57c238f5fb83803b49b37b3a1a12224a64d47542"],"4c7856260bc28f285ae7bfefa99b28db4dca6daf":["bafca15d8e408346a67f4282ad1143b88023893b"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"57c238f5fb83803b49b37b3a1a12224a64d47542":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["6dc613ed6f75d1988140301ee8de8fdb056fa337"],"bafca15d8e408346a67f4282ad1143b88023893b":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}