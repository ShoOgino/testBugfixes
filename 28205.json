{"path":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/TestGeo3DPoint#randomShape(PlanetModel).mjava","commits":[{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/TestGeo3DPoint#randomShape(PlanetModel).mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/TestGeo3DPointField#randomShape(PlanetModel).mjava","sourceNew":"  // Poached from Geo3dRptTest.randomShape:\n  private static GeoShape randomShape(PlanetModel planetModel) {\n    while (true) {\n      final int shapeType = random().nextInt(4);\n      switch (shapeType) {\n      case 0: {\n        // Polygons\n        final int vertexCount = random().nextInt(3) + 3;\n        final List<GeoPoint> geoPoints = new ArrayList<>();\n        while (geoPoints.size() < vertexCount) {\n          final GeoPoint gPt = new GeoPoint(planetModel, toRadians(randomLat()), toRadians(randomLon()));\n          geoPoints.add(gPt);\n        }\n        final int convexPointIndex = random().nextInt(vertexCount);       //If we get this wrong, hopefully we get IllegalArgumentException\n        try {\n          return GeoPolygonFactory.makeGeoPolygon(planetModel, geoPoints, convexPointIndex);\n        } catch (IllegalArgumentException e) {\n          // This is what happens when we create a shape that is invalid.  Although it is conceivable that there are cases where\n          // the exception is thrown incorrectly, we aren't going to be able to do that in this random test.\n          continue;\n        }\n      }\n\n      case 1: {\n        // Circles\n\n        double lat = toRadians(randomLat());\n        double lon = toRadians(randomLon());\n\n        double angle;\n        if (smallBBox) {\n          angle = random().nextDouble() * Math.PI/360.0;\n        } else {\n          angle = random().nextDouble() * Math.PI/2.0;\n        }\n\n        try {\n          return GeoCircleFactory.makeGeoCircle(planetModel, lat, lon, angle);\n        } catch (IllegalArgumentException iae) {\n          // angle is too small; try again:\n          continue;\n        }\n      }\n\n      case 2: {\n        // Rectangles\n        double lat0 = toRadians(randomLat());\n        double lat1 = toRadians(randomLat());\n        if (lat1 < lat0) {\n          double x = lat0;\n          lat0 = lat1;\n          lat1 = x;\n        }\n        double lon0 = toRadians(randomLon());\n        double lon1 = toRadians(randomLon());\n        if (lon1 < lon0) {\n          double x = lon0;\n          lon0 = lon1;\n          lon1 = x;\n        }\n\n        return GeoBBoxFactory.makeGeoBBox(planetModel, lat1, lat0, lon0, lon1);\n      }\n\n      case 3: {\n        // Paths\n        final int pointCount = random().nextInt(5) + 1;\n        final double width = toRadians(random().nextInt(89)+1);\n        try {\n          final GeoPath path = new GeoPath(planetModel, width);\n          for (int i = 0; i < pointCount; i++) {\n            path.addPoint(toRadians(randomLat()), toRadians(randomLon()));\n          }\n          path.done();\n          return path;\n        } catch (IllegalArgumentException e) {\n          // This is what happens when we create a shape that is invalid.  Although it is conceivable that there are cases where\n          // the exception is thrown incorrectly, we aren't going to be able to do that in this random test.\n          continue;\n        }\n      }\n\n      default:\n        throw new IllegalStateException(\"Unexpected shape type\");\n      }\n    }\n  }\n\n","sourceOld":"  // Poached from Geo3dRptTest.randomShape:\n  private static GeoShape randomShape(PlanetModel planetModel) {\n    while (true) {\n      final int shapeType = random().nextInt(4);\n      switch (shapeType) {\n      case 0: {\n        // Polygons\n        final int vertexCount = random().nextInt(3) + 3;\n        final List<GeoPoint> geoPoints = new ArrayList<>();\n        while (geoPoints.size() < vertexCount) {\n          final GeoPoint gPt = new GeoPoint(planetModel, toRadians(randomLat()), toRadians(randomLon()));\n          geoPoints.add(gPt);\n        }\n        final int convexPointIndex = random().nextInt(vertexCount);       //If we get this wrong, hopefully we get IllegalArgumentException\n        try {\n          return GeoPolygonFactory.makeGeoPolygon(planetModel, geoPoints, convexPointIndex);\n        } catch (IllegalArgumentException e) {\n          // This is what happens when we create a shape that is invalid.  Although it is conceivable that there are cases where\n          // the exception is thrown incorrectly, we aren't going to be able to do that in this random test.\n          continue;\n        }\n      }\n\n      case 1: {\n        // Circles\n\n        double lat = toRadians(randomLat());\n        double lon = toRadians(randomLon());\n\n        double angle;\n        if (smallBBox) {\n          angle = random().nextDouble() * Math.PI/360.0;\n        } else {\n          angle = random().nextDouble() * Math.PI/2.0;\n        }\n\n        try {\n          return GeoCircleFactory.makeGeoCircle(planetModel, lat, lon, angle);\n        } catch (IllegalArgumentException iae) {\n          // angle is too small; try again:\n          continue;\n        }\n      }\n\n      case 2: {\n        // Rectangles\n        double lat0 = toRadians(randomLat());\n        double lat1 = toRadians(randomLat());\n        if (lat1 < lat0) {\n          double x = lat0;\n          lat0 = lat1;\n          lat1 = x;\n        }\n        double lon0 = toRadians(randomLon());\n        double lon1 = toRadians(randomLon());\n        if (lon1 < lon0) {\n          double x = lon0;\n          lon0 = lon1;\n          lon1 = x;\n        }\n\n        return GeoBBoxFactory.makeGeoBBox(planetModel, lat1, lat0, lon0, lon1);\n      }\n\n      case 3: {\n        // Paths\n        final int pointCount = random().nextInt(5) + 1;\n        final double width = toRadians(random().nextInt(89)+1);\n        try {\n          final GeoPath path = new GeoPath(planetModel, width);\n          for (int i = 0; i < pointCount; i++) {\n            path.addPoint(toRadians(randomLat()), toRadians(randomLon()));\n          }\n          path.done();\n          return path;\n        } catch (IllegalArgumentException e) {\n          // This is what happens when we create a shape that is invalid.  Although it is conceivable that there are cases where\n          // the exception is thrown incorrectly, we aren't going to be able to do that in this random test.\n          continue;\n        }\n      }\n\n      default:\n        throw new IllegalStateException(\"Unexpected shape type\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#randomShape(PlanetModel).mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/TestGeo3DPoint#randomShape(PlanetModel).mjava","sourceNew":"  // Poached from Geo3dRptTest.randomShape:\n  private static GeoShape randomShape(PlanetModel planetModel) {\n    while (true) {\n      final int shapeType = random().nextInt(4);\n      switch (shapeType) {\n      case 0: {\n        // Polygons\n        final int vertexCount = random().nextInt(3) + 3;\n        final List<GeoPoint> geoPoints = new ArrayList<>();\n        while (geoPoints.size() < vertexCount) {\n          final GeoPoint gPt = new GeoPoint(planetModel, toRadians(randomLat()), toRadians(randomLon()));\n          geoPoints.add(gPt);\n        }\n        final int convexPointIndex = random().nextInt(vertexCount);       //If we get this wrong, hopefully we get IllegalArgumentException\n        try {\n          return GeoPolygonFactory.makeGeoPolygon(planetModel, geoPoints, convexPointIndex);\n        } catch (IllegalArgumentException e) {\n          // This is what happens when we create a shape that is invalid.  Although it is conceivable that there are cases where\n          // the exception is thrown incorrectly, we aren't going to be able to do that in this random test.\n          continue;\n        }\n      }\n\n      case 1: {\n        // Circles\n\n        double lat = toRadians(randomLat());\n        double lon = toRadians(randomLon());\n\n        double angle;\n        if (smallBBox) {\n          angle = random().nextDouble() * Math.PI/360.0;\n        } else {\n          angle = random().nextDouble() * Math.PI/2.0;\n        }\n\n        try {\n          return GeoCircleFactory.makeGeoCircle(planetModel, lat, lon, angle);\n        } catch (IllegalArgumentException iae) {\n          // angle is too small; try again:\n          continue;\n        }\n      }\n\n      case 2: {\n        // Rectangles\n        double lat0 = toRadians(randomLat());\n        double lat1 = toRadians(randomLat());\n        if (lat1 < lat0) {\n          double x = lat0;\n          lat0 = lat1;\n          lat1 = x;\n        }\n        double lon0 = toRadians(randomLon());\n        double lon1 = toRadians(randomLon());\n        if (lon1 < lon0) {\n          double x = lon0;\n          lon0 = lon1;\n          lon1 = x;\n        }\n\n        return GeoBBoxFactory.makeGeoBBox(planetModel, lat1, lat0, lon0, lon1);\n      }\n\n      case 3: {\n        // Paths\n        final int pointCount = random().nextInt(5) + 1;\n        final double width = toRadians(random().nextInt(89)+1);\n        try {\n          final GeoPath path = new GeoPath(planetModel, width);\n          for (int i = 0; i < pointCount; i++) {\n            path.addPoint(toRadians(randomLat()), toRadians(randomLon()));\n          }\n          path.done();\n          return path;\n        } catch (IllegalArgumentException e) {\n          // This is what happens when we create a shape that is invalid.  Although it is conceivable that there are cases where\n          // the exception is thrown incorrectly, we aren't going to be able to do that in this random test.\n          continue;\n        }\n      }\n\n      default:\n        throw new IllegalStateException(\"Unexpected shape type\");\n      }\n    }\n  }\n\n","sourceOld":"  // Poached from Geo3dRptTest.randomShape:\n  private static GeoShape randomShape(PlanetModel planetModel) {\n    while (true) {\n      final int shapeType = random().nextInt(4);\n      switch (shapeType) {\n      case 0: {\n        // Polygons\n        final int vertexCount = random().nextInt(3) + 3;\n        final List<GeoPoint> geoPoints = new ArrayList<>();\n        while (geoPoints.size() < vertexCount) {\n          final GeoPoint gPt = new GeoPoint(planetModel, toRadians(randomLat()), toRadians(randomLon()));\n          geoPoints.add(gPt);\n        }\n        final int convexPointIndex = random().nextInt(vertexCount);       //If we get this wrong, hopefully we get IllegalArgumentException\n        try {\n          return GeoPolygonFactory.makeGeoPolygon(planetModel, geoPoints, convexPointIndex);\n        } catch (IllegalArgumentException e) {\n          // This is what happens when we create a shape that is invalid.  Although it is conceivable that there are cases where\n          // the exception is thrown incorrectly, we aren't going to be able to do that in this random test.\n          continue;\n        }\n      }\n\n      case 1: {\n        // Circles\n\n        double lat = toRadians(randomLat());\n        double lon = toRadians(randomLon());\n\n        double angle;\n        if (smallBBox) {\n          angle = random().nextDouble() * Math.PI/360.0;\n        } else {\n          angle = random().nextDouble() * Math.PI/2.0;\n        }\n\n        try {\n          return GeoCircleFactory.makeGeoCircle(planetModel, lat, lon, angle);\n        } catch (IllegalArgumentException iae) {\n          // angle is too small; try again:\n          continue;\n        }\n      }\n\n      case 2: {\n        // Rectangles\n        double lat0 = toRadians(randomLat());\n        double lat1 = toRadians(randomLat());\n        if (lat1 < lat0) {\n          double x = lat0;\n          lat0 = lat1;\n          lat1 = x;\n        }\n        double lon0 = toRadians(randomLon());\n        double lon1 = toRadians(randomLon());\n        if (lon1 < lon0) {\n          double x = lon0;\n          lon0 = lon1;\n          lon1 = x;\n        }\n\n        return GeoBBoxFactory.makeGeoBBox(planetModel, lat1, lat0, lon0, lon1);\n      }\n\n      case 3: {\n        // Paths\n        final int pointCount = random().nextInt(5) + 1;\n        final double width = toRadians(random().nextInt(89)+1);\n        try {\n          final GeoPath path = new GeoPath(planetModel, width);\n          for (int i = 0; i < pointCount; i++) {\n            path.addPoint(toRadians(randomLat()), toRadians(randomLon()));\n          }\n          path.done();\n          return path;\n        } catch (IllegalArgumentException e) {\n          // This is what happens when we create a shape that is invalid.  Although it is conceivable that there are cases where\n          // the exception is thrown incorrectly, we aren't going to be able to do that in this random test.\n          continue;\n        }\n      }\n\n      default:\n        throw new IllegalStateException(\"Unexpected shape type\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b4e444678504caf66a8060b1d514383aa4feac0c":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b4e444678504caf66a8060b1d514383aa4feac0c"]},"commit2Childs":{"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["b4e444678504caf66a8060b1d514383aa4feac0c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"b4e444678504caf66a8060b1d514383aa4feac0c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}