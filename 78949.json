{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SortedMapBackedCache#iterator().mjava","commits":[{"id":"3337b86edd36607f0208321f1deee79c55e5fd21","date":1321266471,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SortedMapBackedCache#iterator().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Iterator<Map<String,Object>> iterator() {\n    return new Iterator<Map<String, Object>>() {\n        private Iterator<Map.Entry<Object,List<Map<String,Object>>>> theMapIter;\n        private List<Map<String,Object>> currentKeyResult = null;\n        private Iterator<Map<String,Object>> currentKeyResultIter = null;\n\n        {\n            theMapIter = theMap.entrySet().iterator();\n        }\n\n        @Override\n        public boolean hasNext() {\n          if (currentKeyResultIter != null) {\n            if (currentKeyResultIter.hasNext()) {\n              return true;\n            } else {\n              currentKeyResult = null;\n              currentKeyResultIter = null;\n            }\n          }\n\n          Map.Entry<Object,List<Map<String,Object>>> next = null;\n          if (theMapIter.hasNext()) {\n            next = theMapIter.next();\n            currentKeyResult = next.getValue();\n            currentKeyResultIter = currentKeyResult.iterator();\n            if (currentKeyResultIter.hasNext()) {\n              return true;\n            }\n          }\n          return false;\n        }\n\n        @Override\n        public Map<String,Object> next() {\n          if (currentKeyResultIter != null) {\n            if (currentKeyResultIter.hasNext()) {\n              return currentKeyResultIter.next();\n            } else {\n              currentKeyResult = null;\n              currentKeyResultIter = null;\n            }\n          }\n\n          Map.Entry<Object,List<Map<String,Object>>> next = null;\n          if (theMapIter.hasNext()) {\n            next = theMapIter.next();\n            currentKeyResult = next.getValue();\n            currentKeyResultIter = currentKeyResult.iterator();\n            if (currentKeyResultIter.hasNext()) {\n              return currentKeyResultIter.next();\n            }\n          }\n          return null;\n        }\n\n        @Override\n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/SortedMapBackedCache#iterator().mjava","sourceNew":null,"sourceOld":"  @Override\n  public Iterator<Map<String,Object>> iterator() {\n    return new Iterator<Map<String, Object>>() {\n        private Iterator<Map.Entry<Object,List<Map<String,Object>>>> theMapIter;\n        private List<Map<String,Object>> currentKeyResult = null;\n        private Iterator<Map<String,Object>> currentKeyResultIter = null;\n\n        {\n            theMapIter = theMap.entrySet().iterator();\n        }\n\n        @Override\n        public boolean hasNext() {\n          if (currentKeyResultIter != null) {\n            if (currentKeyResultIter.hasNext()) {\n              return true;\n            } else {\n              currentKeyResult = null;\n              currentKeyResultIter = null;\n            }\n          }\n\n          Map.Entry<Object,List<Map<String,Object>>> next = null;\n          if (theMapIter.hasNext()) {\n            next = theMapIter.next();\n            currentKeyResult = next.getValue();\n            currentKeyResultIter = currentKeyResult.iterator();\n            if (currentKeyResultIter.hasNext()) {\n              return true;\n            }\n          }\n          return false;\n        }\n\n        @Override\n        public Map<String,Object> next() {\n          if (currentKeyResultIter != null) {\n            if (currentKeyResultIter.hasNext()) {\n              return currentKeyResultIter.next();\n            } else {\n              currentKeyResult = null;\n              currentKeyResultIter = null;\n            }\n          }\n\n          Map.Entry<Object,List<Map<String,Object>>> next = null;\n          if (theMapIter.hasNext()) {\n            next = theMapIter.next();\n            currentKeyResult = next.getValue();\n            currentKeyResultIter = currentKeyResult.iterator();\n            if (currentKeyResultIter.hasNext()) {\n              return currentKeyResultIter.next();\n            }\n          }\n          return null;\n        }\n\n        @Override\n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["3337b86edd36607f0208321f1deee79c55e5fd21"],"3337b86edd36607f0208321f1deee79c55e5fd21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3337b86edd36607f0208321f1deee79c55e5fd21":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3337b86edd36607f0208321f1deee79c55e5fd21"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}