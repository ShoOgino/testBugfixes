{"path":"contrib/queryparser/src/test/org/apache/lucene/queryParser/core/nodes/TestQueryNode#testAddChildren().mjava","commits":[{"id":"4f41f2e3938dc57fe85cb22cb340ef3164e86cb9","date":1267915287,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/core/nodes/TestQueryNode#testAddChildren().mjava","pathOld":"/dev/null","sourceNew":"  /* LUCENE-2227 bug in QueryNodeImpl.add() */\n  public void testAddChildren() throws Exception {\n    FieldQueryNode nodeA = new FieldQueryNode(\"foo\", \"A\", 0, 1);\n    FieldQueryNode nodeB = new FieldQueryNode(\"foo\", \"B\", 1, 2);\n    BooleanQueryNode bq = new BooleanQueryNode(\n        Arrays.asList(new QueryNode[] { nodeA }));\n    bq.add(Arrays.asList(new QueryNode[] { nodeB }));\n    assertEquals(2, bq.getChildren().size());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/core/nodes/TestQueryNode#testAddChildren().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/core/nodes/TestQueryNode#testAddChildren().mjava","sourceNew":"  /* LUCENE-2227 bug in QueryNodeImpl.add() */\n  public void testAddChildren() throws Exception {\n    FieldQueryNode nodeA = new FieldQueryNode(\"foo\", \"A\", 0, 1);\n    FieldQueryNode nodeB = new FieldQueryNode(\"foo\", \"B\", 1, 2);\n    BooleanQueryNode bq = new BooleanQueryNode(\n        Arrays.asList(new QueryNode[] { nodeA }));\n    bq.add(Arrays.asList(new QueryNode[] { nodeB }));\n    assertEquals(2, bq.getChildren().size());\n  }\n\n","sourceOld":"  /* LUCENE-2227 bug in QueryNodeImpl.add() */\n  public void testAddChildren() throws Exception {\n    FieldQueryNode nodeA = new FieldQueryNode(\"foo\", \"A\", 0, 1);\n    FieldQueryNode nodeB = new FieldQueryNode(\"foo\", \"B\", 1, 2);\n    BooleanQueryNode bq = new BooleanQueryNode(\n        Arrays.asList(new QueryNode[] { nodeA }));\n    bq.add(Arrays.asList(new QueryNode[] { nodeB }));\n    assertEquals(2, bq.getChildren().size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4f41f2e3938dc57fe85cb22cb340ef3164e86cb9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4f41f2e3938dc57fe85cb22cb340ef3164e86cb9"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4f41f2e3938dc57fe85cb22cb340ef3164e86cb9"],"4f41f2e3938dc57fe85cb22cb340ef3164e86cb9":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}