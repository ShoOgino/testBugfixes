{"path":"lucene/core/src/java/org/apache/lucene/util/CharsRef#copyChars(CharsRef).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/CharsRef#copyChars(CharsRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/CharsRef#copyChars(CharsRef).mjava","sourceNew":"  /**\n   * Copies the given {@link CharsRef} referenced content into this instance\n   * starting at offset 0.\n   * \n   * @param other\n   *          the {@link CharsRef} to copy\n   */\n  // TODO: why does this behave differently/not invoke copyChars(char[], int, int) ???\n  public void copyChars(CharsRef other) {\n    if (chars == null) {\n      chars = new char[other.length];\n    } else {\n      chars = ArrayUtil.grow(chars, other.length);\n    }\n    System.arraycopy(other.chars, other.offset, chars, 0, other.length);\n    length = other.length;\n    offset = 0;\n  }\n\n","sourceOld":"  /**\n   * Copies the given {@link CharsRef} referenced content into this instance\n   * starting at offset 0.\n   * \n   * @param other\n   *          the {@link CharsRef} to copy\n   */\n  // TODO: why does this behave differently/not invoke copyChars(char[], int, int) ???\n  public void copyChars(CharsRef other) {\n    if (chars == null) {\n      chars = new char[other.length];\n    } else {\n      chars = ArrayUtil.grow(chars, other.length);\n    }\n    System.arraycopy(other.chars, other.offset, chars, 0, other.length);\n    length = other.length;\n    offset = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57","date":1338306244,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/CharsRef#copyChars(CharsRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/CharsRef#copyChars(CharsRef).mjava","sourceNew":"  /**\n   * Copies the given {@link CharsRef} referenced content into this instance.\n   * \n   * @param other\n   *          the {@link CharsRef} to copy\n   */\n  public void copyChars(CharsRef other) {\n    copyChars(other.chars, other.offset, other.length);\n  }\n\n","sourceOld":"  /**\n   * Copies the given {@link CharsRef} referenced content into this instance\n   * starting at offset 0.\n   * \n   * @param other\n   *          the {@link CharsRef} to copy\n   */\n  // TODO: why does this behave differently/not invoke copyChars(char[], int, int) ???\n  public void copyChars(CharsRef other) {\n    if (chars == null) {\n      chars = new char[other.length];\n    } else {\n      chars = ArrayUtil.grow(chars, other.length);\n    }\n    System.arraycopy(other.chars, other.offset, chars, 0, other.length);\n    length = other.length;\n    offset = 0;\n  }\n\n","bugFix":["e6e919043fa85ee891123768dd655a98edbbf63c","44d6f0ab53c1962856b9f48dedb7a2a6cc18905c","a1b3a24d5d9b47345473ff564f5cc127a7b526b4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/CharsRefBuilder#copyChars(CharsRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/CharsRef#copyChars(CharsRef).mjava","sourceNew":"  /**\n   * Copies the given {@link CharsRef} referenced content into this instance.\n   */\n  public void copyChars(CharsRef other) {\n    copyChars(other.chars, other.offset, other.length);\n  }\n\n","sourceOld":"  /**\n   * Copies the given {@link CharsRef} referenced content into this instance.\n   * \n   * @param other\n   *          the {@link CharsRef} to copy\n   */\n  public void copyChars(CharsRef other) {\n    copyChars(other.chars, other.offset, other.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57"],"ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}