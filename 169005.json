{"path":"solr/core/src/test/org/apache/solr/util/SimplePostToolTest#testParseArgsAndInit().mjava","commits":[{"id":"c2c3a504730329ae644b009dee43024116605d47","date":1345253449,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/SimplePostToolTest#testParseArgsAndInit().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testParseArgsAndInit() {\n    assertEquals(false, t_file.auto);\n    assertEquals(true, t_file_auto.auto);\n    assertEquals(0, t_file_auto.recursive);\n    assertEquals(999, t_file_rec.recursive);\n    assertEquals(true, t_file.commit);\n    assertEquals(false, t_file.optimize);\n    assertEquals(null, t_file.out);\n\n    assertEquals(1, t_web.recursive);\n    assertEquals(10, t_web.delay);\n    \n    assertNotNull(t_test.solrUrl);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a57a7f5c2a6c4358d4e71c6eb262472e33c21661"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"70fa1c0f4d75735ff2e1485e059d9bc5efa50598","date":1345296911,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/SimplePostToolTest#testParseArgsAndInit().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testParseArgsAndInit() {\n    assertEquals(false, t_file.auto);\n    assertEquals(true, t_file_auto.auto);\n    assertEquals(0, t_file_auto.recursive);\n    assertEquals(999, t_file_rec.recursive);\n    assertEquals(true, t_file.commit);\n    assertEquals(false, t_file.optimize);\n    assertEquals(null, t_file.out);\n\n    assertEquals(1, t_web.recursive);\n    assertEquals(10, t_web.delay);\n    \n    assertNotNull(t_test.solrUrl);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"616c1830142ff5c1ddedec1ed898733b73c8e23b","date":1345368925,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/SimplePostToolTest#testParseArgsAndInit().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testParseArgsAndInit() {\n    assertEquals(false, t_file.auto);\n    assertEquals(true, t_file_auto.auto);\n    assertEquals(0, t_file_auto.recursive);\n    assertEquals(999, t_file_rec.recursive);\n    assertEquals(true, t_file.commit);\n    assertEquals(false, t_file.optimize);\n    assertEquals(null, t_file.out);\n\n    assertEquals(1, t_web.recursive);\n    assertEquals(10, t_web.delay);\n    \n    assertNotNull(t_test.solrUrl);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a57a7f5c2a6c4358d4e71c6eb262472e33c21661","date":1358134270,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/SimplePostToolTest#testParseArgsAndInit().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/SimplePostToolTest#testParseArgsAndInit().mjava","sourceNew":"  @Test\n  public void testParseArgsAndInit() {\n    assertEquals(false, t_file.auto);\n    assertEquals(true, t_file_auto.auto);\n    assertEquals(0, t_file_auto.recursive);\n    assertEquals(999, t_file_rec.recursive);\n    assertEquals(true, t_file.commit);\n    assertEquals(false, t_file.optimize);\n    assertEquals(null, t_file.out);\n\n    assertEquals(1, t_web.recursive);\n    assertEquals(10, t_web.delay);\n    \n    assertEquals(\"http://localhost:5150/solr/update?param1=foo&param2=bar\",t_test.solrUrl.toExternalForm());\n  }\n\n","sourceOld":"  @Test\n  public void testParseArgsAndInit() {\n    assertEquals(false, t_file.auto);\n    assertEquals(true, t_file_auto.auto);\n    assertEquals(0, t_file_auto.recursive);\n    assertEquals(999, t_file_rec.recursive);\n    assertEquals(true, t_file.commit);\n    assertEquals(false, t_file.optimize);\n    assertEquals(null, t_file.out);\n\n    assertEquals(1, t_web.recursive);\n    assertEquals(10, t_web.delay);\n    \n    assertNotNull(t_test.solrUrl);\n  }\n\n","bugFix":["c2c3a504730329ae644b009dee43024116605d47"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/SimplePostToolTest#testParseArgsAndInit().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/SimplePostToolTest#testParseArgsAndInit().mjava","sourceNew":"  @Test\n  public void testParseArgsAndInit() {\n    assertEquals(false, t_file.auto);\n    assertEquals(true, t_file_auto.auto);\n    assertEquals(0, t_file_auto.recursive);\n    assertEquals(999, t_file_rec.recursive);\n    assertEquals(true, t_file.commit);\n    assertEquals(false, t_file.optimize);\n    assertEquals(null, t_file.out);\n\n    assertEquals(1, t_web.recursive);\n    assertEquals(10, t_web.delay);\n    \n    assertEquals(\"http://localhost:5150/solr/update?param1=foo&param2=bar\",t_test.solrUrl.toExternalForm());\n  }\n\n","sourceOld":"  @Test\n  public void testParseArgsAndInit() {\n    assertEquals(false, t_file.auto);\n    assertEquals(true, t_file_auto.auto);\n    assertEquals(0, t_file_auto.recursive);\n    assertEquals(999, t_file_rec.recursive);\n    assertEquals(true, t_file.commit);\n    assertEquals(false, t_file.optimize);\n    assertEquals(null, t_file.out);\n\n    assertEquals(1, t_web.recursive);\n    assertEquals(10, t_web.delay);\n    \n    assertNotNull(t_test.solrUrl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"01b8fc5bcd71df6f67aff7ec5c95db9f2458c78c","date":1396698402,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/SimplePostToolTest#testParseArgsAndInit().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/SimplePostToolTest#testParseArgsAndInit().mjava","sourceNew":"  @Test\n  public void testParseArgsAndInit() {\n    assertEquals(false, t_file.auto);\n    assertEquals(true, t_file_auto.auto);\n    assertEquals(0, t_file_auto.recursive);\n    assertEquals(999, t_file_rec.recursive);\n    assertEquals(true, t_file.commit);\n    assertEquals(false, t_file.optimize);\n    assertEquals(null, t_file.out);\n\n    assertEquals(1, t_web.recursive);\n    assertEquals(10, t_web.delay);\n    \n    assertEquals(\"http://user:password@localhost:5150/solr/update?param1=foo&param2=bar\",t_test.solrUrl.toExternalForm());\n  }\n\n","sourceOld":"  @Test\n  public void testParseArgsAndInit() {\n    assertEquals(false, t_file.auto);\n    assertEquals(true, t_file_auto.auto);\n    assertEquals(0, t_file_auto.recursive);\n    assertEquals(999, t_file_rec.recursive);\n    assertEquals(true, t_file.commit);\n    assertEquals(false, t_file.optimize);\n    assertEquals(null, t_file.out);\n\n    assertEquals(1, t_web.recursive);\n    assertEquals(10, t_web.delay);\n    \n    assertEquals(\"http://localhost:5150/solr/update?param1=foo&param2=bar\",t_test.solrUrl.toExternalForm());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"616c1830142ff5c1ddedec1ed898733b73c8e23b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c2c3a504730329ae644b009dee43024116605d47"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["c2c3a504730329ae644b009dee43024116605d47","a57a7f5c2a6c4358d4e71c6eb262472e33c21661"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c2c3a504730329ae644b009dee43024116605d47"],"a57a7f5c2a6c4358d4e71c6eb262472e33c21661":["c2c3a504730329ae644b009dee43024116605d47"],"c2c3a504730329ae644b009dee43024116605d47":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["01b8fc5bcd71df6f67aff7ec5c95db9f2458c78c"],"01b8fc5bcd71df6f67aff7ec5c95db9f2458c78c":["a57a7f5c2a6c4358d4e71c6eb262472e33c21661"]},"commit2Childs":{"616c1830142ff5c1ddedec1ed898733b73c8e23b":[],"8917bfede3b4ca30f4305c1e391e9218959cd723":[],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","c2c3a504730329ae644b009dee43024116605d47"],"c2c3a504730329ae644b009dee43024116605d47":["616c1830142ff5c1ddedec1ed898733b73c8e23b","8917bfede3b4ca30f4305c1e391e9218959cd723","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","a57a7f5c2a6c4358d4e71c6eb262472e33c21661"],"a57a7f5c2a6c4358d4e71c6eb262472e33c21661":["8917bfede3b4ca30f4305c1e391e9218959cd723","01b8fc5bcd71df6f67aff7ec5c95db9f2458c78c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"01b8fc5bcd71df6f67aff7ec5c95db9f2458c78c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["616c1830142ff5c1ddedec1ed898733b73c8e23b","8917bfede3b4ca30f4305c1e391e9218959cd723","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}