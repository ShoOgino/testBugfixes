{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","commits":[{"id":"29a18ef0e63118ffdd0b5a1f2e8781c9d72323d5","date":1358867305,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","pathOld":"/dev/null","sourceNew":"  private static DocValuesType getDocValuesType(IndexInput input, byte b) throws IOException {\n    if (b == 0) {\n      return null;\n    } else if (b == 1) {\n      return DocValuesType.NUMERIC;\n    } else if (b == 2) {\n      return DocValuesType.BINARY;\n    } else if (b == 3) {\n      return DocValuesType.SORTED;\n    } else {\n      throw new CorruptIndexException(\"invalid docvalues byte: \" + b + \" (resource=\" + input + \")\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["9a70ce9bddc6f985feb8e5e182aebe20872328d4","9a70ce9bddc6f985feb8e5e182aebe20872328d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","pathOld":"/dev/null","sourceNew":"  private static DocValuesType getDocValuesType(IndexInput input, byte b) throws IOException {\n    if (b == 0) {\n      return null;\n    } else if (b == 1) {\n      return DocValuesType.NUMERIC;\n    } else if (b == 2) {\n      return DocValuesType.BINARY;\n    } else if (b == 3) {\n      return DocValuesType.SORTED;\n    } else {\n      throw new CorruptIndexException(\"invalid docvalues byte: \" + b + \" (resource=\" + input + \")\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f366ce28775e2b8ea4e06355009471328711666d","date":1360551293,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","sourceNew":"  private static DocValuesType getDocValuesType(IndexInput input, byte b) throws IOException {\n    if (b == 0) {\n      return null;\n    } else if (b == 1) {\n      return DocValuesType.NUMERIC;\n    } else if (b == 2) {\n      return DocValuesType.BINARY;\n    } else if (b == 3) {\n      return DocValuesType.SORTED;\n    } else if (b == 4) {\n      return DocValuesType.SORTED_SET;\n    } else {\n      throw new CorruptIndexException(\"invalid docvalues byte: \" + b + \" (resource=\" + input + \")\");\n    }\n  }\n\n","sourceOld":"  private static DocValuesType getDocValuesType(IndexInput input, byte b) throws IOException {\n    if (b == 0) {\n      return null;\n    } else if (b == 1) {\n      return DocValuesType.NUMERIC;\n    } else if (b == 2) {\n      return DocValuesType.BINARY;\n    } else if (b == 3) {\n      return DocValuesType.SORTED;\n    } else {\n      throw new CorruptIndexException(\"invalid docvalues byte: \" + b + \" (resource=\" + input + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ddbb72a33557d2b5bc22ee95daf3281c43560502","date":1361334582,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","sourceNew":"  private static DocValuesType getDocValuesType(IndexInput input, byte b) throws IOException {\n    if (b == 0) {\n      return null;\n    } else if (b == 1) {\n      return DocValuesType.NUMERIC;\n    } else if (b == 2) {\n      return DocValuesType.BINARY;\n    } else if (b == 3) {\n      return DocValuesType.SORTED;\n    } else if (b == 4) {\n      return DocValuesType.SORTED_SET;\n    } else {\n      throw new CorruptIndexException(\"invalid docvalues byte: \" + b + \" (resource=\" + input + \")\");\n    }\n  }\n\n","sourceOld":"  private static DocValuesType getDocValuesType(IndexInput input, byte b) throws IOException {\n    if (b == 0) {\n      return null;\n    } else if (b == 1) {\n      return DocValuesType.NUMERIC;\n    } else if (b == 2) {\n      return DocValuesType.BINARY;\n    } else if (b == 3) {\n      return DocValuesType.SORTED;\n    } else {\n      throw new CorruptIndexException(\"invalid docvalues byte: \" + b + \" (resource=\" + input + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene42/Lucene42FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","sourceNew":"  private static DocValuesType getDocValuesType(IndexInput input, byte b) throws IOException {\n    if (b == 0) {\n      return null;\n    } else if (b == 1) {\n      return DocValuesType.NUMERIC;\n    } else if (b == 2) {\n      return DocValuesType.BINARY;\n    } else if (b == 3) {\n      return DocValuesType.SORTED;\n    } else if (b == 4) {\n      return DocValuesType.SORTED_SET;\n    } else {\n      throw new CorruptIndexException(\"invalid docvalues byte: \" + b + \" (resource=\" + input + \")\");\n    }\n  }\n\n","sourceOld":"  private static DocValuesType getDocValuesType(IndexInput input, byte b) throws IOException {\n    if (b == 0) {\n      return null;\n    } else if (b == 1) {\n      return DocValuesType.NUMERIC;\n    } else if (b == 2) {\n      return DocValuesType.BINARY;\n    } else if (b == 3) {\n      return DocValuesType.SORTED;\n    } else if (b == 4) {\n      return DocValuesType.SORTED_SET;\n    } else {\n      throw new CorruptIndexException(\"invalid docvalues byte: \" + b + \" (resource=\" + input + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene42/Lucene42FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42FieldInfosReader#getDocValuesType(IndexInput,byte).mjava","sourceNew":"  private static DocValuesType getDocValuesType(IndexInput input, byte b) throws IOException {\n    if (b == 0) {\n      return null;\n    } else if (b == 1) {\n      return DocValuesType.NUMERIC;\n    } else if (b == 2) {\n      return DocValuesType.BINARY;\n    } else if (b == 3) {\n      return DocValuesType.SORTED;\n    } else if (b == 4) {\n      return DocValuesType.SORTED_SET;\n    } else {\n      throw new CorruptIndexException(\"invalid docvalues byte: \" + b + \" (resource=\" + input + \")\");\n    }\n  }\n\n","sourceOld":"  private static DocValuesType getDocValuesType(IndexInput input, byte b) throws IOException {\n    if (b == 0) {\n      return null;\n    } else if (b == 1) {\n      return DocValuesType.NUMERIC;\n    } else if (b == 2) {\n      return DocValuesType.BINARY;\n    } else if (b == 3) {\n      return DocValuesType.SORTED;\n    } else if (b == 4) {\n      return DocValuesType.SORTED_SET;\n    } else {\n      throw new CorruptIndexException(\"invalid docvalues byte: \" + b + \" (resource=\" + input + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","29a18ef0e63118ffdd0b5a1f2e8781c9d72323d5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"f366ce28775e2b8ea4e06355009471328711666d":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["d4d69c535930b5cce125cff868d40f6373dc27d4","f366ce28775e2b8ea4e06355009471328711666d"],"29a18ef0e63118ffdd0b5a1f2e8781c9d72323d5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["ddbb72a33557d2b5bc22ee95daf3281c43560502","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["f366ce28775e2b8ea4e06355009471328711666d","ddbb72a33557d2b5bc22ee95daf3281c43560502"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","29a18ef0e63118ffdd0b5a1f2e8781c9d72323d5"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"f366ce28775e2b8ea4e06355009471328711666d":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"29a18ef0e63118ffdd0b5a1f2e8781c9d72323d5":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}