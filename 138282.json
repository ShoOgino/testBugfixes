{"path":"lucene/core/src/java/org/apache/lucene/index/LeafReader#addCoreClosedListenerAsReaderClosedListener(IndexReader,CoreClosedListener).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/LeafReader#addCoreClosedListenerAsReaderClosedListener(IndexReader,CoreClosedListener).mjava","pathOld":"/dev/null","sourceNew":"  /** Add a {@link CoreClosedListener} as a {@link ReaderClosedListener}. This\n   * method is typically useful for {@link LeafReader} implementations that\n   * don't have the concept of a core that is shared across several\n   * {@link LeafReader} instances in which case the {@link CoreClosedListener}\n   * is called when closing the reader. */\n  protected static void addCoreClosedListenerAsReaderClosedListener(IndexReader reader, CoreClosedListener listener) {\n    reader.addReaderClosedListener(new CoreClosedListenerWrapper(listener));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d211216c83f01894810543d1c107160a9ae3650b","date":1488289605,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/LeafReader#addCoreClosedListenerAsReaderClosedListener(IndexReader,CoreClosedListener).mjava","sourceNew":null,"sourceOld":"  /** Add a {@link CoreClosedListener} as a {@link ReaderClosedListener}. This\n   * method is typically useful for {@link LeafReader} implementations that\n   * don't have the concept of a core that is shared across several\n   * {@link LeafReader} instances in which case the {@link CoreClosedListener}\n   * is called when closing the reader. */\n  protected static void addCoreClosedListenerAsReaderClosedListener(IndexReader reader, CoreClosedListener listener) {\n    reader.addReaderClosedListener(new CoreClosedListenerWrapper(listener));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d211216c83f01894810543d1c107160a9ae3650b":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d211216c83f01894810543d1c107160a9ae3650b"]},"commit2Childs":{"d211216c83f01894810543d1c107160a9ae3650b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["d211216c83f01894810543d1c107160a9ae3650b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}