{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","pathOld":"modules/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","sourceNew":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new Field(\"id\", data.id, StringField.TYPE_STORED));\n      document.add(new Field(\"name\", data.name, StringField.TYPE_STORED));\n      Shape shape = ctx.readShape(data.shape);\n      for (IndexableField f : strategy.createFields(fieldInfo, shape, true, storeShape)) {\n        if( f != null ) { // null if incompatibleGeometry && ignore\n          document.add(f);\n        }\n      }\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","sourceOld":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new Field(\"id\", data.id, StringField.TYPE_STORED));\n      document.add(new Field(\"name\", data.name, StringField.TYPE_STORED));\n      Shape shape = ctx.readShape(data.shape);\n      for (IndexableField f : strategy.createFields(fieldInfo, shape, true, storeShape)) {\n        if( f != null ) { // null if incompatibleGeometry && ignore\n          document.add(f);\n        }\n      }\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","sourceNew":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      for (IndexableField f : strategy.createFields(fieldInfo, shape, true, storeShape)) {\n        if( f != null ) { // null if incompatibleGeometry && ignore\n          document.add(f);\n        }\n      }\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","sourceOld":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new Field(\"id\", data.id, StringField.TYPE_STORED));\n      document.add(new Field(\"name\", data.name, StringField.TYPE_STORED));\n      Shape shape = ctx.readShape(data.shape);\n      for (IndexableField f : strategy.createFields(fieldInfo, shape, true, storeShape)) {\n        if( f != null ) { // null if incompatibleGeometry && ignore\n          document.add(f);\n        }\n      }\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","bugFix":["b17c5c53627893d93f9261826cc6d9c447c5ee3a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0415a016b37e58a017fed0a91234f733ab359971","date":1341458183,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","sourceNew":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      for (IndexableField f : strategy.createFields(shape, true, storeShape)) {\n        if( f != null ) { // null if incompatibleGeometry && ignore\n          document.add(f);\n        }\n      }\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","sourceOld":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      for (IndexableField f : strategy.createFields(fieldInfo, shape, true, storeShape)) {\n        if( f != null ) { // null if incompatibleGeometry && ignore\n          document.add(f);\n        }\n      }\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"399d569d88e65d963440cdd3a3e2d5f7cdd1bd42","date":1341987627,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","sourceNew":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      for (IndexableField f : strategy.createFields(shape)) {\n        if( f != null ) { // null if incompatibleGeometry && ignore\n          document.add(f);\n        }\n      }\n      if (storeShape)\n        document.add(strategy.createStoredField(shape));\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","sourceOld":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      for (IndexableField f : strategy.createFields(shape, true, storeShape)) {\n        if( f != null ) { // null if incompatibleGeometry && ignore\n          document.add(f);\n        }\n      }\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","bugFix":null,"bugIntro":["d5e3943824e0add7b904817b2028f6f5d83179ec","df0750324176e07de4ead8572b1b011a640f4635"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"df0750324176e07de4ead8572b1b011a640f4635","date":1341988119,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","sourceNew":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      for (IndexableField f : strategy.createFields(shape)) {\n        if( f != null ) { // null if incompatibleGeometry && ignore\n          document.add(f);\n        }\n      }\n      if (storeShape)\n        document.add(new StoredField(strategy.getFieldName(), ctx.toString(shape)));\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","sourceOld":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      for (IndexableField f : strategy.createFields(shape)) {\n        if( f != null ) { // null if incompatibleGeometry && ignore\n          document.add(f);\n        }\n      }\n      if (storeShape)\n        document.add(strategy.createStoredField(shape));\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","bugFix":["399d569d88e65d963440cdd3a3e2d5f7cdd1bd42"],"bugIntro":["d5e3943824e0add7b904817b2028f6f5d83179ec"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"42ea82a615127d578d4d21a6743834c45fa10468","date":1342101990,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","sourceNew":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      for (IndexableField f : strategy.createIndexableFields(shape)) {\n        document.add(f);\n      }\n      if (storeShape)\n        document.add(new StoredField(strategy.getFieldName(), ctx.toString(shape)));\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","sourceOld":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      for (IndexableField f : strategy.createFields(shape)) {\n        if( f != null ) { // null if incompatibleGeometry && ignore\n          document.add(f);\n        }\n      }\n      if (storeShape)\n        document.add(new StoredField(strategy.getFieldName(), ctx.toString(shape)));\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","bugFix":null,"bugIntro":["d5e3943824e0add7b904817b2028f6f5d83179ec"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","sourceNew":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      for (IndexableField f : strategy.createIndexableFields(shape)) {\n        document.add(f);\n      }\n      if (storeShape)\n        document.add(new StoredField(strategy.getFieldName(), ctx.toString(shape)));\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","sourceOld":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      for (IndexableField f : strategy.createFields(fieldInfo, shape, true, storeShape)) {\n        if( f != null ) { // null if incompatibleGeometry && ignore\n          document.add(f);\n        }\n      }\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","sourceNew":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      for (IndexableField f : strategy.createIndexableFields(shape)) {\n        document.add(f);\n      }\n      if (storeShape)\n        document.add(new StoredField(strategy.getFieldName(), ctx.toString(shape)));\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","sourceOld":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      for (IndexableField f : strategy.createFields(shape, true, storeShape)) {\n        if( f != null ) { // null if incompatibleGeometry && ignore\n          document.add(f);\n        }\n      }\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"409324b31a1419d7c05a38211168cf317e39be77","date":1344866765,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","sourceNew":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      for (Field f : strategy.createIndexableFields(shape)) {\n        document.add(f);\n      }\n      if (storeShape)\n        document.add(new StoredField(strategy.getFieldName(), ctx.toString(shape)));\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","sourceOld":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      for (IndexableField f : strategy.createIndexableFields(shape)) {\n        document.add(f);\n      }\n      if (storeShape)\n        document.add(new StoredField(strategy.getFieldName(), ctx.toString(shape)));\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","bugFix":null,"bugIntro":["d5e3943824e0add7b904817b2028f6f5d83179ec"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","sourceNew":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      for (Field f : strategy.createIndexableFields(shape)) {\n        document.add(f);\n      }\n      if (storeShape)\n        document.add(new StoredField(strategy.getFieldName(), ctx.toString(shape)));\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","sourceOld":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      for (IndexableField f : strategy.createIndexableFields(shape)) {\n        document.add(f);\n      }\n      if (storeShape)\n        document.add(new StoredField(strategy.getFieldName(), ctx.toString(shape)));\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"da956410d7a790f567af4e7e94584fb0930212f2","date":1346859431,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","sourceNew":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = new ShapeReadWriter(ctx).readShape(data.shape);\n      for (Field f : strategy.createIndexableFields(shape)) {\n        document.add(f);\n      }\n      if (storeShape)\n        document.add(new StoredField(strategy.getFieldName(), ctx.toString(shape)));\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","sourceOld":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      for (Field f : strategy.createIndexableFields(shape)) {\n        document.add(f);\n      }\n      if (storeShape)\n        document.add(new StoredField(strategy.getFieldName(), ctx.toString(shape)));\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","bugFix":null,"bugIntro":["9cb4b4651ba335fd70d51cf8448325add98f71c6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d5e3943824e0add7b904817b2028f6f5d83179ec","date":1347467595,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","sourceNew":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = new ShapeReadWriter(ctx).readShape(data.shape);\n      shape = convertShapeFromGetDocuments(shape);\n      if (shape != null) {\n        for (Field f : strategy.createIndexableFields(shape)) {\n          document.add(f);\n        }\n        if (storeShape)\n          document.add(new StoredField(strategy.getFieldName(), ctx.toString(shape)));\n      }\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","sourceOld":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = new ShapeReadWriter(ctx).readShape(data.shape);\n      for (Field f : strategy.createIndexableFields(shape)) {\n        document.add(f);\n      }\n      if (storeShape)\n        document.add(new StoredField(strategy.getFieldName(), ctx.toString(shape)));\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","bugFix":["399d569d88e65d963440cdd3a3e2d5f7cdd1bd42","409324b31a1419d7c05a38211168cf317e39be77","42ea82a615127d578d4d21a6743834c45fa10468","df0750324176e07de4ead8572b1b011a640f4635"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9cb4b4651ba335fd70d51cf8448325add98f71c6","date":1348862946,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","sourceNew":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      shape = convertShapeFromGetDocuments(shape);\n      if (shape != null) {\n        for (Field f : strategy.createIndexableFields(shape)) {\n          document.add(f);\n        }\n        if (storeShape)\n          document.add(new StoredField(strategy.getFieldName(), ctx.toString(shape)));\n      }\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","sourceOld":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = new ShapeReadWriter(ctx).readShape(data.shape);\n      shape = convertShapeFromGetDocuments(shape);\n      if (shape != null) {\n        for (Field f : strategy.createIndexableFields(shape)) {\n          document.add(f);\n        }\n        if (storeShape)\n          document.add(new StoredField(strategy.getFieldName(), ctx.toString(shape)));\n      }\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","bugFix":["da956410d7a790f567af4e7e94584fb0930212f2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"400d04533c3afc7d3982c21c14debd6a99853c3a","date":1353963333,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","sourceNew":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    return getDocuments(getSampleData(testDataFile));\n  }\n\n","sourceOld":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      shape = convertShapeFromGetDocuments(shape);\n      if (shape != null) {\n        for (Field f : strategy.createIndexableFields(shape)) {\n          document.add(f);\n        }\n        if (storeShape)\n          document.add(new StoredField(strategy.getFieldName(), ctx.toString(shape)));\n      }\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","sourceNew":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    return getDocuments(getSampleData(testDataFile));\n  }\n\n","sourceOld":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    Iterator<SampleData> sampleData = getSampleData(testDataFile);\n    List<Document> documents = new ArrayList<Document>();\n    while (sampleData.hasNext()) {\n      SampleData data = sampleData.next();\n      Document document = new Document();\n      document.add(new StringField(\"id\", data.id, Field.Store.YES));\n      document.add(new StringField(\"name\", data.name, Field.Store.YES));\n      Shape shape = ctx.readShape(data.shape);\n      shape = convertShapeFromGetDocuments(shape);\n      if (shape != null) {\n        for (Field f : strategy.createIndexableFields(shape)) {\n          document.add(f);\n        }\n        if (storeShape)\n          document.add(new StoredField(strategy.getFieldName(), ctx.toString(shape)));\n      }\n\n      documents.add(document);\n    }\n    return documents;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","sourceNew":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    return getDocuments(getSampleData(testDataFile));\n  }\n\n","sourceOld":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    return getDocuments(getSampleData(testDataFile));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/StrategyTestCase#getDocuments(String).mjava","sourceNew":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    return getDocuments(getSampleData(testDataFile));\n  }\n\n","sourceOld":"  protected List<Document> getDocuments(String testDataFile) throws IOException {\n    return getDocuments(getSampleData(testDataFile));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0415a016b37e58a017fed0a91234f733ab359971":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"409324b31a1419d7c05a38211168cf317e39be77":["aba371508186796cc6151d8223a5b4e16d02e26e"],"af2638813028b254a88b418ebeafb541afb49653":["400d04533c3afc7d3982c21c14debd6a99853c3a","112d77ac8d3e10a362516ad834c9a11d35c94234"],"400d04533c3afc7d3982c21c14debd6a99853c3a":["9cb4b4651ba335fd70d51cf8448325add98f71c6"],"da956410d7a790f567af4e7e94584fb0930212f2":["1d028314cced5858683a1bb4741423d0f934257b"],"407687e67faf6e1f02a211ca078d8e3eed631027":["9cb4b4651ba335fd70d51cf8448325add98f71c6","400d04533c3afc7d3982c21c14debd6a99853c3a"],"9cb4b4651ba335fd70d51cf8448325add98f71c6":["d5e3943824e0add7b904817b2028f6f5d83179ec"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["400d04533c3afc7d3982c21c14debd6a99853c3a"],"d5e3943824e0add7b904817b2028f6f5d83179ec":["da956410d7a790f567af4e7e94584fb0930212f2"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1d028314cced5858683a1bb4741423d0f934257b":["42ea82a615127d578d4d21a6743834c45fa10468","409324b31a1419d7c05a38211168cf317e39be77"],"aba371508186796cc6151d8223a5b4e16d02e26e":["0415a016b37e58a017fed0a91234f733ab359971","42ea82a615127d578d4d21a6743834c45fa10468"],"399d569d88e65d963440cdd3a3e2d5f7cdd1bd42":["0415a016b37e58a017fed0a91234f733ab359971"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["04f07771a2a7dd3a395700665ed839c3dae2def2","42ea82a615127d578d4d21a6743834c45fa10468"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"42ea82a615127d578d4d21a6743834c45fa10468":["df0750324176e07de4ead8572b1b011a640f4635"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"],"df0750324176e07de4ead8572b1b011a640f4635":["399d569d88e65d963440cdd3a3e2d5f7cdd1bd42"]},"commit2Childs":{"0415a016b37e58a017fed0a91234f733ab359971":["aba371508186796cc6151d8223a5b4e16d02e26e","399d569d88e65d963440cdd3a3e2d5f7cdd1bd42"],"409324b31a1419d7c05a38211168cf317e39be77":["1d028314cced5858683a1bb4741423d0f934257b"],"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"400d04533c3afc7d3982c21c14debd6a99853c3a":["af2638813028b254a88b418ebeafb541afb49653","407687e67faf6e1f02a211ca078d8e3eed631027","112d77ac8d3e10a362516ad834c9a11d35c94234"],"da956410d7a790f567af4e7e94584fb0930212f2":["d5e3943824e0add7b904817b2028f6f5d83179ec"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"9cb4b4651ba335fd70d51cf8448325add98f71c6":["400d04533c3afc7d3982c21c14debd6a99853c3a","407687e67faf6e1f02a211ca078d8e3eed631027"],"d5e3943824e0add7b904817b2028f6f5d83179ec":["9cb4b4651ba335fd70d51cf8448325add98f71c6"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["0415a016b37e58a017fed0a91234f733ab359971","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"1d028314cced5858683a1bb4741423d0f934257b":["da956410d7a790f567af4e7e94584fb0930212f2"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"aba371508186796cc6151d8223a5b4e16d02e26e":["409324b31a1419d7c05a38211168cf317e39be77"],"399d569d88e65d963440cdd3a3e2d5f7cdd1bd42":["df0750324176e07de4ead8572b1b011a640f4635"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"42ea82a615127d578d4d21a6743834c45fa10468":["1d028314cced5858683a1bb4741423d0f934257b","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"df0750324176e07de4ead8572b1b011a640f4635":["42ea82a615127d578d4d21a6743834c45fa10468"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}