{"path":"contrib/spatial/src/java/org/apache/lucene/spatial/tier/BoundaryBoxFilter#BoundaryBoxFilter(String,String,String,boolean,boolean).mjava","commits":[{"id":"04a4a94db1eb59c8583adb166acfe686a031bedc","date":1230622637,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"contrib/spatial/src/java/org/apache/lucene/spatial/tier/BoundaryBoxFilter#BoundaryBoxFilter(String,String,String,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @param fieldName The field this range applies to\n   * @param lowerTerm The lower bound on this range\n   * @param upperTerm The upper bound on this range\n   * @param includeLower Does this range include the lower bound?\n   * @param includeUpper Does this range include the upper bound?\n   * @throws IllegalArgumentException if both terms are null or if\n   *  lowerTerm is null and includeLower is true (similar for upperTerm\n   *  and includeUpper)\n   */\n  public BoundaryBoxFilter(String fieldName, String lowerTerm, String upperTerm,\n                     boolean includeLower, boolean includeUpper) {\n    this.fieldName = fieldName;\n    this.lowerTerm = lowerTerm;\n    this.upperTerm = upperTerm;\n    this.includeLower = includeLower;\n    this.includeUpper = includeUpper;\n    \n    if (null == lowerTerm && null == upperTerm) {\n      throw new IllegalArgumentException\n          (\"At least one value must be non-null\");\n    }\n    if (includeLower && null == lowerTerm) {\n      throw new IllegalArgumentException\n          (\"The lower bound must be non-null to be inclusive\");\n    }\n    if (includeUpper && null == upperTerm) {\n      throw new IllegalArgumentException\n          (\"The upper bound must be non-null to be inclusive\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e884b662b65dc02c08c50a8033706b6747fbc07","date":1251905685,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/spatial/src/java/org/apache/lucene/spatial/tier/BoundaryBoxFilter#BoundaryBoxFilter(String,String,String,boolean,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * @param fieldName The field this range applies to\n   * @param lowerTerm The lower bound on this range\n   * @param upperTerm The upper bound on this range\n   * @param includeLower Does this range include the lower bound?\n   * @param includeUpper Does this range include the upper bound?\n   * @throws IllegalArgumentException if both terms are null or if\n   *  lowerTerm is null and includeLower is true (similar for upperTerm\n   *  and includeUpper)\n   */\n  public BoundaryBoxFilter(String fieldName, String lowerTerm, String upperTerm,\n                     boolean includeLower, boolean includeUpper) {\n    this.fieldName = fieldName;\n    this.lowerTerm = lowerTerm;\n    this.upperTerm = upperTerm;\n    this.includeLower = includeLower;\n    this.includeUpper = includeUpper;\n    \n    if (null == lowerTerm && null == upperTerm) {\n      throw new IllegalArgumentException\n          (\"At least one value must be non-null\");\n    }\n    if (includeLower && null == lowerTerm) {\n      throw new IllegalArgumentException\n          (\"The lower bound must be non-null to be inclusive\");\n    }\n    if (includeUpper && null == upperTerm) {\n      throw new IllegalArgumentException\n          (\"The upper bound must be non-null to be inclusive\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04a4a94db1eb59c8583adb166acfe686a031bedc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6e884b662b65dc02c08c50a8033706b6747fbc07":["04a4a94db1eb59c8583adb166acfe686a031bedc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6e884b662b65dc02c08c50a8033706b6747fbc07"]},"commit2Childs":{"04a4a94db1eb59c8583adb166acfe686a031bedc":["6e884b662b65dc02c08c50a8033706b6747fbc07"],"6e884b662b65dc02c08c50a8033706b6747fbc07":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["04a4a94db1eb59c8583adb166acfe686a031bedc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}