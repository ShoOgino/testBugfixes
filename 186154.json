{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballPorterFilterFactory#inform(ResourceLoader).mjava","commits":[{"id":"3241e06e642196396b80bb293acd9c0814d079e0","date":1343094999,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballPorterFilterFactory#inform(ResourceLoader).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/SnowballPorterFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(PROTECTED_TOKENS);\n    if (wordFiles != null) {\n      try {\n        protectedWords = getWordSet(loader, wordFiles, false);\n      } catch (IOException e) {\n        throw new InitializationException(\"IOException thrown while loading protected words\", e);\n      }\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(PROTECTED_TOKENS);\n    if (wordFiles != null) {\n      try {\n        protectedWords = getWordSet(loader, wordFiles, false);\n      } catch (IOException e) {\n        throw new InitializationException(\"IOException thrown while loading protected words\", e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a1a22b1ad88b436661458df567f3fdb446392a4","date":1343224444,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballPorterFilterFactory#inform(ResourceLoader).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/SnowballPorterFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(PROTECTED_TOKENS);\n    if (wordFiles != null) {\n      try {\n        protectedWords = getWordSet(loader, wordFiles, false);\n      } catch (IOException e) {\n        throw new InitializationException(\"IOException thrown while loading protected words\", e);\n      }\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(PROTECTED_TOKENS);\n    if (wordFiles != null) {\n      try {\n        protectedWords = getWordSet(loader, wordFiles, false);\n      } catch (IOException e) {\n        throw new InitializationException(\"IOException thrown while loading protected words\", e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6f80818731469e00f54165ec94aae2db868ea05","date":1343266866,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballPorterFilterFactory#inform(ResourceLoader).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballPorterFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) throws IOException {\n    String wordFiles = args.get(PROTECTED_TOKENS);\n    if (wordFiles != null) {\n      protectedWords = getWordSet(loader, wordFiles, false);\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    String wordFiles = args.get(PROTECTED_TOKENS);\n    if (wordFiles != null) {\n      try {\n        protectedWords = getWordSet(loader, wordFiles, false);\n      } catch (IOException e) {\n        throw new InitializationException(\"IOException thrown while loading protected words\", e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballPorterFilterFactory#inform(ResourceLoader).mjava","pathOld":"/dev/null","sourceNew":"  public void inform(ResourceLoader loader) throws IOException {\n    String wordFiles = args.get(PROTECTED_TOKENS);\n    if (wordFiles != null) {\n      protectedWords = getWordSet(loader, wordFiles, false);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballPorterFilterFactory#inform(ResourceLoader).mjava","pathOld":"/dev/null","sourceNew":"  public void inform(ResourceLoader loader) throws IOException {\n    String wordFiles = args.get(PROTECTED_TOKENS);\n    if (wordFiles != null) {\n      protectedWords = getWordSet(loader, wordFiles, false);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f0a6976d1fc8560dc1cc1ba74ffe3f2474babd2","date":1344893790,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballPorterFilterFactory#inform(ResourceLoader).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballPorterFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  @Override\n  public void inform(ResourceLoader loader) throws IOException {\n    String cfgLanguage = args.get(\"language\");\n    if (cfgLanguage != null)\n      language = cfgLanguage;\n\n    String className = \"org.tartarus.snowball.ext.\" + language + \"Stemmer\";\n    stemClass = loader.newInstance(className, SnowballProgram.class).getClass();\n\n    String wordFiles = args.get(PROTECTED_TOKENS);\n    if (wordFiles != null) {\n      protectedWords = getWordSet(loader, wordFiles, false);\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) throws IOException {\n    String wordFiles = args.get(PROTECTED_TOKENS);\n    if (wordFiles != null) {\n      protectedWords = getWordSet(loader, wordFiles, false);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","date":1345029782,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballPorterFilterFactory#inform(ResourceLoader).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballPorterFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  @Override\n  public void inform(ResourceLoader loader) throws IOException {\n    String cfgLanguage = args.get(\"language\");\n    if (cfgLanguage != null)\n      language = cfgLanguage;\n\n    String className = \"org.tartarus.snowball.ext.\" + language + \"Stemmer\";\n    stemClass = loader.newInstance(className, SnowballProgram.class).getClass();\n\n    String wordFiles = args.get(PROTECTED_TOKENS);\n    if (wordFiles != null) {\n      protectedWords = getWordSet(loader, wordFiles, false);\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) throws IOException {\n    String wordFiles = args.get(PROTECTED_TOKENS);\n    if (wordFiles != null) {\n      protectedWords = getWordSet(loader, wordFiles, false);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b05c56a41b733e02a189c48895922b5bd8c7f3d1","date":1345033322,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballPorterFilterFactory#inform(ResourceLoader).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballPorterFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  @Override\n  public void inform(ResourceLoader loader) throws IOException {\n    String cfgLanguage = args.get(\"language\");\n    if (cfgLanguage != null)\n      language = cfgLanguage;\n\n    String className = \"org.tartarus.snowball.ext.\" + language + \"Stemmer\";\n    stemClass = loader.newInstance(className, SnowballProgram.class).getClass();\n\n    String wordFiles = args.get(PROTECTED_TOKENS);\n    if (wordFiles != null) {\n      protectedWords = getWordSet(loader, wordFiles, false);\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) throws IOException {\n    String wordFiles = args.get(PROTECTED_TOKENS);\n    if (wordFiles != null) {\n      protectedWords = getWordSet(loader, wordFiles, false);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballPorterFilterFactory#inform(ResourceLoader).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballPorterFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  @Override\n  public void inform(ResourceLoader loader) throws IOException {\n    String className = \"org.tartarus.snowball.ext.\" + language + \"Stemmer\";\n    stemClass = loader.newInstance(className, SnowballProgram.class).getClass();\n\n    if (wordFiles != null) {\n      protectedWords = getWordSet(loader, wordFiles, false);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void inform(ResourceLoader loader) throws IOException {\n    String cfgLanguage = args.get(\"language\");\n    if (cfgLanguage != null)\n      language = cfgLanguage;\n\n    String className = \"org.tartarus.snowball.ext.\" + language + \"Stemmer\";\n    stemClass = loader.newInstance(className, SnowballProgram.class).getClass();\n\n    String wordFiles = args.get(PROTECTED_TOKENS);\n    if (wordFiles != null) {\n      protectedWords = getWordSet(loader, wordFiles, false);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09479cd2de06c67a115b7346a8e5de8af4d62e81","date":1581961081,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballPorterFilterFactory#inform(ResourceLoader).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballPorterFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  @Override\n  public void inform(ResourceLoader loader) throws IOException {\n    String className = \"org.tartarus.snowball.ext.\" + language + \"Stemmer\";\n    stemClass = loader.newInstance(className, SnowballStemmer.class).getClass();\n\n    if (wordFiles != null) {\n      protectedWords = getWordSet(loader, wordFiles, false);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void inform(ResourceLoader loader) throws IOException {\n    String className = \"org.tartarus.snowball.ext.\" + language + \"Stemmer\";\n    stemClass = loader.newInstance(className, SnowballProgram.class).getClass();\n\n    if (wordFiles != null) {\n      protectedWords = getWordSet(loader, wordFiles, false);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f6f80818731469e00f54165ec94aae2db868ea05"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","2f0a6976d1fc8560dc1cc1ba74ffe3f2474babd2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f6f80818731469e00f54165ec94aae2db868ea05"],"f6f80818731469e00f54165ec94aae2db868ea05":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"2f0a6976d1fc8560dc1cc1ba74ffe3f2474babd2":["f6f80818731469e00f54165ec94aae2db868ea05"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["2f0a6976d1fc8560dc1cc1ba74ffe3f2474babd2"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":["aba371508186796cc6151d8223a5b4e16d02e26e","2f0a6976d1fc8560dc1cc1ba74ffe3f2474babd2"],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3241e06e642196396b80bb293acd9c0814d079e0"],"3241e06e642196396b80bb293acd9c0814d079e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09479cd2de06c67a115b7346a8e5de8af4d62e81"]},"commit2Childs":{"aba371508186796cc6151d8223a5b4e16d02e26e":["c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","5a1a22b1ad88b436661458df567f3fdb446392a4","3241e06e642196396b80bb293acd9c0814d079e0"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["b05c56a41b733e02a189c48895922b5bd8c7f3d1"],"f6f80818731469e00f54165ec94aae2db868ea05":["aba371508186796cc6151d8223a5b4e16d02e26e","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","2f0a6976d1fc8560dc1cc1ba74ffe3f2474babd2"],"2f0a6976d1fc8560dc1cc1ba74ffe3f2474babd2":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","57da959ec15bb701bd1d1bf3c613b69009ff4bfd","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["09479cd2de06c67a115b7346a8e5de8af4d62e81"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":[],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5a1a22b1ad88b436661458df567f3fdb446392a4":["f6f80818731469e00f54165ec94aae2db868ea05"],"3241e06e642196396b80bb293acd9c0814d079e0":["5a1a22b1ad88b436661458df567f3fdb446392a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}