{"path":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestDeadlock().mjava","commits":[{"id":"3215ae1377fc1ca1790921d75dd39cb764743b85","date":1237371771,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestDeadlock().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","sourceNew":"  public void xxxtestDeadlock() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, true, new WhitespaceAnalyzer());\n    writer.setMaxBufferedDocs(2);\n    Document doc = new Document();\n    doc.add(new Field(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", Field.Store.YES,\n                      Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    MockRAMDirectory dir2 = new MockRAMDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    writer2.addDocument(doc);\n    writer2.close();\n\n    IndexReader r1 = IndexReader.open(dir2);\n    IndexReader r2 = (IndexReader) r1.clone();\n    writer.addIndexes(new IndexReader[] {r1, r2});\n    writer.close();\n\n    IndexReader r3 = IndexReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n    r2.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeadlock() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, true, new WhitespaceAnalyzer());\n    writer.setMaxBufferedDocs(2);\n    Document doc = new Document();\n    doc.add(new Field(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", Field.Store.YES,\n                      Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    MockRAMDirectory dir2 = new MockRAMDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    writer2.addDocument(doc);\n    writer2.close();\n\n    IndexReader r1 = IndexReader.open(dir2);\n    IndexReader r2 = (IndexReader) r1.clone();\n    writer.addIndexes(new IndexReader[] {r1, r2});\n    writer.close();\n\n    IndexReader r3 = IndexReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n    r2.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c482d1e63332617181729a225b215c452d8a79","date":1237396006,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testDeadlock().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestDeadlock().mjava","sourceNew":"  public void testDeadlock() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, true, new WhitespaceAnalyzer());\n    writer.setMaxBufferedDocs(2);\n    Document doc = new Document();\n    doc.add(new Field(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", Field.Store.YES,\n                      Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    MockRAMDirectory dir2 = new MockRAMDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    writer2.addDocument(doc);\n    writer2.close();\n\n    IndexReader r1 = IndexReader.open(dir2);\n    IndexReader r2 = (IndexReader) r1.clone();\n    writer.addIndexes(new IndexReader[] {r1, r2});\n    writer.close();\n\n    IndexReader r3 = IndexReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n    r2.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void xxxtestDeadlock() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, true, new WhitespaceAnalyzer());\n    writer.setMaxBufferedDocs(2);\n    Document doc = new Document();\n    doc.add(new Field(\"content\", \"aaa bbb ccc ddd eee fff ggg hhh iii\", Field.Store.YES,\n                      Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.addDocument(doc);\n    writer.commit();\n    // index has 2 segments\n\n    MockRAMDirectory dir2 = new MockRAMDirectory();\n    IndexWriter writer2 = new IndexWriter(dir2, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.LIMITED);\n    writer2.addDocument(doc);\n    writer2.close();\n\n    IndexReader r1 = IndexReader.open(dir2);\n    IndexReader r2 = (IndexReader) r1.clone();\n    writer.addIndexes(new IndexReader[] {r1, r2});\n    writer.close();\n\n    IndexReader r3 = IndexReader.open(dir);\n    assertEquals(5, r3.numDocs());\n    r3.close();\n\n    r1.close();\n    r2.close();\n\n    dir2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3215ae1377fc1ca1790921d75dd39cb764743b85":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09c482d1e63332617181729a225b215c452d8a79":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c482d1e63332617181729a225b215c452d8a79"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"3215ae1377fc1ca1790921d75dd39cb764743b85":["09c482d1e63332617181729a225b215c452d8a79"],"09c482d1e63332617181729a225b215c452d8a79":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}