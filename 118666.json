{"path":"src/java/org/apache/lucene/util/NumericUtils#floatToSortableInt(float).mjava","commits":[{"id":"53b6c192847de8643a5da505cc433cbf8476a175","date":1245413392,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/NumericUtils#floatToSortableInt(float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Converts a <code>float</code> value to a sortable signed <code>int</code>.\n   * The value is converted by getting their IEEE 754 floating-point &quot;float format&quot;\n   * bit layout and then some bits are swapped, to be able to compare the result as int.\n   * By this the precision is not reduced, but the value can easily used as an int.\n   * @see #sortableIntToFloat\n   */\n  public static int floatToSortableInt(float val) {\n    int f = Float.floatToIntBits(val);\n    if (f<0) f ^= 0x7fffffff;\n    return f;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a0e7cdd0facd912df00ec53365f98e7c54d6c9bb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"079c52dfa2b8b19f2c431b82e9f962ddc5da9004","date":1245487833,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/NumericUtils#floatToSortableInt(float).mjava","pathOld":"src/java/org/apache/lucene/util/NumericUtils#floatToSortableInt(float).mjava","sourceNew":"  /**\n   * Converts a <code>float</code> value to a sortable signed <code>int</code>.\n   * The value is converted by getting their IEEE 754 floating-point &quot;float format&quot;\n   * bit layout and then some bits are swapped, to be able to compare the result as int.\n   * By this the precision is not reduced, but the value can easily used as an int.\n   * @see #sortableIntToFloat\n   */\n  public static int floatToSortableInt(float val) {\n    int f = Float.floatToRawIntBits(val);\n    if (f<0) f ^= 0x7fffffff;\n    return f;\n  }\n\n","sourceOld":"  /**\n   * Converts a <code>float</code> value to a sortable signed <code>int</code>.\n   * The value is converted by getting their IEEE 754 floating-point &quot;float format&quot;\n   * bit layout and then some bits are swapped, to be able to compare the result as int.\n   * By this the precision is not reduced, but the value can easily used as an int.\n   * @see #sortableIntToFloat\n   */\n  public static int floatToSortableInt(float val) {\n    int f = Float.floatToIntBits(val);\n    if (f<0) f ^= 0x7fffffff;\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/NumericUtils#floatToSortableInt(float).mjava","pathOld":"src/java/org/apache/lucene/util/NumericUtils#floatToSortableInt(float).mjava","sourceNew":"  /**\n   * Converts a <code>float</code> value to a sortable signed <code>int</code>.\n   * The value is converted by getting their IEEE 754 floating-point &quot;float format&quot;\n   * bit layout and then some bits are swapped, to be able to compare the result as int.\n   * By this the precision is not reduced, but the value can easily used as an int.\n   * @see #sortableIntToFloat\n   */\n  public static int floatToSortableInt(float val) {\n    int f = Float.floatToRawIntBits(val);\n    if (f<0) f ^= 0x7fffffff;\n    return f;\n  }\n\n","sourceOld":"  /**\n   * Converts a <code>float</code> value to a sortable signed <code>int</code>.\n   * The value is converted by getting their IEEE 754 floating-point &quot;float format&quot;\n   * bit layout and then some bits are swapped, to be able to compare the result as int.\n   * By this the precision is not reduced, but the value can easily used as an int.\n   * @see #sortableIntToFloat\n   */\n  public static int floatToSortableInt(float val) {\n    int f = Float.floatToRawIntBits(val);\n    if (f<0) f ^= 0x7fffffff;\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"53b6c192847de8643a5da505cc433cbf8476a175":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"079c52dfa2b8b19f2c431b82e9f962ddc5da9004":["53b6c192847de8643a5da505cc433cbf8476a175"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["079c52dfa2b8b19f2c431b82e9f962ddc5da9004"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["53b6c192847de8643a5da505cc433cbf8476a175"],"53b6c192847de8643a5da505cc433cbf8476a175":["079c52dfa2b8b19f2c431b82e9f962ddc5da9004"],"079c52dfa2b8b19f2c431b82e9f962ddc5da9004":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}