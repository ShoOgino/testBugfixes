{"path":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestNoMatchSolrFeature#tesOnlyNoMatchFeaturesInStoreAndModelReturnsNonzeroScore().mjava","commits":[{"id":"58c36d634c9789cb739fbd175c1a8d50b3303f6b","date":1478022614,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestNoMatchSolrFeature#tesOnlyNoMatchFeaturesInStoreAndModelReturnsNonzeroScore().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void tesOnlyNoMatchFeaturesInStoreAndModelReturnsNonzeroScore() throws Exception {\n    // Tests model with all no matching features but expects a non 0 score\n    //  MultipleAdditiveTrees will return scores even for docs without any feature matches\n    loadModel(\n        \"nomatchmodel4\",\n        MultipleAdditiveTreesModel.class.getCanonicalName(),\n        new String[] {\"nomatchfeature4\"},\n        \"noMatchFeaturesStore\",\n        \"{\\\"trees\\\":[{\\\"weight\\\":\\\"1f\\\", \\\"root\\\":{\\\"feature\\\": \\\"matchedTitle\\\",\\\"threshold\\\": \\\"0.5f\\\",\\\"left\\\":{\\\"value\\\" : \\\"-10\\\"},\\\"right\\\":{\\\"value\\\" : \\\"9\\\"}}}]}\");\n\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"*:*\");\n    query.add(\"fl\", \"*, score,fv:[fv]\");\n    query.add(\"rows\", \"4\");\n    query.add(\"rq\", \"{!ltr model=nomatchmodel4 reRankDocs=4}\");\n\n    assertJQ(\"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/score==0.0\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[0]/fv==''\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bf344c7efad3160a74c52ef1fd53f535978fc5b7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9720b151fde2073f4e401450f4574e5f31c2d0ff","date":1478184029,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestNoMatchSolrFeature#tesOnlyNoMatchFeaturesInStoreAndModelReturnsNonzeroScore().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void tesOnlyNoMatchFeaturesInStoreAndModelReturnsNonzeroScore() throws Exception {\n    // Tests model with all no matching features but expects a non 0 score\n    //  MultipleAdditiveTrees will return scores even for docs without any feature matches\n    loadModel(\n        \"nomatchmodel4\",\n        MultipleAdditiveTreesModel.class.getCanonicalName(),\n        new String[] {\"nomatchfeature4\"},\n        \"noMatchFeaturesStore\",\n        \"{\\\"trees\\\":[{\\\"weight\\\":\\\"1f\\\", \\\"root\\\":{\\\"feature\\\": \\\"matchedTitle\\\",\\\"threshold\\\": \\\"0.5f\\\",\\\"left\\\":{\\\"value\\\" : \\\"-10\\\"},\\\"right\\\":{\\\"value\\\" : \\\"9\\\"}}}]}\");\n\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"*:*\");\n    query.add(\"fl\", \"*, score,fv:[fv]\");\n    query.add(\"rows\", \"4\");\n    query.add(\"rq\", \"{!ltr model=nomatchmodel4 reRankDocs=4}\");\n\n    assertJQ(\"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/score==0.0\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[0]/fv==''\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97843b36f201934938da5d3392d87b90624dfe6b","date":1482500716,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestNoMatchSolrFeature#tesOnlyNoMatchFeaturesInStoreAndModelReturnsNonzeroScore().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestNoMatchSolrFeature#tesOnlyNoMatchFeaturesInStoreAndModelReturnsNonzeroScore().mjava","sourceNew":"  @Test\n  public void tesOnlyNoMatchFeaturesInStoreAndModelReturnsNonzeroScore() throws Exception {\n    // Tests model with all no matching features but expects a non 0 score\n    //  MultipleAdditiveTrees will return scores even for docs without any feature matches\n    loadModel(\n        \"nomatchmodel4\",\n        MultipleAdditiveTreesModel.class.getCanonicalName(),\n        new String[] {\"nomatchfeature4\"},\n        \"noMatchFeaturesStore\",\n        \"{\\\"trees\\\":[{\\\"weight\\\":\\\"1f\\\", \\\"root\\\":{\\\"feature\\\": \\\"matchedTitle\\\",\\\"threshold\\\": \\\"0.5f\\\",\\\"left\\\":{\\\"value\\\" : \\\"-10\\\"},\\\"right\\\":{\\\"value\\\" : \\\"9\\\"}}}]}\");\n\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"*:*\");\n    query.add(\"fl\", \"*, score,fv:[fv]\");\n    query.add(\"rows\", \"4\");\n    query.add(\"rq\", \"{!ltr model=nomatchmodel4 reRankDocs=4}\");\n\n    final String docs0fv_dense_csv = FeatureLoggerTestUtils.toFeatureVector(\n        \"nomatchfeature4\",\"0.0\");\n    final String docs0fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector();\n\n    final String docs0fv_default_csv = chooseDefaultFeatureVector(docs0fv_dense_csv, docs0fv_sparse_csv);\n\n    assertJQ(\"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/score==0.0\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[0]/fv=='\"+docs0fv_default_csv+\"'\");\n  }\n\n","sourceOld":"  @Test\n  public void tesOnlyNoMatchFeaturesInStoreAndModelReturnsNonzeroScore() throws Exception {\n    // Tests model with all no matching features but expects a non 0 score\n    //  MultipleAdditiveTrees will return scores even for docs without any feature matches\n    loadModel(\n        \"nomatchmodel4\",\n        MultipleAdditiveTreesModel.class.getCanonicalName(),\n        new String[] {\"nomatchfeature4\"},\n        \"noMatchFeaturesStore\",\n        \"{\\\"trees\\\":[{\\\"weight\\\":\\\"1f\\\", \\\"root\\\":{\\\"feature\\\": \\\"matchedTitle\\\",\\\"threshold\\\": \\\"0.5f\\\",\\\"left\\\":{\\\"value\\\" : \\\"-10\\\"},\\\"right\\\":{\\\"value\\\" : \\\"9\\\"}}}]}\");\n\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"*:*\");\n    query.add(\"fl\", \"*, score,fv:[fv]\");\n    query.add(\"rows\", \"4\");\n    query.add(\"rq\", \"{!ltr model=nomatchmodel4 reRankDocs=4}\");\n\n    assertJQ(\"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/score==0.0\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[0]/fv==''\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestNoMatchSolrFeature#tesOnlyNoMatchFeaturesInStoreAndModelReturnsNonzeroScore().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestNoMatchSolrFeature#tesOnlyNoMatchFeaturesInStoreAndModelReturnsNonzeroScore().mjava","sourceNew":"  @Test\n  public void tesOnlyNoMatchFeaturesInStoreAndModelReturnsNonzeroScore() throws Exception {\n    // Tests model with all no matching features but expects a non 0 score\n    //  MultipleAdditiveTrees will return scores even for docs without any feature matches\n    loadModel(\n        \"nomatchmodel4\",\n        MultipleAdditiveTreesModel.class.getCanonicalName(),\n        new String[] {\"nomatchfeature4\"},\n        \"noMatchFeaturesStore\",\n        \"{\\\"trees\\\":[{\\\"weight\\\":\\\"1f\\\", \\\"root\\\":{\\\"feature\\\": \\\"matchedTitle\\\",\\\"threshold\\\": \\\"0.5f\\\",\\\"left\\\":{\\\"value\\\" : \\\"-10\\\"},\\\"right\\\":{\\\"value\\\" : \\\"9\\\"}}}]}\");\n\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"*:*\");\n    query.add(\"fl\", \"*, score,fv:[fv]\");\n    query.add(\"rows\", \"4\");\n    query.add(\"rq\", \"{!ltr model=nomatchmodel4 reRankDocs=4}\");\n\n    final String docs0fv_dense_csv = FeatureLoggerTestUtils.toFeatureVector(\n        \"nomatchfeature4\",\"0.0\");\n    final String docs0fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector();\n\n    final String docs0fv_default_csv = chooseDefaultFeatureVector(docs0fv_dense_csv, docs0fv_sparse_csv);\n\n    assertJQ(\"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/score==0.0\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[0]/fv=='\"+docs0fv_default_csv+\"'\");\n  }\n\n","sourceOld":"  @Test\n  public void tesOnlyNoMatchFeaturesInStoreAndModelReturnsNonzeroScore() throws Exception {\n    // Tests model with all no matching features but expects a non 0 score\n    //  MultipleAdditiveTrees will return scores even for docs without any feature matches\n    loadModel(\n        \"nomatchmodel4\",\n        MultipleAdditiveTreesModel.class.getCanonicalName(),\n        new String[] {\"nomatchfeature4\"},\n        \"noMatchFeaturesStore\",\n        \"{\\\"trees\\\":[{\\\"weight\\\":\\\"1f\\\", \\\"root\\\":{\\\"feature\\\": \\\"matchedTitle\\\",\\\"threshold\\\": \\\"0.5f\\\",\\\"left\\\":{\\\"value\\\" : \\\"-10\\\"},\\\"right\\\":{\\\"value\\\" : \\\"9\\\"}}}]}\");\n\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"*:*\");\n    query.add(\"fl\", \"*, score,fv:[fv]\");\n    query.add(\"rows\", \"4\");\n    query.add(\"rq\", \"{!ltr model=nomatchmodel4 reRankDocs=4}\");\n\n    assertJQ(\"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/score==0.0\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[0]/fv==''\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bf344c7efad3160a74c52ef1fd53f535978fc5b7","date":1518199939,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestNoMatchSolrFeature#tesOnlyNoMatchFeaturesInStoreAndModelReturnsNonzeroScore().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestNoMatchSolrFeature#tesOnlyNoMatchFeaturesInStoreAndModelReturnsNonzeroScore().mjava","sourceNew":"  @Test\n  public void tesOnlyNoMatchFeaturesInStoreAndModelReturnsNonzeroScore() throws Exception {\n    // Tests model with all no matching features but expects a non 0 score\n    //  MultipleAdditiveTrees will return scores even for docs without any feature matches\n    loadModel(\n        \"nomatchmodel4\",\n        MultipleAdditiveTreesModel.class.getName(),\n        new String[] {\"nomatchfeature4\"},\n        \"noMatchFeaturesStore\",\n        \"{\\\"trees\\\":[{\\\"weight\\\":\\\"1f\\\", \\\"root\\\":{\\\"feature\\\": \\\"matchedTitle\\\",\\\"threshold\\\": \\\"0.5f\\\",\\\"left\\\":{\\\"value\\\" : \\\"-10\\\"},\\\"right\\\":{\\\"value\\\" : \\\"9\\\"}}}]}\");\n\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"*:*\");\n    query.add(\"fl\", \"*, score,fv:[fv]\");\n    query.add(\"rows\", \"4\");\n    query.add(\"rq\", \"{!ltr model=nomatchmodel4 reRankDocs=4}\");\n\n    final String docs0fv_dense_csv = FeatureLoggerTestUtils.toFeatureVector(\n        \"nomatchfeature4\",\"0.0\");\n    final String docs0fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector();\n\n    final String docs0fv_default_csv = chooseDefaultFeatureVector(docs0fv_dense_csv, docs0fv_sparse_csv);\n\n    assertJQ(\"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/score==0.0\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[0]/fv=='\"+docs0fv_default_csv+\"'\");\n  }\n\n","sourceOld":"  @Test\n  public void tesOnlyNoMatchFeaturesInStoreAndModelReturnsNonzeroScore() throws Exception {\n    // Tests model with all no matching features but expects a non 0 score\n    //  MultipleAdditiveTrees will return scores even for docs without any feature matches\n    loadModel(\n        \"nomatchmodel4\",\n        MultipleAdditiveTreesModel.class.getCanonicalName(),\n        new String[] {\"nomatchfeature4\"},\n        \"noMatchFeaturesStore\",\n        \"{\\\"trees\\\":[{\\\"weight\\\":\\\"1f\\\", \\\"root\\\":{\\\"feature\\\": \\\"matchedTitle\\\",\\\"threshold\\\": \\\"0.5f\\\",\\\"left\\\":{\\\"value\\\" : \\\"-10\\\"},\\\"right\\\":{\\\"value\\\" : \\\"9\\\"}}}]}\");\n\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"*:*\");\n    query.add(\"fl\", \"*, score,fv:[fv]\");\n    query.add(\"rows\", \"4\");\n    query.add(\"rq\", \"{!ltr model=nomatchmodel4 reRankDocs=4}\");\n\n    final String docs0fv_dense_csv = FeatureLoggerTestUtils.toFeatureVector(\n        \"nomatchfeature4\",\"0.0\");\n    final String docs0fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector();\n\n    final String docs0fv_default_csv = chooseDefaultFeatureVector(docs0fv_dense_csv, docs0fv_sparse_csv);\n\n    assertJQ(\"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/score==0.0\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[0]/fv=='\"+docs0fv_default_csv+\"'\");\n  }\n\n","bugFix":["58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f906c3206e7eb174774f938416460e39170d819","date":1518202619,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestNoMatchSolrFeature#tesOnlyNoMatchFeaturesInStoreAndModelReturnsNonzeroScore().mjava","pathOld":"solr/contrib/ltr/src/test/org/apache/solr/ltr/feature/TestNoMatchSolrFeature#tesOnlyNoMatchFeaturesInStoreAndModelReturnsNonzeroScore().mjava","sourceNew":"  @Test\n  public void tesOnlyNoMatchFeaturesInStoreAndModelReturnsNonzeroScore() throws Exception {\n    // Tests model with all no matching features but expects a non 0 score\n    //  MultipleAdditiveTrees will return scores even for docs without any feature matches\n    loadModel(\n        \"nomatchmodel4\",\n        MultipleAdditiveTreesModel.class.getName(),\n        new String[] {\"nomatchfeature4\"},\n        \"noMatchFeaturesStore\",\n        \"{\\\"trees\\\":[{\\\"weight\\\":\\\"1f\\\", \\\"root\\\":{\\\"feature\\\": \\\"matchedTitle\\\",\\\"threshold\\\": \\\"0.5f\\\",\\\"left\\\":{\\\"value\\\" : \\\"-10\\\"},\\\"right\\\":{\\\"value\\\" : \\\"9\\\"}}}]}\");\n\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"*:*\");\n    query.add(\"fl\", \"*, score,fv:[fv]\");\n    query.add(\"rows\", \"4\");\n    query.add(\"rq\", \"{!ltr model=nomatchmodel4 reRankDocs=4}\");\n\n    final String docs0fv_dense_csv = FeatureLoggerTestUtils.toFeatureVector(\n        \"nomatchfeature4\",\"0.0\");\n    final String docs0fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector();\n\n    final String docs0fv_default_csv = chooseDefaultFeatureVector(docs0fv_dense_csv, docs0fv_sparse_csv);\n\n    assertJQ(\"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/score==0.0\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[0]/fv=='\"+docs0fv_default_csv+\"'\");\n  }\n\n","sourceOld":"  @Test\n  public void tesOnlyNoMatchFeaturesInStoreAndModelReturnsNonzeroScore() throws Exception {\n    // Tests model with all no matching features but expects a non 0 score\n    //  MultipleAdditiveTrees will return scores even for docs without any feature matches\n    loadModel(\n        \"nomatchmodel4\",\n        MultipleAdditiveTreesModel.class.getCanonicalName(),\n        new String[] {\"nomatchfeature4\"},\n        \"noMatchFeaturesStore\",\n        \"{\\\"trees\\\":[{\\\"weight\\\":\\\"1f\\\", \\\"root\\\":{\\\"feature\\\": \\\"matchedTitle\\\",\\\"threshold\\\": \\\"0.5f\\\",\\\"left\\\":{\\\"value\\\" : \\\"-10\\\"},\\\"right\\\":{\\\"value\\\" : \\\"9\\\"}}}]}\");\n\n    final SolrQuery query = new SolrQuery();\n    query.setQuery(\"*:*\");\n    query.add(\"fl\", \"*, score,fv:[fv]\");\n    query.add(\"rows\", \"4\");\n    query.add(\"rq\", \"{!ltr model=nomatchmodel4 reRankDocs=4}\");\n\n    final String docs0fv_dense_csv = FeatureLoggerTestUtils.toFeatureVector(\n        \"nomatchfeature4\",\"0.0\");\n    final String docs0fv_sparse_csv = FeatureLoggerTestUtils.toFeatureVector();\n\n    final String docs0fv_default_csv = chooseDefaultFeatureVector(docs0fv_dense_csv, docs0fv_sparse_csv);\n\n    assertJQ(\"/query\" + query.toQueryString(),\n        \"/response/docs/[0]/score==0.0\");\n    assertJQ(\"/query\" + query.toQueryString(), \"/response/docs/[0]/fv=='\"+docs0fv_default_csv+\"'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97843b36f201934938da5d3392d87b90624dfe6b":["58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"bf344c7efad3160a74c52ef1fd53f535978fc5b7":["97843b36f201934938da5d3392d87b90624dfe6b"],"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","58c36d634c9789cb739fbd175c1a8d50b3303f6b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f906c3206e7eb174774f938416460e39170d819"],"3f906c3206e7eb174774f938416460e39170d819":["97843b36f201934938da5d3392d87b90624dfe6b","bf344c7efad3160a74c52ef1fd53f535978fc5b7"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["9720b151fde2073f4e401450f4574e5f31c2d0ff","97843b36f201934938da5d3392d87b90624dfe6b"]},"commit2Childs":{"97843b36f201934938da5d3392d87b90624dfe6b":["bf344c7efad3160a74c52ef1fd53f535978fc5b7","3f906c3206e7eb174774f938416460e39170d819","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"bf344c7efad3160a74c52ef1fd53f535978fc5b7":["3f906c3206e7eb174774f938416460e39170d819"],"58c36d634c9789cb739fbd175c1a8d50b3303f6b":["97843b36f201934938da5d3392d87b90624dfe6b","9720b151fde2073f4e401450f4574e5f31c2d0ff"],"9720b151fde2073f4e401450f4574e5f31c2d0ff":["f03e4bed5023ec3ef93a771b8888cae991cf448d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["58c36d634c9789cb739fbd175c1a8d50b3303f6b","9720b151fde2073f4e401450f4574e5f31c2d0ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"3f906c3206e7eb174774f938416460e39170d819":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}