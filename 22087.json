{"path":"solr/core/src/java/org/apache/solr/search/join/CrossCollectionJoinQuery#CrossCollectionJoinQuery(String,String,String,String,String,String,boolean,int,SolrParams).mjava","commits":[{"id":"e62a54d8f17b7c7b5d395bad453c470cf4039a6f","date":1593091560,"type":1,"author":"Dan Fox","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/CrossCollectionJoinQuery#CrossCollectionJoinQuery(String,String,String,String,String,String,boolean,int,SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/XCJFQuery#XCJFQuery(String,String,String,String,String,String,boolean,int,SolrParams).mjava","sourceNew":"  public CrossCollectionJoinQuery(String query, String zkHost, String solrUrl,\n                                  String collection, String fromField, String toField,\n                                  boolean routedByJoinKey, int ttl, SolrParams otherParams) {\n\n    this.query = query;\n    this.zkHost = zkHost;\n    this.solrUrl = solrUrl;\n    this.collection = collection;\n    this.fromField = fromField;\n    this.toField = toField;\n    this.routedByJoinKey = routedByJoinKey;\n\n    this.timestamp = System.nanoTime();\n    this.ttl = ttl;\n\n    this.otherParams = otherParams;\n    // SolrParams doesn't implement equals(), so use this string to compare them\n    if (otherParams != null) {\n      this.otherParamsString = otherParams.toString();\n    }\n  }\n\n","sourceOld":"  public XCJFQuery(String query, String zkHost, String solrUrl, String collection, String fromField, String toField,\n                   boolean routedByJoinKey, int ttl, SolrParams otherParams) {\n\n    this.query = query;\n    this.zkHost = zkHost;\n    this.solrUrl = solrUrl;\n    this.collection = collection;\n    this.fromField = fromField;\n    this.toField = toField;\n    this.routedByJoinKey = routedByJoinKey;\n\n    this.timestamp = System.nanoTime();\n    this.ttl = ttl;\n\n    this.otherParams = otherParams;\n    // SolrParams doesn't implement equals(), so use this string to compare them\n    if (otherParams != null) {\n      this.otherParamsString = otherParams.toString();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e62a54d8f17b7c7b5d395bad453c470cf4039a6f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e62a54d8f17b7c7b5d395bad453c470cf4039a6f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e62a54d8f17b7c7b5d395bad453c470cf4039a6f"],"e62a54d8f17b7c7b5d395bad453c470cf4039a6f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}