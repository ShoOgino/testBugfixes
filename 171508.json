{"path":"lucene/core/src/java/org/apache/lucene/util/IOUtils#[E-extends-Exception]_closeWhileHandlingException(E,Iterable[#-extends-Closeable]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#[E-extends-Exception]_closeWhileHandlingException(E,Iterable[#-extends-Closeable]).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/IOUtils#[E-extends-Exception]_closeWhileHandlingException(E,Iterable[#-extends-Closeable]).mjava","sourceNew":"  /** @see #closeWhileHandlingException(Exception, Closeable...) */\n  public static <E extends Exception> void closeWhileHandlingException(E priorException, Iterable<? extends Closeable> objects) throws E, IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed((priorException == null) ? th : priorException, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (priorException != null) {\n      throw priorException;\n    } else if (th != null) {\n      if (th instanceof IOException) throw (IOException) th;\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      throw new RuntimeException(th);\n    }\n  }\n\n","sourceOld":"  /** @see #closeWhileHandlingException(Exception, Closeable...) */\n  public static <E extends Exception> void closeWhileHandlingException(E priorException, Iterable<? extends Closeable> objects) throws E, IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed((priorException == null) ? th : priorException, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (priorException != null) {\n      throw priorException;\n    } else if (th != null) {\n      if (th instanceof IOException) throw (IOException) th;\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      throw new RuntimeException(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3b4a63b6b0155323dde6b827e0dc22a43580753","date":1346168671,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#[E-extends-Exception]_closeWhileHandlingException(E,Iterable[#-extends-Closeable]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#[E-extends-Exception]_closeWhileHandlingException(E,Iterable[#-extends-Closeable]).mjava","sourceNew":"  /**\n   * Closes all given <tt>Closeable</tt>s, suppressing all thrown exceptions. \n   * @see #closeWhileHandlingException(Exception, Closeable...) */\n  public static <E extends Exception> void closeWhileHandlingException(E priorException, Iterable<? extends Closeable> objects) throws E, IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed((priorException == null) ? th : priorException, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (priorException != null) {\n      throw priorException;\n    } else if (th != null) {\n      if (th instanceof IOException) throw (IOException) th;\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      throw new RuntimeException(th);\n    }\n  }\n\n","sourceOld":"  /** @see #closeWhileHandlingException(Exception, Closeable...) */\n  public static <E extends Exception> void closeWhileHandlingException(E priorException, Iterable<? extends Closeable> objects) throws E, IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed((priorException == null) ? th : priorException, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (priorException != null) {\n      throw priorException;\n    } else if (th != null) {\n      if (th instanceof IOException) throw (IOException) th;\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      throw new RuntimeException(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#[E-extends-Exception]_closeWhileHandlingException(E,Iterable[#-extends-Closeable]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#[E-extends-Exception]_closeWhileHandlingException(E,Iterable[#-extends-Closeable]).mjava","sourceNew":"  /**\n   * Closes all given <tt>Closeable</tt>s, suppressing all thrown exceptions. \n   * @see #closeWhileHandlingException(Exception, Closeable...) */\n  public static <E extends Exception> void closeWhileHandlingException(E priorException, Iterable<? extends Closeable> objects) throws E, IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed((priorException == null) ? th : priorException, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (priorException != null) {\n      throw priorException;\n    } else if (th != null) {\n      if (th instanceof IOException) throw (IOException) th;\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      throw new RuntimeException(th);\n    }\n  }\n\n","sourceOld":"  /** @see #closeWhileHandlingException(Exception, Closeable...) */\n  public static <E extends Exception> void closeWhileHandlingException(E priorException, Iterable<? extends Closeable> objects) throws E, IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed((priorException == null) ? th : priorException, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (priorException != null) {\n      throw priorException;\n    } else if (th != null) {\n      if (th instanceof IOException) throw (IOException) th;\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      throw new RuntimeException(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666","date":1381263930,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#[E-extends-Exception]_closeWhileHandlingException(E,Iterable[#-extends-Closeable]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#[E-extends-Exception]_closeWhileHandlingException(E,Iterable[#-extends-Closeable]).mjava","sourceNew":"  /**\n   * Closes all given <tt>Closeable</tt>s, suppressing all thrown exceptions. \n   * @see #closeWhileHandlingException(Exception, Closeable...) */\n  public static <E extends Exception> void closeWhileHandlingException(E priorException, Iterable<? extends Closeable> objects) throws E, IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed((priorException == null) ? th : priorException, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (priorException != null) {\n      throw priorException;\n    } else {\n      reThrow(th);\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes all given <tt>Closeable</tt>s, suppressing all thrown exceptions. \n   * @see #closeWhileHandlingException(Exception, Closeable...) */\n  public static <E extends Exception> void closeWhileHandlingException(E priorException, Iterable<? extends Closeable> objects) throws E, IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed((priorException == null) ? th : priorException, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (priorException != null) {\n      throw priorException;\n    } else if (th != null) {\n      if (th instanceof IOException) throw (IOException) th;\n      if (th instanceof RuntimeException) throw (RuntimeException) th;\n      if (th instanceof Error) throw (Error) th;\n      throw new RuntimeException(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43e3527ed736c46c0f0ab28181937b9de5ef7c63","date":1399502658,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#[E-extends-Exception]_closeWhileHandlingException(E,Iterable[#-extends-Closeable]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Closes all given <tt>Closeable</tt>s, suppressing all thrown exceptions. \n   * @see #closeWhileHandlingException(Exception, Closeable...) */\n  public static <E extends Exception> void closeWhileHandlingException(E priorException, Iterable<? extends Closeable> objects) throws E, IOException {\n    Throwable th = null;\n\n    for (Closeable object : objects) {\n      try {\n        if (object != null) {\n          object.close();\n        }\n      } catch (Throwable t) {\n        addSuppressed((priorException == null) ? th : priorException, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (priorException != null) {\n      throw priorException;\n    } else {\n      reThrow(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666":["a3b4a63b6b0155323dde6b827e0dc22a43580753"],"43e3527ed736c46c0f0ab28181937b9de5ef7c63":["8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666"],"a3b4a63b6b0155323dde6b827e0dc22a43580753":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05a14b2611ead08655a2b2bdc61632eb31316e57":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","a3b4a63b6b0155323dde6b827e0dc22a43580753"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["43e3527ed736c46c0f0ab28181937b9de5ef7c63"]},"commit2Childs":{"8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666":["43e3527ed736c46c0f0ab28181937b9de5ef7c63"],"a3b4a63b6b0155323dde6b827e0dc22a43580753":["8da3c22a3b1a00ae6e2664f3ac0d82cfa3a8f666","05a14b2611ead08655a2b2bdc61632eb31316e57"],"43e3527ed736c46c0f0ab28181937b9de5ef7c63":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a3b4a63b6b0155323dde6b827e0dc22a43580753","05a14b2611ead08655a2b2bdc61632eb31316e57"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}