{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ClobTransformer#readFromClob(Clob).mjava","commits":[{"id":"5db4e847e2754f60ffa4d9077a776a2acb2cae4c","date":1229065329,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ClobTransformer#readFromClob(Clob).mjava","pathOld":"/dev/null","sourceNew":"  private String readFromClob(Clob clob) {\n    Reader reader = FieldReaderDataSource.readCharStream(clob);\n    StringBuilder sb = new StringBuilder();\n    char[] buf = new char[1024];\n    int len;\n    try {\n      while ((len = reader.read(buf)) != 0) {\n        sb.append(buf, 0, len);\n      }\n    } catch (IOException e) {\n      DataImportHandlerException.wrapAndThrow(DataImportHandlerException.SEVERE, e);\n    }\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["fa73cafda7a34afed2e541e40fe5c2509f66664f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fa73cafda7a34afed2e541e40fe5c2509f66664f","date":1236666383,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ClobTransformer#readFromClob(Clob).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ClobTransformer#readFromClob(Clob).mjava","sourceNew":"  private String readFromClob(Clob clob) {\n    Reader reader = FieldReaderDataSource.readCharStream(clob);\n    StringBuilder sb = new StringBuilder();\n    char[] buf = new char[1024];\n    int len;\n    try {\n      while ((len = reader.read(buf)) != -1) {\n        sb.append(buf, 0, len);\n      }\n    } catch (IOException e) {\n      DataImportHandlerException.wrapAndThrow(DataImportHandlerException.SEVERE, e);\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  private String readFromClob(Clob clob) {\n    Reader reader = FieldReaderDataSource.readCharStream(clob);\n    StringBuilder sb = new StringBuilder();\n    char[] buf = new char[1024];\n    int len;\n    try {\n      while ((len = reader.read(buf)) != 0) {\n        sb.append(buf, 0, len);\n      }\n    } catch (IOException e) {\n      DataImportHandlerException.wrapAndThrow(DataImportHandlerException.SEVERE, e);\n    }\n    return sb.toString();\n  }\n\n","bugFix":["5db4e847e2754f60ffa4d9077a776a2acb2cae4c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ClobTransformer#readFromClob(Clob).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/ClobTransformer#readFromClob(Clob).mjava","sourceNew":"  private String readFromClob(Clob clob) {\n    Reader reader = FieldReaderDataSource.readCharStream(clob);\n    StringBuilder sb = new StringBuilder();\n    char[] buf = new char[1024];\n    int len;\n    try {\n      while ((len = reader.read(buf)) != -1) {\n        sb.append(buf, 0, len);\n      }\n    } catch (IOException e) {\n      DataImportHandlerException.wrapAndThrow(DataImportHandlerException.SEVERE, e);\n    }\n    return sb.toString();\n  }\n\n","sourceOld":"  private String readFromClob(Clob clob) {\n    Reader reader = FieldReaderDataSource.readCharStream(clob);\n    StringBuilder sb = new StringBuilder();\n    char[] buf = new char[1024];\n    int len;\n    try {\n      while ((len = reader.read(buf)) != -1) {\n        sb.append(buf, 0, len);\n      }\n    } catch (IOException e) {\n      DataImportHandlerException.wrapAndThrow(DataImportHandlerException.SEVERE, e);\n    }\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5db4e847e2754f60ffa4d9077a776a2acb2cae4c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"fa73cafda7a34afed2e541e40fe5c2509f66664f":["5db4e847e2754f60ffa4d9077a776a2acb2cae4c"],"ad94625fb8d088209f46650c8097196fec67f00c":["fa73cafda7a34afed2e541e40fe5c2509f66664f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5db4e847e2754f60ffa4d9077a776a2acb2cae4c":["fa73cafda7a34afed2e541e40fe5c2509f66664f"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["5db4e847e2754f60ffa4d9077a776a2acb2cae4c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fa73cafda7a34afed2e541e40fe5c2509f66664f":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}