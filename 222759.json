{"path":"src/java/org/apache/lucene/store/RAMDirectory#makeLock(String).mjava","commits":[{"id":"3a10198efba39d45c46f8714efe9a15616f9c79d","date":1001608022,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMDirectory#makeLock(String).mjava","pathOld":"/dev/null","sourceNew":"  /** Construct a {@link Lock}.\n   * @param name the name of the lock file\n   */\n  public final Lock makeLock(final String name) {\n    return new Lock() {\n\tpublic boolean obtain() throws IOException {\n\t  synchronized (files) {\n\t    if (!fileExists(name)) {\n\t      createFile(name).close();\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\t}\n\tpublic void release() {\n\t  deleteFile(name);\n\t}\n      };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12ee37ea5a0061cfa8d91d87109b11dcf89142c4","date":1051818618,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMDirectory#makeLock(String).mjava","pathOld":"src/java/org/apache/lucene/store/RAMDirectory#makeLock(String).mjava","sourceNew":"  /** Construct a {@link Lock}.\n   * @param name the name of the lock file\n   */\n  public final Lock makeLock(final String name) {\n    return new Lock() {\n\tpublic boolean obtain() throws IOException {\n\t  synchronized (files) {\n\t    if (!fileExists(name)) {\n\t      createFile(name).close();\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\t}\n\tpublic void release() {\n\t  deleteFile(name);\n\t}\n\tpublic boolean isLocked() {\n\t  return fileExists(name);\n\t}\n      };\n  }\n\n","sourceOld":"  /** Construct a {@link Lock}.\n   * @param name the name of the lock file\n   */\n  public final Lock makeLock(final String name) {\n    return new Lock() {\n\tpublic boolean obtain() throws IOException {\n\t  synchronized (files) {\n\t    if (!fileExists(name)) {\n\t      createFile(name).close();\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\t}\n\tpublic void release() {\n\t  deleteFile(name);\n\t}\n      };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"501fc3e181d3b5245ce8a7b168b5a5d0f32b0bbb","date":1064526358,"type":3,"author":"Dmitry Serebrennikov","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMDirectory#makeLock(String).mjava","pathOld":"src/java/org/apache/lucene/store/RAMDirectory#makeLock(String).mjava","sourceNew":"  /** Construct a {@link Lock}.\n   * @param name the name of the lock file\n   */\n  public final Lock makeLock(final String name) {\n    return new Lock() {\n        public boolean obtain() throws IOException {\n          synchronized (files) {\n            if (!fileExists(name)) {\n              createFile(name).close();\n              return true;\n            }\n            return false;\n          }\n        }\n        public void release() {\n          deleteFile(name);\n        }\n        public boolean isLocked() {\n          return fileExists(name);\n        }\n      };\n  }\n\n","sourceOld":"  /** Construct a {@link Lock}.\n   * @param name the name of the lock file\n   */\n  public final Lock makeLock(final String name) {\n    return new Lock() {\n\tpublic boolean obtain() throws IOException {\n\t  synchronized (files) {\n\t    if (!fileExists(name)) {\n\t      createFile(name).close();\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\t}\n\tpublic void release() {\n\t  deleteFile(name);\n\t}\n\tpublic boolean isLocked() {\n\t  return fileExists(name);\n\t}\n      };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b7c5338d3bda9e7626a720e14969952010c8dec","date":1069160713,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMDirectory#makeLock(String).mjava","pathOld":"src/java/org/apache/lucene/store/RAMDirectory#makeLock(String).mjava","sourceNew":"  /** Construct a {@link Lock}.\n   * @param name the name of the lock file\n   */\n  public final Lock makeLock(final String name) {\n    return new Lock() {\n      public boolean obtain() throws IOException {\n        synchronized (files) {\n          if (!fileExists(name)) {\n            createFile(name).close();\n            return true;\n          }\n          return false;\n        }\n      }\n      public void release() {\n        deleteFile(name);\n      }\n      public boolean isLocked() {\n        return fileExists(name);\n      }\n    };\n  }\n\n","sourceOld":"  /** Construct a {@link Lock}.\n   * @param name the name of the lock file\n   */\n  public final Lock makeLock(final String name) {\n    return new Lock() {\n        public boolean obtain() throws IOException {\n          synchronized (files) {\n            if (!fileExists(name)) {\n              createFile(name).close();\n              return true;\n            }\n            return false;\n          }\n        }\n        public void release() {\n          deleteFile(name);\n        }\n        public boolean isLocked() {\n          return fileExists(name);\n        }\n      };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77f2eb0d13b43db148a5e4f61c166fa3688a2df9","date":1096404326,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMDirectory#makeLock(String).mjava","pathOld":"src/java/org/apache/lucene/store/RAMDirectory#makeLock(String).mjava","sourceNew":"  /** Construct a {@link Lock}.\n   * @param name the name of the lock file\n   */\n  public final Lock makeLock(final String name) {\n    return new Lock() {\n      public boolean obtain() throws IOException {\n        synchronized (files) {\n          if (!fileExists(name)) {\n            createOutput(name).close();\n            return true;\n          }\n          return false;\n        }\n      }\n      public void release() {\n        deleteFile(name);\n      }\n      public boolean isLocked() {\n        return fileExists(name);\n      }\n    };\n  }\n\n","sourceOld":"  /** Construct a {@link Lock}.\n   * @param name the name of the lock file\n   */\n  public final Lock makeLock(final String name) {\n    return new Lock() {\n      public boolean obtain() throws IOException {\n        synchronized (files) {\n          if (!fileExists(name)) {\n            createFile(name).close();\n            return true;\n          }\n          return false;\n        }\n      }\n      public void release() {\n        deleteFile(name);\n      }\n      public boolean isLocked() {\n        return fileExists(name);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c6bd70b660528bcf8dd3216ea1f7565ac220a20","date":1156813990,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/store/RAMDirectory#makeLock(String).mjava","sourceNew":null,"sourceOld":"  /** Construct a {@link Lock}.\n   * @param name the name of the lock file\n   */\n  public final Lock makeLock(final String name) {\n    return new Lock() {\n      public boolean obtain() throws IOException {\n        synchronized (files) {\n          if (!fileExists(name)) {\n            createOutput(name).close();\n            return true;\n          }\n          return false;\n        }\n      }\n      public void release() {\n        deleteFile(name);\n      }\n      public boolean isLocked() {\n        return fileExists(name);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5c6bd70b660528bcf8dd3216ea1f7565ac220a20":["77f2eb0d13b43db148a5e4f61c166fa3688a2df9"],"3a10198efba39d45c46f8714efe9a15616f9c79d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4b7c5338d3bda9e7626a720e14969952010c8dec":["501fc3e181d3b5245ce8a7b168b5a5d0f32b0bbb"],"77f2eb0d13b43db148a5e4f61c166fa3688a2df9":["4b7c5338d3bda9e7626a720e14969952010c8dec"],"12ee37ea5a0061cfa8d91d87109b11dcf89142c4":["3a10198efba39d45c46f8714efe9a15616f9c79d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5c6bd70b660528bcf8dd3216ea1f7565ac220a20"],"501fc3e181d3b5245ce8a7b168b5a5d0f32b0bbb":["12ee37ea5a0061cfa8d91d87109b11dcf89142c4"]},"commit2Childs":{"5c6bd70b660528bcf8dd3216ea1f7565ac220a20":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a10198efba39d45c46f8714efe9a15616f9c79d":["12ee37ea5a0061cfa8d91d87109b11dcf89142c4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a10198efba39d45c46f8714efe9a15616f9c79d"],"4b7c5338d3bda9e7626a720e14969952010c8dec":["77f2eb0d13b43db148a5e4f61c166fa3688a2df9"],"77f2eb0d13b43db148a5e4f61c166fa3688a2df9":["5c6bd70b660528bcf8dd3216ea1f7565ac220a20"],"12ee37ea5a0061cfa8d91d87109b11dcf89142c4":["501fc3e181d3b5245ce8a7b168b5a5d0f32b0bbb"],"501fc3e181d3b5245ce8a7b168b5a5d0f32b0bbb":["4b7c5338d3bda9e7626a720e14969952010c8dec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}