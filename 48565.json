{"path":"solr/core/src/test/org/apache/solr/schema/TestUseDocValuesAsStored#testMultivaluedOrdering().mjava","commits":[{"id":"395447e07e761f35219365cc947df55dc22b38c8","date":1457552444,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestUseDocValuesAsStored#testMultivaluedOrdering().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMultivaluedOrdering() throws Exception {\n    clearIndex();\n    \n    // multiValued=true, docValues=true, stored=true. Should return in original order\n    assertU(adoc(\"id\", \"1\", \"test_mvt_dvt_st_str\", \"cccc\", \"test_mvt_dvt_st_str\", \"aaaa\", \"test_mvt_dvt_st_str\", \"bbbb\"));\n    \n    // multiValued=true, docValues=true, stored=false. Should return in sorted order\n    assertU(adoc(\"id\", \"2\", \"test_mvt_dvt_sf_str\", \"cccc\", \"test_mvt_dvt_sf_str\", \"aaaa\", \"test_mvt_dvt_sf_str\", \"bbbb\"));\n    \n    // multiValued=true, docValues=false, stored=true. Should return in original order\n    assertU(adoc(\"id\", \"3\", \"test_mvt_dvf_st_str\", \"cccc\", \"test_mvt_dvf_st_str\", \"aaaa\", \"test_mvt_dvf_st_str\", \"bbbb\"));\n    \n    // multiValued=true, docValues=not specified, stored=true. Should return in original order\n    assertU(adoc(\"id\", \"4\", \"test_mvt_dvu_st_str\", \"cccc\", \"test_mvt_dvu_st_str\", \"aaaa\", \"test_mvt_dvu_st_str\", \"bbbb\"));\n    \n    assertU(commit());\n    \n    assertJQ(req(\"q\", \"id:1\", \"fl\", \"test_mvt_dvt_st_str\"), \n        \"/response/docs/[0]/test_mvt_dvt_st_str/[0]==cccc\",\n        \"/response/docs/[0]/test_mvt_dvt_st_str/[1]==aaaa\",\n        \"/response/docs/[0]/test_mvt_dvt_st_str/[2]==bbbb\");\n\n    // Currently, this test fails since stored=false. When SOLR-8740 is committed, it should not throw an exception\n    // and should succeed, returning the field in sorted order.\n    try {\n      assertJQ(req(\"q\", \"id:2\", \"fl\", \"test_mvt_dvt_sf_str\"),\n          \"/response/docs/[0]/test_mvt_dvt_sf_str/[0]==aaaa\",\n          \"/response/docs/[0]/test_mvt_dvt_sf_str/[1]==bbbb\",\n          \"/response/docs/[0]/test_mvt_dvt_sf_str/[2]==cccc\");\n    } catch (Exception e) {\n      // do nothing until SOLR-8740 is committed. At that point this should not throw an exception. \n      // NOTE: I think the test is correct after 8740 so just remove the try/catch\n    }\n    assertJQ(req(\"q\", \"id:3\", \"fl\", \"test_mvt_dvf_st_str\"),\n        \"/response/docs/[0]/test_mvt_dvf_st_str/[0]==cccc\",\n        \"/response/docs/[0]/test_mvt_dvf_st_str/[1]==aaaa\",\n        \"/response/docs/[0]/test_mvt_dvf_st_str/[2]==bbbb\");\n\n    assertJQ(req(\"q\", \"id:4\", \"fl\", \"test_mvt_dvu_st_str\"),\n        \"/response/docs/[0]/test_mvt_dvu_st_str/[0]==cccc\",\n        \"/response/docs/[0]/test_mvt_dvu_st_str/[1]==aaaa\",\n        \"/response/docs/[0]/test_mvt_dvu_st_str/[2]==bbbb\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"395447e07e761f35219365cc947df55dc22b38c8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["395447e07e761f35219365cc947df55dc22b38c8"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["395447e07e761f35219365cc947df55dc22b38c8"],"395447e07e761f35219365cc947df55dc22b38c8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}