{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/routing/NodePreferenceRulesComparator#compare(Object,Object).mjava","commits":[{"id":"833432c363468a5df50f87446a68015404b1fbcf","date":1572302961,"type":0,"author":"Houston Putman","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/routing/NodePreferenceRulesComparator#compare(Object,Object).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int compare(Object left, Object right) {\n    if (this.sortRules != null) {\n      for (PreferenceRule preferenceRule: this.sortRules) {\n        final boolean lhs;\n        final boolean rhs;\n        switch (preferenceRule.name) {\n          case ShardParams.SHARDS_PREFERENCE_REPLICA_TYPE:\n            lhs = hasReplicaType(left, preferenceRule.value);\n            rhs = hasReplicaType(right, preferenceRule.value);\n            break;\n          case ShardParams.SHARDS_PREFERENCE_REPLICA_LOCATION:\n            lhs = hasCoreUrlPrefix(left, preferenceRule.value);\n            rhs = hasCoreUrlPrefix(right, preferenceRule.value);\n            break;\n          case ShardParams.SHARDS_PREFERENCE_NODE_WITH_SAME_SYSPROP:\n            if (sysPropsCache == null) {\n              throw new IllegalArgumentException(\"Unable to get the NodesSysPropsCacher on sorting replicas by preference:\"+ preferenceRule.value);\n            }\n            lhs = hasSameMetric(left, preferenceRule.value);\n            rhs = hasSameMetric(right, preferenceRule.value);\n            break;\n          case ShardParams.SHARDS_PREFERENCE_REPLICA_BASE:\n            throw new IllegalArgumentException(\"only one base replica order may be specified in \"\n                + ShardParams.SHARDS_PREFERENCE + \", and it must be specified last\");\n          default:\n            throw new IllegalArgumentException(\"Invalid \" + ShardParams.SHARDS_PREFERENCE + \" type: \" + preferenceRule.name);\n        }\n        if (lhs != rhs) {\n          return lhs ? -1 : +1;\n        }\n      }\n    }\n    return 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"833432c363468a5df50f87446a68015404b1fbcf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["833432c363468a5df50f87446a68015404b1fbcf"]},"commit2Childs":{"833432c363468a5df50f87446a68015404b1fbcf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["833432c363468a5df50f87446a68015404b1fbcf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}