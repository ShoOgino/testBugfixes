{"path":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#StandardDirectoryReader(Directory,LeafReader[],IndexWriter,SegmentInfos,boolean).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#StandardDirectoryReader(Directory,LeafReader[],IndexWriter,SegmentInfos,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** called only from static open() methods */\n  StandardDirectoryReader(Directory directory, LeafReader[] readers, IndexWriter writer,\n    SegmentInfos sis, boolean applyAllDeletes) {\n    super(directory, readers);\n    this.writer = writer;\n    this.segmentInfos = sis;\n    this.applyAllDeletes = applyAllDeletes;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["98a04f56464afdffd4c430d6c47a0c868a38354e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"98b44240f64a2d6935543ff25faee750b29204eb","date":1424972040,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#StandardDirectoryReader(Directory,LeafReader[],IndexWriter,SegmentInfos,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#StandardDirectoryReader(Directory,LeafReader[],IndexWriter,SegmentInfos,boolean).mjava","sourceNew":"  /** called only from static open() methods */\n  StandardDirectoryReader(Directory directory, LeafReader[] readers, IndexWriter writer,\n    SegmentInfos sis, boolean applyAllDeletes) throws IOException {\n    super(directory, readers);\n    this.writer = writer;\n    this.segmentInfos = sis;\n    this.applyAllDeletes = applyAllDeletes;\n  }\n\n","sourceOld":"  /** called only from static open() methods */\n  StandardDirectoryReader(Directory directory, LeafReader[] readers, IndexWriter writer,\n    SegmentInfos sis, boolean applyAllDeletes) {\n    super(directory, readers);\n    this.writer = writer;\n    this.segmentInfos = sis;\n    this.applyAllDeletes = applyAllDeletes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"98a04f56464afdffd4c430d6c47a0c868a38354e","date":1424985833,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#StandardDirectoryReader(Directory,LeafReader[],IndexWriter,SegmentInfos,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#StandardDirectoryReader(Directory,LeafReader[],IndexWriter,SegmentInfos,boolean).mjava","sourceNew":"  /** called only from static open() methods */\n  StandardDirectoryReader(Directory directory, LeafReader[] readers, IndexWriter writer,\n    SegmentInfos sis, boolean applyAllDeletes) throws IOException {\n    super(directory, readers);\n    this.writer = writer;\n    this.segmentInfos = sis;\n    this.applyAllDeletes = applyAllDeletes;\n  }\n\n","sourceOld":"  /** called only from static open() methods */\n  StandardDirectoryReader(Directory directory, LeafReader[] readers, IndexWriter writer,\n    SegmentInfos sis, boolean applyAllDeletes) {\n    super(directory, readers);\n    this.writer = writer;\n    this.segmentInfos = sis;\n    this.applyAllDeletes = applyAllDeletes;\n  }\n\n","bugFix":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#StandardDirectoryReader(Directory,LeafReader[],IndexWriter,SegmentInfos,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#StandardDirectoryReader(Directory,LeafReader[],IndexWriter,SegmentInfos,boolean).mjava","sourceNew":"  /** called only from static open() methods */\n  StandardDirectoryReader(Directory directory, LeafReader[] readers, IndexWriter writer,\n    SegmentInfos sis, boolean applyAllDeletes) throws IOException {\n    super(directory, readers);\n    this.writer = writer;\n    this.segmentInfos = sis;\n    this.applyAllDeletes = applyAllDeletes;\n  }\n\n","sourceOld":"  /** called only from static open() methods */\n  StandardDirectoryReader(Directory directory, LeafReader[] readers, IndexWriter writer,\n    SegmentInfos sis, boolean applyAllDeletes) {\n    super(directory, readers);\n    this.writer = writer;\n    this.segmentInfos = sis;\n    this.applyAllDeletes = applyAllDeletes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d49a158012a8ff48f328a4558e4bfcffbaed16f","date":1453677440,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#StandardDirectoryReader(Directory,LeafReader[],IndexWriter,SegmentInfos,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#StandardDirectoryReader(Directory,LeafReader[],IndexWriter,SegmentInfos,boolean).mjava","sourceNew":"  /** called only from static open() methods */\n  StandardDirectoryReader(Directory directory, LeafReader[] readers, IndexWriter writer,\n                          SegmentInfos sis, boolean applyAllDeletes, boolean writeAllDeletes) throws IOException {\n    super(directory, readers);\n    this.writer = writer;\n    this.segmentInfos = sis;\n    this.applyAllDeletes = applyAllDeletes;\n    this.writeAllDeletes = writeAllDeletes;\n  }\n\n","sourceOld":"  /** called only from static open() methods */\n  StandardDirectoryReader(Directory directory, LeafReader[] readers, IndexWriter writer,\n    SegmentInfos sis, boolean applyAllDeletes) throws IOException {\n    super(directory, readers);\n    this.writer = writer;\n    this.segmentInfos = sis;\n    this.applyAllDeletes = applyAllDeletes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68496c2200e559fb7802f7575427b7a482659afb","date":1455207618,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#StandardDirectoryReader(Directory,LeafReader[],IndexWriter,SegmentInfos,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StandardDirectoryReader#StandardDirectoryReader(Directory,LeafReader[],IndexWriter,SegmentInfos,boolean).mjava","sourceNew":"  /** called only from static open() methods */\n  StandardDirectoryReader(Directory directory, LeafReader[] readers, IndexWriter writer,\n                          SegmentInfos sis, boolean applyAllDeletes, boolean writeAllDeletes) throws IOException {\n    super(directory, readers);\n    this.writer = writer;\n    this.segmentInfos = sis;\n    this.applyAllDeletes = applyAllDeletes;\n    this.writeAllDeletes = writeAllDeletes;\n  }\n\n","sourceOld":"  /** called only from static open() methods */\n  StandardDirectoryReader(Directory directory, LeafReader[] readers, IndexWriter writer,\n    SegmentInfos sis, boolean applyAllDeletes) throws IOException {\n    super(directory, readers);\n    this.writer = writer;\n    this.segmentInfos = sis;\n    this.applyAllDeletes = applyAllDeletes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["c9fb5f46e264daf5ba3860defe623a89d202dd87","98a04f56464afdffd4c430d6c47a0c868a38354e"],"98a04f56464afdffd4c430d6c47a0c868a38354e":["c9fb5f46e264daf5ba3860defe623a89d202dd87","98b44240f64a2d6935543ff25faee750b29204eb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"68496c2200e559fb7802f7575427b7a482659afb":["98a04f56464afdffd4c430d6c47a0c868a38354e","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"98b44240f64a2d6935543ff25faee750b29204eb":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["68496c2200e559fb7802f7575427b7a482659afb"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["98a04f56464afdffd4c430d6c47a0c868a38354e"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"98a04f56464afdffd4c430d6c47a0c868a38354e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","68496c2200e559fb7802f7575427b7a482659afb","0d49a158012a8ff48f328a4558e4bfcffbaed16f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"68496c2200e559fb7802f7575427b7a482659afb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"98b44240f64a2d6935543ff25faee750b29204eb":["98a04f56464afdffd4c430d6c47a0c868a38354e"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","98a04f56464afdffd4c430d6c47a0c868a38354e","98b44240f64a2d6935543ff25faee750b29204eb"],"0d49a158012a8ff48f328a4558e4bfcffbaed16f":["68496c2200e559fb7802f7575427b7a482659afb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}