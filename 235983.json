{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#runImpl(CommandLine).mjava","commits":[{"id":"4ca20be81c9284c840498143264e583ccbb8525a","date":1438705932,"type":2,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#runTool(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String zkHost = getZkHost(cli);\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \"+cli.getOptionValue(\"solrUrl\")+\n            \" is running in standalone server mode, please use the create_core command instead;\\n\" +\n            \"create_collection can only be used when running in SolrCloud mode.\\n\");\n      }\n\n      try (CloudSolrClient cloudSolrClient = new CloudSolrClient(zkHost)) {\n        echo(\"\\nConnecting to ZooKeeper at \" + zkHost+\" ...\");\n        cloudSolrClient.connect();\n        runCloudTool(cloudSolrClient, cli);\n      }\n    }\n\n","sourceOld":"    public int runTool(CommandLine cli) throws Exception {\n\n      String zkHost = getZkHost(cli);\n      if (zkHost == null) {\n        System.err.println(\"\\nERROR: Solr at \"+cli.getOptionValue(\"solrUrl\")+\n            \" is running in standalone server mode, please use the create_core command instead;\\n\" +\n            \"create_collection can only be used when running in SolrCloud mode.\\n\");\n        return 1;\n      }\n\n      int toolExitStatus = 0;\n\n      try (CloudSolrClient cloudSolrClient = new CloudSolrClient(zkHost)) {\n        System.out.println(\"Connecting to ZooKeeper at \" + zkHost);\n        cloudSolrClient.connect();\n        toolExitStatus = runCloudTool(cloudSolrClient, cli);\n      } catch (Exception exc) {\n        // since this is a CLI, spare the user the stacktrace\n        String excMsg = exc.getMessage();\n        if (excMsg != null) {\n          System.err.println(\"\\nERROR: \"+excMsg+\"\\n\");\n          toolExitStatus = 1;\n        } else {\n          throw exc;\n        }\n      }\n\n      return toolExitStatus;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String zkHost = getZkHost(cli);\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \"+cli.getOptionValue(\"solrUrl\")+\n            \" is running in standalone server mode, please use the create_core command instead;\\n\" +\n            \"create_collection can only be used when running in SolrCloud mode.\\n\");\n      }\n\n      try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder().withZkHost(zkHost).build()) {\n        echo(\"\\nConnecting to ZooKeeper at \" + zkHost+\" ...\");\n        cloudSolrClient.connect();\n        runCloudTool(cloudSolrClient, cli);\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String zkHost = getZkHost(cli);\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \"+cli.getOptionValue(\"solrUrl\")+\n            \" is running in standalone server mode, please use the create_core command instead;\\n\" +\n            \"create_collection can only be used when running in SolrCloud mode.\\n\");\n      }\n\n      try (CloudSolrClient cloudSolrClient = new CloudSolrClient(zkHost)) {\n        echo(\"\\nConnecting to ZooKeeper at \" + zkHost+\" ...\");\n        cloudSolrClient.connect();\n        runCloudTool(cloudSolrClient, cli);\n      }\n    }\n\n","bugFix":null,"bugIntro":["c7d763eff38c4e1702b60d626f9c8d39f9ad8af8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String zkHost = getZkHost(cli);\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \"+cli.getOptionValue(\"solrUrl\")+\n            \" is running in standalone server mode, please use the create_core command instead;\\n\" +\n            \"create_collection can only be used when running in SolrCloud mode.\\n\");\n      }\n\n      try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder().withZkHost(zkHost).build()) {\n        echo(\"\\nConnecting to ZooKeeper at \" + zkHost+\" ...\");\n        cloudSolrClient.connect();\n        runCloudTool(cloudSolrClient, cli);\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String zkHost = getZkHost(cli);\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \"+cli.getOptionValue(\"solrUrl\")+\n            \" is running in standalone server mode, please use the create_core command instead;\\n\" +\n            \"create_collection can only be used when running in SolrCloud mode.\\n\");\n      }\n\n      try (CloudSolrClient cloudSolrClient = new CloudSolrClient(zkHost)) {\n        echo(\"\\nConnecting to ZooKeeper at \" + zkHost+\" ...\");\n        cloudSolrClient.connect();\n        runCloudTool(cloudSolrClient, cli);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"86d2df3ca94d97c62f70b0d321f5f597de2d3eb3","date":1503399053,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String zkHost = getZkHost(cli);\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \"+cli.getOptionValue(\"solrUrl\")+\n            \" is running in standalone server mode, please use the create_core command instead;\\n\" +\n            \"create_collection can only be used when running in SolrCloud mode.\\n\");\n      }\n\n      try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder().withZkHost(zkHost).build()) {\n        echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost+\" ...\", cli);\n        cloudSolrClient.connect();\n        runCloudTool(cloudSolrClient, cli);\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String zkHost = getZkHost(cli);\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \"+cli.getOptionValue(\"solrUrl\")+\n            \" is running in standalone server mode, please use the create_core command instead;\\n\" +\n            \"create_collection can only be used when running in SolrCloud mode.\\n\");\n      }\n\n      try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder().withZkHost(zkHost).build()) {\n        echo(\"\\nConnecting to ZooKeeper at \" + zkHost+\" ...\");\n        cloudSolrClient.connect();\n        runCloudTool(cloudSolrClient, cli);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String zkHost = getZkHost(cli);\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \"+cli.getOptionValue(\"solrUrl\")+\n            \" is running in standalone server mode, please use the create_core command instead;\\n\" +\n            \"create_collection can only be used when running in SolrCloud mode.\\n\");\n      }\n\n      try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder().withZkHost(zkHost).build()) {\n        echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost+\" ...\", cli);\n        cloudSolrClient.connect();\n        runCloudTool(cloudSolrClient, cli);\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n\n      String zkHost = getZkHost(cli);\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \"+cli.getOptionValue(\"solrUrl\")+\n            \" is running in standalone server mode, please use the create_core command instead;\\n\" +\n            \"create_collection can only be used when running in SolrCloud mode.\\n\");\n      }\n\n      try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder().withZkHost(zkHost).build()) {\n        echo(\"\\nConnecting to ZooKeeper at \" + zkHost+\" ...\");\n        cloudSolrClient.connect();\n        runCloudTool(cloudSolrClient, cli);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7d763eff38c4e1702b60d626f9c8d39f9ad8af8","date":1520696743,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String zkHost = getZkHost(cli);\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \"+cli.getOptionValue(\"solrUrl\")+\n            \" is running in standalone server mode, please use the create_core command instead;\\n\" +\n            \"create_collection can only be used when running in SolrCloud mode.\\n\");\n      }\n\n      try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zkHost), Optional.empty()).build()) {\n        echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost+\" ...\", cli);\n        cloudSolrClient.connect();\n        runCloudTool(cloudSolrClient, cli);\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String zkHost = getZkHost(cli);\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \"+cli.getOptionValue(\"solrUrl\")+\n            \" is running in standalone server mode, please use the create_core command instead;\\n\" +\n            \"create_collection can only be used when running in SolrCloud mode.\\n\");\n      }\n\n      try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder().withZkHost(zkHost).build()) {\n        echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost+\" ...\", cli);\n        cloudSolrClient.connect();\n        runCloudTool(cloudSolrClient, cli);\n      }\n    }\n\n","bugFix":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b79a5db147a1c6f95d1625ddbc3561ef56955225","date":1528848080,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String zkHost = getZkHost(cli);\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \"+cli.getOptionValue(\"solrUrl\")+\n            \" is running in standalone server mode, please use the create_core command instead;\\n\" +\n            \"create_collection can only be used when running in SolrCloud mode.\\n\");\n      }\n\n      try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zkHost), Optional.empty()).build()) {\n        echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost+\" ...\", cli);\n        cloudSolrClient.connect();\n        runCloudTool(cloudSolrClient, cli);\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String zkHost = getZkHost(cli);\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \"+cli.getOptionValue(\"solrUrl\")+\n            \" is running in standalone server mode, please use the create_core command instead;\\n\" +\n            \"create_collection can only be used when running in SolrCloud mode.\\n\");\n      }\n\n      try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zkHost), Optional.empty()).build()) {\n        echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost+\" ...\", cli);\n        cloudSolrClient.connect();\n        runCloudTool(cloudSolrClient, cli);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String zkHost = getZkHost(cli);\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \"+cli.getOptionValue(\"solrUrl\")+\n            \" is running in standalone server mode, please use the create_core command instead;\\n\" +\n            \"create_collection can only be used when running in SolrCloud mode.\\n\");\n      }\n\n      try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zkHost), Optional.empty()).build()) {\n        echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost+\" ...\", cli);\n        cloudSolrClient.connect();\n        runCloudTool(cloudSolrClient, cli);\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String zkHost = getZkHost(cli);\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \"+cli.getOptionValue(\"solrUrl\")+\n            \" is running in standalone server mode, please use the create_core command instead;\\n\" +\n            \"create_collection can only be used when running in SolrCloud mode.\\n\");\n      }\n\n      try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zkHost), Optional.empty()).build()) {\n        echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost+\" ...\", cli);\n        cloudSolrClient.connect();\n        runCloudTool(cloudSolrClient, cli);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#runImpl(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.CreateCollectionTool#runImpl(CommandLine).mjava","sourceNew":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String zkHost = getZkHost(cli);\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \"+cli.getOptionValue(\"solrUrl\")+\n            \" is running in standalone server mode, please use the create_core command instead;\\n\" +\n            \"create_collection can only be used when running in SolrCloud mode.\\n\");\n      }\n\n      try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zkHost), Optional.empty()).build()) {\n        echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost+\" ...\", cli);\n        cloudSolrClient.connect();\n        runCloudTool(cloudSolrClient, cli);\n      }\n    }\n\n","sourceOld":"    protected void runImpl(CommandLine cli) throws Exception {\n      raiseLogLevelUnlessVerbose(cli);\n      String zkHost = getZkHost(cli);\n      if (zkHost == null) {\n        throw new IllegalStateException(\"Solr at \"+cli.getOptionValue(\"solrUrl\")+\n            \" is running in standalone server mode, please use the create_core command instead;\\n\" +\n            \"create_collection can only be used when running in SolrCloud mode.\\n\");\n      }\n\n      try (CloudSolrClient cloudSolrClient = new CloudSolrClient.Builder(Collections.singletonList(zkHost), Optional.empty()).build()) {\n        echoIfVerbose(\"\\nConnecting to ZooKeeper at \" + zkHost+\" ...\", cli);\n        cloudSolrClient.connect();\n        runCloudTool(cloudSolrClient, cli);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ca20be81c9284c840498143264e583ccbb8525a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["c7d763eff38c4e1702b60d626f9c8d39f9ad8af8","b79a5db147a1c6f95d1625ddbc3561ef56955225"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","86d2df3ca94d97c62f70b0d321f5f597de2d3eb3"],"c7d763eff38c4e1702b60d626f9c8d39f9ad8af8":["86d2df3ca94d97c62f70b0d321f5f597de2d3eb3"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["4ca20be81c9284c840498143264e583ccbb8525a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["4ca20be81c9284c840498143264e583ccbb8525a","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"86d2df3ca94d97c62f70b0d321f5f597de2d3eb3":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b79a5db147a1c6f95d1625ddbc3561ef56955225"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["c7d763eff38c4e1702b60d626f9c8d39f9ad8af8"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["c7d763eff38c4e1702b60d626f9c8d39f9ad8af8","b79a5db147a1c6f95d1625ddbc3561ef56955225"]},"commit2Childs":{"4ca20be81c9284c840498143264e583ccbb8525a":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"c7d763eff38c4e1702b60d626f9c8d39f9ad8af8":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","b79a5db147a1c6f95d1625ddbc3561ef56955225","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ca20be81c9284c840498143264e583ccbb8525a"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","86d2df3ca94d97c62f70b0d321f5f597de2d3eb3"],"86d2df3ca94d97c62f70b0d321f5f597de2d3eb3":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","c7d763eff38c4e1702b60d626f9c8d39f9ad8af8"],"b79a5db147a1c6f95d1625ddbc3561ef56955225":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}