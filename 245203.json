{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.TermsWriter.PostingsWriter#startDoc(int,int).mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.TermsWriter.PostingsWriter#startDoc(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.TermsWriter.PostingsWriter#startDoc(int,int).mjava","sourceNew":"      @Override\n      public void startDoc(int docID, int termDocFreq) throws IOException {\n        //System.out.println(\"    startDoc docID=\" + docID + \" freq=\" + termDocFreq);\n        final int delta = docID - lastDocID;\n        assert docID == 0 || delta > 0;\n        lastDocID = docID;\n        docCount++;\n\n        if (field.getIndexOptions() == IndexOptions.DOCS_ONLY) {\n          buffer.writeVInt(delta);\n        } else if (termDocFreq == 1) {\n          buffer.writeVInt((delta<<1) | 1);\n        } else {\n          buffer.writeVInt(delta<<1);\n          assert termDocFreq > 0;\n          buffer.writeVInt(termDocFreq);\n        }\n\n        lastPos = 0;\n        lastOffset = 0;\n      }\n\n","sourceOld":"      @Override\n      public void startDoc(int docID, int termDocFreq) throws IOException {\n        //System.out.println(\"    startDoc docID=\" + docID + \" freq=\" + termDocFreq);\n        final int delta = docID - lastDocID;\n        assert docID == 0 || delta > 0;\n        lastDocID = docID;\n        docCount++;\n\n        if (field.getIndexOptions() == IndexOptions.DOCS_ONLY) {\n          buffer.writeVInt(delta);\n        } else if (termDocFreq == 1) {\n          buffer.writeVInt((delta<<1) | 1);\n        } else {\n          buffer.writeVInt(delta<<1);\n          assert termDocFreq > 0;\n          buffer.writeVInt(termDocFreq);\n        }\n\n        lastPos = 0;\n        lastOffset = 0;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa80a35d7c4b2b1e83082b275e3e8328ab93db52","date":1381766157,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.TermsWriter.PostingsWriter#startDoc(int,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.TermsWriter.PostingsWriter#startDoc(int,int).mjava","sourceNew":"      public void startDoc(int docID, int termDocFreq) throws IOException {\n        //System.out.println(\"    startDoc docID=\" + docID + \" freq=\" + termDocFreq);\n        final int delta = docID - lastDocID;\n        assert docID == 0 || delta > 0;\n        lastDocID = docID;\n        docCount++;\n\n        if (field.getIndexOptions() == IndexOptions.DOCS_ONLY) {\n          buffer.writeVInt(delta);\n        } else if (termDocFreq == 1) {\n          buffer.writeVInt((delta<<1) | 1);\n        } else {\n          buffer.writeVInt(delta<<1);\n          assert termDocFreq > 0;\n          buffer.writeVInt(termDocFreq);\n        }\n\n        lastPos = 0;\n        lastOffset = 0;\n      }\n\n","sourceOld":"      @Override\n      public void startDoc(int docID, int termDocFreq) throws IOException {\n        //System.out.println(\"    startDoc docID=\" + docID + \" freq=\" + termDocFreq);\n        final int delta = docID - lastDocID;\n        assert docID == 0 || delta > 0;\n        lastDocID = docID;\n        docCount++;\n\n        if (field.getIndexOptions() == IndexOptions.DOCS_ONLY) {\n          buffer.writeVInt(delta);\n        } else if (termDocFreq == 1) {\n          buffer.writeVInt((delta<<1) | 1);\n        } else {\n          buffer.writeVInt(delta<<1);\n          assert termDocFreq > 0;\n          buffer.writeVInt(termDocFreq);\n        }\n\n        lastPos = 0;\n        lastOffset = 0;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2bb2842e561df4e8e9ad89010605fc86ac265465","date":1414768208,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.TermsWriter.PostingsWriter#startDoc(int,int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.TermsWriter.PostingsWriter#startDoc(int,int).mjava","sourceNew":"      public void startDoc(int docID, int termDocFreq) throws IOException {\n        //System.out.println(\"    startDoc docID=\" + docID + \" freq=\" + termDocFreq);\n        final int delta = docID - lastDocID;\n        assert docID == 0 || delta > 0;\n        lastDocID = docID;\n        docCount++;\n\n        if (field.getIndexOptions() == IndexOptions.DOCS) {\n          buffer.writeVInt(delta);\n        } else if (termDocFreq == 1) {\n          buffer.writeVInt((delta<<1) | 1);\n        } else {\n          buffer.writeVInt(delta<<1);\n          assert termDocFreq > 0;\n          buffer.writeVInt(termDocFreq);\n        }\n\n        lastPos = 0;\n        lastOffset = 0;\n      }\n\n","sourceOld":"      public void startDoc(int docID, int termDocFreq) throws IOException {\n        //System.out.println(\"    startDoc docID=\" + docID + \" freq=\" + termDocFreq);\n        final int delta = docID - lastDocID;\n        assert docID == 0 || delta > 0;\n        lastDocID = docID;\n        docCount++;\n\n        if (field.getIndexOptions() == IndexOptions.DOCS_ONLY) {\n          buffer.writeVInt(delta);\n        } else if (termDocFreq == 1) {\n          buffer.writeVInt((delta<<1) | 1);\n        } else {\n          buffer.writeVInt(delta<<1);\n          assert termDocFreq > 0;\n          buffer.writeVInt(termDocFreq);\n        }\n\n        lastPos = 0;\n        lastOffset = 0;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24f89e8a6aac05753cde4c83d62a74356098200d","date":1525768331,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.TermsWriter.PostingsWriter#startDoc(int,int).mjava","sourceNew":null,"sourceOld":"      public void startDoc(int docID, int termDocFreq) throws IOException {\n        //System.out.println(\"    startDoc docID=\" + docID + \" freq=\" + termDocFreq);\n        final int delta = docID - lastDocID;\n        assert docID == 0 || delta > 0;\n        lastDocID = docID;\n        docCount++;\n\n        if (field.getIndexOptions() == IndexOptions.DOCS) {\n          buffer.writeVInt(delta);\n        } else if (termDocFreq == 1) {\n          buffer.writeVInt((delta<<1) | 1);\n        } else {\n          buffer.writeVInt(delta<<1);\n          assert termDocFreq > 0;\n          buffer.writeVInt(termDocFreq);\n        }\n\n        lastPos = 0;\n        lastOffset = 0;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24f89e8a6aac05753cde4c83d62a74356098200d":["2bb2842e561df4e8e9ad89010605fc86ac265465"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa80a35d7c4b2b1e83082b275e3e8328ab93db52":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"2bb2842e561df4e8e9ad89010605fc86ac265465":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["24f89e8a6aac05753cde4c83d62a74356098200d"]},"commit2Childs":{"24f89e8a6aac05753cde4c83d62a74356098200d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["fa80a35d7c4b2b1e83082b275e3e8328ab93db52"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"fa80a35d7c4b2b1e83082b275e3e8328ab93db52":["2bb2842e561df4e8e9ad89010605fc86ac265465"],"2bb2842e561df4e8e9ad89010605fc86ac265465":["24f89e8a6aac05753cde4c83d62a74356098200d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}