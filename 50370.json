{"path":"lucene/core/src/java/org/apache/lucene/index/SortedBytesDVWriter#addOneValue(BytesRef).mjava","commits":[{"id":"71df1db89d3a713f022b58111aafd14a4b352da0","date":1352479848,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedBytesDVWriter#addOneValue(BytesRef).mjava","pathOld":"/dev/null","sourceNew":"  private void addOneValue(BytesRef value) {\n    mergeLength(value.length);\n\n    int ord = hash.add(value);\n    if (ord < 0) {\n      ord = -ord-1;\n    } else {\n      // nocommit this is undercounting!\n      bytesUsed += value.length;\n    }\n    pending.add(ord);\n    // estimate 25% overhead for ArrayList:\n    bytesUsed += (int) (RamUsageEstimator.NUM_BYTES_OBJECT_REF * 1.25) + RamUsageEstimator.NUM_BYTES_OBJECT_HEADER + RamUsageEstimator.NUM_BYTES_INT;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ce73f585d17f53055185a19beb46db23d76e0ad9","date":1353077110,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedBytesDVWriter#addOneValue(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedBytesDVWriter#addOneValue(BytesRef).mjava","sourceNew":"  private void addOneValue(BytesRef value) {\n    mergeLength(value.length);\n    int ord = hash.add(value);\n    if (ord < 0) {\n      ord = -ord-1;\n    } \n    \n    if (pendingIndex <= pending.length) {\n      int pendingLen = pending.length;\n      pending = ArrayUtil.grow(pending, pendingIndex+1);\n      iwBytesUsed.addAndGet((pending.length - pendingLen) * RamUsageEstimator.NUM_BYTES_INT);\n    }\n    pending[pendingIndex++] = ord;\n  }\n\n","sourceOld":"  private void addOneValue(BytesRef value) {\n    mergeLength(value.length);\n\n    int ord = hash.add(value);\n    if (ord < 0) {\n      ord = -ord-1;\n    } else {\n      // nocommit this is undercounting!\n      bytesUsed += value.length;\n    }\n    pending.add(ord);\n    // estimate 25% overhead for ArrayList:\n    bytesUsed += (int) (RamUsageEstimator.NUM_BYTES_OBJECT_REF * 1.25) + RamUsageEstimator.NUM_BYTES_OBJECT_HEADER + RamUsageEstimator.NUM_BYTES_INT;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ed9002c5afac843c7f2d04d88e74b40d627e1af","date":1357602069,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedBytesDVWriter#addOneValue(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedBytesDVWriter#addOneValue(BytesRef).mjava","sourceNew":"  private void addOneValue(BytesRef value) {\n    int ord = hash.add(value);\n    if (ord < 0) {\n      ord = -ord-1;\n    } \n    \n    if (pendingIndex <= pending.length) {\n      int pendingLen = pending.length;\n      pending = ArrayUtil.grow(pending, pendingIndex+1);\n      iwBytesUsed.addAndGet((pending.length - pendingLen) * RamUsageEstimator.NUM_BYTES_INT);\n    }\n    pending[pendingIndex++] = ord;\n  }\n\n","sourceOld":"  private void addOneValue(BytesRef value) {\n    mergeLength(value.length);\n    int ord = hash.add(value);\n    if (ord < 0) {\n      ord = -ord-1;\n    } \n    \n    if (pendingIndex <= pending.length) {\n      int pendingLen = pending.length;\n      pending = ArrayUtil.grow(pending, pendingIndex+1);\n      iwBytesUsed.addAndGet((pending.length - pendingLen) * RamUsageEstimator.NUM_BYTES_INT);\n    }\n    pending[pendingIndex++] = ord;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e5d36d3b999ce76a1e80788e5d243f513c69d50","date":1359044508,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SortedDocValuesWriter#addOneValue(BytesRef).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SortedBytesDVWriter#addOneValue(BytesRef).mjava","sourceNew":"  private void addOneValue(BytesRef value) {\n    int ord = hash.add(value);\n    if (ord < 0) {\n      ord = -ord-1;\n    } \n    \n    if (pendingIndex <= pending.length) {\n      int pendingLen = pending.length;\n      pending = ArrayUtil.grow(pending, pendingIndex+1);\n      iwBytesUsed.addAndGet((pending.length - pendingLen) * RamUsageEstimator.NUM_BYTES_INT);\n    }\n    pending[pendingIndex++] = ord;\n  }\n\n","sourceOld":"  private void addOneValue(BytesRef value) {\n    int ord = hash.add(value);\n    if (ord < 0) {\n      ord = -ord-1;\n    } \n    \n    if (pendingIndex <= pending.length) {\n      int pendingLen = pending.length;\n      pending = ArrayUtil.grow(pending, pendingIndex+1);\n      iwBytesUsed.addAndGet((pending.length - pendingLen) * RamUsageEstimator.NUM_BYTES_INT);\n    }\n    pending[pendingIndex++] = ord;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ce73f585d17f53055185a19beb46db23d76e0ad9":["71df1db89d3a713f022b58111aafd14a4b352da0"],"2e5d36d3b999ce76a1e80788e5d243f513c69d50":["1ed9002c5afac843c7f2d04d88e74b40d627e1af"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"71df1db89d3a713f022b58111aafd14a4b352da0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1ed9002c5afac843c7f2d04d88e74b40d627e1af":["ce73f585d17f53055185a19beb46db23d76e0ad9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ce73f585d17f53055185a19beb46db23d76e0ad9":["1ed9002c5afac843c7f2d04d88e74b40d627e1af"],"2e5d36d3b999ce76a1e80788e5d243f513c69d50":[],"71df1db89d3a713f022b58111aafd14a4b352da0":["ce73f585d17f53055185a19beb46db23d76e0ad9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["71df1db89d3a713f022b58111aafd14a4b352da0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1ed9002c5afac843c7f2d04d88e74b40d627e1af":["2e5d36d3b999ce76a1e80788e5d243f513c69d50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2e5d36d3b999ce76a1e80788e5d243f513c69d50","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}