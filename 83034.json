{"path":"lucene/src/java/org/apache/lucene/index/IndexReader#toString().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#toString().mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#toString().mjava","sourceNew":"  /** {@inheritDoc} */\n  @Override\n  public String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    if (hasChanges) {\n      buffer.append('*');\n    }\n    buffer.append(getClass().getSimpleName());\n    buffer.append('(');\n    final IndexReader[] subReaders = getSequentialSubReaders();\n    if ((subReaders != null) && (subReaders.length > 0)) {\n      buffer.append(subReaders[0]);\n      for (int i = 1; i < subReaders.length; ++i) {\n        buffer.append(\" \").append(subReaders[i]);\n      }\n    }\n    buffer.append(')');\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** {@inheritDoc} */\n  @Override\n  public String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    if (hasChanges) {\n      buffer.append('*');\n    }\n    buffer.append(getClass().getSimpleName());\n    buffer.append('(');\n    final IndexReader[] subReaders = getSequentialSubReaders();\n    if ((subReaders != null) && (subReaders.length > 0)) {\n      buffer.append(subReaders[0]);\n      for (int i = 1; i < subReaders.length; ++i) {\n        buffer.append(\" \").append(subReaders[i]);\n      }\n    }\n    buffer.append(')');\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1f693ce507c40f77e3a92acd16c6b79cdd730e4","date":1323036169,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#toString().mjava","sourceNew":"  /** {@inheritDoc} */\n  @Override\n  public String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    buffer.append(getClass().getSimpleName());\n    buffer.append('(');\n    final IndexReader[] subReaders = getSequentialSubReaders();\n    if ((subReaders != null) && (subReaders.length > 0)) {\n      buffer.append(subReaders[0]);\n      for (int i = 1; i < subReaders.length; ++i) {\n        buffer.append(\" \").append(subReaders[i]);\n      }\n    }\n    buffer.append(')');\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** {@inheritDoc} */\n  @Override\n  public String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    if (hasChanges) {\n      buffer.append('*');\n    }\n    buffer.append(getClass().getSimpleName());\n    buffer.append('(');\n    final IndexReader[] subReaders = getSequentialSubReaders();\n    if ((subReaders != null) && (subReaders.length > 0)) {\n      buffer.append(subReaders[0]);\n      for (int i = 1; i < subReaders.length; ++i) {\n        buffer.append(\" \").append(subReaders[i]);\n      }\n    }\n    buffer.append(')');\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#toString().mjava","sourceNew":"  /** {@inheritDoc} */\n  @Override\n  public String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    buffer.append(getClass().getSimpleName());\n    buffer.append('(');\n    final IndexReader[] subReaders = getSequentialSubReaders();\n    if ((subReaders != null) && (subReaders.length > 0)) {\n      buffer.append(subReaders[0]);\n      for (int i = 1; i < subReaders.length; ++i) {\n        buffer.append(\" \").append(subReaders[i]);\n      }\n    }\n    buffer.append(')');\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** {@inheritDoc} */\n  @Override\n  public String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    if (hasChanges) {\n      buffer.append('*');\n    }\n    buffer.append(getClass().getSimpleName());\n    buffer.append('(');\n    final IndexReader[] subReaders = getSequentialSubReaders();\n    if ((subReaders != null) && (subReaders.length > 0)) {\n      buffer.append(subReaders[0]);\n      for (int i = 1; i < subReaders.length; ++i) {\n        buffer.append(\" \").append(subReaders[i]);\n      }\n    }\n    buffer.append(')');\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#toString().mjava","sourceNew":"  /** {@inheritDoc} */\n  @Override\n  public String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    buffer.append(getClass().getSimpleName());\n    buffer.append('(');\n    final IndexReader[] subReaders = getSequentialSubReaders();\n    if ((subReaders != null) && (subReaders.length > 0)) {\n      buffer.append(subReaders[0]);\n      for (int i = 1; i < subReaders.length; ++i) {\n        buffer.append(\" \").append(subReaders[i]);\n      }\n    }\n    buffer.append(')');\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** {@inheritDoc} */\n  @Override\n  public String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    if (hasChanges) {\n      buffer.append('*');\n    }\n    buffer.append(getClass().getSimpleName());\n    buffer.append('(');\n    final IndexReader[] subReaders = getSequentialSubReaders();\n    if ((subReaders != null) && (subReaders.length > 0)) {\n      buffer.append(subReaders[0]);\n      for (int i = 1; i < subReaders.length; ++i) {\n        buffer.append(\" \").append(subReaders[i]);\n      }\n    }\n    buffer.append(')');\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/CompositeIndexReader#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    buffer.append(getClass().getSimpleName());\n    buffer.append('(');\n    final IndexReader[] subReaders = getSequentialSubReaders();\n    if ((subReaders != null) && (subReaders.length > 0)) {\n      buffer.append(subReaders[0]);\n      for (int i = 1; i < subReaders.length; ++i) {\n        buffer.append(\" \").append(subReaders[i]);\n      }\n    }\n    buffer.append(')');\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** {@inheritDoc} */\n  @Override\n  public String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    buffer.append(getClass().getSimpleName());\n    buffer.append('(');\n    final IndexReader[] subReaders = getSequentialSubReaders();\n    if ((subReaders != null) && (subReaders.length > 0)) {\n      buffer.append(subReaders[0]);\n      for (int i = 1; i < subReaders.length; ++i) {\n        buffer.append(\" \").append(subReaders[i]);\n      }\n    }\n    buffer.append(')');\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/CompositeReader#toString().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    buffer.append(getClass().getSimpleName());\n    buffer.append('(');\n    final IndexReader[] subReaders = getSequentialSubReaders();\n    assert subReaders != null;\n    if (subReaders.length > 0) {\n      buffer.append(subReaders[0]);\n      for (int i = 1; i < subReaders.length; ++i) {\n        buffer.append(\" \").append(subReaders[i]);\n      }\n    }\n    buffer.append(')');\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** {@inheritDoc} */\n  @Override\n  public String toString() {\n    final StringBuilder buffer = new StringBuilder();\n    buffer.append(getClass().getSimpleName());\n    buffer.append('(');\n    final IndexReader[] subReaders = getSequentialSubReaders();\n    if ((subReaders != null) && (subReaders.length > 0)) {\n      buffer.append(subReaders[0]);\n      for (int i = 1; i < subReaders.length; ++i) {\n        buffer.append(\" \").append(subReaders[i]);\n      }\n    }\n    buffer.append(')');\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e1f693ce507c40f77e3a92acd16c6b79cdd730e4":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["9454a6510e2db155fb01faa5c049b06ece95fab9","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["9454a6510e2db155fb01faa5c049b06ece95fab9","e1f693ce507c40f77e3a92acd16c6b79cdd730e4"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3615ce4a1f785ae1b779244de52c6a7d99227e60","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["3615ce4a1f785ae1b779244de52c6a7d99227e60"]},"commit2Childs":{"e1f693ce507c40f77e3a92acd16c6b79cdd730e4":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","5cab9a86bd67202d20b6adc463008c8e982b070a","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e1f693ce507c40f77e3a92acd16c6b79cdd730e4","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}