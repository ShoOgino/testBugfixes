{"path":"sandbox/contributions/parsers/pdf/PdfTextExtractor#main(String[]).mjava","commits":[{"id":"c3700445a056e0fea104882b72e222550d465d81","date":1024277396,"type":0,"author":"Kelvin Tan","isMerge":false,"pathNew":"sandbox/contributions/parsers/pdf/PdfTextExtractor#main(String[]).mjava","pathOld":"/dev/null","sourceNew":"    public static void main(String[] args)\n    {\n        File f = new File(\"/usr/local/test.pdf\");\n        try\n        {\n            Pdf pdf = new Pdf(f.toString());\n            int pagecount = pdf.getPageCount();\n            cat.debug(f.toString() + \"has \" + pagecount + \" pages.\");\n            for (int i = 1; i <= pagecount; i++)\n            {\n                System.out.println(getContent(pdf, i));\n            }\n        }\n        catch (IOException ioe)\n        {\n            cat.error(\"IOException parsing PDF file:\" + f.toString(), ioe);\n        }\n        catch (PjException pje)\n        {\n            cat.error(\"PjException parsing PDF file:\" + f.toString(), pje);\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0cddd6a5f0a3875d0bf4faee87d05849f9f95c3a","date":1073447632,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"sandbox/contributions/parsers/src/java/org/apache/lucene/parsers/pdf/PdfTextExtractor#main(String[]).mjava","pathOld":"sandbox/contributions/parsers/pdf/PdfTextExtractor#main(String[]).mjava","sourceNew":"    public static void main(String[] args)\n    {\n        File f = new File(\"/usr/local/test.pdf\");\n        try\n        {\n            Pdf pdf = new Pdf(f.toString());\n            int pagecount = pdf.getPageCount();\n            cat.debug(f.toString() + \"has \" + pagecount + \" pages.\");\n            for (int i = 1; i <= pagecount; i++)\n            {\n                System.out.println(getContent(pdf, i));\n            }\n        }\n        catch (IOException ioe)\n        {\n            cat.error(\"IOException parsing PDF file:\" + f.toString(), ioe);\n        }\n        catch (PjException pje)\n        {\n            cat.error(\"PjException parsing PDF file:\" + f.toString(), pje);\n        }\n    }\n\n","sourceOld":"    public static void main(String[] args)\n    {\n        File f = new File(\"/usr/local/test.pdf\");\n        try\n        {\n            Pdf pdf = new Pdf(f.toString());\n            int pagecount = pdf.getPageCount();\n            cat.debug(f.toString() + \"has \" + pagecount + \" pages.\");\n            for (int i = 1; i <= pagecount; i++)\n            {\n                System.out.println(getContent(pdf, i));\n            }\n        }\n        catch (IOException ioe)\n        {\n            cat.error(\"IOException parsing PDF file:\" + f.toString(), ioe);\n        }\n        catch (PjException pje)\n        {\n            cat.error(\"PjException parsing PDF file:\" + f.toString(), pje);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0cddd6a5f0a3875d0bf4faee87d05849f9f95c3a":["c3700445a056e0fea104882b72e222550d465d81"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c3700445a056e0fea104882b72e222550d465d81":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0cddd6a5f0a3875d0bf4faee87d05849f9f95c3a"]},"commit2Childs":{"0cddd6a5f0a3875d0bf4faee87d05849f9f95c3a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c3700445a056e0fea104882b72e222550d465d81"],"c3700445a056e0fea104882b72e222550d465d81":["0cddd6a5f0a3875d0bf4faee87d05849f9f95c3a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}