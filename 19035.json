{"path":"lucene/backwards/src/java/org/apache/lucene/index/FieldInfos#FieldInfos(Directory,String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/FieldInfos#FieldInfos(Directory,String).mjava","pathOld":"backwards/src/java/org/apache/lucene/index/FieldInfos#FieldInfos(Directory,String).mjava","sourceNew":"  /**\n   * Construct a FieldInfos object using the directory and the name of the file\n   * IndexInput\n   * @param d The directory to open the IndexInput from\n   * @param name The name of the file to open the IndexInput from in the Directory\n   * @throws IOException\n   */\n  FieldInfos(Directory d, String name) throws IOException {\n    IndexInput input = d.openInput(name);\n    try {\n      try {\n        read(input, name);\n      } catch (IOException ioe) {\n        if (format == FORMAT_PRE) {\n          // LUCENE-1623: FORMAT_PRE (before there was a\n          // format) may be 2.3.2 (pre-utf8) or 2.4.x (utf8)\n          // encoding; retry with input set to pre-utf8\n          input.seek(0);\n          input.setModifiedUTF8StringsMode();\n          byNumber.clear();\n          byName.clear();\n          try {\n            read(input, name);\n          } catch (Throwable t) {\n            // Ignore any new exception & throw original IOE\n            throw ioe;\n          }\n        } else {\n          // The IOException cannot be caused by\n          // LUCENE-1623, so re-throw it\n          throw ioe;\n        }\n      }\n    } finally {\n      input.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * Construct a FieldInfos object using the directory and the name of the file\n   * IndexInput\n   * @param d The directory to open the IndexInput from\n   * @param name The name of the file to open the IndexInput from in the Directory\n   * @throws IOException\n   */\n  FieldInfos(Directory d, String name) throws IOException {\n    IndexInput input = d.openInput(name);\n    try {\n      try {\n        read(input, name);\n      } catch (IOException ioe) {\n        if (format == FORMAT_PRE) {\n          // LUCENE-1623: FORMAT_PRE (before there was a\n          // format) may be 2.3.2 (pre-utf8) or 2.4.x (utf8)\n          // encoding; retry with input set to pre-utf8\n          input.seek(0);\n          input.setModifiedUTF8StringsMode();\n          byNumber.clear();\n          byName.clear();\n          try {\n            read(input, name);\n          } catch (Throwable t) {\n            // Ignore any new exception & throw original IOE\n            throw ioe;\n          }\n        } else {\n          // The IOException cannot be caused by\n          // LUCENE-1623, so re-throw it\n          throw ioe;\n        }\n      }\n    } finally {\n      input.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/index/FieldInfos#FieldInfos(Directory,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Construct a FieldInfos object using the directory and the name of the file\n   * IndexInput\n   * @param d The directory to open the IndexInput from\n   * @param name The name of the file to open the IndexInput from in the Directory\n   * @throws IOException\n   */\n  FieldInfos(Directory d, String name) throws IOException {\n    IndexInput input = d.openInput(name);\n    try {\n      try {\n        read(input, name);\n      } catch (IOException ioe) {\n        if (format == FORMAT_PRE) {\n          // LUCENE-1623: FORMAT_PRE (before there was a\n          // format) may be 2.3.2 (pre-utf8) or 2.4.x (utf8)\n          // encoding; retry with input set to pre-utf8\n          input.seek(0);\n          input.setModifiedUTF8StringsMode();\n          byNumber.clear();\n          byName.clear();\n          try {\n            read(input, name);\n          } catch (Throwable t) {\n            // Ignore any new exception & throw original IOE\n            throw ioe;\n          }\n        } else {\n          // The IOException cannot be caused by\n          // LUCENE-1623, so re-throw it\n          throw ioe;\n        }\n      }\n    } finally {\n      input.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}