{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testPolygonOrdering().mjava","commits":[{"id":"d7b7a8973b4a2628b97962e152e513b0d3af02c8","date":1460145192,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testPolygonOrdering().mjava","pathOld":"/dev/null","sourceNew":"  public void testPolygonOrdering() {\n    final double[] lats = new double[] {\n      51.204382859999996, 50.89947531437482, 50.8093624806861,50.8093624806861, 50.89947531437482, 51.204382859999996, 51.51015366140113, 51.59953838204167, 51.59953838204167, 51.51015366140113, 51.204382859999996};\n    final double[] lons = new double[] {\n      0.8747711978759765, 0.6509219832137298, 0.35960265165247807, 0.10290284834752167, -0.18841648321373008, -0.41226569787597667, -0.18960465285650027, 0.10285893781346236, 0.35964656218653757, 0.6521101528565002, 0.8747711978759765};\n    final Query q = Geo3DPoint.newPolygonQuery(\"point\", new Polygon(lats, lons));\n    //System.out.println(q);\n    assertTrue(!q.toString().contains(\"GeoConcavePolygon\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a","date":1583186777,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testPolygonOrdering().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#testPolygonOrdering().mjava","sourceNew":"  public void testPolygonOrdering() {\n    final double[] lats = new double[] {\n      51.204382859999996, 50.89947531437482, 50.8093624806861,50.8093624806861, 50.89947531437482, 51.204382859999996, 51.51015366140113, 51.59953838204167, 51.59953838204167, 51.51015366140113, 51.204382859999996};\n    final double[] lons = new double[] {\n      0.8747711978759765, 0.6509219832137298, 0.35960265165247807, 0.10290284834752167, -0.18841648321373008, -0.41226569787597667, -0.18960465285650027, 0.10285893781346236, 0.35964656218653757, 0.6521101528565002, 0.8747711978759765};\n    final Query q = Geo3DPoint.newPolygonQuery(\"point\", randomPlanetModel(), new Polygon(lats, lons));\n    //System.out.println(q);\n    assertTrue(!q.toString().contains(\"GeoConcavePolygon\"));\n  }\n\n","sourceOld":"  public void testPolygonOrdering() {\n    final double[] lats = new double[] {\n      51.204382859999996, 50.89947531437482, 50.8093624806861,50.8093624806861, 50.89947531437482, 51.204382859999996, 51.51015366140113, 51.59953838204167, 51.59953838204167, 51.51015366140113, 51.204382859999996};\n    final double[] lons = new double[] {\n      0.8747711978759765, 0.6509219832137298, 0.35960265165247807, 0.10290284834752167, -0.18841648321373008, -0.41226569787597667, -0.18960465285650027, 0.10285893781346236, 0.35964656218653757, 0.6521101528565002, 0.8747711978759765};\n    final Query q = Geo3DPoint.newPolygonQuery(\"point\", new Polygon(lats, lons));\n    //System.out.println(q);\n    assertTrue(!q.toString().contains(\"GeoConcavePolygon\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d7b7a8973b4a2628b97962e152e513b0d3af02c8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["d7b7a8973b4a2628b97962e152e513b0d3af02c8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"]},"commit2Childs":{"d7b7a8973b4a2628b97962e152e513b0d3af02c8":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d7b7a8973b4a2628b97962e152e513b0d3af02c8"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}