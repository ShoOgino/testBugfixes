{"path":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","commits":[{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","sourceNew":"  public void searchIndex(Directory dir, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new MockAnalyzer(random));\n    //Query query = parser.parse(\"handle:1\");\n\n    IndexReader reader = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    TestUtil.checkIndex(dir);\n    \n    // true if this is a 4.0+ index\n    final boolean is40Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"content5\") != null;\n    // true if this is a 4.2+ index\n    final boolean is42Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedSet\") != null;\n    // true if this is a 4.9+ index\n    final boolean is49Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedNumeric\") != null;\n\n    assert is40Index; // NOTE: currently we can only do this on trunk!\n\n    final Bits liveDocs = MultiFields.getLiveDocs(reader);\n\n    for(int i=0;i<35;i++) {\n      if (liveDocs.get(i)) {\n        StoredDocument d = reader.document(i);\n        List<StorableField> fields = d.getFields();\n        boolean isProxDoc = d.getField(\"content3\") == null;\n        if (isProxDoc) {\n          final int numFields = is40Index ? 7 : 5;\n          assertEquals(numFields, fields.size());\n          StorableField f =  d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n\n          f =  d.getField(\"autf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n      \n          f = d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n\n          f = d.getField(\"fie\\u2C77ld\");\n          assertEquals(\"field with non-ascii name\", f.stringValue());\n        }\n\n        Fields tfvFields = reader.getTermVectors(i);\n        assertNotNull(\"i=\" + i, tfvFields);\n        Terms tfv = tfvFields.terms(\"utf8\");\n        assertNotNull(\"docID=\" + i + \" index=\" + oldName, tfv);\n      } else {\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n      }\n    }\n\n    if (is40Index) {\n      // check docvalues fields\n      NumericDocValues dvByte = MultiDocValues.getNumericValues(reader, \"dvByte\");\n      BinaryDocValues dvBytesDerefFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefFixed\");\n      BinaryDocValues dvBytesDerefVar = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefVar\");\n      SortedDocValues dvBytesSortedFixed = MultiDocValues.getSortedValues(reader, \"dvBytesSortedFixed\");\n      SortedDocValues dvBytesSortedVar = MultiDocValues.getSortedValues(reader, \"dvBytesSortedVar\");\n      BinaryDocValues dvBytesStraightFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightFixed\");\n      BinaryDocValues dvBytesStraightVar = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightVar\");\n      NumericDocValues dvDouble = MultiDocValues.getNumericValues(reader, \"dvDouble\");\n      NumericDocValues dvFloat = MultiDocValues.getNumericValues(reader, \"dvFloat\");\n      NumericDocValues dvInt = MultiDocValues.getNumericValues(reader, \"dvInt\");\n      NumericDocValues dvLong = MultiDocValues.getNumericValues(reader, \"dvLong\");\n      NumericDocValues dvPacked = MultiDocValues.getNumericValues(reader, \"dvPacked\");\n      NumericDocValues dvShort = MultiDocValues.getNumericValues(reader, \"dvShort\");\n      SortedSetDocValues dvSortedSet = null;\n      if (is42Index) {\n        dvSortedSet = MultiDocValues.getSortedSetValues(reader, \"dvSortedSet\");\n      }\n      SortedNumericDocValues dvSortedNumeric = null;\n      if (is49Index) {\n        dvSortedNumeric = MultiDocValues.getSortedNumericValues(reader, \"dvSortedNumeric\");\n      }\n      \n      for (int i=0;i<35;i++) {\n        int id = Integer.parseInt(reader.document(i).get(\"id\"));\n        assertEquals(id, dvByte.get(i));\n        \n        byte bytes[] = new byte[] {\n            (byte)(id >>> 24), (byte)(id >>> 16),(byte)(id >>> 8),(byte)id\n        };\n        BytesRef expectedRef = new BytesRef(bytes);\n        \n        BytesRef term = dvBytesDerefFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesDerefVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightVar.get(i);\n        assertEquals(expectedRef, term);\n        \n        assertEquals((double)id, Double.longBitsToDouble(dvDouble.get(i)), 0D);\n        assertEquals((float)id, Float.intBitsToFloat((int)dvFloat.get(i)), 0F);\n        assertEquals(id, dvInt.get(i));\n        assertEquals(id, dvLong.get(i));\n        assertEquals(id, dvPacked.get(i));\n        assertEquals(id, dvShort.get(i));\n        if (is42Index) {\n          dvSortedSet.setDocument(i);\n          long ord = dvSortedSet.nextOrd();\n          assertEquals(SortedSetDocValues.NO_MORE_ORDS, dvSortedSet.nextOrd());\n          term = dvSortedSet.lookupOrd(ord);\n          assertEquals(expectedRef, term);\n        }\n        if (is49Index) {\n          dvSortedNumeric.setDocument(i);\n          assertEquals(1, dvSortedNumeric.count());\n          assertEquals(id, dvSortedNumeric.valueAt(0));\n        }\n      }\n    }\n    \n    ScoreDoc[] hits = searcher.search(new TermQuery(new Term(new String(\"content\"), \"aaa\")), null, 1000).scoreDocs;\n\n    // First document should be #0\n    StoredDocument d = searcher.getIndexReader().document(hits[0].doc);\n    assertEquals(\"didn't get the right document first\", \"0\", d.get(\"id\"));\n\n    doTestHits(hits, 34, searcher.getIndexReader());\n    \n    if (is40Index) {\n      hits = searcher.search(new TermQuery(new Term(new String(\"content5\"), \"aaa\")), null, 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    \n      hits = searcher.search(new TermQuery(new Term(new String(\"content6\"), \"aaa\")), null, 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    }\n\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")), null, 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(new String(\"utf8\"), \"lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")), null, 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")), null, 1000).scoreDocs;\n    assertEquals(34, hits.length);\n\n    reader.close();\n  }\n\n","sourceOld":"  public void searchIndex(Directory dir, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new MockAnalyzer(random));\n    //Query query = parser.parse(\"handle:1\");\n\n    IndexReader reader = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    TestUtil.checkIndex(dir);\n    \n    // true if this is a 4.0+ index\n    final boolean is40Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"content5\") != null;\n    // true if this is a 4.2+ index\n    final boolean is42Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedSet\") != null;\n    // true if this is a 4.9+ index\n    final boolean is49Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedNumeric\") != null;\n\n    assert is40Index; // NOTE: currently we can only do this on trunk!\n\n    final Bits liveDocs = MultiFields.getLiveDocs(reader);\n\n    for(int i=0;i<35;i++) {\n      if (liveDocs.get(i)) {\n        StoredDocument d = reader.document(i);\n        List<StorableField> fields = d.getFields();\n        boolean isProxDoc = d.getField(\"content3\") == null;\n        if (isProxDoc) {\n          final int numFields = is40Index ? 7 : 5;\n          assertEquals(numFields, fields.size());\n          StorableField f =  d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n\n          f =  d.getField(\"autf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n      \n          f = d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n\n          f = d.getField(\"fie\\u2C77ld\");\n          assertEquals(\"field with non-ascii name\", f.stringValue());\n        }\n\n        Fields tfvFields = reader.getTermVectors(i);\n        assertNotNull(\"i=\" + i, tfvFields);\n        Terms tfv = tfvFields.terms(\"utf8\");\n        assertNotNull(\"docID=\" + i + \" index=\" + oldName, tfv);\n      } else {\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n      }\n    }\n\n    if (is40Index) {\n      // check docvalues fields\n      NumericDocValues dvByte = MultiDocValues.getNumericValues(reader, \"dvByte\");\n      BinaryDocValues dvBytesDerefFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefFixed\");\n      BinaryDocValues dvBytesDerefVar = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefVar\");\n      SortedDocValues dvBytesSortedFixed = MultiDocValues.getSortedValues(reader, \"dvBytesSortedFixed\");\n      SortedDocValues dvBytesSortedVar = MultiDocValues.getSortedValues(reader, \"dvBytesSortedVar\");\n      BinaryDocValues dvBytesStraightFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightFixed\");\n      BinaryDocValues dvBytesStraightVar = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightVar\");\n      NumericDocValues dvDouble = MultiDocValues.getNumericValues(reader, \"dvDouble\");\n      NumericDocValues dvFloat = MultiDocValues.getNumericValues(reader, \"dvFloat\");\n      NumericDocValues dvInt = MultiDocValues.getNumericValues(reader, \"dvInt\");\n      NumericDocValues dvLong = MultiDocValues.getNumericValues(reader, \"dvLong\");\n      NumericDocValues dvPacked = MultiDocValues.getNumericValues(reader, \"dvPacked\");\n      NumericDocValues dvShort = MultiDocValues.getNumericValues(reader, \"dvShort\");\n      SortedSetDocValues dvSortedSet = null;\n      if (is42Index) {\n        dvSortedSet = MultiDocValues.getSortedSetValues(reader, \"dvSortedSet\");\n      }\n      SortedNumericDocValues dvSortedNumeric = null;\n      if (is49Index) {\n        dvSortedNumeric = MultiDocValues.getSortedNumericValues(reader, \"dvSortedNumeric\");\n      }\n      \n      for (int i=0;i<35;i++) {\n        int id = Integer.parseInt(reader.document(i).get(\"id\"));\n        assertEquals(id, dvByte.get(i));\n        \n        byte bytes[] = new byte[] {\n            (byte)(id >>> 24), (byte)(id >>> 16),(byte)(id >>> 8),(byte)id\n        };\n        BytesRef expectedRef = new BytesRef(bytes);\n        \n        BytesRef term = dvBytesDerefFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesDerefVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightVar.get(i);\n        assertEquals(expectedRef, term);\n        \n        assertEquals((double)id, Double.longBitsToDouble(dvDouble.get(i)), 0D);\n        assertEquals((float)id, Float.intBitsToFloat((int)dvFloat.get(i)), 0F);\n        assertEquals(id, dvInt.get(i));\n        assertEquals(id, dvLong.get(i));\n        assertEquals(id, dvPacked.get(i));\n        assertEquals(id, dvShort.get(i));\n        if (is42Index) {\n          dvSortedSet.setDocument(i);\n          long ord = dvSortedSet.nextOrd();\n          assertEquals(SortedSetDocValues.NO_MORE_ORDS, dvSortedSet.nextOrd());\n          term = dvSortedSet.lookupOrd(ord);\n          assertEquals(expectedRef, term);\n        }\n        if (is49Index) {\n          dvSortedNumeric.setDocument(i);\n          assertEquals(1, dvSortedNumeric.count());\n          assertEquals(id, dvSortedNumeric.valueAt(0));\n        }\n      }\n    }\n    \n    ScoreDoc[] hits = searcher.search(new TermQuery(new Term(new String(\"content\"), \"aaa\")), null, 1000).scoreDocs;\n\n    // First document should be #0\n    StoredDocument d = searcher.getIndexReader().document(hits[0].doc);\n    assertEquals(\"didn't get the right document first\", \"0\", d.get(\"id\"));\n\n    doTestHits(hits, 34, searcher.getIndexReader());\n    \n    if (is40Index) {\n      hits = searcher.search(new TermQuery(new Term(new String(\"content5\"), \"aaa\")), null, 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    \n      hits = searcher.search(new TermQuery(new Term(new String(\"content6\"), \"aaa\")), null, 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    }\n\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")), null, 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(new String(\"utf8\"), \"lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")), null, 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")), null, 1000).scoreDocs;\n    assertEquals(34, hits.length);\n\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","sourceNew":"  public void searchIndex(Directory dir, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new MockAnalyzer(random));\n    //Query query = parser.parse(\"handle:1\");\n\n    IndexReader reader = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    TestUtil.checkIndex(dir);\n    \n    // true if this is a 4.0+ index\n    final boolean is40Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"content5\") != null;\n    // true if this is a 4.2+ index\n    final boolean is42Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedSet\") != null;\n    // true if this is a 4.9+ index\n    final boolean is49Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedNumeric\") != null;\n\n    assert is40Index; // NOTE: currently we can only do this on trunk!\n\n    final Bits liveDocs = MultiFields.getLiveDocs(reader);\n\n    for(int i=0;i<35;i++) {\n      if (liveDocs.get(i)) {\n        StoredDocument d = reader.document(i);\n        List<StorableField> fields = d.getFields();\n        boolean isProxDoc = d.getField(\"content3\") == null;\n        if (isProxDoc) {\n          final int numFields = is40Index ? 7 : 5;\n          assertEquals(numFields, fields.size());\n          StorableField f =  d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n\n          f =  d.getField(\"autf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n      \n          f = d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n\n          f = d.getField(\"fie\\u2C77ld\");\n          assertEquals(\"field with non-ascii name\", f.stringValue());\n        }\n\n        Fields tfvFields = reader.getTermVectors(i);\n        assertNotNull(\"i=\" + i, tfvFields);\n        Terms tfv = tfvFields.terms(\"utf8\");\n        assertNotNull(\"docID=\" + i + \" index=\" + oldName, tfv);\n      } else {\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n      }\n    }\n\n    if (is40Index) {\n      // check docvalues fields\n      NumericDocValues dvByte = MultiDocValues.getNumericValues(reader, \"dvByte\");\n      BinaryDocValues dvBytesDerefFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefFixed\");\n      BinaryDocValues dvBytesDerefVar = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefVar\");\n      SortedDocValues dvBytesSortedFixed = MultiDocValues.getSortedValues(reader, \"dvBytesSortedFixed\");\n      SortedDocValues dvBytesSortedVar = MultiDocValues.getSortedValues(reader, \"dvBytesSortedVar\");\n      BinaryDocValues dvBytesStraightFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightFixed\");\n      BinaryDocValues dvBytesStraightVar = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightVar\");\n      NumericDocValues dvDouble = MultiDocValues.getNumericValues(reader, \"dvDouble\");\n      NumericDocValues dvFloat = MultiDocValues.getNumericValues(reader, \"dvFloat\");\n      NumericDocValues dvInt = MultiDocValues.getNumericValues(reader, \"dvInt\");\n      NumericDocValues dvLong = MultiDocValues.getNumericValues(reader, \"dvLong\");\n      NumericDocValues dvPacked = MultiDocValues.getNumericValues(reader, \"dvPacked\");\n      NumericDocValues dvShort = MultiDocValues.getNumericValues(reader, \"dvShort\");\n      SortedSetDocValues dvSortedSet = null;\n      if (is42Index) {\n        dvSortedSet = MultiDocValues.getSortedSetValues(reader, \"dvSortedSet\");\n      }\n      SortedNumericDocValues dvSortedNumeric = null;\n      if (is49Index) {\n        dvSortedNumeric = MultiDocValues.getSortedNumericValues(reader, \"dvSortedNumeric\");\n      }\n      \n      for (int i=0;i<35;i++) {\n        int id = Integer.parseInt(reader.document(i).get(\"id\"));\n        assertEquals(id, dvByte.get(i));\n        \n        byte bytes[] = new byte[] {\n            (byte)(id >>> 24), (byte)(id >>> 16),(byte)(id >>> 8),(byte)id\n        };\n        BytesRef expectedRef = new BytesRef(bytes);\n        \n        BytesRef term = dvBytesDerefFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesDerefVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightVar.get(i);\n        assertEquals(expectedRef, term);\n        \n        assertEquals((double)id, Double.longBitsToDouble(dvDouble.get(i)), 0D);\n        assertEquals((float)id, Float.intBitsToFloat((int)dvFloat.get(i)), 0F);\n        assertEquals(id, dvInt.get(i));\n        assertEquals(id, dvLong.get(i));\n        assertEquals(id, dvPacked.get(i));\n        assertEquals(id, dvShort.get(i));\n        if (is42Index) {\n          dvSortedSet.setDocument(i);\n          long ord = dvSortedSet.nextOrd();\n          assertEquals(SortedSetDocValues.NO_MORE_ORDS, dvSortedSet.nextOrd());\n          term = dvSortedSet.lookupOrd(ord);\n          assertEquals(expectedRef, term);\n        }\n        if (is49Index) {\n          dvSortedNumeric.setDocument(i);\n          assertEquals(1, dvSortedNumeric.count());\n          assertEquals(id, dvSortedNumeric.valueAt(0));\n        }\n      }\n    }\n    \n    ScoreDoc[] hits = searcher.search(new TermQuery(new Term(new String(\"content\"), \"aaa\")), null, 1000).scoreDocs;\n\n    // First document should be #0\n    StoredDocument d = searcher.getIndexReader().document(hits[0].doc);\n    assertEquals(\"didn't get the right document first\", \"0\", d.get(\"id\"));\n\n    doTestHits(hits, 34, searcher.getIndexReader());\n    \n    if (is40Index) {\n      hits = searcher.search(new TermQuery(new Term(new String(\"content5\"), \"aaa\")), null, 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    \n      hits = searcher.search(new TermQuery(new Term(new String(\"content6\"), \"aaa\")), null, 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    }\n\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")), null, 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(new String(\"utf8\"), \"lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")), null, 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")), null, 1000).scoreDocs;\n    assertEquals(34, hits.length);\n\n    reader.close();\n  }\n\n","sourceOld":"  public void searchIndex(Directory dir, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new MockAnalyzer(random));\n    //Query query = parser.parse(\"handle:1\");\n\n    IndexReader reader = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    TestUtil.checkIndex(dir);\n    \n    // true if this is a 4.0+ index\n    final boolean is40Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"content5\") != null;\n    // true if this is a 4.2+ index\n    final boolean is42Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedSet\") != null;\n    // true if this is a 4.9+ index\n    final boolean is49Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedNumeric\") != null;\n\n    assert is40Index; // NOTE: currently we can only do this on trunk!\n\n    final Bits liveDocs = MultiFields.getLiveDocs(reader);\n\n    for(int i=0;i<35;i++) {\n      if (liveDocs.get(i)) {\n        StoredDocument d = reader.document(i);\n        List<StorableField> fields = d.getFields();\n        boolean isProxDoc = d.getField(\"content3\") == null;\n        if (isProxDoc) {\n          final int numFields = is40Index ? 7 : 5;\n          assertEquals(numFields, fields.size());\n          StorableField f =  d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n\n          f =  d.getField(\"autf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n      \n          f = d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n\n          f = d.getField(\"fie\\u2C77ld\");\n          assertEquals(\"field with non-ascii name\", f.stringValue());\n        }\n\n        Fields tfvFields = reader.getTermVectors(i);\n        assertNotNull(\"i=\" + i, tfvFields);\n        Terms tfv = tfvFields.terms(\"utf8\");\n        assertNotNull(\"docID=\" + i + \" index=\" + oldName, tfv);\n      } else {\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n      }\n    }\n\n    if (is40Index) {\n      // check docvalues fields\n      NumericDocValues dvByte = MultiDocValues.getNumericValues(reader, \"dvByte\");\n      BinaryDocValues dvBytesDerefFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefFixed\");\n      BinaryDocValues dvBytesDerefVar = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefVar\");\n      SortedDocValues dvBytesSortedFixed = MultiDocValues.getSortedValues(reader, \"dvBytesSortedFixed\");\n      SortedDocValues dvBytesSortedVar = MultiDocValues.getSortedValues(reader, \"dvBytesSortedVar\");\n      BinaryDocValues dvBytesStraightFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightFixed\");\n      BinaryDocValues dvBytesStraightVar = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightVar\");\n      NumericDocValues dvDouble = MultiDocValues.getNumericValues(reader, \"dvDouble\");\n      NumericDocValues dvFloat = MultiDocValues.getNumericValues(reader, \"dvFloat\");\n      NumericDocValues dvInt = MultiDocValues.getNumericValues(reader, \"dvInt\");\n      NumericDocValues dvLong = MultiDocValues.getNumericValues(reader, \"dvLong\");\n      NumericDocValues dvPacked = MultiDocValues.getNumericValues(reader, \"dvPacked\");\n      NumericDocValues dvShort = MultiDocValues.getNumericValues(reader, \"dvShort\");\n      SortedSetDocValues dvSortedSet = null;\n      if (is42Index) {\n        dvSortedSet = MultiDocValues.getSortedSetValues(reader, \"dvSortedSet\");\n      }\n      SortedNumericDocValues dvSortedNumeric = null;\n      if (is49Index) {\n        dvSortedNumeric = MultiDocValues.getSortedNumericValues(reader, \"dvSortedNumeric\");\n      }\n      \n      for (int i=0;i<35;i++) {\n        int id = Integer.parseInt(reader.document(i).get(\"id\"));\n        assertEquals(id, dvByte.get(i));\n        \n        byte bytes[] = new byte[] {\n            (byte)(id >>> 24), (byte)(id >>> 16),(byte)(id >>> 8),(byte)id\n        };\n        BytesRef expectedRef = new BytesRef(bytes);\n        \n        BytesRef term = dvBytesDerefFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesDerefVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightVar.get(i);\n        assertEquals(expectedRef, term);\n        \n        assertEquals((double)id, Double.longBitsToDouble(dvDouble.get(i)), 0D);\n        assertEquals((float)id, Float.intBitsToFloat((int)dvFloat.get(i)), 0F);\n        assertEquals(id, dvInt.get(i));\n        assertEquals(id, dvLong.get(i));\n        assertEquals(id, dvPacked.get(i));\n        assertEquals(id, dvShort.get(i));\n        if (is42Index) {\n          dvSortedSet.setDocument(i);\n          long ord = dvSortedSet.nextOrd();\n          assertEquals(SortedSetDocValues.NO_MORE_ORDS, dvSortedSet.nextOrd());\n          term = dvSortedSet.lookupOrd(ord);\n          assertEquals(expectedRef, term);\n        }\n        if (is49Index) {\n          dvSortedNumeric.setDocument(i);\n          assertEquals(1, dvSortedNumeric.count());\n          assertEquals(id, dvSortedNumeric.valueAt(0));\n        }\n      }\n    }\n    \n    ScoreDoc[] hits = searcher.search(new TermQuery(new Term(new String(\"content\"), \"aaa\")), null, 1000).scoreDocs;\n\n    // First document should be #0\n    StoredDocument d = searcher.getIndexReader().document(hits[0].doc);\n    assertEquals(\"didn't get the right document first\", \"0\", d.get(\"id\"));\n\n    doTestHits(hits, 34, searcher.getIndexReader());\n    \n    if (is40Index) {\n      hits = searcher.search(new TermQuery(new Term(new String(\"content5\"), \"aaa\")), null, 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    \n      hits = searcher.search(new TermQuery(new Term(new String(\"content6\"), \"aaa\")), null, 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    }\n\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")), null, 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(new String(\"utf8\"), \"lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")), null, 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")), null, 1000).scoreDocs;\n    assertEquals(34, hits.length);\n\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","sourceNew":"  public void searchIndex(Directory dir, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new MockAnalyzer(random));\n    //Query query = parser.parse(\"handle:1\");\n\n    IndexReader reader = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    TestUtil.checkIndex(dir);\n    \n    // true if this is a 4.0+ index\n    final boolean is40Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"content5\") != null;\n    // true if this is a 4.2+ index\n    final boolean is42Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedSet\") != null;\n    // true if this is a 4.9+ index\n    final boolean is49Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedNumeric\") != null;\n\n    assert is40Index; // NOTE: currently we can only do this on trunk!\n\n    final Bits liveDocs = MultiFields.getLiveDocs(reader);\n\n    for(int i=0;i<35;i++) {\n      if (liveDocs.get(i)) {\n        StoredDocument d = reader.document(i);\n        List<StorableField> fields = d.getFields();\n        boolean isProxDoc = d.getField(\"content3\") == null;\n        if (isProxDoc) {\n          final int numFields = is40Index ? 7 : 5;\n          assertEquals(numFields, fields.size());\n          StorableField f =  d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n\n          f =  d.getField(\"autf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n      \n          f = d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n\n          f = d.getField(\"fie\\u2C77ld\");\n          assertEquals(\"field with non-ascii name\", f.stringValue());\n        }\n\n        Fields tfvFields = reader.getTermVectors(i);\n        assertNotNull(\"i=\" + i, tfvFields);\n        Terms tfv = tfvFields.terms(\"utf8\");\n        assertNotNull(\"docID=\" + i + \" index=\" + oldName, tfv);\n      } else {\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n      }\n    }\n\n    if (is40Index) {\n      // check docvalues fields\n      NumericDocValues dvByte = MultiDocValues.getNumericValues(reader, \"dvByte\");\n      BinaryDocValues dvBytesDerefFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefFixed\");\n      BinaryDocValues dvBytesDerefVar = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefVar\");\n      SortedDocValues dvBytesSortedFixed = MultiDocValues.getSortedValues(reader, \"dvBytesSortedFixed\");\n      SortedDocValues dvBytesSortedVar = MultiDocValues.getSortedValues(reader, \"dvBytesSortedVar\");\n      BinaryDocValues dvBytesStraightFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightFixed\");\n      BinaryDocValues dvBytesStraightVar = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightVar\");\n      NumericDocValues dvDouble = MultiDocValues.getNumericValues(reader, \"dvDouble\");\n      NumericDocValues dvFloat = MultiDocValues.getNumericValues(reader, \"dvFloat\");\n      NumericDocValues dvInt = MultiDocValues.getNumericValues(reader, \"dvInt\");\n      NumericDocValues dvLong = MultiDocValues.getNumericValues(reader, \"dvLong\");\n      NumericDocValues dvPacked = MultiDocValues.getNumericValues(reader, \"dvPacked\");\n      NumericDocValues dvShort = MultiDocValues.getNumericValues(reader, \"dvShort\");\n      SortedSetDocValues dvSortedSet = null;\n      if (is42Index) {\n        dvSortedSet = MultiDocValues.getSortedSetValues(reader, \"dvSortedSet\");\n      }\n      SortedNumericDocValues dvSortedNumeric = null;\n      if (is49Index) {\n        dvSortedNumeric = MultiDocValues.getSortedNumericValues(reader, \"dvSortedNumeric\");\n      }\n      \n      for (int i=0;i<35;i++) {\n        int id = Integer.parseInt(reader.document(i).get(\"id\"));\n        assertEquals(id, dvByte.get(i));\n        \n        byte bytes[] = new byte[] {\n            (byte)(id >>> 24), (byte)(id >>> 16),(byte)(id >>> 8),(byte)id\n        };\n        BytesRef expectedRef = new BytesRef(bytes);\n        \n        BytesRef term = dvBytesDerefFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesDerefVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightVar.get(i);\n        assertEquals(expectedRef, term);\n        \n        assertEquals((double)id, Double.longBitsToDouble(dvDouble.get(i)), 0D);\n        assertEquals((float)id, Float.intBitsToFloat((int)dvFloat.get(i)), 0F);\n        assertEquals(id, dvInt.get(i));\n        assertEquals(id, dvLong.get(i));\n        assertEquals(id, dvPacked.get(i));\n        assertEquals(id, dvShort.get(i));\n        if (is42Index) {\n          dvSortedSet.setDocument(i);\n          long ord = dvSortedSet.nextOrd();\n          assertEquals(SortedSetDocValues.NO_MORE_ORDS, dvSortedSet.nextOrd());\n          term = dvSortedSet.lookupOrd(ord);\n          assertEquals(expectedRef, term);\n        }\n        if (is49Index) {\n          dvSortedNumeric.setDocument(i);\n          assertEquals(1, dvSortedNumeric.count());\n          assertEquals(id, dvSortedNumeric.valueAt(0));\n        }\n      }\n    }\n    \n    ScoreDoc[] hits = searcher.search(new TermQuery(new Term(new String(\"content\"), \"aaa\")), 1000).scoreDocs;\n\n    // First document should be #0\n    StoredDocument d = searcher.getIndexReader().document(hits[0].doc);\n    assertEquals(\"didn't get the right document first\", \"0\", d.get(\"id\"));\n\n    doTestHits(hits, 34, searcher.getIndexReader());\n    \n    if (is40Index) {\n      hits = searcher.search(new TermQuery(new Term(new String(\"content5\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    \n      hits = searcher.search(new TermQuery(new Term(new String(\"content6\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    }\n\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(new String(\"utf8\"), \"lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n\n    reader.close();\n  }\n\n","sourceOld":"  public void searchIndex(Directory dir, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new MockAnalyzer(random));\n    //Query query = parser.parse(\"handle:1\");\n\n    IndexReader reader = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    TestUtil.checkIndex(dir);\n    \n    // true if this is a 4.0+ index\n    final boolean is40Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"content5\") != null;\n    // true if this is a 4.2+ index\n    final boolean is42Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedSet\") != null;\n    // true if this is a 4.9+ index\n    final boolean is49Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedNumeric\") != null;\n\n    assert is40Index; // NOTE: currently we can only do this on trunk!\n\n    final Bits liveDocs = MultiFields.getLiveDocs(reader);\n\n    for(int i=0;i<35;i++) {\n      if (liveDocs.get(i)) {\n        StoredDocument d = reader.document(i);\n        List<StorableField> fields = d.getFields();\n        boolean isProxDoc = d.getField(\"content3\") == null;\n        if (isProxDoc) {\n          final int numFields = is40Index ? 7 : 5;\n          assertEquals(numFields, fields.size());\n          StorableField f =  d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n\n          f =  d.getField(\"autf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n      \n          f = d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n\n          f = d.getField(\"fie\\u2C77ld\");\n          assertEquals(\"field with non-ascii name\", f.stringValue());\n        }\n\n        Fields tfvFields = reader.getTermVectors(i);\n        assertNotNull(\"i=\" + i, tfvFields);\n        Terms tfv = tfvFields.terms(\"utf8\");\n        assertNotNull(\"docID=\" + i + \" index=\" + oldName, tfv);\n      } else {\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n      }\n    }\n\n    if (is40Index) {\n      // check docvalues fields\n      NumericDocValues dvByte = MultiDocValues.getNumericValues(reader, \"dvByte\");\n      BinaryDocValues dvBytesDerefFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefFixed\");\n      BinaryDocValues dvBytesDerefVar = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefVar\");\n      SortedDocValues dvBytesSortedFixed = MultiDocValues.getSortedValues(reader, \"dvBytesSortedFixed\");\n      SortedDocValues dvBytesSortedVar = MultiDocValues.getSortedValues(reader, \"dvBytesSortedVar\");\n      BinaryDocValues dvBytesStraightFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightFixed\");\n      BinaryDocValues dvBytesStraightVar = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightVar\");\n      NumericDocValues dvDouble = MultiDocValues.getNumericValues(reader, \"dvDouble\");\n      NumericDocValues dvFloat = MultiDocValues.getNumericValues(reader, \"dvFloat\");\n      NumericDocValues dvInt = MultiDocValues.getNumericValues(reader, \"dvInt\");\n      NumericDocValues dvLong = MultiDocValues.getNumericValues(reader, \"dvLong\");\n      NumericDocValues dvPacked = MultiDocValues.getNumericValues(reader, \"dvPacked\");\n      NumericDocValues dvShort = MultiDocValues.getNumericValues(reader, \"dvShort\");\n      SortedSetDocValues dvSortedSet = null;\n      if (is42Index) {\n        dvSortedSet = MultiDocValues.getSortedSetValues(reader, \"dvSortedSet\");\n      }\n      SortedNumericDocValues dvSortedNumeric = null;\n      if (is49Index) {\n        dvSortedNumeric = MultiDocValues.getSortedNumericValues(reader, \"dvSortedNumeric\");\n      }\n      \n      for (int i=0;i<35;i++) {\n        int id = Integer.parseInt(reader.document(i).get(\"id\"));\n        assertEquals(id, dvByte.get(i));\n        \n        byte bytes[] = new byte[] {\n            (byte)(id >>> 24), (byte)(id >>> 16),(byte)(id >>> 8),(byte)id\n        };\n        BytesRef expectedRef = new BytesRef(bytes);\n        \n        BytesRef term = dvBytesDerefFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesDerefVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightVar.get(i);\n        assertEquals(expectedRef, term);\n        \n        assertEquals((double)id, Double.longBitsToDouble(dvDouble.get(i)), 0D);\n        assertEquals((float)id, Float.intBitsToFloat((int)dvFloat.get(i)), 0F);\n        assertEquals(id, dvInt.get(i));\n        assertEquals(id, dvLong.get(i));\n        assertEquals(id, dvPacked.get(i));\n        assertEquals(id, dvShort.get(i));\n        if (is42Index) {\n          dvSortedSet.setDocument(i);\n          long ord = dvSortedSet.nextOrd();\n          assertEquals(SortedSetDocValues.NO_MORE_ORDS, dvSortedSet.nextOrd());\n          term = dvSortedSet.lookupOrd(ord);\n          assertEquals(expectedRef, term);\n        }\n        if (is49Index) {\n          dvSortedNumeric.setDocument(i);\n          assertEquals(1, dvSortedNumeric.count());\n          assertEquals(id, dvSortedNumeric.valueAt(0));\n        }\n      }\n    }\n    \n    ScoreDoc[] hits = searcher.search(new TermQuery(new Term(new String(\"content\"), \"aaa\")), null, 1000).scoreDocs;\n\n    // First document should be #0\n    StoredDocument d = searcher.getIndexReader().document(hits[0].doc);\n    assertEquals(\"didn't get the right document first\", \"0\", d.get(\"id\"));\n\n    doTestHits(hits, 34, searcher.getIndexReader());\n    \n    if (is40Index) {\n      hits = searcher.search(new TermQuery(new Term(new String(\"content5\"), \"aaa\")), null, 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    \n      hits = searcher.search(new TermQuery(new Term(new String(\"content6\"), \"aaa\")), null, 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    }\n\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")), null, 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(new String(\"utf8\"), \"lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")), null, 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")), null, 1000).scoreDocs;\n    assertEquals(34, hits.length);\n\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","sourceNew":"  public void searchIndex(Directory dir, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new MockAnalyzer(random));\n    //Query query = parser.parse(\"handle:1\");\n\n    IndexReader reader = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    TestUtil.checkIndex(dir);\n    \n    // true if this is a 4.0+ index\n    final boolean is40Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"content5\") != null;\n    // true if this is a 4.2+ index\n    final boolean is42Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedSet\") != null;\n    // true if this is a 4.9+ index\n    final boolean is49Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedNumeric\") != null;\n\n    assert is40Index; // NOTE: currently we can only do this on trunk!\n\n    final Bits liveDocs = MultiFields.getLiveDocs(reader);\n\n    for(int i=0;i<35;i++) {\n      if (liveDocs.get(i)) {\n        Document d = reader.document(i);\n        List<IndexableField> fields = d.getFields();\n        boolean isProxDoc = d.getField(\"content3\") == null;\n        if (isProxDoc) {\n          final int numFields = is40Index ? 7 : 5;\n          assertEquals(numFields, fields.size());\n          IndexableField f = d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n\n          f =  d.getField(\"autf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n      \n          f = d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n\n          f = d.getField(\"fie\\u2C77ld\");\n          assertEquals(\"field with non-ascii name\", f.stringValue());\n        }\n\n        Fields tfvFields = reader.getTermVectors(i);\n        assertNotNull(\"i=\" + i, tfvFields);\n        Terms tfv = tfvFields.terms(\"utf8\");\n        assertNotNull(\"docID=\" + i + \" index=\" + oldName, tfv);\n      } else {\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n      }\n    }\n\n    if (is40Index) {\n      // check docvalues fields\n      NumericDocValues dvByte = MultiDocValues.getNumericValues(reader, \"dvByte\");\n      BinaryDocValues dvBytesDerefFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefFixed\");\n      BinaryDocValues dvBytesDerefVar = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefVar\");\n      SortedDocValues dvBytesSortedFixed = MultiDocValues.getSortedValues(reader, \"dvBytesSortedFixed\");\n      SortedDocValues dvBytesSortedVar = MultiDocValues.getSortedValues(reader, \"dvBytesSortedVar\");\n      BinaryDocValues dvBytesStraightFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightFixed\");\n      BinaryDocValues dvBytesStraightVar = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightVar\");\n      NumericDocValues dvDouble = MultiDocValues.getNumericValues(reader, \"dvDouble\");\n      NumericDocValues dvFloat = MultiDocValues.getNumericValues(reader, \"dvFloat\");\n      NumericDocValues dvInt = MultiDocValues.getNumericValues(reader, \"dvInt\");\n      NumericDocValues dvLong = MultiDocValues.getNumericValues(reader, \"dvLong\");\n      NumericDocValues dvPacked = MultiDocValues.getNumericValues(reader, \"dvPacked\");\n      NumericDocValues dvShort = MultiDocValues.getNumericValues(reader, \"dvShort\");\n      SortedSetDocValues dvSortedSet = null;\n      if (is42Index) {\n        dvSortedSet = MultiDocValues.getSortedSetValues(reader, \"dvSortedSet\");\n      }\n      SortedNumericDocValues dvSortedNumeric = null;\n      if (is49Index) {\n        dvSortedNumeric = MultiDocValues.getSortedNumericValues(reader, \"dvSortedNumeric\");\n      }\n      \n      for (int i=0;i<35;i++) {\n        int id = Integer.parseInt(reader.document(i).get(\"id\"));\n        assertEquals(id, dvByte.get(i));\n        \n        byte bytes[] = new byte[] {\n            (byte)(id >>> 24), (byte)(id >>> 16),(byte)(id >>> 8),(byte)id\n        };\n        BytesRef expectedRef = new BytesRef(bytes);\n        \n        BytesRef term = dvBytesDerefFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesDerefVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightVar.get(i);\n        assertEquals(expectedRef, term);\n        \n        assertEquals((double)id, Double.longBitsToDouble(dvDouble.get(i)), 0D);\n        assertEquals((float)id, Float.intBitsToFloat((int)dvFloat.get(i)), 0F);\n        assertEquals(id, dvInt.get(i));\n        assertEquals(id, dvLong.get(i));\n        assertEquals(id, dvPacked.get(i));\n        assertEquals(id, dvShort.get(i));\n        if (is42Index) {\n          dvSortedSet.setDocument(i);\n          long ord = dvSortedSet.nextOrd();\n          assertEquals(SortedSetDocValues.NO_MORE_ORDS, dvSortedSet.nextOrd());\n          term = dvSortedSet.lookupOrd(ord);\n          assertEquals(expectedRef, term);\n        }\n        if (is49Index) {\n          dvSortedNumeric.setDocument(i);\n          assertEquals(1, dvSortedNumeric.count());\n          assertEquals(id, dvSortedNumeric.valueAt(0));\n        }\n      }\n    }\n    \n    ScoreDoc[] hits = searcher.search(new TermQuery(new Term(new String(\"content\"), \"aaa\")), 1000).scoreDocs;\n\n    // First document should be #0\n    Document d = searcher.getIndexReader().document(hits[0].doc);\n    assertEquals(\"didn't get the right document first\", \"0\", d.get(\"id\"));\n\n    doTestHits(hits, 34, searcher.getIndexReader());\n    \n    if (is40Index) {\n      hits = searcher.search(new TermQuery(new Term(new String(\"content5\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    \n      hits = searcher.search(new TermQuery(new Term(new String(\"content6\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    }\n\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(new String(\"utf8\"), \"lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n\n    reader.close();\n  }\n\n","sourceOld":"  public void searchIndex(Directory dir, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new MockAnalyzer(random));\n    //Query query = parser.parse(\"handle:1\");\n\n    IndexReader reader = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    TestUtil.checkIndex(dir);\n    \n    // true if this is a 4.0+ index\n    final boolean is40Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"content5\") != null;\n    // true if this is a 4.2+ index\n    final boolean is42Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedSet\") != null;\n    // true if this is a 4.9+ index\n    final boolean is49Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedNumeric\") != null;\n\n    assert is40Index; // NOTE: currently we can only do this on trunk!\n\n    final Bits liveDocs = MultiFields.getLiveDocs(reader);\n\n    for(int i=0;i<35;i++) {\n      if (liveDocs.get(i)) {\n        StoredDocument d = reader.document(i);\n        List<StorableField> fields = d.getFields();\n        boolean isProxDoc = d.getField(\"content3\") == null;\n        if (isProxDoc) {\n          final int numFields = is40Index ? 7 : 5;\n          assertEquals(numFields, fields.size());\n          StorableField f =  d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n\n          f =  d.getField(\"autf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n      \n          f = d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n\n          f = d.getField(\"fie\\u2C77ld\");\n          assertEquals(\"field with non-ascii name\", f.stringValue());\n        }\n\n        Fields tfvFields = reader.getTermVectors(i);\n        assertNotNull(\"i=\" + i, tfvFields);\n        Terms tfv = tfvFields.terms(\"utf8\");\n        assertNotNull(\"docID=\" + i + \" index=\" + oldName, tfv);\n      } else {\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n      }\n    }\n\n    if (is40Index) {\n      // check docvalues fields\n      NumericDocValues dvByte = MultiDocValues.getNumericValues(reader, \"dvByte\");\n      BinaryDocValues dvBytesDerefFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefFixed\");\n      BinaryDocValues dvBytesDerefVar = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefVar\");\n      SortedDocValues dvBytesSortedFixed = MultiDocValues.getSortedValues(reader, \"dvBytesSortedFixed\");\n      SortedDocValues dvBytesSortedVar = MultiDocValues.getSortedValues(reader, \"dvBytesSortedVar\");\n      BinaryDocValues dvBytesStraightFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightFixed\");\n      BinaryDocValues dvBytesStraightVar = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightVar\");\n      NumericDocValues dvDouble = MultiDocValues.getNumericValues(reader, \"dvDouble\");\n      NumericDocValues dvFloat = MultiDocValues.getNumericValues(reader, \"dvFloat\");\n      NumericDocValues dvInt = MultiDocValues.getNumericValues(reader, \"dvInt\");\n      NumericDocValues dvLong = MultiDocValues.getNumericValues(reader, \"dvLong\");\n      NumericDocValues dvPacked = MultiDocValues.getNumericValues(reader, \"dvPacked\");\n      NumericDocValues dvShort = MultiDocValues.getNumericValues(reader, \"dvShort\");\n      SortedSetDocValues dvSortedSet = null;\n      if (is42Index) {\n        dvSortedSet = MultiDocValues.getSortedSetValues(reader, \"dvSortedSet\");\n      }\n      SortedNumericDocValues dvSortedNumeric = null;\n      if (is49Index) {\n        dvSortedNumeric = MultiDocValues.getSortedNumericValues(reader, \"dvSortedNumeric\");\n      }\n      \n      for (int i=0;i<35;i++) {\n        int id = Integer.parseInt(reader.document(i).get(\"id\"));\n        assertEquals(id, dvByte.get(i));\n        \n        byte bytes[] = new byte[] {\n            (byte)(id >>> 24), (byte)(id >>> 16),(byte)(id >>> 8),(byte)id\n        };\n        BytesRef expectedRef = new BytesRef(bytes);\n        \n        BytesRef term = dvBytesDerefFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesDerefVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightVar.get(i);\n        assertEquals(expectedRef, term);\n        \n        assertEquals((double)id, Double.longBitsToDouble(dvDouble.get(i)), 0D);\n        assertEquals((float)id, Float.intBitsToFloat((int)dvFloat.get(i)), 0F);\n        assertEquals(id, dvInt.get(i));\n        assertEquals(id, dvLong.get(i));\n        assertEquals(id, dvPacked.get(i));\n        assertEquals(id, dvShort.get(i));\n        if (is42Index) {\n          dvSortedSet.setDocument(i);\n          long ord = dvSortedSet.nextOrd();\n          assertEquals(SortedSetDocValues.NO_MORE_ORDS, dvSortedSet.nextOrd());\n          term = dvSortedSet.lookupOrd(ord);\n          assertEquals(expectedRef, term);\n        }\n        if (is49Index) {\n          dvSortedNumeric.setDocument(i);\n          assertEquals(1, dvSortedNumeric.count());\n          assertEquals(id, dvSortedNumeric.valueAt(0));\n        }\n      }\n    }\n    \n    ScoreDoc[] hits = searcher.search(new TermQuery(new Term(new String(\"content\"), \"aaa\")), 1000).scoreDocs;\n\n    // First document should be #0\n    StoredDocument d = searcher.getIndexReader().document(hits[0].doc);\n    assertEquals(\"didn't get the right document first\", \"0\", d.get(\"id\"));\n\n    doTestHits(hits, 34, searcher.getIndexReader());\n    \n    if (is40Index) {\n      hits = searcher.search(new TermQuery(new Term(new String(\"content5\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    \n      hits = searcher.search(new TermQuery(new Term(new String(\"content6\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    }\n\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(new String(\"utf8\"), \"lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a1a7fc70ffbbbfd3ad723576e59470c063c05e03","date":1457096902,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","sourceNew":"  public void searchIndex(Directory dir, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new MockAnalyzer(random));\n    //Query query = parser.parse(\"handle:1\");\n\n    IndexReader reader = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    TestUtil.checkIndex(dir);\n    \n    // true if this is a 4.0+ index\n    final boolean is40Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"content5\") != null;\n    // true if this is a 4.2+ index\n    final boolean is42Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedSet\") != null;\n    // true if this is a 4.9+ index\n    final boolean is49Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedNumeric\") != null;\n\n    assert is40Index;\n\n    final Bits liveDocs = MultiFields.getLiveDocs(reader);\n\n    for(int i=0;i<35;i++) {\n      if (liveDocs.get(i)) {\n        Document d = reader.document(i);\n        List<IndexableField> fields = d.getFields();\n        boolean isProxDoc = d.getField(\"content3\") == null;\n        if (isProxDoc) {\n          final int numFields = is40Index ? 7 : 5;\n          assertEquals(numFields, fields.size());\n          IndexableField f = d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n\n          f =  d.getField(\"autf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n      \n          f = d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n\n          f = d.getField(\"fie\\u2C77ld\");\n          assertEquals(\"field with non-ascii name\", f.stringValue());\n        }\n\n        Fields tfvFields = reader.getTermVectors(i);\n        assertNotNull(\"i=\" + i, tfvFields);\n        Terms tfv = tfvFields.terms(\"utf8\");\n        assertNotNull(\"docID=\" + i + \" index=\" + oldName, tfv);\n      } else {\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n      }\n    }\n\n    if (is40Index) {\n      // check docvalues fields\n      NumericDocValues dvByte = MultiDocValues.getNumericValues(reader, \"dvByte\");\n      BinaryDocValues dvBytesDerefFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefFixed\");\n      BinaryDocValues dvBytesDerefVar = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefVar\");\n      SortedDocValues dvBytesSortedFixed = MultiDocValues.getSortedValues(reader, \"dvBytesSortedFixed\");\n      SortedDocValues dvBytesSortedVar = MultiDocValues.getSortedValues(reader, \"dvBytesSortedVar\");\n      BinaryDocValues dvBytesStraightFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightFixed\");\n      BinaryDocValues dvBytesStraightVar = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightVar\");\n      NumericDocValues dvDouble = MultiDocValues.getNumericValues(reader, \"dvDouble\");\n      NumericDocValues dvFloat = MultiDocValues.getNumericValues(reader, \"dvFloat\");\n      NumericDocValues dvInt = MultiDocValues.getNumericValues(reader, \"dvInt\");\n      NumericDocValues dvLong = MultiDocValues.getNumericValues(reader, \"dvLong\");\n      NumericDocValues dvPacked = MultiDocValues.getNumericValues(reader, \"dvPacked\");\n      NumericDocValues dvShort = MultiDocValues.getNumericValues(reader, \"dvShort\");\n      SortedSetDocValues dvSortedSet = null;\n      if (is42Index) {\n        dvSortedSet = MultiDocValues.getSortedSetValues(reader, \"dvSortedSet\");\n      }\n      SortedNumericDocValues dvSortedNumeric = null;\n      if (is49Index) {\n        dvSortedNumeric = MultiDocValues.getSortedNumericValues(reader, \"dvSortedNumeric\");\n      }\n      \n      for (int i=0;i<35;i++) {\n        int id = Integer.parseInt(reader.document(i).get(\"id\"));\n        assertEquals(id, dvByte.get(i));\n        \n        byte bytes[] = new byte[] {\n            (byte)(id >>> 24), (byte)(id >>> 16),(byte)(id >>> 8),(byte)id\n        };\n        BytesRef expectedRef = new BytesRef(bytes);\n        \n        BytesRef term = dvBytesDerefFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesDerefVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightVar.get(i);\n        assertEquals(expectedRef, term);\n        \n        assertEquals((double)id, Double.longBitsToDouble(dvDouble.get(i)), 0D);\n        assertEquals((float)id, Float.intBitsToFloat((int)dvFloat.get(i)), 0F);\n        assertEquals(id, dvInt.get(i));\n        assertEquals(id, dvLong.get(i));\n        assertEquals(id, dvPacked.get(i));\n        assertEquals(id, dvShort.get(i));\n        if (is42Index) {\n          dvSortedSet.setDocument(i);\n          long ord = dvSortedSet.nextOrd();\n          assertEquals(SortedSetDocValues.NO_MORE_ORDS, dvSortedSet.nextOrd());\n          term = dvSortedSet.lookupOrd(ord);\n          assertEquals(expectedRef, term);\n        }\n        if (is49Index) {\n          dvSortedNumeric.setDocument(i);\n          assertEquals(1, dvSortedNumeric.count());\n          assertEquals(id, dvSortedNumeric.valueAt(0));\n        }\n      }\n    }\n    \n    ScoreDoc[] hits = searcher.search(new TermQuery(new Term(new String(\"content\"), \"aaa\")), 1000).scoreDocs;\n\n    // First document should be #0\n    Document d = searcher.getIndexReader().document(hits[0].doc);\n    assertEquals(\"didn't get the right document first\", \"0\", d.get(\"id\"));\n\n    doTestHits(hits, 34, searcher.getIndexReader());\n    \n    if (is40Index) {\n      hits = searcher.search(new TermQuery(new Term(new String(\"content5\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    \n      hits = searcher.search(new TermQuery(new Term(new String(\"content6\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    }\n\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(new String(\"utf8\"), \"lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n\n    reader.close();\n  }\n\n","sourceOld":"  public void searchIndex(Directory dir, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new MockAnalyzer(random));\n    //Query query = parser.parse(\"handle:1\");\n\n    IndexReader reader = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    TestUtil.checkIndex(dir);\n    \n    // true if this is a 4.0+ index\n    final boolean is40Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"content5\") != null;\n    // true if this is a 4.2+ index\n    final boolean is42Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedSet\") != null;\n    // true if this is a 4.9+ index\n    final boolean is49Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedNumeric\") != null;\n\n    assert is40Index; // NOTE: currently we can only do this on trunk!\n\n    final Bits liveDocs = MultiFields.getLiveDocs(reader);\n\n    for(int i=0;i<35;i++) {\n      if (liveDocs.get(i)) {\n        Document d = reader.document(i);\n        List<IndexableField> fields = d.getFields();\n        boolean isProxDoc = d.getField(\"content3\") == null;\n        if (isProxDoc) {\n          final int numFields = is40Index ? 7 : 5;\n          assertEquals(numFields, fields.size());\n          IndexableField f = d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n\n          f =  d.getField(\"autf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n      \n          f = d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n\n          f = d.getField(\"fie\\u2C77ld\");\n          assertEquals(\"field with non-ascii name\", f.stringValue());\n        }\n\n        Fields tfvFields = reader.getTermVectors(i);\n        assertNotNull(\"i=\" + i, tfvFields);\n        Terms tfv = tfvFields.terms(\"utf8\");\n        assertNotNull(\"docID=\" + i + \" index=\" + oldName, tfv);\n      } else {\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n      }\n    }\n\n    if (is40Index) {\n      // check docvalues fields\n      NumericDocValues dvByte = MultiDocValues.getNumericValues(reader, \"dvByte\");\n      BinaryDocValues dvBytesDerefFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefFixed\");\n      BinaryDocValues dvBytesDerefVar = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefVar\");\n      SortedDocValues dvBytesSortedFixed = MultiDocValues.getSortedValues(reader, \"dvBytesSortedFixed\");\n      SortedDocValues dvBytesSortedVar = MultiDocValues.getSortedValues(reader, \"dvBytesSortedVar\");\n      BinaryDocValues dvBytesStraightFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightFixed\");\n      BinaryDocValues dvBytesStraightVar = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightVar\");\n      NumericDocValues dvDouble = MultiDocValues.getNumericValues(reader, \"dvDouble\");\n      NumericDocValues dvFloat = MultiDocValues.getNumericValues(reader, \"dvFloat\");\n      NumericDocValues dvInt = MultiDocValues.getNumericValues(reader, \"dvInt\");\n      NumericDocValues dvLong = MultiDocValues.getNumericValues(reader, \"dvLong\");\n      NumericDocValues dvPacked = MultiDocValues.getNumericValues(reader, \"dvPacked\");\n      NumericDocValues dvShort = MultiDocValues.getNumericValues(reader, \"dvShort\");\n      SortedSetDocValues dvSortedSet = null;\n      if (is42Index) {\n        dvSortedSet = MultiDocValues.getSortedSetValues(reader, \"dvSortedSet\");\n      }\n      SortedNumericDocValues dvSortedNumeric = null;\n      if (is49Index) {\n        dvSortedNumeric = MultiDocValues.getSortedNumericValues(reader, \"dvSortedNumeric\");\n      }\n      \n      for (int i=0;i<35;i++) {\n        int id = Integer.parseInt(reader.document(i).get(\"id\"));\n        assertEquals(id, dvByte.get(i));\n        \n        byte bytes[] = new byte[] {\n            (byte)(id >>> 24), (byte)(id >>> 16),(byte)(id >>> 8),(byte)id\n        };\n        BytesRef expectedRef = new BytesRef(bytes);\n        \n        BytesRef term = dvBytesDerefFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesDerefVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightVar.get(i);\n        assertEquals(expectedRef, term);\n        \n        assertEquals((double)id, Double.longBitsToDouble(dvDouble.get(i)), 0D);\n        assertEquals((float)id, Float.intBitsToFloat((int)dvFloat.get(i)), 0F);\n        assertEquals(id, dvInt.get(i));\n        assertEquals(id, dvLong.get(i));\n        assertEquals(id, dvPacked.get(i));\n        assertEquals(id, dvShort.get(i));\n        if (is42Index) {\n          dvSortedSet.setDocument(i);\n          long ord = dvSortedSet.nextOrd();\n          assertEquals(SortedSetDocValues.NO_MORE_ORDS, dvSortedSet.nextOrd());\n          term = dvSortedSet.lookupOrd(ord);\n          assertEquals(expectedRef, term);\n        }\n        if (is49Index) {\n          dvSortedNumeric.setDocument(i);\n          assertEquals(1, dvSortedNumeric.count());\n          assertEquals(id, dvSortedNumeric.valueAt(0));\n        }\n      }\n    }\n    \n    ScoreDoc[] hits = searcher.search(new TermQuery(new Term(new String(\"content\"), \"aaa\")), 1000).scoreDocs;\n\n    // First document should be #0\n    Document d = searcher.getIndexReader().document(hits[0].doc);\n    assertEquals(\"didn't get the right document first\", \"0\", d.get(\"id\"));\n\n    doTestHits(hits, 34, searcher.getIndexReader());\n    \n    if (is40Index) {\n      hits = searcher.search(new TermQuery(new Term(new String(\"content5\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    \n      hits = searcher.search(new TermQuery(new Term(new String(\"content6\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    }\n\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(new String(\"utf8\"), \"lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"858ac9239fd641f6756a6a3053b76c4023b29ffc","date":1457097852,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","sourceNew":"  public void searchIndex(Directory dir, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new MockAnalyzer(random));\n    //Query query = parser.parse(\"handle:1\");\n\n    IndexReader reader = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    TestUtil.checkIndex(dir);\n    \n    // true if this is a 4.0+ index\n    final boolean is40Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"content5\") != null;\n    // true if this is a 4.2+ index\n    final boolean is42Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedSet\") != null;\n    // true if this is a 4.9+ index\n    final boolean is49Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedNumeric\") != null;\n\n    assert is40Index;\n\n    final Bits liveDocs = MultiFields.getLiveDocs(reader);\n\n    for(int i=0;i<35;i++) {\n      if (liveDocs.get(i)) {\n        Document d = reader.document(i);\n        List<IndexableField> fields = d.getFields();\n        boolean isProxDoc = d.getField(\"content3\") == null;\n        if (isProxDoc) {\n          final int numFields = is40Index ? 7 : 5;\n          assertEquals(numFields, fields.size());\n          IndexableField f = d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n\n          f =  d.getField(\"autf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n      \n          f = d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n\n          f = d.getField(\"fie\\u2C77ld\");\n          assertEquals(\"field with non-ascii name\", f.stringValue());\n        }\n\n        Fields tfvFields = reader.getTermVectors(i);\n        assertNotNull(\"i=\" + i, tfvFields);\n        Terms tfv = tfvFields.terms(\"utf8\");\n        assertNotNull(\"docID=\" + i + \" index=\" + oldName, tfv);\n      } else {\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n      }\n    }\n\n    if (is40Index) {\n      // check docvalues fields\n      NumericDocValues dvByte = MultiDocValues.getNumericValues(reader, \"dvByte\");\n      BinaryDocValues dvBytesDerefFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefFixed\");\n      BinaryDocValues dvBytesDerefVar = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefVar\");\n      SortedDocValues dvBytesSortedFixed = MultiDocValues.getSortedValues(reader, \"dvBytesSortedFixed\");\n      SortedDocValues dvBytesSortedVar = MultiDocValues.getSortedValues(reader, \"dvBytesSortedVar\");\n      BinaryDocValues dvBytesStraightFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightFixed\");\n      BinaryDocValues dvBytesStraightVar = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightVar\");\n      NumericDocValues dvDouble = MultiDocValues.getNumericValues(reader, \"dvDouble\");\n      NumericDocValues dvFloat = MultiDocValues.getNumericValues(reader, \"dvFloat\");\n      NumericDocValues dvInt = MultiDocValues.getNumericValues(reader, \"dvInt\");\n      NumericDocValues dvLong = MultiDocValues.getNumericValues(reader, \"dvLong\");\n      NumericDocValues dvPacked = MultiDocValues.getNumericValues(reader, \"dvPacked\");\n      NumericDocValues dvShort = MultiDocValues.getNumericValues(reader, \"dvShort\");\n      SortedSetDocValues dvSortedSet = null;\n      if (is42Index) {\n        dvSortedSet = MultiDocValues.getSortedSetValues(reader, \"dvSortedSet\");\n      }\n      SortedNumericDocValues dvSortedNumeric = null;\n      if (is49Index) {\n        dvSortedNumeric = MultiDocValues.getSortedNumericValues(reader, \"dvSortedNumeric\");\n      }\n      \n      for (int i=0;i<35;i++) {\n        int id = Integer.parseInt(reader.document(i).get(\"id\"));\n        assertEquals(id, dvByte.get(i));\n        \n        byte bytes[] = new byte[] {\n            (byte)(id >>> 24), (byte)(id >>> 16),(byte)(id >>> 8),(byte)id\n        };\n        BytesRef expectedRef = new BytesRef(bytes);\n        \n        BytesRef term = dvBytesDerefFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesDerefVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightVar.get(i);\n        assertEquals(expectedRef, term);\n        \n        assertEquals((double)id, Double.longBitsToDouble(dvDouble.get(i)), 0D);\n        assertEquals((float)id, Float.intBitsToFloat((int)dvFloat.get(i)), 0F);\n        assertEquals(id, dvInt.get(i));\n        assertEquals(id, dvLong.get(i));\n        assertEquals(id, dvPacked.get(i));\n        assertEquals(id, dvShort.get(i));\n        if (is42Index) {\n          dvSortedSet.setDocument(i);\n          long ord = dvSortedSet.nextOrd();\n          assertEquals(SortedSetDocValues.NO_MORE_ORDS, dvSortedSet.nextOrd());\n          term = dvSortedSet.lookupOrd(ord);\n          assertEquals(expectedRef, term);\n        }\n        if (is49Index) {\n          dvSortedNumeric.setDocument(i);\n          assertEquals(1, dvSortedNumeric.count());\n          assertEquals(id, dvSortedNumeric.valueAt(0));\n        }\n      }\n    }\n    \n    ScoreDoc[] hits = searcher.search(new TermQuery(new Term(new String(\"content\"), \"aaa\")), 1000).scoreDocs;\n\n    // First document should be #0\n    Document d = searcher.getIndexReader().document(hits[0].doc);\n    assertEquals(\"didn't get the right document first\", \"0\", d.get(\"id\"));\n\n    doTestHits(hits, 34, searcher.getIndexReader());\n    \n    if (is40Index) {\n      hits = searcher.search(new TermQuery(new Term(new String(\"content5\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    \n      hits = searcher.search(new TermQuery(new Term(new String(\"content6\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    }\n\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(new String(\"utf8\"), \"lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n\n    reader.close();\n  }\n\n","sourceOld":"  public void searchIndex(Directory dir, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new MockAnalyzer(random));\n    //Query query = parser.parse(\"handle:1\");\n\n    IndexReader reader = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    TestUtil.checkIndex(dir);\n    \n    // true if this is a 4.0+ index\n    final boolean is40Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"content5\") != null;\n    // true if this is a 4.2+ index\n    final boolean is42Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedSet\") != null;\n    // true if this is a 4.9+ index\n    final boolean is49Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedNumeric\") != null;\n\n    assert is40Index; // NOTE: currently we can only do this on trunk!\n\n    final Bits liveDocs = MultiFields.getLiveDocs(reader);\n\n    for(int i=0;i<35;i++) {\n      if (liveDocs.get(i)) {\n        Document d = reader.document(i);\n        List<IndexableField> fields = d.getFields();\n        boolean isProxDoc = d.getField(\"content3\") == null;\n        if (isProxDoc) {\n          final int numFields = is40Index ? 7 : 5;\n          assertEquals(numFields, fields.size());\n          IndexableField f = d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n\n          f =  d.getField(\"autf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n      \n          f = d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n\n          f = d.getField(\"fie\\u2C77ld\");\n          assertEquals(\"field with non-ascii name\", f.stringValue());\n        }\n\n        Fields tfvFields = reader.getTermVectors(i);\n        assertNotNull(\"i=\" + i, tfvFields);\n        Terms tfv = tfvFields.terms(\"utf8\");\n        assertNotNull(\"docID=\" + i + \" index=\" + oldName, tfv);\n      } else {\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n      }\n    }\n\n    if (is40Index) {\n      // check docvalues fields\n      NumericDocValues dvByte = MultiDocValues.getNumericValues(reader, \"dvByte\");\n      BinaryDocValues dvBytesDerefFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefFixed\");\n      BinaryDocValues dvBytesDerefVar = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefVar\");\n      SortedDocValues dvBytesSortedFixed = MultiDocValues.getSortedValues(reader, \"dvBytesSortedFixed\");\n      SortedDocValues dvBytesSortedVar = MultiDocValues.getSortedValues(reader, \"dvBytesSortedVar\");\n      BinaryDocValues dvBytesStraightFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightFixed\");\n      BinaryDocValues dvBytesStraightVar = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightVar\");\n      NumericDocValues dvDouble = MultiDocValues.getNumericValues(reader, \"dvDouble\");\n      NumericDocValues dvFloat = MultiDocValues.getNumericValues(reader, \"dvFloat\");\n      NumericDocValues dvInt = MultiDocValues.getNumericValues(reader, \"dvInt\");\n      NumericDocValues dvLong = MultiDocValues.getNumericValues(reader, \"dvLong\");\n      NumericDocValues dvPacked = MultiDocValues.getNumericValues(reader, \"dvPacked\");\n      NumericDocValues dvShort = MultiDocValues.getNumericValues(reader, \"dvShort\");\n      SortedSetDocValues dvSortedSet = null;\n      if (is42Index) {\n        dvSortedSet = MultiDocValues.getSortedSetValues(reader, \"dvSortedSet\");\n      }\n      SortedNumericDocValues dvSortedNumeric = null;\n      if (is49Index) {\n        dvSortedNumeric = MultiDocValues.getSortedNumericValues(reader, \"dvSortedNumeric\");\n      }\n      \n      for (int i=0;i<35;i++) {\n        int id = Integer.parseInt(reader.document(i).get(\"id\"));\n        assertEquals(id, dvByte.get(i));\n        \n        byte bytes[] = new byte[] {\n            (byte)(id >>> 24), (byte)(id >>> 16),(byte)(id >>> 8),(byte)id\n        };\n        BytesRef expectedRef = new BytesRef(bytes);\n        \n        BytesRef term = dvBytesDerefFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesDerefVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightVar.get(i);\n        assertEquals(expectedRef, term);\n        \n        assertEquals((double)id, Double.longBitsToDouble(dvDouble.get(i)), 0D);\n        assertEquals((float)id, Float.intBitsToFloat((int)dvFloat.get(i)), 0F);\n        assertEquals(id, dvInt.get(i));\n        assertEquals(id, dvLong.get(i));\n        assertEquals(id, dvPacked.get(i));\n        assertEquals(id, dvShort.get(i));\n        if (is42Index) {\n          dvSortedSet.setDocument(i);\n          long ord = dvSortedSet.nextOrd();\n          assertEquals(SortedSetDocValues.NO_MORE_ORDS, dvSortedSet.nextOrd());\n          term = dvSortedSet.lookupOrd(ord);\n          assertEquals(expectedRef, term);\n        }\n        if (is49Index) {\n          dvSortedNumeric.setDocument(i);\n          assertEquals(1, dvSortedNumeric.count());\n          assertEquals(id, dvSortedNumeric.valueAt(0));\n        }\n      }\n    }\n    \n    ScoreDoc[] hits = searcher.search(new TermQuery(new Term(new String(\"content\"), \"aaa\")), 1000).scoreDocs;\n\n    // First document should be #0\n    Document d = searcher.getIndexReader().document(hits[0].doc);\n    assertEquals(\"didn't get the right document first\", \"0\", d.get(\"id\"));\n\n    doTestHits(hits, 34, searcher.getIndexReader());\n    \n    if (is40Index) {\n      hits = searcher.search(new TermQuery(new Term(new String(\"content5\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    \n      hits = searcher.search(new TermQuery(new Term(new String(\"content6\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    }\n\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(new String(\"utf8\"), \"lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74afd3206df44c6b7fc46faaac8bf5c7a080ff23","date":1468332864,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","sourceNew":"  public void searchIndex(Directory dir, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new MockAnalyzer(random));\n    //Query query = parser.parse(\"handle:1\");\n\n    IndexReader reader = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    TestUtil.checkIndex(dir);\n    \n    // true if this is a 4.0+ index\n    final boolean is40Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"content5\") != null;\n    // true if this is a 4.2+ index\n    final boolean is42Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedSet\") != null;\n    // true if this is a 4.9+ index\n    final boolean is49Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedNumeric\") != null;\n    // true if this index has points (>= 6.0)\n    final boolean hasPoints = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"intPoint1d\") != null;\n\n    assert is40Index;\n\n    final Bits liveDocs = MultiFields.getLiveDocs(reader);\n\n    for(int i=0;i<35;i++) {\n      if (liveDocs.get(i)) {\n        Document d = reader.document(i);\n        List<IndexableField> fields = d.getFields();\n        boolean isProxDoc = d.getField(\"content3\") == null;\n        if (isProxDoc) {\n          final int numFields = is40Index ? 7 : 5;\n          assertEquals(numFields, fields.size());\n          IndexableField f = d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n\n          f =  d.getField(\"autf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n      \n          f = d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n\n          f = d.getField(\"fie\\u2C77ld\");\n          assertEquals(\"field with non-ascii name\", f.stringValue());\n        }\n\n        Fields tfvFields = reader.getTermVectors(i);\n        assertNotNull(\"i=\" + i, tfvFields);\n        Terms tfv = tfvFields.terms(\"utf8\");\n        assertNotNull(\"docID=\" + i + \" index=\" + oldName, tfv);\n      } else {\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n      }\n    }\n\n    if (is40Index) {\n      // check docvalues fields\n      NumericDocValues dvByte = MultiDocValues.getNumericValues(reader, \"dvByte\");\n      BinaryDocValues dvBytesDerefFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefFixed\");\n      BinaryDocValues dvBytesDerefVar = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefVar\");\n      SortedDocValues dvBytesSortedFixed = MultiDocValues.getSortedValues(reader, \"dvBytesSortedFixed\");\n      SortedDocValues dvBytesSortedVar = MultiDocValues.getSortedValues(reader, \"dvBytesSortedVar\");\n      BinaryDocValues dvBytesStraightFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightFixed\");\n      BinaryDocValues dvBytesStraightVar = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightVar\");\n      NumericDocValues dvDouble = MultiDocValues.getNumericValues(reader, \"dvDouble\");\n      NumericDocValues dvFloat = MultiDocValues.getNumericValues(reader, \"dvFloat\");\n      NumericDocValues dvInt = MultiDocValues.getNumericValues(reader, \"dvInt\");\n      NumericDocValues dvLong = MultiDocValues.getNumericValues(reader, \"dvLong\");\n      NumericDocValues dvPacked = MultiDocValues.getNumericValues(reader, \"dvPacked\");\n      NumericDocValues dvShort = MultiDocValues.getNumericValues(reader, \"dvShort\");\n      SortedSetDocValues dvSortedSet = null;\n      if (is42Index) {\n        dvSortedSet = MultiDocValues.getSortedSetValues(reader, \"dvSortedSet\");\n      }\n      SortedNumericDocValues dvSortedNumeric = null;\n      if (is49Index) {\n        dvSortedNumeric = MultiDocValues.getSortedNumericValues(reader, \"dvSortedNumeric\");\n      }\n      \n      for (int i=0;i<35;i++) {\n        int id = Integer.parseInt(reader.document(i).get(\"id\"));\n        assertEquals(id, dvByte.get(i));\n        \n        byte bytes[] = new byte[] {\n            (byte)(id >>> 24), (byte)(id >>> 16),(byte)(id >>> 8),(byte)id\n        };\n        BytesRef expectedRef = new BytesRef(bytes);\n        \n        BytesRef term = dvBytesDerefFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesDerefVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightVar.get(i);\n        assertEquals(expectedRef, term);\n        \n        assertEquals((double)id, Double.longBitsToDouble(dvDouble.get(i)), 0D);\n        assertEquals((float)id, Float.intBitsToFloat((int)dvFloat.get(i)), 0F);\n        assertEquals(id, dvInt.get(i));\n        assertEquals(id, dvLong.get(i));\n        assertEquals(id, dvPacked.get(i));\n        assertEquals(id, dvShort.get(i));\n        if (is42Index) {\n          dvSortedSet.setDocument(i);\n          long ord = dvSortedSet.nextOrd();\n          assertEquals(SortedSetDocValues.NO_MORE_ORDS, dvSortedSet.nextOrd());\n          term = dvSortedSet.lookupOrd(ord);\n          assertEquals(expectedRef, term);\n        }\n        if (is49Index) {\n          dvSortedNumeric.setDocument(i);\n          assertEquals(1, dvSortedNumeric.count());\n          assertEquals(id, dvSortedNumeric.valueAt(0));\n        }\n      }\n    }\n    \n    ScoreDoc[] hits = searcher.search(new TermQuery(new Term(new String(\"content\"), \"aaa\")), 1000).scoreDocs;\n\n    // First document should be #0\n    Document d = searcher.getIndexReader().document(hits[0].doc);\n    assertEquals(\"didn't get the right document first\", \"0\", d.get(\"id\"));\n\n    doTestHits(hits, 34, searcher.getIndexReader());\n    \n    if (is40Index) {\n      hits = searcher.search(new TermQuery(new Term(new String(\"content5\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    \n      hits = searcher.search(new TermQuery(new Term(new String(\"content6\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    }\n\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(new String(\"utf8\"), \"lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n\n    if (hasPoints) {\n      doTestHits(searcher.search(IntPoint.newRangeQuery(\"intPoint1d\", 0, 34), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(IntPoint.newRangeQuery(\"intPoint2d\", new int[] {0, 0}, new int[] {34, 68}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(FloatPoint.newRangeQuery(\"floatPoint1d\", 0f, 34f), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(FloatPoint.newRangeQuery(\"floatPoint2d\", new float[] {0f, 0f}, new float[] {34f, 68f}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(LongPoint.newRangeQuery(\"longPoint1d\", 0, 34), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(LongPoint.newRangeQuery(\"longPoint2d\", new long[] {0, 0}, new long[] {34, 68}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(DoublePoint.newRangeQuery(\"doublePoint1d\", 0.0, 34.0), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(DoublePoint.newRangeQuery(\"doublePoint2d\", new double[] {0.0, 0.0}, new double[] {34.0, 68.0}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      \n      byte[] bytes1 = new byte[4];\n      byte[] bytes2 = new byte[] {0, 0, 0, (byte) 34};\n      doTestHits(searcher.search(BinaryPoint.newRangeQuery(\"binaryPoint1d\", bytes1, bytes2), 1000).scoreDocs, 34, searcher.getIndexReader());\n      byte[] bytes3 = new byte[] {0, 0, 0, (byte) 68};\n      doTestHits(searcher.search(BinaryPoint.newRangeQuery(\"binaryPoint2d\", new byte[][] {bytes1, bytes1}, new byte[][] {bytes2, bytes3}), 1000).scoreDocs, 34, searcher.getIndexReader());\n    }\n\n    reader.close();\n  }\n\n","sourceOld":"  public void searchIndex(Directory dir, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new MockAnalyzer(random));\n    //Query query = parser.parse(\"handle:1\");\n\n    IndexReader reader = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    TestUtil.checkIndex(dir);\n    \n    // true if this is a 4.0+ index\n    final boolean is40Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"content5\") != null;\n    // true if this is a 4.2+ index\n    final boolean is42Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedSet\") != null;\n    // true if this is a 4.9+ index\n    final boolean is49Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedNumeric\") != null;\n\n    assert is40Index;\n\n    final Bits liveDocs = MultiFields.getLiveDocs(reader);\n\n    for(int i=0;i<35;i++) {\n      if (liveDocs.get(i)) {\n        Document d = reader.document(i);\n        List<IndexableField> fields = d.getFields();\n        boolean isProxDoc = d.getField(\"content3\") == null;\n        if (isProxDoc) {\n          final int numFields = is40Index ? 7 : 5;\n          assertEquals(numFields, fields.size());\n          IndexableField f = d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n\n          f =  d.getField(\"autf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n      \n          f = d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n\n          f = d.getField(\"fie\\u2C77ld\");\n          assertEquals(\"field with non-ascii name\", f.stringValue());\n        }\n\n        Fields tfvFields = reader.getTermVectors(i);\n        assertNotNull(\"i=\" + i, tfvFields);\n        Terms tfv = tfvFields.terms(\"utf8\");\n        assertNotNull(\"docID=\" + i + \" index=\" + oldName, tfv);\n      } else {\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n      }\n    }\n\n    if (is40Index) {\n      // check docvalues fields\n      NumericDocValues dvByte = MultiDocValues.getNumericValues(reader, \"dvByte\");\n      BinaryDocValues dvBytesDerefFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefFixed\");\n      BinaryDocValues dvBytesDerefVar = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefVar\");\n      SortedDocValues dvBytesSortedFixed = MultiDocValues.getSortedValues(reader, \"dvBytesSortedFixed\");\n      SortedDocValues dvBytesSortedVar = MultiDocValues.getSortedValues(reader, \"dvBytesSortedVar\");\n      BinaryDocValues dvBytesStraightFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightFixed\");\n      BinaryDocValues dvBytesStraightVar = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightVar\");\n      NumericDocValues dvDouble = MultiDocValues.getNumericValues(reader, \"dvDouble\");\n      NumericDocValues dvFloat = MultiDocValues.getNumericValues(reader, \"dvFloat\");\n      NumericDocValues dvInt = MultiDocValues.getNumericValues(reader, \"dvInt\");\n      NumericDocValues dvLong = MultiDocValues.getNumericValues(reader, \"dvLong\");\n      NumericDocValues dvPacked = MultiDocValues.getNumericValues(reader, \"dvPacked\");\n      NumericDocValues dvShort = MultiDocValues.getNumericValues(reader, \"dvShort\");\n      SortedSetDocValues dvSortedSet = null;\n      if (is42Index) {\n        dvSortedSet = MultiDocValues.getSortedSetValues(reader, \"dvSortedSet\");\n      }\n      SortedNumericDocValues dvSortedNumeric = null;\n      if (is49Index) {\n        dvSortedNumeric = MultiDocValues.getSortedNumericValues(reader, \"dvSortedNumeric\");\n      }\n      \n      for (int i=0;i<35;i++) {\n        int id = Integer.parseInt(reader.document(i).get(\"id\"));\n        assertEquals(id, dvByte.get(i));\n        \n        byte bytes[] = new byte[] {\n            (byte)(id >>> 24), (byte)(id >>> 16),(byte)(id >>> 8),(byte)id\n        };\n        BytesRef expectedRef = new BytesRef(bytes);\n        \n        BytesRef term = dvBytesDerefFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesDerefVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightVar.get(i);\n        assertEquals(expectedRef, term);\n        \n        assertEquals((double)id, Double.longBitsToDouble(dvDouble.get(i)), 0D);\n        assertEquals((float)id, Float.intBitsToFloat((int)dvFloat.get(i)), 0F);\n        assertEquals(id, dvInt.get(i));\n        assertEquals(id, dvLong.get(i));\n        assertEquals(id, dvPacked.get(i));\n        assertEquals(id, dvShort.get(i));\n        if (is42Index) {\n          dvSortedSet.setDocument(i);\n          long ord = dvSortedSet.nextOrd();\n          assertEquals(SortedSetDocValues.NO_MORE_ORDS, dvSortedSet.nextOrd());\n          term = dvSortedSet.lookupOrd(ord);\n          assertEquals(expectedRef, term);\n        }\n        if (is49Index) {\n          dvSortedNumeric.setDocument(i);\n          assertEquals(1, dvSortedNumeric.count());\n          assertEquals(id, dvSortedNumeric.valueAt(0));\n        }\n      }\n    }\n    \n    ScoreDoc[] hits = searcher.search(new TermQuery(new Term(new String(\"content\"), \"aaa\")), 1000).scoreDocs;\n\n    // First document should be #0\n    Document d = searcher.getIndexReader().document(hits[0].doc);\n    assertEquals(\"didn't get the right document first\", \"0\", d.get(\"id\"));\n\n    doTestHits(hits, 34, searcher.getIndexReader());\n    \n    if (is40Index) {\n      hits = searcher.search(new TermQuery(new Term(new String(\"content5\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    \n      hits = searcher.search(new TermQuery(new Term(new String(\"content6\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    }\n\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(new String(\"utf8\"), \"lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","sourceNew":"  public void searchIndex(Directory dir, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new MockAnalyzer(random));\n    //Query query = parser.parse(\"handle:1\");\n\n    IndexReader reader = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    TestUtil.checkIndex(dir);\n    \n    // true if this is a 4.0+ index\n    final boolean is40Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"content5\") != null;\n    // true if this is a 4.2+ index\n    final boolean is42Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedSet\") != null;\n    // true if this is a 4.9+ index\n    final boolean is49Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedNumeric\") != null;\n    // true if this index has points (>= 6.0)\n    final boolean hasPoints = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"intPoint1d\") != null;\n\n    assert is40Index;\n\n    final Bits liveDocs = MultiFields.getLiveDocs(reader);\n\n    for(int i=0;i<35;i++) {\n      if (liveDocs.get(i)) {\n        Document d = reader.document(i);\n        List<IndexableField> fields = d.getFields();\n        boolean isProxDoc = d.getField(\"content3\") == null;\n        if (isProxDoc) {\n          final int numFields = is40Index ? 7 : 5;\n          assertEquals(numFields, fields.size());\n          IndexableField f = d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n\n          f =  d.getField(\"autf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n      \n          f = d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n\n          f = d.getField(\"fie\\u2C77ld\");\n          assertEquals(\"field with non-ascii name\", f.stringValue());\n        }\n\n        Fields tfvFields = reader.getTermVectors(i);\n        assertNotNull(\"i=\" + i, tfvFields);\n        Terms tfv = tfvFields.terms(\"utf8\");\n        assertNotNull(\"docID=\" + i + \" index=\" + oldName, tfv);\n      } else {\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n      }\n    }\n\n    if (is40Index) {\n      // check docvalues fields\n      NumericDocValues dvByte = MultiDocValues.getNumericValues(reader, \"dvByte\");\n      BinaryDocValues dvBytesDerefFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefFixed\");\n      BinaryDocValues dvBytesDerefVar = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefVar\");\n      SortedDocValues dvBytesSortedFixed = MultiDocValues.getSortedValues(reader, \"dvBytesSortedFixed\");\n      SortedDocValues dvBytesSortedVar = MultiDocValues.getSortedValues(reader, \"dvBytesSortedVar\");\n      BinaryDocValues dvBytesStraightFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightFixed\");\n      BinaryDocValues dvBytesStraightVar = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightVar\");\n      NumericDocValues dvDouble = MultiDocValues.getNumericValues(reader, \"dvDouble\");\n      NumericDocValues dvFloat = MultiDocValues.getNumericValues(reader, \"dvFloat\");\n      NumericDocValues dvInt = MultiDocValues.getNumericValues(reader, \"dvInt\");\n      NumericDocValues dvLong = MultiDocValues.getNumericValues(reader, \"dvLong\");\n      NumericDocValues dvPacked = MultiDocValues.getNumericValues(reader, \"dvPacked\");\n      NumericDocValues dvShort = MultiDocValues.getNumericValues(reader, \"dvShort\");\n      SortedSetDocValues dvSortedSet = null;\n      if (is42Index) {\n        dvSortedSet = MultiDocValues.getSortedSetValues(reader, \"dvSortedSet\");\n      }\n      SortedNumericDocValues dvSortedNumeric = null;\n      if (is49Index) {\n        dvSortedNumeric = MultiDocValues.getSortedNumericValues(reader, \"dvSortedNumeric\");\n      }\n      \n      for (int i=0;i<35;i++) {\n        int id = Integer.parseInt(reader.document(i).get(\"id\"));\n        assertEquals(i, dvByte.nextDoc());\n        assertEquals(id, dvByte.longValue());\n        \n        byte bytes[] = new byte[] {\n            (byte)(id >>> 24), (byte)(id >>> 16),(byte)(id >>> 8),(byte)id\n        };\n        BytesRef expectedRef = new BytesRef(bytes);\n        \n        assertEquals(i, dvBytesDerefFixed.nextDoc());\n        BytesRef term = dvBytesDerefFixed.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesDerefVar.nextDoc());\n        term = dvBytesDerefVar.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesSortedFixed.nextDoc());\n        term = dvBytesSortedFixed.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesSortedVar.nextDoc());\n        term = dvBytesSortedVar.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesStraightFixed.nextDoc());\n        term = dvBytesStraightFixed.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesStraightVar.nextDoc());\n        term = dvBytesStraightVar.binaryValue();\n        assertEquals(expectedRef, term);\n        \n        assertEquals(i, dvDouble.nextDoc());\n        assertEquals((double)id, Double.longBitsToDouble(dvDouble.longValue()), 0D);\n        assertEquals(i, dvFloat.nextDoc());\n        assertEquals((float)id, Float.intBitsToFloat((int)dvFloat.longValue()), 0F);\n        assertEquals(i, dvInt.nextDoc());\n        assertEquals(id, dvInt.longValue());\n        assertEquals(i, dvLong.nextDoc());\n        assertEquals(id, dvLong.longValue());\n        assertEquals(i, dvPacked.nextDoc());\n        assertEquals(id, dvPacked.longValue());\n        assertEquals(i, dvShort.nextDoc());\n        assertEquals(id, dvShort.longValue());\n        if (is42Index) {\n          assertEquals(i, dvSortedSet.nextDoc());\n          long ord = dvSortedSet.nextOrd();\n          assertEquals(SortedSetDocValues.NO_MORE_ORDS, dvSortedSet.nextOrd());\n          term = dvSortedSet.lookupOrd(ord);\n          assertEquals(expectedRef, term);\n        }\n        if (is49Index) {\n          assertEquals(i, dvSortedNumeric.nextDoc());\n          assertEquals(1, dvSortedNumeric.docValueCount());\n          assertEquals(id, dvSortedNumeric.nextValue());\n        }\n      }\n    }\n    \n    ScoreDoc[] hits = searcher.search(new TermQuery(new Term(new String(\"content\"), \"aaa\")), 1000).scoreDocs;\n\n    // First document should be #0\n    Document d = searcher.getIndexReader().document(hits[0].doc);\n    assertEquals(\"didn't get the right document first\", \"0\", d.get(\"id\"));\n\n    doTestHits(hits, 34, searcher.getIndexReader());\n    \n    if (is40Index) {\n      hits = searcher.search(new TermQuery(new Term(new String(\"content5\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    \n      hits = searcher.search(new TermQuery(new Term(new String(\"content6\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    }\n\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(new String(\"utf8\"), \"lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n\n    if (hasPoints) {\n      doTestHits(searcher.search(IntPoint.newRangeQuery(\"intPoint1d\", 0, 34), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(IntPoint.newRangeQuery(\"intPoint2d\", new int[] {0, 0}, new int[] {34, 68}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(FloatPoint.newRangeQuery(\"floatPoint1d\", 0f, 34f), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(FloatPoint.newRangeQuery(\"floatPoint2d\", new float[] {0f, 0f}, new float[] {34f, 68f}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(LongPoint.newRangeQuery(\"longPoint1d\", 0, 34), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(LongPoint.newRangeQuery(\"longPoint2d\", new long[] {0, 0}, new long[] {34, 68}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(DoublePoint.newRangeQuery(\"doublePoint1d\", 0.0, 34.0), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(DoublePoint.newRangeQuery(\"doublePoint2d\", new double[] {0.0, 0.0}, new double[] {34.0, 68.0}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      \n      byte[] bytes1 = new byte[4];\n      byte[] bytes2 = new byte[] {0, 0, 0, (byte) 34};\n      doTestHits(searcher.search(BinaryPoint.newRangeQuery(\"binaryPoint1d\", bytes1, bytes2), 1000).scoreDocs, 34, searcher.getIndexReader());\n      byte[] bytes3 = new byte[] {0, 0, 0, (byte) 68};\n      doTestHits(searcher.search(BinaryPoint.newRangeQuery(\"binaryPoint2d\", new byte[][] {bytes1, bytes1}, new byte[][] {bytes2, bytes3}), 1000).scoreDocs, 34, searcher.getIndexReader());\n    }\n\n    reader.close();\n  }\n\n","sourceOld":"  public void searchIndex(Directory dir, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new MockAnalyzer(random));\n    //Query query = parser.parse(\"handle:1\");\n\n    IndexReader reader = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    TestUtil.checkIndex(dir);\n    \n    // true if this is a 4.0+ index\n    final boolean is40Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"content5\") != null;\n    // true if this is a 4.2+ index\n    final boolean is42Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedSet\") != null;\n    // true if this is a 4.9+ index\n    final boolean is49Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedNumeric\") != null;\n    // true if this index has points (>= 6.0)\n    final boolean hasPoints = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"intPoint1d\") != null;\n\n    assert is40Index;\n\n    final Bits liveDocs = MultiFields.getLiveDocs(reader);\n\n    for(int i=0;i<35;i++) {\n      if (liveDocs.get(i)) {\n        Document d = reader.document(i);\n        List<IndexableField> fields = d.getFields();\n        boolean isProxDoc = d.getField(\"content3\") == null;\n        if (isProxDoc) {\n          final int numFields = is40Index ? 7 : 5;\n          assertEquals(numFields, fields.size());\n          IndexableField f = d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n\n          f =  d.getField(\"autf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n      \n          f = d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n\n          f = d.getField(\"fie\\u2C77ld\");\n          assertEquals(\"field with non-ascii name\", f.stringValue());\n        }\n\n        Fields tfvFields = reader.getTermVectors(i);\n        assertNotNull(\"i=\" + i, tfvFields);\n        Terms tfv = tfvFields.terms(\"utf8\");\n        assertNotNull(\"docID=\" + i + \" index=\" + oldName, tfv);\n      } else {\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n      }\n    }\n\n    if (is40Index) {\n      // check docvalues fields\n      NumericDocValues dvByte = MultiDocValues.getNumericValues(reader, \"dvByte\");\n      BinaryDocValues dvBytesDerefFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefFixed\");\n      BinaryDocValues dvBytesDerefVar = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefVar\");\n      SortedDocValues dvBytesSortedFixed = MultiDocValues.getSortedValues(reader, \"dvBytesSortedFixed\");\n      SortedDocValues dvBytesSortedVar = MultiDocValues.getSortedValues(reader, \"dvBytesSortedVar\");\n      BinaryDocValues dvBytesStraightFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightFixed\");\n      BinaryDocValues dvBytesStraightVar = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightVar\");\n      NumericDocValues dvDouble = MultiDocValues.getNumericValues(reader, \"dvDouble\");\n      NumericDocValues dvFloat = MultiDocValues.getNumericValues(reader, \"dvFloat\");\n      NumericDocValues dvInt = MultiDocValues.getNumericValues(reader, \"dvInt\");\n      NumericDocValues dvLong = MultiDocValues.getNumericValues(reader, \"dvLong\");\n      NumericDocValues dvPacked = MultiDocValues.getNumericValues(reader, \"dvPacked\");\n      NumericDocValues dvShort = MultiDocValues.getNumericValues(reader, \"dvShort\");\n      SortedSetDocValues dvSortedSet = null;\n      if (is42Index) {\n        dvSortedSet = MultiDocValues.getSortedSetValues(reader, \"dvSortedSet\");\n      }\n      SortedNumericDocValues dvSortedNumeric = null;\n      if (is49Index) {\n        dvSortedNumeric = MultiDocValues.getSortedNumericValues(reader, \"dvSortedNumeric\");\n      }\n      \n      for (int i=0;i<35;i++) {\n        int id = Integer.parseInt(reader.document(i).get(\"id\"));\n        assertEquals(id, dvByte.get(i));\n        \n        byte bytes[] = new byte[] {\n            (byte)(id >>> 24), (byte)(id >>> 16),(byte)(id >>> 8),(byte)id\n        };\n        BytesRef expectedRef = new BytesRef(bytes);\n        \n        BytesRef term = dvBytesDerefFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesDerefVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightVar.get(i);\n        assertEquals(expectedRef, term);\n        \n        assertEquals((double)id, Double.longBitsToDouble(dvDouble.get(i)), 0D);\n        assertEquals((float)id, Float.intBitsToFloat((int)dvFloat.get(i)), 0F);\n        assertEquals(id, dvInt.get(i));\n        assertEquals(id, dvLong.get(i));\n        assertEquals(id, dvPacked.get(i));\n        assertEquals(id, dvShort.get(i));\n        if (is42Index) {\n          dvSortedSet.setDocument(i);\n          long ord = dvSortedSet.nextOrd();\n          assertEquals(SortedSetDocValues.NO_MORE_ORDS, dvSortedSet.nextOrd());\n          term = dvSortedSet.lookupOrd(ord);\n          assertEquals(expectedRef, term);\n        }\n        if (is49Index) {\n          dvSortedNumeric.setDocument(i);\n          assertEquals(1, dvSortedNumeric.count());\n          assertEquals(id, dvSortedNumeric.valueAt(0));\n        }\n      }\n    }\n    \n    ScoreDoc[] hits = searcher.search(new TermQuery(new Term(new String(\"content\"), \"aaa\")), 1000).scoreDocs;\n\n    // First document should be #0\n    Document d = searcher.getIndexReader().document(hits[0].doc);\n    assertEquals(\"didn't get the right document first\", \"0\", d.get(\"id\"));\n\n    doTestHits(hits, 34, searcher.getIndexReader());\n    \n    if (is40Index) {\n      hits = searcher.search(new TermQuery(new Term(new String(\"content5\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    \n      hits = searcher.search(new TermQuery(new Term(new String(\"content6\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    }\n\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(new String(\"utf8\"), \"lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n\n    if (hasPoints) {\n      doTestHits(searcher.search(IntPoint.newRangeQuery(\"intPoint1d\", 0, 34), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(IntPoint.newRangeQuery(\"intPoint2d\", new int[] {0, 0}, new int[] {34, 68}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(FloatPoint.newRangeQuery(\"floatPoint1d\", 0f, 34f), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(FloatPoint.newRangeQuery(\"floatPoint2d\", new float[] {0f, 0f}, new float[] {34f, 68f}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(LongPoint.newRangeQuery(\"longPoint1d\", 0, 34), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(LongPoint.newRangeQuery(\"longPoint2d\", new long[] {0, 0}, new long[] {34, 68}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(DoublePoint.newRangeQuery(\"doublePoint1d\", 0.0, 34.0), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(DoublePoint.newRangeQuery(\"doublePoint2d\", new double[] {0.0, 0.0}, new double[] {34.0, 68.0}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      \n      byte[] bytes1 = new byte[4];\n      byte[] bytes2 = new byte[] {0, 0, 0, (byte) 34};\n      doTestHits(searcher.search(BinaryPoint.newRangeQuery(\"binaryPoint1d\", bytes1, bytes2), 1000).scoreDocs, 34, searcher.getIndexReader());\n      byte[] bytes3 = new byte[] {0, 0, 0, (byte) 68};\n      doTestHits(searcher.search(BinaryPoint.newRangeQuery(\"binaryPoint2d\", new byte[][] {bytes1, bytes1}, new byte[][] {bytes2, bytes3}), 1000).scoreDocs, 34, searcher.getIndexReader());\n    }\n\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","sourceNew":"  public void searchIndex(Directory dir, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new MockAnalyzer(random));\n    //Query query = parser.parse(\"handle:1\");\n\n    IndexReader reader = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    TestUtil.checkIndex(dir);\n    \n    // true if this is a 4.0+ index\n    final boolean is40Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"content5\") != null;\n    // true if this is a 4.2+ index\n    final boolean is42Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedSet\") != null;\n    // true if this is a 4.9+ index\n    final boolean is49Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedNumeric\") != null;\n    // true if this index has points (>= 6.0)\n    final boolean hasPoints = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"intPoint1d\") != null;\n\n    assert is40Index;\n\n    final Bits liveDocs = MultiFields.getLiveDocs(reader);\n\n    for(int i=0;i<35;i++) {\n      if (liveDocs.get(i)) {\n        Document d = reader.document(i);\n        List<IndexableField> fields = d.getFields();\n        boolean isProxDoc = d.getField(\"content3\") == null;\n        if (isProxDoc) {\n          final int numFields = is40Index ? 7 : 5;\n          assertEquals(numFields, fields.size());\n          IndexableField f = d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n\n          f =  d.getField(\"autf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n      \n          f = d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n\n          f = d.getField(\"fie\\u2C77ld\");\n          assertEquals(\"field with non-ascii name\", f.stringValue());\n        }\n\n        Fields tfvFields = reader.getTermVectors(i);\n        assertNotNull(\"i=\" + i, tfvFields);\n        Terms tfv = tfvFields.terms(\"utf8\");\n        assertNotNull(\"docID=\" + i + \" index=\" + oldName, tfv);\n      } else {\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n      }\n    }\n\n    if (is40Index) {\n      // check docvalues fields\n      NumericDocValues dvByte = MultiDocValues.getNumericValues(reader, \"dvByte\");\n      BinaryDocValues dvBytesDerefFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefFixed\");\n      BinaryDocValues dvBytesDerefVar = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefVar\");\n      SortedDocValues dvBytesSortedFixed = MultiDocValues.getSortedValues(reader, \"dvBytesSortedFixed\");\n      SortedDocValues dvBytesSortedVar = MultiDocValues.getSortedValues(reader, \"dvBytesSortedVar\");\n      BinaryDocValues dvBytesStraightFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightFixed\");\n      BinaryDocValues dvBytesStraightVar = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightVar\");\n      NumericDocValues dvDouble = MultiDocValues.getNumericValues(reader, \"dvDouble\");\n      NumericDocValues dvFloat = MultiDocValues.getNumericValues(reader, \"dvFloat\");\n      NumericDocValues dvInt = MultiDocValues.getNumericValues(reader, \"dvInt\");\n      NumericDocValues dvLong = MultiDocValues.getNumericValues(reader, \"dvLong\");\n      NumericDocValues dvPacked = MultiDocValues.getNumericValues(reader, \"dvPacked\");\n      NumericDocValues dvShort = MultiDocValues.getNumericValues(reader, \"dvShort\");\n      SortedSetDocValues dvSortedSet = null;\n      if (is42Index) {\n        dvSortedSet = MultiDocValues.getSortedSetValues(reader, \"dvSortedSet\");\n      }\n      SortedNumericDocValues dvSortedNumeric = null;\n      if (is49Index) {\n        dvSortedNumeric = MultiDocValues.getSortedNumericValues(reader, \"dvSortedNumeric\");\n      }\n      \n      for (int i=0;i<35;i++) {\n        int id = Integer.parseInt(reader.document(i).get(\"id\"));\n        assertEquals(i, dvByte.nextDoc());\n        assertEquals(id, dvByte.longValue());\n        \n        byte bytes[] = new byte[] {\n            (byte)(id >>> 24), (byte)(id >>> 16),(byte)(id >>> 8),(byte)id\n        };\n        BytesRef expectedRef = new BytesRef(bytes);\n        \n        assertEquals(i, dvBytesDerefFixed.nextDoc());\n        BytesRef term = dvBytesDerefFixed.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesDerefVar.nextDoc());\n        term = dvBytesDerefVar.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesSortedFixed.nextDoc());\n        term = dvBytesSortedFixed.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesSortedVar.nextDoc());\n        term = dvBytesSortedVar.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesStraightFixed.nextDoc());\n        term = dvBytesStraightFixed.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesStraightVar.nextDoc());\n        term = dvBytesStraightVar.binaryValue();\n        assertEquals(expectedRef, term);\n        \n        assertEquals(i, dvDouble.nextDoc());\n        assertEquals((double)id, Double.longBitsToDouble(dvDouble.longValue()), 0D);\n        assertEquals(i, dvFloat.nextDoc());\n        assertEquals((float)id, Float.intBitsToFloat((int)dvFloat.longValue()), 0F);\n        assertEquals(i, dvInt.nextDoc());\n        assertEquals(id, dvInt.longValue());\n        assertEquals(i, dvLong.nextDoc());\n        assertEquals(id, dvLong.longValue());\n        assertEquals(i, dvPacked.nextDoc());\n        assertEquals(id, dvPacked.longValue());\n        assertEquals(i, dvShort.nextDoc());\n        assertEquals(id, dvShort.longValue());\n        if (is42Index) {\n          assertEquals(i, dvSortedSet.nextDoc());\n          long ord = dvSortedSet.nextOrd();\n          assertEquals(SortedSetDocValues.NO_MORE_ORDS, dvSortedSet.nextOrd());\n          term = dvSortedSet.lookupOrd(ord);\n          assertEquals(expectedRef, term);\n        }\n        if (is49Index) {\n          assertEquals(i, dvSortedNumeric.nextDoc());\n          assertEquals(1, dvSortedNumeric.docValueCount());\n          assertEquals(id, dvSortedNumeric.nextValue());\n        }\n      }\n    }\n    \n    ScoreDoc[] hits = searcher.search(new TermQuery(new Term(new String(\"content\"), \"aaa\")), 1000).scoreDocs;\n\n    // First document should be #0\n    Document d = searcher.getIndexReader().document(hits[0].doc);\n    assertEquals(\"didn't get the right document first\", \"0\", d.get(\"id\"));\n\n    doTestHits(hits, 34, searcher.getIndexReader());\n    \n    if (is40Index) {\n      hits = searcher.search(new TermQuery(new Term(new String(\"content5\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    \n      hits = searcher.search(new TermQuery(new Term(new String(\"content6\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    }\n\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(new String(\"utf8\"), \"lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n\n    if (hasPoints) {\n      doTestHits(searcher.search(IntPoint.newRangeQuery(\"intPoint1d\", 0, 34), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(IntPoint.newRangeQuery(\"intPoint2d\", new int[] {0, 0}, new int[] {34, 68}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(FloatPoint.newRangeQuery(\"floatPoint1d\", 0f, 34f), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(FloatPoint.newRangeQuery(\"floatPoint2d\", new float[] {0f, 0f}, new float[] {34f, 68f}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(LongPoint.newRangeQuery(\"longPoint1d\", 0, 34), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(LongPoint.newRangeQuery(\"longPoint2d\", new long[] {0, 0}, new long[] {34, 68}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(DoublePoint.newRangeQuery(\"doublePoint1d\", 0.0, 34.0), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(DoublePoint.newRangeQuery(\"doublePoint2d\", new double[] {0.0, 0.0}, new double[] {34.0, 68.0}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      \n      byte[] bytes1 = new byte[4];\n      byte[] bytes2 = new byte[] {0, 0, 0, (byte) 34};\n      doTestHits(searcher.search(BinaryPoint.newRangeQuery(\"binaryPoint1d\", bytes1, bytes2), 1000).scoreDocs, 34, searcher.getIndexReader());\n      byte[] bytes3 = new byte[] {0, 0, 0, (byte) 68};\n      doTestHits(searcher.search(BinaryPoint.newRangeQuery(\"binaryPoint2d\", new byte[][] {bytes1, bytes1}, new byte[][] {bytes2, bytes3}), 1000).scoreDocs, 34, searcher.getIndexReader());\n    }\n\n    reader.close();\n  }\n\n","sourceOld":"  public void searchIndex(Directory dir, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new MockAnalyzer(random));\n    //Query query = parser.parse(\"handle:1\");\n\n    IndexReader reader = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    TestUtil.checkIndex(dir);\n    \n    // true if this is a 4.0+ index\n    final boolean is40Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"content5\") != null;\n    // true if this is a 4.2+ index\n    final boolean is42Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedSet\") != null;\n    // true if this is a 4.9+ index\n    final boolean is49Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedNumeric\") != null;\n    // true if this index has points (>= 6.0)\n    final boolean hasPoints = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"intPoint1d\") != null;\n\n    assert is40Index;\n\n    final Bits liveDocs = MultiFields.getLiveDocs(reader);\n\n    for(int i=0;i<35;i++) {\n      if (liveDocs.get(i)) {\n        Document d = reader.document(i);\n        List<IndexableField> fields = d.getFields();\n        boolean isProxDoc = d.getField(\"content3\") == null;\n        if (isProxDoc) {\n          final int numFields = is40Index ? 7 : 5;\n          assertEquals(numFields, fields.size());\n          IndexableField f = d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n\n          f =  d.getField(\"autf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n      \n          f = d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n\n          f = d.getField(\"fie\\u2C77ld\");\n          assertEquals(\"field with non-ascii name\", f.stringValue());\n        }\n\n        Fields tfvFields = reader.getTermVectors(i);\n        assertNotNull(\"i=\" + i, tfvFields);\n        Terms tfv = tfvFields.terms(\"utf8\");\n        assertNotNull(\"docID=\" + i + \" index=\" + oldName, tfv);\n      } else {\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n      }\n    }\n\n    if (is40Index) {\n      // check docvalues fields\n      NumericDocValues dvByte = MultiDocValues.getNumericValues(reader, \"dvByte\");\n      BinaryDocValues dvBytesDerefFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefFixed\");\n      BinaryDocValues dvBytesDerefVar = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefVar\");\n      SortedDocValues dvBytesSortedFixed = MultiDocValues.getSortedValues(reader, \"dvBytesSortedFixed\");\n      SortedDocValues dvBytesSortedVar = MultiDocValues.getSortedValues(reader, \"dvBytesSortedVar\");\n      BinaryDocValues dvBytesStraightFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightFixed\");\n      BinaryDocValues dvBytesStraightVar = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightVar\");\n      NumericDocValues dvDouble = MultiDocValues.getNumericValues(reader, \"dvDouble\");\n      NumericDocValues dvFloat = MultiDocValues.getNumericValues(reader, \"dvFloat\");\n      NumericDocValues dvInt = MultiDocValues.getNumericValues(reader, \"dvInt\");\n      NumericDocValues dvLong = MultiDocValues.getNumericValues(reader, \"dvLong\");\n      NumericDocValues dvPacked = MultiDocValues.getNumericValues(reader, \"dvPacked\");\n      NumericDocValues dvShort = MultiDocValues.getNumericValues(reader, \"dvShort\");\n      SortedSetDocValues dvSortedSet = null;\n      if (is42Index) {\n        dvSortedSet = MultiDocValues.getSortedSetValues(reader, \"dvSortedSet\");\n      }\n      SortedNumericDocValues dvSortedNumeric = null;\n      if (is49Index) {\n        dvSortedNumeric = MultiDocValues.getSortedNumericValues(reader, \"dvSortedNumeric\");\n      }\n      \n      for (int i=0;i<35;i++) {\n        int id = Integer.parseInt(reader.document(i).get(\"id\"));\n        assertEquals(id, dvByte.get(i));\n        \n        byte bytes[] = new byte[] {\n            (byte)(id >>> 24), (byte)(id >>> 16),(byte)(id >>> 8),(byte)id\n        };\n        BytesRef expectedRef = new BytesRef(bytes);\n        \n        BytesRef term = dvBytesDerefFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesDerefVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightVar.get(i);\n        assertEquals(expectedRef, term);\n        \n        assertEquals((double)id, Double.longBitsToDouble(dvDouble.get(i)), 0D);\n        assertEquals((float)id, Float.intBitsToFloat((int)dvFloat.get(i)), 0F);\n        assertEquals(id, dvInt.get(i));\n        assertEquals(id, dvLong.get(i));\n        assertEquals(id, dvPacked.get(i));\n        assertEquals(id, dvShort.get(i));\n        if (is42Index) {\n          dvSortedSet.setDocument(i);\n          long ord = dvSortedSet.nextOrd();\n          assertEquals(SortedSetDocValues.NO_MORE_ORDS, dvSortedSet.nextOrd());\n          term = dvSortedSet.lookupOrd(ord);\n          assertEquals(expectedRef, term);\n        }\n        if (is49Index) {\n          dvSortedNumeric.setDocument(i);\n          assertEquals(1, dvSortedNumeric.count());\n          assertEquals(id, dvSortedNumeric.valueAt(0));\n        }\n      }\n    }\n    \n    ScoreDoc[] hits = searcher.search(new TermQuery(new Term(new String(\"content\"), \"aaa\")), 1000).scoreDocs;\n\n    // First document should be #0\n    Document d = searcher.getIndexReader().document(hits[0].doc);\n    assertEquals(\"didn't get the right document first\", \"0\", d.get(\"id\"));\n\n    doTestHits(hits, 34, searcher.getIndexReader());\n    \n    if (is40Index) {\n      hits = searcher.search(new TermQuery(new Term(new String(\"content5\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    \n      hits = searcher.search(new TermQuery(new Term(new String(\"content6\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    }\n\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(new String(\"utf8\"), \"lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n\n    if (hasPoints) {\n      doTestHits(searcher.search(IntPoint.newRangeQuery(\"intPoint1d\", 0, 34), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(IntPoint.newRangeQuery(\"intPoint2d\", new int[] {0, 0}, new int[] {34, 68}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(FloatPoint.newRangeQuery(\"floatPoint1d\", 0f, 34f), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(FloatPoint.newRangeQuery(\"floatPoint2d\", new float[] {0f, 0f}, new float[] {34f, 68f}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(LongPoint.newRangeQuery(\"longPoint1d\", 0, 34), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(LongPoint.newRangeQuery(\"longPoint2d\", new long[] {0, 0}, new long[] {34, 68}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(DoublePoint.newRangeQuery(\"doublePoint1d\", 0.0, 34.0), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(DoublePoint.newRangeQuery(\"doublePoint2d\", new double[] {0.0, 0.0}, new double[] {34.0, 68.0}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      \n      byte[] bytes1 = new byte[4];\n      byte[] bytes2 = new byte[] {0, 0, 0, (byte) 34};\n      doTestHits(searcher.search(BinaryPoint.newRangeQuery(\"binaryPoint1d\", bytes1, bytes2), 1000).scoreDocs, 34, searcher.getIndexReader());\n      byte[] bytes3 = new byte[] {0, 0, 0, (byte) 68};\n      doTestHits(searcher.search(BinaryPoint.newRangeQuery(\"binaryPoint2d\", new byte[][] {bytes1, bytes1}, new byte[][] {bytes2, bytes3}), 1000).scoreDocs, 34, searcher.getIndexReader());\n    }\n\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","sourceNew":"  public void searchIndex(Directory dir, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new MockAnalyzer(random));\n    //Query query = parser.parse(\"handle:1\");\n\n    IndexReader reader = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    TestUtil.checkIndex(dir);\n    \n    // true if this is a 4.0+ index\n    final boolean is40Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"content5\") != null;\n    // true if this is a 4.2+ index\n    final boolean is42Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedSet\") != null;\n    // true if this is a 4.9+ index\n    final boolean is49Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedNumeric\") != null;\n    // true if this index has points (>= 6.0)\n    final boolean hasPoints = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"intPoint1d\") != null;\n\n    assert is40Index;\n\n    final Bits liveDocs = MultiFields.getLiveDocs(reader);\n\n    for(int i=0;i<35;i++) {\n      if (liveDocs.get(i)) {\n        Document d = reader.document(i);\n        List<IndexableField> fields = d.getFields();\n        boolean isProxDoc = d.getField(\"content3\") == null;\n        if (isProxDoc) {\n          final int numFields = is40Index ? 7 : 5;\n          assertEquals(numFields, fields.size());\n          IndexableField f = d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n\n          f =  d.getField(\"autf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n      \n          f = d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n\n          f = d.getField(\"fie\\u2C77ld\");\n          assertEquals(\"field with non-ascii name\", f.stringValue());\n        }\n\n        Fields tfvFields = reader.getTermVectors(i);\n        assertNotNull(\"i=\" + i, tfvFields);\n        Terms tfv = tfvFields.terms(\"utf8\");\n        assertNotNull(\"docID=\" + i + \" index=\" + oldName, tfv);\n      } else {\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n      }\n    }\n\n    if (is40Index) {\n      // check docvalues fields\n      NumericDocValues dvByte = MultiDocValues.getNumericValues(reader, \"dvByte\");\n      BinaryDocValues dvBytesDerefFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefFixed\");\n      BinaryDocValues dvBytesDerefVar = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefVar\");\n      SortedDocValues dvBytesSortedFixed = MultiDocValues.getSortedValues(reader, \"dvBytesSortedFixed\");\n      SortedDocValues dvBytesSortedVar = MultiDocValues.getSortedValues(reader, \"dvBytesSortedVar\");\n      BinaryDocValues dvBytesStraightFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightFixed\");\n      BinaryDocValues dvBytesStraightVar = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightVar\");\n      NumericDocValues dvDouble = MultiDocValues.getNumericValues(reader, \"dvDouble\");\n      NumericDocValues dvFloat = MultiDocValues.getNumericValues(reader, \"dvFloat\");\n      NumericDocValues dvInt = MultiDocValues.getNumericValues(reader, \"dvInt\");\n      NumericDocValues dvLong = MultiDocValues.getNumericValues(reader, \"dvLong\");\n      NumericDocValues dvPacked = MultiDocValues.getNumericValues(reader, \"dvPacked\");\n      NumericDocValues dvShort = MultiDocValues.getNumericValues(reader, \"dvShort\");\n      SortedSetDocValues dvSortedSet = null;\n      if (is42Index) {\n        dvSortedSet = MultiDocValues.getSortedSetValues(reader, \"dvSortedSet\");\n      }\n      SortedNumericDocValues dvSortedNumeric = null;\n      if (is49Index) {\n        dvSortedNumeric = MultiDocValues.getSortedNumericValues(reader, \"dvSortedNumeric\");\n      }\n      \n      for (int i=0;i<35;i++) {\n        int id = Integer.parseInt(reader.document(i).get(\"id\"));\n        assertEquals(i, dvByte.nextDoc());\n        assertEquals(id, dvByte.longValue());\n        \n        byte bytes[] = new byte[] {\n            (byte)(id >>> 24), (byte)(id >>> 16),(byte)(id >>> 8),(byte)id\n        };\n        BytesRef expectedRef = new BytesRef(bytes);\n        \n        assertEquals(i, dvBytesDerefFixed.nextDoc());\n        BytesRef term = dvBytesDerefFixed.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesDerefVar.nextDoc());\n        term = dvBytesDerefVar.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesSortedFixed.nextDoc());\n        term = dvBytesSortedFixed.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesSortedVar.nextDoc());\n        term = dvBytesSortedVar.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesStraightFixed.nextDoc());\n        term = dvBytesStraightFixed.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesStraightVar.nextDoc());\n        term = dvBytesStraightVar.binaryValue();\n        assertEquals(expectedRef, term);\n        \n        assertEquals(i, dvDouble.nextDoc());\n        assertEquals((double)id, Double.longBitsToDouble(dvDouble.longValue()), 0D);\n        assertEquals(i, dvFloat.nextDoc());\n        assertEquals((float)id, Float.intBitsToFloat((int)dvFloat.longValue()), 0F);\n        assertEquals(i, dvInt.nextDoc());\n        assertEquals(id, dvInt.longValue());\n        assertEquals(i, dvLong.nextDoc());\n        assertEquals(id, dvLong.longValue());\n        assertEquals(i, dvPacked.nextDoc());\n        assertEquals(id, dvPacked.longValue());\n        assertEquals(i, dvShort.nextDoc());\n        assertEquals(id, dvShort.longValue());\n        if (is42Index) {\n          assertEquals(i, dvSortedSet.nextDoc());\n          long ord = dvSortedSet.nextOrd();\n          assertEquals(SortedSetDocValues.NO_MORE_ORDS, dvSortedSet.nextOrd());\n          term = dvSortedSet.lookupOrd(ord);\n          assertEquals(expectedRef, term);\n        }\n        if (is49Index) {\n          assertEquals(i, dvSortedNumeric.nextDoc());\n          assertEquals(1, dvSortedNumeric.docValueCount());\n          assertEquals(id, dvSortedNumeric.nextValue());\n        }\n      }\n    }\n    \n    ScoreDoc[] hits = searcher.search(new TermQuery(new Term(new String(\"content\"), \"aaa\")), 1000).scoreDocs;\n\n    // First document should be #0\n    Document d = searcher.getIndexReader().document(hits[0].doc);\n    assertEquals(\"didn't get the right document first\", \"0\", d.get(\"id\"));\n\n    doTestHits(hits, 34, searcher.getIndexReader());\n    \n    if (is40Index) {\n      hits = searcher.search(new TermQuery(new Term(new String(\"content5\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    \n      hits = searcher.search(new TermQuery(new Term(new String(\"content6\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    }\n\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(new String(\"utf8\"), \"lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n\n    if (hasPoints) {\n      doTestHits(searcher.search(IntPoint.newRangeQuery(\"intPoint1d\", 0, 34), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(IntPoint.newRangeQuery(\"intPoint2d\", new int[] {0, 0}, new int[] {34, 68}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(FloatPoint.newRangeQuery(\"floatPoint1d\", 0f, 34f), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(FloatPoint.newRangeQuery(\"floatPoint2d\", new float[] {0f, 0f}, new float[] {34f, 68f}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(LongPoint.newRangeQuery(\"longPoint1d\", 0, 34), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(LongPoint.newRangeQuery(\"longPoint2d\", new long[] {0, 0}, new long[] {34, 68}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(DoublePoint.newRangeQuery(\"doublePoint1d\", 0.0, 34.0), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(DoublePoint.newRangeQuery(\"doublePoint2d\", new double[] {0.0, 0.0}, new double[] {34.0, 68.0}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      \n      byte[] bytes1 = new byte[4];\n      byte[] bytes2 = new byte[] {0, 0, 0, (byte) 34};\n      doTestHits(searcher.search(BinaryPoint.newRangeQuery(\"binaryPoint1d\", bytes1, bytes2), 1000).scoreDocs, 34, searcher.getIndexReader());\n      byte[] bytes3 = new byte[] {0, 0, 0, (byte) 68};\n      doTestHits(searcher.search(BinaryPoint.newRangeQuery(\"binaryPoint2d\", new byte[][] {bytes1, bytes1}, new byte[][] {bytes2, bytes3}), 1000).scoreDocs, 34, searcher.getIndexReader());\n    }\n\n    reader.close();\n  }\n\n","sourceOld":"  public void searchIndex(Directory dir, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new MockAnalyzer(random));\n    //Query query = parser.parse(\"handle:1\");\n\n    IndexReader reader = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    TestUtil.checkIndex(dir);\n    \n    // true if this is a 4.0+ index\n    final boolean is40Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"content5\") != null;\n    // true if this is a 4.2+ index\n    final boolean is42Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedSet\") != null;\n    // true if this is a 4.9+ index\n    final boolean is49Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedNumeric\") != null;\n\n    assert is40Index;\n\n    final Bits liveDocs = MultiFields.getLiveDocs(reader);\n\n    for(int i=0;i<35;i++) {\n      if (liveDocs.get(i)) {\n        Document d = reader.document(i);\n        List<IndexableField> fields = d.getFields();\n        boolean isProxDoc = d.getField(\"content3\") == null;\n        if (isProxDoc) {\n          final int numFields = is40Index ? 7 : 5;\n          assertEquals(numFields, fields.size());\n          IndexableField f = d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n\n          f =  d.getField(\"autf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n      \n          f = d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n\n          f = d.getField(\"fie\\u2C77ld\");\n          assertEquals(\"field with non-ascii name\", f.stringValue());\n        }\n\n        Fields tfvFields = reader.getTermVectors(i);\n        assertNotNull(\"i=\" + i, tfvFields);\n        Terms tfv = tfvFields.terms(\"utf8\");\n        assertNotNull(\"docID=\" + i + \" index=\" + oldName, tfv);\n      } else {\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n      }\n    }\n\n    if (is40Index) {\n      // check docvalues fields\n      NumericDocValues dvByte = MultiDocValues.getNumericValues(reader, \"dvByte\");\n      BinaryDocValues dvBytesDerefFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefFixed\");\n      BinaryDocValues dvBytesDerefVar = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefVar\");\n      SortedDocValues dvBytesSortedFixed = MultiDocValues.getSortedValues(reader, \"dvBytesSortedFixed\");\n      SortedDocValues dvBytesSortedVar = MultiDocValues.getSortedValues(reader, \"dvBytesSortedVar\");\n      BinaryDocValues dvBytesStraightFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightFixed\");\n      BinaryDocValues dvBytesStraightVar = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightVar\");\n      NumericDocValues dvDouble = MultiDocValues.getNumericValues(reader, \"dvDouble\");\n      NumericDocValues dvFloat = MultiDocValues.getNumericValues(reader, \"dvFloat\");\n      NumericDocValues dvInt = MultiDocValues.getNumericValues(reader, \"dvInt\");\n      NumericDocValues dvLong = MultiDocValues.getNumericValues(reader, \"dvLong\");\n      NumericDocValues dvPacked = MultiDocValues.getNumericValues(reader, \"dvPacked\");\n      NumericDocValues dvShort = MultiDocValues.getNumericValues(reader, \"dvShort\");\n      SortedSetDocValues dvSortedSet = null;\n      if (is42Index) {\n        dvSortedSet = MultiDocValues.getSortedSetValues(reader, \"dvSortedSet\");\n      }\n      SortedNumericDocValues dvSortedNumeric = null;\n      if (is49Index) {\n        dvSortedNumeric = MultiDocValues.getSortedNumericValues(reader, \"dvSortedNumeric\");\n      }\n      \n      for (int i=0;i<35;i++) {\n        int id = Integer.parseInt(reader.document(i).get(\"id\"));\n        assertEquals(id, dvByte.get(i));\n        \n        byte bytes[] = new byte[] {\n            (byte)(id >>> 24), (byte)(id >>> 16),(byte)(id >>> 8),(byte)id\n        };\n        BytesRef expectedRef = new BytesRef(bytes);\n        \n        BytesRef term = dvBytesDerefFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesDerefVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesSortedVar.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightFixed.get(i);\n        assertEquals(expectedRef, term);\n        term = dvBytesStraightVar.get(i);\n        assertEquals(expectedRef, term);\n        \n        assertEquals((double)id, Double.longBitsToDouble(dvDouble.get(i)), 0D);\n        assertEquals((float)id, Float.intBitsToFloat((int)dvFloat.get(i)), 0F);\n        assertEquals(id, dvInt.get(i));\n        assertEquals(id, dvLong.get(i));\n        assertEquals(id, dvPacked.get(i));\n        assertEquals(id, dvShort.get(i));\n        if (is42Index) {\n          dvSortedSet.setDocument(i);\n          long ord = dvSortedSet.nextOrd();\n          assertEquals(SortedSetDocValues.NO_MORE_ORDS, dvSortedSet.nextOrd());\n          term = dvSortedSet.lookupOrd(ord);\n          assertEquals(expectedRef, term);\n        }\n        if (is49Index) {\n          dvSortedNumeric.setDocument(i);\n          assertEquals(1, dvSortedNumeric.count());\n          assertEquals(id, dvSortedNumeric.valueAt(0));\n        }\n      }\n    }\n    \n    ScoreDoc[] hits = searcher.search(new TermQuery(new Term(new String(\"content\"), \"aaa\")), 1000).scoreDocs;\n\n    // First document should be #0\n    Document d = searcher.getIndexReader().document(hits[0].doc);\n    assertEquals(\"didn't get the right document first\", \"0\", d.get(\"id\"));\n\n    doTestHits(hits, 34, searcher.getIndexReader());\n    \n    if (is40Index) {\n      hits = searcher.search(new TermQuery(new Term(new String(\"content5\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    \n      hits = searcher.search(new TermQuery(new Term(new String(\"content6\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    }\n\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(new String(\"utf8\"), \"lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e775de416dd2d8067b10db1c8af975a1d5017e","date":1539906554,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#searchIndex(Directory,String).mjava","sourceNew":"  public void searchIndex(Directory dir, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new MockAnalyzer(random));\n    //Query query = parser.parse(\"handle:1\");\n\n    IndexReader reader = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    TestUtil.checkIndex(dir);\n    \n    // true if this is a 4.0+ index\n    final boolean is40Index = FieldInfos.getMergedFieldInfos(reader).fieldInfo(\"content5\") != null;\n    // true if this is a 4.2+ index\n    final boolean is42Index = FieldInfos.getMergedFieldInfos(reader).fieldInfo(\"dvSortedSet\") != null;\n    // true if this is a 4.9+ index\n    final boolean is49Index = FieldInfos.getMergedFieldInfos(reader).fieldInfo(\"dvSortedNumeric\") != null;\n    // true if this index has points (>= 6.0)\n    final boolean hasPoints = FieldInfos.getMergedFieldInfos(reader).fieldInfo(\"intPoint1d\") != null;\n\n    assert is40Index;\n\n    final Bits liveDocs = MultiBits.getLiveDocs(reader);\n\n    for(int i=0;i<35;i++) {\n      if (liveDocs.get(i)) {\n        Document d = reader.document(i);\n        List<IndexableField> fields = d.getFields();\n        boolean isProxDoc = d.getField(\"content3\") == null;\n        if (isProxDoc) {\n          final int numFields = is40Index ? 7 : 5;\n          assertEquals(numFields, fields.size());\n          IndexableField f = d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n\n          f =  d.getField(\"autf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n      \n          f = d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n\n          f = d.getField(\"fie\\u2C77ld\");\n          assertEquals(\"field with non-ascii name\", f.stringValue());\n        }\n\n        Fields tfvFields = reader.getTermVectors(i);\n        assertNotNull(\"i=\" + i, tfvFields);\n        Terms tfv = tfvFields.terms(\"utf8\");\n        assertNotNull(\"docID=\" + i + \" index=\" + oldName, tfv);\n      } else {\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n      }\n    }\n\n    if (is40Index) {\n      // check docvalues fields\n      NumericDocValues dvByte = MultiDocValues.getNumericValues(reader, \"dvByte\");\n      BinaryDocValues dvBytesDerefFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefFixed\");\n      BinaryDocValues dvBytesDerefVar = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefVar\");\n      SortedDocValues dvBytesSortedFixed = MultiDocValues.getSortedValues(reader, \"dvBytesSortedFixed\");\n      SortedDocValues dvBytesSortedVar = MultiDocValues.getSortedValues(reader, \"dvBytesSortedVar\");\n      BinaryDocValues dvBytesStraightFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightFixed\");\n      BinaryDocValues dvBytesStraightVar = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightVar\");\n      NumericDocValues dvDouble = MultiDocValues.getNumericValues(reader, \"dvDouble\");\n      NumericDocValues dvFloat = MultiDocValues.getNumericValues(reader, \"dvFloat\");\n      NumericDocValues dvInt = MultiDocValues.getNumericValues(reader, \"dvInt\");\n      NumericDocValues dvLong = MultiDocValues.getNumericValues(reader, \"dvLong\");\n      NumericDocValues dvPacked = MultiDocValues.getNumericValues(reader, \"dvPacked\");\n      NumericDocValues dvShort = MultiDocValues.getNumericValues(reader, \"dvShort\");\n      SortedSetDocValues dvSortedSet = null;\n      if (is42Index) {\n        dvSortedSet = MultiDocValues.getSortedSetValues(reader, \"dvSortedSet\");\n      }\n      SortedNumericDocValues dvSortedNumeric = null;\n      if (is49Index) {\n        dvSortedNumeric = MultiDocValues.getSortedNumericValues(reader, \"dvSortedNumeric\");\n      }\n      \n      for (int i=0;i<35;i++) {\n        int id = Integer.parseInt(reader.document(i).get(\"id\"));\n        assertEquals(i, dvByte.nextDoc());\n        assertEquals(id, dvByte.longValue());\n        \n        byte bytes[] = new byte[] {\n            (byte)(id >>> 24), (byte)(id >>> 16),(byte)(id >>> 8),(byte)id\n        };\n        BytesRef expectedRef = new BytesRef(bytes);\n        \n        assertEquals(i, dvBytesDerefFixed.nextDoc());\n        BytesRef term = dvBytesDerefFixed.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesDerefVar.nextDoc());\n        term = dvBytesDerefVar.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesSortedFixed.nextDoc());\n        term = dvBytesSortedFixed.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesSortedVar.nextDoc());\n        term = dvBytesSortedVar.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesStraightFixed.nextDoc());\n        term = dvBytesStraightFixed.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesStraightVar.nextDoc());\n        term = dvBytesStraightVar.binaryValue();\n        assertEquals(expectedRef, term);\n        \n        assertEquals(i, dvDouble.nextDoc());\n        assertEquals((double)id, Double.longBitsToDouble(dvDouble.longValue()), 0D);\n        assertEquals(i, dvFloat.nextDoc());\n        assertEquals((float)id, Float.intBitsToFloat((int)dvFloat.longValue()), 0F);\n        assertEquals(i, dvInt.nextDoc());\n        assertEquals(id, dvInt.longValue());\n        assertEquals(i, dvLong.nextDoc());\n        assertEquals(id, dvLong.longValue());\n        assertEquals(i, dvPacked.nextDoc());\n        assertEquals(id, dvPacked.longValue());\n        assertEquals(i, dvShort.nextDoc());\n        assertEquals(id, dvShort.longValue());\n        if (is42Index) {\n          assertEquals(i, dvSortedSet.nextDoc());\n          long ord = dvSortedSet.nextOrd();\n          assertEquals(SortedSetDocValues.NO_MORE_ORDS, dvSortedSet.nextOrd());\n          term = dvSortedSet.lookupOrd(ord);\n          assertEquals(expectedRef, term);\n        }\n        if (is49Index) {\n          assertEquals(i, dvSortedNumeric.nextDoc());\n          assertEquals(1, dvSortedNumeric.docValueCount());\n          assertEquals(id, dvSortedNumeric.nextValue());\n        }\n      }\n    }\n    \n    ScoreDoc[] hits = searcher.search(new TermQuery(new Term(new String(\"content\"), \"aaa\")), 1000).scoreDocs;\n\n    // First document should be #0\n    Document d = searcher.getIndexReader().document(hits[0].doc);\n    assertEquals(\"didn't get the right document first\", \"0\", d.get(\"id\"));\n\n    doTestHits(hits, 34, searcher.getIndexReader());\n    \n    if (is40Index) {\n      hits = searcher.search(new TermQuery(new Term(new String(\"content5\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    \n      hits = searcher.search(new TermQuery(new Term(new String(\"content6\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    }\n\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(new String(\"utf8\"), \"lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n\n    if (hasPoints) {\n      doTestHits(searcher.search(IntPoint.newRangeQuery(\"intPoint1d\", 0, 34), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(IntPoint.newRangeQuery(\"intPoint2d\", new int[] {0, 0}, new int[] {34, 68}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(FloatPoint.newRangeQuery(\"floatPoint1d\", 0f, 34f), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(FloatPoint.newRangeQuery(\"floatPoint2d\", new float[] {0f, 0f}, new float[] {34f, 68f}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(LongPoint.newRangeQuery(\"longPoint1d\", 0, 34), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(LongPoint.newRangeQuery(\"longPoint2d\", new long[] {0, 0}, new long[] {34, 68}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(DoublePoint.newRangeQuery(\"doublePoint1d\", 0.0, 34.0), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(DoublePoint.newRangeQuery(\"doublePoint2d\", new double[] {0.0, 0.0}, new double[] {34.0, 68.0}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      \n      byte[] bytes1 = new byte[4];\n      byte[] bytes2 = new byte[] {0, 0, 0, (byte) 34};\n      doTestHits(searcher.search(BinaryPoint.newRangeQuery(\"binaryPoint1d\", bytes1, bytes2), 1000).scoreDocs, 34, searcher.getIndexReader());\n      byte[] bytes3 = new byte[] {0, 0, 0, (byte) 68};\n      doTestHits(searcher.search(BinaryPoint.newRangeQuery(\"binaryPoint2d\", new byte[][] {bytes1, bytes1}, new byte[][] {bytes2, bytes3}), 1000).scoreDocs, 34, searcher.getIndexReader());\n    }\n\n    reader.close();\n  }\n\n","sourceOld":"  public void searchIndex(Directory dir, String oldName) throws IOException {\n    //QueryParser parser = new QueryParser(\"contents\", new MockAnalyzer(random));\n    //Query query = parser.parse(\"handle:1\");\n\n    IndexReader reader = DirectoryReader.open(dir);\n    IndexSearcher searcher = newSearcher(reader);\n\n    TestUtil.checkIndex(dir);\n    \n    // true if this is a 4.0+ index\n    final boolean is40Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"content5\") != null;\n    // true if this is a 4.2+ index\n    final boolean is42Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedSet\") != null;\n    // true if this is a 4.9+ index\n    final boolean is49Index = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"dvSortedNumeric\") != null;\n    // true if this index has points (>= 6.0)\n    final boolean hasPoints = MultiFields.getMergedFieldInfos(reader).fieldInfo(\"intPoint1d\") != null;\n\n    assert is40Index;\n\n    final Bits liveDocs = MultiFields.getLiveDocs(reader);\n\n    for(int i=0;i<35;i++) {\n      if (liveDocs.get(i)) {\n        Document d = reader.document(i);\n        List<IndexableField> fields = d.getFields();\n        boolean isProxDoc = d.getField(\"content3\") == null;\n        if (isProxDoc) {\n          final int numFields = is40Index ? 7 : 5;\n          assertEquals(numFields, fields.size());\n          IndexableField f = d.getField(\"id\");\n          assertEquals(\"\"+i, f.stringValue());\n\n          f = d.getField(\"utf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n\n          f =  d.getField(\"autf8\");\n          assertEquals(\"Lu\\uD834\\uDD1Ece\\uD834\\uDD60ne \\u0000 \\u2620 ab\\ud917\\udc17cd\", f.stringValue());\n      \n          f = d.getField(\"content2\");\n          assertEquals(\"here is more content with aaa aaa aaa\", f.stringValue());\n\n          f = d.getField(\"fie\\u2C77ld\");\n          assertEquals(\"field with non-ascii name\", f.stringValue());\n        }\n\n        Fields tfvFields = reader.getTermVectors(i);\n        assertNotNull(\"i=\" + i, tfvFields);\n        Terms tfv = tfvFields.terms(\"utf8\");\n        assertNotNull(\"docID=\" + i + \" index=\" + oldName, tfv);\n      } else {\n        // Only ID 7 is deleted\n        assertEquals(7, i);\n      }\n    }\n\n    if (is40Index) {\n      // check docvalues fields\n      NumericDocValues dvByte = MultiDocValues.getNumericValues(reader, \"dvByte\");\n      BinaryDocValues dvBytesDerefFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefFixed\");\n      BinaryDocValues dvBytesDerefVar = MultiDocValues.getBinaryValues(reader, \"dvBytesDerefVar\");\n      SortedDocValues dvBytesSortedFixed = MultiDocValues.getSortedValues(reader, \"dvBytesSortedFixed\");\n      SortedDocValues dvBytesSortedVar = MultiDocValues.getSortedValues(reader, \"dvBytesSortedVar\");\n      BinaryDocValues dvBytesStraightFixed = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightFixed\");\n      BinaryDocValues dvBytesStraightVar = MultiDocValues.getBinaryValues(reader, \"dvBytesStraightVar\");\n      NumericDocValues dvDouble = MultiDocValues.getNumericValues(reader, \"dvDouble\");\n      NumericDocValues dvFloat = MultiDocValues.getNumericValues(reader, \"dvFloat\");\n      NumericDocValues dvInt = MultiDocValues.getNumericValues(reader, \"dvInt\");\n      NumericDocValues dvLong = MultiDocValues.getNumericValues(reader, \"dvLong\");\n      NumericDocValues dvPacked = MultiDocValues.getNumericValues(reader, \"dvPacked\");\n      NumericDocValues dvShort = MultiDocValues.getNumericValues(reader, \"dvShort\");\n      SortedSetDocValues dvSortedSet = null;\n      if (is42Index) {\n        dvSortedSet = MultiDocValues.getSortedSetValues(reader, \"dvSortedSet\");\n      }\n      SortedNumericDocValues dvSortedNumeric = null;\n      if (is49Index) {\n        dvSortedNumeric = MultiDocValues.getSortedNumericValues(reader, \"dvSortedNumeric\");\n      }\n      \n      for (int i=0;i<35;i++) {\n        int id = Integer.parseInt(reader.document(i).get(\"id\"));\n        assertEquals(i, dvByte.nextDoc());\n        assertEquals(id, dvByte.longValue());\n        \n        byte bytes[] = new byte[] {\n            (byte)(id >>> 24), (byte)(id >>> 16),(byte)(id >>> 8),(byte)id\n        };\n        BytesRef expectedRef = new BytesRef(bytes);\n        \n        assertEquals(i, dvBytesDerefFixed.nextDoc());\n        BytesRef term = dvBytesDerefFixed.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesDerefVar.nextDoc());\n        term = dvBytesDerefVar.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesSortedFixed.nextDoc());\n        term = dvBytesSortedFixed.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesSortedVar.nextDoc());\n        term = dvBytesSortedVar.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesStraightFixed.nextDoc());\n        term = dvBytesStraightFixed.binaryValue();\n        assertEquals(expectedRef, term);\n        assertEquals(i, dvBytesStraightVar.nextDoc());\n        term = dvBytesStraightVar.binaryValue();\n        assertEquals(expectedRef, term);\n        \n        assertEquals(i, dvDouble.nextDoc());\n        assertEquals((double)id, Double.longBitsToDouble(dvDouble.longValue()), 0D);\n        assertEquals(i, dvFloat.nextDoc());\n        assertEquals((float)id, Float.intBitsToFloat((int)dvFloat.longValue()), 0F);\n        assertEquals(i, dvInt.nextDoc());\n        assertEquals(id, dvInt.longValue());\n        assertEquals(i, dvLong.nextDoc());\n        assertEquals(id, dvLong.longValue());\n        assertEquals(i, dvPacked.nextDoc());\n        assertEquals(id, dvPacked.longValue());\n        assertEquals(i, dvShort.nextDoc());\n        assertEquals(id, dvShort.longValue());\n        if (is42Index) {\n          assertEquals(i, dvSortedSet.nextDoc());\n          long ord = dvSortedSet.nextOrd();\n          assertEquals(SortedSetDocValues.NO_MORE_ORDS, dvSortedSet.nextOrd());\n          term = dvSortedSet.lookupOrd(ord);\n          assertEquals(expectedRef, term);\n        }\n        if (is49Index) {\n          assertEquals(i, dvSortedNumeric.nextDoc());\n          assertEquals(1, dvSortedNumeric.docValueCount());\n          assertEquals(id, dvSortedNumeric.nextValue());\n        }\n      }\n    }\n    \n    ScoreDoc[] hits = searcher.search(new TermQuery(new Term(new String(\"content\"), \"aaa\")), 1000).scoreDocs;\n\n    // First document should be #0\n    Document d = searcher.getIndexReader().document(hits[0].doc);\n    assertEquals(\"didn't get the right document first\", \"0\", d.get(\"id\"));\n\n    doTestHits(hits, 34, searcher.getIndexReader());\n    \n    if (is40Index) {\n      hits = searcher.search(new TermQuery(new Term(new String(\"content5\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    \n      hits = searcher.search(new TermQuery(new Term(new String(\"content6\"), \"aaa\")), 1000).scoreDocs;\n\n      doTestHits(hits, 34, searcher.getIndexReader());\n    }\n\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"\\u0000\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(new String(\"utf8\"), \"lu\\uD834\\uDD1Ece\\uD834\\uDD60ne\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n    hits = searcher.search(new TermQuery(new Term(\"utf8\", \"ab\\ud917\\udc17cd\")), 1000).scoreDocs;\n    assertEquals(34, hits.length);\n\n    if (hasPoints) {\n      doTestHits(searcher.search(IntPoint.newRangeQuery(\"intPoint1d\", 0, 34), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(IntPoint.newRangeQuery(\"intPoint2d\", new int[] {0, 0}, new int[] {34, 68}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(FloatPoint.newRangeQuery(\"floatPoint1d\", 0f, 34f), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(FloatPoint.newRangeQuery(\"floatPoint2d\", new float[] {0f, 0f}, new float[] {34f, 68f}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(LongPoint.newRangeQuery(\"longPoint1d\", 0, 34), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(LongPoint.newRangeQuery(\"longPoint2d\", new long[] {0, 0}, new long[] {34, 68}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(DoublePoint.newRangeQuery(\"doublePoint1d\", 0.0, 34.0), 1000).scoreDocs, 34, searcher.getIndexReader());\n      doTestHits(searcher.search(DoublePoint.newRangeQuery(\"doublePoint2d\", new double[] {0.0, 0.0}, new double[] {34.0, 68.0}), 1000).scoreDocs, 34, searcher.getIndexReader());\n      \n      byte[] bytes1 = new byte[4];\n      byte[] bytes2 = new byte[] {0, 0, 0, (byte) 34};\n      doTestHits(searcher.search(BinaryPoint.newRangeQuery(\"binaryPoint1d\", bytes1, bytes2), 1000).scoreDocs, 34, searcher.getIndexReader());\n      byte[] bytes3 = new byte[] {0, 0, 0, (byte) 68};\n      doTestHits(searcher.search(BinaryPoint.newRangeQuery(\"binaryPoint2d\", new byte[][] {bytes1, bytes1}, new byte[][] {bytes2, bytes3}), 1000).scoreDocs, 34, searcher.getIndexReader());\n    }\n\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"74afd3206df44c6b7fc46faaac8bf5c7a080ff23":["858ac9239fd641f6756a6a3053b76c4023b29ffc"],"a1a7fc70ffbbbfd3ad723576e59470c063c05e03":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["858ac9239fd641f6756a6a3053b76c4023b29ffc","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4cc45c615dbb82bf79d5f9550286098367874fbf"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["74afd3206df44c6b7fc46faaac8bf5c7a080ff23","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["74afd3206df44c6b7fc46faaac8bf5c7a080ff23"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"858ac9239fd641f6756a6a3053b76c4023b29ffc":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","a1a7fc70ffbbbfd3ad723576e59470c063c05e03"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["04e775de416dd2d8067b10db1c8af975a1d5017e"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"]},"commit2Childs":{"74afd3206df44c6b7fc46faaac8bf5c7a080ff23":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"a1a7fc70ffbbbfd3ad723576e59470c063c05e03":["858ac9239fd641f6756a6a3053b76c4023b29ffc"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","04e775de416dd2d8067b10db1c8af975a1d5017e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["402ad3ddc9da7b70da1b167667a60ece6a1381fb","4cc45c615dbb82bf79d5f9550286098367874fbf"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"858ac9239fd641f6756a6a3053b76c4023b29ffc":["74afd3206df44c6b7fc46faaac8bf5c7a080ff23","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["a1a7fc70ffbbbfd3ad723576e59470c063c05e03","858ac9239fd641f6756a6a3053b76c4023b29ffc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}