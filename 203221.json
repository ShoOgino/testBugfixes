{"path":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractBlockPackedWriter#AbstractBlockPackedWriter(DataOutput,int).mjava","commits":[{"id":"e76d3450662dab47d54e3f462c7b3eba4e38b9ac","date":1358866496,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractBlockPackedWriter#AbstractBlockPackedWriter(DataOutput,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sole constructor.\n   * @param blockSize the number of values of a single block, must be a multiple of <tt>64</tt>\n   */\n  public AbstractBlockPackedWriter(DataOutput out, int blockSize) {\n    checkBlockSize(blockSize);\n    reset(out);\n    values = new long[blockSize];\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractBlockPackedWriter#AbstractBlockPackedWriter(DataOutput,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sole constructor.\n   * @param blockSize the number of values of a single block, must be a multiple of <tt>64</tt>\n   */\n  public AbstractBlockPackedWriter(DataOutput out, int blockSize) {\n    checkBlockSize(blockSize);\n    reset(out);\n    values = new long[blockSize];\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f375a9203c9124207e176f4dc59bd8e832b239a0","date":1370270173,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractBlockPackedWriter#AbstractBlockPackedWriter(DataOutput,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractBlockPackedWriter#AbstractBlockPackedWriter(DataOutput,int).mjava","sourceNew":"  /**\n   * Sole constructor.\n   * @param blockSize the number of values of a single block, must be a multiple of <tt>64</tt>\n   */\n  public AbstractBlockPackedWriter(DataOutput out, int blockSize) {\n    checkBlockSize(blockSize, MIN_BLOCK_SIZE, MAX_BLOCK_SIZE);\n    reset(out);\n    values = new long[blockSize];\n  }\n\n","sourceOld":"  /**\n   * Sole constructor.\n   * @param blockSize the number of values of a single block, must be a multiple of <tt>64</tt>\n   */\n  public AbstractBlockPackedWriter(DataOutput out, int blockSize) {\n    checkBlockSize(blockSize);\n    reset(out);\n    values = new long[blockSize];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e3751ad4cc85eb979419cf5469dfba266eae56a","date":1581046252,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractBlockPackedWriter#AbstractBlockPackedWriter(DataOutput,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractBlockPackedWriter#AbstractBlockPackedWriter(DataOutput,int).mjava","sourceNew":"  /**\n   * Sole constructor.\n   * @param blockSize the number of values of a single block, must be a multiple of <code>64</code>\n   */\n  public AbstractBlockPackedWriter(DataOutput out, int blockSize) {\n    checkBlockSize(blockSize, MIN_BLOCK_SIZE, MAX_BLOCK_SIZE);\n    reset(out);\n    values = new long[blockSize];\n  }\n\n","sourceOld":"  /**\n   * Sole constructor.\n   * @param blockSize the number of values of a single block, must be a multiple of <tt>64</tt>\n   */\n  public AbstractBlockPackedWriter(DataOutput out, int blockSize) {\n    checkBlockSize(blockSize, MIN_BLOCK_SIZE, MAX_BLOCK_SIZE);\n    reset(out);\n    values = new long[blockSize];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9f94c392daa8f5708186bede16c84eafad4cdd2","date":1599578873,"type":3,"author":"Mike Drob","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractBlockPackedWriter#AbstractBlockPackedWriter(DataOutput,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/AbstractBlockPackedWriter#AbstractBlockPackedWriter(DataOutput,int).mjava","sourceNew":"  /**\n   * Sole constructor.\n   * @param blockSize the number of values of a single block, must be a multiple of <code>64</code>\n   */\n  protected AbstractBlockPackedWriter(DataOutput out, int blockSize) {\n    checkBlockSize(blockSize, MIN_BLOCK_SIZE, MAX_BLOCK_SIZE);\n    reset(out);\n    values = new long[blockSize];\n  }\n\n","sourceOld":"  /**\n   * Sole constructor.\n   * @param blockSize the number of values of a single block, must be a multiple of <code>64</code>\n   */\n  public AbstractBlockPackedWriter(DataOutput out, int blockSize) {\n    checkBlockSize(blockSize, MIN_BLOCK_SIZE, MAX_BLOCK_SIZE);\n    reset(out);\n    values = new long[blockSize];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e76d3450662dab47d54e3f462c7b3eba4e38b9ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9e3751ad4cc85eb979419cf5469dfba266eae56a":["f375a9203c9124207e176f4dc59bd8e832b239a0"],"c9f94c392daa8f5708186bede16c84eafad4cdd2":["9e3751ad4cc85eb979419cf5469dfba266eae56a"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e76d3450662dab47d54e3f462c7b3eba4e38b9ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f375a9203c9124207e176f4dc59bd8e832b239a0":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9f94c392daa8f5708186bede16c84eafad4cdd2"]},"commit2Childs":{"e76d3450662dab47d54e3f462c7b3eba4e38b9ac":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"9e3751ad4cc85eb979419cf5469dfba266eae56a":["c9f94c392daa8f5708186bede16c84eafad4cdd2"],"c9f94c392daa8f5708186bede16c84eafad4cdd2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["f375a9203c9124207e176f4dc59bd8e832b239a0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e76d3450662dab47d54e3f462c7b3eba4e38b9ac","d4d69c535930b5cce125cff868d40f6373dc27d4"],"f375a9203c9124207e176f4dc59bd8e832b239a0":["9e3751ad4cc85eb979419cf5469dfba266eae56a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}