{"path":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testQuerySwitch().mjava","commits":[{"id":"c30a2043fa096da35fb57b6f35ec8f1adc6e919a","date":1361818479,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testQuerySwitch().mjava","pathOld":"/dev/null","sourceNew":"  public void testQuerySwitch() throws Exception {\n    SolrQueryRequest req = req(\"myXXX\", \"XXX\", \n                               \"myField\", \"foo_s\",\n                               \"myQ\", \"{!prefix f=$myField}asdf\");\n    try {\n      assertQueryEquals(\"switch\", req, \n                        \"{!switch case.foo=XXX case.bar=zzz case.yak=qqq}foo\",\n                        \"{!switch case.foo=qqq case.bar=XXX case.yak=zzz} bar \",\n                        \"{!switch case.foo=qqq case.bar=XXX case.yak=zzz v='  bar '}\",\n                        \"{!switch default=XXX case.foo=qqq case.bar=zzz}asdf\",\n                        \"{!switch default=$myXXX case.foo=qqq case.bar=zzz}asdf\",\n                        \"{!switch case=XXX case.bar=zzz case.yak=qqq v=''}\",\n                        \"{!switch case.bar=zzz case=XXX case.yak=qqq v=''}\",\n                        \"{!switch case=XXX case.bar=zzz case.yak=qqq}\",\n                        \"{!switch case=XXX case.bar=zzz case.yak=qqq}   \",\n                        \"{!switch case=$myXXX case.bar=zzz case.yak=qqq}   \");\n\n      assertQueryEquals(\"switch\", req, \n                        \"{!switch case.foo=$myQ case.bar=zzz case.yak=qqq}foo\",\n                        \"{!query v=$myQ}\");\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a18e3c53fdd9e2e8f2bdb3b21ca3964273a2b5b0","date":1576656084,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testQuerySwitch().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testQuerySwitch().mjava","sourceNew":"  public void testQuerySwitch() throws Exception {\n    SolrQueryRequest req = req(\"myXXX\", \"XXX\",\n                               \"myField\", \"foo_s\",\n                               \"myQ\", \"{!prefix f=$myField}asdf\");\n    try {\n      assertQueryEquals(\"switch\", req,\n                        \"{!switch case.foo=XXX case.bar=zzz case.yak=qqq}foo\",\n                        \"{!switch case.foo=qqq case.bar=XXX case.yak=zzz} bar \",\n                        \"{!switch case.foo=qqq case.bar=XXX case.yak=zzz v='  bar '}\",\n                        \"{!switch default=XXX case.foo=qqq case.bar=zzz}asdf\",\n                        \"{!switch default=$myXXX case.foo=qqq case.bar=zzz}asdf\",\n                        \"{!switch case=XXX case.bar=zzz case.yak=qqq v=''}\",\n                        \"{!switch case.bar=zzz case=XXX case.yak=qqq v=''}\",\n                        \"{!switch case=XXX case.bar=zzz case.yak=qqq}\",\n                        \"{!switch case=XXX case.bar=zzz case.yak=qqq}   \",\n                        \"{!switch case=$myXXX case.bar=zzz case.yak=qqq}   \");\n\n      assertQueryEquals(\"switch\", req,\n                        \"{!switch case.foo=$myQ case.bar=zzz case.yak=qqq}foo\",\n                        \"{!query v=$myQ}\");\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  public void testQuerySwitch() throws Exception {\n    SolrQueryRequest req = req(\"myXXX\", \"XXX\", \n                               \"myField\", \"foo_s\",\n                               \"myQ\", \"{!prefix f=$myField}asdf\");\n    try {\n      assertQueryEquals(\"switch\", req, \n                        \"{!switch case.foo=XXX case.bar=zzz case.yak=qqq}foo\",\n                        \"{!switch case.foo=qqq case.bar=XXX case.yak=zzz} bar \",\n                        \"{!switch case.foo=qqq case.bar=XXX case.yak=zzz v='  bar '}\",\n                        \"{!switch default=XXX case.foo=qqq case.bar=zzz}asdf\",\n                        \"{!switch default=$myXXX case.foo=qqq case.bar=zzz}asdf\",\n                        \"{!switch case=XXX case.bar=zzz case.yak=qqq v=''}\",\n                        \"{!switch case.bar=zzz case=XXX case.yak=qqq v=''}\",\n                        \"{!switch case=XXX case.bar=zzz case.yak=qqq}\",\n                        \"{!switch case=XXX case.bar=zzz case.yak=qqq}   \",\n                        \"{!switch case=$myXXX case.bar=zzz case.yak=qqq}   \");\n\n      assertQueryEquals(\"switch\", req, \n                        \"{!switch case.foo=$myQ case.bar=zzz case.yak=qqq}foo\",\n                        \"{!query v=$myQ}\");\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"246314af59d76a47fccc31e9494eefee01ec9c00","date":1576657955,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testQuerySwitch().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/QueryEqualityTest#testQuerySwitch().mjava","sourceNew":"  public void testQuerySwitch() throws Exception {\n    SolrQueryRequest req = req(\"myXXX\", \"XXX\",\n                               \"myField\", \"foo_s\",\n                               \"myQ\", \"{!prefix f=$myField}asdf\");\n    try {\n      assertQueryEquals(\"switch\", req,\n                        \"{!switch case.foo=XXX case.bar=zzz case.yak=qqq}foo\",\n                        \"{!switch case.foo=qqq case.bar=XXX case.yak=zzz} bar \",\n                        \"{!switch case.foo=qqq case.bar=XXX case.yak=zzz v='  bar '}\",\n                        \"{!switch default=XXX case.foo=qqq case.bar=zzz}asdf\",\n                        \"{!switch default=$myXXX case.foo=qqq case.bar=zzz}asdf\",\n                        \"{!switch case=XXX case.bar=zzz case.yak=qqq v=''}\",\n                        \"{!switch case.bar=zzz case=XXX case.yak=qqq v=''}\",\n                        \"{!switch case=XXX case.bar=zzz case.yak=qqq}\",\n                        \"{!switch case=XXX case.bar=zzz case.yak=qqq}   \",\n                        \"{!switch case=$myXXX case.bar=zzz case.yak=qqq}   \");\n\n      assertQueryEquals(\"switch\", req,\n                        \"{!switch case.foo=$myQ case.bar=zzz case.yak=qqq}foo\",\n                        \"{!query v=$myQ}\");\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  public void testQuerySwitch() throws Exception {\n    SolrQueryRequest req = req(\"myXXX\", \"XXX\", \n                               \"myField\", \"foo_s\",\n                               \"myQ\", \"{!prefix f=$myField}asdf\");\n    try {\n      assertQueryEquals(\"switch\", req, \n                        \"{!switch case.foo=XXX case.bar=zzz case.yak=qqq}foo\",\n                        \"{!switch case.foo=qqq case.bar=XXX case.yak=zzz} bar \",\n                        \"{!switch case.foo=qqq case.bar=XXX case.yak=zzz v='  bar '}\",\n                        \"{!switch default=XXX case.foo=qqq case.bar=zzz}asdf\",\n                        \"{!switch default=$myXXX case.foo=qqq case.bar=zzz}asdf\",\n                        \"{!switch case=XXX case.bar=zzz case.yak=qqq v=''}\",\n                        \"{!switch case.bar=zzz case=XXX case.yak=qqq v=''}\",\n                        \"{!switch case=XXX case.bar=zzz case.yak=qqq}\",\n                        \"{!switch case=XXX case.bar=zzz case.yak=qqq}   \",\n                        \"{!switch case=$myXXX case.bar=zzz case.yak=qqq}   \");\n\n      assertQueryEquals(\"switch\", req, \n                        \"{!switch case.foo=$myQ case.bar=zzz case.yak=qqq}foo\",\n                        \"{!query v=$myQ}\");\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"246314af59d76a47fccc31e9494eefee01ec9c00":["c30a2043fa096da35fb57b6f35ec8f1adc6e919a","a18e3c53fdd9e2e8f2bdb3b21ca3964273a2b5b0"],"c30a2043fa096da35fb57b6f35ec8f1adc6e919a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a18e3c53fdd9e2e8f2bdb3b21ca3964273a2b5b0":["c30a2043fa096da35fb57b6f35ec8f1adc6e919a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a18e3c53fdd9e2e8f2bdb3b21ca3964273a2b5b0"]},"commit2Childs":{"246314af59d76a47fccc31e9494eefee01ec9c00":[],"c30a2043fa096da35fb57b6f35ec8f1adc6e919a":["246314af59d76a47fccc31e9494eefee01ec9c00","a18e3c53fdd9e2e8f2bdb3b21ca3964273a2b5b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c30a2043fa096da35fb57b6f35ec8f1adc6e919a"],"a18e3c53fdd9e2e8f2bdb3b21ca3964273a2b5b0":["246314af59d76a47fccc31e9494eefee01ec9c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["246314af59d76a47fccc31e9494eefee01ec9c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}