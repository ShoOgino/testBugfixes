{"path":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPluginBase#add2Mapping(Permission).mjava","commits":[{"id":"8076096f334b0665d0a69a63ee98ac09baad402b","date":1589405373,"type":1,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPluginBase#add2Mapping(Permission).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPlugin#add2Mapping(Permission).mjava","sourceNew":"  //this is to do optimized lookup of permissions for a given collection/path\n  private void add2Mapping(Permission permission) {\n    for (String c : permission.collections) {\n      WildCardSupportMap m = mapping.get(c);\n      if (m == null) mapping.put(c, m = new WildCardSupportMap());\n      for (String path : permission.path) {\n        List<Permission> perms = m.get(path);\n        if (perms == null) m.put(path, perms = new ArrayList<>());\n        perms.add(permission);\n      }\n    }\n  }\n\n","sourceOld":"  //this is to do optimized lookup of permissions for a given collection/path\n  private void add2Mapping(Permission permission) {\n    for (String c : permission.collections) {\n      WildCardSupportMap m = mapping.get(c);\n      if (m == null) mapping.put(c, m = new WildCardSupportMap());\n      for (String path : permission.path) {\n        List<Permission> perms = m.get(path);\n        if (perms == null) m.put(path, perms = new ArrayList<>());\n        perms.add(permission);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5e0ac06a3dde3a146042d8eb8820dc45326e9263","date":1594139870,"type":3,"author":"Mike Drob","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPluginBase#add2Mapping(Permission).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPluginBase#add2Mapping(Permission).mjava","sourceNew":"  //this is to do optimized lookup of permissions for a given collection/path\n  private void add2Mapping(Permission permission) {\n    for (String c : permission.collections) {\n      WildCardSupportMap m = mapping.computeIfAbsent(c, k -> new WildCardSupportMap());\n      for (String path : permission.path) {\n        List<Permission> perms = m.get(path);\n        if (perms == null) m.put(path, perms = new ArrayList<>());\n        perms.add(permission);\n      }\n    }\n  }\n\n","sourceOld":"  //this is to do optimized lookup of permissions for a given collection/path\n  private void add2Mapping(Permission permission) {\n    for (String c : permission.collections) {\n      WildCardSupportMap m = mapping.get(c);\n      if (m == null) mapping.put(c, m = new WildCardSupportMap());\n      for (String path : permission.path) {\n        List<Permission> perms = m.get(path);\n        if (perms == null) m.put(path, perms = new ArrayList<>());\n        perms.add(permission);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8076096f334b0665d0a69a63ee98ac09baad402b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5e0ac06a3dde3a146042d8eb8820dc45326e9263":["8076096f334b0665d0a69a63ee98ac09baad402b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5e0ac06a3dde3a146042d8eb8820dc45326e9263"]},"commit2Childs":{"8076096f334b0665d0a69a63ee98ac09baad402b":["5e0ac06a3dde3a146042d8eb8820dc45326e9263"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8076096f334b0665d0a69a63ee98ac09baad402b"],"5e0ac06a3dde3a146042d8eb8820dc45326e9263":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}