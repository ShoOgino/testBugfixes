{"path":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser#OptionalWeights(SrndQuery).mjava","commits":[{"id":"b3d2f5b0b95e82cde4724fb6e7020cfdd2bb5a07","date":1270909388,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser#OptionalWeights(SrndQuery).mjava","pathOld":"lucene/contrib/surround/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser#OptionalWeights(SrndQuery).mjava","sourceNew":"  final public void OptionalWeights(SrndQuery q) throws ParseException {\n  Token weight=null;\n    label_8:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        ;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        break label_8;\n      }\n      jj_consume_token(CARAT);\n      weight = jj_consume_token(NUMBER);\n      float f;\n      try {\n        f = Float.valueOf(weight.image).floatValue();\n      } catch (Exception floatExc) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image + \" (\" + floatExc + \")\");}\n      }\n      if (f <= 0.0) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image);}\n      }\n      q.setWeight(f * q.getWeight()); /* left associative, fwiw */\n\n    }\n  }\n\n","sourceOld":"  final public void OptionalWeights(SrndQuery q) throws ParseException {\n  Token weight=null;\n    label_8:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        ;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        break label_8;\n      }\n      jj_consume_token(CARAT);\n      weight = jj_consume_token(NUMBER);\n      float f;\n      try {\n        f = Float.valueOf(weight.image).floatValue();\n      } catch (Exception floatExc) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image + \" (\" + floatExc + \")\");}\n      }\n      if (f <= 0.0) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image);}\n      }\n      q.setWeight(f * q.getWeight()); /* left associative, fwiw */\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a53a291ad9b1cc050d846b68758c061a55d52734","date":1310437344,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/surround/parser/QueryParser#OptionalWeights(SrndQuery).mjava","pathOld":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/surround/parser/QueryParser#OptionalWeights(SrndQuery).mjava","sourceNew":"  final public void OptionalWeights(SrndQuery q) throws ParseException {\n  Token weight=null;\n    label_8:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        ;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        break label_8;\n      }\n      jj_consume_token(CARAT);\n      weight = jj_consume_token(NUMBER);\n      float f;\n      try {\n        f = Float.valueOf(weight.image).floatValue();\n      } catch (Exception floatExc) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image + \" (\" + floatExc + \")\");}\n      }\n      if (f <= 0.0) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image);}\n      }\n      q.setWeight(f * q.getWeight()); /* left associative, fwiw */\n\n    }\n  }\n\n","sourceOld":"  final public void OptionalWeights(SrndQuery q) throws ParseException {\n  Token weight=null;\n    label_8:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        ;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        break label_8;\n      }\n      jj_consume_token(CARAT);\n      weight = jj_consume_token(NUMBER);\n      float f;\n      try {\n        f = Float.valueOf(weight.image).floatValue();\n      } catch (Exception floatExc) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image + \" (\" + floatExc + \")\");}\n      }\n      if (f <= 0.0) {\n        {if (true) throw new ParseException(boostErrorMessage + weight.image);}\n      }\n      q.setWeight(f * q.getWeight()); /* left associative, fwiw */\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b3d2f5b0b95e82cde4724fb6e7020cfdd2bb5a07":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a53a291ad9b1cc050d846b68758c061a55d52734":["b3d2f5b0b95e82cde4724fb6e7020cfdd2bb5a07"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a53a291ad9b1cc050d846b68758c061a55d52734"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b3d2f5b0b95e82cde4724fb6e7020cfdd2bb5a07"],"b3d2f5b0b95e82cde4724fb6e7020cfdd2bb5a07":["a53a291ad9b1cc050d846b68758c061a55d52734"],"a53a291ad9b1cc050d846b68758c061a55d52734":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}