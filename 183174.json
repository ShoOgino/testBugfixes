{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl.GeoPointRadiusCellComparator#cellCrosses(double,double,double,double).mjava","commits":[{"id":"8a093d23e938d132b81b5f2de3d6b168afe3608e","date":1455076308,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl.GeoPointRadiusCellComparator#cellCrosses(double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/search/GeoPointDistanceQueryImpl.GeoPointRadiusCellComparator#cellCrosses(double,double,double,double).mjava","sourceNew":"    @Override\n    protected boolean cellCrosses(final double minLon, final double minLat, final double maxLon, final double maxLat) {\n      return GeoRelationUtils.rectCrossesCircle(minLon, minLat, maxLon, maxLat,\n          centerLon, distanceQuery.centerLat, distanceQuery.radiusMeters, true);\n    }\n\n","sourceOld":"    @Override\n    protected boolean cellCrosses(final double minLon, final double minLat, final double maxLon, final double maxLat) {\n      return GeoRelationUtils.rectCrossesCircle(minLon, minLat, maxLon, maxLat,\n          centerLon, distanceQuery.centerLat, distanceQuery.radiusMeters, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec996bf2daff09d61a876319e8fae4aebbea58e3","date":1458661946,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl.GeoPointRadiusCellComparator#cellCrosses(double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl.GeoPointRadiusCellComparator#cellCrosses(double,double,double,double).mjava","sourceNew":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      return GeoRelationUtils.rectCrossesCircle(minLat, maxLat, minLon, maxLon,\n                                                distanceQuery.centerLat, centerLon, distanceQuery.radiusMeters, true);\n    }\n\n","sourceOld":"    @Override\n    protected boolean cellCrosses(final double minLon, final double minLat, final double maxLon, final double maxLat) {\n      return GeoRelationUtils.rectCrossesCircle(minLon, minLat, maxLon, maxLat,\n          centerLon, distanceQuery.centerLat, distanceQuery.radiusMeters, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb4875e9db9b77346c36b7fe0d4b8759a1e095d3","date":1458680048,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl.GeoPointRadiusCellComparator#cellCrosses(double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl.GeoPointRadiusCellComparator#cellCrosses(double,double,double,double).mjava","sourceNew":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      if (maxLat < GeoPointDistanceQueryImpl.this.minLat ||\n          maxLon < GeoPointDistanceQueryImpl.this.minLon ||\n          minLat > GeoPointDistanceQueryImpl.this.maxLat ||\n          minLon > GeoPointDistanceQueryImpl.this.maxLon) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n\n","sourceOld":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      return GeoRelationUtils.rectCrossesCircle(minLat, maxLat, minLon, maxLon,\n                                                distanceQuery.centerLat, centerLon, distanceQuery.radiusMeters, true);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86fcb04ff2d63aad8754270211d5fc084d3526b9","date":1459278881,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl.GeoPointRadiusCellComparator#cellCrosses(double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl.GeoPointRadiusCellComparator#cellCrosses(double,double,double,double).mjava","sourceNew":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      // bounding box check\n      if (maxLat < GeoPointDistanceQueryImpl.this.minLat ||\n          maxLon < GeoPointDistanceQueryImpl.this.minLon ||\n          minLat > GeoPointDistanceQueryImpl.this.maxLat ||\n          minLon > GeoPointDistanceQueryImpl.this.maxLon) {\n        return false;\n      } else if ((centerLon < minLon || centerLon > maxLon) && (axisLat+GeoUtils.AXISLAT_ERROR < minLat || axisLat-GeoUtils.AXISLAT_ERROR > maxLat)) {\n        if (SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, minLat, minLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, minLat, maxLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, maxLat, minLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, maxLat, maxLon) > distanceQuery.radiusMeters) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n","sourceOld":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      if (maxLat < GeoPointDistanceQueryImpl.this.minLat ||\n          maxLon < GeoPointDistanceQueryImpl.this.minLon ||\n          minLat > GeoPointDistanceQueryImpl.this.maxLat ||\n          minLon > GeoPointDistanceQueryImpl.this.maxLon) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43ddc1b7a872fafd838d3f3129984ca661e29b36","date":1459526591,"type":3,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl.GeoPointRadiusCellComparator#cellCrosses(double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl.GeoPointRadiusCellComparator#cellCrosses(double,double,double,double).mjava","sourceNew":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      // bounding box check\n      if (maxLat < GeoPointDistanceQueryImpl.this.minLat ||\n          maxLon < GeoPointDistanceQueryImpl.this.minLon ||\n          minLat > GeoPointDistanceQueryImpl.this.maxLat ||\n          minLon > GeoPointDistanceQueryImpl.this.maxLon) {\n        return false;\n      } else if ((centerLon < minLon || centerLon > maxLon) && (axisLat+GeoRect.AXISLAT_ERROR < minLat || axisLat-GeoRect.AXISLAT_ERROR > maxLat)) {\n        if (SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, minLat, minLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, minLat, maxLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, maxLat, minLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, maxLat, maxLon) > distanceQuery.radiusMeters) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n","sourceOld":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      // bounding box check\n      if (maxLat < GeoPointDistanceQueryImpl.this.minLat ||\n          maxLon < GeoPointDistanceQueryImpl.this.minLon ||\n          minLat > GeoPointDistanceQueryImpl.this.maxLat ||\n          minLon > GeoPointDistanceQueryImpl.this.maxLon) {\n        return false;\n      } else if ((centerLon < minLon || centerLon > maxLon) && (axisLat+GeoUtils.AXISLAT_ERROR < minLat || axisLat-GeoUtils.AXISLAT_ERROR > maxLat)) {\n        if (SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, minLat, minLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, minLat, maxLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, maxLat, minLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, maxLat, maxLon) > distanceQuery.radiusMeters) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe","date":1459623422,"type":3,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl.GeoPointRadiusCellComparator#cellCrosses(double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl.GeoPointRadiusCellComparator#cellCrosses(double,double,double,double).mjava","sourceNew":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      // bounding box check\n      if (maxLat < GeoPointDistanceQueryImpl.this.minLat ||\n          maxLon < GeoPointDistanceQueryImpl.this.minLon ||\n          minLat > GeoPointDistanceQueryImpl.this.maxLat ||\n          minLon > GeoPointDistanceQueryImpl.this.maxLon) {\n        return false;\n      } else if ((centerLon < minLon || centerLon > maxLon) && (axisLat+ Rectangle.AXISLAT_ERROR < minLat || axisLat- Rectangle.AXISLAT_ERROR > maxLat)) {\n        if (SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, minLat, minLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, minLat, maxLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, maxLat, minLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, maxLat, maxLon) > distanceQuery.radiusMeters) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n","sourceOld":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      // bounding box check\n      if (maxLat < GeoPointDistanceQueryImpl.this.minLat ||\n          maxLon < GeoPointDistanceQueryImpl.this.minLon ||\n          minLat > GeoPointDistanceQueryImpl.this.maxLat ||\n          minLon > GeoPointDistanceQueryImpl.this.maxLon) {\n        return false;\n      } else if ((centerLon < minLon || centerLon > maxLon) && (axisLat+GeoRect.AXISLAT_ERROR < minLat || axisLat-GeoRect.AXISLAT_ERROR > maxLat)) {\n        if (SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, minLat, minLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, minLat, maxLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, maxLat, minLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, maxLat, maxLon) > distanceQuery.radiusMeters) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a62e86d7b9cc6dec3c09f771166aa2393fd95c99","date":1466437108,"type":4,"author":"Nicholas Knize","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl.GeoPointRadiusCellComparator#cellCrosses(double,double,double,double).mjava","sourceNew":null,"sourceOld":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      // bounding box check\n      if (maxLat < GeoPointDistanceQueryImpl.this.minLat ||\n          maxLon < GeoPointDistanceQueryImpl.this.minLon ||\n          minLat > GeoPointDistanceQueryImpl.this.maxLat ||\n          minLon > GeoPointDistanceQueryImpl.this.maxLon) {\n        return false;\n      } else if ((centerLon < minLon || centerLon > maxLon) && (axisLat+ Rectangle.AXISLAT_ERROR < minLat || axisLat- Rectangle.AXISLAT_ERROR > maxLat)) {\n        if (SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, minLat, minLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, minLat, maxLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, maxLat, minLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, maxLat, maxLon) > distanceQuery.radiusMeters) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6aaba221b22442bdf0ef28770c25fe259dfb3f55","date":1466496193,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl.GeoPointRadiusCellComparator#cellCrosses(double,double,double,double).mjava","sourceNew":null,"sourceOld":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      // bounding box check\n      if (maxLat < GeoPointDistanceQueryImpl.this.minLat ||\n          maxLon < GeoPointDistanceQueryImpl.this.minLon ||\n          minLat > GeoPointDistanceQueryImpl.this.maxLat ||\n          minLon > GeoPointDistanceQueryImpl.this.maxLon) {\n        return false;\n      } else if ((centerLon < minLon || centerLon > maxLon) && (axisLat+ Rectangle.AXISLAT_ERROR < minLat || axisLat- Rectangle.AXISLAT_ERROR > maxLat)) {\n        if (SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, minLat, minLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, minLat, maxLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, maxLat, minLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, maxLat, maxLon) > distanceQuery.radiusMeters) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/geopoint/search/GeoPointDistanceQueryImpl.GeoPointRadiusCellComparator#cellCrosses(double,double,double,double).mjava","sourceNew":null,"sourceOld":"    @Override\n    protected boolean cellCrosses(final double minLat, final double maxLat, final double minLon, final double maxLon) {\n      // bounding box check\n      if (maxLat < GeoPointDistanceQueryImpl.this.minLat ||\n          maxLon < GeoPointDistanceQueryImpl.this.minLon ||\n          minLat > GeoPointDistanceQueryImpl.this.maxLat ||\n          minLon > GeoPointDistanceQueryImpl.this.maxLon) {\n        return false;\n      } else if ((centerLon < minLon || centerLon > maxLon) && (axisLat+ Rectangle.AXISLAT_ERROR < minLat || axisLat- Rectangle.AXISLAT_ERROR > maxLat)) {\n        if (SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, minLat, minLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, minLat, maxLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, maxLat, minLon) > distanceQuery.radiusMeters &&\n            SloppyMath.haversinMeters(distanceQuery.centerLat, centerLon, maxLat, maxLon) > distanceQuery.radiusMeters) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a62e86d7b9cc6dec3c09f771166aa2393fd95c99":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe"],"ec996bf2daff09d61a876319e8fae4aebbea58e3":["8a093d23e938d132b81b5f2de3d6b168afe3608e"],"6aaba221b22442bdf0ef28770c25fe259dfb3f55":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe","a62e86d7b9cc6dec3c09f771166aa2393fd95c99"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe":["43ddc1b7a872fafd838d3f3129984ca661e29b36"],"43ddc1b7a872fafd838d3f3129984ca661e29b36":["86fcb04ff2d63aad8754270211d5fc084d3526b9"],"8a093d23e938d132b81b5f2de3d6b168afe3608e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cb4875e9db9b77346c36b7fe0d4b8759a1e095d3":["ec996bf2daff09d61a876319e8fae4aebbea58e3"],"86fcb04ff2d63aad8754270211d5fc084d3526b9":["cb4875e9db9b77346c36b7fe0d4b8759a1e095d3"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe","6aaba221b22442bdf0ef28770c25fe259dfb3f55"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6aaba221b22442bdf0ef28770c25fe259dfb3f55"]},"commit2Childs":{"a62e86d7b9cc6dec3c09f771166aa2393fd95c99":["6aaba221b22442bdf0ef28770c25fe259dfb3f55"],"ec996bf2daff09d61a876319e8fae4aebbea58e3":["cb4875e9db9b77346c36b7fe0d4b8759a1e095d3"],"6aaba221b22442bdf0ef28770c25fe259dfb3f55":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8a093d23e938d132b81b5f2de3d6b168afe3608e"],"546f71f5b1e19230d6e7e59f117d08dbcf59fbfe":["a62e86d7b9cc6dec3c09f771166aa2393fd95c99","6aaba221b22442bdf0ef28770c25fe259dfb3f55","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"8a093d23e938d132b81b5f2de3d6b168afe3608e":["ec996bf2daff09d61a876319e8fae4aebbea58e3"],"43ddc1b7a872fafd838d3f3129984ca661e29b36":["546f71f5b1e19230d6e7e59f117d08dbcf59fbfe"],"cb4875e9db9b77346c36b7fe0d4b8759a1e095d3":["86fcb04ff2d63aad8754270211d5fc084d3526b9"],"86fcb04ff2d63aad8754270211d5fc084d3526b9":["43ddc1b7a872fafd838d3f3129984ca661e29b36"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}