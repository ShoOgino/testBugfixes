{"path":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/fetcher/FetcherTask#getBytesRead().mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/fetcher/FetcherTask#getBytesRead().mjava","pathOld":"/dev/null","sourceNew":"    /*\n     *  public void notifyOpened(ObservableInputStream in, long timeElapsed)\n     *  {\n     *  }\n     *  public void notifyClosed(ObservableInputStream in, long timeElapsed)\n     *  {\n     *  }\n     *  public void notifyRead(ObservableInputStream in, long timeElapsed, int nrRead, int totalRead)\n     *  {\n     *  if(totalRead / ((double)timeElapsed) < 0.3) // weniger als 300 bytes/s\n     *  {\n     *  System.out.println(\"Task \" + this.taskNr + \" stalled at pos \" + totalRead + \" with \" + totalRead / (timeElapsed / 1000.0) + \" bytes/s\");\n     *  }\n     *  }\n     *  public void notifyFinished(ObservableInputStream in, long timeElapsed, int totalRead)\n     *  {\n     *  /System.out.println(\"Task \" + this.taskNr + \" finished (\" + totalRead + \" bytes in \" + timeElapsed + \" ms with \" + totalRead / (timeElapsed / 1000.0) + \" bytes/s)\");\n     *  }\n     */\n    public long getBytesRead()\n    {\n        return bytesRead;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"35d2a11130c55c5aebafaa8a680a571684104914","date":1035298963,"type":3,"author":"cmarschner","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/fetcher/FetcherTask#getBytesRead().mjava","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/fetcher/FetcherTask#getBytesRead().mjava","sourceNew":"    /*\n     *  public void notifyOpened(ObservableInputStream in, long timeElapsed)\n     *  {\n     *  }\n     *  public void notifyClosed(ObservableInputStream in, long timeElapsed)\n     *  {\n     *  }\n     *  public void notifyRead(ObservableInputStream in, long timeElapsed, int nrRead, int totalRead)\n     *  {\n     *  if(totalRead / ((double)timeElapsed) < 0.3) // weniger als 300 bytes/s\n     *  {\n     *  System.out.println(\"Task \" + this.taskNr + \" stalled at pos \" + totalRead + \" with \" + totalRead / (timeElapsed / 1000.0) + \" bytes/s\");\n     *  }\n     *  }\n     *  public void notifyFinished(ObservableInputStream in, long timeElapsed, int totalRead)\n     *  {\n     *  /System.out.println(\"Task \" + this.taskNr + \" finished (\" + totalRead + \" bytes in \" + timeElapsed + \" ms with \" + totalRead / (timeElapsed / 1000.0) + \" bytes/s)\");\n     *  }\n     */\n    /**\n     * Gets the bytesRead attribute of the FetcherTask object\n     *\n     * @return   The bytesRead value\n     */\n    public long getBytesRead()\n    {\n        return bytesRead;\n    }\n\n","sourceOld":"    /*\n     *  public void notifyOpened(ObservableInputStream in, long timeElapsed)\n     *  {\n     *  }\n     *  public void notifyClosed(ObservableInputStream in, long timeElapsed)\n     *  {\n     *  }\n     *  public void notifyRead(ObservableInputStream in, long timeElapsed, int nrRead, int totalRead)\n     *  {\n     *  if(totalRead / ((double)timeElapsed) < 0.3) // weniger als 300 bytes/s\n     *  {\n     *  System.out.println(\"Task \" + this.taskNr + \" stalled at pos \" + totalRead + \" with \" + totalRead / (timeElapsed / 1000.0) + \" bytes/s\");\n     *  }\n     *  }\n     *  public void notifyFinished(ObservableInputStream in, long timeElapsed, int totalRead)\n     *  {\n     *  /System.out.println(\"Task \" + this.taskNr + \" finished (\" + totalRead + \" bytes in \" + timeElapsed + \" ms with \" + totalRead / (timeElapsed / 1000.0) + \" bytes/s)\");\n     *  }\n     */\n    public long getBytesRead()\n    {\n        return bytesRead;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/fetcher/FetcherTask#getBytesRead().mjava","sourceNew":null,"sourceOld":"    /*\n     *  public void notifyOpened(ObservableInputStream in, long timeElapsed)\n     *  {\n     *  }\n     *  public void notifyClosed(ObservableInputStream in, long timeElapsed)\n     *  {\n     *  }\n     *  public void notifyRead(ObservableInputStream in, long timeElapsed, int nrRead, int totalRead)\n     *  {\n     *  if(totalRead / ((double)timeElapsed) < 0.3) // weniger als 300 bytes/s\n     *  {\n     *  System.out.println(\"Task \" + this.taskNr + \" stalled at pos \" + totalRead + \" with \" + totalRead / (timeElapsed / 1000.0) + \" bytes/s\");\n     *  }\n     *  }\n     *  public void notifyFinished(ObservableInputStream in, long timeElapsed, int totalRead)\n     *  {\n     *  /System.out.println(\"Task \" + this.taskNr + \" finished (\" + totalRead + \" bytes in \" + timeElapsed + \" ms with \" + totalRead / (timeElapsed / 1000.0) + \" bytes/s)\");\n     *  }\n     */\n    /**\n     * Gets the bytesRead attribute of the FetcherTask object\n     *\n     * @return   The bytesRead value\n     */\n    public long getBytesRead()\n    {\n        return bytesRead;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["35d2a11130c55c5aebafaa8a680a571684104914"],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"35d2a11130c55c5aebafaa8a680a571684104914":["05d36e0b328ec96237035fbcca240e73631396e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05d36e0b328ec96237035fbcca240e73631396e5":["35d2a11130c55c5aebafaa8a680a571684104914"],"35d2a11130c55c5aebafaa8a680a571684104914":["afc16d717d9ed1a8e45371668ca6de674164d624"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}