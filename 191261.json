{"path":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#doBody(int,Directory[]).mjava","commits":[{"id":"c4ff8864209d2e972cb4393600c26082f9a6533d","date":1239297466,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#doBody(int,Directory[]).mjava","pathOld":"/dev/null","sourceNew":"    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch (j % 4) {\n        case 0:\n          mainWriter.addIndexes(dirs);\n          break;\n        case 1:\n          mainWriter.addIndexesNoOptimize(dirs);\n          numAddIndexesNoOptimize.incrementAndGet();\n          break;\n        case 2:\n          mainWriter.addIndexes(readers);\n          break;\n        case 3:\n          mainWriter.commit();\n      }\n      count.addAndGet(dirs.length*NUM_INIT_DOCS);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7","date":1255555265,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#doBody(int,Directory[]).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#doBody(int,Directory[]).mjava","sourceNew":"    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch (j % 4) {\n        case 0:\n          mainWriter.addIndexesNoOptimize(dirs);\n          mainWriter.optimize();\n          break;\n        case 1:\n          mainWriter.addIndexesNoOptimize(dirs);\n          numAddIndexesNoOptimize.incrementAndGet();\n          break;\n        case 2:\n          mainWriter.addIndexes(readers);\n          break;\n        case 3:\n          mainWriter.commit();\n      }\n      count.addAndGet(dirs.length*NUM_INIT_DOCS);\n    }\n\n","sourceOld":"    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch (j % 4) {\n        case 0:\n          mainWriter.addIndexes(dirs);\n          break;\n        case 1:\n          mainWriter.addIndexesNoOptimize(dirs);\n          numAddIndexesNoOptimize.incrementAndGet();\n          break;\n        case 2:\n          mainWriter.addIndexes(readers);\n          break;\n        case 3:\n          mainWriter.commit();\n      }\n      count.addAndGet(dirs.length*NUM_INIT_DOCS);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#doBody(int,Directory[]).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#doBody(int,Directory[]).mjava","sourceNew":"    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch (j % 4) {\n        case 0:\n          mainWriter.addIndexesNoOptimize(dirs);\n          mainWriter.optimize();\n          break;\n        case 1:\n          mainWriter.addIndexesNoOptimize(dirs);\n          numAddIndexesNoOptimize.incrementAndGet();\n          break;\n        case 2:\n          mainWriter.addIndexes(readers);\n          break;\n        case 3:\n          mainWriter.commit();\n      }\n      count.addAndGet(dirs.length*NUM_INIT_DOCS);\n    }\n\n","sourceOld":"    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch (j % 4) {\n        case 0:\n          mainWriter.addIndexesNoOptimize(dirs);\n          mainWriter.optimize();\n          break;\n        case 1:\n          mainWriter.addIndexesNoOptimize(dirs);\n          numAddIndexesNoOptimize.incrementAndGet();\n          break;\n        case 2:\n          mainWriter.addIndexes(readers);\n          break;\n        case 3:\n          mainWriter.commit();\n      }\n      count.addAndGet(dirs.length*NUM_INIT_DOCS);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c4ff8864209d2e972cb4393600c26082f9a6533d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7":["c4ff8864209d2e972cb4393600c26082f9a6533d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c4ff8864209d2e972cb4393600c26082f9a6533d"],"c4ff8864209d2e972cb4393600c26082f9a6533d":["560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7"],"560b3a3bb8efcae105d6ae5fbee0f8b03c7decc7":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}