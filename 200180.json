{"path":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.ToChildBlockJoinWeight#scorer(LeafReaderContext).mjava","commits":[{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.ToChildBlockJoinWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.ToChildBlockJoinWeight#scorer(LeafReaderContext,Bits).mjava","sourceNew":"    // NOTE: acceptDocs applies (and is checked) only in the\n    // child document space\n    @Override\n    public Scorer scorer(LeafReaderContext readerContext) throws IOException {\n\n      final Scorer parentScorer = parentWeight.scorer(readerContext);\n\n      if (parentScorer == null) {\n        // No matches\n        return null;\n      }\n\n      // NOTE: this doesn't take acceptDocs into account, the responsibility\n      // to not match deleted docs is on the scorer\n      final BitDocIdSet parents = parentsFilter.getDocIdSet(readerContext);\n      if (parents == null) {\n        // No parents\n        return null;\n      }\n\n      return new ToChildBlockJoinScorer(this, parentScorer, parents.bits(), doScores);\n    }\n\n","sourceOld":"    // NOTE: acceptDocs applies (and is checked) only in the\n    // child document space\n    @Override\n    public Scorer scorer(LeafReaderContext readerContext, Bits acceptDocs) throws IOException {\n\n      final Scorer parentScorer = parentWeight.scorer(readerContext, null);\n\n      if (parentScorer == null) {\n        // No matches\n        return null;\n      }\n\n      // NOTE: this doesn't take acceptDocs into account, the responsibility\n      // to not match deleted docs is on the scorer\n      final BitDocIdSet parents = parentsFilter.getDocIdSet(readerContext);\n      if (parents == null) {\n        // No parents\n        return null;\n      }\n\n      return new ToChildBlockJoinScorer(this, parentScorer, parents.bits(), doScores, acceptDocs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b3915945926c0bf7def01b0c504977709d3aed3","date":1436197708,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.ToChildBlockJoinWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.ToChildBlockJoinWeight#scorer(LeafReaderContext).mjava","sourceNew":"    // NOTE: acceptDocs applies (and is checked) only in the\n    // child document space\n    @Override\n    public Scorer scorer(LeafReaderContext readerContext) throws IOException {\n\n      final Scorer parentScorer = parentWeight.scorer(readerContext);\n\n      if (parentScorer == null) {\n        // No matches\n        return null;\n      }\n\n      // NOTE: this doesn't take acceptDocs into account, the responsibility\n      // to not match deleted docs is on the scorer\n      final BitSet parents = parentsFilter.getBitSet(readerContext);\n      if (parents == null) {\n        // No parents\n        return null;\n      }\n\n      return new ToChildBlockJoinScorer(this, parentScorer, parents, doScores);\n    }\n\n","sourceOld":"    // NOTE: acceptDocs applies (and is checked) only in the\n    // child document space\n    @Override\n    public Scorer scorer(LeafReaderContext readerContext) throws IOException {\n\n      final Scorer parentScorer = parentWeight.scorer(readerContext);\n\n      if (parentScorer == null) {\n        // No matches\n        return null;\n      }\n\n      // NOTE: this doesn't take acceptDocs into account, the responsibility\n      // to not match deleted docs is on the scorer\n      final BitDocIdSet parents = parentsFilter.getDocIdSet(readerContext);\n      if (parents == null) {\n        // No parents\n        return null;\n      }\n\n      return new ToChildBlockJoinScorer(this, parentScorer, parents.bits(), doScores);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96ab132e6f739772060bedf1719a057e97d5b759","date":1468422264,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.ToChildBlockJoinWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.ToChildBlockJoinWeight#scorer(LeafReaderContext).mjava","sourceNew":"    // NOTE: acceptDocs applies (and is checked) only in the\n    // child document space\n    @Override\n    public Scorer scorer(LeafReaderContext readerContext) throws IOException {\n\n      final Scorer parentScorer = in.scorer(readerContext);\n\n      if (parentScorer == null) {\n        // No matches\n        return null;\n      }\n\n      // NOTE: this doesn't take acceptDocs into account, the responsibility\n      // to not match deleted docs is on the scorer\n      final BitSet parents = parentsFilter.getBitSet(readerContext);\n      if (parents == null) {\n        // No parents\n        return null;\n      }\n\n      return new ToChildBlockJoinScorer(this, parentScorer, parents, doScores);\n    }\n\n","sourceOld":"    // NOTE: acceptDocs applies (and is checked) only in the\n    // child document space\n    @Override\n    public Scorer scorer(LeafReaderContext readerContext) throws IOException {\n\n      final Scorer parentScorer = parentWeight.scorer(readerContext);\n\n      if (parentScorer == null) {\n        // No matches\n        return null;\n      }\n\n      // NOTE: this doesn't take acceptDocs into account, the responsibility\n      // to not match deleted docs is on the scorer\n      final BitSet parents = parentsFilter.getBitSet(readerContext);\n      if (parents == null) {\n        // No parents\n        return null;\n      }\n\n      return new ToChildBlockJoinScorer(this, parentScorer, parents, doScores);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.ToChildBlockJoinWeight#scorer(LeafReaderContext).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.ToChildBlockJoinWeight#scorer(LeafReaderContext).mjava","sourceNew":"    // NOTE: acceptDocs applies (and is checked) only in the\n    // child document space\n    @Override\n    public Scorer scorer(LeafReaderContext readerContext) throws IOException {\n\n      final Scorer parentScorer = in.scorer(readerContext);\n\n      if (parentScorer == null) {\n        // No matches\n        return null;\n      }\n\n      // NOTE: this doesn't take acceptDocs into account, the responsibility\n      // to not match deleted docs is on the scorer\n      final BitSet parents = parentsFilter.getBitSet(readerContext);\n      if (parents == null) {\n        // No parents\n        return null;\n      }\n\n      return new ToChildBlockJoinScorer(this, parentScorer, parents, doScores);\n    }\n\n","sourceOld":"    // NOTE: acceptDocs applies (and is checked) only in the\n    // child document space\n    @Override\n    public Scorer scorer(LeafReaderContext readerContext) throws IOException {\n\n      final Scorer parentScorer = parentWeight.scorer(readerContext);\n\n      if (parentScorer == null) {\n        // No matches\n        return null;\n      }\n\n      // NOTE: this doesn't take acceptDocs into account, the responsibility\n      // to not match deleted docs is on the scorer\n      final BitSet parents = parentsFilter.getBitSet(readerContext);\n      if (parents == null) {\n        // No parents\n        return null;\n      }\n\n      return new ToChildBlockJoinScorer(this, parentScorer, parents, doScores);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"96ab132e6f739772060bedf1719a057e97d5b759":["4b3915945926c0bf7def01b0c504977709d3aed3"],"4b3915945926c0bf7def01b0c504977709d3aed3":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["4b3915945926c0bf7def01b0c504977709d3aed3","96ab132e6f739772060bedf1719a057e97d5b759"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["96ab132e6f739772060bedf1719a057e97d5b759"]},"commit2Childs":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["4b3915945926c0bf7def01b0c504977709d3aed3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"96ab132e6f739772060bedf1719a057e97d5b759":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4b3915945926c0bf7def01b0c504977709d3aed3":["96ab132e6f739772060bedf1719a057e97d5b759","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}