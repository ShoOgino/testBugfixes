{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity.BM25Scorer#explainTF(Explanation,long).mjava","commits":[{"id":"68d6cb7f0f019661a784bd0e5a21e85b5f812af6","date":1515075216,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity.BM25Scorer#explainTF(Explanation,long).mjava","pathOld":"/dev/null","sourceNew":"    private Explanation explainTF(Explanation freq, long norm) throws IOException {\n      List<Explanation> subs = new ArrayList<>();\n      subs.add(freq);\n      subs.add(Explanation.match(k1, \"k1, term saturation parameter\"));\n      float doclen = LENGTH_TABLE[((byte) norm) & 0xff];\n      subs.add(Explanation.match(b, \"b, length normalization parameter\"));\n      if ((norm & 0xFF) > 39) {\n        subs.add(Explanation.match(doclen, \"dl, length of field (approximate)\"));\n      } else {\n        subs.add(Explanation.match(doclen, \"dl, length of field\"));\n      }\n      subs.add(Explanation.match(avgdl, \"avgdl, average length of field\"));\n      float normValue = k1 * ((1 - b) + b * doclen / avgdl);\n      return Explanation.match(\n          (float) (freq.getValue().floatValue() / (freq.getValue().floatValue() + (double) normValue)),\n          \"tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:\", subs);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"edb2fe416114ad548e5a8a3e4326e9ef51d2ef48","date":1515667776,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity.BM25Scorer#explainTF(Explanation,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity.BM25Scorer#explainTF(Explanation,long).mjava","sourceNew":"    private Explanation explainTF(Explanation freq, long norm) {\n      List<Explanation> subs = new ArrayList<>();\n      subs.add(freq);\n      subs.add(Explanation.match(k1, \"k1, term saturation parameter\"));\n      float doclen = LENGTH_TABLE[((byte) norm) & 0xff];\n      subs.add(Explanation.match(b, \"b, length normalization parameter\"));\n      if ((norm & 0xFF) > 39) {\n        subs.add(Explanation.match(doclen, \"dl, length of field (approximate)\"));\n      } else {\n        subs.add(Explanation.match(doclen, \"dl, length of field\"));\n      }\n      subs.add(Explanation.match(avgdl, \"avgdl, average length of field\"));\n      float normValue = k1 * ((1 - b) + b * doclen / avgdl);\n      return Explanation.match(\n          (float) (freq.getValue().floatValue() / (freq.getValue().floatValue() + (double) normValue)),\n          \"tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:\", subs);\n    }\n\n","sourceOld":"    private Explanation explainTF(Explanation freq, long norm) throws IOException {\n      List<Explanation> subs = new ArrayList<>();\n      subs.add(freq);\n      subs.add(Explanation.match(k1, \"k1, term saturation parameter\"));\n      float doclen = LENGTH_TABLE[((byte) norm) & 0xff];\n      subs.add(Explanation.match(b, \"b, length normalization parameter\"));\n      if ((norm & 0xFF) > 39) {\n        subs.add(Explanation.match(doclen, \"dl, length of field (approximate)\"));\n      } else {\n        subs.add(Explanation.match(doclen, \"dl, length of field\"));\n      }\n      subs.add(Explanation.match(avgdl, \"avgdl, average length of field\"));\n      float normValue = k1 * ((1 - b) + b * doclen / avgdl);\n      return Explanation.match(\n          (float) (freq.getValue().floatValue() / (freq.getValue().floatValue() + (double) normValue)),\n          \"tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:\", subs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity.BM25Scorer#explainTF(Explanation,long).mjava","pathOld":"/dev/null","sourceNew":"    private Explanation explainTF(Explanation freq, long norm) {\n      List<Explanation> subs = new ArrayList<>();\n      subs.add(freq);\n      subs.add(Explanation.match(k1, \"k1, term saturation parameter\"));\n      float doclen = LENGTH_TABLE[((byte) norm) & 0xff];\n      subs.add(Explanation.match(b, \"b, length normalization parameter\"));\n      if ((norm & 0xFF) > 39) {\n        subs.add(Explanation.match(doclen, \"dl, length of field (approximate)\"));\n      } else {\n        subs.add(Explanation.match(doclen, \"dl, length of field\"));\n      }\n      subs.add(Explanation.match(avgdl, \"avgdl, average length of field\"));\n      float normValue = k1 * ((1 - b) + b * doclen / avgdl);\n      return Explanation.match(\n          (float) (freq.getValue().floatValue() / (freq.getValue().floatValue() + (double) normValue)),\n          \"tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:\", subs);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2ffc90b2c3491ebc56d78355c6506bac08ab841","date":1575914358,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity.BM25Scorer#explainTF(Explanation,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity.BM25Scorer#explainTF(Explanation,long).mjava","sourceNew":"    private Explanation explainTF(Explanation freq, long norm) {\n      List<Explanation> subs = new ArrayList<>();\n      subs.add(freq);\n      subs.add(Explanation.match(k1, \"k1, term saturation parameter\"));\n      float doclen = LENGTH_TABLE[((byte) norm) & 0xff];\n      subs.add(Explanation.match(b, \"b, length normalization parameter\"));\n      if ((norm & 0xFF) > 39) {\n        subs.add(Explanation.match(doclen, \"dl, length of field (approximate)\"));\n      } else {\n        subs.add(Explanation.match(doclen, \"dl, length of field\"));\n      }\n      subs.add(Explanation.match(avgdl, \"avgdl, average length of field\"));\n      float normInverse = 1f / (k1 * ((1 - b) + b * doclen / avgdl));\n      return Explanation.match(\n          1f - 1f / (1 + freq.getValue().floatValue() * normInverse),\n          \"tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:\", subs);\n    }\n\n","sourceOld":"    private Explanation explainTF(Explanation freq, long norm) {\n      List<Explanation> subs = new ArrayList<>();\n      subs.add(freq);\n      subs.add(Explanation.match(k1, \"k1, term saturation parameter\"));\n      float doclen = LENGTH_TABLE[((byte) norm) & 0xff];\n      subs.add(Explanation.match(b, \"b, length normalization parameter\"));\n      if ((norm & 0xFF) > 39) {\n        subs.add(Explanation.match(doclen, \"dl, length of field (approximate)\"));\n      } else {\n        subs.add(Explanation.match(doclen, \"dl, length of field\"));\n      }\n      subs.add(Explanation.match(avgdl, \"avgdl, average length of field\"));\n      float normValue = k1 * ((1 - b) + b * doclen / avgdl);\n      return Explanation.match(\n          (float) (freq.getValue().floatValue() / (freq.getValue().floatValue() + (double) normValue)),\n          \"tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:\", subs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7107555998ea86d6f61e2ad770687d674fa8e012","date":1575927428,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity.BM25Scorer#explainTF(Explanation,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity.BM25Scorer#explainTF(Explanation,long).mjava","sourceNew":"    private Explanation explainTF(Explanation freq, long norm) {\n      List<Explanation> subs = new ArrayList<>();\n      subs.add(freq);\n      subs.add(Explanation.match(k1, \"k1, term saturation parameter\"));\n      float doclen = LENGTH_TABLE[((byte) norm) & 0xff];\n      subs.add(Explanation.match(b, \"b, length normalization parameter\"));\n      if ((norm & 0xFF) > 39) {\n        subs.add(Explanation.match(doclen, \"dl, length of field (approximate)\"));\n      } else {\n        subs.add(Explanation.match(doclen, \"dl, length of field\"));\n      }\n      subs.add(Explanation.match(avgdl, \"avgdl, average length of field\"));\n      float normInverse = 1f / (k1 * ((1 - b) + b * doclen / avgdl));\n      return Explanation.match(\n          1f - 1f / (1 + freq.getValue().floatValue() * normInverse),\n          \"tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:\", subs);\n    }\n\n","sourceOld":"    private Explanation explainTF(Explanation freq, long norm) {\n      List<Explanation> subs = new ArrayList<>();\n      subs.add(freq);\n      subs.add(Explanation.match(k1, \"k1, term saturation parameter\"));\n      float doclen = LENGTH_TABLE[((byte) norm) & 0xff];\n      subs.add(Explanation.match(b, \"b, length normalization parameter\"));\n      if ((norm & 0xFF) > 39) {\n        subs.add(Explanation.match(doclen, \"dl, length of field (approximate)\"));\n      } else {\n        subs.add(Explanation.match(doclen, \"dl, length of field\"));\n      }\n      subs.add(Explanation.match(avgdl, \"avgdl, average length of field\"));\n      float normValue = k1 * ((1 - b) + b * doclen / avgdl);\n      return Explanation.match(\n          (float) (freq.getValue().floatValue() / (freq.getValue().floatValue() + (double) normValue)),\n          \"tf, computed as freq / (freq + k1 * (1 - b + b * dl / avgdl)) from:\", subs);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","edb2fe416114ad548e5a8a3e4326e9ef51d2ef48"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"edb2fe416114ad548e5a8a3e4326e9ef51d2ef48":["68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"7107555998ea86d6f61e2ad770687d674fa8e012":["b94236357aaa22b76c10629851fe4e376e0cea82","d2ffc90b2c3491ebc56d78355c6506bac08ab841"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2ffc90b2c3491ebc56d78355c6506bac08ab841":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2ffc90b2c3491ebc56d78355c6506bac08ab841"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["7107555998ea86d6f61e2ad770687d674fa8e012","d2ffc90b2c3491ebc56d78355c6506bac08ab841"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["edb2fe416114ad548e5a8a3e4326e9ef51d2ef48"],"edb2fe416114ad548e5a8a3e4326e9ef51d2ef48":["b94236357aaa22b76c10629851fe4e376e0cea82"],"7107555998ea86d6f61e2ad770687d674fa8e012":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"d2ffc90b2c3491ebc56d78355c6506bac08ab841":["7107555998ea86d6f61e2ad770687d674fa8e012","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7107555998ea86d6f61e2ad770687d674fa8e012","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}