{"path":"solr/core/src/java/org/apache/solr/search/join/FiltersQParser#addFilters(BooleanQuery.Builder,Map[Query,Occur]).mjava","commits":[{"id":"5f7c69c29432074b666568db5e84001acd540dee","date":1520745905,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/FiltersQParser#addFilters(BooleanQuery.Builder,Map[Query,Occur]).mjava","pathOld":"/dev/null","sourceNew":"  /** @return number of added clauses */\n  protected int addFilters(BooleanQuery.Builder builder, Map<Query,Occur> clauses) throws SyntaxError {\n    Set<Query> filters = new HashSet<>();\n    for (Map.Entry<Query, Occur> clause: clauses.entrySet()) {\n      if (clause.getValue() == Occur.FILTER) {\n        filters.add(clause.getKey());\n      }\n    }\n    if (!filters.isEmpty()) {\n      try {\n        final SolrConstantScoreQuery intersQuery = new FiltersQuery(req, filters);\n        builder.add( intersQuery, Occur.FILTER);\n      } catch (IOException e) {\n        throw new SyntaxError(\"Exception occurs while parsing \" + stringIncludingLocalParams, e);\n      }\n    }\n    return filters.size();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5e5cbc96e6641be56fc04e988748a504d8d91b5e","date":1524724835,"type":3,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/FiltersQParser#addFilters(BooleanQuery.Builder,Map[Query,Occur]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/FiltersQParser#addFilters(BooleanQuery.Builder,Map[Query,Occur]).mjava","sourceNew":"  /** @return number of added clauses */\n  protected int addFilters(BooleanQuery.Builder builder, Map<Query,Occur> clauses) throws SyntaxError {\n    int count=0;\n    for (Map.Entry<Query, Occur> clause: clauses.entrySet()) {\n      if (clause.getValue() == Occur.FILTER) {\n        builder.add( clause.getKey(), Occur.FILTER);\n        count++;\n      }\n    }\n    return count;\n  }\n\n","sourceOld":"  /** @return number of added clauses */\n  protected int addFilters(BooleanQuery.Builder builder, Map<Query,Occur> clauses) throws SyntaxError {\n    Set<Query> filters = new HashSet<>();\n    for (Map.Entry<Query, Occur> clause: clauses.entrySet()) {\n      if (clause.getValue() == Occur.FILTER) {\n        filters.add(clause.getKey());\n      }\n    }\n    if (!filters.isEmpty()) {\n      try {\n        final SolrConstantScoreQuery intersQuery = new FiltersQuery(req, filters);\n        builder.add( intersQuery, Occur.FILTER);\n      } catch (IOException e) {\n        throw new SyntaxError(\"Exception occurs while parsing \" + stringIncludingLocalParams, e);\n      }\n    }\n    return filters.size();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"960f089602da7f0df48fb0e23de1ecbc791b95f0","date":1524725963,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/FiltersQParser#addFilters(BooleanQuery.Builder,Map[Query,Occur]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/FiltersQParser#addFilters(BooleanQuery.Builder,Map[Query,Occur]).mjava","sourceNew":"  /** @return number of added clauses */\n  protected int addFilters(BooleanQuery.Builder builder, Map<Query,Occur> clauses) throws SyntaxError {\n    int count=0;\n    for (Map.Entry<Query, Occur> clause: clauses.entrySet()) {\n      if (clause.getValue() == Occur.FILTER) {\n        builder.add( clause.getKey(), Occur.FILTER);\n        count++;\n      }\n    }\n    return count;\n  }\n\n","sourceOld":"  /** @return number of added clauses */\n  protected int addFilters(BooleanQuery.Builder builder, Map<Query,Occur> clauses) throws SyntaxError {\n    Set<Query> filters = new HashSet<>();\n    for (Map.Entry<Query, Occur> clause: clauses.entrySet()) {\n      if (clause.getValue() == Occur.FILTER) {\n        filters.add(clause.getKey());\n      }\n    }\n    if (!filters.isEmpty()) {\n      try {\n        final SolrConstantScoreQuery intersQuery = new FiltersQuery(req, filters);\n        builder.add( intersQuery, Occur.FILTER);\n      } catch (IOException e) {\n        throw new SyntaxError(\"Exception occurs while parsing \" + stringIncludingLocalParams, e);\n      }\n    }\n    return filters.size();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b2cebce8aded9fff0c315c32efe811679c29d47","date":1593532507,"type":4,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/join/FiltersQParser#addFilters(BooleanQuery.Builder,Map[Query,Occur]).mjava","sourceNew":null,"sourceOld":"  /** @return number of added clauses */\n  protected int addFilters(BooleanQuery.Builder builder, Map<Query,Occur> clauses) throws SyntaxError {\n    int count=0;\n    for (Map.Entry<Query, Occur> clause: clauses.entrySet()) {\n      if (clause.getValue() == Occur.FILTER) {\n        builder.add( clause.getKey(), Occur.FILTER);\n        count++;\n      }\n    }\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5b2cebce8aded9fff0c315c32efe811679c29d47":["960f089602da7f0df48fb0e23de1ecbc791b95f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"960f089602da7f0df48fb0e23de1ecbc791b95f0":["5f7c69c29432074b666568db5e84001acd540dee","5e5cbc96e6641be56fc04e988748a504d8d91b5e"],"5f7c69c29432074b666568db5e84001acd540dee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5e5cbc96e6641be56fc04e988748a504d8d91b5e":["5f7c69c29432074b666568db5e84001acd540dee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5b2cebce8aded9fff0c315c32efe811679c29d47"]},"commit2Childs":{"5b2cebce8aded9fff0c315c32efe811679c29d47":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5f7c69c29432074b666568db5e84001acd540dee"],"960f089602da7f0df48fb0e23de1ecbc791b95f0":["5b2cebce8aded9fff0c315c32efe811679c29d47"],"5f7c69c29432074b666568db5e84001acd540dee":["960f089602da7f0df48fb0e23de1ecbc791b95f0","5e5cbc96e6641be56fc04e988748a504d8d91b5e"],"5e5cbc96e6641be56fc04e988748a504d8d91b5e":["960f089602da7f0df48fb0e23de1ecbc791b95f0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}