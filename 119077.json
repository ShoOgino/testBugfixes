{"path":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBoostOmitNorms().mjava","commits":[{"id":"fd6ef1120d3887d6a8783b5506c8fea3ddf707f0","date":1331744509,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBoostOmitNorms().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Its not ok to boost a field if it omits norms\n   */\n  public void testBoostOmitNorms() throws Exception {\n    XmlDoc xml = new XmlDoc();\n    xml.xml = \"<doc>\"\n        + \"<field name=\\\"id\\\">1</field>\"\n        + \"<field name=\\\"title_stringNoNorms\\\" boost=\\\"3.0\\\">mytitle</field>\"\n        + \"</doc>\";\n    try {\n      assertNull(h.validateUpdate(add(xml, new String[0])));\n      fail(\"didn't get expected exception for boosting omit norms field\");\n    } catch (SolrException expected) {\n      // expected exception\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d4148af0b1a0b6991d37fc16a075d88fc63068f9"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe19dca4e4bde2b504126fca1b1d46bbdaf6c3d8","date":1333067674,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBoostOmitNorms().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBoostOmitNorms().mjava","sourceNew":"  /**\n   * Its not ok to boost a field if it omits norms\n   */\n  public void testBoostOmitNorms() throws Exception {\n    XmlDoc xml = new XmlDoc();\n    xml.xml = \"<doc>\"\n        + \"<field name=\\\"id\\\">ignore_exception</field>\"\n        + \"<field name=\\\"title_stringNoNorms\\\" boost=\\\"3.0\\\">mytitle</field>\"\n        + \"</doc>\";\n    try {\n      assertNull(h.validateUpdate(add(xml, new String[0])));\n      fail(\"didn't get expected exception for boosting omit norms field\");\n    } catch (SolrException expected) {\n      // expected exception\n    }\n  }\n\n","sourceOld":"  /**\n   * Its not ok to boost a field if it omits norms\n   */\n  public void testBoostOmitNorms() throws Exception {\n    XmlDoc xml = new XmlDoc();\n    xml.xml = \"<doc>\"\n        + \"<field name=\\\"id\\\">1</field>\"\n        + \"<field name=\\\"title_stringNoNorms\\\" boost=\\\"3.0\\\">mytitle</field>\"\n        + \"</doc>\";\n    try {\n      assertNull(h.validateUpdate(add(xml, new String[0])));\n      fail(\"didn't get expected exception for boosting omit norms field\");\n    } catch (SolrException expected) {\n      // expected exception\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4148af0b1a0b6991d37fc16a075d88fc63068f9","date":1351120943,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBoostOmitNorms().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBoostOmitNorms().mjava","sourceNew":"  public void testBoostOmitNorms() throws Exception {\n    XmlDoc xml = new XmlDoc();\n    // explicitly boosting a field if that omits norms is not ok\n    xml.xml = \"<doc>\"\n        + \"<field name=\\\"id\\\">ignore_exception</field>\"\n        + \"<field name=\\\"title_stringNoNorms\\\" boost=\\\"3.0\\\">mytitle</field>\"\n        + \"</doc>\";\n    try {\n      assertNull(h.validateUpdate(add(xml, new String[0])));\n      fail(\"didn't get expected exception for boosting omit norms field\");\n    } catch (SolrException expected) {\n      // expected exception\n    }\n    // boosting a field that is copied to another field that omits norms is ok\n    xml.xml = \"<doc>\"\n      + \"<field name=\\\"id\\\">42</field>\"\n      + \"<field name=\\\"title\\\" boost=\\\"3.0\\\">mytitle</field>\"\n      + \"</doc>\";\n    assertNull(h.validateUpdate(add(xml, new String[0])));\n  }\n\n","sourceOld":"  /**\n   * Its not ok to boost a field if it omits norms\n   */\n  public void testBoostOmitNorms() throws Exception {\n    XmlDoc xml = new XmlDoc();\n    xml.xml = \"<doc>\"\n        + \"<field name=\\\"id\\\">ignore_exception</field>\"\n        + \"<field name=\\\"title_stringNoNorms\\\" boost=\\\"3.0\\\">mytitle</field>\"\n        + \"</doc>\";\n    try {\n      assertNull(h.validateUpdate(add(xml, new String[0])));\n      fail(\"didn't get expected exception for boosting omit norms field\");\n    } catch (SolrException expected) {\n      // expected exception\n    }\n  }\n\n","bugFix":["fd6ef1120d3887d6a8783b5506c8fea3ddf707f0"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBoostOmitNorms().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBoostOmitNorms().mjava","sourceNew":"  public void testBoostOmitNorms() throws Exception {\n    XmlDoc xml = new XmlDoc();\n    // explicitly boosting a field if that omits norms is not ok\n    xml.xml = \"<doc>\"\n        + \"<field name=\\\"id\\\">ignore_exception</field>\"\n        + \"<field name=\\\"title_stringNoNorms\\\" boost=\\\"3.0\\\">mytitle</field>\"\n        + \"</doc>\";\n    try {\n      assertNull(h.validateUpdate(add(xml, new String[0])));\n      fail(\"didn't get expected exception for boosting omit norms field\");\n    } catch (SolrException expected) {\n      // expected exception\n    }\n    // boosting a field that is copied to another field that omits norms is ok\n    xml.xml = \"<doc>\"\n      + \"<field name=\\\"id\\\">42</field>\"\n      + \"<field name=\\\"title\\\" boost=\\\"3.0\\\">mytitle</field>\"\n      + \"</doc>\";\n    assertNull(h.validateUpdate(add(xml, new String[0])));\n  }\n\n","sourceOld":"  /**\n   * Its not ok to boost a field if it omits norms\n   */\n  public void testBoostOmitNorms() throws Exception {\n    XmlDoc xml = new XmlDoc();\n    xml.xml = \"<doc>\"\n        + \"<field name=\\\"id\\\">ignore_exception</field>\"\n        + \"<field name=\\\"title_stringNoNorms\\\" boost=\\\"3.0\\\">mytitle</field>\"\n        + \"</doc>\";\n    try {\n      assertNull(h.validateUpdate(add(xml, new String[0])));\n      fail(\"didn't get expected exception for boosting omit norms field\");\n    } catch (SolrException expected) {\n      // expected exception\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/update/DocumentBuilderTest#testBoostOmitNorms().mjava","sourceNew":null,"sourceOld":"  public void testBoostOmitNorms() throws Exception {\n    XmlDoc xml = new XmlDoc();\n    // explicitly boosting a field if that omits norms is not ok\n    xml.xml = \"<doc>\"\n        + \"<field name=\\\"id\\\">ignore_exception</field>\"\n        + \"<field name=\\\"title_stringNoNorms\\\" boost=\\\"3.0\\\">mytitle</field>\"\n        + \"</doc>\";\n    try {\n      assertNull(h.validateUpdate(add(xml, new String[0])));\n      fail(\"didn't get expected exception for boosting omit norms field\");\n    } catch (SolrException expected) {\n      // expected exception\n    }\n    // boosting a field that is copied to another field that omits norms is ok\n    xml.xml = \"<doc>\"\n      + \"<field name=\\\"id\\\">42</field>\"\n      + \"<field name=\\\"title\\\" boost=\\\"3.0\\\">mytitle</field>\"\n      + \"</doc>\";\n    assertNull(h.validateUpdate(add(xml, new String[0])));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4148af0b1a0b6991d37fc16a075d88fc63068f9":["fe19dca4e4bde2b504126fca1b1d46bbdaf6c3d8"],"fd6ef1120d3887d6a8783b5506c8fea3ddf707f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe19dca4e4bde2b504126fca1b1d46bbdaf6c3d8":["fd6ef1120d3887d6a8783b5506c8fea3ddf707f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f2126b84bd093fa3d921582a109a0ee578c28126":["fe19dca4e4bde2b504126fca1b1d46bbdaf6c3d8","d4148af0b1a0b6991d37fc16a075d88fc63068f9"],"acd9883560fd89e6448b2b447302fe543040cd4f":["d4148af0b1a0b6991d37fc16a075d88fc63068f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acd9883560fd89e6448b2b447302fe543040cd4f"]},"commit2Childs":{"d4148af0b1a0b6991d37fc16a075d88fc63068f9":["f2126b84bd093fa3d921582a109a0ee578c28126","acd9883560fd89e6448b2b447302fe543040cd4f"],"fd6ef1120d3887d6a8783b5506c8fea3ddf707f0":["fe19dca4e4bde2b504126fca1b1d46bbdaf6c3d8"],"fe19dca4e4bde2b504126fca1b1d46bbdaf6c3d8":["d4148af0b1a0b6991d37fc16a075d88fc63068f9","f2126b84bd093fa3d921582a109a0ee578c28126"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fd6ef1120d3887d6a8783b5506c8fea3ddf707f0"],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"acd9883560fd89e6448b2b447302fe543040cd4f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}