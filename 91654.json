{"path":"lucene/sandbox/src/test/org/apache/lucene/document/TestInetAddressPoint#testNextDown().mjava","commits":[{"id":"3f8f94df09ef39794abdae8ec5bffc9def9c4eb5","date":1461159938,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/TestInetAddressPoint#testNextDown().mjava","pathOld":"/dev/null","sourceNew":"  public void testNextDown() throws Exception {\n    assertEquals(InetAddress.getByName(\"ffff:ffff:ffff:ffff:ffff:ffff:ffff:fffe\"),\n        InetAddressPoint.nextDown(InetAddress.getByName(\"ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\")));\n\n    assertEquals(InetAddress.getByName(\"::ffff\"),\n        InetAddressPoint.nextDown(InetAddress.getByName(\"::1:0\")));\n\n    assertEquals(InetAddress.getByName(\"1.2.3.255\"),\n        InetAddressPoint.nextDown(InetAddress.getByName(\"1.2.4.0\")));\n\n    assertEquals(InetAddress.getByName(\"::fffe:ffff:ffff\"),\n        InetAddressPoint.nextDown(InetAddress.getByName(\"0.0.0.0\")));\n\n    assertEquals(InetAddress.getByName(\"255.255.255.255\"),\n        InetAddressPoint.nextDown(InetAddress.getByName(\"::1:0:0:0\")));\n\n    ArithmeticException e = expectThrows(ArithmeticException.class,\n        () -> InetAddressPoint.nextDown(InetAddress.getByName(\"::\")));\n    assertEquals(\"Underflow: there is no smaller InetAddress than 0:0:0:0:0:0:0:0\", e.getMessage());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b701e0fcef214f86bab1daf107adce0b0131212","date":1461241874,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/document/TestInetAddressPoint#testNextDown().mjava","pathOld":"/dev/null","sourceNew":"  public void testNextDown() throws Exception {\n    assertEquals(InetAddress.getByName(\"ffff:ffff:ffff:ffff:ffff:ffff:ffff:fffe\"),\n        InetAddressPoint.nextDown(InetAddress.getByName(\"ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\")));\n\n    assertEquals(InetAddress.getByName(\"::ffff\"),\n        InetAddressPoint.nextDown(InetAddress.getByName(\"::1:0\")));\n\n    assertEquals(InetAddress.getByName(\"1.2.3.255\"),\n        InetAddressPoint.nextDown(InetAddress.getByName(\"1.2.4.0\")));\n\n    assertEquals(InetAddress.getByName(\"::fffe:ffff:ffff\"),\n        InetAddressPoint.nextDown(InetAddress.getByName(\"0.0.0.0\")));\n\n    assertEquals(InetAddress.getByName(\"255.255.255.255\"),\n        InetAddressPoint.nextDown(InetAddress.getByName(\"::1:0:0:0\")));\n\n    ArithmeticException e = expectThrows(ArithmeticException.class,\n        () -> InetAddressPoint.nextDown(InetAddress.getByName(\"::\")));\n    assertEquals(\"Underflow: there is no smaller InetAddress than 0:0:0:0:0:0:0:0\", e.getMessage());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a52b01a73cacbd2d360240e72d64c0ba353618f","date":1489389749,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/document/TestInetAddressPoint#testNextDown().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestInetAddressPoint#testNextDown().mjava","sourceNew":"  public void testNextDown() throws Exception {\n    assertEquals(InetAddress.getByName(\"ffff:ffff:ffff:ffff:ffff:ffff:ffff:fffe\"),\n        InetAddressPoint.nextDown(InetAddress.getByName(\"ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\")));\n\n    assertEquals(InetAddress.getByName(\"::ffff\"),\n        InetAddressPoint.nextDown(InetAddress.getByName(\"::1:0\")));\n\n    assertEquals(InetAddress.getByName(\"1.2.3.255\"),\n        InetAddressPoint.nextDown(InetAddress.getByName(\"1.2.4.0\")));\n\n    assertEquals(InetAddress.getByName(\"::fffe:ffff:ffff\"),\n        InetAddressPoint.nextDown(InetAddress.getByName(\"0.0.0.0\")));\n\n    assertEquals(InetAddress.getByName(\"255.255.255.255\"),\n        InetAddressPoint.nextDown(InetAddress.getByName(\"::1:0:0:0\")));\n\n    ArithmeticException e = expectThrows(ArithmeticException.class,\n        () -> InetAddressPoint.nextDown(InetAddress.getByName(\"::\")));\n    assertEquals(\"Underflow: there is no smaller InetAddress than 0:0:0:0:0:0:0:0\", e.getMessage());\n  }\n\n","sourceOld":"  public void testNextDown() throws Exception {\n    assertEquals(InetAddress.getByName(\"ffff:ffff:ffff:ffff:ffff:ffff:ffff:fffe\"),\n        InetAddressPoint.nextDown(InetAddress.getByName(\"ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff\")));\n\n    assertEquals(InetAddress.getByName(\"::ffff\"),\n        InetAddressPoint.nextDown(InetAddress.getByName(\"::1:0\")));\n\n    assertEquals(InetAddress.getByName(\"1.2.3.255\"),\n        InetAddressPoint.nextDown(InetAddress.getByName(\"1.2.4.0\")));\n\n    assertEquals(InetAddress.getByName(\"::fffe:ffff:ffff\"),\n        InetAddressPoint.nextDown(InetAddress.getByName(\"0.0.0.0\")));\n\n    assertEquals(InetAddress.getByName(\"255.255.255.255\"),\n        InetAddressPoint.nextDown(InetAddress.getByName(\"::1:0:0:0\")));\n\n    ArithmeticException e = expectThrows(ArithmeticException.class,\n        () -> InetAddressPoint.nextDown(InetAddress.getByName(\"::\")));\n    assertEquals(\"Underflow: there is no smaller InetAddress than 0:0:0:0:0:0:0:0\", e.getMessage());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9b701e0fcef214f86bab1daf107adce0b0131212":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3f8f94df09ef39794abdae8ec5bffc9def9c4eb5"],"4a52b01a73cacbd2d360240e72d64c0ba353618f":["9b701e0fcef214f86bab1daf107adce0b0131212"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3f8f94df09ef39794abdae8ec5bffc9def9c4eb5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a52b01a73cacbd2d360240e72d64c0ba353618f"]},"commit2Childs":{"9b701e0fcef214f86bab1daf107adce0b0131212":["4a52b01a73cacbd2d360240e72d64c0ba353618f"],"4a52b01a73cacbd2d360240e72d64c0ba353618f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9b701e0fcef214f86bab1daf107adce0b0131212","3f8f94df09ef39794abdae8ec5bffc9def9c4eb5"],"3f8f94df09ef39794abdae8ec5bffc9def9c4eb5":["9b701e0fcef214f86bab1daf107adce0b0131212"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}