{"path":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testDefaultList().mjava","commits":[{"id":"607d8939b7a592a7bfc6b82c648bd96915a13e15","date":1379185943,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testDefaultList().mjava","pathOld":"/dev/null","sourceNew":"  /** using the default map explicitly */\n  public void testDefaultList() throws Exception {\n    Map<String,Method> functions = JavascriptCompiler.DEFAULT_FUNCTIONS;\n    Expression expr = JavascriptCompiler.compile(\"sqrt(20)\", functions);\n    assertEquals(Math.sqrt(20), expr.evaluate(0, null), DELTA);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96f6862293dd05eceeb03760bbb8ffcb604c6e80","date":1379186543,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testDefaultList().mjava","pathOld":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testDefaultList().mjava","sourceNew":"  /** using the default map explicitly */\n  public void testDefaultList() throws Exception {\n    Map<String,Method> functions = JavascriptCompiler.DEFAULT_FUNCTIONS;\n    Expression expr = JavascriptCompiler.compile(\"sqrt(20)\", functions, getClass().getClassLoader());\n    assertEquals(Math.sqrt(20), expr.evaluate(0, null), DELTA);\n  }\n\n","sourceOld":"  /** using the default map explicitly */\n  public void testDefaultList() throws Exception {\n    Map<String,Method> functions = JavascriptCompiler.DEFAULT_FUNCTIONS;\n    Expression expr = JavascriptCompiler.compile(\"sqrt(20)\", functions);\n    assertEquals(Math.sqrt(20), expr.evaluate(0, null), DELTA);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f0e44787cffbb978aa2182761e3f9b184545a1e","date":1379265303,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testDefaultList().mjava","pathOld":"/dev/null","sourceNew":"  /** using the default map explicitly */\n  public void testDefaultList() throws Exception {\n    Map<String,Method> functions = JavascriptCompiler.DEFAULT_FUNCTIONS;\n    Expression expr = JavascriptCompiler.compile(\"sqrt(20)\", functions, getClass().getClassLoader());\n    assertEquals(Math.sqrt(20), expr.evaluate(0, null), DELTA);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ae1ad302fc92a61505409a38838f2b1a4a2b092","date":1483787106,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testDefaultList().mjava","pathOld":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testDefaultList().mjava","sourceNew":"  /** using the default map explicitly */\n  public void testDefaultList() throws Exception {\n    Map<String,Method> functions = JavascriptCompiler.DEFAULT_FUNCTIONS;\n    Expression expr = JavascriptCompiler.compile(\"sqrt(20)\", functions, getClass().getClassLoader());\n    assertEquals(Math.sqrt(20), expr.evaluate(null), DELTA);\n  }\n\n","sourceOld":"  /** using the default map explicitly */\n  public void testDefaultList() throws Exception {\n    Map<String,Method> functions = JavascriptCompiler.DEFAULT_FUNCTIONS;\n    Expression expr = JavascriptCompiler.compile(\"sqrt(20)\", functions, getClass().getClassLoader());\n    assertEquals(Math.sqrt(20), expr.evaluate(0, null), DELTA);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testDefaultList().mjava","pathOld":"lucene/expressions/src/test/org/apache/lucene/expressions/js/TestCustomFunctions#testDefaultList().mjava","sourceNew":"  /** using the default map explicitly */\n  public void testDefaultList() throws Exception {\n    Map<String,Method> functions = JavascriptCompiler.DEFAULT_FUNCTIONS;\n    Expression expr = JavascriptCompiler.compile(\"sqrt(20)\", functions, getClass().getClassLoader());\n    assertEquals(Math.sqrt(20), expr.evaluate(null), DELTA);\n  }\n\n","sourceOld":"  /** using the default map explicitly */\n  public void testDefaultList() throws Exception {\n    Map<String,Method> functions = JavascriptCompiler.DEFAULT_FUNCTIONS;\n    Expression expr = JavascriptCompiler.compile(\"sqrt(20)\", functions, getClass().getClassLoader());\n    assertEquals(Math.sqrt(20), expr.evaluate(0, null), DELTA);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"607d8939b7a592a7bfc6b82c648bd96915a13e15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7ae1ad302fc92a61505409a38838f2b1a4a2b092":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"96f6862293dd05eceeb03760bbb8ffcb604c6e80":["607d8939b7a592a7bfc6b82c648bd96915a13e15"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["5f0e44787cffbb978aa2182761e3f9b184545a1e","7ae1ad302fc92a61505409a38838f2b1a4a2b092"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7ae1ad302fc92a61505409a38838f2b1a4a2b092"],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","96f6862293dd05eceeb03760bbb8ffcb604c6e80"]},"commit2Childs":{"607d8939b7a592a7bfc6b82c648bd96915a13e15":["96f6862293dd05eceeb03760bbb8ffcb604c6e80"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["607d8939b7a592a7bfc6b82c648bd96915a13e15","5f0e44787cffbb978aa2182761e3f9b184545a1e"],"7ae1ad302fc92a61505409a38838f2b1a4a2b092":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"96f6862293dd05eceeb03760bbb8ffcb604c6e80":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["7ae1ad302fc92a61505409a38838f2b1a4a2b092","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}