{"path":"lucene/core/src/java/org/apache/lucene/search/spans/SpanContainQuery#SpanContainQuery(SpanQuery,SpanQuery,float).mjava","commits":[{"id":"80ff50a565777c812ef7871453d715713fb6fb9c","date":1430307731,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanContainQuery#SpanContainQuery(SpanQuery,SpanQuery,float).mjava","pathOld":"/dev/null","sourceNew":"  SpanContainQuery(SpanQuery big, SpanQuery little, float boost) {\n    this.big = Objects.requireNonNull(big);\n    this.little = Objects.requireNonNull(little);\n    Objects.requireNonNull(big.getField());\n    Objects.requireNonNull(little.getField());\n    if (! big.getField().equals(little.getField())) {\n      throw new IllegalArgumentException(\"big and little not same field\");\n    }\n    this.setBoost(boost);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanContainQuery#SpanContainQuery(SpanQuery,SpanQuery).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanContainQuery#SpanContainQuery(SpanQuery,SpanQuery,float).mjava","sourceNew":"  SpanContainQuery(SpanQuery big, SpanQuery little) {\n    this.big = Objects.requireNonNull(big);\n    this.little = Objects.requireNonNull(little);\n    Objects.requireNonNull(big.getField());\n    Objects.requireNonNull(little.getField());\n    if (! big.getField().equals(little.getField())) {\n      throw new IllegalArgumentException(\"big and little not same field\");\n    }\n  }\n\n","sourceOld":"  SpanContainQuery(SpanQuery big, SpanQuery little, float boost) {\n    this.big = Objects.requireNonNull(big);\n    this.little = Objects.requireNonNull(little);\n    Objects.requireNonNull(big.getField());\n    Objects.requireNonNull(little.getField());\n    if (! big.getField().equals(little.getField())) {\n      throw new IllegalArgumentException(\"big and little not same field\");\n    }\n    this.setBoost(boost);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"80ff50a565777c812ef7871453d715713fb6fb9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["80ff50a565777c812ef7871453d715713fb6fb9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2dfdf766e55e943d942055d7de53c7ad6bc45283"]},"commit2Childs":{"80ff50a565777c812ef7871453d715713fb6fb9c":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["80ff50a565777c812ef7871453d715713fb6fb9c"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}