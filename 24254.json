{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDeleteTerms(1));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDeleteTerms(1));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7f8e68717c68517265937c911e1ce9f25750247","date":1274071103,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDeleteTerms(1));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = newDirectory(random);\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = newDirectory(random);\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random,\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44fcbde6fb2ac44ee3b45e013e54a42911e689ff","date":1292065621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n\n    writer.addDocument(new Document());\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    writer.addDocument(new Document());\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterDelete#testMaxBufferedDeletes().mjava","sourceNew":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n\n    writer.addDocument(new Document());\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMaxBufferedDeletes() throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random, MockTokenizer.WHITESPACE, false)).setMaxBufferedDeleteTerms(1));\n\n    writer.addDocument(new Document());\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    writer.deleteDocuments(new Term(\"foobar\", \"1\"));\n    assertEquals(3, writer.getFlushDeletesCount());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["06584e6e98d592b34e1329b384182f368d2025e8"],"06584e6e98d592b34e1329b384182f368d2025e8":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["1f653cfcf159baeaafe5d01682a911e95bba4012","44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"c7f8e68717c68517265937c911e1ce9f25750247":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["c7f8e68717c68517265937c911e1ce9f25750247","44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a3776dccca01c11e7046323cfad46a3b4a471233":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b21422ff1d1d56499dec481f193b402e5e8def5b":["c7f8e68717c68517265937c911e1ce9f25750247"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"06584e6e98d592b34e1329b384182f368d2025e8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"c7f8e68717c68517265937c911e1ce9f25750247":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["06584e6e98d592b34e1329b384182f368d2025e8","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff","ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["c7f8e68717c68517265937c911e1ce9f25750247"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}