{"path":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsReader.BlockDocsEnum#refillDocs().mjava","commits":[{"id":"9a0cc86697753659ac5e7f55243ccdcbf44d8a36","date":1574100512,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsReader.BlockDocsEnum#refillDocs().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsReader.BlockDocsEnum#refillDocs().mjava","sourceNew":"    private void refillDocs() throws IOException {\n      // Check if we skipped reading the previous block of freqs, and if yes, position docIn after it\n      if (isFreqsRead == false) {\n        forUtil.skipBlock(docIn);\n        isFreqsRead = true;\n      }\n      \n      final int left = docFreq - docUpto;\n      assert left > 0;\n\n      if (left >= BLOCK_SIZE) {\n        forUtil.readBlock(docIn, encoded, docDeltaBuffer);\n\n        if (indexHasFreq) {\n          if (needsFreq) {\n            isFreqsRead = false;\n          } else {\n            forUtil.skipBlock(docIn); // skip over freqs if we don't need them at all\n          }\n        }\n      } else if (docFreq == 1) {\n        docDeltaBuffer[0] = singletonDocID;\n        freqBuffer[0] = (int) totalTermFreq;\n      } else {\n        // Read vInts:\n        readVIntBlock(docIn, docDeltaBuffer, freqBuffer, left, indexHasFreq);\n      }\n      docBufferUpto = 0;\n    }\n\n","sourceOld":"    private void refillDocs() throws IOException {\n      // Check if we skipped reading the previous block of freqs, and if yes, position docIn after it\n      if (isFreqsRead == false) {\n        forUtil.skipBlock(docIn);\n        isFreqsRead = true;\n      }\n      \n      final int left = docFreq - docUpto;\n      assert left > 0;\n\n      if (left >= BLOCK_SIZE) {\n        forUtil.readBlock(docIn, encoded, docDeltaBuffer);\n\n        if (indexHasFreq) {\n          if (needsFreq) {\n            isFreqsRead = false;\n          } else {\n            forUtil.skipBlock(docIn); // skip over freqs if we don't need them at all\n          }\n        }\n      } else if (docFreq == 1) {\n        docDeltaBuffer[0] = singletonDocID;\n        freqBuffer[0] = (int) totalTermFreq;\n      } else {\n        // Read vInts:\n        readVIntBlock(docIn, docDeltaBuffer, freqBuffer, left, indexHasFreq);\n      }\n      docBufferUpto = 0;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"]},"commit2Childs":{"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}