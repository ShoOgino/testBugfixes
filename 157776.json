{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/RepSelectByPrefTask#reportSelectByPrefix(List).mjava","commits":[{"id":"1ebcfbd9662f54e73fdfe1f4d675ea39531fb9b0","date":1174485154,"type":1,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/RepSelectByPrefTask#reportSelectByPrefix(List).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/stats/Points#reportSelectByPrefix(String).mjava","sourceNew":"  protected Report reportSelectByPrefix(List taskStats) {\n    String longestOp = longestOp(taskStats.iterator());\n    boolean first = true;\n    StringBuffer sb = new StringBuffer();\n    sb.append(tableTitle(longestOp));\n    sb.append(newline);\n    int reported = 0;\n    for (Iterator it = taskStats.iterator(); it.hasNext();) {\n      TaskStats stat = (TaskStats) it.next();\n      if (stat.getElapsed()>=0 && stat.getTask().getName().startsWith(prefix)) { // only ended tasks with proper name\n        reported++;\n        if (!first) {\n          sb.append(newline);\n        }\n        first = false;\n        String line = taskReportLine(longestOp,stat);\n        if (taskStats.size()>2 && reported%2==0) {\n          line = line.replaceAll(\"   \",\" - \");\n        }\n        sb.append(line);\n      }\n    }\n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\n    return new Report(reptxt,reported,reported, taskStats.size());\n  }\n\n","sourceOld":"  public Report reportSelectByPrefix(String prefix) {\r\n    String longestOp = longestOp(points);\r\n    boolean first = true;\r\n    StringBuffer sb = new StringBuffer();\r\n    sb.append(tableTitle(longestOp));\r\n    sb.append(newline);\r\n    int reported = 0;\r\n    for (Iterator it = points.iterator(); it.hasNext();) {\r\n      TaskStats stat = (TaskStats) it.next();\r\n      if (stat.getElapsed()>=0 && stat.getTask().getName().startsWith(prefix)) { // only ended tasks with proper name\r\n        reported++;\r\n        if (!first) {\r\n          sb.append(newline);\r\n        }\r\n        first = false;\r\n        String line = taskReportLine(longestOp,stat);\r\n        if (points.size()>2&& reported%2==0) {\r\n          line = line.replaceAll(\"   \",\" - \");\r\n        }\r\n        sb.append(line);\r\n      }\r\n    }\r\n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\r\n    return new Report(reptxt,reported,reported, points.size());\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e1ce9be74263e9659aad8a6ee1f213193710b71","date":1256298843,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/RepSelectByPrefTask#reportSelectByPrefix(List[TaskStats]).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/RepSelectByPrefTask#reportSelectByPrefix(List).mjava","sourceNew":"  protected Report reportSelectByPrefix(List<TaskStats> taskStats) {\n    String longestOp = longestOp(taskStats);\n    boolean first = true;\n    StringBuffer sb = new StringBuffer();\n    sb.append(tableTitle(longestOp));\n    sb.append(newline);\n    int reported = 0;\n    for (final TaskStats stat : taskStats) {\n      if (stat.getElapsed()>=0 && stat.getTask().getName().startsWith(prefix)) { // only ended tasks with proper name\n        reported++;\n        if (!first) {\n          sb.append(newline);\n        }\n        first = false;\n        String line = taskReportLine(longestOp,stat);\n        if (taskStats.size()>2 && reported%2==0) {\n          line = line.replaceAll(\"   \",\" - \");\n        }\n        sb.append(line);\n      }\n    }\n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\n    return new Report(reptxt,reported,reported, taskStats.size());\n  }\n\n","sourceOld":"  protected Report reportSelectByPrefix(List taskStats) {\n    String longestOp = longestOp(taskStats.iterator());\n    boolean first = true;\n    StringBuffer sb = new StringBuffer();\n    sb.append(tableTitle(longestOp));\n    sb.append(newline);\n    int reported = 0;\n    for (Iterator it = taskStats.iterator(); it.hasNext();) {\n      TaskStats stat = (TaskStats) it.next();\n      if (stat.getElapsed()>=0 && stat.getTask().getName().startsWith(prefix)) { // only ended tasks with proper name\n        reported++;\n        if (!first) {\n          sb.append(newline);\n        }\n        first = false;\n        String line = taskReportLine(longestOp,stat);\n        if (taskStats.size()>2 && reported%2==0) {\n          line = line.replaceAll(\"   \",\" - \");\n        }\n        sb.append(line);\n      }\n    }\n    String reptxt = (reported==0 ? \"No Matching Entries Were Found!\" : sb.toString());\n    return new Report(reptxt,reported,reported, taskStats.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1ebcfbd9662f54e73fdfe1f4d675ea39531fb9b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4e1ce9be74263e9659aad8a6ee1f213193710b71":["1ebcfbd9662f54e73fdfe1f4d675ea39531fb9b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4e1ce9be74263e9659aad8a6ee1f213193710b71"]},"commit2Childs":{"1ebcfbd9662f54e73fdfe1f4d675ea39531fb9b0":["4e1ce9be74263e9659aad8a6ee1f213193710b71"],"4e1ce9be74263e9659aad8a6ee1f213193710b71":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1ebcfbd9662f54e73fdfe1f4d675ea39531fb9b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}