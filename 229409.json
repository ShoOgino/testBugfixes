{"path":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.MultiFieldWriter#write(int,LeafReader,Writer).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.MultiFieldWriter#write(int,LeafReader,Writer).mjava","pathOld":"/dev/null","sourceNew":"    public void write(int docId, LeafReader reader, Writer out) throws IOException {\n      SortedSetDocValues vals = reader.getSortedSetDocValues(this.field);\n      vals.setDocument(docId);\n      out.write('\"');\n      out.write(this.field);\n      out.write('\"');\n      out.write(':');\n      out.write('[');\n      int v = 0;\n      long ord = -1;\n      while((ord = vals.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n        BytesRef ref = vals.lookupOrd(ord);\n        fieldType.indexedToReadable(ref, cref);\n        if(v > 0) {\n          out.write(',');\n        }\n\n        if(!numeric) {\n          out.write('\"');\n        }\n\n        out.write(cref.toString());\n\n        if(!numeric) {\n          out.write('\"');\n        }\n        ++v;\n      }\n      out.write(\"]\");\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a55bf71f91aeded06b44ad1abea6666ea168b697"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a55bf71f91aeded06b44ad1abea6666ea168b697","date":1435941127,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.MultiFieldWriter#write(int,LeafReader,Writer).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.MultiFieldWriter#write(int,LeafReader,Writer).mjava","sourceNew":"    public void write(int docId, LeafReader reader, Writer out) throws IOException {\n      SortedSetDocValues vals = reader.getSortedSetDocValues(this.field);\n      vals.setDocument(docId);\n      out.write('\"');\n      out.write(this.field);\n      out.write('\"');\n      out.write(':');\n      out.write('[');\n      int v = 0;\n      long ord = -1;\n      while((ord = vals.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n        BytesRef ref = vals.lookupOrd(ord);\n        fieldType.indexedToReadable(ref, cref);\n        if(v > 0) {\n          out.write(',');\n        }\n\n        if(!numeric) {\n          out.write('\"');\n        }\n\n        writeStr(cref.toString(), out);\n\n        if(!numeric) {\n          out.write('\"');\n        }\n        ++v;\n      }\n      out.write(\"]\");\n    }\n\n","sourceOld":"    public void write(int docId, LeafReader reader, Writer out) throws IOException {\n      SortedSetDocValues vals = reader.getSortedSetDocValues(this.field);\n      vals.setDocument(docId);\n      out.write('\"');\n      out.write(this.field);\n      out.write('\"');\n      out.write(':');\n      out.write('[');\n      int v = 0;\n      long ord = -1;\n      while((ord = vals.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n        BytesRef ref = vals.lookupOrd(ord);\n        fieldType.indexedToReadable(ref, cref);\n        if(v > 0) {\n          out.write(',');\n        }\n\n        if(!numeric) {\n          out.write('\"');\n        }\n\n        out.write(cref.toString());\n\n        if(!numeric) {\n          out.write('\"');\n        }\n        ++v;\n      }\n      out.write(\"]\");\n    }\n\n","bugFix":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bf0d17d4afd2792a63ee45b11039e70a4e4bb4a9","date":1454264470,"type":5,"author":"jbernste","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.MultiFieldWriter#write(int,LeafReader,Writer,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.MultiFieldWriter#write(int,LeafReader,Writer).mjava","sourceNew":"    public boolean write(int docId, LeafReader reader, Writer out, int fieldIndex) throws IOException {\n      SortedSetDocValues vals = DocValues.getSortedSet(reader, this.field);\n      vals.setDocument(docId);\n      List<Long> ords = new ArrayList();\n      long o = -1;\n      while((o = vals.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n        ords.add(o);\n      }\n\n      if(ords.size()== 0) {\n        return false;\n      }\n\n\n      if(fieldIndex>0) {\n        out.write(',');\n      }\n      out.write('\"');\n      out.write(this.field);\n      out.write('\"');\n      out.write(':');\n      out.write('[');\n      int v = 0;\n      for(long ord : ords) {\n        BytesRef ref = vals.lookupOrd(ord);\n        fieldType.indexedToReadable(ref, cref);\n        if(v > 0) {\n          out.write(',');\n        }\n\n        if(!numeric) {\n          out.write('\"');\n        }\n\n        writeStr(cref.toString(), out);\n\n        if(!numeric) {\n          out.write('\"');\n        }\n        ++v;\n      }\n      out.write(\"]\");\n      return true;\n    }\n\n","sourceOld":"    public void write(int docId, LeafReader reader, Writer out) throws IOException {\n      SortedSetDocValues vals = reader.getSortedSetDocValues(this.field);\n      vals.setDocument(docId);\n      out.write('\"');\n      out.write(this.field);\n      out.write('\"');\n      out.write(':');\n      out.write('[');\n      int v = 0;\n      long ord = -1;\n      while((ord = vals.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n        BytesRef ref = vals.lookupOrd(ord);\n        fieldType.indexedToReadable(ref, cref);\n        if(v > 0) {\n          out.write(',');\n        }\n\n        if(!numeric) {\n          out.write('\"');\n        }\n\n        writeStr(cref.toString(), out);\n\n        if(!numeric) {\n          out.write('\"');\n        }\n        ++v;\n      }\n      out.write(\"]\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.MultiFieldWriter#write(int,LeafReader,Writer,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/SortingResponseWriter.MultiFieldWriter#write(int,LeafReader,Writer).mjava","sourceNew":"    public boolean write(int docId, LeafReader reader, Writer out, int fieldIndex) throws IOException {\n      SortedSetDocValues vals = DocValues.getSortedSet(reader, this.field);\n      vals.setDocument(docId);\n      List<Long> ords = new ArrayList();\n      long o = -1;\n      while((o = vals.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n        ords.add(o);\n      }\n\n      if(ords.size()== 0) {\n        return false;\n      }\n\n\n      if(fieldIndex>0) {\n        out.write(',');\n      }\n      out.write('\"');\n      out.write(this.field);\n      out.write('\"');\n      out.write(':');\n      out.write('[');\n      int v = 0;\n      for(long ord : ords) {\n        BytesRef ref = vals.lookupOrd(ord);\n        fieldType.indexedToReadable(ref, cref);\n        if(v > 0) {\n          out.write(',');\n        }\n\n        if(!numeric) {\n          out.write('\"');\n        }\n\n        writeStr(cref.toString(), out);\n\n        if(!numeric) {\n          out.write('\"');\n        }\n        ++v;\n      }\n      out.write(\"]\");\n      return true;\n    }\n\n","sourceOld":"    public void write(int docId, LeafReader reader, Writer out) throws IOException {\n      SortedSetDocValues vals = reader.getSortedSetDocValues(this.field);\n      vals.setDocument(docId);\n      out.write('\"');\n      out.write(this.field);\n      out.write('\"');\n      out.write(':');\n      out.write('[');\n      int v = 0;\n      long ord = -1;\n      while((ord = vals.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n        BytesRef ref = vals.lookupOrd(ord);\n        fieldType.indexedToReadable(ref, cref);\n        if(v > 0) {\n          out.write(',');\n        }\n\n        if(!numeric) {\n          out.write('\"');\n        }\n\n        writeStr(cref.toString(), out);\n\n        if(!numeric) {\n          out.write('\"');\n        }\n        ++v;\n      }\n      out.write(\"]\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a55bf71f91aeded06b44ad1abea6666ea168b697":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["a55bf71f91aeded06b44ad1abea6666ea168b697","bf0d17d4afd2792a63ee45b11039e70a4e4bb4a9"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bf0d17d4afd2792a63ee45b11039e70a4e4bb4a9"],"bf0d17d4afd2792a63ee45b11039e70a4e4bb4a9":["a55bf71f91aeded06b44ad1abea6666ea168b697"]},"commit2Childs":{"a55bf71f91aeded06b44ad1abea6666ea168b697":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","bf0d17d4afd2792a63ee45b11039e70a4e4bb4a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a55bf71f91aeded06b44ad1abea6666ea168b697"],"bf0d17d4afd2792a63ee45b11039e70a4e4bb4a9":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}