{"path":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetIndexWriter#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],List[Field],List[Field]).mjava","commits":[{"id":"519ac3b8f2711b5bfeb1c90c77bb007032270a41","date":1384456090,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetIndexWriter#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],List[Field],List[Field]).mjava","pathOld":"/dev/null","sourceNew":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, List<Field> addedIndexedFields, List<Field> addedStoredFields) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexedFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexedFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        CategoryPath cp = new CategoryPath(facetField.dim, facetField.label);\n        String fullPath = cp.toString(facetDelimChar);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        addedStoredFields.add(new SortedSetDocValuesField(indexedFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        addedIndexedFields.add(new StringField(indexedFieldName, fullPath, Field.Store.NO));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetIndexWriter#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],List[Field],List[Field]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetIndexWriter#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],List[Field],List[Field]).mjava","sourceNew":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, List<Field> addedIndexedFields, List<Field> addedStoredFields) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexedFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexedFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        FacetLabel cp = new FacetLabel(facetField.dim, facetField.label);\n        String fullPath = cp.toString(facetDelimChar);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        addedStoredFields.add(new SortedSetDocValuesField(indexedFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        addedIndexedFields.add(new StringField(indexedFieldName, fullPath, Field.Store.NO));\n      }\n    }\n  }\n\n","sourceOld":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, List<Field> addedIndexedFields, List<Field> addedStoredFields) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexedFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexedFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        CategoryPath cp = new CategoryPath(facetField.dim, facetField.label);\n        String fullPath = cp.toString(facetDelimChar);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        addedStoredFields.add(new SortedSetDocValuesField(indexedFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        addedIndexedFields.add(new StringField(indexedFieldName, fullPath, Field.Store.NO));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fe35a54e036b5f516cb04b39f3eb96a55812376","date":1384725462,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetIndexWriter#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],List[Field],List[Field]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetIndexWriter#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],List[Field],List[Field]).mjava","sourceNew":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, List<Field> addedIndexedFields, List<Field> addedStoredFields) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexedFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexedFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        FacetLabel cp = new FacetLabel(facetField.dim, facetField.label);\n        String fullPath = pathToString(cp.components, cp.length);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        addedStoredFields.add(new SortedSetDocValuesField(indexedFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        addedIndexedFields.add(new StringField(indexedFieldName, fullPath, Field.Store.NO));\n      }\n    }\n  }\n\n","sourceOld":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, List<Field> addedIndexedFields, List<Field> addedStoredFields) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexedFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexedFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        FacetLabel cp = new FacetLabel(facetField.dim, facetField.label);\n        String fullPath = cp.toString(facetDelimChar);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        addedStoredFields.add(new SortedSetDocValuesField(indexedFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        addedIndexedFields.add(new StringField(indexedFieldName, fullPath, Field.Store.NO));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18edd2e3f5560087a37442fa424cbbed7c295ebc","date":1384813900,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetIndexWriter#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],List[Field],List[Field]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetIndexWriter#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],List[Field],List[Field]).mjava","sourceNew":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, List<Field> addedIndexedFields, List<Field> addedStoredFields) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        FacetLabel cp = new FacetLabel(facetField.dim, facetField.label);\n        String fullPath = pathToString(cp.components, cp.length);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        addedStoredFields.add(new SortedSetDocValuesField(indexFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        addedIndexedFields.add(new StringField(indexFieldName, fullPath, Field.Store.NO));\n      }\n    }\n  }\n\n","sourceOld":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, List<Field> addedIndexedFields, List<Field> addedStoredFields) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexedFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexedFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        FacetLabel cp = new FacetLabel(facetField.dim, facetField.label);\n        String fullPath = pathToString(cp.components, cp.length);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        addedStoredFields.add(new SortedSetDocValuesField(indexedFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        addedIndexedFields.add(new StringField(indexedFieldName, fullPath, Field.Store.NO));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7554009c97f9365492660c1df175b6349f7ec05c","date":1384886154,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/simple/DocumentBuilder#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],List[Field],List[Field]).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/simple/FacetIndexWriter#processSSDVFacetFields(Map[String,List[SortedSetDocValuesFacetField]],List[Field],List[Field]).mjava","sourceNew":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, List<Field> addedIndexedFields, List<Field> addedStoredFields) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        FacetLabel cp = new FacetLabel(facetField.dim, facetField.label);\n        String fullPath = pathToString(cp.components, cp.length);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        addedStoredFields.add(new SortedSetDocValuesField(indexFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        addedIndexedFields.add(new StringField(indexFieldName, fullPath, Field.Store.NO));\n      }\n    }\n  }\n\n","sourceOld":"  private void processSSDVFacetFields(Map<String,List<SortedSetDocValuesFacetField>> byField, List<Field> addedIndexedFields, List<Field> addedStoredFields) throws IOException {\n    //System.out.println(\"process SSDV: \" + byField);\n    for(Map.Entry<String,List<SortedSetDocValuesFacetField>> ent : byField.entrySet()) {\n\n      String indexFieldName = ent.getKey();\n      //System.out.println(\"  field=\" + indexFieldName);\n\n      for(SortedSetDocValuesFacetField facetField : ent.getValue()) {\n        FacetLabel cp = new FacetLabel(facetField.dim, facetField.label);\n        String fullPath = pathToString(cp.components, cp.length);\n        //System.out.println(\"add \" + fullPath);\n\n        // For facet counts:\n        addedStoredFields.add(new SortedSetDocValuesField(indexFieldName, new BytesRef(fullPath)));\n\n        // For drill-down:\n        addedIndexedFields.add(new StringField(indexFieldName, fullPath, Field.Store.NO));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7554009c97f9365492660c1df175b6349f7ec05c":["18edd2e3f5560087a37442fa424cbbed7c295ebc"],"18edd2e3f5560087a37442fa424cbbed7c295ebc":["9fe35a54e036b5f516cb04b39f3eb96a55812376"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"519ac3b8f2711b5bfeb1c90c77bb007032270a41":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9fe35a54e036b5f516cb04b39f3eb96a55812376":["c190847801a50f4dd20fd639bdc29b54ea3b288b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["519ac3b8f2711b5bfeb1c90c77bb007032270a41"]},"commit2Childs":{"7554009c97f9365492660c1df175b6349f7ec05c":[],"18edd2e3f5560087a37442fa424cbbed7c295ebc":["7554009c97f9365492660c1df175b6349f7ec05c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["519ac3b8f2711b5bfeb1c90c77bb007032270a41","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"519ac3b8f2711b5bfeb1c90c77bb007032270a41":["c190847801a50f4dd20fd639bdc29b54ea3b288b"],"9fe35a54e036b5f516cb04b39f3eb96a55812376":["18edd2e3f5560087a37442fa424cbbed7c295ebc"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["9fe35a54e036b5f516cb04b39f3eb96a55812376"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7554009c97f9365492660c1df175b6349f7ec05c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}