{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerFactory#WikipediaTokenizerFactory(Map[String,String]).mjava","commits":[{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerFactory#WikipediaTokenizerFactory(Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  /** Creates a new WikipediaTokenizerFactory */\n  public WikipediaTokenizerFactory(Map<String,String> args) {\n    super(args);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ff0aa05c1ae214397beec2eae8ce7b214dd4c4","date":1496825484,"type":3,"author":"jpgilaberte","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerFactory#WikipediaTokenizerFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerFactory#WikipediaTokenizerFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new WikipediaTokenizerFactory */\n  public WikipediaTokenizerFactory(Map<String,String> args) {\n    super(args);\n    tokenOutput = getInt(args, TOKEN_OUTPUT, WikipediaTokenizer.TOKENS_ONLY);\n    untokenizedTypes = getSet(args, UNTOKENIZED_TYPES);\n\n    if (untokenizedTypes == null) {\n      untokenizedTypes = Collections.emptySet();\n    }\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new WikipediaTokenizerFactory */\n  public WikipediaTokenizerFactory(Map<String,String> args) {\n    super(args);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f344bb33ca91f48e99c061980115b46fa84fc8f5","date":1496903283,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerFactory#WikipediaTokenizerFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerFactory#WikipediaTokenizerFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new WikipediaTokenizerFactory */\n  public WikipediaTokenizerFactory(Map<String,String> args) {\n    super(args);\n    tokenOutput = getInt(args, TOKEN_OUTPUT, WikipediaTokenizer.TOKENS_ONLY);\n    untokenizedTypes = getSet(args, UNTOKENIZED_TYPES);\n\n    if (untokenizedTypes == null) {\n      untokenizedTypes = Collections.emptySet();\n    }\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new WikipediaTokenizerFactory */\n  public WikipediaTokenizerFactory(Map<String,String> args) {\n    super(args);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerFactory#WikipediaTokenizerFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerFactory#WikipediaTokenizerFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new WikipediaTokenizerFactory */\n  public WikipediaTokenizerFactory(Map<String,String> args) {\n    super(args);\n    tokenOutput = getInt(args, TOKEN_OUTPUT, WikipediaTokenizer.TOKENS_ONLY);\n    untokenizedTypes = getSet(args, UNTOKENIZED_TYPES);\n\n    if (untokenizedTypes == null) {\n      untokenizedTypes = Collections.emptySet();\n    }\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new WikipediaTokenizerFactory */\n  public WikipediaTokenizerFactory(Map<String,String> args) {\n    super(args);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerFactory#WikipediaTokenizerFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/wikipedia/WikipediaTokenizerFactory#WikipediaTokenizerFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new WikipediaTokenizerFactory */\n  public WikipediaTokenizerFactory(Map<String,String> args) {\n    super(args);\n    tokenOutput = getInt(args, TOKEN_OUTPUT, WikipediaTokenizer.TOKENS_ONLY);\n    untokenizedTypes = getSet(args, UNTOKENIZED_TYPES);\n\n    if (untokenizedTypes == null) {\n      untokenizedTypes = Collections.emptySet();\n    }\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new WikipediaTokenizerFactory */\n  public WikipediaTokenizerFactory(Map<String,String> args) {\n    super(args);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a9ff0aa05c1ae214397beec2eae8ce7b214dd4c4":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f344bb33ca91f48e99c061980115b46fa84fc8f5":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd","a9ff0aa05c1ae214397beec2eae8ce7b214dd4c4"],"28288370235ed02234a64753cdbf0c6ec096304a":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd","f344bb33ca91f48e99c061980115b46fa84fc8f5"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd","f344bb33ca91f48e99c061980115b46fa84fc8f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"a9ff0aa05c1ae214397beec2eae8ce7b214dd4c4":["f344bb33ca91f48e99c061980115b46fa84fc8f5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["a9ff0aa05c1ae214397beec2eae8ce7b214dd4c4","f344bb33ca91f48e99c061980115b46fa84fc8f5","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"f344bb33ca91f48e99c061980115b46fa84fc8f5":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}