{"path":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#startJettySolrRunner(String,SortedMap[ServletHolder,String],SortedMap[Class,String]).mjava","commits":[{"id":"6e619491f96eb1c2c64d9f8134326816b0bcd2e4","date":1395198663,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#startJettySolrRunner(String,SortedMap[ServletHolder,String],SortedMap[Class,String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Start a new Solr instance\n   * @param hostContext context path of Solr servers used by Jetty\n   * @param extraServlets Extra servlets to be started by Jetty\n   * @param extraRequestFilters extra filters to be started by Jetty\n   * @return new Solr instance\n   */\n  public JettySolrRunner startJettySolrRunner(String hostContext,\n      SortedMap<ServletHolder, String> extraServlets,\n      SortedMap<Class, String> extraRequestFilters) throws Exception {\n    String context = getHostContextSuitableForServletContext(hostContext);\n    JettySolrRunner jetty = new JettySolrRunner(testDir.getAbsolutePath(), context, 0, null, null,\n      true, extraServlets, null, extraRequestFilters);\n    jetty.start();\n    jettys.add(jetty);\n    return jetty;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ccd5879f653e621285dee30b556303244d9ec4a3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ccd5879f653e621285dee30b556303244d9ec4a3","date":1421795206,"type":3,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#startJettySolrRunner(String,SortedMap[ServletHolder,String],SortedMap[Class,String]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#startJettySolrRunner(String,SortedMap[ServletHolder,String],SortedMap[Class,String]).mjava","sourceNew":"  /**\n   * Start a new Solr instance\n   * @param hostContext context path of Solr servers used by Jetty\n   * @param extraServlets Extra servlets to be started by Jetty\n   * @param extraRequestFilters extra filters to be started by Jetty\n   * @return new Solr instance\n   */\n  public JettySolrRunner startJettySolrRunner(String hostContext,\n      SortedMap<ServletHolder, String> extraServlets,\n      SortedMap<Class, String> extraRequestFilters) throws Exception {\n    return startJettySolrRunner(hostContext, extraServlets, extraRequestFilters, null);\n  }\n\n","sourceOld":"  /**\n   * Start a new Solr instance\n   * @param hostContext context path of Solr servers used by Jetty\n   * @param extraServlets Extra servlets to be started by Jetty\n   * @param extraRequestFilters extra filters to be started by Jetty\n   * @return new Solr instance\n   */\n  public JettySolrRunner startJettySolrRunner(String hostContext,\n      SortedMap<ServletHolder, String> extraServlets,\n      SortedMap<Class, String> extraRequestFilters) throws Exception {\n    String context = getHostContextSuitableForServletContext(hostContext);\n    JettySolrRunner jetty = new JettySolrRunner(testDir.getAbsolutePath(), context, 0, null, null,\n      true, extraServlets, null, extraRequestFilters);\n    jetty.start();\n    jettys.add(jetty);\n    return jetty;\n  }\n\n","bugFix":["6e619491f96eb1c2c64d9f8134326816b0bcd2e4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c66158bb16e902a21272772f1b911f04b1a55abb","date":1424959524,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#startJettySolrRunner(String,SortedMap[ServletHolder,String],SortedMap[Class[#-extends-Filter],String]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#startJettySolrRunner(String,SortedMap[ServletHolder,String],SortedMap[Class,String]).mjava","sourceNew":"  /**\n   * Start a new Solr instance\n   *\n   * @param hostContext context path of Solr servers used by Jetty\n   * @param extraServlets Extra servlets to be started by Jetty\n   * @param extraRequestFilters extra filters to be started by Jetty\n   *\n   * @return new Solr instance\n   *\n   */\n  public JettySolrRunner startJettySolrRunner(String hostContext,\n      SortedMap<ServletHolder, String> extraServlets,\n      SortedMap<Class<? extends Filter>, String> extraRequestFilters) throws Exception {\n    return startJettySolrRunner(hostContext, extraServlets, extraRequestFilters, null);\n  }\n\n","sourceOld":"  /**\n   * Start a new Solr instance\n   * @param hostContext context path of Solr servers used by Jetty\n   * @param extraServlets Extra servlets to be started by Jetty\n   * @param extraRequestFilters extra filters to be started by Jetty\n   * @return new Solr instance\n   */\n  public JettySolrRunner startJettySolrRunner(String hostContext,\n      SortedMap<ServletHolder, String> extraServlets,\n      SortedMap<Class, String> extraRequestFilters) throws Exception {\n    return startJettySolrRunner(hostContext, extraServlets, extraRequestFilters, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/MiniSolrCloudCluster#startJettySolrRunner(String,SortedMap[ServletHolder,String],SortedMap[Class,String]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Start a new Solr instance\n   * @param hostContext context path of Solr servers used by Jetty\n   * @param extraServlets Extra servlets to be started by Jetty\n   * @param extraRequestFilters extra filters to be started by Jetty\n   * @return new Solr instance\n   */\n  public JettySolrRunner startJettySolrRunner(String hostContext,\n      SortedMap<ServletHolder, String> extraServlets,\n      SortedMap<Class, String> extraRequestFilters) throws Exception {\n    return startJettySolrRunner(hostContext, extraServlets, extraRequestFilters, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["ccd5879f653e621285dee30b556303244d9ec4a3","c66158bb16e902a21272772f1b911f04b1a55abb"],"ccd5879f653e621285dee30b556303244d9ec4a3":["6e619491f96eb1c2c64d9f8134326816b0bcd2e4"],"6e619491f96eb1c2c64d9f8134326816b0bcd2e4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c66158bb16e902a21272772f1b911f04b1a55abb"],"c66158bb16e902a21272772f1b911f04b1a55abb":["ccd5879f653e621285dee30b556303244d9ec4a3"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"ccd5879f653e621285dee30b556303244d9ec4a3":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","c66158bb16e902a21272772f1b911f04b1a55abb"],"6e619491f96eb1c2c64d9f8134326816b0bcd2e4":["ccd5879f653e621285dee30b556303244d9ec4a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6e619491f96eb1c2c64d9f8134326816b0bcd2e4"],"c66158bb16e902a21272772f1b911f04b1a55abb":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}