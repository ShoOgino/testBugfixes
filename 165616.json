{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsReader#readIndex().mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsReader#readIndex().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsReader#readIndex().mjava","sourceNew":"  // we don't actually write a .fdx-like index, instead we read the \n  // stored fields file in entirety up-front and save the offsets \n  // so we can seek to the documents later.\n  private void readIndex() throws IOException {\n    offsets = new ArrayList<Long>();\n    while (!scratch.equals(END)) {\n      readLine();\n      if (StringHelper.startsWith(scratch, DOC)) {\n        offsets.add(in.getFilePointer());\n      }\n    }\n  }\n\n","sourceOld":"  // we don't actually write a .fdx-like index, instead we read the \n  // stored fields file in entirety up-front and save the offsets \n  // so we can seek to the documents later.\n  private void readIndex() throws IOException {\n    offsets = new ArrayList<Long>();\n    while (!scratch.equals(END)) {\n      readLine();\n      if (StringHelper.startsWith(scratch, DOC)) {\n        offsets.add(in.getFilePointer());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e784d2742d5536b6fceba16c6d032d4b2e38e320","date":1349724693,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsReader#readIndex(int).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextStoredFieldsReader#readIndex().mjava","sourceNew":"  // we don't actually write a .fdx-like index, instead we read the \n  // stored fields file in entirety up-front and save the offsets \n  // so we can seek to the documents later.\n  private void readIndex(int size) throws IOException {\n    offsets = new long[size];\n    int upto = 0;\n    while (!scratch.equals(END)) {\n      readLine();\n      if (StringHelper.startsWith(scratch, DOC)) {\n        offsets[upto] = in.getFilePointer();\n        upto++;\n      }\n    }\n    assert upto == offsets.length;\n  }\n\n","sourceOld":"  // we don't actually write a .fdx-like index, instead we read the \n  // stored fields file in entirety up-front and save the offsets \n  // so we can seek to the documents later.\n  private void readIndex() throws IOException {\n    offsets = new ArrayList<Long>();\n    while (!scratch.equals(END)) {\n      readLine();\n      if (StringHelper.startsWith(scratch, DOC)) {\n        offsets.add(in.getFilePointer());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e784d2742d5536b6fceba16c6d032d4b2e38e320":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e784d2742d5536b6fceba16c6d032d4b2e38e320"]},"commit2Childs":{"e784d2742d5536b6fceba16c6d032d4b2e38e320":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["e784d2742d5536b6fceba16c6d032d4b2e38e320"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}