{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/request/ConfigSetAdminRequest.Create#getParams().mjava","commits":[{"id":"2209af2c265d2258ec4b29c8cc78622d36994a15","date":1440641916,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/ConfigSetAdminRequest.Create#getParams().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = new ModifiableSolrParams(super.getParams());\n      if (baseConfigSetName == null) {\n        throw new RuntimeException( \"no Base ConfigSet specified!\" );\n      }\n      params.set(\"baseConfigSet\", baseConfigSetName);\n      if (properties != null) {\n        for (Map.Entry entry : properties.entrySet()) {\n          params.set(PROPERTY_PREFIX + \".\" + entry.getKey().toString(),\n              entry.getValue().toString());\n        }\n      }\n      return params;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e29778bfb04e9115636606cb8f74e23ecba15c7b","date":1536084166,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/ConfigSetAdminRequest.Create#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/ConfigSetAdminRequest.Create#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = new ModifiableSolrParams(super.getParams());\n      if (baseConfigSetName != null) {\n        params.set(\"baseConfigSet\", baseConfigSetName);\n      }\n      if (properties != null) {\n        for (Map.Entry entry : properties.entrySet()) {\n          params.set(PROPERTY_PREFIX + \".\" + entry.getKey().toString(),\n              entry.getValue().toString());\n        }\n      }\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = new ModifiableSolrParams(super.getParams());\n      if (baseConfigSetName == null) {\n        throw new RuntimeException( \"no Base ConfigSet specified!\" );\n      }\n      params.set(\"baseConfigSet\", baseConfigSetName);\n      if (properties != null) {\n        for (Map.Entry entry : properties.entrySet()) {\n          params.set(PROPERTY_PREFIX + \".\" + entry.getKey().toString(),\n              entry.getValue().toString());\n        }\n      }\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7dfea4f7c80813344b0152e37fc18b31369e8ff","date":1592136683,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/request/ConfigSetAdminRequest.Create#getParams().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/request/ConfigSetAdminRequest.Create#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = new ModifiableSolrParams(super.getParams());\n      if (baseConfigSetName != null) {\n        params.set(\"baseConfigSet\", baseConfigSetName);\n      }\n      if (properties != null) {\n        for (@SuppressWarnings({\"rawtypes\"})Map.Entry entry : properties.entrySet()) {\n          params.set(PROPERTY_PREFIX + \".\" + entry.getKey().toString(),\n              entry.getValue().toString());\n        }\n      }\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      ModifiableSolrParams params = new ModifiableSolrParams(super.getParams());\n      if (baseConfigSetName != null) {\n        params.set(\"baseConfigSet\", baseConfigSetName);\n      }\n      if (properties != null) {\n        for (Map.Entry entry : properties.entrySet()) {\n          params.set(PROPERTY_PREFIX + \".\" + entry.getKey().toString(),\n              entry.getValue().toString());\n        }\n      }\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2209af2c265d2258ec4b29c8cc78622d36994a15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e29778bfb04e9115636606cb8f74e23ecba15c7b":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["e29778bfb04e9115636606cb8f74e23ecba15c7b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a7dfea4f7c80813344b0152e37fc18b31369e8ff"]},"commit2Childs":{"2209af2c265d2258ec4b29c8cc78622d36994a15":["e29778bfb04e9115636606cb8f74e23ecba15c7b"],"e29778bfb04e9115636606cb8f74e23ecba15c7b":["a7dfea4f7c80813344b0152e37fc18b31369e8ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"a7dfea4f7c80813344b0152e37fc18b31369e8ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}