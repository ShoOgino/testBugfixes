{"path":"src/java/org/apache/lucene/index/ByteSliceReader#writeTo(IndexOutput).mjava","commits":[{"id":"5a0af3a442be522899177e5e11384a45a6784a3f","date":1205348952,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/ByteSliceReader#writeTo(IndexOutput).mjava","pathOld":"/dev/null","sourceNew":"  public long writeTo(IndexOutput out) throws IOException {\n    long size = 0;\n    while(true) {\n      if (limit + bufferOffset == endIndex) {\n        assert endIndex - bufferOffset >= upto;\n        out.writeBytes(buffer, upto, limit-upto);\n        size += limit-upto;\n        break;\n      } else {\n        out.writeBytes(buffer, upto, limit-upto);\n        size += limit-upto;\n        nextSlice();\n      }\n    }\n\n    return size;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ByteSliceReader#writeTo(IndexOutput).mjava","pathOld":"src/java/org/apache/lucene/index/ByteSliceReader#writeTo(IndexOutput).mjava","sourceNew":"  public long writeTo(IndexOutput out) throws IOException {\n    long size = 0;\n    while(true) {\n      if (limit + bufferOffset == endIndex) {\n        assert endIndex - bufferOffset >= upto;\n        out.writeBytes(buffer, upto, limit-upto);\n        size += limit-upto;\n        break;\n      } else {\n        out.writeBytes(buffer, upto, limit-upto);\n        size += limit-upto;\n        nextSlice();\n      }\n    }\n\n    return size;\n  }\n\n","sourceOld":"  public long writeTo(IndexOutput out) throws IOException {\n    long size = 0;\n    while(true) {\n      if (limit + bufferOffset == endIndex) {\n        assert endIndex - bufferOffset >= upto;\n        out.writeBytes(buffer, upto, limit-upto);\n        size += limit-upto;\n        break;\n      } else {\n        out.writeBytes(buffer, upto, limit-upto);\n        size += limit-upto;\n        nextSlice();\n      }\n    }\n\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5a0af3a442be522899177e5e11384a45a6784a3f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5a0af3a442be522899177e5e11384a45a6784a3f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a0af3a442be522899177e5e11384a45a6784a3f"],"5a0af3a442be522899177e5e11384a45a6784a3f":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}