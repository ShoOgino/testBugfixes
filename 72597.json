{"path":"lucene/src/test/org/apache/lucene/index/TestSameTokenSamePosition#testMoreDocs().mjava","commits":[{"id":"e7f7a53951c27f2ba1fb2e176e6e7b9e86e33ee8","date":1310900031,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSameTokenSamePosition#testMoreDocs().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Same as the above, but with more docs\n   */\n  public void testMoreDocs() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter riw = new RandomIndexWriter(random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new BugReproAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"eng\", \"Six drunken\" /*This shouldn't matter. */, \n                      Field.Store.YES, Field.Index.ANALYZED));\n    for (int i = 0; i < 100; i++) {\n      riw.addDocument(doc);\n    }\n    riw.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSameTokenSamePosition#testMoreDocs().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSameTokenSamePosition#testMoreDocs().mjava","sourceNew":"  /**\n   * Same as the above, but with more docs\n   */\n  public void testMoreDocs() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter riw = new RandomIndexWriter(random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new BugReproAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"eng\", TextField.TYPE_STORED, \"Six drunken\" /*This shouldn't matter. */));\n    for (int i = 0; i < 100; i++) {\n      riw.addDocument(doc);\n    }\n    riw.close();\n    dir.close();\n  }\n\n","sourceOld":"  /**\n   * Same as the above, but with more docs\n   */\n  public void testMoreDocs() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter riw = new RandomIndexWriter(random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new BugReproAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"eng\", \"Six drunken\" /*This shouldn't matter. */, \n                      Field.Store.YES, Field.Index.ANALYZED));\n    for (int i = 0; i < 100; i++) {\n      riw.addDocument(doc);\n    }\n    riw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd","date":1317197236,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSameTokenSamePosition#testMoreDocs().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSameTokenSamePosition#testMoreDocs().mjava","sourceNew":"  /**\n   * Same as the above, but with more docs\n   */\n  public void testMoreDocs() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter riw = new RandomIndexWriter(random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new BugReproAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"eng\", \"Six drunken\", TextField.TYPE_STORED  /*This shouldn't matter. */));\n    for (int i = 0; i < 100; i++) {\n      riw.addDocument(doc);\n    }\n    riw.close();\n    dir.close();\n  }\n\n","sourceOld":"  /**\n   * Same as the above, but with more docs\n   */\n  public void testMoreDocs() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter riw = new RandomIndexWriter(random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new BugReproAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"eng\", TextField.TYPE_STORED, \"Six drunken\" /*This shouldn't matter. */));\n    for (int i = 0; i < 100; i++) {\n      riw.addDocument(doc);\n    }\n    riw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSameTokenSamePosition#testMoreDocs().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSameTokenSamePosition#testMoreDocs().mjava","sourceNew":"  /**\n   * Same as the above, but with more docs\n   */\n  public void testMoreDocs() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter riw = new RandomIndexWriter(random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new BugReproAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"eng\", \"Six drunken\", TextField.TYPE_STORED  /*This shouldn't matter. */));\n    for (int i = 0; i < 100; i++) {\n      riw.addDocument(doc);\n    }\n    riw.close();\n    dir.close();\n  }\n\n","sourceOld":"  /**\n   * Same as the above, but with more docs\n   */\n  public void testMoreDocs() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter riw = new RandomIndexWriter(random, dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new BugReproAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"eng\", \"Six drunken\", TextField.TYPE_STORED  /*This shouldn't matter. */));\n    for (int i = 0; i < 100; i++) {\n      riw.addDocument(doc);\n    }\n    riw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["e7f7a53951c27f2ba1fb2e176e6e7b9e86e33ee8"],"e7f7a53951c27f2ba1fb2e176e6e7b9e86e33ee8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["1509f151d7692d84fae414b2b799ac06ba60fcb4"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e7f7a53951c27f2ba1fb2e176e6e7b9e86e33ee8"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"e7f7a53951c27f2ba1fb2e176e6e7b9e86e33ee8":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}