{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","commits":[{"id":"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","date":1438841252,"type":1,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#deleteCoreNode(String,String,Replica,String).mjava","sourceNew":"  private void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getInQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","sourceOld":"  private void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getInQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19498030e0adab22f604f935cae3c03dcf0952a6","date":1456558851,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","sourceNew":"  private void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","sourceOld":"  private void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getInQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","sourceNew":"  private void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","sourceOld":"  private void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getInQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"66e0b82bd39567aa2bf534e5282d05fb4a4a2c76","date":1471585465,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","sourceNew":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","sourceOld":"  private void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","sourceNew":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","sourceOld":"  private void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","sourceNew":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","sourceOld":"  private void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5de0133a64f3e28d38cdf3f25f099bb70d48168a","date":1493749917,"type":3,"author":"Mark Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","sourceNew":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName,\n        ZkStateReader.BASE_URL_PROP, replica.getStr(ZkStateReader.BASE_URL_PROP));\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","sourceOld":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","bugFix":["40dce2b6d4360eb09fa16fb6c40a18b25507ed73"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","sourceNew":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName,\n        ZkStateReader.BASE_URL_PROP, replica.getStr(ZkStateReader.BASE_URL_PROP));\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","sourceOld":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName);\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac","date":1503580177,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","sourceNew":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws Exception {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName,\n        ZkStateReader.BASE_URL_PROP, replica.getStr(ZkStateReader.BASE_URL_PROP));\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","sourceOld":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName,\n        ZkStateReader.BASE_URL_PROP, replica.getStr(ZkStateReader.BASE_URL_PROP));\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b869898f50ca80263bac2e3ae0949f7700e5c977","date":1503580229,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","sourceNew":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName,\n        ZkStateReader.BASE_URL_PROP, replica.getStr(ZkStateReader.BASE_URL_PROP));\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","sourceOld":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws Exception {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName,\n        ZkStateReader.BASE_URL_PROP, replica.getStr(ZkStateReader.BASE_URL_PROP));\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"89c102d671c256ef8dd67b3ecb3ab96fe7a8006e","date":1505888025,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","sourceNew":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws Exception {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName,\n        ZkStateReader.BASE_URL_PROP, replica.getStr(ZkStateReader.BASE_URL_PROP));\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","sourceOld":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName,\n        ZkStateReader.BASE_URL_PROP, replica.getStr(ZkStateReader.BASE_URL_PROP));\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","sourceNew":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName,\n        ZkStateReader.BASE_URL_PROP, replica.getStr(ZkStateReader.BASE_URL_PROP));\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","sourceOld":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws Exception {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName,\n        ZkStateReader.BASE_URL_PROP, replica.getStr(ZkStateReader.BASE_URL_PROP));\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","sourceNew":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName,\n        ZkStateReader.BASE_URL_PROP, replica.getStr(ZkStateReader.BASE_URL_PROP));\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","sourceOld":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws Exception {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName,\n        ZkStateReader.BASE_URL_PROP, replica.getStr(ZkStateReader.BASE_URL_PROP));\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"85212dad4ed576c7f7e6c165ee19e597b7b4efc8","date":1507997740,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","sourceNew":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws Exception {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName,\n        ZkStateReader.BASE_URL_PROP, replica.getStr(ZkStateReader.BASE_URL_PROP));\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","sourceOld":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws KeeperException, InterruptedException {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName,\n        ZkStateReader.BASE_URL_PROP, replica.getStr(ZkStateReader.BASE_URL_PROP));\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","sourceNew":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws Exception {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName,\n        ZkStateReader.BASE_URL_PROP, replica.getStr(ZkStateReader.BASE_URL_PROP));\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","sourceOld":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws Exception {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName,\n        ZkStateReader.BASE_URL_PROP, replica.getStr(ZkStateReader.BASE_URL_PROP));\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#deleteCoreNode(String,String,Replica,String).mjava","sourceNew":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws Exception {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName,\n        ZkStateReader.BASE_URL_PROP, replica.getStr(ZkStateReader.BASE_URL_PROP));\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","sourceOld":"  void deleteCoreNode(String collectionName, String replicaName, Replica replica, String core) throws Exception {\n    ZkNodeProps m = new ZkNodeProps(\n        Overseer.QUEUE_OPERATION, OverseerAction.DELETECORE.toLower(),\n        ZkStateReader.CORE_NAME_PROP, core,\n        ZkStateReader.NODE_NAME_PROP, replica.getStr(ZkStateReader.NODE_NAME_PROP),\n        ZkStateReader.COLLECTION_PROP, collectionName,\n        ZkStateReader.CORE_NODE_NAME_PROP, replicaName,\n        ZkStateReader.BASE_URL_PROP, replica.getStr(ZkStateReader.BASE_URL_PROP));\n    Overseer.getStateUpdateQueue(zkStateReader.getZkClient()).offer(Utils.toJSON(m));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","19498030e0adab22f604f935cae3c03dcf0952a6"],"b94236357aaa22b76c10629851fe4e376e0cea82":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["af2638813028b254a88b418ebeafb541afb49653","66e0b82bd39567aa2bf534e5282d05fb4a4a2c76"],"c304e97e7c1d472bc70e801b35ee78583916c6cd":["89c102d671c256ef8dd67b3ecb3ab96fe7a8006e","b869898f50ca80263bac2e3ae0949f7700e5c977"],"c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"85212dad4ed576c7f7e6c165ee19e597b7b4efc8":["560c18d71dad43d675158783c3840f8c80d6d39c"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8"],"b869898f50ca80263bac2e3ae0949f7700e5c977":["c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["af2638813028b254a88b418ebeafb541afb49653","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"19498030e0adab22f604f935cae3c03dcf0952a6":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["403d05f7f8d69b65659157eff1bc1d2717f04c66","5de0133a64f3e28d38cdf3f25f099bb70d48168a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"66e0b82bd39567aa2bf534e5282d05fb4a4a2c76":["af2638813028b254a88b418ebeafb541afb49653"],"89c102d671c256ef8dd67b3ecb3ab96fe7a8006e":["5de0133a64f3e28d38cdf3f25f099bb70d48168a"],"560c18d71dad43d675158783c3840f8c80d6d39c":["89c102d671c256ef8dd67b3ecb3ab96fe7a8006e","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"5de0133a64f3e28d38cdf3f25f099bb70d48168a":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["403d05f7f8d69b65659157eff1bc1d2717f04c66","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","66e0b82bd39567aa2bf534e5282d05fb4a4a2c76"],"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","e9017cf144952056066919f1ebc7897ff9bd71b1","5de0133a64f3e28d38cdf3f25f099bb70d48168a"],"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac":["b869898f50ca80263bac2e3ae0949f7700e5c977"],"85212dad4ed576c7f7e6c165ee19e597b7b4efc8":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"b869898f50ca80263bac2e3ae0949f7700e5c977":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["af2638813028b254a88b418ebeafb541afb49653","19498030e0adab22f604f935cae3c03dcf0952a6"],"19498030e0adab22f604f935cae3c03dcf0952a6":["af2638813028b254a88b418ebeafb541afb49653"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["c7ff8a6fbdc9c2d84bc6e9e71e1c738e49c441ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"66e0b82bd39567aa2bf534e5282d05fb4a4a2c76":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"89c102d671c256ef8dd67b3ecb3ab96fe7a8006e":["c304e97e7c1d472bc70e801b35ee78583916c6cd","560c18d71dad43d675158783c3840f8c80d6d39c"],"560c18d71dad43d675158783c3840f8c80d6d39c":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8"],"5de0133a64f3e28d38cdf3f25f099bb70d48168a":["e9017cf144952056066919f1ebc7897ff9bd71b1","89c102d671c256ef8dd67b3ecb3ab96fe7a8006e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}