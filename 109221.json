{"path":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLengthFilter#testFilter().mjava","commits":[{"id":"9684bda54f470eef3b3ad2266a16b96370655fa9","date":1272922666,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLengthFilter#testFilter().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/TestLengthFilter#testFilter().mjava","sourceNew":"  public void testFilter() throws Exception {\n    TokenStream stream = new WhitespaceTokenizer(TEST_VERSION_CURRENT, \n        new StringReader(\"short toolong evenmuchlongertext a ab toolong foo\"));\n    LengthFilter filter = new LengthFilter(stream, 2, 6);\n    CharTermAttribute termAtt = filter.getAttribute(CharTermAttribute.class);\n\n    assertTrue(filter.incrementToken());\n    assertEquals(\"short\", termAtt.toString());\n    assertTrue(filter.incrementToken());\n    assertEquals(\"ab\", termAtt.toString());\n    assertTrue(filter.incrementToken());\n    assertEquals(\"foo\", termAtt.toString());\n    assertFalse(filter.incrementToken());\n  }\n\n","sourceOld":"  public void testFilter() throws Exception {\n    TokenStream stream = new WhitespaceTokenizer(TEST_VERSION_CURRENT, \n        new StringReader(\"short toolong evenmuchlongertext a ab toolong foo\"));\n    LengthFilter filter = new LengthFilter(stream, 2, 6);\n    CharTermAttribute termAtt = filter.getAttribute(CharTermAttribute.class);\n\n    assertTrue(filter.incrementToken());\n    assertEquals(\"short\", termAtt.toString());\n    assertTrue(filter.incrementToken());\n    assertEquals(\"ab\", termAtt.toString());\n    assertTrue(filter.incrementToken());\n    assertEquals(\"foo\", termAtt.toString());\n    assertFalse(filter.incrementToken());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLengthFilter#testFilter().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLengthFilter#testFilter().mjava","sourceNew":"  public void testFilter() throws Exception {\n    TokenStream stream = new WhitespaceTokenizer(TEST_VERSION_CURRENT, \n        new StringReader(\"short toolong evenmuchlongertext a ab toolong foo\"));\n    LengthFilter filter = new LengthFilter(stream, 2, 6);\n    CharTermAttribute termAtt = filter.getAttribute(CharTermAttribute.class);\n\n    assertTrue(filter.incrementToken());\n    assertEquals(\"short\", termAtt.toString());\n    assertTrue(filter.incrementToken());\n    assertEquals(\"ab\", termAtt.toString());\n    assertTrue(filter.incrementToken());\n    assertEquals(\"foo\", termAtt.toString());\n    assertFalse(filter.incrementToken());\n  }\n\n","sourceOld":"  public void testFilter() throws Exception {\n    TokenStream stream = new WhitespaceTokenizer(TEST_VERSION_CURRENT, \n        new StringReader(\"short toolong evenmuchlongertext a ab toolong foo\"));\n    LengthFilter filter = new LengthFilter(stream, 2, 6);\n    CharTermAttribute termAtt = filter.getAttribute(CharTermAttribute.class);\n\n    assertTrue(filter.incrementToken());\n    assertEquals(\"short\", termAtt.toString());\n    assertTrue(filter.incrementToken());\n    assertEquals(\"ab\", termAtt.toString());\n    assertTrue(filter.incrementToken());\n    assertEquals(\"foo\", termAtt.toString());\n    assertFalse(filter.incrementToken());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9684bda54f470eef3b3ad2266a16b96370655fa9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9684bda54f470eef3b3ad2266a16b96370655fa9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9684bda54f470eef3b3ad2266a16b96370655fa9"],"9684bda54f470eef3b3ad2266a16b96370655fa9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}