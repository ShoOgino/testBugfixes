{"path":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadScoreQuery.PayloadSpanWeight#explain(LeafReaderContext,int).mjava","commits":[{"id":"2e8525cf39738b3113cc2ef20025af7208403718","date":1438616965,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadScoreQuery.PayloadSpanWeight#explain(LeafReaderContext,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      PayloadSpanScorer scorer = (PayloadSpanScorer) scorer(context);\n      if (scorer == null || scorer.advance(doc) != doc)\n        return Explanation.noMatch(\"No match\");\n\n      SpanWeight innerWeight = ((PayloadSpanWeight)scorer.getWeight()).innerWeight;\n      Explanation innerExpl = innerWeight.explain(context, doc);\n      scorer.freq();  // force freq calculation\n      Explanation payloadExpl = scorer.getPayloadExplanation();\n\n      return Explanation.match(scorer.scoreCurrentDoc(), \"PayloadSpanQuery, product of:\", innerExpl, payloadExpl);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["13406cad512adb18f0b9447f1f35385a56a7bd88"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4","date":1442407411,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/payloads/PayloadScoreQuery.PayloadSpanWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/payloads/PayloadScoreQuery.PayloadSpanWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      PayloadSpanScorer scorer = (PayloadSpanScorer) scorer(context);\n      if (scorer == null || scorer.advance(doc) != doc)\n        return Explanation.noMatch(\"No match\");\n\n      SpanWeight innerWeight = ((PayloadSpanWeight)scorer.getWeight()).innerWeight;\n      Explanation innerExpl = innerWeight.explain(context, doc);\n      scorer.freq();  // force freq calculation\n      Explanation payloadExpl = scorer.getPayloadExplanation();\n\n      return Explanation.match(scorer.scoreCurrentDoc(), \"PayloadSpanQuery, product of:\", innerExpl, payloadExpl);\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      PayloadSpanScorer scorer = (PayloadSpanScorer) scorer(context);\n      if (scorer == null || scorer.advance(doc) != doc)\n        return Explanation.noMatch(\"No match\");\n\n      SpanWeight innerWeight = ((PayloadSpanWeight)scorer.getWeight()).innerWeight;\n      Explanation innerExpl = innerWeight.explain(context, doc);\n      scorer.freq();  // force freq calculation\n      Explanation payloadExpl = scorer.getPayloadExplanation();\n\n      return Explanation.match(scorer.scoreCurrentDoc(), \"PayloadSpanQuery, product of:\", innerExpl, payloadExpl);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["2e8525cf39738b3113cc2ef20025af7208403718"],"2e8525cf39738b3113cc2ef20025af7208403718":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"]},"commit2Childs":{"eeab49258a6aca6c7e96aaf189f1794fe6ddebe4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2e8525cf39738b3113cc2ef20025af7208403718":["eeab49258a6aca6c7e96aaf189f1794fe6ddebe4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2e8525cf39738b3113cc2ef20025af7208403718"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}