{"path":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#fullBenchmark(Class[#-extends-Lookup],int,int).mjava","commits":[{"id":"0ce3d278891029d7b03fa19c78ad8a08bf75d13c","date":1301656390,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#fullBenchmark(Class[#-extends-Lookup],int,int).mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#runBenchmark(Class[#-extends-Lookup],int).mjava","sourceNew":"  private Bench fullBenchmark(Class<? extends Lookup> cls, int warmupCount, int measuredCount) throws Exception {\n    System.err.println(\"* Running \" + measuredCount + \" iterations for \" + cls.getSimpleName() + \" ...\");\n    System.err.println(\"  - warm-up \" + warmupCount + \" iterations...\");\n    for (int i = 0; i < warmupCount; i++) {\n      System.runFinalization();\n      System.gc();\n      singleBenchmark(cls, null);\n    }\n\n    Bench b = new Bench();\n    System.err.print(\"  - main iterations:\"); System.err.flush();\n    for (int i = 0; i < measuredCount; i++) {\n      System.runFinalization();\n      System.gc();\n      singleBenchmark(cls, b);\n      if (i > 0 && (i % 10 == 0)) {\n        System.err.print(\" \" + i);\n        System.err.flush();\n      }\n    }\n\n    System.err.println();\n    return b;\n  }\n\n","sourceOld":"  private Bench runBenchmark(Class<? extends Lookup> cls, int count) throws Exception {\n    System.err.println(\"* Running \" + count + \" iterations for \" + cls.getSimpleName() + \" ...\");\n    System.err.println(\"  - warm-up 10 iterations...\");\n    for (int i = 0; i < 10; i++) {\n      System.runFinalization();\n      System.gc();\n      Lookup lookup = cls.newInstance();\n      _benchmark(lookup, null, false, null);\n      lookup = null;\n    }\n    Bench b = new Bench();\n    System.err.print(\"  - main iterations:\"); System.err.flush();\n    for (int i = 0; i < count; i++) {\n      System.runFinalization();\n      System.gc();\n      Lookup lookup = cls.newInstance();\n      _benchmark(lookup, null, false, b);\n      lookup = null;\n      if (i > 0 && (i % 10 == 0)) {\n        System.err.print(\" \" + i);\n        System.err.flush();\n      }\n    }\n    System.err.println();\n    return b;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#fullBenchmark(Class[#-extends-Lookup],int,int).mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#runBenchmark(Class[#-extends-Lookup],int).mjava","sourceNew":"  private Bench fullBenchmark(Class<? extends Lookup> cls, int warmupCount, int measuredCount) throws Exception {\n    System.err.println(\"* Running \" + measuredCount + \" iterations for \" + cls.getSimpleName() + \" ...\");\n    System.err.println(\"  - warm-up \" + warmupCount + \" iterations...\");\n    for (int i = 0; i < warmupCount; i++) {\n      System.runFinalization();\n      System.gc();\n      singleBenchmark(cls, null);\n    }\n\n    Bench b = new Bench();\n    System.err.print(\"  - main iterations:\"); System.err.flush();\n    for (int i = 0; i < measuredCount; i++) {\n      System.runFinalization();\n      System.gc();\n      singleBenchmark(cls, b);\n      if (i > 0 && (i % 10 == 0)) {\n        System.err.print(\" \" + i);\n        System.err.flush();\n      }\n    }\n\n    System.err.println();\n    return b;\n  }\n\n","sourceOld":"  private Bench runBenchmark(Class<? extends Lookup> cls, int count) throws Exception {\n    System.err.println(\"* Running \" + count + \" iterations for \" + cls.getSimpleName() + \" ...\");\n    System.err.println(\"  - warm-up 10 iterations...\");\n    for (int i = 0; i < 10; i++) {\n      System.runFinalization();\n      System.gc();\n      Lookup lookup = cls.newInstance();\n      _benchmark(lookup, null, false, null);\n      lookup = null;\n    }\n    Bench b = new Bench();\n    System.err.print(\"  - main iterations:\"); System.err.flush();\n    for (int i = 0; i < count; i++) {\n      System.runFinalization();\n      System.gc();\n      Lookup lookup = cls.newInstance();\n      _benchmark(lookup, null, false, b);\n      lookup = null;\n      if (i > 0 && (i % 10 == 0)) {\n        System.err.print(\" \" + i);\n        System.err.flush();\n      }\n    }\n    System.err.println();\n    return b;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"47ac88233e9e3019faa24a5184425ad60c23d70f","date":1302779803,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#fullBenchmark(Class[#-extends-Lookup],int,int).mjava","sourceNew":null,"sourceOld":"  private Bench fullBenchmark(Class<? extends Lookup> cls, int warmupCount, int measuredCount) throws Exception {\n    System.err.println(\"* Running \" + measuredCount + \" iterations for \" + cls.getSimpleName() + \" ...\");\n    System.err.println(\"  - warm-up \" + warmupCount + \" iterations...\");\n    for (int i = 0; i < warmupCount; i++) {\n      System.runFinalization();\n      System.gc();\n      singleBenchmark(cls, null);\n    }\n\n    Bench b = new Bench();\n    System.err.print(\"  - main iterations:\"); System.err.flush();\n    for (int i = 0; i < measuredCount; i++) {\n      System.runFinalization();\n      System.gc();\n      singleBenchmark(cls, b);\n      if (i > 0 && (i % 10 == 0)) {\n        System.err.print(\" \" + i);\n        System.err.flush();\n      }\n    }\n\n    System.err.println();\n    return b;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eb46686a27187e42311e77666a2c7026f461ebc","date":1302858020,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#fullBenchmark(Class[#-extends-Lookup],int,int).mjava","sourceNew":null,"sourceOld":"  private Bench fullBenchmark(Class<? extends Lookup> cls, int warmupCount, int measuredCount) throws Exception {\n    System.err.println(\"* Running \" + measuredCount + \" iterations for \" + cls.getSimpleName() + \" ...\");\n    System.err.println(\"  - warm-up \" + warmupCount + \" iterations...\");\n    for (int i = 0; i < warmupCount; i++) {\n      System.runFinalization();\n      System.gc();\n      singleBenchmark(cls, null);\n    }\n\n    Bench b = new Bench();\n    System.err.print(\"  - main iterations:\"); System.err.flush();\n    for (int i = 0; i < measuredCount; i++) {\n      System.runFinalization();\n      System.gc();\n      singleBenchmark(cls, b);\n      if (i > 0 && (i % 10 == 0)) {\n        System.err.print(\" \" + i);\n        System.err.flush();\n      }\n    }\n\n    System.err.println();\n    return b;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"47ac88233e9e3019faa24a5184425ad60c23d70f":["0ce3d278891029d7b03fa19c78ad8a08bf75d13c"],"1eb46686a27187e42311e77666a2c7026f461ebc":["45669a651c970812a680841b97a77cce06af559f","47ac88233e9e3019faa24a5184425ad60c23d70f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"45669a651c970812a680841b97a77cce06af559f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0ce3d278891029d7b03fa19c78ad8a08bf75d13c"],"0ce3d278891029d7b03fa19c78ad8a08bf75d13c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["47ac88233e9e3019faa24a5184425ad60c23d70f"]},"commit2Childs":{"47ac88233e9e3019faa24a5184425ad60c23d70f":["1eb46686a27187e42311e77666a2c7026f461ebc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1eb46686a27187e42311e77666a2c7026f461ebc":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["45669a651c970812a680841b97a77cce06af559f","0ce3d278891029d7b03fa19c78ad8a08bf75d13c"],"45669a651c970812a680841b97a77cce06af559f":["1eb46686a27187e42311e77666a2c7026f461ebc"],"0ce3d278891029d7b03fa19c78ad8a08bf75d13c":["47ac88233e9e3019faa24a5184425ad60c23d70f","45669a651c970812a680841b97a77cce06af559f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1eb46686a27187e42311e77666a2c7026f461ebc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}