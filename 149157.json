{"path":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdFieldValueStrategy#OrdFieldValueStrategy(int,int[],int,boolean,IntIntHashMap,SortedDocValues).mjava","commits":[{"id":"0325de99180d346d61d36938843a5c8451fe26ae","date":1447368726,"type":1,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdFieldValueStrategy#OrdFieldValueStrategy(int,int[],int,boolean,IntIntHashMap,SortedDocValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdFieldValueStrategy#OrdFieldValueStrategy(int,String,int,boolean,boolean,IntIntHashMap,SortedDocValues).mjava","sourceNew":"    public OrdFieldValueStrategy(int maxDoc,\n                                 int[] ords,\n                                 int nullPolicy,\n                                 boolean needsScores,\n                                 IntIntHashMap boostDocsMap,\n                                 SortedDocValues values) {\n      this.ords = ords;\n      Arrays.fill(ords, -1);\n      this.nullPolicy = nullPolicy;\n      this.needsScores = needsScores;\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostOrds = new IntArrayList();\n        this.boostDocs = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosted = true;\n      }\n    }\n\n","sourceOld":"    public OrdFieldValueStrategy(int maxDoc,\n                                 String field,\n                                 int nullPolicy,\n                                 boolean max,\n                                 boolean needsScores,\n                                 IntIntHashMap boostDocsMap,\n                                 SortedDocValues values) {\n      this.field = field;\n      this.nullPolicy = nullPolicy;\n      this.max = max;\n      this.needsScores = needsScores;\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostOrds = new IntArrayList();\n        this.boostDocs = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosted = true;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3575e61fd7df2bbcce8b977a23d3d67aa423ce62","date":1586507050,"type":5,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdFieldValueStrategy#OrdFieldValueStrategy(int,int,int,boolean,IntIntHashMap,SortedDocValues).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/CollapsingQParserPlugin.OrdFieldValueStrategy#OrdFieldValueStrategy(int,int[],int,boolean,IntIntHashMap,SortedDocValues).mjava","sourceNew":"    public OrdFieldValueStrategy(int maxDoc,\n                                 int valueCount,\n                                 int nullPolicy,\n                                 boolean needsScores,\n                                 IntIntHashMap boostDocsMap,\n                                 SortedDocValues values) {\n      this.ords = new IntIntDynamicMap(valueCount, -1);\n      this.nullPolicy = nullPolicy;\n      this.needsScores = needsScores;\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostOrds = new IntArrayList();\n        this.boostDocs = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosted = true;\n      }\n\n      if (this.needsScores) {\n        this.scores = new IntFloatDynamicMap(valueCount, 0.0f);\n        if(nullPolicy == CollapsingPostFilter.NULL_POLICY_EXPAND) {\n          nullScores = new FloatArrayList();\n        }\n      }\n    }\n\n","sourceOld":"    public OrdFieldValueStrategy(int maxDoc,\n                                 int[] ords,\n                                 int nullPolicy,\n                                 boolean needsScores,\n                                 IntIntHashMap boostDocsMap,\n                                 SortedDocValues values) {\n      this.ords = ords;\n      Arrays.fill(ords, -1);\n      this.nullPolicy = nullPolicy;\n      this.needsScores = needsScores;\n      this.collapsedSet = new FixedBitSet(maxDoc);\n      if(boostDocsMap != null) {\n        this.boosts = true;\n        this.boostOrds = new IntArrayList();\n        this.boostDocs = new IntArrayList();\n        int[] bd = new int[boostDocsMap.size()];\n        Iterator<IntIntCursor> it =  boostDocsMap.iterator();\n        int index = -1;\n        while(it.hasNext()) {\n          IntIntCursor cursor = it.next();\n          bd[++index] = cursor.key;\n        }\n\n        Arrays.sort(bd);\n        this.mergeBoost = new MergeBoost(bd);\n        this.boosted = true;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3575e61fd7df2bbcce8b977a23d3d67aa423ce62":["0325de99180d346d61d36938843a5c8451fe26ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0325de99180d346d61d36938843a5c8451fe26ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3575e61fd7df2bbcce8b977a23d3d67aa423ce62"]},"commit2Childs":{"3575e61fd7df2bbcce8b977a23d3d67aa423ce62":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0325de99180d346d61d36938843a5c8451fe26ae"],"0325de99180d346d61d36938843a5c8451fe26ae":["3575e61fd7df2bbcce8b977a23d3d67aa423ce62"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}