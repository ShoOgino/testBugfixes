{"path":"src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery.PayloadFilter#incrementToken().mjava","commits":[{"id":"fa4f1b5e611afe6cb170951e0a9202ff95dc9156","date":1250976267,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery.PayloadFilter#incrementToken().mjava","pathOld":"src/test/org/apache/lucene/search/payloads/BoostingFunctionTermQueryTest.PayloadFilter#incrementToken().mjava","sourceNew":"    public boolean incrementToken() throws IOException {\n      boolean hasNext = input.incrementToken();\n      if (hasNext) {\n        if (fieldName.equals(\"field\")) {\n          payloadAtt.setPayload(new Payload(payloadField));\n        } else if (fieldName.equals(\"multiField\")) {\n          if (numSeen % 2 == 0) {\n            payloadAtt.setPayload(new Payload(payloadMultiField1));\n          } else {\n            payloadAtt.setPayload(new Payload(payloadMultiField2));\n          }\n          numSeen++;\n        }\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","sourceOld":"    public boolean incrementToken() throws IOException {\n      boolean hasNext = input.incrementToken();\n      if (hasNext) {\n        if (fieldName.equals(\"field\")) {\n          payloadAtt.setPayload(new Payload(payloadField));\n        } else if (fieldName.equals(\"multiField\")) {\n          if (numSeen % 2 == 0) {\n            payloadAtt.setPayload(new Payload(payloadMultiField1));\n          } else {\n            payloadAtt.setPayload(new Payload(payloadMultiField2));\n          }\n          numSeen++;\n        }\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery.PayloadFilter#incrementToken().mjava","pathOld":"src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery.PayloadFilter#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      boolean hasNext = input.incrementToken();\n      if (hasNext) {\n        if (fieldName.equals(\"field\")) {\n          payloadAtt.setPayload(new Payload(payloadField));\n        } else if (fieldName.equals(\"multiField\")) {\n          if (numSeen % 2 == 0) {\n            payloadAtt.setPayload(new Payload(payloadMultiField1));\n          } else {\n            payloadAtt.setPayload(new Payload(payloadMultiField2));\n          }\n          numSeen++;\n        }\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","sourceOld":"    public boolean incrementToken() throws IOException {\n      boolean hasNext = input.incrementToken();\n      if (hasNext) {\n        if (fieldName.equals(\"field\")) {\n          payloadAtt.setPayload(new Payload(payloadField));\n        } else if (fieldName.equals(\"multiField\")) {\n          if (numSeen % 2 == 0) {\n            payloadAtt.setPayload(new Payload(payloadMultiField1));\n          } else {\n            payloadAtt.setPayload(new Payload(payloadMultiField2));\n          }\n          numSeen++;\n        }\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery.PayloadFilter#incrementToken().mjava","pathOld":"src/test/org/apache/lucene/search/payloads/TestPayloadTermQuery.PayloadFilter#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      boolean hasNext = input.incrementToken();\n      if (hasNext) {\n        if (fieldName.equals(\"field\")) {\n          payloadAtt.setPayload(new Payload(payloadField));\n        } else if (fieldName.equals(\"multiField\")) {\n          if (numSeen % 2 == 0) {\n            payloadAtt.setPayload(new Payload(payloadMultiField1));\n          } else {\n            payloadAtt.setPayload(new Payload(payloadMultiField2));\n          }\n          numSeen++;\n        }\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      boolean hasNext = input.incrementToken();\n      if (hasNext) {\n        if (fieldName.equals(\"field\")) {\n          payloadAtt.setPayload(new Payload(payloadField));\n        } else if (fieldName.equals(\"multiField\")) {\n          if (numSeen % 2 == 0) {\n            payloadAtt.setPayload(new Payload(payloadMultiField1));\n          } else {\n            payloadAtt.setPayload(new Payload(payloadMultiField2));\n          }\n          numSeen++;\n        }\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["fa4f1b5e611afe6cb170951e0a9202ff95dc9156"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa4f1b5e611afe6cb170951e0a9202ff95dc9156":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1326054a8d3aa66382d49decc7f330955c9c6f71"]},"commit2Childs":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fa4f1b5e611afe6cb170951e0a9202ff95dc9156"],"fa4f1b5e611afe6cb170951e0a9202ff95dc9156":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}