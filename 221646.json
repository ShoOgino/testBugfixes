{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","commits":[{"id":"b5b786e8a2ab6d8bb552c5bac69728c7d2983266","date":1453255950,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","pathOld":"/dev/null","sourceNew":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertTrue(rs.next());\n    assertEquals(14, rs.getLong(\"a_i\"));\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertEquals(10, rs.getDouble(\"a_f\"), 0);\n\n    assertTrue(rs.next());\n    assertEquals(13, rs.getLong(\"a_i\"));\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertEquals(9, rs.getDouble(\"a_f\"), 0);\n\n    assertFalse(rs.next());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"454707440cee820dfa096b7a8f7544bb3ad27db4","date":1453654392,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","sourceNew":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertTrue(rs.next());\n    assertEquals(14, rs.getLong(\"a_i\"));\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertEquals(10, rs.getDouble(\"a_f\"), 0);\n\n    assertTrue(rs.next());\n    assertEquals(13, rs.getLong(\"a_i\"));\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertEquals(9, rs.getDouble(\"a_f\"), 0);\n\n    assertFalse(rs.next());\n  }\n\n","sourceOld":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertTrue(rs.next());\n    assertEquals(14, rs.getLong(\"a_i\"));\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertEquals(10, rs.getDouble(\"a_f\"), 0);\n\n    assertTrue(rs.next());\n    assertEquals(13, rs.getLong(\"a_i\"));\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertEquals(9, rs.getDouble(\"a_f\"), 0);\n\n    assertFalse(rs.next());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5738a8f61985edac306006fb13d667a26236414","date":1453775984,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","sourceNew":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertTrue(rs.next());\n    assertEquals(14L, rs.getObject(\"a_i\"));\n    assertEquals(14L, rs.getLong(\"a_i\"));\n    assertEquals(14D, rs.getDouble(\"a_i\"), 0);\n    assertEquals(14f, rs.getFloat(\"a_i\"), 0);\n    assertEquals(14, rs.getShort(\"a_i\"));\n    assertEquals(14, rs.getByte(\"a_i\"));\n    assertEquals(\"hello0\", rs.getObject(\"a_s\"));\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertEquals(10D, rs.getObject(\"a_f\"));\n    assertEquals(10D, rs.getDouble(\"a_f\"), 0);\n    assertEquals(10F, rs.getFloat(\"a_f\"), 0);\n    assertEquals(10, rs.getInt(\"a_f\"), 0);\n    assertEquals(10L, rs.getLong(\"a_f\"), 0);\n    assertEquals(10, rs.getShort(\"a_f\"), 0);\n    assertEquals(10, rs.getByte(\"a_f\"), 0);\n    \n    assertTrue(rs.next());\n    assertFalse(rs.next());\n  }\n\n","sourceOld":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertTrue(rs.next());\n    assertEquals(14, rs.getLong(\"a_i\"));\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertEquals(10, rs.getDouble(\"a_f\"), 0);\n\n    assertTrue(rs.next());\n    assertEquals(13, rs.getLong(\"a_i\"));\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertEquals(9, rs.getDouble(\"a_f\"), 0);\n\n    assertFalse(rs.next());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8002782dd7fef31376fe9c711d16558f2eb34fff","date":1453780561,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","sourceNew":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertTrue(rs.next());\n\n    assertEquals(14L, rs.getObject(\"a_i\"));\n    assertEquals(14L, rs.getObject(2));\n    assertEquals(14L, rs.getLong(\"a_i\"));\n    assertEquals(14L, rs.getLong(2));\n    assertEquals(14D, rs.getDouble(\"a_i\"), 0);\n    assertEquals(14D, rs.getDouble(2), 0);\n    assertEquals(14f, rs.getFloat(\"a_i\"), 0);\n    assertEquals(14f, rs.getFloat(2), 0);\n    assertEquals(14, rs.getShort(\"a_i\"));\n    assertEquals(14, rs.getShort(2));\n    assertEquals(14, rs.getByte(\"a_i\"));\n    assertEquals(14, rs.getByte(2));\n\n    assertEquals(\"hello0\", rs.getObject(\"a_s\"));\n    assertEquals(\"hello0\", rs.getObject(3));\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertEquals(\"hello0\", rs.getString(3));\n\n    assertEquals(10D, rs.getObject(\"a_f\"));\n    assertEquals(10D, rs.getObject(4));\n    assertEquals(10D, rs.getDouble(\"a_f\"), 0);\n    assertEquals(10D, rs.getDouble(4), 0);\n    assertEquals(10F, rs.getFloat(\"a_f\"), 0);\n    assertEquals(10F, rs.getFloat(4), 0);\n    assertEquals(10, rs.getInt(\"a_f\"), 0);\n    assertEquals(10, rs.getInt(4), 0);\n    assertEquals(10L, rs.getLong(\"a_f\"), 0);\n    assertEquals(10L, rs.getLong(4), 0);\n    assertEquals(10, rs.getShort(\"a_f\"), 0);\n    assertEquals(10, rs.getShort(4), 0);\n    assertEquals(10, rs.getByte(\"a_f\"), 0);\n    assertEquals(10, rs.getByte(4), 0);\n\n    assertTrue(rs.next());\n\n    assertEquals(13L, rs.getObject(\"a_i\"));\n    assertEquals(13L, rs.getObject(2));\n    assertEquals(13L, rs.getLong(\"a_i\"));\n    assertEquals(13L, rs.getLong(2));\n    assertEquals(13D, rs.getDouble(\"a_i\"), 0);\n    assertEquals(13D, rs.getDouble(2), 0);\n    assertEquals(13f, rs.getFloat(\"a_i\"), 0);\n    assertEquals(13f, rs.getFloat(2), 0);\n    assertEquals(13, rs.getShort(\"a_i\"));\n    assertEquals(13, rs.getShort(2));\n    assertEquals(13, rs.getByte(\"a_i\"));\n    assertEquals(13, rs.getByte(2));\n\n    assertEquals(\"hello3\", rs.getObject(\"a_s\"));\n    assertEquals(\"hello3\", rs.getObject(3));\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertEquals(\"hello3\", rs.getString(3));\n\n    assertEquals(9D, rs.getObject(\"a_f\"));\n    assertEquals(9D, rs.getObject(4));\n    assertEquals(9D, rs.getDouble(\"a_f\"), 0);\n    assertEquals(9D, rs.getDouble(4), 0);\n    assertEquals(9F, rs.getFloat(\"a_f\"), 0);\n    assertEquals(9F, rs.getFloat(4), 0);\n    assertEquals(9, rs.getInt(\"a_f\"), 0);\n    assertEquals(9, rs.getInt(4), 0);\n    assertEquals(9L, rs.getLong(\"a_f\"), 0);\n    assertEquals(9L, rs.getLong(4), 0);\n    assertEquals(9, rs.getShort(\"a_f\"), 0);\n    assertEquals(9, rs.getShort(4), 0);\n    assertEquals(9, rs.getByte(\"a_f\"), 0);\n    assertEquals(9, rs.getByte(4), 0);\n\n    assertFalse(rs.next());\n  }\n\n","sourceOld":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertTrue(rs.next());\n    assertEquals(14L, rs.getObject(\"a_i\"));\n    assertEquals(14L, rs.getLong(\"a_i\"));\n    assertEquals(14D, rs.getDouble(\"a_i\"), 0);\n    assertEquals(14f, rs.getFloat(\"a_i\"), 0);\n    assertEquals(14, rs.getShort(\"a_i\"));\n    assertEquals(14, rs.getByte(\"a_i\"));\n    assertEquals(\"hello0\", rs.getObject(\"a_s\"));\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertEquals(10D, rs.getObject(\"a_f\"));\n    assertEquals(10D, rs.getDouble(\"a_f\"), 0);\n    assertEquals(10F, rs.getFloat(\"a_f\"), 0);\n    assertEquals(10, rs.getInt(\"a_f\"), 0);\n    assertEquals(10L, rs.getLong(\"a_f\"), 0);\n    assertEquals(10, rs.getShort(\"a_f\"), 0);\n    assertEquals(10, rs.getByte(\"a_f\"), 0);\n    \n    assertTrue(rs.next());\n    assertFalse(rs.next());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"207c4c6d956f2478acc8b16d31636c5efaf4125a","date":1453918907,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","sourceNew":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertTrue(rs.next());\n\n    assertEquals(14L, rs.getObject(\"a_i\"));\n    assertEquals(14L, rs.getObject(2));\n    assertEquals(14L, rs.getLong(\"a_i\"));\n    assertEquals(14L, rs.getLong(2));\n    assertEquals(14D, rs.getDouble(\"a_i\"), 0);\n    assertEquals(14D, rs.getDouble(2), 0);\n    assertEquals(14f, rs.getFloat(\"a_i\"), 0);\n    assertEquals(14f, rs.getFloat(2), 0);\n    assertEquals(14, rs.getShort(\"a_i\"));\n    assertEquals(14, rs.getShort(2));\n    assertEquals(14, rs.getByte(\"a_i\"));\n    assertEquals(14, rs.getByte(2));\n\n    assertEquals(\"hello0\", rs.getObject(\"a_s\"));\n    assertEquals(\"hello0\", rs.getObject(3));\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertEquals(\"hello0\", rs.getString(3));\n\n    assertEquals(10D, rs.getObject(\"my_float_col\"));\n    assertEquals(10D, rs.getObject(4));\n    assertEquals(10D, rs.getDouble(\"my_float_col\"), 0);\n    assertEquals(10D, rs.getDouble(4), 0);\n    assertEquals(10F, rs.getFloat(\"my_float_col\"), 0);\n    assertEquals(10F, rs.getFloat(4), 0);\n    assertEquals(10, rs.getInt(\"my_float_col\"), 0);\n    assertEquals(10, rs.getInt(4), 0);\n    assertEquals(10L, rs.getLong(\"my_float_col\"), 0);\n    assertEquals(10L, rs.getLong(4), 0);\n    assertEquals(10, rs.getShort(\"my_float_col\"), 0);\n    assertEquals(10, rs.getShort(4), 0);\n    assertEquals(10, rs.getByte(\"my_float_col\"), 0);\n    assertEquals(10, rs.getByte(4), 0);\n\n    assertTrue(rs.next());\n\n    assertEquals(13L, rs.getObject(\"a_i\"));\n    assertEquals(13L, rs.getObject(2));\n    assertEquals(13L, rs.getLong(\"a_i\"));\n    assertEquals(13L, rs.getLong(2));\n    assertEquals(13D, rs.getDouble(\"a_i\"), 0);\n    assertEquals(13D, rs.getDouble(2), 0);\n    assertEquals(13f, rs.getFloat(\"a_i\"), 0);\n    assertEquals(13f, rs.getFloat(2), 0);\n    assertEquals(13, rs.getShort(\"a_i\"));\n    assertEquals(13, rs.getShort(2));\n    assertEquals(13, rs.getByte(\"a_i\"));\n    assertEquals(13, rs.getByte(2));\n\n    assertEquals(\"hello3\", rs.getObject(\"a_s\"));\n    assertEquals(\"hello3\", rs.getObject(3));\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertEquals(\"hello3\", rs.getString(3));\n\n    assertEquals(9D, rs.getObject(\"my_float_col\"));\n    assertEquals(9D, rs.getObject(4));\n    assertEquals(9D, rs.getDouble(\"my_float_col\"), 0);\n    assertEquals(9D, rs.getDouble(4), 0);\n    assertEquals(9F, rs.getFloat(\"my_float_col\"), 0);\n    assertEquals(9F, rs.getFloat(4), 0);\n    assertEquals(9, rs.getInt(\"my_float_col\"), 0);\n    assertEquals(9, rs.getInt(4), 0);\n    assertEquals(9L, rs.getLong(\"my_float_col\"), 0);\n    assertEquals(9L, rs.getLong(4), 0);\n    assertEquals(9, rs.getShort(\"my_float_col\"), 0);\n    assertEquals(9, rs.getShort(4), 0);\n    assertEquals(9, rs.getByte(\"my_float_col\"), 0);\n    assertEquals(9, rs.getByte(4), 0);\n\n    assertFalse(rs.next());\n  }\n\n","sourceOld":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertTrue(rs.next());\n\n    assertEquals(14L, rs.getObject(\"a_i\"));\n    assertEquals(14L, rs.getObject(2));\n    assertEquals(14L, rs.getLong(\"a_i\"));\n    assertEquals(14L, rs.getLong(2));\n    assertEquals(14D, rs.getDouble(\"a_i\"), 0);\n    assertEquals(14D, rs.getDouble(2), 0);\n    assertEquals(14f, rs.getFloat(\"a_i\"), 0);\n    assertEquals(14f, rs.getFloat(2), 0);\n    assertEquals(14, rs.getShort(\"a_i\"));\n    assertEquals(14, rs.getShort(2));\n    assertEquals(14, rs.getByte(\"a_i\"));\n    assertEquals(14, rs.getByte(2));\n\n    assertEquals(\"hello0\", rs.getObject(\"a_s\"));\n    assertEquals(\"hello0\", rs.getObject(3));\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertEquals(\"hello0\", rs.getString(3));\n\n    assertEquals(10D, rs.getObject(\"a_f\"));\n    assertEquals(10D, rs.getObject(4));\n    assertEquals(10D, rs.getDouble(\"a_f\"), 0);\n    assertEquals(10D, rs.getDouble(4), 0);\n    assertEquals(10F, rs.getFloat(\"a_f\"), 0);\n    assertEquals(10F, rs.getFloat(4), 0);\n    assertEquals(10, rs.getInt(\"a_f\"), 0);\n    assertEquals(10, rs.getInt(4), 0);\n    assertEquals(10L, rs.getLong(\"a_f\"), 0);\n    assertEquals(10L, rs.getLong(4), 0);\n    assertEquals(10, rs.getShort(\"a_f\"), 0);\n    assertEquals(10, rs.getShort(4), 0);\n    assertEquals(10, rs.getByte(\"a_f\"), 0);\n    assertEquals(10, rs.getByte(4), 0);\n\n    assertTrue(rs.next());\n\n    assertEquals(13L, rs.getObject(\"a_i\"));\n    assertEquals(13L, rs.getObject(2));\n    assertEquals(13L, rs.getLong(\"a_i\"));\n    assertEquals(13L, rs.getLong(2));\n    assertEquals(13D, rs.getDouble(\"a_i\"), 0);\n    assertEquals(13D, rs.getDouble(2), 0);\n    assertEquals(13f, rs.getFloat(\"a_i\"), 0);\n    assertEquals(13f, rs.getFloat(2), 0);\n    assertEquals(13, rs.getShort(\"a_i\"));\n    assertEquals(13, rs.getShort(2));\n    assertEquals(13, rs.getByte(\"a_i\"));\n    assertEquals(13, rs.getByte(2));\n\n    assertEquals(\"hello3\", rs.getObject(\"a_s\"));\n    assertEquals(\"hello3\", rs.getObject(3));\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertEquals(\"hello3\", rs.getString(3));\n\n    assertEquals(9D, rs.getObject(\"a_f\"));\n    assertEquals(9D, rs.getObject(4));\n    assertEquals(9D, rs.getDouble(\"a_f\"), 0);\n    assertEquals(9D, rs.getDouble(4), 0);\n    assertEquals(9F, rs.getFloat(\"a_f\"), 0);\n    assertEquals(9F, rs.getFloat(4), 0);\n    assertEquals(9, rs.getInt(\"a_f\"), 0);\n    assertEquals(9, rs.getInt(4), 0);\n    assertEquals(9L, rs.getLong(\"a_f\"), 0);\n    assertEquals(9L, rs.getLong(4), 0);\n    assertEquals(9, rs.getShort(\"a_f\"), 0);\n    assertEquals(9, rs.getShort(4), 0);\n    assertEquals(9, rs.getByte(\"a_f\"), 0);\n    assertEquals(9, rs.getByte(4), 0);\n\n    assertFalse(rs.next());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c39fd399a800c79eff2beaad702c9b6190d499fd","date":1453997311,"type":3,"author":"jbernste","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","sourceNew":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertTrue(rs.next());\n\n    assertEquals(14L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello0\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(10D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(10L, rs.getObject(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getObject(5));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(5));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(5), 0);\n    assertFalse(rs.wasNull());\n\n\n    assertTrue(rs.next());\n\n    assertEquals(13L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello3\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(9D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(null, rs.getObject(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getObject(5));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getString(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getString(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0D, rs.getDouble(\"testnull_i\"), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0D, rs.getDouble(5), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0F, rs.getFloat(\"testnull_i\"), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0F, rs.getFloat(5), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getInt(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getInt(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0L, rs.getLong(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0L, rs.getLong(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getShort(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getShort(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getByte(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getByte(5));\n    assertTrue(rs.wasNull());\n\n    assertFalse(rs.next());\n  }\n\n","sourceOld":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertTrue(rs.next());\n\n    assertEquals(14L, rs.getObject(\"a_i\"));\n    assertEquals(14L, rs.getObject(2));\n    assertEquals(14L, rs.getLong(\"a_i\"));\n    assertEquals(14L, rs.getLong(2));\n    assertEquals(14D, rs.getDouble(\"a_i\"), 0);\n    assertEquals(14D, rs.getDouble(2), 0);\n    assertEquals(14f, rs.getFloat(\"a_i\"), 0);\n    assertEquals(14f, rs.getFloat(2), 0);\n    assertEquals(14, rs.getShort(\"a_i\"));\n    assertEquals(14, rs.getShort(2));\n    assertEquals(14, rs.getByte(\"a_i\"));\n    assertEquals(14, rs.getByte(2));\n\n    assertEquals(\"hello0\", rs.getObject(\"a_s\"));\n    assertEquals(\"hello0\", rs.getObject(3));\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertEquals(\"hello0\", rs.getString(3));\n\n    assertEquals(10D, rs.getObject(\"my_float_col\"));\n    assertEquals(10D, rs.getObject(4));\n    assertEquals(10D, rs.getDouble(\"my_float_col\"), 0);\n    assertEquals(10D, rs.getDouble(4), 0);\n    assertEquals(10F, rs.getFloat(\"my_float_col\"), 0);\n    assertEquals(10F, rs.getFloat(4), 0);\n    assertEquals(10, rs.getInt(\"my_float_col\"), 0);\n    assertEquals(10, rs.getInt(4), 0);\n    assertEquals(10L, rs.getLong(\"my_float_col\"), 0);\n    assertEquals(10L, rs.getLong(4), 0);\n    assertEquals(10, rs.getShort(\"my_float_col\"), 0);\n    assertEquals(10, rs.getShort(4), 0);\n    assertEquals(10, rs.getByte(\"my_float_col\"), 0);\n    assertEquals(10, rs.getByte(4), 0);\n\n    assertTrue(rs.next());\n\n    assertEquals(13L, rs.getObject(\"a_i\"));\n    assertEquals(13L, rs.getObject(2));\n    assertEquals(13L, rs.getLong(\"a_i\"));\n    assertEquals(13L, rs.getLong(2));\n    assertEquals(13D, rs.getDouble(\"a_i\"), 0);\n    assertEquals(13D, rs.getDouble(2), 0);\n    assertEquals(13f, rs.getFloat(\"a_i\"), 0);\n    assertEquals(13f, rs.getFloat(2), 0);\n    assertEquals(13, rs.getShort(\"a_i\"));\n    assertEquals(13, rs.getShort(2));\n    assertEquals(13, rs.getByte(\"a_i\"));\n    assertEquals(13, rs.getByte(2));\n\n    assertEquals(\"hello3\", rs.getObject(\"a_s\"));\n    assertEquals(\"hello3\", rs.getObject(3));\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertEquals(\"hello3\", rs.getString(3));\n\n    assertEquals(9D, rs.getObject(\"my_float_col\"));\n    assertEquals(9D, rs.getObject(4));\n    assertEquals(9D, rs.getDouble(\"my_float_col\"), 0);\n    assertEquals(9D, rs.getDouble(4), 0);\n    assertEquals(9F, rs.getFloat(\"my_float_col\"), 0);\n    assertEquals(9F, rs.getFloat(4), 0);\n    assertEquals(9, rs.getInt(\"my_float_col\"), 0);\n    assertEquals(9, rs.getInt(4), 0);\n    assertEquals(9L, rs.getLong(\"my_float_col\"), 0);\n    assertEquals(9L, rs.getLong(4), 0);\n    assertEquals(9, rs.getShort(\"my_float_col\"), 0);\n    assertEquals(9, rs.getShort(4), 0);\n    assertEquals(9, rs.getByte(\"my_float_col\"), 0);\n    assertEquals(9, rs.getByte(4), 0);\n\n    assertFalse(rs.next());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d15e34266d75e4e8b95da046cd0afc812367b38","date":1454246129,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","sourceNew":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertTrue(rs.next());\n\n    assertEquals(14L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello0\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(10D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(10L, rs.getObject(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getObject(5));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(5));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(5), 0);\n    assertFalse(rs.wasNull());\n\n\n    assertTrue(rs.next());\n\n    assertEquals(13L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello3\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(9D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(null, rs.getObject(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getObject(5));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getString(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getString(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0D, rs.getDouble(\"testnull_i\"), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0D, rs.getDouble(5), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0F, rs.getFloat(\"testnull_i\"), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0F, rs.getFloat(5), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getInt(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getInt(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0L, rs.getLong(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0L, rs.getLong(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getShort(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getShort(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getByte(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getByte(5));\n    assertTrue(rs.wasNull());\n\n    assertFalse(rs.next());\n  }\n\n","sourceOld":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertTrue(rs.next());\n\n    assertEquals(14L, rs.getObject(\"a_i\"));\n    assertEquals(14L, rs.getObject(2));\n    assertEquals(14L, rs.getLong(\"a_i\"));\n    assertEquals(14L, rs.getLong(2));\n    assertEquals(14D, rs.getDouble(\"a_i\"), 0);\n    assertEquals(14D, rs.getDouble(2), 0);\n    assertEquals(14f, rs.getFloat(\"a_i\"), 0);\n    assertEquals(14f, rs.getFloat(2), 0);\n    assertEquals(14, rs.getShort(\"a_i\"));\n    assertEquals(14, rs.getShort(2));\n    assertEquals(14, rs.getByte(\"a_i\"));\n    assertEquals(14, rs.getByte(2));\n\n    assertEquals(\"hello0\", rs.getObject(\"a_s\"));\n    assertEquals(\"hello0\", rs.getObject(3));\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertEquals(\"hello0\", rs.getString(3));\n\n    assertEquals(10D, rs.getObject(\"my_float_col\"));\n    assertEquals(10D, rs.getObject(4));\n    assertEquals(10D, rs.getDouble(\"my_float_col\"), 0);\n    assertEquals(10D, rs.getDouble(4), 0);\n    assertEquals(10F, rs.getFloat(\"my_float_col\"), 0);\n    assertEquals(10F, rs.getFloat(4), 0);\n    assertEquals(10, rs.getInt(\"my_float_col\"), 0);\n    assertEquals(10, rs.getInt(4), 0);\n    assertEquals(10L, rs.getLong(\"my_float_col\"), 0);\n    assertEquals(10L, rs.getLong(4), 0);\n    assertEquals(10, rs.getShort(\"my_float_col\"), 0);\n    assertEquals(10, rs.getShort(4), 0);\n    assertEquals(10, rs.getByte(\"my_float_col\"), 0);\n    assertEquals(10, rs.getByte(4), 0);\n\n    assertTrue(rs.next());\n\n    assertEquals(13L, rs.getObject(\"a_i\"));\n    assertEquals(13L, rs.getObject(2));\n    assertEquals(13L, rs.getLong(\"a_i\"));\n    assertEquals(13L, rs.getLong(2));\n    assertEquals(13D, rs.getDouble(\"a_i\"), 0);\n    assertEquals(13D, rs.getDouble(2), 0);\n    assertEquals(13f, rs.getFloat(\"a_i\"), 0);\n    assertEquals(13f, rs.getFloat(2), 0);\n    assertEquals(13, rs.getShort(\"a_i\"));\n    assertEquals(13, rs.getShort(2));\n    assertEquals(13, rs.getByte(\"a_i\"));\n    assertEquals(13, rs.getByte(2));\n\n    assertEquals(\"hello3\", rs.getObject(\"a_s\"));\n    assertEquals(\"hello3\", rs.getObject(3));\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertEquals(\"hello3\", rs.getString(3));\n\n    assertEquals(9D, rs.getObject(\"my_float_col\"));\n    assertEquals(9D, rs.getObject(4));\n    assertEquals(9D, rs.getDouble(\"my_float_col\"), 0);\n    assertEquals(9D, rs.getDouble(4), 0);\n    assertEquals(9F, rs.getFloat(\"my_float_col\"), 0);\n    assertEquals(9F, rs.getFloat(4), 0);\n    assertEquals(9, rs.getInt(\"my_float_col\"), 0);\n    assertEquals(9, rs.getInt(4), 0);\n    assertEquals(9L, rs.getLong(\"my_float_col\"), 0);\n    assertEquals(9L, rs.getLong(4), 0);\n    assertEquals(9, rs.getShort(\"my_float_col\"), 0);\n    assertEquals(9, rs.getShort(4), 0);\n    assertEquals(9, rs.getByte(\"my_float_col\"), 0);\n    assertEquals(9, rs.getByte(4), 0);\n\n    assertFalse(rs.next());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","sourceNew":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertTrue(rs.next());\n\n    assertEquals(14L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello0\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(10D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(10L, rs.getObject(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getObject(5));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(5));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(5), 0);\n    assertFalse(rs.wasNull());\n\n\n    assertTrue(rs.next());\n\n    assertEquals(13L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello3\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(9D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(null, rs.getObject(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getObject(5));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getString(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getString(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0D, rs.getDouble(\"testnull_i\"), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0D, rs.getDouble(5), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0F, rs.getFloat(\"testnull_i\"), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0F, rs.getFloat(5), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getInt(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getInt(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0L, rs.getLong(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0L, rs.getLong(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getShort(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getShort(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getByte(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getByte(5));\n    assertTrue(rs.wasNull());\n\n    assertFalse(rs.next());\n  }\n\n","sourceOld":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertTrue(rs.next());\n    assertEquals(14, rs.getLong(\"a_i\"));\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertEquals(10, rs.getDouble(\"a_f\"), 0);\n\n    assertTrue(rs.next());\n    assertEquals(13, rs.getLong(\"a_i\"));\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertEquals(9, rs.getDouble(\"a_f\"), 0);\n\n    assertFalse(rs.next());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68858f6a73fc9f9de87216d140cf8d9caa0c7f55","date":1458772139,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","sourceNew":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertEquals(ResultSet.TYPE_FORWARD_ONLY, rs.getType());\n\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertTrue(rs.next());\n\n    assertEquals(14L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello0\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(10D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(10L, rs.getObject(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getObject(5));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(5));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(5), 0);\n    assertFalse(rs.wasNull());\n\n\n    assertTrue(rs.next());\n\n    assertEquals(13L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello3\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(9D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(null, rs.getObject(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getObject(5));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getString(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getString(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0D, rs.getDouble(\"testnull_i\"), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0D, rs.getDouble(5), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0F, rs.getFloat(\"testnull_i\"), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0F, rs.getFloat(5), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getInt(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getInt(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0L, rs.getLong(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0L, rs.getLong(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getShort(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getShort(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getByte(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getByte(5));\n    assertTrue(rs.wasNull());\n\n    assertFalse(rs.next());\n  }\n\n","sourceOld":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertTrue(rs.next());\n\n    assertEquals(14L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello0\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(10D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(10L, rs.getObject(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getObject(5));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(5));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(5), 0);\n    assertFalse(rs.wasNull());\n\n\n    assertTrue(rs.next());\n\n    assertEquals(13L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello3\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(9D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(null, rs.getObject(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getObject(5));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getString(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getString(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0D, rs.getDouble(\"testnull_i\"), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0D, rs.getDouble(5), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0F, rs.getFloat(\"testnull_i\"), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0F, rs.getFloat(5), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getInt(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getInt(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0L, rs.getLong(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0L, rs.getLong(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getShort(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getShort(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getByte(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getByte(5));\n    assertTrue(rs.wasNull());\n\n    assertFalse(rs.next());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d6d4d8974630b55c3dc0a5284a40650588bffa2","date":1461181703,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","sourceNew":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertEquals(ResultSet.TYPE_FORWARD_ONLY, rs.getType());\n    assertEquals(ResultSet.CONCUR_READ_ONLY, rs.getConcurrency());\n\n    assertEquals(ResultSet.FETCH_FORWARD, rs.getFetchDirection());\n    rs.setFetchDirection(ResultSet.FETCH_FORWARD);\n    assertEquals(ResultSet.FETCH_FORWARD, rs.getFetchDirection());\n\n    assertEquals(0, rs.getFetchSize());\n    rs.setFetchSize(10);\n    assertEquals(0, rs.getFetchSize());\n\n    assertTrue(rs.next());\n\n    assertEquals(14L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello0\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(10D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(10L, rs.getObject(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getObject(5));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(5));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(5), 0);\n    assertFalse(rs.wasNull());\n\n\n    assertTrue(rs.next());\n\n    assertEquals(13L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello3\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(9D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(null, rs.getObject(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getObject(5));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getString(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getString(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0D, rs.getDouble(\"testnull_i\"), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0D, rs.getDouble(5), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0F, rs.getFloat(\"testnull_i\"), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0F, rs.getFloat(5), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getInt(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getInt(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0L, rs.getLong(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0L, rs.getLong(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getShort(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getShort(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getByte(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getByte(5));\n    assertTrue(rs.wasNull());\n\n    assertFalse(rs.next());\n  }\n\n","sourceOld":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertEquals(ResultSet.TYPE_FORWARD_ONLY, rs.getType());\n\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertTrue(rs.next());\n\n    assertEquals(14L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello0\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(10D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(10L, rs.getObject(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getObject(5));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(5));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(5), 0);\n    assertFalse(rs.wasNull());\n\n\n    assertTrue(rs.next());\n\n    assertEquals(13L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello3\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(9D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(null, rs.getObject(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getObject(5));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getString(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getString(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0D, rs.getDouble(\"testnull_i\"), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0D, rs.getDouble(5), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0F, rs.getFloat(\"testnull_i\"), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0F, rs.getFloat(5), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getInt(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getInt(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0L, rs.getLong(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0L, rs.getLong(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getShort(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getShort(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getByte(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getByte(5));\n    assertTrue(rs.wasNull());\n\n    assertFalse(rs.next());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b701e0fcef214f86bab1daf107adce0b0131212","date":1461241874,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","sourceNew":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertEquals(ResultSet.TYPE_FORWARD_ONLY, rs.getType());\n    assertEquals(ResultSet.CONCUR_READ_ONLY, rs.getConcurrency());\n\n    assertEquals(ResultSet.FETCH_FORWARD, rs.getFetchDirection());\n    rs.setFetchDirection(ResultSet.FETCH_FORWARD);\n    assertEquals(ResultSet.FETCH_FORWARD, rs.getFetchDirection());\n\n    assertEquals(0, rs.getFetchSize());\n    rs.setFetchSize(10);\n    assertEquals(0, rs.getFetchSize());\n\n    assertTrue(rs.next());\n\n    assertEquals(14L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello0\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(10D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(10L, rs.getObject(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getObject(5));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(5));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(5), 0);\n    assertFalse(rs.wasNull());\n\n\n    assertTrue(rs.next());\n\n    assertEquals(13L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello3\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(9D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(null, rs.getObject(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getObject(5));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getString(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getString(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0D, rs.getDouble(\"testnull_i\"), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0D, rs.getDouble(5), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0F, rs.getFloat(\"testnull_i\"), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0F, rs.getFloat(5), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getInt(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getInt(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0L, rs.getLong(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0L, rs.getLong(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getShort(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getShort(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getByte(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getByte(5));\n    assertTrue(rs.wasNull());\n\n    assertFalse(rs.next());\n  }\n\n","sourceOld":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertEquals(ResultSet.TYPE_FORWARD_ONLY, rs.getType());\n\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertTrue(rs.next());\n\n    assertEquals(14L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello0\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(10D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(10L, rs.getObject(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getObject(5));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(5));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(5), 0);\n    assertFalse(rs.wasNull());\n\n\n    assertTrue(rs.next());\n\n    assertEquals(13L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello3\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(9D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(null, rs.getObject(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getObject(5));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getString(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getString(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0D, rs.getDouble(\"testnull_i\"), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0D, rs.getDouble(5), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0F, rs.getFloat(\"testnull_i\"), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0F, rs.getFloat(5), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getInt(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getInt(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0L, rs.getLong(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0L, rs.getLong(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getShort(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getShort(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getByte(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getByte(5));\n    assertTrue(rs.wasNull());\n\n    assertFalse(rs.next());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ccf12c30236c236d7608326ff9e82536164630bb","date":1477603043,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","sourceNew":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertEquals(ResultSet.TYPE_FORWARD_ONLY, rs.getType());\n    assertEquals(ResultSet.CONCUR_READ_ONLY, rs.getConcurrency());\n\n    assertEquals(ResultSet.FETCH_FORWARD, rs.getFetchDirection());\n    rs.setFetchDirection(ResultSet.FETCH_FORWARD);\n    assertEquals(ResultSet.FETCH_FORWARD, rs.getFetchDirection());\n\n    assertEquals(0, rs.getFetchSize());\n    rs.setFetchSize(10);\n    assertEquals(0, rs.getFetchSize());\n\n    assertTrue(rs.next());\n\n    assertEquals(14L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello0\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(10D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(10L, rs.getObject(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getObject(5));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(5));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(5), 0);\n    assertFalse(rs.wasNull());\n\n\n    assertTrue(rs.next());\n\n    assertEquals(13L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello3\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(9D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    // TODO figure out null checks?\n//    assertEquals(null, rs.getObject(\"testnull_i\"));\n//    assertTrue(rs.wasNull());\n//    assertEquals(null, rs.getObject(5));\n//    assertTrue(rs.wasNull());\n//    assertEquals(null, rs.getString(\"testnull_i\"));\n//    assertTrue(rs.wasNull());\n//    assertEquals(null, rs.getString(5));\n//    assertTrue(rs.wasNull());\n//    assertEquals(0D, rs.getDouble(\"testnull_i\"), 0);\n//    assertTrue(rs.wasNull());\n//    assertEquals(0D, rs.getDouble(5), 0);\n//    assertTrue(rs.wasNull());\n//    assertEquals(0F, rs.getFloat(\"testnull_i\"), 0);\n//    assertTrue(rs.wasNull());\n//    assertEquals(0F, rs.getFloat(5), 0);\n//    assertTrue(rs.wasNull());\n//    assertEquals(0, rs.getInt(\"testnull_i\"));\n//    assertTrue(rs.wasNull());\n//    assertEquals(0, rs.getInt(5));\n//    assertTrue(rs.wasNull());\n//    assertEquals(0L, rs.getLong(\"testnull_i\"));\n//    assertTrue(rs.wasNull());\n//    assertEquals(0L, rs.getLong(5));\n//    assertTrue(rs.wasNull());\n//    assertEquals(0, rs.getShort(\"testnull_i\"));\n//    assertTrue(rs.wasNull());\n//    assertEquals(0, rs.getShort(5));\n//    assertTrue(rs.wasNull());\n//    assertEquals(0, rs.getByte(\"testnull_i\"));\n//    assertTrue(rs.wasNull());\n//    assertEquals(0, rs.getByte(5));\n//    assertTrue(rs.wasNull());\n\n    assertFalse(rs.next());\n  }\n\n","sourceOld":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertEquals(ResultSet.TYPE_FORWARD_ONLY, rs.getType());\n    assertEquals(ResultSet.CONCUR_READ_ONLY, rs.getConcurrency());\n\n    assertEquals(ResultSet.FETCH_FORWARD, rs.getFetchDirection());\n    rs.setFetchDirection(ResultSet.FETCH_FORWARD);\n    assertEquals(ResultSet.FETCH_FORWARD, rs.getFetchDirection());\n\n    assertEquals(0, rs.getFetchSize());\n    rs.setFetchSize(10);\n    assertEquals(0, rs.getFetchSize());\n\n    assertTrue(rs.next());\n\n    assertEquals(14L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello0\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(10D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(10L, rs.getObject(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getObject(5));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(5));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(5), 0);\n    assertFalse(rs.wasNull());\n\n\n    assertTrue(rs.next());\n\n    assertEquals(13L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello3\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(9D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(null, rs.getObject(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getObject(5));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getString(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getString(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0D, rs.getDouble(\"testnull_i\"), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0D, rs.getDouble(5), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0F, rs.getFloat(\"testnull_i\"), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0F, rs.getFloat(5), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getInt(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getInt(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0L, rs.getLong(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0L, rs.getLong(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getShort(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getShort(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getByte(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getByte(5));\n    assertTrue(rs.wasNull());\n\n    assertFalse(rs.next());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"612da0a0a2d5f4409da55729b9833e799f905ac5","date":1479142562,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#checkResultSet(ResultSet).mjava","sourceNew":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertEquals(ResultSet.TYPE_FORWARD_ONLY, rs.getType());\n    assertEquals(ResultSet.CONCUR_READ_ONLY, rs.getConcurrency());\n\n    assertEquals(ResultSet.FETCH_FORWARD, rs.getFetchDirection());\n    rs.setFetchDirection(ResultSet.FETCH_FORWARD);\n    assertEquals(ResultSet.FETCH_FORWARD, rs.getFetchDirection());\n\n    assertEquals(0, rs.getFetchSize());\n    rs.setFetchSize(10);\n    assertEquals(0, rs.getFetchSize());\n\n    assertTrue(rs.next());\n\n    assertEquals(14L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello0\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(10D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(10L, rs.getObject(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getObject(5));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(5));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(5), 0);\n    assertFalse(rs.wasNull());\n\n\n    assertTrue(rs.next());\n\n    assertEquals(13L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello3\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(9D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(null, rs.getObject(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getObject(5));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getString(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(null, rs.getString(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0D, rs.getDouble(\"testnull_i\"), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0D, rs.getDouble(5), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0F, rs.getFloat(\"testnull_i\"), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0F, rs.getFloat(5), 0);\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getInt(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getInt(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0L, rs.getLong(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0L, rs.getLong(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getShort(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getShort(5));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getByte(\"testnull_i\"));\n    assertTrue(rs.wasNull());\n    assertEquals(0, rs.getByte(5));\n    assertTrue(rs.wasNull());\n\n    assertFalse(rs.next());\n  }\n\n","sourceOld":"  private void checkResultSet(ResultSet rs) throws Exception {\n    assertNull(rs.getWarnings());\n    rs.clearWarnings();\n    assertNull(rs.getWarnings());\n\n    assertEquals(ResultSet.TYPE_FORWARD_ONLY, rs.getType());\n    assertEquals(ResultSet.CONCUR_READ_ONLY, rs.getConcurrency());\n\n    assertEquals(ResultSet.FETCH_FORWARD, rs.getFetchDirection());\n    rs.setFetchDirection(ResultSet.FETCH_FORWARD);\n    assertEquals(ResultSet.FETCH_FORWARD, rs.getFetchDirection());\n\n    assertEquals(0, rs.getFetchSize());\n    rs.setFetchSize(10);\n    assertEquals(0, rs.getFetchSize());\n\n    assertTrue(rs.next());\n\n    assertEquals(14L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(14, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello0\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello0\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(10D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    assertEquals(10L, rs.getObject(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getObject(5));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(\"testnull_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"10\", rs.getString(5));\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10D, rs.getDouble(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10F, rs.getFloat(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getInt(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10L, rs.getLong(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getShort(5), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(\"testnull_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(10, rs.getByte(5), 0);\n    assertFalse(rs.wasNull());\n\n\n    assertTrue(rs.next());\n\n    assertEquals(13L, rs.getObject(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getObject(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13L, rs.getLong(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13D, rs.getDouble(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(\"a_i\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13f, rs.getFloat(2), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getShort(2));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(\"a_i\"));\n    assertFalse(rs.wasNull());\n    assertEquals(13, rs.getByte(2));\n    assertFalse(rs.wasNull());\n\n    assertEquals(\"hello3\", rs.getObject(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getObject(3));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(\"a_s\"));\n    assertFalse(rs.wasNull());\n    assertEquals(\"hello3\", rs.getString(3));\n    assertFalse(rs.wasNull());\n\n    assertEquals(9D, rs.getObject(\"my_float_col\"));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getObject(4));\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9D, rs.getDouble(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9F, rs.getFloat(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getInt(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9L, rs.getLong(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getShort(4), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(\"my_float_col\"), 0);\n    assertFalse(rs.wasNull());\n    assertEquals(9, rs.getByte(4), 0);\n    assertFalse(rs.wasNull());\n\n    // TODO figure out null checks?\n//    assertEquals(null, rs.getObject(\"testnull_i\"));\n//    assertTrue(rs.wasNull());\n//    assertEquals(null, rs.getObject(5));\n//    assertTrue(rs.wasNull());\n//    assertEquals(null, rs.getString(\"testnull_i\"));\n//    assertTrue(rs.wasNull());\n//    assertEquals(null, rs.getString(5));\n//    assertTrue(rs.wasNull());\n//    assertEquals(0D, rs.getDouble(\"testnull_i\"), 0);\n//    assertTrue(rs.wasNull());\n//    assertEquals(0D, rs.getDouble(5), 0);\n//    assertTrue(rs.wasNull());\n//    assertEquals(0F, rs.getFloat(\"testnull_i\"), 0);\n//    assertTrue(rs.wasNull());\n//    assertEquals(0F, rs.getFloat(5), 0);\n//    assertTrue(rs.wasNull());\n//    assertEquals(0, rs.getInt(\"testnull_i\"));\n//    assertTrue(rs.wasNull());\n//    assertEquals(0, rs.getInt(5));\n//    assertTrue(rs.wasNull());\n//    assertEquals(0L, rs.getLong(\"testnull_i\"));\n//    assertTrue(rs.wasNull());\n//    assertEquals(0L, rs.getLong(5));\n//    assertTrue(rs.wasNull());\n//    assertEquals(0, rs.getShort(\"testnull_i\"));\n//    assertTrue(rs.wasNull());\n//    assertEquals(0, rs.getShort(5));\n//    assertTrue(rs.wasNull());\n//    assertEquals(0, rs.getByte(\"testnull_i\"));\n//    assertTrue(rs.wasNull());\n//    assertEquals(0, rs.getByte(5));\n//    assertTrue(rs.wasNull());\n\n    assertFalse(rs.next());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9b701e0fcef214f86bab1daf107adce0b0131212":["68858f6a73fc9f9de87216d140cf8d9caa0c7f55","9d6d4d8974630b55c3dc0a5284a40650588bffa2"],"612da0a0a2d5f4409da55729b9833e799f905ac5":["ccf12c30236c236d7608326ff9e82536164630bb"],"b5738a8f61985edac306006fb13d667a26236414":["454707440cee820dfa096b7a8f7544bb3ad27db4"],"68858f6a73fc9f9de87216d140cf8d9caa0c7f55":["8d15e34266d75e4e8b95da046cd0afc812367b38"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["454707440cee820dfa096b7a8f7544bb3ad27db4","8d15e34266d75e4e8b95da046cd0afc812367b38"],"8002782dd7fef31376fe9c711d16558f2eb34fff":["b5738a8f61985edac306006fb13d667a26236414"],"207c4c6d956f2478acc8b16d31636c5efaf4125a":["8002782dd7fef31376fe9c711d16558f2eb34fff"],"b5b786e8a2ab6d8bb552c5bac69728c7d2983266":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"454707440cee820dfa096b7a8f7544bb3ad27db4":["b5b786e8a2ab6d8bb552c5bac69728c7d2983266"],"c39fd399a800c79eff2beaad702c9b6190d499fd":["207c4c6d956f2478acc8b16d31636c5efaf4125a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d6d4d8974630b55c3dc0a5284a40650588bffa2":["68858f6a73fc9f9de87216d140cf8d9caa0c7f55"],"ccf12c30236c236d7608326ff9e82536164630bb":["9b701e0fcef214f86bab1daf107adce0b0131212"],"8d15e34266d75e4e8b95da046cd0afc812367b38":["207c4c6d956f2478acc8b16d31636c5efaf4125a","c39fd399a800c79eff2beaad702c9b6190d499fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9b701e0fcef214f86bab1daf107adce0b0131212"]},"commit2Childs":{"9b701e0fcef214f86bab1daf107adce0b0131212":["ccf12c30236c236d7608326ff9e82536164630bb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"612da0a0a2d5f4409da55729b9833e799f905ac5":[],"b5738a8f61985edac306006fb13d667a26236414":["8002782dd7fef31376fe9c711d16558f2eb34fff"],"68858f6a73fc9f9de87216d140cf8d9caa0c7f55":["9b701e0fcef214f86bab1daf107adce0b0131212","9d6d4d8974630b55c3dc0a5284a40650588bffa2"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"8002782dd7fef31376fe9c711d16558f2eb34fff":["207c4c6d956f2478acc8b16d31636c5efaf4125a"],"207c4c6d956f2478acc8b16d31636c5efaf4125a":["c39fd399a800c79eff2beaad702c9b6190d499fd","8d15e34266d75e4e8b95da046cd0afc812367b38"],"b5b786e8a2ab6d8bb552c5bac69728c7d2983266":["454707440cee820dfa096b7a8f7544bb3ad27db4"],"454707440cee820dfa096b7a8f7544bb3ad27db4":["b5738a8f61985edac306006fb13d667a26236414","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"c39fd399a800c79eff2beaad702c9b6190d499fd":["8d15e34266d75e4e8b95da046cd0afc812367b38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b5b786e8a2ab6d8bb552c5bac69728c7d2983266"],"9d6d4d8974630b55c3dc0a5284a40650588bffa2":["9b701e0fcef214f86bab1daf107adce0b0131212"],"ccf12c30236c236d7608326ff9e82536164630bb":["612da0a0a2d5f4409da55729b9833e799f905ac5"],"8d15e34266d75e4e8b95da046cd0afc812367b38":["68858f6a73fc9f9de87216d140cf8d9caa0c7f55","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["612da0a0a2d5f4409da55729b9833e799f905ac5","1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}