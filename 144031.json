{"path":"contrib/snowball/src/java/net/sf/snowball/ext/PortugueseStemmer#stem().mjava","commits":[{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/snowball/src/java/net/sf/snowball/ext/PortugueseStemmer#stem().mjava","pathOld":"sandbox/contributions/snowball/src/java/net/sf/snowball/ext/PortugueseStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            // (, line 199\n            // do, line 200\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 200\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 201\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 201\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 202\n            limit_backward = cursor; cursor = limit;\n            // (, line 202\n            // do, line 203\n            v_3 = limit - cursor;\n            lab2: do {\n                // (, line 203\n                // or, line 207\n                lab3: do {\n                    v_4 = limit - cursor;\n                    lab4: do {\n                        // (, line 204\n                        // or, line 204\n                        lab5: do {\n                            v_5 = limit - cursor;\n                            lab6: do {\n                                // call standard_suffix, line 204\n                                if (!r_standard_suffix())\n                                {\n                                    break lab6;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_5;\n                            // call verb_suffix, line 204\n                            if (!r_verb_suffix())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                        // do, line 205\n                        v_6 = limit - cursor;\n                        lab7: do {\n                            // (, line 205\n                            // [, line 205\n                            ket = cursor;\n                            // literal, line 205\n                            if (!(eq_s_b(1, \"i\")))\n                            {\n                                break lab7;\n                            }\n                            // ], line 205\n                            bra = cursor;\n                            // test, line 205\n                            v_7 = limit - cursor;\n                            // literal, line 205\n                            if (!(eq_s_b(1, \"c\")))\n                            {\n                                break lab7;\n                            }\n                            cursor = limit - v_7;\n                            // call RV, line 205\n                            if (!r_RV())\n                            {\n                                break lab7;\n                            }\n                            // delete, line 205\n                            slice_del();\n                        } while (false);\n                        cursor = limit - v_6;\n                        break lab3;\n                    } while (false);\n                    cursor = limit - v_4;\n                    // call residual_suffix, line 207\n                    if (!r_residual_suffix())\n                    {\n                        break lab2;\n                    }\n                } while (false);\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 209\n            v_8 = limit - cursor;\n            lab8: do {\n                // call residual_form, line 209\n                if (!r_residual_form())\n                {\n                    break lab8;\n                }\n            } while (false);\n            cursor = limit - v_8;\n            cursor = limit_backward;            // do, line 211\n            v_9 = cursor;\n            lab9: do {\n                // call postlude, line 211\n                if (!r_postlude())\n                {\n                    break lab9;\n                }\n            } while (false);\n            cursor = v_9;\n            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            // (, line 199\n            // do, line 200\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 200\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 201\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 201\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 202\n            limit_backward = cursor; cursor = limit;\n            // (, line 202\n            // do, line 203\n            v_3 = limit - cursor;\n            lab2: do {\n                // (, line 203\n                // or, line 207\n                lab3: do {\n                    v_4 = limit - cursor;\n                    lab4: do {\n                        // (, line 204\n                        // or, line 204\n                        lab5: do {\n                            v_5 = limit - cursor;\n                            lab6: do {\n                                // call standard_suffix, line 204\n                                if (!r_standard_suffix())\n                                {\n                                    break lab6;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_5;\n                            // call verb_suffix, line 204\n                            if (!r_verb_suffix())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                        // do, line 205\n                        v_6 = limit - cursor;\n                        lab7: do {\n                            // (, line 205\n                            // [, line 205\n                            ket = cursor;\n                            // literal, line 205\n                            if (!(eq_s_b(1, \"i\")))\n                            {\n                                break lab7;\n                            }\n                            // ], line 205\n                            bra = cursor;\n                            // test, line 205\n                            v_7 = limit - cursor;\n                            // literal, line 205\n                            if (!(eq_s_b(1, \"c\")))\n                            {\n                                break lab7;\n                            }\n                            cursor = limit - v_7;\n                            // call RV, line 205\n                            if (!r_RV())\n                            {\n                                break lab7;\n                            }\n                            // delete, line 205\n                            slice_del();\n                        } while (false);\n                        cursor = limit - v_6;\n                        break lab3;\n                    } while (false);\n                    cursor = limit - v_4;\n                    // call residual_suffix, line 207\n                    if (!r_residual_suffix())\n                    {\n                        break lab2;\n                    }\n                } while (false);\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 209\n            v_8 = limit - cursor;\n            lab8: do {\n                // call residual_form, line 209\n                if (!r_residual_form())\n                {\n                    break lab8;\n                }\n            } while (false);\n            cursor = limit - v_8;\n            cursor = limit_backward;            // do, line 211\n            v_9 = cursor;\n            lab9: do {\n                // call postlude, line 211\n                if (!r_postlude())\n                {\n                    break lab9;\n                }\n            } while (false);\n            cursor = v_9;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92d25652eba878ed741542edbbb0f3514c11b3b8","date":1111020091,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/snowball/src/java/net/sf/snowball/ext/PortugueseStemmer#stem().mjava","pathOld":"contrib/snowball/src/java/net/sf/snowball/ext/PortugueseStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            // (, line 199\n            // do, line 200\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 200\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 201\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 201\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 202\n            limit_backward = cursor; cursor = limit;\n            // (, line 202\n            // do, line 203\n            v_3 = limit - cursor;\n            lab2: do {\n                // (, line 203\n                // or, line 207\n                lab3: do {\n                    v_4 = limit - cursor;\n                    lab4: do {\n                        // (, line 204\n                        // and, line 205\n                        v_5 = limit - cursor;\n                        // (, line 204\n                        // or, line 204\n                        lab5: do {\n                            v_6 = limit - cursor;\n                            lab6: do {\n                                // call standard_suffix, line 204\n                                if (!r_standard_suffix())\n                                {\n                                    break lab6;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // call verb_suffix, line 204\n                            if (!r_verb_suffix())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                        cursor = limit - v_5;\n                        // do, line 205\n                        v_7 = limit - cursor;\n                        lab7: do {\n                            // (, line 205\n                            // [, line 205\n                            ket = cursor;\n                            // literal, line 205\n                            if (!(eq_s_b(1, \"i\")))\n                            {\n                                break lab7;\n                            }\n                            // ], line 205\n                            bra = cursor;\n                            // test, line 205\n                            v_8 = limit - cursor;\n                            // literal, line 205\n                            if (!(eq_s_b(1, \"c\")))\n                            {\n                                break lab7;\n                            }\n                            cursor = limit - v_8;\n                            // call RV, line 205\n                            if (!r_RV())\n                            {\n                                break lab7;\n                            }\n                            // delete, line 205\n                            slice_del();\n                        } while (false);\n                        cursor = limit - v_7;\n                        break lab3;\n                    } while (false);\n                    cursor = limit - v_4;\n                    // call residual_suffix, line 207\n                    if (!r_residual_suffix())\n                    {\n                        break lab2;\n                    }\n                } while (false);\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 209\n            v_9 = limit - cursor;\n            lab8: do {\n                // call residual_form, line 209\n                if (!r_residual_form())\n                {\n                    break lab8;\n                }\n            } while (false);\n            cursor = limit - v_9;\n            cursor = limit_backward;            // do, line 211\n            v_10 = cursor;\n            lab9: do {\n                // call postlude, line 211\n                if (!r_postlude())\n                {\n                    break lab9;\n                }\n            } while (false);\n            cursor = v_10;\n            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            // (, line 199\n            // do, line 200\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 200\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 201\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 201\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 202\n            limit_backward = cursor; cursor = limit;\n            // (, line 202\n            // do, line 203\n            v_3 = limit - cursor;\n            lab2: do {\n                // (, line 203\n                // or, line 207\n                lab3: do {\n                    v_4 = limit - cursor;\n                    lab4: do {\n                        // (, line 204\n                        // or, line 204\n                        lab5: do {\n                            v_5 = limit - cursor;\n                            lab6: do {\n                                // call standard_suffix, line 204\n                                if (!r_standard_suffix())\n                                {\n                                    break lab6;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_5;\n                            // call verb_suffix, line 204\n                            if (!r_verb_suffix())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                        // do, line 205\n                        v_6 = limit - cursor;\n                        lab7: do {\n                            // (, line 205\n                            // [, line 205\n                            ket = cursor;\n                            // literal, line 205\n                            if (!(eq_s_b(1, \"i\")))\n                            {\n                                break lab7;\n                            }\n                            // ], line 205\n                            bra = cursor;\n                            // test, line 205\n                            v_7 = limit - cursor;\n                            // literal, line 205\n                            if (!(eq_s_b(1, \"c\")))\n                            {\n                                break lab7;\n                            }\n                            cursor = limit - v_7;\n                            // call RV, line 205\n                            if (!r_RV())\n                            {\n                                break lab7;\n                            }\n                            // delete, line 205\n                            slice_del();\n                        } while (false);\n                        cursor = limit - v_6;\n                        break lab3;\n                    } while (false);\n                    cursor = limit - v_4;\n                    // call residual_suffix, line 207\n                    if (!r_residual_suffix())\n                    {\n                        break lab2;\n                    }\n                } while (false);\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 209\n            v_8 = limit - cursor;\n            lab8: do {\n                // call residual_form, line 209\n                if (!r_residual_form())\n                {\n                    break lab8;\n                }\n            } while (false);\n            cursor = limit - v_8;\n            cursor = limit_backward;            // do, line 211\n            v_9 = cursor;\n            lab9: do {\n                // call postlude, line 211\n                if (!r_postlude())\n                {\n                    break lab9;\n                }\n            } while (false);\n            cursor = v_9;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b62da6a75575f59a016a076b4753dc6e20c74b44","date":1219528967,"type":5,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/PortugueseStemmer#stem().mjava","pathOld":"contrib/snowball/src/java/net/sf/snowball/ext/PortugueseStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            // (, line 201\n            // do, line 202\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 202\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 203\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 203\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 204\n            limit_backward = cursor; cursor = limit;\n            // (, line 204\n            // do, line 205\n            v_3 = limit - cursor;\n            lab2: do {\n                // (, line 205\n                // or, line 209\n                lab3: do {\n                    v_4 = limit - cursor;\n                    lab4: do {\n                        // (, line 206\n                        // and, line 207\n                        v_5 = limit - cursor;\n                        // (, line 206\n                        // or, line 206\n                        lab5: do {\n                            v_6 = limit - cursor;\n                            lab6: do {\n                                // call standard_suffix, line 206\n                                if (!r_standard_suffix())\n                                {\n                                    break lab6;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // call verb_suffix, line 206\n                            if (!r_verb_suffix())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                        cursor = limit - v_5;\n                        // do, line 207\n                        v_7 = limit - cursor;\n                        lab7: do {\n                            // (, line 207\n                            // [, line 207\n                            ket = cursor;\n                            // literal, line 207\n                            if (!(eq_s_b(1, \"i\")))\n                            {\n                                break lab7;\n                            }\n                            // ], line 207\n                            bra = cursor;\n                            // test, line 207\n                            v_8 = limit - cursor;\n                            // literal, line 207\n                            if (!(eq_s_b(1, \"c\")))\n                            {\n                                break lab7;\n                            }\n                            cursor = limit - v_8;\n                            // call RV, line 207\n                            if (!r_RV())\n                            {\n                                break lab7;\n                            }\n                            // delete, line 207\n                            slice_del();\n                        } while (false);\n                        cursor = limit - v_7;\n                        break lab3;\n                    } while (false);\n                    cursor = limit - v_4;\n                    // call residual_suffix, line 209\n                    if (!r_residual_suffix())\n                    {\n                        break lab2;\n                    }\n                } while (false);\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 211\n            v_9 = limit - cursor;\n            lab8: do {\n                // call residual_form, line 211\n                if (!r_residual_form())\n                {\n                    break lab8;\n                }\n            } while (false);\n            cursor = limit - v_9;\n            cursor = limit_backward;            // do, line 213\n            v_10 = cursor;\n            lab9: do {\n                // call postlude, line 213\n                if (!r_postlude())\n                {\n                    break lab9;\n                }\n            } while (false);\n            cursor = v_10;\n            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            // (, line 199\n            // do, line 200\n            v_1 = cursor;\n            lab0: do {\n                // call prelude, line 200\n                if (!r_prelude())\n                {\n                    break lab0;\n                }\n            } while (false);\n            cursor = v_1;\n            // do, line 201\n            v_2 = cursor;\n            lab1: do {\n                // call mark_regions, line 201\n                if (!r_mark_regions())\n                {\n                    break lab1;\n                }\n            } while (false);\n            cursor = v_2;\n            // backwards, line 202\n            limit_backward = cursor; cursor = limit;\n            // (, line 202\n            // do, line 203\n            v_3 = limit - cursor;\n            lab2: do {\n                // (, line 203\n                // or, line 207\n                lab3: do {\n                    v_4 = limit - cursor;\n                    lab4: do {\n                        // (, line 204\n                        // and, line 205\n                        v_5 = limit - cursor;\n                        // (, line 204\n                        // or, line 204\n                        lab5: do {\n                            v_6 = limit - cursor;\n                            lab6: do {\n                                // call standard_suffix, line 204\n                                if (!r_standard_suffix())\n                                {\n                                    break lab6;\n                                }\n                                break lab5;\n                            } while (false);\n                            cursor = limit - v_6;\n                            // call verb_suffix, line 204\n                            if (!r_verb_suffix())\n                            {\n                                break lab4;\n                            }\n                        } while (false);\n                        cursor = limit - v_5;\n                        // do, line 205\n                        v_7 = limit - cursor;\n                        lab7: do {\n                            // (, line 205\n                            // [, line 205\n                            ket = cursor;\n                            // literal, line 205\n                            if (!(eq_s_b(1, \"i\")))\n                            {\n                                break lab7;\n                            }\n                            // ], line 205\n                            bra = cursor;\n                            // test, line 205\n                            v_8 = limit - cursor;\n                            // literal, line 205\n                            if (!(eq_s_b(1, \"c\")))\n                            {\n                                break lab7;\n                            }\n                            cursor = limit - v_8;\n                            // call RV, line 205\n                            if (!r_RV())\n                            {\n                                break lab7;\n                            }\n                            // delete, line 205\n                            slice_del();\n                        } while (false);\n                        cursor = limit - v_7;\n                        break lab3;\n                    } while (false);\n                    cursor = limit - v_4;\n                    // call residual_suffix, line 207\n                    if (!r_residual_suffix())\n                    {\n                        break lab2;\n                    }\n                } while (false);\n            } while (false);\n            cursor = limit - v_3;\n            // do, line 209\n            v_9 = limit - cursor;\n            lab8: do {\n                // call residual_form, line 209\n                if (!r_residual_form())\n                {\n                    break lab8;\n                }\n            } while (false);\n            cursor = limit - v_9;\n            cursor = limit_backward;            // do, line 211\n            v_10 = cursor;\n            lab9: do {\n                // call postlude, line 211\n                if (!r_postlude())\n                {\n                    break lab9;\n                }\n            } while (false);\n            cursor = v_10;\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["92d25652eba878ed741542edbbb0f3514c11b3b8"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"92d25652eba878ed741542edbbb0f3514c11b3b8":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b62da6a75575f59a016a076b4753dc6e20c74b44"]},"commit2Childs":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["92d25652eba878ed741542edbbb0f3514c11b3b8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"92d25652eba878ed741542edbbb0f3514c11b3b8":["b62da6a75575f59a016a076b4753dc6e20c74b44"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}