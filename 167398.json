{"path":"solr/core/src/test/org/apache/solr/search/join/TestScoreJoinQPScore#testSimple().mjava","commits":[{"id":"6eecfe8d494cb2e3ead94e9cdb9381bfe4993dcd","date":1438089844,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/join/TestScoreJoinQPScore#testSimple().mjava","pathOld":"/dev/null","sourceNew":"  public void testSimple() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId_s\";\n\n    clearIndex();\n\n    // 0\n    assertU(add(doc(\"t_description\", \"random text\",\n        \"name\", \"name1\",\n        idField, \"1\")));\n\n// 1\n\n    assertU(add(doc(\"price_s\", \"10.0\",\n        idField, \"2\",\n        toField, \"1\")));\n// 2\n    assertU(add(doc(\"price_s\", \"20.0\",\n        idField, \"3\",\n        toField, \"1\")));\n// 3\n    assertU(add(doc(\"t_description\", \"more random text\",\n        \"name\", \"name2\",\n        idField, \"4\")));\n// 4\n    assertU(add(doc(\"price_s\", \"10.0\",\n        idField, \"5\",\n        toField, \"4\")));\n// 5\n    assertU(add(doc(\"price_s\", \"20.0\",\n        idField, \"6\",\n        toField, \"4\")));\n\n    assertU(commit());\n\n    // Search for product\n    assertJQ(req(\"q\", \"{!join from=\" + idField + \" to=\" + toField + \" score=None}name:name2\", \"fl\", \"id\")\n        , \"/response=={'numFound':2,'start':0,'docs':[{'id':'5'},{'id':'6'}]}\");\n    \n    /*Query joinQuery =\n        JoinUtil.createJoinQuery(idField, false, toField, new TermQuery(new Term(\"name\", \"name2\")), indexSearcher, ScoreMode.None);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(4, result.scoreDocs[0].doc);\n    assertEquals(5, result.scoreDocs[1].doc);\n    */\n    assertJQ(req(\"q\", \"{!join from=\" + idField + \" to=\" + toField + \" score=None}name:name1\", \"fl\", \"id\")\n        , \"/response=={'numFound':2,'start':0,'docs':[{'id':'2'},{'id':'3'}]}\");\n\n    /*joinQuery = JoinUtil.createJoinQuery(idField, false, toField, new TermQuery(new Term(\"name\", \"name1\")), indexSearcher, ScoreMode.None);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(1, result.scoreDocs[0].doc);\n    assertEquals(2, result.scoreDocs[1].doc);*/\n\n    // Search for offer\n    assertJQ(req(\"q\", \"{!join from=\" + toField + \" to=\" + idField + \" score=None}id:5\", \"fl\", \"id\")\n        , \"/response=={'numFound':1,'start':0,'docs':[{'id':'4'}]}\");\n    /*joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"id\", \"5\")), indexSearcher, ScoreMode.None);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();*/\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"640ded7811e1b7d29236a5e2934ec3cd266a8199","date":1588973147,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/join/TestScoreJoinQPScore#testSimple().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/join/TestScoreJoinQPScore#testSimple().mjava","sourceNew":"  public void testSimple() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId_s\";\n\n    clearIndex();\n\n    // 0\n    assertU(add(doc(\"t_description\", \"random text\",\n        \"name\", \"name1\",\n        idField, \"1\")));\n\n// 1\n\n    assertU(add(doc(\"price_s\", \"10.0\",\n        idField, \"2\",\n        toField, \"1\")));\n// 2\n    assertU(add(doc(\"price_s\", \"20.0\",\n        idField, \"3\",\n        toField, \"1\")));\n// 3\n    assertU(add(doc(\"t_description\", \"more random text\",\n        \"name\", \"name2\",\n        idField, \"4\")));\n// 4\n    assertU(add(doc(\"price_s\", \"10.0\",\n        idField, \"5\",\n        toField, \"4\")));\n// 5\n    assertU(add(doc(\"price_s\", \"20.0\",\n        idField, \"6\",\n        toField, \"4\")));\n\n    assertU(commit());\n\n    // Search for product\n    assertJQ(req(\"q\", \"{!join from=\" + idField + \" to=\" + toField + \" score=None}name:name2\", \"fl\", \"id\")\n        , \"/response=={'numFound':2,'start':0,'numFoundExact':true,'docs':[{'id':'5'},{'id':'6'}]}\");\n    \n    /*Query joinQuery =\n        JoinUtil.createJoinQuery(idField, false, toField, new TermQuery(new Term(\"name\", \"name2\")), indexSearcher, ScoreMode.None);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(4, result.scoreDocs[0].doc);\n    assertEquals(5, result.scoreDocs[1].doc);\n    */\n    assertJQ(req(\"q\", \"{!join from=\" + idField + \" to=\" + toField + \" score=None}name:name1\", \"fl\", \"id\")\n        , \"/response=={'numFound':2,'start':0,'numFoundExact':true,'docs':[{'id':'2'},{'id':'3'}]}\");\n\n    /*joinQuery = JoinUtil.createJoinQuery(idField, false, toField, new TermQuery(new Term(\"name\", \"name1\")), indexSearcher, ScoreMode.None);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(1, result.scoreDocs[0].doc);\n    assertEquals(2, result.scoreDocs[1].doc);*/\n\n    // Search for offer\n    assertJQ(req(\"q\", \"{!join from=\" + toField + \" to=\" + idField + \" score=None}id:5\", \"fl\", \"id\")\n        , \"/response=={'numFound':1,'start':0,'numFoundExact':true,'docs':[{'id':'4'}]}\");\n    /*joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"id\", \"5\")), indexSearcher, ScoreMode.None);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();*/\n  }\n\n","sourceOld":"  public void testSimple() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"productId_s\";\n\n    clearIndex();\n\n    // 0\n    assertU(add(doc(\"t_description\", \"random text\",\n        \"name\", \"name1\",\n        idField, \"1\")));\n\n// 1\n\n    assertU(add(doc(\"price_s\", \"10.0\",\n        idField, \"2\",\n        toField, \"1\")));\n// 2\n    assertU(add(doc(\"price_s\", \"20.0\",\n        idField, \"3\",\n        toField, \"1\")));\n// 3\n    assertU(add(doc(\"t_description\", \"more random text\",\n        \"name\", \"name2\",\n        idField, \"4\")));\n// 4\n    assertU(add(doc(\"price_s\", \"10.0\",\n        idField, \"5\",\n        toField, \"4\")));\n// 5\n    assertU(add(doc(\"price_s\", \"20.0\",\n        idField, \"6\",\n        toField, \"4\")));\n\n    assertU(commit());\n\n    // Search for product\n    assertJQ(req(\"q\", \"{!join from=\" + idField + \" to=\" + toField + \" score=None}name:name2\", \"fl\", \"id\")\n        , \"/response=={'numFound':2,'start':0,'docs':[{'id':'5'},{'id':'6'}]}\");\n    \n    /*Query joinQuery =\n        JoinUtil.createJoinQuery(idField, false, toField, new TermQuery(new Term(\"name\", \"name2\")), indexSearcher, ScoreMode.None);\n\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(4, result.scoreDocs[0].doc);\n    assertEquals(5, result.scoreDocs[1].doc);\n    */\n    assertJQ(req(\"q\", \"{!join from=\" + idField + \" to=\" + toField + \" score=None}name:name1\", \"fl\", \"id\")\n        , \"/response=={'numFound':2,'start':0,'docs':[{'id':'2'},{'id':'3'}]}\");\n\n    /*joinQuery = JoinUtil.createJoinQuery(idField, false, toField, new TermQuery(new Term(\"name\", \"name1\")), indexSearcher, ScoreMode.None);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(1, result.scoreDocs[0].doc);\n    assertEquals(2, result.scoreDocs[1].doc);*/\n\n    // Search for offer\n    assertJQ(req(\"q\", \"{!join from=\" + toField + \" to=\" + idField + \" score=None}id:5\", \"fl\", \"id\")\n        , \"/response=={'numFound':1,'start':0,'docs':[{'id':'4'}]}\");\n    /*joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"id\", \"5\")), indexSearcher, ScoreMode.None);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(1, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();*/\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"640ded7811e1b7d29236a5e2934ec3cd266a8199":["6eecfe8d494cb2e3ead94e9cdb9381bfe4993dcd"],"6eecfe8d494cb2e3ead94e9cdb9381bfe4993dcd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["640ded7811e1b7d29236a5e2934ec3cd266a8199"]},"commit2Childs":{"640ded7811e1b7d29236a5e2934ec3cd266a8199":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6eecfe8d494cb2e3ead94e9cdb9381bfe4993dcd":["640ded7811e1b7d29236a5e2934ec3cd266a8199"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6eecfe8d494cb2e3ead94e9cdb9381bfe4993dcd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}