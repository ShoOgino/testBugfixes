{"path":"src/java/org/apache/lucene/index/IndexReader#getFieldNames().mjava","commits":[{"id":"ee75e7ca968b4012951ebb66aa008c27293a1700","date":1041700420,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getFieldNames().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Return a list of all unique field names which exist in the index pointed to by\n     * this IndexReader.\n     * @return Collection of Strings indicating the names of the fields\n     * @throws IOException if there is a problem with accessing the index\n     */\n    public abstract Collection getFieldNames() throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6dbb14e9adf67f0e8fb9cc55a25a71063c230338","date":1051751355,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getFieldNames().mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#getFieldNames().mjava","sourceNew":"  /**\n   * Returns a list of all unique field names that exist in the index pointed to by\n   * this IndexReader.\n   * @return Collection of Strings indicating the names of the fields\n   * @throws IOException if there is a problem with accessing the index\n   */\n  public abstract Collection getFieldNames() throws IOException;\n\n","sourceOld":"    /**\n     * Return a list of all unique field names which exist in the index pointed to by\n     * this IndexReader.\n     * @return Collection of Strings indicating the names of the fields\n     * @throws IOException if there is a problem with accessing the index\n     */\n    public abstract Collection getFieldNames() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770281b8a8459cafcdd2354b6a06078fea2d83c9","date":1077308096,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getFieldNames().mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#getFieldNames().mjava","sourceNew":"  /**\n   * Returns a list of all unique field names that exist in the index pointed\n   * to by this IndexReader.\n   * @return Collection of Strings indicating the names of the fields\n   * @throws IOException if there is a problem with accessing the index\n   */\n  public abstract Collection getFieldNames() throws IOException;\n\n","sourceOld":"  /**\n   * Returns a list of all unique field names that exist in the index pointed to by\n   * this IndexReader.\n   * @return Collection of Strings indicating the names of the fields\n   * @throws IOException if there is a problem with accessing the index\n   */\n  public abstract Collection getFieldNames() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c687c6cd32bfdceab8fd653a483592265774d97","date":1104356145,"type":3,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getFieldNames().mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#getFieldNames().mjava","sourceNew":"  /**\n   * Returns a list of all unique field names that exist in the index pointed\n   * to by this IndexReader.\n   * @return Collection of Strings indicating the names of the fields\n   * @throws IOException if there is a problem with accessing the index\n   * \n   * @deprecated  Replaced by {@link #getFieldNames (IndexReader.FieldOption fldOption)}\n   */\n  public abstract Collection getFieldNames() throws IOException;\n\n","sourceOld":"  /**\n   * Returns a list of all unique field names that exist in the index pointed\n   * to by this IndexReader.\n   * @return Collection of Strings indicating the names of the fields\n   * @throws IOException if there is a problem with accessing the index\n   */\n  public abstract Collection getFieldNames() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a73aeb55b62ead403e0136272b225f2083dfef5","date":1104866701,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getFieldNames().mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#getFieldNames().mjava","sourceNew":"  /**\n   * Returns a list of all unique field names that exist in the index pointed\n   * to by this IndexReader.\n   * @return Collection of Strings indicating the names of the fields\n   * @throws IOException if there is a problem with accessing the index\n   * \n   * @deprecated  Replaced by {@link #getFieldNames(IndexReader.FieldOption)}\n   */\n  public abstract Collection getFieldNames() throws IOException;\n\n","sourceOld":"  /**\n   * Returns a list of all unique field names that exist in the index pointed\n   * to by this IndexReader.\n   * @return Collection of Strings indicating the names of the fields\n   * @throws IOException if there is a problem with accessing the index\n   * \n   * @deprecated  Replaced by {@link #getFieldNames (IndexReader.FieldOption fldOption)}\n   */\n  public abstract Collection getFieldNames() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/IndexReader#getFieldNames().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns a list of all unique field names that exist in the index pointed\n   * to by this IndexReader.\n   * @return Collection of Strings indicating the names of the fields\n   * @throws IOException if there is a problem with accessing the index\n   * \n   * @deprecated  Replaced by {@link #getFieldNames(IndexReader.FieldOption)}\n   */\n  public abstract Collection getFieldNames() throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["6dbb14e9adf67f0e8fb9cc55a25a71063c230338"],"6dbb14e9adf67f0e8fb9cc55a25a71063c230338":["ee75e7ca968b4012951ebb66aa008c27293a1700"],"8a73aeb55b62ead403e0136272b225f2083dfef5":["7c687c6cd32bfdceab8fd653a483592265774d97"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["8a73aeb55b62ead403e0136272b225f2083dfef5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ee75e7ca968b4012951ebb66aa008c27293a1700":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"7c687c6cd32bfdceab8fd653a483592265774d97":["770281b8a8459cafcdd2354b6a06078fea2d83c9"]},"commit2Childs":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["7c687c6cd32bfdceab8fd653a483592265774d97"],"6dbb14e9adf67f0e8fb9cc55a25a71063c230338":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"8a73aeb55b62ead403e0136272b225f2083dfef5":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ee75e7ca968b4012951ebb66aa008c27293a1700"],"ee75e7ca968b4012951ebb66aa008c27293a1700":["6dbb14e9adf67f0e8fb9cc55a25a71063c230338"],"7c687c6cd32bfdceab8fd653a483592265774d97":["8a73aeb55b62ead403e0136272b225f2083dfef5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}