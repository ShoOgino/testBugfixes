{"path":"lucene/highlighter/src/java/org/apache/lucene/search/matchhighlight/MatchHighlighter#contiguousFieldValue(String,String[]).mjava","commits":[{"id":"930e5c340e08514a7f57a54cf65e2f8f1f90c8f0","date":1599736633,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/matchhighlight/MatchHighlighter#contiguousFieldValue(String,String[]).mjava","pathOld":"/dev/null","sourceNew":"  private String contiguousFieldValue(String field, String[] values) {\n    String value;\n    if (values.length == 1) {\n      value = values[0];\n    } else {\n      // TODO: This can be inefficient if offset gap is large but the logic\n      // of applying offsets would get much more complicated so leaving for now\n      // (would have to recalculate all offsets to omit gaps).\n      String fieldGapPadding = \" \".repeat(analyzer.getOffsetGap(field));\n      value = String.join(fieldGapPadding, values);\n    }\n    return value;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"930e5c340e08514a7f57a54cf65e2f8f1f90c8f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["930e5c340e08514a7f57a54cf65e2f8f1f90c8f0"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["930e5c340e08514a7f57a54cf65e2f8f1f90c8f0"],"930e5c340e08514a7f57a54cf65e2f8f1f90c8f0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}