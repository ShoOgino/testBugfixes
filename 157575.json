{"path":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#createAlias(String,String).mjava","commits":[{"id":"1cfa38e36fa296bb93d77df7d5556257dffa4535","date":1362635543,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#createAlias(String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void createAlias(String alias, String collections) throws SolrServerException, IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"collections\", collections);\n    params.set(\"name\", alias);\n    params.set(\"action\", CollectionAction.CREATEALIAS.toString());\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    NamedList<Object> result = createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(0))).request(request);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"736a6aa1dd511b24b60250138d21e14a4050727b","date":1386885459,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#createAlias(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#createAlias(String,String).mjava","sourceNew":"  private void createAlias(String alias, String collections)\n      throws SolrServerException, IOException {\n    if (random().nextBoolean()) {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set(\"collections\", collections);\n      params.set(\"name\", alias);\n      params.set(\"action\", CollectionAction.CREATEALIAS.toString());\n      QueryRequest request = new QueryRequest(params);\n      request.setPath(\"/admin/collections\");\n      NamedList<Object> result = createNewSolrServer(\"\",\n          getBaseUrl((HttpSolrServer) clients.get(0))).request(request);\n    } else {\n      CollectionAdminResponse resp = CollectionAdminRequest.CreateAlias\n          .createAlias(alias, collections, createNewSolrServer(\"\",\n              getBaseUrl((HttpSolrServer) clients.get(0))));\n    }\n  }\n\n","sourceOld":"  private void createAlias(String alias, String collections) throws SolrServerException, IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"collections\", collections);\n    params.set(\"name\", alias);\n    params.set(\"action\", CollectionAction.CREATEALIAS.toString());\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    NamedList<Object> result = createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(0))).request(request);\n  }\n\n","bugFix":null,"bugIntro":["4c7856260bc28f285ae7bfefa99b28db4dca6daf","6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#createAlias(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#createAlias(String,String).mjava","sourceNew":"  private void createAlias(String alias, String collections)\n      throws SolrServerException, IOException {\n    if (random().nextBoolean()) {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set(\"collections\", collections);\n      params.set(\"name\", alias);\n      params.set(\"action\", CollectionAction.CREATEALIAS.toString());\n      QueryRequest request = new QueryRequest(params);\n      request.setPath(\"/admin/collections\");\n      NamedList<Object> result = createNewSolrServer(\"\",\n          getBaseUrl((HttpSolrServer) clients.get(0))).request(request);\n    } else {\n      CollectionAdminResponse resp = CollectionAdminRequest.CreateAlias\n          .createAlias(alias, collections, createNewSolrServer(\"\",\n              getBaseUrl((HttpSolrServer) clients.get(0))));\n    }\n  }\n\n","sourceOld":"  private void createAlias(String alias, String collections) throws SolrServerException, IOException {\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(\"collections\", collections);\n    params.set(\"name\", alias);\n    params.set(\"action\", CollectionAction.CREATEALIAS.toString());\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    NamedList<Object> result = createNewSolrServer(\"\", getBaseUrl((HttpSolrServer) clients.get(0))).request(request);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c7856260bc28f285ae7bfefa99b28db4dca6daf","date":1395253500,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#createAlias(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#createAlias(String,String).mjava","sourceNew":"  private void createAlias(String alias, String collections)\n      throws SolrServerException, IOException {\n    SolrServer server = createNewSolrServer(\"\",\n        getBaseUrl((HttpSolrServer) clients.get(0)));\n    if (random().nextBoolean()) {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set(\"collections\", collections);\n      params.set(\"name\", alias);\n      params.set(\"action\", CollectionAction.CREATEALIAS.toString());\n      QueryRequest request = new QueryRequest(params);\n      request.setPath(\"/admin/collections\");\n      server.request(request);\n    } else {\n      CollectionAdminRequest.CreateAlias.createAlias(alias, collections, server);\n    }\n    server.shutdown();\n  }\n\n","sourceOld":"  private void createAlias(String alias, String collections)\n      throws SolrServerException, IOException {\n    if (random().nextBoolean()) {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set(\"collections\", collections);\n      params.set(\"name\", alias);\n      params.set(\"action\", CollectionAction.CREATEALIAS.toString());\n      QueryRequest request = new QueryRequest(params);\n      request.setPath(\"/admin/collections\");\n      NamedList<Object> result = createNewSolrServer(\"\",\n          getBaseUrl((HttpSolrServer) clients.get(0))).request(request);\n    } else {\n      CollectionAdminResponse resp = CollectionAdminRequest.CreateAlias\n          .createAlias(alias, collections, createNewSolrServer(\"\",\n              getBaseUrl((HttpSolrServer) clients.get(0))));\n    }\n  }\n\n","bugFix":["736a6aa1dd511b24b60250138d21e14a4050727b"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4a7d7ef06ef6f04ba2de657e90e0458048a967c6","date":1409691631,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#createAlias(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#createAlias(String,String).mjava","sourceNew":"  private void createAlias(String alias, String collections)\n      throws SolrServerException, IOException {\n    SolrServer server = createNewSolrServer(\"\",\n        getBaseUrl((HttpSolrServer) clients.get(0)));\n    if (random().nextBoolean()) {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set(\"collections\", collections);\n      params.set(\"name\", alias);\n      params.set(\"action\", CollectionAction.CREATEALIAS.toString());\n      QueryRequest request = new QueryRequest(params);\n      request.setPath(\"/admin/collections\");\n      server.request(request);\n    } else {\n      CreateAlias request = new CreateAlias();\n      request.setCollectionName(alias);\n      request.setAliasedCollections(collections);\n      request.process(server);\n    }\n    server.shutdown();\n  }\n\n","sourceOld":"  private void createAlias(String alias, String collections)\n      throws SolrServerException, IOException {\n    SolrServer server = createNewSolrServer(\"\",\n        getBaseUrl((HttpSolrServer) clients.get(0)));\n    if (random().nextBoolean()) {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set(\"collections\", collections);\n      params.set(\"name\", alias);\n      params.set(\"action\", CollectionAction.CREATEALIAS.toString());\n      QueryRequest request = new QueryRequest(params);\n      request.setPath(\"/admin/collections\");\n      server.request(request);\n    } else {\n      CollectionAdminRequest.CreateAlias.createAlias(alias, collections, server);\n    }\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ec3dbdc850ca18bf4aef9acb85f2ea0554306d","date":1419896224,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#createAlias(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#createAlias(String,String).mjava","sourceNew":"  private void createAlias(String alias, String collections)\n      throws SolrServerException, IOException {\n    SolrServer server = createNewSolrServer(\"\",\n        getBaseUrl((HttpSolrServer) clients.get(0)));\n    if (random().nextBoolean()) {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set(\"collections\", collections);\n      params.set(\"name\", alias);\n      params.set(\"action\", CollectionAction.CREATEALIAS.toString());\n      QueryRequest request = new QueryRequest(params);\n      request.setPath(\"/admin/collections\");\n      server.request(request);\n    } else {\n      CreateAlias request = new CreateAlias();\n      request.setAliasName(alias);\n      request.setAliasedCollections(collections);\n      request.process(server);\n    }\n    server.shutdown();\n  }\n\n","sourceOld":"  private void createAlias(String alias, String collections)\n      throws SolrServerException, IOException {\n    SolrServer server = createNewSolrServer(\"\",\n        getBaseUrl((HttpSolrServer) clients.get(0)));\n    if (random().nextBoolean()) {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set(\"collections\", collections);\n      params.set(\"name\", alias);\n      params.set(\"action\", CollectionAction.CREATEALIAS.toString());\n      QueryRequest request = new QueryRequest(params);\n      request.setPath(\"/admin/collections\");\n      server.request(request);\n    } else {\n      CreateAlias request = new CreateAlias();\n      request.setCollectionName(alias);\n      request.setAliasedCollections(collections);\n      request.process(server);\n    }\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#createAlias(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#createAlias(String,String).mjava","sourceNew":"  private void createAlias(String alias, String collections)\n      throws SolrServerException, IOException {\n    SolrClient client = createNewSolrClient(\"\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n    if (random().nextBoolean()) {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set(\"collections\", collections);\n      params.set(\"name\", alias);\n      params.set(\"action\", CollectionAction.CREATEALIAS.toString());\n      QueryRequest request = new QueryRequest(params);\n      request.setPath(\"/admin/collections\");\n      client.request(request);\n    } else {\n      CreateAlias request = new CreateAlias();\n      request.setAliasName(alias);\n      request.setAliasedCollections(collections);\n      request.process(client);\n    }\n    client.shutdown();\n  }\n\n","sourceOld":"  private void createAlias(String alias, String collections)\n      throws SolrServerException, IOException {\n    SolrServer server = createNewSolrServer(\"\",\n        getBaseUrl((HttpSolrServer) clients.get(0)));\n    if (random().nextBoolean()) {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set(\"collections\", collections);\n      params.set(\"name\", alias);\n      params.set(\"action\", CollectionAction.CREATEALIAS.toString());\n      QueryRequest request = new QueryRequest(params);\n      request.setPath(\"/admin/collections\");\n      server.request(request);\n    } else {\n      CreateAlias request = new CreateAlias();\n      request.setAliasName(alias);\n      request.setAliasedCollections(collections);\n      request.process(server);\n    }\n    server.shutdown();\n  }\n\n","bugFix":null,"bugIntro":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6784d0cc613dc1ee97030eaaa5e0754edc22d164","date":1420824784,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#createAlias(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#createAlias(String,String).mjava","sourceNew":"  private void createAlias(String alias, String collections)\n      throws SolrServerException, IOException {\n    SolrClient client = createNewSolrClient(\"\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n    try {\n      if (random().nextBoolean()) {\n        ModifiableSolrParams params = new ModifiableSolrParams();\n        params.set(\"collections\", collections);\n        params.set(\"name\", alias);\n        params.set(\"action\", CollectionAction.CREATEALIAS.toString());\n        QueryRequest request = new QueryRequest(params);\n        request.setPath(\"/admin/collections\");\n        client.request(request);\n      } else {\n        CreateAlias request = new CreateAlias();\n        request.setAliasName(alias);\n        request.setAliasedCollections(collections);\n        request.process(client);\n      }\n    } finally {\n      client.shutdown();\n    }\n  }\n\n","sourceOld":"  private void createAlias(String alias, String collections)\n      throws SolrServerException, IOException {\n    SolrClient client = createNewSolrClient(\"\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n    if (random().nextBoolean()) {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set(\"collections\", collections);\n      params.set(\"name\", alias);\n      params.set(\"action\", CollectionAction.CREATEALIAS.toString());\n      QueryRequest request = new QueryRequest(params);\n      request.setPath(\"/admin/collections\");\n      client.request(request);\n    } else {\n      CreateAlias request = new CreateAlias();\n      request.setAliasName(alias);\n      request.setAliasedCollections(collections);\n      request.process(client);\n    }\n    client.shutdown();\n  }\n\n","bugFix":["736a6aa1dd511b24b60250138d21e14a4050727b","bafca15d8e408346a67f4282ad1143b88023893b","d0ec3dbdc850ca18bf4aef9acb85f2ea0554306d","4a7d7ef06ef6f04ba2de657e90e0458048a967c6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc3b13b430571c2e169f98fe38e1e7666f88522d","date":1422446157,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#createAlias(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#createAlias(String,String).mjava","sourceNew":"  private void createAlias(String alias, String collections)\n      throws SolrServerException, IOException {\n\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      if (random().nextBoolean()) {\n        ModifiableSolrParams params = new ModifiableSolrParams();\n        params.set(\"collections\", collections);\n        params.set(\"name\", alias);\n        params.set(\"action\", CollectionAction.CREATEALIAS.toString());\n        QueryRequest request = new QueryRequest(params);\n        request.setPath(\"/admin/collections\");\n        client.request(request);\n      } else {\n        CreateAlias request = new CreateAlias();\n        request.setAliasName(alias);\n        request.setAliasedCollections(collections);\n        request.process(client);\n      }\n    }\n  }\n\n","sourceOld":"  private void createAlias(String alias, String collections)\n      throws SolrServerException, IOException {\n    SolrClient client = createNewSolrClient(\"\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n    try {\n      if (random().nextBoolean()) {\n        ModifiableSolrParams params = new ModifiableSolrParams();\n        params.set(\"collections\", collections);\n        params.set(\"name\", alias);\n        params.set(\"action\", CollectionAction.CREATEALIAS.toString());\n        QueryRequest request = new QueryRequest(params);\n        request.setPath(\"/admin/collections\");\n        client.request(request);\n      } else {\n        CreateAlias request = new CreateAlias();\n        request.setAliasName(alias);\n        request.setAliasedCollections(collections);\n        request.process(client);\n      }\n    } finally {\n      client.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a02c54923e5f4de08097fa9028e09e8cf5caa82","date":1475573567,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#createAlias(String,String).mjava","sourceNew":null,"sourceOld":"  private void createAlias(String alias, String collections)\n      throws SolrServerException, IOException {\n\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      if (random().nextBoolean()) {\n        ModifiableSolrParams params = new ModifiableSolrParams();\n        params.set(\"collections\", collections);\n        params.set(\"name\", alias);\n        params.set(\"action\", CollectionAction.CREATEALIAS.toString());\n        QueryRequest request = new QueryRequest(params);\n        request.setPath(\"/admin/collections\");\n        client.request(request);\n      } else {\n        CreateAlias request = new CreateAlias();\n        request.setAliasName(alias);\n        request.setAliasedCollections(collections);\n        request.process(client);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1967bed916cc89da82a1c2085f27976da6d08cbd","date":1475588750,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#createAlias(String,String).mjava","sourceNew":null,"sourceOld":"  private void createAlias(String alias, String collections)\n      throws SolrServerException, IOException {\n\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      if (random().nextBoolean()) {\n        ModifiableSolrParams params = new ModifiableSolrParams();\n        params.set(\"collections\", collections);\n        params.set(\"name\", alias);\n        params.set(\"action\", CollectionAction.CREATEALIAS.toString());\n        QueryRequest request = new QueryRequest(params);\n        request.setPath(\"/admin/collections\");\n        client.request(request);\n      } else {\n        CreateAlias request = new CreateAlias();\n        request.setAliasName(alias);\n        request.setAliasedCollections(collections);\n        request.process(client);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/AliasIntegrationTest#createAlias(String,String).mjava","sourceNew":null,"sourceOld":"  private void createAlias(String alias, String collections)\n      throws SolrServerException, IOException {\n\n    try (SolrClient client = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)))) {\n      if (random().nextBoolean()) {\n        ModifiableSolrParams params = new ModifiableSolrParams();\n        params.set(\"collections\", collections);\n        params.set(\"name\", alias);\n        params.set(\"action\", CollectionAction.CREATEALIAS.toString());\n        QueryRequest request = new QueryRequest(params);\n        request.setPath(\"/admin/collections\");\n        client.request(request);\n      } else {\n        CreateAlias request = new CreateAlias();\n        request.setAliasName(alias);\n        request.setAliasedCollections(collections);\n        request.process(client);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1967bed916cc89da82a1c2085f27976da6d08cbd":["cc3b13b430571c2e169f98fe38e1e7666f88522d","5a02c54923e5f4de08097fa9028e09e8cf5caa82"],"1cfa38e36fa296bb93d77df7d5556257dffa4535":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bafca15d8e408346a67f4282ad1143b88023893b":["d0ec3dbdc850ca18bf4aef9acb85f2ea0554306d"],"d0ec3dbdc850ca18bf4aef9acb85f2ea0554306d":["4a7d7ef06ef6f04ba2de657e90e0458048a967c6"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["cc3b13b430571c2e169f98fe38e1e7666f88522d","1967bed916cc89da82a1c2085f27976da6d08cbd"],"4a7d7ef06ef6f04ba2de657e90e0458048a967c6":["4c7856260bc28f285ae7bfefa99b28db4dca6daf"],"736a6aa1dd511b24b60250138d21e14a4050727b":["1cfa38e36fa296bb93d77df7d5556257dffa4535"],"4c7856260bc28f285ae7bfefa99b28db4dca6daf":["736a6aa1dd511b24b60250138d21e14a4050727b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["1cfa38e36fa296bb93d77df7d5556257dffa4535","736a6aa1dd511b24b60250138d21e14a4050727b"],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["bafca15d8e408346a67f4282ad1143b88023893b"],"5a02c54923e5f4de08097fa9028e09e8cf5caa82":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1967bed916cc89da82a1c2085f27976da6d08cbd"]},"commit2Childs":{"1967bed916cc89da82a1c2085f27976da6d08cbd":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1cfa38e36fa296bb93d77df7d5556257dffa4535":["736a6aa1dd511b24b60250138d21e14a4050727b","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"bafca15d8e408346a67f4282ad1143b88023893b":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"d0ec3dbdc850ca18bf4aef9acb85f2ea0554306d":["bafca15d8e408346a67f4282ad1143b88023893b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"4a7d7ef06ef6f04ba2de657e90e0458048a967c6":["d0ec3dbdc850ca18bf4aef9acb85f2ea0554306d"],"736a6aa1dd511b24b60250138d21e14a4050727b":["4c7856260bc28f285ae7bfefa99b28db4dca6daf","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"4c7856260bc28f285ae7bfefa99b28db4dca6daf":["4a7d7ef06ef6f04ba2de657e90e0458048a967c6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1cfa38e36fa296bb93d77df7d5556257dffa4535"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"cc3b13b430571c2e169f98fe38e1e7666f88522d":["1967bed916cc89da82a1c2085f27976da6d08cbd","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","5a02c54923e5f4de08097fa9028e09e8cf5caa82"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["cc3b13b430571c2e169f98fe38e1e7666f88522d"],"5a02c54923e5f4de08097fa9028e09e8cf5caa82":["1967bed916cc89da82a1c2085f27976da6d08cbd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}