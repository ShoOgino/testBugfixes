{"path":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","commits":[{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","sourceNew":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    return new File(LuceneTestCase.TEMP_DIR, desc + \".\" + new Random().nextLong());\n  }\n\n","sourceOld":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    return new File(LuceneTestCase.TEMP_DIR, desc + \".\" + new Random().nextLong());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","sourceNew":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    return new File(LuceneTestCase.TEMP_DIR, desc + \".\" + new Random().nextLong());\n  }\n\n","sourceOld":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    return new File(LuceneTestCase.TEMP_DIR, desc + \".\" + new Random().nextLong());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","sourceNew":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    return new File(LuceneTestCase.TEMP_DIR, desc + \".\" + new Random().nextLong());\n  }\n\n","sourceOld":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    return new File(LuceneTestCase.TEMP_DIR, desc + \".\" + new Random().nextLong());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3741149a89925c02f14dbeef8365b896798d91fc","date":1303483574,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","sourceNew":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    File f = new File(LuceneTestCase.TEMP_DIR, desc + \".\" + new Random().nextLong());\n    LuceneTestCase.tempDirs.add(f.getAbsolutePath());\n    return f;\n  }\n\n","sourceOld":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    return new File(LuceneTestCase.TEMP_DIR, desc + \".\" + new Random().nextLong());\n  }\n\n","bugFix":["43b04c27924fe393e38e9f0986e32c634f261859"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d493718201f0d0c54c773fb323d87bbd2fbffe41","date":1303546048,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","sourceNew":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    File f = new File(LuceneTestCase.TEMP_DIR, desc + \".\" + new Random().nextLong());\n    LuceneTestCase.tempDirs.add(f.getAbsolutePath());\n    return f;\n  }\n\n","sourceOld":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    return new File(LuceneTestCase.TEMP_DIR, desc + \".\" + new Random().nextLong());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","sourceNew":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    File f = new File(LuceneTestCase.TEMP_DIR, desc + \".\" + new Random().nextLong());\n    LuceneTestCase.tempDirs.add(f.getAbsolutePath());\n    return f;\n  }\n\n","sourceOld":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    return new File(LuceneTestCase.TEMP_DIR, desc + \".\" + new Random().nextLong());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","sourceNew":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    File f = new File(LuceneTestCase.TEMP_DIR, desc + \".\" + new Random().nextLong());\n    LuceneTestCase.tempDirs.add(f.getAbsolutePath());\n    return f;\n  }\n\n","sourceOld":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    return new File(LuceneTestCase.TEMP_DIR, desc + \".\" + new Random().nextLong());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"435c7fca8d9d4e96fdc2b59f3392b08ef46725e7","date":1306320383,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","sourceNew":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    File f = new File(LuceneTestCase.TEMP_DIR, desc + \".\" + LuceneTestCase.random.nextLong());\n    LuceneTestCase.registerTempFile(f);\n    return f;\n  }\n\n","sourceOld":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    File f = new File(LuceneTestCase.TEMP_DIR, desc + \".\" + new Random().nextLong());\n    LuceneTestCase.tempDirs.add(f.getAbsolutePath());\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","sourceNew":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    File f = new File(LuceneTestCase.TEMP_DIR, desc + \".\" + LuceneTestCase.random.nextLong());\n    LuceneTestCase.registerTempFile(f);\n    return f;\n  }\n\n","sourceOld":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    File f = new File(LuceneTestCase.TEMP_DIR, desc + \".\" + new Random().nextLong());\n    LuceneTestCase.tempDirs.add(f.getAbsolutePath());\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","sourceNew":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    File f = new File(LuceneTestCase.TEMP_DIR, desc + \".\" + LuceneTestCase.random.nextLong());\n    LuceneTestCase.registerTempFile(f);\n    return f;\n  }\n\n","sourceOld":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    File f = new File(LuceneTestCase.TEMP_DIR, desc + \".\" + new Random().nextLong());\n    LuceneTestCase.tempDirs.add(f.getAbsolutePath());\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ff248e38253380f4f8ae9cc4c3c5ceae80e3071","date":1307538264,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","sourceNew":"  /** Returns temp dir, based on String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    try {\n      File f = createTempFile(desc, \"tmp\", LuceneTestCase.TEMP_DIR);\n      f.delete();\n      LuceneTestCase.registerTempFile(f);\n      return f;\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    File f = new File(LuceneTestCase.TEMP_DIR, desc + \".\" + LuceneTestCase.random.nextLong());\n    LuceneTestCase.registerTempFile(f);\n    return f;\n  }\n\n","bugFix":null,"bugIntro":["ac649ee6a6903dadf0d051ad5adbfcabe4da9bb0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","sourceNew":"  /** Returns temp dir, based on String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    try {\n      File f = createTempFile(desc, \"tmp\", LuceneTestCase.TEMP_DIR);\n      f.delete();\n      LuceneTestCase.registerTempFile(f);\n      return f;\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    File f = new File(LuceneTestCase.TEMP_DIR, desc + \".\" + LuceneTestCase.random.nextLong());\n    LuceneTestCase.registerTempFile(f);\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","sourceNew":"  /** Returns temp dir, based on String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    try {\n      File f = createTempFile(desc, \"tmp\", LuceneTestCase.TEMP_DIR);\n      f.delete();\n      LuceneTestCase.registerTempFile(f);\n      return f;\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /** Returns temp dir, containing String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    File f = new File(LuceneTestCase.TEMP_DIR, desc + \".\" + LuceneTestCase.random.nextLong());\n    LuceneTestCase.registerTempFile(f);\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#getTempDir(String).mjava","sourceNew":"  /** Returns temp dir, based on String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    try {\n      File f = createTempFile(desc, \"tmp\", LuceneTestCase.TEMP_DIR);\n      f.delete();\n      LuceneTestCase.registerTempFile(f);\n      return f;\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  /** Returns temp dir, based on String arg in its name;\n   *  does not create the directory. */\n  public static File getTempDir(String desc) {\n    try {\n      File f = createTempFile(desc, \"tmp\", LuceneTestCase.TEMP_DIR);\n      f.delete();\n      LuceneTestCase.registerTempFile(f);\n      return f;\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","4ff248e38253380f4f8ae9cc4c3c5ceae80e3071"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","3741149a89925c02f14dbeef8365b896798d91fc"],"d493718201f0d0c54c773fb323d87bbd2fbffe41":["bde51b089eb7f86171eb3406e38a274743f9b7ac","3741149a89925c02f14dbeef8365b896798d91fc"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"435c7fca8d9d4e96fdc2b59f3392b08ef46725e7":["3741149a89925c02f14dbeef8365b896798d91fc"],"7b91922b55d15444d554721b352861d028eb8278":["4ff248e38253380f4f8ae9cc4c3c5ceae80e3071"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a3776dccca01c11e7046323cfad46a3b4a471233","435c7fca8d9d4e96fdc2b59f3392b08ef46725e7"],"a3776dccca01c11e7046323cfad46a3b4a471233":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","3741149a89925c02f14dbeef8365b896798d91fc"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ff248e38253380f4f8ae9cc4c3c5ceae80e3071":["435c7fca8d9d4e96fdc2b59f3392b08ef46725e7"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["2e10cb22a8bdb44339e282925a29182bb2f3174d","4ff248e38253380f4f8ae9cc4c3c5ceae80e3071"],"3741149a89925c02f14dbeef8365b896798d91fc":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["135621f3a0670a9394eb563224a3b76cc4dddc0f","435c7fca8d9d4e96fdc2b59f3392b08ef46725e7"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"d493718201f0d0c54c773fb323d87bbd2fbffe41":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","3741149a89925c02f14dbeef8365b896798d91fc","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"435c7fca8d9d4e96fdc2b59f3392b08ef46725e7":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","4ff248e38253380f4f8ae9cc4c3c5ceae80e3071","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"4ff248e38253380f4f8ae9cc4c3c5ceae80e3071":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","7b91922b55d15444d554721b352861d028eb8278","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"3741149a89925c02f14dbeef8365b896798d91fc":["135621f3a0670a9394eb563224a3b76cc4dddc0f","d493718201f0d0c54c773fb323d87bbd2fbffe41","435c7fca8d9d4e96fdc2b59f3392b08ef46725e7","a3776dccca01c11e7046323cfad46a3b4a471233"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["d493718201f0d0c54c773fb323d87bbd2fbffe41"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","d493718201f0d0c54c773fb323d87bbd2fbffe41","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}