{"path":"src/java/org/apache/lucene/util/BitVector#get(int).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/BitVector#get(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns <code>true</code> if <code>bit</code> is one and\n    <code>false</code> if it is zero. */\n  public final boolean get(int bit) {\n    return (bits[bit >> 3] & (1 << (bit & 7))) != 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e5554d2be0131fc1ce32526016ce4dcc90650e4","date":1168279868,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/BitVector#get(int).mjava","pathOld":"src/java/org/apache/lucene/util/BitVector#get(int).mjava","sourceNew":"  /** Returns <code>true</code> if <code>bit</code> is one and\n    <code>false</code> if it is zero. */\n  public final boolean get(int bit) {\n    if (bit >= size) {\n      throw new ArrayIndexOutOfBoundsException(bit);\n    }\n    return (bits[bit >> 3] & (1 << (bit & 7))) != 0;\n  }\n\n","sourceOld":"  /** Returns <code>true</code> if <code>bit</code> is one and\n    <code>false</code> if it is zero. */\n  public final boolean get(int bit) {\n    return (bits[bit >> 3] & (1 << (bit & 7))) != 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"26f4aec70a5bd0c313357de5a9c0d49817def284","date":1233768842,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/BitVector#get(int).mjava","pathOld":"src/java/org/apache/lucene/util/BitVector#get(int).mjava","sourceNew":"  /** Returns <code>true</code> if <code>bit</code> is one and\n    <code>false</code> if it is zero. */\n  public final boolean get(int bit) {\n    assert bit >= 0 && bit < size: \"bit \" + bit + \" is out of bounds 0..\" + (size-1);\n    return (bits[bit >> 3] & (1 << (bit & 7))) != 0;\n  }\n\n","sourceOld":"  /** Returns <code>true</code> if <code>bit</code> is one and\n    <code>false</code> if it is zero. */\n  public final boolean get(int bit) {\n    if (bit >= size) {\n      throw new ArrayIndexOutOfBoundsException(bit);\n    }\n    return (bits[bit >> 3] & (1 << (bit & 7))) != 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/BitVector#get(int).mjava","pathOld":"src/java/org/apache/lucene/util/BitVector#get(int).mjava","sourceNew":"  /** Returns <code>true</code> if <code>bit</code> is one and\n    <code>false</code> if it is zero. */\n  public final boolean get(int bit) {\n    assert bit >= 0 && bit < size: \"bit \" + bit + \" is out of bounds 0..\" + (size-1);\n    return (bits[bit >> 3] & (1 << (bit & 7))) != 0;\n  }\n\n","sourceOld":"  /** Returns <code>true</code> if <code>bit</code> is one and\n    <code>false</code> if it is zero. */\n  public final boolean get(int bit) {\n    assert bit >= 0 && bit < size: \"bit \" + bit + \" is out of bounds 0..\" + (size-1);\n    return (bits[bit >> 3] & (1 << (bit & 7))) != 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"26f4aec70a5bd0c313357de5a9c0d49817def284":["0e5554d2be0131fc1ce32526016ce4dcc90650e4"],"0e5554d2be0131fc1ce32526016ce4dcc90650e4":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["26f4aec70a5bd0c313357de5a9c0d49817def284"]},"commit2Childs":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["0e5554d2be0131fc1ce32526016ce4dcc90650e4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"26f4aec70a5bd0c313357de5a9c0d49817def284":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0e5554d2be0131fc1ce32526016ce4dcc90650e4":["26f4aec70a5bd0c313357de5a9c0d49817def284"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}