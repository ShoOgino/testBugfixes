{"path":"src/java/org/apache/solr/util/BitUtil#pop(long).mjava","commits":[{"id":"21400778a0bf704d187a4848279049f5d90276c8","date":1149955512,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/BitUtil#pop(long).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the number of bits set in the long */\n  public static int pop(long x) {\n  /* Hacker's Delight 32 bit pop function:\n   * http://www.hackersdelight.org/HDcode/newCode/pop_arrayHS.cc\n   *\n  int pop(unsigned x) {\n     x = x - ((x >> 1) & 0x55555555);\n     x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n     x = (x + (x >> 4)) & 0x0F0F0F0F;\n     x = x + (x >> 8);\n     x = x + (x >> 16);\n     return x & 0x0000003F;\n    }\n  ***/\n\n    // 64 bit java version of the C function from above\n    x = x - ((x >>> 1) & 0x5555555555555555L);\n    x = (x & 0x3333333333333333L) + ((x >>>2 ) & 0x3333333333333333L);\n    x = (x + (x >>> 4)) & 0x0F0F0F0F0F0F0F0FL;\n    x = x + (x >>> 8);\n    x = x + (x >>> 16);\n    x = x + (x >>> 32);\n    return ((int)x) & 0x7F;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5108097d840f85a1779a41d0e412efb8130546e6","date":1228575321,"type":4,"author":"Grant Ingersoll","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/solr/util/BitUtil#pop(long).mjava","sourceNew":null,"sourceOld":"  /** Returns the number of bits set in the long */\n  public static int pop(long x) {\n  /* Hacker's Delight 32 bit pop function:\n   * http://www.hackersdelight.org/HDcode/newCode/pop_arrayHS.cc\n   *\n  int pop(unsigned x) {\n     x = x - ((x >> 1) & 0x55555555);\n     x = (x & 0x33333333) + ((x >> 2) & 0x33333333);\n     x = (x + (x >> 4)) & 0x0F0F0F0F;\n     x = x + (x >> 8);\n     x = x + (x >> 16);\n     return x & 0x0000003F;\n    }\n  ***/\n\n    // 64 bit java version of the C function from above\n    x = x - ((x >>> 1) & 0x5555555555555555L);\n    x = (x & 0x3333333333333333L) + ((x >>>2 ) & 0x3333333333333333L);\n    x = (x + (x >>> 4)) & 0x0F0F0F0F0F0F0F0FL;\n    x = x + (x >>> 8);\n    x = x + (x >>> 16);\n    x = x + (x >>> 32);\n    return ((int)x) & 0x7F;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"21400778a0bf704d187a4848279049f5d90276c8":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5108097d840f85a1779a41d0e412efb8130546e6":["21400778a0bf704d187a4848279049f5d90276c8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"21400778a0bf704d187a4848279049f5d90276c8":["5108097d840f85a1779a41d0e412efb8130546e6"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["21400778a0bf704d187a4848279049f5d90276c8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5108097d840f85a1779a41d0e412efb8130546e6":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5108097d840f85a1779a41d0e412efb8130546e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}