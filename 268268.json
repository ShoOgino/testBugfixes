{"path":"solr/core/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","pathOld":"solr/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","sourceNew":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","sourceOld":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","pathOld":"solr/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","sourceNew":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","sourceOld":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","pathOld":"solr/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","sourceNew":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","sourceOld":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30b6ad849a21206db510322a3f583ca70ae20a2f","date":1399996150,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","sourceNew":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s1\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s1\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s1\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s1\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s1, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s1, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","sourceOld":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","sourceNew":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s1\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s1\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s1\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s1\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s1, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s1, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","sourceOld":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","sourceNew":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s1\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s1\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s1\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s1\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s1, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s1, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","sourceOld":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71f63026529f3c1f03cfdd664910873ab2369ae","date":1497543264,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","sourceNew":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s1\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s1\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s1\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s1\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/str[@name='id'][.='3']\",\n            \"//result/doc[2]/str[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s1, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/str[@name='id'][.='1']\",\n            \"//result/doc[2]/str[@name='id'][.='2']\",\n            \"//result/doc[3]/str[@name='id'][.='3']\",\n            \"//result/doc[4]/str[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s1, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/str[@name='id'][.='4']\",\n            \"//result/doc[2]/str[@name='id'][.='3']\",\n            \"//result/doc[3]/str[@name='id'][.='2']\",\n            \"//result/doc[4]/str[@name='id'][.='1']\"\n    );\n  }\n\n","sourceOld":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s1\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s1\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s1\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s1\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s1, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s1, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","sourceNew":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s1\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s1\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s1\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s1\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/str[@name='id'][.='3']\",\n            \"//result/doc[2]/str[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s1, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/str[@name='id'][.='1']\",\n            \"//result/doc[2]/str[@name='id'][.='2']\",\n            \"//result/doc[3]/str[@name='id'][.='3']\",\n            \"//result/doc[4]/str[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s1, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/str[@name='id'][.='4']\",\n            \"//result/doc[2]/str[@name='id'][.='3']\",\n            \"//result/doc[3]/str[@name='id'][.='2']\",\n            \"//result/doc[4]/str[@name='id'][.='1']\"\n    );\n  }\n\n","sourceOld":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s1\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s1\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s1\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s1\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s1, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s1, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/SortByFunctionTest#testSortJoinDocFreq().mjava","sourceNew":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s1\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s1\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s1\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s1\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/str[@name='id'][.='3']\",\n            \"//result/doc[2]/str[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s1, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/str[@name='id'][.='1']\",\n            \"//result/doc[2]/str[@name='id'][.='2']\",\n            \"//result/doc[3]/str[@name='id'][.='3']\",\n            \"//result/doc[4]/str[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s1, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/str[@name='id'][.='4']\",\n            \"//result/doc[2]/str[@name='id'][.='3']\",\n            \"//result/doc[3]/str[@name='id'][.='2']\",\n            \"//result/doc[4]/str[@name='id'][.='1']\"\n    );\n  }\n\n","sourceOld":"  public void testSortJoinDocFreq() throws Exception\n  {\n    assertU(adoc(\"id\", \"4\", \"id_s1\", \"D\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\", \"links_mfacet\", \"C\" ) );\n    assertU(adoc(\"id\", \"3\", \"id_s1\", \"C\", \"links_mfacet\", \"A\", \"links_mfacet\", \"B\" ) );\n    assertU(commit()); // Make sure it uses two readers\n    assertU(adoc(\"id\", \"2\", \"id_s1\", \"B\", \"links_mfacet\", \"A\" ) );\n    assertU(adoc(\"id\", \"1\", \"id_s1\", \"A\"  ) );\n    assertU(commit());\n\n    assertQ(req(\"q\", \"links_mfacet:B\", \"fl\", \"id\", \"sort\", \"id asc\"),\n            \"//*[@numFound='2']\",\n            \"//result/doc[1]/int[@name='id'][.='3']\",\n            \"//result/doc[2]/int[@name='id'][.='4']\"\n    );\n    \n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s1, links_mfacet) desc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='1']\",\n            \"//result/doc[2]/int[@name='id'][.='2']\",\n            \"//result/doc[3]/int[@name='id'][.='3']\",\n            \"//result/doc[4]/int[@name='id'][.='4']\"\n    );\n\n    assertQ(req(\"q\", \"*:*\", \"fl\", \"id\", \"sort\", \"joindf(id_s1, links_mfacet) asc\"),\n            \"//*[@numFound='4']\",\n            \"//result/doc[1]/int[@name='id'][.='4']\",\n            \"//result/doc[2]/int[@name='id'][.='3']\",\n            \"//result/doc[3]/int[@name='id'][.='2']\",\n            \"//result/doc[4]/int[@name='id'][.='1']\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["c26f00b574427b55127e869b935845554afde1fa","30b6ad849a21206db510322a3f583ca70ae20a2f"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a71f63026529f3c1f03cfdd664910873ab2369ae":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"30b6ad849a21206db510322a3f583ca70ae20a2f":["c26f00b574427b55127e869b935845554afde1fa"],"56572ec06f1407c066d6b7399413178b33176cd8":["c26f00b574427b55127e869b935845554afde1fa","93dd449115a9247533e44bab47e8429e5dccbc6d"],"28288370235ed02234a64753cdbf0c6ec096304a":["93dd449115a9247533e44bab47e8429e5dccbc6d","a71f63026529f3c1f03cfdd664910873ab2369ae"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["93dd449115a9247533e44bab47e8429e5dccbc6d","a71f63026529f3c1f03cfdd664910873ab2369ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["a71f63026529f3c1f03cfdd664910873ab2369ae","56572ec06f1407c066d6b7399413178b33176cd8","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"c26f00b574427b55127e869b935845554afde1fa":["93dd449115a9247533e44bab47e8429e5dccbc6d","30b6ad849a21206db510322a3f583ca70ae20a2f","56572ec06f1407c066d6b7399413178b33176cd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"30b6ad849a21206db510322a3f583ca70ae20a2f":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","56572ec06f1407c066d6b7399413178b33176cd8","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}