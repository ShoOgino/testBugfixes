{"path":"src/java/org/apache/solr/analysis/HTMLStripReader#readAttr().mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/HTMLStripReader#readAttr().mjava","pathOld":"/dev/null","sourceNew":"  /***\n  [10]   \tAttValue\t   ::=   \t'\"' ([^<&\"] | Reference)* '\"'\n        |  \"'\" ([^<&'] | Reference)* \"'\"\n\n  need to also handle unquoted attributes, and attributes w/o values:\n  <td id=msviGlobalToolbar height=\"22\" nowrap align=left>\n\n  ***/\n  private int readAttr() throws IOException {\n    int ch = read();\n    if (!isFirstIdChar(ch)) return MISMATCH;\n    ch = read();\n    while(isIdChar(ch)) ch=read();\n    if (isSpace(ch)) ch = nextSkipWS();\n\n    // attributes may not have a value at all!\n    // if (ch != '=') return MISMATCH;\n    if (ch != '=') {\n      push(ch);\n      return MATCH;\n    }\n\n    int quoteChar = nextSkipWS();\n\n    if (quoteChar=='\"' || quoteChar=='\\'') {\n      // TODO: should I set a max size to try and find the other\n      // quote?  Otherwise, I may read to much to restore\n      // the stream.\n      while (true) {\n        ch = next();\n        if (ch<0) return MISMATCH;\n        else if (ch==quoteChar) {\n          return MATCH;\n        //} else if (ch=='<') {\n        //  return MISMATCH;\n        }\n      }\n    } else {\n      // unquoted attribute\n      while (true) {\n        ch = next();\n        if (ch<0) return MISMATCH;\n        else if (isSpace(ch)) {\n          push(ch);\n          return MATCH;\n        } else if (ch=='>') {\n          push(ch);\n          return MATCH;\n        }\n      }\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"187b932e3f791668d245124e03d899af557d22df","date":1199907679,"type":4,"author":"Erik Hatcher","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/solr/analysis/HTMLStripReader#readAttr().mjava","sourceNew":null,"sourceOld":"  /***\n  [10]   \tAttValue\t   ::=   \t'\"' ([^<&\"] | Reference)* '\"'\n        |  \"'\" ([^<&'] | Reference)* \"'\"\n\n  need to also handle unquoted attributes, and attributes w/o values:\n  <td id=msviGlobalToolbar height=\"22\" nowrap align=left>\n\n  ***/\n  private int readAttr() throws IOException {\n    int ch = read();\n    if (!isFirstIdChar(ch)) return MISMATCH;\n    ch = read();\n    while(isIdChar(ch)) ch=read();\n    if (isSpace(ch)) ch = nextSkipWS();\n\n    // attributes may not have a value at all!\n    // if (ch != '=') return MISMATCH;\n    if (ch != '=') {\n      push(ch);\n      return MATCH;\n    }\n\n    int quoteChar = nextSkipWS();\n\n    if (quoteChar=='\"' || quoteChar=='\\'') {\n      // TODO: should I set a max size to try and find the other\n      // quote?  Otherwise, I may read to much to restore\n      // the stream.\n      while (true) {\n        ch = next();\n        if (ch<0) return MISMATCH;\n        else if (ch==quoteChar) {\n          return MATCH;\n        //} else if (ch=='<') {\n        //  return MISMATCH;\n        }\n      }\n    } else {\n      // unquoted attribute\n      while (true) {\n        ch = next();\n        if (ch<0) return MISMATCH;\n        else if (isSpace(ch)) {\n          push(ch);\n          return MATCH;\n        } else if (ch=='>') {\n          push(ch);\n          return MATCH;\n        }\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"187b932e3f791668d245124e03d899af557d22df":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"]},"commit2Childs":{"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["187b932e3f791668d245124e03d899af557d22df"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"187b932e3f791668d245124e03d899af557d22df":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","187b932e3f791668d245124e03d899af557d22df"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}