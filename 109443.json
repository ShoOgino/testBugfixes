{"path":"lucene/misc/src/test/org/apache/lucene/search/TestEarlyTerminatingSortingCollector#newSearcherForTestTerminatedEarly(IndexReader).mjava","commits":[{"id":"ff0a9c7bbae145588b269529bb55009dec1bb733","date":1438605556,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/search/TestEarlyTerminatingSortingCollector#newSearcherForTestTerminatedEarly(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  private IndexSearcher newSearcherForTestTerminatedEarly(IndexReader r) throws IOException {\n    switch(random().nextInt(2)) {\n    case 0:\n      return new IndexSearcher(r);\n    case 1:\n      assertTrue(r+\" is not a DirectoryReader\", (r instanceof DirectoryReader));\n      final DirectoryReader directoryReader = ExitableDirectoryReader.wrap(\n          UninvertingReader.wrap((DirectoryReader) r, new HashMap<String,Type>()),\n          new TestEarlyTerminatingSortingcollectorQueryTimeout(false));\n      return new IndexSearcher(directoryReader);\n    }\n    fail(\"newSearcherForTestTerminatedEarly(\"+r+\") fell through switch\");\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8","date":1462567286,"type":4,"author":"Mike McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/misc/src/test/org/apache/lucene/search/TestEarlyTerminatingSortingCollector#newSearcherForTestTerminatedEarly(IndexReader).mjava","sourceNew":null,"sourceOld":"  private IndexSearcher newSearcherForTestTerminatedEarly(IndexReader r) throws IOException {\n    switch(random().nextInt(2)) {\n    case 0:\n      return new IndexSearcher(r);\n    case 1:\n      assertTrue(r+\" is not a DirectoryReader\", (r instanceof DirectoryReader));\n      final DirectoryReader directoryReader = ExitableDirectoryReader.wrap(\n          UninvertingReader.wrap((DirectoryReader) r, new HashMap<String,Type>()),\n          new TestEarlyTerminatingSortingcollectorQueryTimeout(false));\n      return new IndexSearcher(directoryReader);\n    }\n    fail(\"newSearcherForTestTerminatedEarly(\"+r+\") fell through switch\");\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d33e731a93d4b57e662ff094f64f94a745422d4","date":1463128289,"type":4,"author":"Mike McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/misc/src/test/org/apache/lucene/search/TestEarlyTerminatingSortingCollector#newSearcherForTestTerminatedEarly(IndexReader).mjava","sourceNew":null,"sourceOld":"  private IndexSearcher newSearcherForTestTerminatedEarly(IndexReader r) throws IOException {\n    switch(random().nextInt(2)) {\n    case 0:\n      return new IndexSearcher(r);\n    case 1:\n      assertTrue(r+\" is not a DirectoryReader\", (r instanceof DirectoryReader));\n      final DirectoryReader directoryReader = ExitableDirectoryReader.wrap(\n          UninvertingReader.wrap((DirectoryReader) r, new HashMap<String,Type>()),\n          new TestEarlyTerminatingSortingcollectorQueryTimeout(false));\n      return new IndexSearcher(directoryReader);\n    }\n    fail(\"newSearcherForTestTerminatedEarly(\"+r+\") fell through switch\");\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/misc/src/test/org/apache/lucene/search/TestEarlyTerminatingSortingCollector#newSearcherForTestTerminatedEarly(IndexReader).mjava","sourceNew":null,"sourceOld":"  private IndexSearcher newSearcherForTestTerminatedEarly(IndexReader r) throws IOException {\n    switch(random().nextInt(2)) {\n    case 0:\n      return new IndexSearcher(r);\n    case 1:\n      assertTrue(r+\" is not a DirectoryReader\", (r instanceof DirectoryReader));\n      final DirectoryReader directoryReader = ExitableDirectoryReader.wrap(\n          UninvertingReader.wrap((DirectoryReader) r, new HashMap<String,Type>()),\n          new TestEarlyTerminatingSortingcollectorQueryTimeout(false));\n      return new IndexSearcher(directoryReader);\n    }\n    fail(\"newSearcherForTestTerminatedEarly(\"+r+\") fell through switch\");\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/misc/src/test/org/apache/lucene/search/TestEarlyTerminatingSortingCollector#newSearcherForTestTerminatedEarly(IndexReader).mjava","sourceNew":null,"sourceOld":"  private IndexSearcher newSearcherForTestTerminatedEarly(IndexReader r) throws IOException {\n    switch(random().nextInt(2)) {\n    case 0:\n      return new IndexSearcher(r);\n    case 1:\n      assertTrue(r+\" is not a DirectoryReader\", (r instanceof DirectoryReader));\n      final DirectoryReader directoryReader = ExitableDirectoryReader.wrap(\n          UninvertingReader.wrap((DirectoryReader) r, new HashMap<String,Type>()),\n          new TestEarlyTerminatingSortingcollectorQueryTimeout(false));\n      return new IndexSearcher(directoryReader);\n    }\n    fail(\"newSearcherForTestTerminatedEarly(\"+r+\") fell through switch\");\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/misc/src/test/org/apache/lucene/search/TestEarlyTerminatingSortingCollector#newSearcherForTestTerminatedEarly(IndexReader).mjava","sourceNew":null,"sourceOld":"  private IndexSearcher newSearcherForTestTerminatedEarly(IndexReader r) throws IOException {\n    switch(random().nextInt(2)) {\n    case 0:\n      return new IndexSearcher(r);\n    case 1:\n      assertTrue(r+\" is not a DirectoryReader\", (r instanceof DirectoryReader));\n      final DirectoryReader directoryReader = ExitableDirectoryReader.wrap(\n          UninvertingReader.wrap((DirectoryReader) r, new HashMap<String,Type>()),\n          new TestEarlyTerminatingSortingcollectorQueryTimeout(false));\n      return new IndexSearcher(directoryReader);\n    }\n    fail(\"newSearcherForTestTerminatedEarly(\"+r+\") fell through switch\");\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff0a9c7bbae145588b269529bb55009dec1bb733":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ad30c6a479e764150a3316e57263319775f1df2":["ff0a9c7bbae145588b269529bb55009dec1bb733","3d33e731a93d4b57e662ff094f64f94a745422d4"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["ff0a9c7bbae145588b269529bb55009dec1bb733","fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8"],"fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8":["ff0a9c7bbae145588b269529bb55009dec1bb733"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["ff0a9c7bbae145588b269529bb55009dec1bb733","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["ff0a9c7bbae145588b269529bb55009dec1bb733","0ad30c6a479e764150a3316e57263319775f1df2"]},"commit2Childs":{"ff0a9c7bbae145588b269529bb55009dec1bb733":["0ad30c6a479e764150a3316e57263319775f1df2","3d33e731a93d4b57e662ff094f64f94a745422d4","fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ff0a9c7bbae145588b269529bb55009dec1bb733"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["0ad30c6a479e764150a3316e57263319775f1df2"],"fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8":["3d33e731a93d4b57e662ff094f64f94a745422d4"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}