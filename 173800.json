{"path":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinIndexSearcher#search(List[LeafReaderContext],Weight,Collector).mjava","commits":[{"id":"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f","date":1421314520,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinIndexSearcher#search(List[LeafReaderContext],Weight,Collector).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void search(List<LeafReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    for (LeafReaderContext ctx : leaves) { // search each subreader\n      // we force the use of Scorer (not BulkScorer) to make sure\n      // that the scorer passed to LeafCollector.setScorer supports\n      // Scorer.getChildren\n      Scorer scorer = weight.scorer(ctx, ctx.reader().getLiveDocs());\n      if (scorer != null) {\n        final LeafCollector leafCollector = collector.getLeafCollector(ctx);\n        leafCollector.setScorer(scorer);\n        for (int doc = scorer.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = scorer.nextDoc()) {\n          leafCollector.collect(doc);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"781239fc84d36be12b84e4d3e2618f5f07a182e3","date":1423139668,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinIndexSearcher#search(List[LeafReaderContext],Weight,Collector).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinIndexSearcher#search(List[LeafReaderContext],Weight,Collector).mjava","sourceNew":"  @Override\n  protected void search(List<LeafReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    for (LeafReaderContext ctx : leaves) { // search each subreader\n      // we force the use of Scorer (not BulkScorer) to make sure\n      // that the scorer passed to LeafCollector.setScorer supports\n      // Scorer.getChildren\n      Scorer scorer = weight.scorer(ctx, ctx.reader().getLiveDocs(), true);\n      if (scorer != null) {\n        final LeafCollector leafCollector = collector.getLeafCollector(ctx);\n        leafCollector.setScorer(scorer);\n        for (int doc = scorer.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = scorer.nextDoc()) {\n          leafCollector.collect(doc);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void search(List<LeafReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    for (LeafReaderContext ctx : leaves) { // search each subreader\n      // we force the use of Scorer (not BulkScorer) to make sure\n      // that the scorer passed to LeafCollector.setScorer supports\n      // Scorer.getChildren\n      Scorer scorer = weight.scorer(ctx, ctx.reader().getLiveDocs());\n      if (scorer != null) {\n        final LeafCollector leafCollector = collector.getLeafCollector(ctx);\n        leafCollector.setScorer(scorer);\n        for (int doc = scorer.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = scorer.nextDoc()) {\n          leafCollector.collect(doc);\n        }\n      }\n    }\n  }\n\n","bugFix":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinIndexSearcher#search(List[LeafReaderContext],Weight,Collector).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinIndexSearcher#search(List[LeafReaderContext],Weight,Collector).mjava","sourceNew":"  @Override\n  protected void search(List<LeafReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    for (LeafReaderContext ctx : leaves) { // search each subreader\n      // we force the use of Scorer (not BulkScorer) to make sure\n      // that the scorer passed to LeafCollector.setScorer supports\n      // Scorer.getChildren\n      Scorer scorer = weight.scorer(ctx, ctx.reader().getLiveDocs());\n      if (scorer != null) {\n        final LeafCollector leafCollector = collector.getLeafCollector(ctx);\n        leafCollector.setScorer(scorer);\n        for (int doc = scorer.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = scorer.nextDoc()) {\n          leafCollector.collect(doc);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void search(List<LeafReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    for (LeafReaderContext ctx : leaves) { // search each subreader\n      // we force the use of Scorer (not BulkScorer) to make sure\n      // that the scorer passed to LeafCollector.setScorer supports\n      // Scorer.getChildren\n      Scorer scorer = weight.scorer(ctx, ctx.reader().getLiveDocs(), true);\n      if (scorer != null) {\n        final LeafCollector leafCollector = collector.getLeafCollector(ctx);\n        leafCollector.setScorer(scorer);\n        for (int doc = scorer.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = scorer.nextDoc()) {\n          leafCollector.collect(doc);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinIndexSearcher#search(List[LeafReaderContext],Weight,Collector).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinIndexSearcher#search(List[LeafReaderContext],Weight,Collector).mjava","sourceNew":"  @Override\n  protected void search(List<LeafReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    for (LeafReaderContext ctx : leaves) { // search each subreader\n      // we force the use of Scorer (not BulkScorer) to make sure\n      // that the scorer passed to LeafCollector.setScorer supports\n      // Scorer.getChildren\n      Scorer scorer = weight.scorer(ctx);\n      if (scorer != null) {\n        final LeafCollector leafCollector = collector.getLeafCollector(ctx);\n        leafCollector.setScorer(scorer);\n        final Bits liveDocs = ctx.reader().getLiveDocs();\n        for (int doc = scorer.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = scorer.nextDoc()) {\n          if (liveDocs == null || liveDocs.get(doc)) {\n            leafCollector.collect(doc);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void search(List<LeafReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    for (LeafReaderContext ctx : leaves) { // search each subreader\n      // we force the use of Scorer (not BulkScorer) to make sure\n      // that the scorer passed to LeafCollector.setScorer supports\n      // Scorer.getChildren\n      Scorer scorer = weight.scorer(ctx, ctx.reader().getLiveDocs());\n      if (scorer != null) {\n        final LeafCollector leafCollector = collector.getLeafCollector(ctx);\n        leafCollector.setScorer(scorer);\n        for (int doc = scorer.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = scorer.nextDoc()) {\n          leafCollector.collect(doc);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinIndexSearcher#search(List[LeafReaderContext],Weight,Collector).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinIndexSearcher#search(List[LeafReaderContext],Weight,Collector).mjava","sourceNew":"  @Override\n  protected void search(List<LeafReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    for (LeafReaderContext ctx : leaves) { // search each subreader\n      // we force the use of Scorer (not BulkScorer) to make sure\n      // that the scorer passed to LeafCollector.setScorer supports\n      // Scorer.getChildren\n      Scorer scorer = weight.scorer(ctx);\n      if (scorer != null) {\n        final LeafCollector leafCollector = collector.getLeafCollector(ctx);\n        leafCollector.setScorer(scorer);\n        final Bits liveDocs = ctx.reader().getLiveDocs();\n        final DocIdSetIterator it = scorer.iterator();\n        for (int doc = it.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = it.nextDoc()) {\n          if (liveDocs == null || liveDocs.get(doc)) {\n            leafCollector.collect(doc);\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void search(List<LeafReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    for (LeafReaderContext ctx : leaves) { // search each subreader\n      // we force the use of Scorer (not BulkScorer) to make sure\n      // that the scorer passed to LeafCollector.setScorer supports\n      // Scorer.getChildren\n      Scorer scorer = weight.scorer(ctx);\n      if (scorer != null) {\n        final LeafCollector leafCollector = collector.getLeafCollector(ctx);\n        leafCollector.setScorer(scorer);\n        final Bits liveDocs = ctx.reader().getLiveDocs();\n        for (int doc = scorer.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = scorer.nextDoc()) {\n          if (liveDocs == null || liveDocs.get(doc)) {\n            leafCollector.collect(doc);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d9452e13e015fa1187b0b1bed1a1d08b9c96241","date":1485723373,"type":4,"author":"Martijn van Groningen","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinIndexSearcher#search(List[LeafReaderContext],Weight,Collector).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected void search(List<LeafReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    for (LeafReaderContext ctx : leaves) { // search each subreader\n      // we force the use of Scorer (not BulkScorer) to make sure\n      // that the scorer passed to LeafCollector.setScorer supports\n      // Scorer.getChildren\n      Scorer scorer = weight.scorer(ctx);\n      if (scorer != null) {\n        final LeafCollector leafCollector = collector.getLeafCollector(ctx);\n        leafCollector.setScorer(scorer);\n        final Bits liveDocs = ctx.reader().getLiveDocs();\n        final DocIdSetIterator it = scorer.iterator();\n        for (int doc = it.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = it.nextDoc()) {\n          if (liveDocs == null || liveDocs.get(doc)) {\n            leafCollector.collect(doc);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c3523a0ab04c3002eee3896c75ea5f10f388bcc","date":1485968422,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinIndexSearcher#search(List[LeafReaderContext],Weight,Collector).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected void search(List<LeafReaderContext> leaves, Weight weight, Collector collector) throws IOException {\n    for (LeafReaderContext ctx : leaves) { // search each subreader\n      // we force the use of Scorer (not BulkScorer) to make sure\n      // that the scorer passed to LeafCollector.setScorer supports\n      // Scorer.getChildren\n      Scorer scorer = weight.scorer(ctx);\n      if (scorer != null) {\n        final LeafCollector leafCollector = collector.getLeafCollector(ctx);\n        leafCollector.setScorer(scorer);\n        final Bits liveDocs = ctx.reader().getLiveDocs();\n        final DocIdSetIterator it = scorer.iterator();\n        for (int doc = it.nextDoc(); doc != DocIdSetIterator.NO_MORE_DOCS; doc = it.nextDoc()) {\n          if (liveDocs == null || liveDocs.get(doc)) {\n            leafCollector.collect(doc);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb17639909a369c1e64866842e5c213440acc17e":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["fb17639909a369c1e64866842e5c213440acc17e"],"781239fc84d36be12b84e4d3e2618f5f07a182e3":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"],"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":["7dd748bb245633a8195281556bb0e68a6ea97d18","9d9452e13e015fa1187b0b1bed1a1d08b9c96241"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"9d9452e13e015fa1187b0b1bed1a1d08b9c96241":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9d9452e13e015fa1187b0b1bed1a1d08b9c96241"]},"commit2Childs":{"fb17639909a369c1e64866842e5c213440acc17e":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"781239fc84d36be12b84e4d3e2618f5f07a182e3":["fb17639909a369c1e64866842e5c213440acc17e"],"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"],"7c3523a0ab04c3002eee3896c75ea5f10f388bcc":[],"7dd748bb245633a8195281556bb0e68a6ea97d18":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","9d9452e13e015fa1187b0b1bed1a1d08b9c96241"],"9d9452e13e015fa1187b0b1bed1a1d08b9c96241":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c3523a0ab04c3002eee3896c75ea5f10f388bcc","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}