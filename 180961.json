{"path":"solr/core/src/java/org/apache/solr/internal/csv/CSVParser#nextValue().mjava","commits":[{"id":"80931fa1f3b04650bde7b20e61b02063a7093ced","date":1333130683,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/internal/csv/CSVParser#nextValue().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Parses the CSV according to the given strategy\n   * and returns the next csv-value as string.\n   * \n   * @return next value in the input stream ('null' when end of file)\n   * @throws IOException on parse error or input read-failure\n   */\n  public String nextValue() throws IOException {\n    Token tkn = nextToken();\n    String ret = null;\n    switch (tkn.type) {\n      case TT_TOKEN:\n      case TT_EORECORD: \n        ret = tkn.content.toString();\n        break;\n      case TT_EOF:\n        ret = null;\n        break;\n      case TT_INVALID:\n      default:\n        // error no token available (or error)\n        throw new IOException(\n          \"(line \" + getLineNumber() \n          + \") invalid parse sequence\");\n        // unreachable: break;\n    }\n    return ret;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80931fa1f3b04650bde7b20e61b02063a7093ced":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["80931fa1f3b04650bde7b20e61b02063a7093ced"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["80931fa1f3b04650bde7b20e61b02063a7093ced"],"80931fa1f3b04650bde7b20e61b02063a7093ced":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}