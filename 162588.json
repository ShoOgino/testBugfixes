{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/StandardTokenizerFactory#StandardTokenizerFactory(Map[String,String]).mjava","commits":[{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/StandardTokenizerFactory#StandardTokenizerFactory(Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  /** Creates a new StandardTokenizerFactory */\n  public StandardTokenizerFactory(Map<String,String> args) {\n    super(args);\n    assureMatchVersion();\n    maxTokenLength = getInt(args, \"maxTokenLength\", StandardAnalyzer.DEFAULT_MAX_TOKEN_LENGTH);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff4227bb146f97aabae888091c19e48c88dbb0db","date":1406758576,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/StandardTokenizerFactory#StandardTokenizerFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/StandardTokenizerFactory#StandardTokenizerFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new StandardTokenizerFactory */\n  public StandardTokenizerFactory(Map<String,String> args) {\n    super(args);\n    maxTokenLength = getInt(args, \"maxTokenLength\", StandardAnalyzer.DEFAULT_MAX_TOKEN_LENGTH);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new StandardTokenizerFactory */\n  public StandardTokenizerFactory(Map<String,String> args) {\n    super(args);\n    assureMatchVersion();\n    maxTokenLength = getInt(args, \"maxTokenLength\", StandardAnalyzer.DEFAULT_MAX_TOKEN_LENGTH);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cdab62f058ea765dd33deb05b4f19b7d626c801","date":1406803479,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/StandardTokenizerFactory#StandardTokenizerFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/StandardTokenizerFactory#StandardTokenizerFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new StandardTokenizerFactory */\n  public StandardTokenizerFactory(Map<String,String> args) {\n    super(args);\n    assureMatchVersion();\n    maxTokenLength = getInt(args, \"maxTokenLength\", StandardAnalyzer.DEFAULT_MAX_TOKEN_LENGTH);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new StandardTokenizerFactory */\n  public StandardTokenizerFactory(Map<String,String> args) {\n    super(args);\n    maxTokenLength = getInt(args, \"maxTokenLength\", StandardAnalyzer.DEFAULT_MAX_TOKEN_LENGTH);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/StandardTokenizerFactory#StandardTokenizerFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/StandardTokenizerFactory#StandardTokenizerFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new StandardTokenizerFactory */\n  public StandardTokenizerFactory(Map<String,String> args) {\n    super(args);\n    maxTokenLength = getInt(args, \"maxTokenLength\", StandardAnalyzer.DEFAULT_MAX_TOKEN_LENGTH);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new StandardTokenizerFactory */\n  public StandardTokenizerFactory(Map<String,String> args) {\n    super(args);\n    assureMatchVersion();\n    maxTokenLength = getInt(args, \"maxTokenLength\", StandardAnalyzer.DEFAULT_MAX_TOKEN_LENGTH);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"313c36388b6cae6118f75a1860ad0ba0af7e1344","date":1601279368,"type":5,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/standard/StandardTokenizerFactory#StandardTokenizerFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/standard/StandardTokenizerFactory#StandardTokenizerFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new StandardTokenizerFactory */\n  public StandardTokenizerFactory(Map<String,String> args) {\n    super(args);\n    maxTokenLength = getInt(args, \"maxTokenLength\", StandardAnalyzer.DEFAULT_MAX_TOKEN_LENGTH);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new StandardTokenizerFactory */\n  public StandardTokenizerFactory(Map<String,String> args) {\n    super(args);\n    maxTokenLength = getInt(args, \"maxTokenLength\", StandardAnalyzer.DEFAULT_MAX_TOKEN_LENGTH);\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"313c36388b6cae6118f75a1860ad0ba0af7e1344":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["313c36388b6cae6118f75a1860ad0ba0af7e1344"]},"commit2Childs":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"313c36388b6cae6118f75a1860ad0ba0af7e1344":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["313c36388b6cae6118f75a1860ad0ba0af7e1344"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}