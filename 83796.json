{"path":"solr/core/src/java/org/apache/solr/util/circuitbreaker/CircuitBreakerManager#buildDefaultCircuitBreakerManager(SolrCore).mjava","commits":[{"id":"b73e9c1914a76cfa16576e9d7165e286cc35c36e","date":1593099382,"type":0,"author":"Atri Sharma","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/circuitbreaker/CircuitBreakerManager#buildDefaultCircuitBreakerManager(SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Register default circuit breakers and return a constructed CircuitBreakerManager\n   * instance which serves the given circuit breakers.\n   *\n   * Any default circuit breakers should be registered here\n   */\n  public static CircuitBreakerManager buildDefaultCircuitBreakerManager(SolrCore solrCore) {\n    CircuitBreakerManager circuitBreakerManager = new CircuitBreakerManager();\n\n    // Install the default circuit breakers\n    CircuitBreaker memoryCircuitBreaker = new MemoryCircuitBreaker(solrCore);\n    circuitBreakerManager.registerCircuitBreaker(CircuitBreakerType.MEMORY, memoryCircuitBreaker);\n\n    return circuitBreakerManager;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c24f8f07a3e4a885c0e19286d51575df197a611b","date":1593281672,"type":4,"author":"Atri Sharma","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/circuitbreaker/CircuitBreakerManager#buildDefaultCircuitBreakerManager(SolrCore).mjava","sourceNew":null,"sourceOld":"  /**\n   * Register default circuit breakers and return a constructed CircuitBreakerManager\n   * instance which serves the given circuit breakers.\n   *\n   * Any default circuit breakers should be registered here\n   */\n  public static CircuitBreakerManager buildDefaultCircuitBreakerManager(SolrCore solrCore) {\n    CircuitBreakerManager circuitBreakerManager = new CircuitBreakerManager();\n\n    // Install the default circuit breakers\n    CircuitBreaker memoryCircuitBreaker = new MemoryCircuitBreaker(solrCore);\n    circuitBreakerManager.registerCircuitBreaker(CircuitBreakerType.MEMORY, memoryCircuitBreaker);\n\n    return circuitBreakerManager;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c24f8f07a3e4a885c0e19286d51575df197a611b":["b73e9c1914a76cfa16576e9d7165e286cc35c36e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b73e9c1914a76cfa16576e9d7165e286cc35c36e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c24f8f07a3e4a885c0e19286d51575df197a611b"]},"commit2Childs":{"c24f8f07a3e4a885c0e19286d51575df197a611b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b73e9c1914a76cfa16576e9d7165e286cc35c36e"],"b73e9c1914a76cfa16576e9d7165e286cc35c36e":["c24f8f07a3e4a885c0e19286d51575df197a611b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}