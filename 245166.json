{"path":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#testShapeToFromStringWKT().mjava","commits":[{"id":"03d8df7e95735d8cda6a255c42e0997c699bb176","date":1458157920,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#testShapeToFromStringWKT().mjava","pathOld":"/dev/null","sourceNew":"  public void testShapeToFromStringWKT() throws Exception {\n    // Check WKT\n    setupRPTField(\"miles\", \"true\", \"WKT\");\n\n    AbstractSpatialFieldType ftype = (AbstractSpatialFieldType)\n        h.getCore().getLatestSchema().getField(\"geo\").getType();\n\n    String wkt = \"POINT (1 2)\";\n    Shape shape = ftype.parseShape(wkt);\n    String out = ftype.shapeToString(shape);\n\n    assertEquals(wkt, out);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23aec8f6a0b5a11d050d784a13871261bef7c925","date":1465332514,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#testShapeToFromStringWKT().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#testShapeToFromStringWKT().mjava","sourceNew":"  public void testShapeToFromStringWKT() throws Exception {\n    setupRPTField(\"miles\", \"true\", \"WKT\", random().nextBoolean()\n        ? new SpatialRecursivePrefixTreeFieldType() : new RptWithGeometrySpatialField());\n\n    AbstractSpatialFieldType ftype = (AbstractSpatialFieldType)\n        h.getCore().getLatestSchema().getField(\"geo\").getType();\n\n    String wkt = \"POINT (1 2)\";\n    Shape shape = ftype.parseShape(wkt);\n    String out = ftype.shapeToString(shape);\n\n    assertEquals(wkt, out);\n\n    //assert fails GeoJSON\n    try {\n      ftype.parseShape(\"{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[1,2]}\");\n      fail(\"Should not parse GeoJSON if told format is WKT\");\n    } catch (SolrException e) {// expected\n      System.out.println(e);\n    }\n\n  }\n\n","sourceOld":"  public void testShapeToFromStringWKT() throws Exception {\n    // Check WKT\n    setupRPTField(\"miles\", \"true\", \"WKT\");\n\n    AbstractSpatialFieldType ftype = (AbstractSpatialFieldType)\n        h.getCore().getLatestSchema().getField(\"geo\").getType();\n\n    String wkt = \"POINT (1 2)\";\n    Shape shape = ftype.parseShape(wkt);\n    String out = ftype.shapeToString(shape);\n\n    assertEquals(wkt, out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#testShapeToFromStringWKT().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#testShapeToFromStringWKT().mjava","sourceNew":"  public void testShapeToFromStringWKT() throws Exception {\n    setupRPTField(\"miles\", \"true\", \"WKT\", random().nextBoolean()\n        ? new SpatialRecursivePrefixTreeFieldType() : new RptWithGeometrySpatialField());\n\n    AbstractSpatialFieldType ftype = (AbstractSpatialFieldType)\n        h.getCore().getLatestSchema().getField(\"geo\").getType();\n\n    String wkt = \"POINT (1 2)\";\n    Shape shape = ftype.parseShape(wkt);\n    String out = ftype.shapeToString(shape);\n\n    assertEquals(wkt, out);\n\n    //assert fails GeoJSON\n    try {\n      ftype.parseShape(\"{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[1,2]}\");\n      fail(\"Should not parse GeoJSON if told format is WKT\");\n    } catch (SolrException e) {// expected\n      System.out.println(e);\n    }\n\n  }\n\n","sourceOld":"  public void testShapeToFromStringWKT() throws Exception {\n    // Check WKT\n    setupRPTField(\"miles\", \"true\", \"WKT\");\n\n    AbstractSpatialFieldType ftype = (AbstractSpatialFieldType)\n        h.getCore().getLatestSchema().getField(\"geo\").getType();\n\n    String wkt = \"POINT (1 2)\";\n    Shape shape = ftype.parseShape(wkt);\n    String out = ftype.shapeToString(shape);\n\n    assertEquals(wkt, out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1a307447328c95a00248512b40d7a5ff12ecd6a","date":1564817449,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#testShapeToFromStringWKT().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#testShapeToFromStringWKT().mjava","sourceNew":"  public void testShapeToFromStringWKT() throws Exception {\n    setupRPTField(\"miles\", \"true\", \"WKT\", random().nextBoolean()\n        ? new SpatialRecursivePrefixTreeFieldType() : new RptWithGeometrySpatialField());\n\n    AbstractSpatialFieldType ftype = (AbstractSpatialFieldType)\n        h.getCore().getLatestSchema().getField(\"geo\").getType();\n\n    String wkt = \"POINT (1 2)\";\n    Shape shape = ftype.parseShape(wkt);\n    String out = ftype.shapeToString(shape);\n\n    assertEquals(wkt, out);\n\n    //assert fails GeoJSON\n    expectThrows(SolrException.class, () -> ftype.parseShape(\"{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[1,2]}\"));\n\n  }\n\n","sourceOld":"  public void testShapeToFromStringWKT() throws Exception {\n    setupRPTField(\"miles\", \"true\", \"WKT\", random().nextBoolean()\n        ? new SpatialRecursivePrefixTreeFieldType() : new RptWithGeometrySpatialField());\n\n    AbstractSpatialFieldType ftype = (AbstractSpatialFieldType)\n        h.getCore().getLatestSchema().getField(\"geo\").getType();\n\n    String wkt = \"POINT (1 2)\";\n    Shape shape = ftype.parseShape(wkt);\n    String out = ftype.shapeToString(shape);\n\n    assertEquals(wkt, out);\n\n    //assert fails GeoJSON\n    try {\n      ftype.parseShape(\"{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[1,2]}\");\n      fail(\"Should not parse GeoJSON if told format is WKT\");\n    } catch (SolrException e) {// expected\n      System.out.println(e);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#testShapeToFromStringWKT().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#testShapeToFromStringWKT().mjava","sourceNew":"  public void testShapeToFromStringWKT() throws Exception {\n    setupRPTField(\"miles\", \"true\", \"WKT\", random().nextBoolean()\n        ? new SpatialRecursivePrefixTreeFieldType() : new RptWithGeometrySpatialField());\n\n    AbstractSpatialFieldType ftype = (AbstractSpatialFieldType)\n        h.getCore().getLatestSchema().getField(\"geo\").getType();\n\n    String wkt = \"POINT (1 2)\";\n    Shape shape = ftype.parseShape(wkt);\n    String out = ftype.shapeToString(shape);\n\n    assertEquals(wkt, out);\n\n    //assert fails GeoJSON\n    expectThrows(SolrException.class, () -> ftype.parseShape(\"{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[1,2]}\"));\n\n  }\n\n","sourceOld":"  public void testShapeToFromStringWKT() throws Exception {\n    setupRPTField(\"miles\", \"true\", \"WKT\", random().nextBoolean()\n        ? new SpatialRecursivePrefixTreeFieldType() : new RptWithGeometrySpatialField());\n\n    AbstractSpatialFieldType ftype = (AbstractSpatialFieldType)\n        h.getCore().getLatestSchema().getField(\"geo\").getType();\n\n    String wkt = \"POINT (1 2)\";\n    Shape shape = ftype.parseShape(wkt);\n    String out = ftype.shapeToString(shape);\n\n    assertEquals(wkt, out);\n\n    //assert fails GeoJSON\n    try {\n      ftype.parseShape(\"{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[1,2]}\");\n      fail(\"Should not parse GeoJSON if told format is WKT\");\n    } catch (SolrException e) {// expected\n      System.out.println(e);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","date":1565097295,"type":3,"author":"Jan HÃ¸ydahl","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#testShapeToFromStringWKT().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#testShapeToFromStringWKT().mjava","sourceNew":"  public void testShapeToFromStringWKT() throws Exception {\n    setupRPTField(\"miles\", \"true\", \"WKT\", random().nextBoolean()\n        ? new SpatialRecursivePrefixTreeFieldType() : new RptWithGeometrySpatialField());\n\n    AbstractSpatialFieldType ftype = (AbstractSpatialFieldType)\n        h.getCore().getLatestSchema().getField(\"geo\").getType();\n\n    String wkt = \"POINT (1 2)\";\n    Shape shape = ftype.parseShape(wkt);\n    String out = ftype.shapeToString(shape);\n\n    assertEquals(wkt, out);\n\n    //assert fails GeoJSON\n    expectThrows(SolrException.class, () -> ftype.parseShape(\"{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[1,2]}\"));\n\n  }\n\n","sourceOld":"  public void testShapeToFromStringWKT() throws Exception {\n    setupRPTField(\"miles\", \"true\", \"WKT\", random().nextBoolean()\n        ? new SpatialRecursivePrefixTreeFieldType() : new RptWithGeometrySpatialField());\n\n    AbstractSpatialFieldType ftype = (AbstractSpatialFieldType)\n        h.getCore().getLatestSchema().getField(\"geo\").getType();\n\n    String wkt = \"POINT (1 2)\";\n    Shape shape = ftype.parseShape(wkt);\n    String out = ftype.shapeToString(shape);\n\n    assertEquals(wkt, out);\n\n    //assert fails GeoJSON\n    try {\n      ftype.parseShape(\"{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[1,2]}\");\n      fail(\"Should not parse GeoJSON if told format is WKT\");\n    } catch (SolrException e) {// expected\n      System.out.println(e);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#testShapeToFromStringWKT().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/SpatialRPTFieldTypeTest#testShapeToFromStringWKT().mjava","sourceNew":"  public void testShapeToFromStringWKT() throws Exception {\n    setupRPTField(\"miles\", \"true\", \"WKT\", random().nextBoolean()\n        ? new SpatialRecursivePrefixTreeFieldType() : new RptWithGeometrySpatialField());\n\n    @SuppressWarnings({\"rawtypes\"})\n    AbstractSpatialFieldType ftype = (AbstractSpatialFieldType)\n        h.getCore().getLatestSchema().getField(\"geo\").getType();\n\n    String wkt = \"POINT (1 2)\";\n    Shape shape = ftype.parseShape(wkt);\n    String out = ftype.shapeToString(shape);\n\n    assertEquals(wkt, out);\n\n    //assert fails GeoJSON\n    expectThrows(SolrException.class, () -> ftype.parseShape(\"{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[1,2]}\"));\n\n  }\n\n","sourceOld":"  public void testShapeToFromStringWKT() throws Exception {\n    setupRPTField(\"miles\", \"true\", \"WKT\", random().nextBoolean()\n        ? new SpatialRecursivePrefixTreeFieldType() : new RptWithGeometrySpatialField());\n\n    AbstractSpatialFieldType ftype = (AbstractSpatialFieldType)\n        h.getCore().getLatestSchema().getField(\"geo\").getType();\n\n    String wkt = \"POINT (1 2)\";\n    Shape shape = ftype.parseShape(wkt);\n    String out = ftype.shapeToString(shape);\n\n    assertEquals(wkt, out);\n\n    //assert fails GeoJSON\n    expectThrows(SolrException.class, () -> ftype.parseShape(\"{\\\"type\\\":\\\"Point\\\",\\\"coordinates\\\":[1,2]}\"));\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"03d8df7e95735d8cda6a255c42e0997c699bb176":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["23aec8f6a0b5a11d050d784a13871261bef7c925"],"23aec8f6a0b5a11d050d784a13871261bef7c925":["03d8df7e95735d8cda6a255c42e0997c699bb176"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":["23aec8f6a0b5a11d050d784a13871261bef7c925","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"f8061ddd97f3352007d927dae445884a6f3d857b":["23aec8f6a0b5a11d050d784a13871261bef7c925","d1a307447328c95a00248512b40d7a5ff12ecd6a"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["03d8df7e95735d8cda6a255c42e0997c699bb176","23aec8f6a0b5a11d050d784a13871261bef7c925"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["d1a307447328c95a00248512b40d7a5ff12ecd6a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["03d8df7e95735d8cda6a255c42e0997c699bb176"],"03d8df7e95735d8cda6a255c42e0997c699bb176":["23aec8f6a0b5a11d050d784a13871261bef7c925","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"d1a307447328c95a00248512b40d7a5ff12ecd6a":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","e98520789adb1d5ad05afb4956eca0944a929688"],"23aec8f6a0b5a11d050d784a13871261bef7c925":["d1a307447328c95a00248512b40d7a5ff12ecd6a","d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693":[],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["d8daa7a1d5d0c033d73962d5ca3bf3f9c9687693","f8061ddd97f3352007d927dae445884a6f3d857b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}