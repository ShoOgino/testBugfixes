{"path":"contrib/snowball/src/java/net/sf/snowball/ext/SpanishStemmer#r_postlude().mjava","commits":[{"id":"043c298cb215f13ba7b9b81d20760704e8f93d66","date":1107566743,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/snowball/src/java/net/sf/snowball/ext/SpanishStemmer#r_postlude().mjava","pathOld":"sandbox/contributions/snowball/src/java/net/sf/snowball/ext/SpanishStemmer#r_postlude().mjava","sourceNew":"        private boolean r_postlude() {\n            int among_var;\n            int v_1;\n            // repeat, line 49\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // (, line 49\n                    // [, line 50\n                    bra = cursor;\n                    // substring, line 50\n                    among_var = find_among(a_0, 6);\n                    if (among_var == 0)\n                    {\n                        break lab1;\n                    }\n                    // ], line 50\n                    ket = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab1;\n                        case 1:\n                            // (, line 51\n                            // <-, line 51\n                            slice_from(\"a\");\n                            break;\n                        case 2:\n                            // (, line 52\n                            // <-, line 52\n                            slice_from(\"e\");\n                            break;\n                        case 3:\n                            // (, line 53\n                            // <-, line 53\n                            slice_from(\"i\");\n                            break;\n                        case 4:\n                            // (, line 54\n                            // <-, line 54\n                            slice_from(\"o\");\n                            break;\n                        case 5:\n                            // (, line 55\n                            // <-, line 55\n                            slice_from(\"u\");\n                            break;\n                        case 6:\n                            // (, line 57\n                            // next, line 57\n                            if (cursor >= limit)\n                            {\n                                break lab1;\n                            }\n                            cursor++;\n                            break;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_postlude() {\n            int among_var;\n            int v_1;\n            // repeat, line 49\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // (, line 49\n                    // [, line 50\n                    bra = cursor;\n                    // substring, line 50\n                    among_var = find_among(a_0, 6);\n                    if (among_var == 0)\n                    {\n                        break lab1;\n                    }\n                    // ], line 50\n                    ket = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab1;\n                        case 1:\n                            // (, line 51\n                            // <-, line 51\n                            slice_from(\"a\");\n                            break;\n                        case 2:\n                            // (, line 52\n                            // <-, line 52\n                            slice_from(\"e\");\n                            break;\n                        case 3:\n                            // (, line 53\n                            // <-, line 53\n                            slice_from(\"i\");\n                            break;\n                        case 4:\n                            // (, line 54\n                            // <-, line 54\n                            slice_from(\"o\");\n                            break;\n                        case 5:\n                            // (, line 55\n                            // <-, line 55\n                            slice_from(\"u\");\n                            break;\n                        case 6:\n                            // (, line 57\n                            // next, line 57\n                            if (cursor >= limit)\n                            {\n                                break lab1;\n                            }\n                            cursor++;\n                            break;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b62da6a75575f59a016a076b4753dc6e20c74b44","date":1219528967,"type":5,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/SpanishStemmer#r_postlude().mjava","pathOld":"contrib/snowball/src/java/net/sf/snowball/ext/SpanishStemmer#r_postlude().mjava","sourceNew":"        private boolean r_postlude() {\n            int among_var;\n            int v_1;\n            // repeat, line 49\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // (, line 49\n                    // [, line 50\n                    bra = cursor;\n                    // substring, line 50\n                    among_var = find_among(a_0, 6);\n                    if (among_var == 0)\n                    {\n                        break lab1;\n                    }\n                    // ], line 50\n                    ket = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab1;\n                        case 1:\n                            // (, line 51\n                            // <-, line 51\n                            slice_from(\"a\");\n                            break;\n                        case 2:\n                            // (, line 52\n                            // <-, line 52\n                            slice_from(\"e\");\n                            break;\n                        case 3:\n                            // (, line 53\n                            // <-, line 53\n                            slice_from(\"i\");\n                            break;\n                        case 4:\n                            // (, line 54\n                            // <-, line 54\n                            slice_from(\"o\");\n                            break;\n                        case 5:\n                            // (, line 55\n                            // <-, line 55\n                            slice_from(\"u\");\n                            break;\n                        case 6:\n                            // (, line 57\n                            // next, line 57\n                            if (cursor >= limit)\n                            {\n                                break lab1;\n                            }\n                            cursor++;\n                            break;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_postlude() {\n            int among_var;\n            int v_1;\n            // repeat, line 49\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // (, line 49\n                    // [, line 50\n                    bra = cursor;\n                    // substring, line 50\n                    among_var = find_among(a_0, 6);\n                    if (among_var == 0)\n                    {\n                        break lab1;\n                    }\n                    // ], line 50\n                    ket = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab1;\n                        case 1:\n                            // (, line 51\n                            // <-, line 51\n                            slice_from(\"a\");\n                            break;\n                        case 2:\n                            // (, line 52\n                            // <-, line 52\n                            slice_from(\"e\");\n                            break;\n                        case 3:\n                            // (, line 53\n                            // <-, line 53\n                            slice_from(\"i\");\n                            break;\n                        case 4:\n                            // (, line 54\n                            // <-, line 54\n                            slice_from(\"o\");\n                            break;\n                        case 5:\n                            // (, line 55\n                            // <-, line 55\n                            slice_from(\"u\");\n                            break;\n                        case 6:\n                            // (, line 57\n                            // next, line 57\n                            if (cursor >= limit)\n                            {\n                                break lab1;\n                            }\n                            cursor++;\n                            break;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b62da6a75575f59a016a076b4753dc6e20c74b44"]},"commit2Childs":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"043c298cb215f13ba7b9b81d20760704e8f93d66":["b62da6a75575f59a016a076b4753dc6e20c74b44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["043c298cb215f13ba7b9b81d20760704e8f93d66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}