{"path":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","pathOld":"src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","sourceNew":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    RAMDirectory directory = new RAMDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n  }\n\n","sourceOld":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    RAMDirectory directory = new RAMDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","sourceNew":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    RAMDirectory directory = new RAMDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n  }\n\n","sourceOld":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    RAMDirectory directory = new RAMDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","sourceNew":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    MockRAMDirectory directory = new MockRAMDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n  }\n\n","sourceOld":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    RAMDirectory directory = new RAMDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","sourceNew":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Random random = newRandom();\n    MockRAMDirectory directory = newDirectory(random);\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    MockRAMDirectory directory = new MockRAMDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a05409176bd65129d67a785ee70e881e238a9aef","date":1282582843,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","sourceNew":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Random random = newRandom();\n    Directory directory = newDirectory(random);\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Random random = newRandom();\n    MockRAMDirectory directory = newDirectory(random);\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","sourceNew":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Directory directory = newDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Random random = newRandom();\n    Directory directory = newDirectory(random);\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","sourceNew":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Directory directory = newDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    RAMDirectory directory = new RAMDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c19f985e36a65cc969e8e564fe337a0d41512075","date":1296330536,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","sourceNew":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Directory directory = newDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10).setMergePolicy(newInOrderLogMergePolicy()));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Directory directory = newDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","sourceNew":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Directory directory = newDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10).setMergePolicy(newInOrderLogMergePolicy()));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Directory directory = newDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","sourceNew":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Directory directory = newDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10).setMergePolicy(newInOrderLogMergePolicy()));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Directory directory = newDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"01e5948db9a07144112d2f08f28ca2e3cd880348","date":1301759232,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","sourceNew":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Directory directory = newDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10).setMergePolicy(newLogMergePolicy()));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Directory directory = newDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10).setMergePolicy(newInOrderLogMergePolicy()));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","sourceNew":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Directory directory = newDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10).setMergePolicy(newLogMergePolicy()));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Directory directory = newDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10).setMergePolicy(newInOrderLogMergePolicy()));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","sourceNew":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Directory directory = newDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10).setMergePolicy(newLogMergePolicy()));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Directory directory = newDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10).setMergePolicy(newLogMergePolicy()));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","sourceNew":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Directory directory = newDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10).setMergePolicy(newLogMergePolicy()));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Directory directory = newDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10).setMergePolicy(newLogMergePolicy()));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","sourceNew":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Directory directory = newDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10).setMergePolicy(newLogMergePolicy()));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Directory directory = newDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10).setMergePolicy(newInOrderLogMergePolicy()));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","sourceNew":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Directory directory = newDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10).setMergePolicy(newLogMergePolicy()));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Directory directory = newDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10).setMergePolicy(newInOrderLogMergePolicy()));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredSearch#testFilteredSearch().mjava","sourceNew":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Directory directory = newDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10).setMergePolicy(newLogMergePolicy()));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testFilteredSearch() throws CorruptIndexException, LockObtainFailedException, IOException {\n    boolean enforceSingleSegment = true;\n    Directory directory = newDirectory();\n    int[] filterBits = {1, 36};\n    SimpleDocIdSetFilter filter = new SimpleDocIdSetFilter(filterBits);\n    IndexWriter writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    // run the test on more than one segment\n    enforceSingleSegment = false;\n    // reset - it is stateful\n    filter.reset();\n    writer.close();\n    writer = new IndexWriter(directory, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setOpenMode(OpenMode.CREATE).setMaxBufferedDocs(10).setMergePolicy(newLogMergePolicy()));\n    // we index 60 docs - this will create 6 segments\n    searchFiltered(writer, directory, filter, enforceSingleSegment);\n    writer.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"962d04139994fce5193143ef35615499a9a96d78":["45669a651c970812a680841b97a77cce06af559f","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","1f653cfcf159baeaafe5d01682a911e95bba4012"],"c19f985e36a65cc969e8e564fe337a0d41512075":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"01e5948db9a07144112d2f08f28ca2e3cd880348":["c19f985e36a65cc969e8e564fe337a0d41512075"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["01e5948db9a07144112d2f08f28ca2e3cd880348"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["a05409176bd65129d67a785ee70e881e238a9aef"],"a3776dccca01c11e7046323cfad46a3b4a471233":["c19f985e36a65cc969e8e564fe337a0d41512075","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["1f653cfcf159baeaafe5d01682a911e95bba4012","c19f985e36a65cc969e8e564fe337a0d41512075"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["d572389229127c297dd1fa5ce4758e1cec41e799"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a05409176bd65129d67a785ee70e881e238a9aef":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"45669a651c970812a680841b97a77cce06af559f":["bde51b089eb7f86171eb3406e38a274743f9b7ac","01e5948db9a07144112d2f08f28ca2e3cd880348"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c19f985e36a65cc969e8e564fe337a0d41512075"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["a05409176bd65129d67a785ee70e881e238a9aef"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c19f985e36a65cc969e8e564fe337a0d41512075":["01e5948db9a07144112d2f08f28ca2e3cd880348","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"01e5948db9a07144112d2f08f28ca2e3cd880348":["f2c5f0cb44df114db4228c8f77861714b5cabaea","45669a651c970812a680841b97a77cce06af559f"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c19f985e36a65cc969e8e564fe337a0d41512075","29ef99d61cda9641b6250bf9567329a6e65f901d"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a05409176bd65129d67a785ee70e881e238a9aef":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"45669a651c970812a680841b97a77cce06af559f":["962d04139994fce5193143ef35615499a9a96d78"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["45669a651c970812a680841b97a77cce06af559f"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}