{"path":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","pathOld":"/dev/null","sourceNew":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n\n    // TODO: stop using locally defined streams once stream.file and\n    // stream.body work everywhere\n    List<ContentStream> cs = new ArrayList<ContentStream>();\n    cs.add(new ContentStreamBase.FileStream(new File(filename)));\n    req.setContentStreams(cs);\n    return h.queryAndResponse(\"/update/extract\", req);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","sourceNew":null,"sourceOld":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n\n    // TODO: stop using locally defined streams once stream.file and\n    // stream.body work everywhere\n    List<ContentStream> cs = new ArrayList<ContentStream>();\n    cs.add(new ContentStreamBase.FileStream(new File(filename)));\n    req.setContentStreams(cs);\n    return h.queryAndResponse(\"/update/extract\", req);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","pathOld":"contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","sourceNew":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n\n    // TODO: stop using locally defined streams once stream.file and\n    // stream.body work everywhere\n    List<ContentStream> cs = new ArrayList<ContentStream>();\n    cs.add(new ContentStreamBase.FileStream(new File(filename)));\n    req.setContentStreams(cs);\n    return h.queryAndResponse(\"/update/extract\", req);\n  }\n\n","sourceOld":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n\n    // TODO: stop using locally defined streams once stream.file and\n    // stream.body work everywhere\n    List<ContentStream> cs = new ArrayList<ContentStream>();\n    cs.add(new ContentStreamBase.FileStream(new File(filename)));\n    req.setContentStreams(cs);\n    return h.queryAndResponse(\"/update/extract\", req);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","pathOld":"/dev/null","sourceNew":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n\n    // TODO: stop using locally defined streams once stream.file and\n    // stream.body work everywhere\n    List<ContentStream> cs = new ArrayList<ContentStream>();\n    cs.add(new ContentStreamBase.FileStream(new File(filename)));\n    req.setContentStreams(cs);\n    return h.queryAndResponse(\"/update/extract\", req);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc32bec5ee61c018bb3bf5365b403805a5c6868a","date":1287103256,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","sourceNew":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n    try {\n      // TODO: stop using locally defined streams once stream.file and\n      // stream.body work everywhere\n      List<ContentStream> cs = new ArrayList<ContentStream>();\n      cs.add(new ContentStreamBase.FileStream(new File(filename)));\n      req.setContentStreams(cs);\n      return h.queryAndResponse(\"/update/extract\", req);\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n\n    // TODO: stop using locally defined streams once stream.file and\n    // stream.body work everywhere\n    List<ContentStream> cs = new ArrayList<ContentStream>();\n    cs.add(new ContentStreamBase.FileStream(new File(filename)));\n    req.setContentStreams(cs);\n    return h.queryAndResponse(\"/update/extract\", req);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","sourceNew":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n    try {\n      // TODO: stop using locally defined streams once stream.file and\n      // stream.body work everywhere\n      List<ContentStream> cs = new ArrayList<ContentStream>();\n      cs.add(new ContentStreamBase.FileStream(new File(filename)));\n      req.setContentStreams(cs);\n      return h.queryAndResponse(\"/update/extract\", req);\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n\n    // TODO: stop using locally defined streams once stream.file and\n    // stream.body work everywhere\n    List<ContentStream> cs = new ArrayList<ContentStream>();\n    cs.add(new ContentStreamBase.FileStream(new File(filename)));\n    req.setContentStreams(cs);\n    return h.queryAndResponse(\"/update/extract\", req);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","sourceNew":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n    try {\n      // TODO: stop using locally defined streams once stream.file and\n      // stream.body work everywhere\n      List<ContentStream> cs = new ArrayList<ContentStream>();\n      cs.add(new ContentStreamBase.FileStream(new File(filename)));\n      req.setContentStreams(cs);\n      return h.queryAndResponse(\"/update/extract\", req);\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n\n    // TODO: stop using locally defined streams once stream.file and\n    // stream.body work everywhere\n    List<ContentStream> cs = new ArrayList<ContentStream>();\n    cs.add(new ContentStreamBase.FileStream(new File(filename)));\n    req.setContentStreams(cs);\n    return h.queryAndResponse(\"/update/extract\", req);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85e42ae02aedcd775cc14af2a510f707dbe60a39","date":1293826640,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","sourceNew":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n    try {\n      // TODO: stop using locally defined streams once stream.file and\n      // stream.body work everywhere\n      List<ContentStream> cs = new ArrayList<ContentStream>();\n      cs.add(new ContentStreamBase.FileStream(getFile(filename)));\n      req.setContentStreams(cs);\n      return h.queryAndResponse(\"/update/extract\", req);\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n    try {\n      // TODO: stop using locally defined streams once stream.file and\n      // stream.body work everywhere\n      List<ContentStream> cs = new ArrayList<ContentStream>();\n      cs.add(new ContentStreamBase.FileStream(new File(filename)));\n      req.setContentStreams(cs);\n      return h.queryAndResponse(\"/update/extract\", req);\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","date":1294014627,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","sourceNew":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n    try {\n      // TODO: stop using locally defined streams once stream.file and\n      // stream.body work everywhere\n      List<ContentStream> cs = new ArrayList<ContentStream>();\n      cs.add(new ContentStreamBase.FileStream(getFile(filename)));\n      req.setContentStreams(cs);\n      return h.queryAndResponse(\"/update/extract\", req);\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n    try {\n      // TODO: stop using locally defined streams once stream.file and\n      // stream.body work everywhere\n      List<ContentStream> cs = new ArrayList<ContentStream>();\n      cs.add(new ContentStreamBase.FileStream(new File(filename)));\n      req.setContentStreams(cs);\n      return h.queryAndResponse(\"/update/extract\", req);\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","sourceNew":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n    try {\n      // TODO: stop using locally defined streams once stream.file and\n      // stream.body work everywhere\n      List<ContentStream> cs = new ArrayList<ContentStream>();\n      cs.add(new ContentStreamBase.FileStream(getFile(filename)));\n      req.setContentStreams(cs);\n      return h.queryAndResponse(\"/update/extract\", req);\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n    try {\n      // TODO: stop using locally defined streams once stream.file and\n      // stream.body work everywhere\n      List<ContentStream> cs = new ArrayList<ContentStream>();\n      cs.add(new ContentStreamBase.FileStream(new File(filename)));\n      req.setContentStreams(cs);\n      return h.queryAndResponse(\"/update/extract\", req);\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d345a86357a4042faeebfad2693a070019c95918","date":1305385272,"type":5,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","sourceNew":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n    try {\n      // TODO: stop using locally defined streams once stream.file and\n      // stream.body work everywhere\n      List<ContentStream> cs = new ArrayList<ContentStream>();\n      cs.add(new ContentStreamBase.FileStream(getFile(filename)));\n      req.setContentStreams(cs);\n      return h.queryAndResponse(\"/update/extract\", req);\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n    try {\n      // TODO: stop using locally defined streams once stream.file and\n      // stream.body work everywhere\n      List<ContentStream> cs = new ArrayList<ContentStream>();\n      cs.add(new ContentStreamBase.FileStream(getFile(filename)));\n      req.setContentStreams(cs);\n      return h.queryAndResponse(\"/update/extract\", req);\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","sourceNew":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n    try {\n      // TODO: stop using locally defined streams once stream.file and\n      // stream.body work everywhere\n      List<ContentStream> cs = new ArrayList<ContentStream>();\n      cs.add(new ContentStreamBase.FileStream(getFile(filename)));\n      req.setContentStreams(cs);\n      return h.queryAndResponse(\"/update/extract\", req);\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n    try {\n      // TODO: stop using locally defined streams once stream.file and\n      // stream.body work everywhere\n      List<ContentStream> cs = new ArrayList<ContentStream>();\n      cs.add(new ContentStreamBase.FileStream(getFile(filename)));\n      req.setContentStreams(cs);\n      return h.queryAndResponse(\"/update/extract\", req);\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/extraction/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","pathOld":"solr/contrib/extraction/src/test/java/org/apache/solr/handler/ExtractingRequestHandlerTest#loadLocal(String,String...).mjava","sourceNew":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n    try {\n      // TODO: stop using locally defined streams once stream.file and\n      // stream.body work everywhere\n      List<ContentStream> cs = new ArrayList<ContentStream>();\n      cs.add(new ContentStreamBase.FileStream(getFile(filename)));\n      req.setContentStreams(cs);\n      return h.queryAndResponse(\"/update/extract\", req);\n    } finally {\n      req.close();\n    }\n  }\n\n","sourceOld":"  SolrQueryResponse loadLocal(String filename, String... args) throws Exception {\n    LocalSolrQueryRequest req = (LocalSolrQueryRequest) req(args);\n    try {\n      // TODO: stop using locally defined streams once stream.file and\n      // stream.body work everywhere\n      List<ContentStream> cs = new ArrayList<ContentStream>();\n      cs.add(new ContentStreamBase.FileStream(getFile(filename)));\n      req.setContentStreams(cs);\n      return h.queryAndResponse(\"/update/extract\", req);\n    } finally {\n      req.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","85e42ae02aedcd775cc14af2a510f707dbe60a39"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1da8d55113b689b06716246649de6f62430f15c0","dc32bec5ee61c018bb3bf5365b403805a5c6868a"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"d345a86357a4042faeebfad2693a070019c95918":["85e42ae02aedcd775cc14af2a510f707dbe60a39"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","85e42ae02aedcd775cc14af2a510f707dbe60a39"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["70ad682703b8585f5d0a637efec044d57ec05efb","d345a86357a4042faeebfad2693a070019c95918"],"a3776dccca01c11e7046323cfad46a3b4a471233":["85e42ae02aedcd775cc14af2a510f707dbe60a39","d345a86357a4042faeebfad2693a070019c95918"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85e42ae02aedcd775cc14af2a510f707dbe60a39":["dc32bec5ee61c018bb3bf5365b403805a5c6868a"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["1da8d55113b689b06716246649de6f62430f15c0","dc32bec5ee61c018bb3bf5365b403805a5c6868a"],"dc32bec5ee61c018bb3bf5365b403805a5c6868a":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d345a86357a4042faeebfad2693a070019c95918"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":["c3a8a449466c1ff7ce2274fe73dab487256964b4"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c"],"1da8d55113b689b06716246649de6f62430f15c0":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511","dc32bec5ee61c018bb3bf5365b403805a5c6868a"],"d345a86357a4042faeebfad2693a070019c95918":["c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c":[],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"85e42ae02aedcd775cc14af2a510f707dbe60a39":["70ad682703b8585f5d0a637efec044d57ec05efb","d345a86357a4042faeebfad2693a070019c95918","ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","a3776dccca01c11e7046323cfad46a3b4a471233"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["70ad682703b8585f5d0a637efec044d57ec05efb"],"dc32bec5ee61c018bb3bf5365b403805a5c6868a":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","85e42ae02aedcd775cc14af2a510f707dbe60a39","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ff9cf7165d6cbafe4ef4431ecc2dc1af9cb2316c","c3a8a449466c1ff7ce2274fe73dab487256964b4","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}