{"path":"src/java/org/apache/solr/analysis/MappingCharFilterFactory#inform(ResourceLoader).mjava","commits":[{"id":"00c1e7284eb0e728903446dd05972acc9905dd53","date":1226627781,"type":0,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/MappingCharFilterFactory#inform(ResourceLoader).mjava","pathOld":"/dev/null","sourceNew":"  public void inform(ResourceLoader loader) {\n    mapping = args.get( \"mapping\" );\n\n    if( mapping != null ){\n      List<String> wlist = null;\n      try{\n        File mappingFile = new File( mapping );\n        if( mappingFile.exists() ){\n          wlist = loader.getLines( mapping );\n        }\n        else{\n          List<String> files = StrUtils.splitFileNames( mapping );\n          wlist = new ArrayList<String>();\n          for( String file : files ){\n            List<String> lines = loader.getLines( file.trim() );\n            wlist.addAll( lines );\n          }\n        }\n      }\n      catch( IOException e ){\n        throw new RuntimeException( e );\n      }\n      normMap = new NormalizeMap();\n      parseRules( wlist, normMap );\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e77721aaf23393f6ea7926045ae6f8efea0ce8e","date":1247678464,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/MappingCharFilterFactory#inform(ResourceLoader).mjava","pathOld":"src/java/org/apache/solr/analysis/MappingCharFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    mapping = args.get( \"mapping\" );\n\n    if( mapping != null ){\n      List<String> wlist = null;\n      try{\n        File mappingFile = new File( mapping );\n        if( mappingFile.exists() ){\n          wlist = loader.getLines( mapping );\n        }\n        else{\n          List<String> files = StrUtils.splitFileNames( mapping );\n          wlist = new ArrayList<String>();\n          for( String file : files ){\n            List<String> lines = loader.getLines( file.trim() );\n            wlist.addAll( lines );\n          }\n        }\n      }\n      catch( IOException e ){\n        throw new RuntimeException( e );\n      }\n      normMap = new NormalizeCharMap();\n      parseRules( wlist, normMap );\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    mapping = args.get( \"mapping\" );\n\n    if( mapping != null ){\n      List<String> wlist = null;\n      try{\n        File mappingFile = new File( mapping );\n        if( mappingFile.exists() ){\n          wlist = loader.getLines( mapping );\n        }\n        else{\n          List<String> files = StrUtils.splitFileNames( mapping );\n          wlist = new ArrayList<String>();\n          for( String file : files ){\n            List<String> lines = loader.getLines( file.trim() );\n            wlist.addAll( lines );\n          }\n        }\n      }\n      catch( IOException e ){\n        throw new RuntimeException( e );\n      }\n      normMap = new NormalizeMap();\n      parseRules( wlist, normMap );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/MappingCharFilterFactory#inform(ResourceLoader).mjava","pathOld":"src/java/org/apache/solr/analysis/MappingCharFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    mapping = args.get( \"mapping\" );\n\n    if( mapping != null ){\n      List<String> wlist = null;\n      try{\n        File mappingFile = new File( mapping );\n        if( mappingFile.exists() ){\n          wlist = loader.getLines( mapping );\n        }\n        else{\n          List<String> files = StrUtils.splitFileNames( mapping );\n          wlist = new ArrayList<String>();\n          for( String file : files ){\n            List<String> lines = loader.getLines( file.trim() );\n            wlist.addAll( lines );\n          }\n        }\n      }\n      catch( IOException e ){\n        throw new RuntimeException( e );\n      }\n      normMap = new NormalizeCharMap();\n      parseRules( wlist, normMap );\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    mapping = args.get( \"mapping\" );\n\n    if( mapping != null ){\n      List<String> wlist = null;\n      try{\n        File mappingFile = new File( mapping );\n        if( mappingFile.exists() ){\n          wlist = loader.getLines( mapping );\n        }\n        else{\n          List<String> files = StrUtils.splitFileNames( mapping );\n          wlist = new ArrayList<String>();\n          for( String file : files ){\n            List<String> lines = loader.getLines( file.trim() );\n            wlist.addAll( lines );\n          }\n        }\n      }\n      catch( IOException e ){\n        throw new RuntimeException( e );\n      }\n      normMap = new NormalizeCharMap();\n      parseRules( wlist, normMap );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e77721aaf23393f6ea7926045ae6f8efea0ce8e":["00c1e7284eb0e728903446dd05972acc9905dd53"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"00c1e7284eb0e728903446dd05972acc9905dd53":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["1e77721aaf23393f6ea7926045ae6f8efea0ce8e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1e77721aaf23393f6ea7926045ae6f8efea0ce8e":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["00c1e7284eb0e728903446dd05972acc9905dd53"],"00c1e7284eb0e728903446dd05972acc9905dd53":["1e77721aaf23393f6ea7926045ae6f8efea0ce8e"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}