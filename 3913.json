{"path":"lucene/core/src/test/org/apache/lucene/util/automaton/TestLightAutomaton#testRemoveDead().mjava","commits":[{"id":"a67285d1a68175d877eb9fd1624fccad3db028ff","date":1402779028,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestLightAutomaton#testRemoveDead().mjava","pathOld":"/dev/null","sourceNew":"  public void testRemoveDead() throws Exception {\n    LightAutomaton a = BasicOperations.concatenateLight(Arrays.asList(BasicAutomata.makeStringLight(\"x\"),\n                                                                      BasicAutomata.makeStringLight(\"y\")));\n    assertEquals(4, a.getNumStates());\n    a = BasicOperations.removeDeadStates(a);\n    assertEquals(3, a.getNumStates());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31d9b8f9a2d48c7d06f33dd5734fbbca9d176ec9","date":1402946522,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestLightAutomaton#testRemoveDeadStates().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/automaton/TestLightAutomaton#testRemoveDead().mjava","sourceNew":"  public void testRemoveDeadStates() throws Exception {\n    LightAutomaton a = BasicOperations.concatenateLight(Arrays.asList(BasicAutomata.makeStringLight(\"x\"),\n                                                                      BasicAutomata.makeStringLight(\"y\")));\n    assertEquals(4, a.getNumStates());\n    a = BasicOperations.removeDeadStates(a);\n    assertEquals(3, a.getNumStates());\n  }\n\n","sourceOld":"  public void testRemoveDead() throws Exception {\n    LightAutomaton a = BasicOperations.concatenateLight(Arrays.asList(BasicAutomata.makeStringLight(\"x\"),\n                                                                      BasicAutomata.makeStringLight(\"y\")));\n    assertEquals(4, a.getNumStates());\n    a = BasicOperations.removeDeadStates(a);\n    assertEquals(3, a.getNumStates());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"31d9b8f9a2d48c7d06f33dd5734fbbca9d176ec9":["a67285d1a68175d877eb9fd1624fccad3db028ff"],"a67285d1a68175d877eb9fd1624fccad3db028ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"31d9b8f9a2d48c7d06f33dd5734fbbca9d176ec9":[],"a67285d1a68175d877eb9fd1624fccad3db028ff":["31d9b8f9a2d48c7d06f33dd5734fbbca9d176ec9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a67285d1a68175d877eb9fd1624fccad3db028ff","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["31d9b8f9a2d48c7d06f33dd5734fbbca9d176ec9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}