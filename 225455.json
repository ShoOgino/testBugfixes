{"path":"src/java/org/apache/lucene/store/IndexInput#readBytes(byte[],int,int,boolean).mjava","commits":[{"id":"522694005b60ff76bab9584c0afb66ae309ffada","date":1183568422,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/IndexInput#readBytes(byte[],int,int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Reads a specified number of bytes into an array at the\n   * specified offset with control over whether the read\n   * should be buffered (callers who have their own buffer\n   * should pass in \"false\" for useBuffer).  Currently only\n   * {@link BufferedIndexInput} respects this parameter.\n   * @param b the array to read bytes into\n   * @param offset the offset in the array to start storing bytes\n   * @param len the number of bytes to read\n   * @param useBuffer set to false if the caller will handle\n   * buffering.\n   * @see IndexOutput#writeBytes(byte[],int)\n   */\n  public void readBytes(byte[] b, int offset, int len, boolean useBuffer)\n    throws IOException\n  {\n    // Default to ignoring useBuffer entirely\n    readBytes(b, offset, len);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/IndexInput#readBytes(byte[],int,int,boolean).mjava","pathOld":"src/java/org/apache/lucene/store/IndexInput#readBytes(byte[],int,int,boolean).mjava","sourceNew":"  /** Reads a specified number of bytes into an array at the\n   * specified offset with control over whether the read\n   * should be buffered (callers who have their own buffer\n   * should pass in \"false\" for useBuffer).  Currently only\n   * {@link BufferedIndexInput} respects this parameter.\n   * @param b the array to read bytes into\n   * @param offset the offset in the array to start storing bytes\n   * @param len the number of bytes to read\n   * @param useBuffer set to false if the caller will handle\n   * buffering.\n   * @see IndexOutput#writeBytes(byte[],int)\n   */\n  public void readBytes(byte[] b, int offset, int len, boolean useBuffer)\n    throws IOException\n  {\n    // Default to ignoring useBuffer entirely\n    readBytes(b, offset, len);\n  }\n\n","sourceOld":"  /** Reads a specified number of bytes into an array at the\n   * specified offset with control over whether the read\n   * should be buffered (callers who have their own buffer\n   * should pass in \"false\" for useBuffer).  Currently only\n   * {@link BufferedIndexInput} respects this parameter.\n   * @param b the array to read bytes into\n   * @param offset the offset in the array to start storing bytes\n   * @param len the number of bytes to read\n   * @param useBuffer set to false if the caller will handle\n   * buffering.\n   * @see IndexOutput#writeBytes(byte[],int)\n   */\n  public void readBytes(byte[] b, int offset, int len, boolean useBuffer)\n    throws IOException\n  {\n    // Default to ignoring useBuffer entirely\n    readBytes(b, offset, len);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"522694005b60ff76bab9584c0afb66ae309ffada":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["522694005b60ff76bab9584c0afb66ae309ffada"]},"commit2Childs":{"522694005b60ff76bab9584c0afb66ae309ffada":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["522694005b60ff76bab9584c0afb66ae309ffada"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}