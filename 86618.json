{"path":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","sourceNew":"    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      reuse = null;\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetOrdTermsEnum = facetFieldDocTermOrds.getOrdTermsEnum(context.reader());\n      // [facetFieldDocTermOrds.numTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldDocTermOrds.numTerms() + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupFieldTermsIndex.binarySearchLookup(groupedFacetHit.groupValue, spare);\n        if (groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldDocTermOrds.numTerms();\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = (groupOrd * (facetFieldDocTermOrds.numTerms() + 1)) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldDocTermOrds.numTerms(); // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldDocTermOrds.numTerms() + 1;\n      }\n    }\n\n","sourceOld":"    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      reuse = null;\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetOrdTermsEnum = facetFieldDocTermOrds.getOrdTermsEnum(context.reader());\n      // [facetFieldDocTermOrds.numTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldDocTermOrds.numTerms() + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupFieldTermsIndex.binarySearchLookup(groupedFacetHit.groupValue, spare);\n        if (groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldDocTermOrds.numTerms();\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = (groupOrd * (facetFieldDocTermOrds.numTerms() + 1)) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldDocTermOrds.numTerms(); // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldDocTermOrds.numTerms() + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"165a9b73fdc51a44eaa99472596b138ab3e83c08","date":1346151826,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","sourceNew":"    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      reuse = null;\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetOrdTermsEnum = facetFieldDocTermOrds.getOrdTermsEnum(context.reader());\n      // [facetFieldDocTermOrds.numTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldDocTermOrds.numTerms() + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      if (facetFieldDocTermOrds.isEmpty()) {\n        return;\n      }\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupFieldTermsIndex.binarySearchLookup(groupedFacetHit.groupValue, spare);\n        if (groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldDocTermOrds.numTerms();\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = (groupOrd * (facetFieldDocTermOrds.numTerms() + 1)) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldDocTermOrds.numTerms(); // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldDocTermOrds.numTerms() + 1;\n      }\n    }\n\n","sourceOld":"    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      reuse = null;\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetOrdTermsEnum = facetFieldDocTermOrds.getOrdTermsEnum(context.reader());\n      // [facetFieldDocTermOrds.numTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldDocTermOrds.numTerms() + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupFieldTermsIndex.binarySearchLookup(groupedFacetHit.groupValue, spare);\n        if (groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldDocTermOrds.numTerms();\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = (groupOrd * (facetFieldDocTermOrds.numTerms() + 1)) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldDocTermOrds.numTerms(); // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldDocTermOrds.numTerms() + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8fd9c037fc18fae85030604215e37c9bf6bf456f","date":1346249251,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","sourceNew":"    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      reuse = null;\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetOrdTermsEnum = facetFieldDocTermOrds.getOrdTermsEnum(context.reader());\n      // [facetFieldDocTermOrds.numTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldDocTermOrds.numTerms() + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupFieldTermsIndex.binarySearchLookup(groupedFacetHit.groupValue, spare);\n        if (groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldDocTermOrds.numTerms();\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = (groupOrd * (facetFieldDocTermOrds.numTerms() + 1)) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldDocTermOrds.numTerms(); // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldDocTermOrds.numTerms() + 1;\n      }\n    }\n\n","sourceOld":"    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      reuse = null;\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetOrdTermsEnum = facetFieldDocTermOrds.getOrdTermsEnum(context.reader());\n      // [facetFieldDocTermOrds.numTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldDocTermOrds.numTerms() + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      if (facetFieldDocTermOrds.isEmpty()) {\n        return;\n      }\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupFieldTermsIndex.binarySearchLookup(groupedFacetHit.groupValue, spare);\n        if (groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldDocTermOrds.numTerms();\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = (groupOrd * (facetFieldDocTermOrds.numTerms() + 1)) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldDocTermOrds.numTerms(); // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldDocTermOrds.numTerms() + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"854f97cd3613b9579fba83755c80b697e2f3993f","date":1353527621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","sourceNew":"    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      reuse = null;\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetOrdTermsEnum = facetFieldDocTermOrds.getOrdTermsEnum(context.reader());\n      // [facetFieldDocTermOrds.numTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldDocTermOrds.numTerms() + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.binarySearchLookup(groupedFacetHit.groupValue, spare);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldDocTermOrds.numTerms();\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldDocTermOrds.numTerms() + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldDocTermOrds.numTerms(); // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldDocTermOrds.numTerms() + 1;\n      }\n    }\n\n","sourceOld":"    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      reuse = null;\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetOrdTermsEnum = facetFieldDocTermOrds.getOrdTermsEnum(context.reader());\n      // [facetFieldDocTermOrds.numTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldDocTermOrds.numTerms() + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupFieldTermsIndex.binarySearchLookup(groupedFacetHit.groupValue, spare);\n        if (groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldDocTermOrds.numTerms();\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = (groupOrd * (facetFieldDocTermOrds.numTerms() + 1)) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldDocTermOrds.numTerms(); // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldDocTermOrds.numTerms() + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9d7e5f3aa5935964617824d1f9b2599ddb334464","date":1353762831,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","sourceNew":"    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      reuse = null;\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetOrdTermsEnum = facetFieldDocTermOrds.getOrdTermsEnum(context.reader());\n      // [facetFieldDocTermOrds.numTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldDocTermOrds.numTerms() + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue, spare);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldDocTermOrds.numTerms();\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldDocTermOrds.numTerms() + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldDocTermOrds.numTerms(); // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldDocTermOrds.numTerms() + 1;\n      }\n    }\n\n","sourceOld":"    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      reuse = null;\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetOrdTermsEnum = facetFieldDocTermOrds.getOrdTermsEnum(context.reader());\n      // [facetFieldDocTermOrds.numTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldDocTermOrds.numTerms() + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.binarySearchLookup(groupedFacetHit.groupValue, spare);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldDocTermOrds.numTerms();\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldDocTermOrds.numTerms() + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldDocTermOrds.numTerms(); // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldDocTermOrds.numTerms() + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      reuse = null;\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetOrdTermsEnum = facetFieldDocTermOrds.getOrdTermsEnum(context.reader());\n      // [facetFieldDocTermOrds.numTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldDocTermOrds.numTerms() + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupFieldTermsIndex.binarySearchLookup(groupedFacetHit.groupValue, spare);\n        if (groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldDocTermOrds.numTerms();\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = (groupOrd * (facetFieldDocTermOrds.numTerms() + 1)) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldDocTermOrds.numTerms(); // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldDocTermOrds.numTerms() + 1;\n      }\n    }\n\n","sourceOld":"    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      reuse = null;\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetOrdTermsEnum = facetFieldDocTermOrds.getOrdTermsEnum(context.reader());\n      // [facetFieldDocTermOrds.numTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldDocTermOrds.numTerms() + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupFieldTermsIndex.binarySearchLookup(groupedFacetHit.groupValue, spare);\n        if (groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldDocTermOrds.numTerms();\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = (groupOrd * (facetFieldDocTermOrds.numTerms() + 1)) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldDocTermOrds.numTerms(); // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldDocTermOrds.numTerms() + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      reuse = null;\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetOrdTermsEnum = facetFieldDocTermOrds.getOrdTermsEnum(context.reader());\n      // [facetFieldDocTermOrds.numTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldDocTermOrds.numTerms() + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue, spare);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldDocTermOrds.numTerms();\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldDocTermOrds.numTerms() + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldDocTermOrds.numTerms(); // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldDocTermOrds.numTerms() + 1;\n      }\n    }\n\n","sourceOld":"    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      reuse = null;\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetOrdTermsEnum = facetFieldDocTermOrds.getOrdTermsEnum(context.reader());\n      // [facetFieldDocTermOrds.numTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldDocTermOrds.numTerms() + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue, spare);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldDocTermOrds.numTerms();\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldDocTermOrds.numTerms() + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldDocTermOrds.numTerms(); // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldDocTermOrds.numTerms() + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3d5a5a419065ad4cdc70485f83fa9fe9373aaa8b","date":1359664357,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      reuse = null;\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetOrdTermsEnum = facetFieldDocTermOrds.getOrdTermsEnum(context.reader());\n      // [facetFieldDocTermOrds.numTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldDocTermOrds.numTerms() + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldDocTermOrds.numTerms();\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldDocTermOrds.numTerms() + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldDocTermOrds.numTerms(); // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldDocTermOrds.numTerms() + 1;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      reuse = null;\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetOrdTermsEnum = facetFieldDocTermOrds.getOrdTermsEnum(context.reader());\n      // [facetFieldDocTermOrds.numTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldDocTermOrds.numTerms() + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue, spare);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldDocTermOrds.numTerms();\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldDocTermOrds.numTerms() + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldDocTermOrds.numTerms(); // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldDocTermOrds.numTerms() + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      reuse = null;\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetOrdTermsEnum = facetFieldDocTermOrds.getOrdTermsEnum(context.reader());\n      // [facetFieldDocTermOrds.numTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldDocTermOrds.numTerms() + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldDocTermOrds.numTerms();\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldDocTermOrds.numTerms() + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldDocTermOrds.numTerms(); // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldDocTermOrds.numTerms() + 1;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      reuse = null;\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetOrdTermsEnum = facetFieldDocTermOrds.getOrdTermsEnum(context.reader());\n      // [facetFieldDocTermOrds.numTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldDocTermOrds.numTerms() + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupFieldTermsIndex.binarySearchLookup(groupedFacetHit.groupValue, spare);\n        if (groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldDocTermOrds.numTerms();\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = (groupOrd * (facetFieldDocTermOrds.numTerms() + 1)) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldDocTermOrds.numTerms(); // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldDocTermOrds.numTerms() + 1;\n      }\n    }\n\n","bugFix":["369f44b665973d5aa5fc7d0f2a75ffad475d21ee"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f438915b81b54f1fdff40443da8c4fb15c61c777","date":1360597404,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      reuse = null;\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      // nocommit: cut over\n      DocTermOrds.Iterator iterator = (DocTermOrds.Iterator) FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldDocTermOrds = iterator.getParent();\n      facetOrdTermsEnum = facetFieldDocTermOrds.getOrdTermsEnum(context.reader());\n      // [facetFieldDocTermOrds.numTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldDocTermOrds.numTerms() + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldDocTermOrds.numTerms();\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldDocTermOrds.numTerms() + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldDocTermOrds.numTerms(); // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldDocTermOrds.numTerms() + 1;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      reuse = null;\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetOrdTermsEnum = facetFieldDocTermOrds.getOrdTermsEnum(context.reader());\n      // [facetFieldDocTermOrds.numTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldDocTermOrds.numTerms() + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldDocTermOrds.numTerms();\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldDocTermOrds.numTerms() + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldDocTermOrds.numTerms(); // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldDocTermOrds.numTerms() + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1bd41bee7250a9039c3bf0651303e11dd1aad9d9","date":1360626013,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = new SortedSetDocValuesTermsEnum(facetFieldDocTermOrds);\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      reuse = null;\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      // nocommit: cut over\n      DocTermOrds.Iterator iterator = (DocTermOrds.Iterator) FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldDocTermOrds = iterator.getParent();\n      facetOrdTermsEnum = facetFieldDocTermOrds.getOrdTermsEnum(context.reader());\n      // [facetFieldDocTermOrds.numTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldDocTermOrds.numTerms() + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldDocTermOrds.numTerms();\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldDocTermOrds.numTerms() + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldDocTermOrds.numTerms(); // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldDocTermOrds.numTerms() + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ddbb72a33557d2b5bc22ee95daf3281c43560502","date":1361334582,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = new SortedSetDocValuesTermsEnum(facetFieldDocTermOrds);\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      reuse = null;\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetOrdTermsEnum = facetFieldDocTermOrds.getOrdTermsEnum(context.reader());\n      // [facetFieldDocTermOrds.numTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldDocTermOrds.numTerms() + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldDocTermOrds.numTerms();\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldDocTermOrds.numTerms() + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldDocTermOrds.numTerms(); // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldDocTermOrds.numTerms() + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7e129598ae448211d969dd7cdf2ad4558a0658a1","date":1362963550,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = new SortedSetDocValuesTermsEnum(facetFieldDocTermOrds);\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"64e6baad25b7155a116cb0126b4e2a06b945a5c5","date":1362976847,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = new SortedSetDocValuesTermsEnum(facetFieldDocTermOrds);\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5c2b6033d1fc841b41dbf56c765ce3dc053ecba6","date":1363054647,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = new SortedSetDocValuesTermsEnum(facetFieldDocTermOrds);\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8","date":1373996650,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue, true)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix, true);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix, true);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae73da626f97850c922c42736f808d0378e165f0","date":1396625460,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#doSetNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    protected void doSetNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"15e323346eac5e4685c0a9f2df85eb96b4239bbb","date":1396688577,"type":5,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#doSetNextReader(AtomicReaderContext).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermGroupFacetCollector.MV#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    protected void doSetNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(AtomicReaderContext context) throws IOException {\n      if (segmentFacetCounts != null) {\n        segmentResults.add(createSegmentResult());\n      }\n\n      groupFieldTermsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader(), groupField);\n      facetFieldDocTermOrds = FieldCache.DEFAULT.getDocTermOrds(context.reader(), facetField);\n      facetFieldNumTerms = (int) facetFieldDocTermOrds.getValueCount();\n      if (facetFieldNumTerms == 0) {\n        facetOrdTermsEnum = null;\n      } else {\n        facetOrdTermsEnum = facetFieldDocTermOrds.termsEnum();\n      }\n      // [facetFieldNumTerms() + 1] for all possible facet values and docs not containing facet field\n      segmentFacetCounts = new int[facetFieldNumTerms + 1];\n      segmentTotalCount = 0;\n\n      segmentGroupedFacetHits.clear();\n      for (GroupedFacetHit groupedFacetHit : groupedFacetHits) {\n        int groupOrd = groupedFacetHit.groupValue == null ? -1 : groupFieldTermsIndex.lookupTerm(groupedFacetHit.groupValue);\n        if (groupedFacetHit.groupValue != null && groupOrd < 0) {\n          continue;\n        }\n\n        int facetOrd;\n        if (groupedFacetHit.facetValue != null) {\n          if (facetOrdTermsEnum == null || !facetOrdTermsEnum.seekExact(groupedFacetHit.facetValue)) {\n            continue;\n          }\n          facetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          facetOrd = facetFieldNumTerms;\n        }\n\n        // (facetFieldDocTermOrds.numTerms() + 1) for all possible facet values and docs not containing facet field\n        int segmentGroupedFacetsIndex = groupOrd * (facetFieldNumTerms + 1) + facetOrd;\n        segmentGroupedFacetHits.put(segmentGroupedFacetsIndex);\n      }\n\n      if (facetPrefix != null) {\n        TermsEnum.SeekStatus seekStatus;\n        if (facetOrdTermsEnum != null) {\n          seekStatus = facetOrdTermsEnum.seekCeil(facetPrefix);\n        } else {\n          seekStatus = TermsEnum.SeekStatus.END;\n        }\n\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          startFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          startFacetOrd = 0;\n          endFacetOrd = 0;\n          return;\n        }\n\n        BytesRef facetEndPrefix = BytesRef.deepCopyOf(facetPrefix);\n        facetEndPrefix.append(UnicodeUtil.BIG_TERM);\n        seekStatus = facetOrdTermsEnum.seekCeil(facetEndPrefix);\n        if (seekStatus != TermsEnum.SeekStatus.END) {\n          endFacetOrd = (int) facetOrdTermsEnum.ord();\n        } else {\n          endFacetOrd = facetFieldNumTerms; // Don't include null...\n        }\n      } else {\n        startFacetOrd = 0;\n        endFacetOrd = facetFieldNumTerms + 1;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["9d7e5f3aa5935964617824d1f9b2599ddb334464","7530de27b87b961b51f01bd1299b7004d46e8823"],"165a9b73fdc51a44eaa99472596b138ab3e83c08":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"3d5a5a419065ad4cdc70485f83fa9fe9373aaa8b":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064"],"f438915b81b54f1fdff40443da8c4fb15c61c777":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["d4d69c535930b5cce125cff868d40f6373dc27d4","1bd41bee7250a9039c3bf0651303e11dd1aad9d9"],"5c2b6033d1fc841b41dbf56c765ce3dc053ecba6":["64e6baad25b7155a116cb0126b4e2a06b945a5c5"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8fd9c037fc18fae85030604215e37c9bf6bf456f":["165a9b73fdc51a44eaa99472596b138ab3e83c08"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["7530de27b87b961b51f01bd1299b7004d46e8823","3d5a5a419065ad4cdc70485f83fa9fe9373aaa8b"],"7e129598ae448211d969dd7cdf2ad4558a0658a1":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":["eee5f2a24465d2c9a5f86ab84b7c35041a30fda8","ae73da626f97850c922c42736f808d0378e165f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ae73da626f97850c922c42736f808d0378e165f0":["eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["5c2b6033d1fc841b41dbf56c765ce3dc053ecba6"],"9d7e5f3aa5935964617824d1f9b2599ddb334464":["854f97cd3613b9579fba83755c80b697e2f3993f"],"64e6baad25b7155a116cb0126b4e2a06b945a5c5":["7e129598ae448211d969dd7cdf2ad4558a0658a1"],"854f97cd3613b9579fba83755c80b697e2f3993f":["8fd9c037fc18fae85030604215e37c9bf6bf456f"],"7530de27b87b961b51f01bd1299b7004d46e8823":["8fd9c037fc18fae85030604215e37c9bf6bf456f"],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["5c2b6033d1fc841b41dbf56c765ce3dc053ecba6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ae73da626f97850c922c42736f808d0378e165f0"],"1bd41bee7250a9039c3bf0651303e11dd1aad9d9":["f438915b81b54f1fdff40443da8c4fb15c61c777"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["3d5a5a419065ad4cdc70485f83fa9fe9373aaa8b"],"165a9b73fdc51a44eaa99472596b138ab3e83c08":["8fd9c037fc18fae85030604215e37c9bf6bf456f"],"3d5a5a419065ad4cdc70485f83fa9fe9373aaa8b":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"f438915b81b54f1fdff40443da8c4fb15c61c777":["1bd41bee7250a9039c3bf0651303e11dd1aad9d9"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["7e129598ae448211d969dd7cdf2ad4558a0658a1"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["165a9b73fdc51a44eaa99472596b138ab3e83c08"],"5c2b6033d1fc841b41dbf56c765ce3dc053ecba6":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["f438915b81b54f1fdff40443da8c4fb15c61c777","ddbb72a33557d2b5bc22ee95daf3281c43560502"],"8fd9c037fc18fae85030604215e37c9bf6bf456f":["854f97cd3613b9579fba83755c80b697e2f3993f","7530de27b87b961b51f01bd1299b7004d46e8823"],"7e129598ae448211d969dd7cdf2ad4558a0658a1":["64e6baad25b7155a116cb0126b4e2a06b945a5c5"],"15e323346eac5e4685c0a9f2df85eb96b4239bbb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ae73da626f97850c922c42736f808d0378e165f0":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"9d7e5f3aa5935964617824d1f9b2599ddb334464":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064"],"64e6baad25b7155a116cb0126b4e2a06b945a5c5":["5c2b6033d1fc841b41dbf56c765ce3dc053ecba6"],"854f97cd3613b9579fba83755c80b697e2f3993f":["9d7e5f3aa5935964617824d1f9b2599ddb334464"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d4d69c535930b5cce125cff868d40f6373dc27d4"],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","ae73da626f97850c922c42736f808d0378e165f0"],"1bd41bee7250a9039c3bf0651303e11dd1aad9d9":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["15e323346eac5e4685c0a9f2df85eb96b4239bbb","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}