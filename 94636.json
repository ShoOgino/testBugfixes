{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#explain(String,GeoShape,GeoPoint,GeoPoint,IndexReader,int).mjava","commits":[{"id":"dc584fa95053c03d95035277a2d2aaddd537c0fa","date":1460232759,"type":1,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#explain(String,GeoShape,GeoPoint,GeoPoint,IndexReader,int).mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#explain(String,GeoShape,GeoPoint,IndexReader,int).mjava","sourceNew":"  public static String explain(String fieldName, GeoShape shape, GeoPoint targetDocPoint, GeoPoint scaledDocPoint, IndexReader reader, int docID) throws Exception {\n\n    // First find the leaf reader that owns this doc:\n    int subIndex = ReaderUtil.subIndex(docID, reader.leaves());\n    LeafReader leafReader = reader.leaves().get(subIndex).reader();\n\n    StringBuilder b = new StringBuilder();\n    b.append(\"target is in leaf \" + leafReader + \" of full reader \" + reader + \"\\n\");\n\n    DocIdSetBuilder hits = new DocIdSetBuilder(leafReader.maxDoc());\n    ExplainingVisitor visitor = new ExplainingVisitor(shape, targetDocPoint, scaledDocPoint, new PointInShapeIntersectVisitor(hits, shape), docID - reader.leaves().get(subIndex).docBase, 3, Integer.BYTES, b);\n\n    // Do first phase, where we just figure out the \"path\" that leads to the target docID:\n    leafReader.getPointValues().intersect(fieldName, visitor);\n\n    // Do second phase, where we we see how the wrapped visitor responded along that path:\n    visitor.startSecondPhase();\n    leafReader.getPointValues().intersect(fieldName, visitor);\n\n    return b.toString();\n  }\n\n","sourceOld":"  public static String explain(String fieldName, GeoShape shape, GeoPoint targetDocPoint, IndexReader reader, int docID) throws Exception {\n\n    // First find the leaf reader that owns this doc:\n    int subIndex = ReaderUtil.subIndex(docID, reader.leaves());\n    LeafReader leafReader = reader.leaves().get(subIndex).reader();\n\n    StringBuilder b = new StringBuilder();\n    b.append(\"target is in leaf \" + leafReader + \" of full reader \" + reader + \"\\n\");\n\n    DocIdSetBuilder hits = new DocIdSetBuilder(leafReader.maxDoc());\n    ExplainingVisitor visitor = new ExplainingVisitor(shape, targetDocPoint, new PointInShapeIntersectVisitor(hits, shape), docID - reader.leaves().get(subIndex).docBase, 3, Integer.BYTES, b);\n\n    // Do first phase, where we just figure out the \"path\" that leads to the target docID:\n    leafReader.getPointValues().intersect(fieldName, visitor);\n\n    // Do second phase, where we we see how the wrapped visitor responded along that path:\n    visitor.startSecondPhase();\n    leafReader.getPointValues().intersect(fieldName, visitor);\n\n    return b.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ee4805d1d5263ed80735d5efb4be3d218c3b61b","date":1460681754,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#explain(String,GeoShape,GeoPoint,GeoPoint,IndexReader,int).mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#explain(String,GeoShape,GeoPoint,GeoPoint,IndexReader,int).mjava","sourceNew":"  public static String explain(String fieldName, GeoShape shape, GeoPoint targetDocPoint, GeoPoint scaledDocPoint, IndexReader reader, int docID) throws Exception {\n\n    final XYZBounds bounds = new XYZBounds();\n    shape.getBounds(bounds);\n    \n    // First find the leaf reader that owns this doc:\n    int subIndex = ReaderUtil.subIndex(docID, reader.leaves());\n    LeafReader leafReader = reader.leaves().get(subIndex).reader();\n\n    StringBuilder b = new StringBuilder();\n    b.append(\"target is in leaf \" + leafReader + \" of full reader \" + reader + \"\\n\");\n\n    DocIdSetBuilder hits = new DocIdSetBuilder(leafReader.maxDoc());\n    ExplainingVisitor visitor = new ExplainingVisitor(shape, targetDocPoint, scaledDocPoint, new PointInShapeIntersectVisitor(hits, shape, bounds), docID - reader.leaves().get(subIndex).docBase, 3, Integer.BYTES, b);\n\n    // Do first phase, where we just figure out the \"path\" that leads to the target docID:\n    leafReader.getPointValues().intersect(fieldName, visitor);\n\n    // Do second phase, where we we see how the wrapped visitor responded along that path:\n    visitor.startSecondPhase();\n    leafReader.getPointValues().intersect(fieldName, visitor);\n\n    return b.toString();\n  }\n\n","sourceOld":"  public static String explain(String fieldName, GeoShape shape, GeoPoint targetDocPoint, GeoPoint scaledDocPoint, IndexReader reader, int docID) throws Exception {\n\n    // First find the leaf reader that owns this doc:\n    int subIndex = ReaderUtil.subIndex(docID, reader.leaves());\n    LeafReader leafReader = reader.leaves().get(subIndex).reader();\n\n    StringBuilder b = new StringBuilder();\n    b.append(\"target is in leaf \" + leafReader + \" of full reader \" + reader + \"\\n\");\n\n    DocIdSetBuilder hits = new DocIdSetBuilder(leafReader.maxDoc());\n    ExplainingVisitor visitor = new ExplainingVisitor(shape, targetDocPoint, scaledDocPoint, new PointInShapeIntersectVisitor(hits, shape), docID - reader.leaves().get(subIndex).docBase, 3, Integer.BYTES, b);\n\n    // Do first phase, where we just figure out the \"path\" that leads to the target docID:\n    leafReader.getPointValues().intersect(fieldName, visitor);\n\n    // Do second phase, where we we see how the wrapped visitor responded along that path:\n    visitor.startSecondPhase();\n    leafReader.getPointValues().intersect(fieldName, visitor);\n\n    return b.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05b856843186ad4df844585f0c4f74ec1fdb7698","date":1475435878,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#explain(String,GeoShape,GeoPoint,GeoPoint,IndexReader,int).mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#explain(String,GeoShape,GeoPoint,GeoPoint,IndexReader,int).mjava","sourceNew":"  public static String explain(String fieldName, GeoShape shape, GeoPoint targetDocPoint, GeoPoint scaledDocPoint, IndexReader reader, int docID) throws Exception {\n\n    final XYZBounds bounds = new XYZBounds();\n    shape.getBounds(bounds);\n    \n    // First find the leaf reader that owns this doc:\n    int subIndex = ReaderUtil.subIndex(docID, reader.leaves());\n    LeafReader leafReader = reader.leaves().get(subIndex).reader();\n\n    StringBuilder b = new StringBuilder();\n    b.append(\"target is in leaf \" + leafReader + \" of full reader \" + reader + \"\\n\");\n\n    DocIdSetBuilder hits = new DocIdSetBuilder(leafReader.maxDoc());\n    ExplainingVisitor visitor = new ExplainingVisitor(shape, targetDocPoint, scaledDocPoint,\n      new PointInShapeIntersectVisitor(hits, shape, bounds),\n      docID - reader.leaves().get(subIndex).docBase, 3, Integer.BYTES, b);\n\n    // Do first phase, where we just figure out the \"path\" that leads to the target docID:\n    leafReader.getPointValues().intersect(fieldName, visitor);\n\n    // Do second phase, where we we see how the wrapped visitor responded along that path:\n    visitor.startSecondPhase();\n    leafReader.getPointValues().intersect(fieldName, visitor);\n\n    return b.toString();\n  }\n\n","sourceOld":"  public static String explain(String fieldName, GeoShape shape, GeoPoint targetDocPoint, GeoPoint scaledDocPoint, IndexReader reader, int docID) throws Exception {\n\n    final XYZBounds bounds = new XYZBounds();\n    shape.getBounds(bounds);\n    \n    // First find the leaf reader that owns this doc:\n    int subIndex = ReaderUtil.subIndex(docID, reader.leaves());\n    LeafReader leafReader = reader.leaves().get(subIndex).reader();\n\n    StringBuilder b = new StringBuilder();\n    b.append(\"target is in leaf \" + leafReader + \" of full reader \" + reader + \"\\n\");\n\n    DocIdSetBuilder hits = new DocIdSetBuilder(leafReader.maxDoc());\n    ExplainingVisitor visitor = new ExplainingVisitor(shape, targetDocPoint, scaledDocPoint, new PointInShapeIntersectVisitor(hits, shape, bounds), docID - reader.leaves().get(subIndex).docBase, 3, Integer.BYTES, b);\n\n    // Do first phase, where we just figure out the \"path\" that leads to the target docID:\n    leafReader.getPointValues().intersect(fieldName, visitor);\n\n    // Do second phase, where we we see how the wrapped visitor responded along that path:\n    visitor.startSecondPhase();\n    leafReader.getPointValues().intersect(fieldName, visitor);\n\n    return b.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"367f57e2ee85b7f7e28cfe73370a22cf67624f65","date":1476778467,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#explain(String,GeoShape,GeoPoint,GeoPoint,IndexReader,int).mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#explain(String,GeoShape,GeoPoint,GeoPoint,IndexReader,int).mjava","sourceNew":"  public static String explain(String fieldName, GeoShape shape, GeoPoint targetDocPoint, GeoPoint scaledDocPoint, IndexReader reader, int docID) throws Exception {\n\n    final XYZBounds bounds = new XYZBounds();\n    shape.getBounds(bounds);\n    \n    // First find the leaf reader that owns this doc:\n    int subIndex = ReaderUtil.subIndex(docID, reader.leaves());\n    LeafReader leafReader = reader.leaves().get(subIndex).reader();\n\n    StringBuilder b = new StringBuilder();\n    b.append(\"target is in leaf \" + leafReader + \" of full reader \" + reader + \"\\n\");\n\n    DocIdSetBuilder hits = new DocIdSetBuilder(leafReader.maxDoc());\n    ExplainingVisitor visitor = new ExplainingVisitor(shape, targetDocPoint, scaledDocPoint,\n      new PointInShapeIntersectVisitor(hits, shape, bounds),\n      docID - reader.leaves().get(subIndex).docBase, 3, Integer.BYTES, b);\n\n    // Do first phase, where we just figure out the \"path\" that leads to the target docID:\n    leafReader.getPointValues(fieldName).intersect(visitor);\n\n    // Do second phase, where we we see how the wrapped visitor responded along that path:\n    visitor.startSecondPhase();\n    leafReader.getPointValues(fieldName).intersect(visitor);\n\n    return b.toString();\n  }\n\n","sourceOld":"  public static String explain(String fieldName, GeoShape shape, GeoPoint targetDocPoint, GeoPoint scaledDocPoint, IndexReader reader, int docID) throws Exception {\n\n    final XYZBounds bounds = new XYZBounds();\n    shape.getBounds(bounds);\n    \n    // First find the leaf reader that owns this doc:\n    int subIndex = ReaderUtil.subIndex(docID, reader.leaves());\n    LeafReader leafReader = reader.leaves().get(subIndex).reader();\n\n    StringBuilder b = new StringBuilder();\n    b.append(\"target is in leaf \" + leafReader + \" of full reader \" + reader + \"\\n\");\n\n    DocIdSetBuilder hits = new DocIdSetBuilder(leafReader.maxDoc());\n    ExplainingVisitor visitor = new ExplainingVisitor(shape, targetDocPoint, scaledDocPoint,\n      new PointInShapeIntersectVisitor(hits, shape, bounds),\n      docID - reader.leaves().get(subIndex).docBase, 3, Integer.BYTES, b);\n\n    // Do first phase, where we just figure out the \"path\" that leads to the target docID:\n    leafReader.getPointValues().intersect(fieldName, visitor);\n\n    // Do second phase, where we we see how the wrapped visitor responded along that path:\n    visitor.startSecondPhase();\n    leafReader.getPointValues().intersect(fieldName, visitor);\n\n    return b.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#explain(String,GeoShape,GeoPoint,GeoPoint,IndexReader,int).mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/TestGeo3DPoint#explain(String,GeoShape,GeoPoint,GeoPoint,IndexReader,int).mjava","sourceNew":"  public static String explain(String fieldName, GeoShape shape, GeoPoint targetDocPoint, GeoPoint scaledDocPoint, IndexReader reader, int docID) throws Exception {\n\n    final XYZBounds bounds = new XYZBounds();\n    shape.getBounds(bounds);\n    \n    // First find the leaf reader that owns this doc:\n    int subIndex = ReaderUtil.subIndex(docID, reader.leaves());\n    LeafReader leafReader = reader.leaves().get(subIndex).reader();\n\n    StringBuilder b = new StringBuilder();\n    b.append(\"target is in leaf \" + leafReader + \" of full reader \" + reader + \"\\n\");\n\n    DocIdSetBuilder hits = new DocIdSetBuilder(leafReader.maxDoc());\n    ExplainingVisitor visitor = new ExplainingVisitor(shape, targetDocPoint, scaledDocPoint,\n      new PointInShapeIntersectVisitor(hits, shape, bounds),\n      docID - reader.leaves().get(subIndex).docBase, 3, Integer.BYTES, b);\n\n    // Do first phase, where we just figure out the \"path\" that leads to the target docID:\n    leafReader.getPointValues(fieldName).intersect(visitor);\n\n    // Do second phase, where we we see how the wrapped visitor responded along that path:\n    visitor.startSecondPhase();\n    leafReader.getPointValues(fieldName).intersect(visitor);\n\n    return b.toString();\n  }\n\n","sourceOld":"  public static String explain(String fieldName, GeoShape shape, GeoPoint targetDocPoint, GeoPoint scaledDocPoint, IndexReader reader, int docID) throws Exception {\n\n    final XYZBounds bounds = new XYZBounds();\n    shape.getBounds(bounds);\n    \n    // First find the leaf reader that owns this doc:\n    int subIndex = ReaderUtil.subIndex(docID, reader.leaves());\n    LeafReader leafReader = reader.leaves().get(subIndex).reader();\n\n    StringBuilder b = new StringBuilder();\n    b.append(\"target is in leaf \" + leafReader + \" of full reader \" + reader + \"\\n\");\n\n    DocIdSetBuilder hits = new DocIdSetBuilder(leafReader.maxDoc());\n    ExplainingVisitor visitor = new ExplainingVisitor(shape, targetDocPoint, scaledDocPoint, new PointInShapeIntersectVisitor(hits, shape, bounds), docID - reader.leaves().get(subIndex).docBase, 3, Integer.BYTES, b);\n\n    // Do first phase, where we just figure out the \"path\" that leads to the target docID:\n    leafReader.getPointValues().intersect(fieldName, visitor);\n\n    // Do second phase, where we we see how the wrapped visitor responded along that path:\n    visitor.startSecondPhase();\n    leafReader.getPointValues().intersect(fieldName, visitor);\n\n    return b.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dc584fa95053c03d95035277a2d2aaddd537c0fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"367f57e2ee85b7f7e28cfe73370a22cf67624f65":["05b856843186ad4df844585f0c4f74ec1fdb7698"],"5ee4805d1d5263ed80735d5efb4be3d218c3b61b":["dc584fa95053c03d95035277a2d2aaddd537c0fa"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["5ee4805d1d5263ed80735d5efb4be3d218c3b61b","367f57e2ee85b7f7e28cfe73370a22cf67624f65"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["367f57e2ee85b7f7e28cfe73370a22cf67624f65"],"05b856843186ad4df844585f0c4f74ec1fdb7698":["5ee4805d1d5263ed80735d5efb4be3d218c3b61b"]},"commit2Childs":{"dc584fa95053c03d95035277a2d2aaddd537c0fa":["5ee4805d1d5263ed80735d5efb4be3d218c3b61b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dc584fa95053c03d95035277a2d2aaddd537c0fa"],"367f57e2ee85b7f7e28cfe73370a22cf67624f65":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5ee4805d1d5263ed80735d5efb4be3d218c3b61b":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","05b856843186ad4df844585f0c4f74ec1fdb7698"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"05b856843186ad4df844585f0c4f74ec1fdb7698":["367f57e2ee85b7f7e28cfe73370a22cf67624f65"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}