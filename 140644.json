{"path":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndexAgainstDirectory#testNormsWithDocValues().mjava","commits":[{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndexAgainstDirectory#testNormsWithDocValues().mjava","pathOld":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndexAgainstRAMDir#testNormsWithDocValues().mjava","sourceNew":"  public void testNormsWithDocValues() throws Exception {\n    MemoryIndex mi = new MemoryIndex(true, true);\n    MockAnalyzer mockAnalyzer = new MockAnalyzer(random());\n\n    mi.addField(new BinaryDocValuesField(\"text\", new BytesRef(\"quick brown fox\")), mockAnalyzer);\n    mi.addField(new TextField(\"text\", \"quick brown fox\", Field.Store.NO), mockAnalyzer);\n    LeafReader leafReader = mi.createSearcher().getIndexReader().leaves().get(0).reader();\n\n    Document doc = new Document();\n    doc.add(new BinaryDocValuesField(\"text\", new BytesRef(\"quick brown fox\")));\n    Field field = new TextField(\"text\", \"quick brown fox\", Field.Store.NO);\n    doc.add(field);\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random(), mockAnalyzer));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader controlIndexReader = DirectoryReader.open(dir);\n    LeafReader controlLeafReader =  controlIndexReader.leaves().get(0).reader();\n\n    NumericDocValues norms = controlLeafReader.getNormValues(\"text\");\n    assertEquals(0, norms.nextDoc());\n    NumericDocValues norms2 = leafReader.getNormValues(\"text\");\n    assertEquals(0, norms2.nextDoc());\n    assertEquals(norms.longValue(), norms2.longValue());\n\n    controlIndexReader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testNormsWithDocValues() throws Exception {\n    MemoryIndex mi = new MemoryIndex(true, true);\n    MockAnalyzer mockAnalyzer = new MockAnalyzer(random());\n\n    mi.addField(new BinaryDocValuesField(\"text\", new BytesRef(\"quick brown fox\")), mockAnalyzer);\n    mi.addField(new TextField(\"text\", \"quick brown fox\", Field.Store.NO), mockAnalyzer);\n    LeafReader leafReader = mi.createSearcher().getIndexReader().leaves().get(0).reader();\n\n    Document doc = new Document();\n    doc.add(new BinaryDocValuesField(\"text\", new BytesRef(\"quick brown fox\")));\n    Field field = new TextField(\"text\", \"quick brown fox\", Field.Store.NO);\n    doc.add(field);\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(random(), mockAnalyzer));\n    writer.addDocument(doc);\n    writer.close();\n\n    IndexReader controlIndexReader = DirectoryReader.open(dir);\n    LeafReader controlLeafReader =  controlIndexReader.leaves().get(0).reader();\n\n    NumericDocValues norms = controlLeafReader.getNormValues(\"text\");\n    assertEquals(0, norms.nextDoc());\n    NumericDocValues norms2 = leafReader.getNormValues(\"text\");\n    assertEquals(0, norms2.nextDoc());\n    assertEquals(norms.longValue(), norms2.longValue());\n\n    controlIndexReader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d77dafd89756a5161d244985903e3487ca109182":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d77dafd89756a5161d244985903e3487ca109182"],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}