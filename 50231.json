{"path":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","pathOld":"/dev/null","sourceNew":"  public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlRequest up = new DirectXmlRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","sourceNew":null,"sourceOld":"  public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlRequest up = new DirectXmlRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","pathOld":"src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","sourceNew":"  public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlRequest up = new DirectXmlRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","sourceOld":"  public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlRequest up = new DirectXmlRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","pathOld":"/dev/null","sourceNew":"  public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlRequest up = new DirectXmlRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2dcd5e222dc34cb9732195d2cf29a82bdcfa1e94","date":1269556173,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","sourceNew":" @Test\n public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlRequest up = new DirectXmlRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","sourceOld":"  public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlRequest up = new DirectXmlRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","sourceNew":" @Test\n public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlRequest up = new DirectXmlRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","sourceOld":" @Test\n public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlRequest up = new DirectXmlRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","sourceNew":" @Test\n public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlRequest up = new DirectXmlRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","sourceOld":" @Test\n public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlRequest up = new DirectXmlRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/SolrExampleTests#testAddDelete().mjava","sourceNew":" @Test\n public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlRequest up = new DirectXmlRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","sourceOld":" @Test\n public void testAddDelete() throws Exception\n  {    \n    SolrServer server = getSolrServer();\n    \n    // Empty the database...\n    server.deleteByQuery( \"*:*\" );// delete everything!\n    \n    SolrInputDocument[] doc = new SolrInputDocument[3];\n    for( int i=0; i<3; i++ ) {\n      doc[i] = new SolrInputDocument();\n      doc[i].setField( \"id\", i + \" & 222\", 1.0f );\n    }\n    String id = (String) doc[0].getField( \"id\" ).getFirstValue();\n    \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    \n    // make sure it got in there\n    server.deleteById( id );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // add it back \n    server.add( doc[0] );\n    server.commit();\n    assertNumFound( \"*:*\", 1 ); // make sure it got in\n    server.deleteByQuery( \"id:\\\"\"+ClientUtils.escapeQueryChars(id)+\"\\\"\" );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n    \n    // Add two documents\n    for( SolrInputDocument d : doc ) {\n      server.add( d );\n    }\n    server.commit();\n    assertNumFound( \"*:*\", 3 ); // make sure it got in\n    \n    // should be able to handle multiple delete commands in a single go\n    StringWriter xml = new StringWriter();\n    xml.append( \"<delete>\" );\n    for( SolrInputDocument d : doc ) {\n      xml.append( \"<id>\" );\n      XML.escapeCharData( (String)d.getField( \"id\" ).getFirstValue(), xml );\n      xml.append( \"</id>\" );\n    }\n    xml.append( \"</delete>\" );\n    DirectXmlRequest up = new DirectXmlRequest( \"/update\", xml.toString() );\n    server.request( up );\n    server.commit();\n    assertNumFound( \"*:*\", 0 ); // make sure it got out\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2dcd5e222dc34cb9732195d2cf29a82bdcfa1e94":["1da8d55113b689b06716246649de6f62430f15c0"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["2dcd5e222dc34cb9732195d2cf29a82bdcfa1e94"],"c26f00b574427b55127e869b935845554afde1fa":["2dcd5e222dc34cb9732195d2cf29a82bdcfa1e94","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["2dcd5e222dc34cb9732195d2cf29a82bdcfa1e94"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["2dcd5e222dc34cb9732195d2cf29a82bdcfa1e94"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"2dcd5e222dc34cb9732195d2cf29a82bdcfa1e94":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}