{"path":"solr/test-framework/src/java/org/apache/solr/cloud/CloudInspectUtil#toStr(SolrDocumentList,int).mjava","commits":[{"id":"4339eef0c1b12030c8590187e652cd1cd0a1f3cb","date":1397833225,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/CloudInspectUtil#toStr(SolrDocumentList,int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#toStr(SolrDocumentList,int).mjava","sourceNew":"  private static String toStr(SolrDocumentList lst, int maxSz) {\n    if (lst.size() <= maxSz) return lst.toString();\n    \n    StringBuilder sb = new StringBuilder(\"SolrDocumentList[sz=\" + lst.size());\n    if (lst.size() != lst.getNumFound()) {\n      sb.append(\" numFound=\" + lst.getNumFound());\n    }\n    sb.append(\"]=\");\n    sb.append(lst.subList(0, maxSz / 2).toString());\n    sb.append(\" , [...] , \");\n    sb.append(lst.subList(lst.size() - maxSz / 2, lst.size()).toString());\n    \n    return sb.toString();\n  }\n\n","sourceOld":"  private String toStr(SolrDocumentList lst, int maxSz) {\n    if (lst.size() <= maxSz) return lst.toString();\n\n    StringBuilder sb = new StringBuilder(\"SolrDocumentList[sz=\" + lst.size());\n    if (lst.size() != lst.getNumFound()) {\n      sb.append(\" numFound=\" + lst.getNumFound());\n    }\n    sb.append(\"]=\");\n    sb.append(lst.subList(0,maxSz/2).toString());\n    sb.append(\" , [...] , \");\n    sb.append(lst.subList(lst.size()-maxSz/2, lst.size()).toString());\n\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d875c2ae53d9e38d16cd0c08ff91c02202936d8","date":1434325243,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/CloudInspectUtil#toStr(SolrDocumentList,int).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/CloudInspectUtil#toStr(SolrDocumentList,int).mjava","sourceNew":"  private static String toStr(SolrDocumentList lst, int maxSz) {\n    if (lst.size() <= maxSz) return lst.toString();\n    \n    StringBuilder sb = new StringBuilder(\"SolrDocumentList[sz=\" + lst.size());\n    if (lst.size() != lst.getNumFound()) {\n      sb.append(\" numFound=\").append(lst.getNumFound());\n    }\n    sb.append(\"]=\");\n    sb.append(lst.subList(0, maxSz / 2).toString());\n    sb.append(\" , [...] , \");\n    sb.append(lst.subList(lst.size() - maxSz / 2, lst.size()).toString());\n    \n    return sb.toString();\n  }\n\n","sourceOld":"  private static String toStr(SolrDocumentList lst, int maxSz) {\n    if (lst.size() <= maxSz) return lst.toString();\n    \n    StringBuilder sb = new StringBuilder(\"SolrDocumentList[sz=\" + lst.size());\n    if (lst.size() != lst.getNumFound()) {\n      sb.append(\" numFound=\" + lst.getNumFound());\n    }\n    sb.append(\"]=\");\n    sb.append(lst.subList(0, maxSz / 2).toString());\n    sb.append(\" , [...] , \");\n    sb.append(lst.subList(lst.size() - maxSz / 2, lst.size()).toString());\n    \n    return sb.toString();\n  }\n\n","bugFix":["7c3fd765dc8fa1dd67f45e1ef91c28a2c147ea39"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0d875c2ae53d9e38d16cd0c08ff91c02202936d8":["4339eef0c1b12030c8590187e652cd1cd0a1f3cb"],"4339eef0c1b12030c8590187e652cd1cd0a1f3cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d875c2ae53d9e38d16cd0c08ff91c02202936d8"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4339eef0c1b12030c8590187e652cd1cd0a1f3cb"],"0d875c2ae53d9e38d16cd0c08ff91c02202936d8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4339eef0c1b12030c8590187e652cd1cd0a1f3cb":["0d875c2ae53d9e38d16cd0c08ff91c02202936d8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}