{"path":"solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin#init(Map[String,Object]).mjava","commits":[{"id":"29887daf839649150d96855b142b76f5c45d60d2","date":1482160504,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin#init(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(Map<String,Object> pluginConfig) {\n    try {\n      String delegationTokenEnabled = (String)pluginConfig.getOrDefault(DELEGATION_TOKEN_ENABLED_PROPERTY, \"false\");\n      authFilter = (Boolean.parseBoolean(delegationTokenEnabled)) ? new HadoopAuthFilter() : new AuthenticationFilter();\n\n      // Initialize kerberos before initializing curator instance.\n      boolean initKerberosZk = Boolean.parseBoolean((String)pluginConfig.getOrDefault(INIT_KERBEROS_ZK, \"false\"));\n      if (initKerberosZk) {\n        (new Krb5HttpClientBuilder()).getBuilder();\n      }\n\n      FilterConfig conf = getInitFilterConfig(pluginConfig);\n      authFilter.init(conf);\n\n    } catch (ServletException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error initializing GenericHadoopAuthPlugin: \"+e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin#init(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(Map<String,Object> pluginConfig) {\n    try {\n      String delegationTokenEnabled = (String)pluginConfig.getOrDefault(DELEGATION_TOKEN_ENABLED_PROPERTY, \"false\");\n      authFilter = (Boolean.parseBoolean(delegationTokenEnabled)) ? new HadoopAuthFilter() : new AuthenticationFilter();\n\n      // Initialize kerberos before initializing curator instance.\n      boolean initKerberosZk = Boolean.parseBoolean((String)pluginConfig.getOrDefault(INIT_KERBEROS_ZK, \"false\"));\n      if (initKerberosZk) {\n        (new Krb5HttpClientBuilder()).getBuilder();\n      }\n\n      FilterConfig conf = getInitFilterConfig(pluginConfig);\n      authFilter.init(conf);\n\n    } catch (ServletException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error initializing GenericHadoopAuthPlugin: \"+e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"25f6c5644d9c1a92d25ef1d2764e5d93a580965f","date":1484798759,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String,Object> pluginConfig) {\n    try {\n      String delegationTokenEnabled = (String)pluginConfig.getOrDefault(DELEGATION_TOKEN_ENABLED_PROPERTY, \"false\");\n      authFilter = (Boolean.parseBoolean(delegationTokenEnabled)) ? new HadoopAuthFilter() : new AuthenticationFilter();\n\n      // Initialize kerberos before initializing curator instance.\n      boolean initKerberosZk = Boolean.parseBoolean((String)pluginConfig.getOrDefault(INIT_KERBEROS_ZK, \"false\"));\n      if (initKerberosZk) {\n        (new Krb5HttpClientBuilder()).getBuilder();\n      }\n\n      FilterConfig conf = getInitFilterConfig(pluginConfig);\n      authFilter.init(conf);\n\n    } catch (ServletException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error initializing \" + getClass().getName() + \": \"+e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String,Object> pluginConfig) {\n    try {\n      String delegationTokenEnabled = (String)pluginConfig.getOrDefault(DELEGATION_TOKEN_ENABLED_PROPERTY, \"false\");\n      authFilter = (Boolean.parseBoolean(delegationTokenEnabled)) ? new HadoopAuthFilter() : new AuthenticationFilter();\n\n      // Initialize kerberos before initializing curator instance.\n      boolean initKerberosZk = Boolean.parseBoolean((String)pluginConfig.getOrDefault(INIT_KERBEROS_ZK, \"false\"));\n      if (initKerberosZk) {\n        (new Krb5HttpClientBuilder()).getBuilder();\n      }\n\n      FilterConfig conf = getInitFilterConfig(pluginConfig);\n      authFilter.init(conf);\n\n    } catch (ServletException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error initializing GenericHadoopAuthPlugin: \"+e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90a682dc1bfd188ef61cc28373c7f5d700b4ac75","date":1485186128,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String,Object> pluginConfig) {\n    try {\n      String delegationTokenEnabled = (String)pluginConfig.getOrDefault(DELEGATION_TOKEN_ENABLED_PROPERTY, \"false\");\n      authFilter = (Boolean.parseBoolean(delegationTokenEnabled)) ? new HadoopAuthFilter() : new AuthenticationFilter();\n\n      // Initialize kerberos before initializing curator instance.\n      boolean initKerberosZk = Boolean.parseBoolean((String)pluginConfig.getOrDefault(INIT_KERBEROS_ZK, \"false\"));\n      if (initKerberosZk) {\n        (new Krb5HttpClientBuilder()).getBuilder();\n      }\n\n      FilterConfig conf = getInitFilterConfig(pluginConfig);\n      authFilter.init(conf);\n\n    } catch (ServletException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error initializing \" + getClass().getName() + \": \"+e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String,Object> pluginConfig) {\n    try {\n      String delegationTokenEnabled = (String)pluginConfig.getOrDefault(DELEGATION_TOKEN_ENABLED_PROPERTY, \"false\");\n      authFilter = (Boolean.parseBoolean(delegationTokenEnabled)) ? new HadoopAuthFilter() : new AuthenticationFilter();\n\n      // Initialize kerberos before initializing curator instance.\n      boolean initKerberosZk = Boolean.parseBoolean((String)pluginConfig.getOrDefault(INIT_KERBEROS_ZK, \"false\"));\n      if (initKerberosZk) {\n        (new Krb5HttpClientBuilder()).getBuilder();\n      }\n\n      FilterConfig conf = getInitFilterConfig(pluginConfig);\n      authFilter.init(conf);\n\n    } catch (ServletException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error initializing GenericHadoopAuthPlugin: \"+e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff7e60660726fd43b5f9d130e3de39e69252227a","date":1502275613,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String,Object> pluginConfig) {\n    try {\n      String delegationTokenEnabled = (String)pluginConfig.getOrDefault(DELEGATION_TOKEN_ENABLED_PROPERTY, \"false\");\n      authFilter = (Boolean.parseBoolean(delegationTokenEnabled)) ? new HadoopAuthFilter() : new AuthenticationFilter();\n\n      // Initialize kerberos before initializing curator instance.\n      boolean initKerberosZk = Boolean.parseBoolean((String)pluginConfig.getOrDefault(INIT_KERBEROS_ZK, \"false\"));\n      if (initKerberosZk) {\n        (new Krb5HttpClientBuilder()).getBuilder();\n      }\n\n      FilterConfig conf = getInitFilterConfig(pluginConfig);\n      authFilter.init(conf);\n\n    } catch (ServletException e) {\n      log.error(\"Error initializing \" + getClass().getSimpleName(), e);\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error initializing \" + getClass().getName() + \": \"+e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String,Object> pluginConfig) {\n    try {\n      String delegationTokenEnabled = (String)pluginConfig.getOrDefault(DELEGATION_TOKEN_ENABLED_PROPERTY, \"false\");\n      authFilter = (Boolean.parseBoolean(delegationTokenEnabled)) ? new HadoopAuthFilter() : new AuthenticationFilter();\n\n      // Initialize kerberos before initializing curator instance.\n      boolean initKerberosZk = Boolean.parseBoolean((String)pluginConfig.getOrDefault(INIT_KERBEROS_ZK, \"false\"));\n      if (initKerberosZk) {\n        (new Krb5HttpClientBuilder()).getBuilder();\n      }\n\n      FilterConfig conf = getInitFilterConfig(pluginConfig);\n      authFilter.init(conf);\n\n    } catch (ServletException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error initializing \" + getClass().getName() + \": \"+e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58884af1f68e9d61c217c753fbd6266d86a63b14","date":1502363401,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String,Object> pluginConfig) {\n    try {\n      String delegationTokenEnabled = (String)pluginConfig.getOrDefault(DELEGATION_TOKEN_ENABLED_PROPERTY, \"false\");\n      authFilter = (Boolean.parseBoolean(delegationTokenEnabled)) ? new HadoopAuthFilter() : new AuthenticationFilter();\n\n      // Initialize kerberos before initializing curator instance.\n      boolean initKerberosZk = Boolean.parseBoolean((String)pluginConfig.getOrDefault(INIT_KERBEROS_ZK, \"false\"));\n      if (initKerberosZk) {\n        (new Krb5HttpClientBuilder()).getBuilder();\n      }\n\n      FilterConfig conf = getInitFilterConfig(pluginConfig);\n      authFilter.init(conf);\n\n    } catch (ServletException e) {\n      log.error(\"Error initializing \" + getClass().getSimpleName(), e);\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error initializing \" + getClass().getName() + \": \"+e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String,Object> pluginConfig) {\n    try {\n      String delegationTokenEnabled = (String)pluginConfig.getOrDefault(DELEGATION_TOKEN_ENABLED_PROPERTY, \"false\");\n      authFilter = (Boolean.parseBoolean(delegationTokenEnabled)) ? new HadoopAuthFilter() : new AuthenticationFilter();\n\n      // Initialize kerberos before initializing curator instance.\n      boolean initKerberosZk = Boolean.parseBoolean((String)pluginConfig.getOrDefault(INIT_KERBEROS_ZK, \"false\"));\n      if (initKerberosZk) {\n        (new Krb5HttpClientBuilder()).getBuilder();\n      }\n\n      FilterConfig conf = getInitFilterConfig(pluginConfig);\n      authFilter.init(conf);\n\n    } catch (ServletException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error initializing \" + getClass().getName() + \": \"+e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be","date":1502692251,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String,Object> pluginConfig) {\n    try {\n      String delegationTokenEnabled = (String)pluginConfig.getOrDefault(DELEGATION_TOKEN_ENABLED_PROPERTY, \"false\");\n      authFilter = (Boolean.parseBoolean(delegationTokenEnabled)) ? new HadoopAuthFilter() : new AuthenticationFilter();\n\n      // Initialize kerberos before initializing curator instance.\n      boolean initKerberosZk = Boolean.parseBoolean((String)pluginConfig.getOrDefault(INIT_KERBEROS_ZK, \"false\"));\n      if (initKerberosZk) {\n        (new Krb5HttpClientBuilder()).getBuilder();\n      }\n\n      FilterConfig conf = getInitFilterConfig(pluginConfig);\n      authFilter.init(conf);\n\n    } catch (ServletException e) {\n      log.error(\"Error initializing \" + getClass().getSimpleName(), e);\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error initializing \" + getClass().getName() + \": \"+e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String,Object> pluginConfig) {\n    try {\n      String delegationTokenEnabled = (String)pluginConfig.getOrDefault(DELEGATION_TOKEN_ENABLED_PROPERTY, \"false\");\n      authFilter = (Boolean.parseBoolean(delegationTokenEnabled)) ? new HadoopAuthFilter() : new AuthenticationFilter();\n\n      // Initialize kerberos before initializing curator instance.\n      boolean initKerberosZk = Boolean.parseBoolean((String)pluginConfig.getOrDefault(INIT_KERBEROS_ZK, \"false\"));\n      if (initKerberosZk) {\n        (new Krb5HttpClientBuilder()).getBuilder();\n      }\n\n      FilterConfig conf = getInitFilterConfig(pluginConfig);\n      authFilter.init(conf);\n\n    } catch (ServletException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error initializing \" + getClass().getName() + \": \"+e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a77e5e21cbd575a8240b0e3926164f15295f4e8","date":1544979500,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String,Object> pluginConfig) {\n    try {\n      String delegationTokenEnabled = (String)pluginConfig.getOrDefault(DELEGATION_TOKEN_ENABLED_PROPERTY, \"false\");\n      authFilter = (Boolean.parseBoolean(delegationTokenEnabled)) ? new HadoopAuthFilter() : new AuthenticationFilter() {\n        @Override\n        public void doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain) throws IOException, ServletException {\n          // A hack until HADOOP-15681 get committed\n          Locale.setDefault(Locale.US);\n          super.doFilter(request, response, filterChain);\n        }\n\n        @Override\n        protected void doFilter(FilterChain filterChain, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {\n          Locale.setDefault(defaultLocale);\n          super.doFilter(filterChain, request, response);\n        }\n      };\n\n      // Initialize kerberos before initializing curator instance.\n      boolean initKerberosZk = Boolean.parseBoolean((String)pluginConfig.getOrDefault(INIT_KERBEROS_ZK, \"false\"));\n      if (initKerberosZk) {\n        (new Krb5HttpClientBuilder()).getBuilder();\n      }\n\n      FilterConfig conf = getInitFilterConfig(pluginConfig);\n      authFilter.init(conf);\n\n    } catch (ServletException e) {\n      log.error(\"Error initializing \" + getClass().getSimpleName(), e);\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error initializing \" + getClass().getName() + \": \"+e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String,Object> pluginConfig) {\n    try {\n      String delegationTokenEnabled = (String)pluginConfig.getOrDefault(DELEGATION_TOKEN_ENABLED_PROPERTY, \"false\");\n      authFilter = (Boolean.parseBoolean(delegationTokenEnabled)) ? new HadoopAuthFilter() : new AuthenticationFilter();\n\n      // Initialize kerberos before initializing curator instance.\n      boolean initKerberosZk = Boolean.parseBoolean((String)pluginConfig.getOrDefault(INIT_KERBEROS_ZK, \"false\"));\n      if (initKerberosZk) {\n        (new Krb5HttpClientBuilder()).getBuilder();\n      }\n\n      FilterConfig conf = getInitFilterConfig(pluginConfig);\n      authFilter.init(conf);\n\n    } catch (ServletException e) {\n      log.error(\"Error initializing \" + getClass().getSimpleName(), e);\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error initializing \" + getClass().getName() + \": \"+e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54faedfb0e03479a38f5ee82f2dfaeea536e9404","date":1587251295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String,Object> pluginConfig) {\n    try {\n      String delegationTokenEnabled = (String)pluginConfig.getOrDefault(DELEGATION_TOKEN_ENABLED_PROPERTY, \"false\");\n      authFilter = (Boolean.parseBoolean(delegationTokenEnabled)) ? new HadoopAuthFilter() : new AuthenticationFilter() {\n        @Override\n        public void doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain) throws IOException, ServletException {\n          // A hack until HADOOP-15681 get committed\n          Locale.setDefault(Locale.US);\n          super.doFilter(request, response, filterChain);\n        }\n\n        @Override\n        protected void doFilter(FilterChain filterChain, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {\n          Locale.setDefault(defaultLocale);\n          super.doFilter(filterChain, request, response);\n        }\n      };\n\n      // Initialize kerberos before initializing curator instance.\n      boolean initKerberosZk = Boolean.parseBoolean((String)pluginConfig.getOrDefault(INIT_KERBEROS_ZK, \"false\"));\n      if (initKerberosZk) {\n        (new Krb5HttpClientBuilder()).getBuilder();\n      }\n\n      FilterConfig conf = getInitFilterConfig(pluginConfig);\n      authFilter.init(conf);\n\n    } catch (ServletException e) {\n      if (log.isErrorEnabled()) {\n        log.error(\"Error initializing {}\", getClass().getSimpleName(), e);\n      }\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error initializing \" + getClass().getName() + \": \"+e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String,Object> pluginConfig) {\n    try {\n      String delegationTokenEnabled = (String)pluginConfig.getOrDefault(DELEGATION_TOKEN_ENABLED_PROPERTY, \"false\");\n      authFilter = (Boolean.parseBoolean(delegationTokenEnabled)) ? new HadoopAuthFilter() : new AuthenticationFilter() {\n        @Override\n        public void doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain) throws IOException, ServletException {\n          // A hack until HADOOP-15681 get committed\n          Locale.setDefault(Locale.US);\n          super.doFilter(request, response, filterChain);\n        }\n\n        @Override\n        protected void doFilter(FilterChain filterChain, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {\n          Locale.setDefault(defaultLocale);\n          super.doFilter(filterChain, request, response);\n        }\n      };\n\n      // Initialize kerberos before initializing curator instance.\n      boolean initKerberosZk = Boolean.parseBoolean((String)pluginConfig.getOrDefault(INIT_KERBEROS_ZK, \"false\"));\n      if (initKerberosZk) {\n        (new Krb5HttpClientBuilder()).getBuilder();\n      }\n\n      FilterConfig conf = getInitFilterConfig(pluginConfig);\n      authFilter.init(conf);\n\n    } catch (ServletException e) {\n      log.error(\"Error initializing \" + getClass().getSimpleName(), e);\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error initializing \" + getClass().getName() + \": \"+e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"575e66bd4b2349209027f6801184da7fc3cba13f","date":1587609169,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/HadoopAuthPlugin#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String,Object> pluginConfig) {\n    try {\n      String delegationTokenEnabled = (String)pluginConfig.getOrDefault(DELEGATION_TOKEN_ENABLED_PROPERTY, \"false\");\n      authFilter = (Boolean.parseBoolean(delegationTokenEnabled)) ? new HadoopAuthFilter() : new AuthenticationFilter() {\n        @Override\n        public void doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain) throws IOException, ServletException {\n          // A hack until HADOOP-15681 get committed\n          Locale.setDefault(Locale.US);\n          super.doFilter(request, response, filterChain);\n        }\n\n        @Override\n        protected void doFilter(FilterChain filterChain, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {\n          Locale.setDefault(defaultLocale);\n          super.doFilter(filterChain, request, response);\n        }\n      };\n\n      // Initialize kerberos before initializing curator instance.\n      boolean initKerberosZk = Boolean.parseBoolean((String)pluginConfig.getOrDefault(INIT_KERBEROS_ZK, \"false\"));\n      if (initKerberosZk) {\n        (new Krb5HttpClientBuilder()).getBuilder();\n      }\n\n      FilterConfig conf = getInitFilterConfig(pluginConfig);\n      authFilter.init(conf);\n\n    } catch (ServletException e) {\n      log.error(\"Error initializing {}\", getClass().getSimpleName(), e);\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error initializing \" + getClass().getName() + \": \"+e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String,Object> pluginConfig) {\n    try {\n      String delegationTokenEnabled = (String)pluginConfig.getOrDefault(DELEGATION_TOKEN_ENABLED_PROPERTY, \"false\");\n      authFilter = (Boolean.parseBoolean(delegationTokenEnabled)) ? new HadoopAuthFilter() : new AuthenticationFilter() {\n        @Override\n        public void doFilter(ServletRequest request, ServletResponse response, FilterChain filterChain) throws IOException, ServletException {\n          // A hack until HADOOP-15681 get committed\n          Locale.setDefault(Locale.US);\n          super.doFilter(request, response, filterChain);\n        }\n\n        @Override\n        protected void doFilter(FilterChain filterChain, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {\n          Locale.setDefault(defaultLocale);\n          super.doFilter(filterChain, request, response);\n        }\n      };\n\n      // Initialize kerberos before initializing curator instance.\n      boolean initKerberosZk = Boolean.parseBoolean((String)pluginConfig.getOrDefault(INIT_KERBEROS_ZK, \"false\"));\n      if (initKerberosZk) {\n        (new Krb5HttpClientBuilder()).getBuilder();\n      }\n\n      FilterConfig conf = getInitFilterConfig(pluginConfig);\n      authFilter.init(conf);\n\n    } catch (ServletException e) {\n      if (log.isErrorEnabled()) {\n        log.error(\"Error initializing {}\", getClass().getSimpleName(), e);\n      }\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Error initializing \" + getClass().getName() + \": \"+e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54faedfb0e03479a38f5ee82f2dfaeea536e9404":["1a77e5e21cbd575a8240b0e3926164f15295f4e8"],"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["ff7e60660726fd43b5f9d130e3de39e69252227a"],"58884af1f68e9d61c217c753fbd6266d86a63b14":["25f6c5644d9c1a92d25ef1d2764e5d93a580965f","ff7e60660726fd43b5f9d130e3de39e69252227a"],"ff7e60660726fd43b5f9d130e3de39e69252227a":["25f6c5644d9c1a92d25ef1d2764e5d93a580965f"],"29887daf839649150d96855b142b76f5c45d60d2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","29887daf839649150d96855b142b76f5c45d60d2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be":["25f6c5644d9c1a92d25ef1d2764e5d93a580965f","ff7e60660726fd43b5f9d130e3de39e69252227a"],"575e66bd4b2349209027f6801184da7fc3cba13f":["54faedfb0e03479a38f5ee82f2dfaeea536e9404"],"25f6c5644d9c1a92d25ef1d2764e5d93a580965f":["29887daf839649150d96855b142b76f5c45d60d2"],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","25f6c5644d9c1a92d25ef1d2764e5d93a580965f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["575e66bd4b2349209027f6801184da7fc3cba13f"]},"commit2Childs":{"54faedfb0e03479a38f5ee82f2dfaeea536e9404":["575e66bd4b2349209027f6801184da7fc3cba13f"],"1a77e5e21cbd575a8240b0e3926164f15295f4e8":["54faedfb0e03479a38f5ee82f2dfaeea536e9404"],"58884af1f68e9d61c217c753fbd6266d86a63b14":[],"ff7e60660726fd43b5f9d130e3de39e69252227a":["1a77e5e21cbd575a8240b0e3926164f15295f4e8","58884af1f68e9d61c217c753fbd6266d86a63b14","93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be"],"29887daf839649150d96855b142b76f5c45d60d2":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","25f6c5644d9c1a92d25ef1d2764e5d93a580965f"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["90a682dc1bfd188ef61cc28373c7f5d700b4ac75"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29887daf839649150d96855b142b76f5c45d60d2","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be":[],"575e66bd4b2349209027f6801184da7fc3cba13f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"25f6c5644d9c1a92d25ef1d2764e5d93a580965f":["58884af1f68e9d61c217c753fbd6266d86a63b14","ff7e60660726fd43b5f9d130e3de39e69252227a","93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be","90a682dc1bfd188ef61cc28373c7f5d700b4ac75"],"90a682dc1bfd188ef61cc28373c7f5d700b4ac75":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["58884af1f68e9d61c217c753fbd6266d86a63b14","93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be","90a682dc1bfd188ef61cc28373c7f5d700b4ac75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}