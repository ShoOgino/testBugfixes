{"path":"solr/core/src/java/org/apache/solr/request/DocValuesFacets#finalize(NamedList[Integer],SolrIndexSearcher,SchemaField,DocSet,int,boolean).mjava","commits":[{"id":"a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3","date":1361894345,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/DocValuesFacets#finalize(NamedList[Integer],SolrIndexSearcher,SchemaField,DocSet,int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** finalizes result: computes missing count if applicable */\n  static NamedList<Integer> finalize(NamedList<Integer> res, SolrIndexSearcher searcher, SchemaField schemaField, DocSet docs, int missingCount, boolean missing) throws IOException {\n    if (missing) {\n      if (missingCount < 0) {\n        if (schemaField.multiValued()) {\n          missingCount = SimpleFacets.getFieldMissingCount(searcher,docs,schemaField.getName());\n        } else {\n          missingCount = 0; // single-valued dv is implicitly 0\n        }\n      }\n      res.add(null, missingCount);\n    }\n    \n    return res;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9faa42f41b6adb98daf009cf99a4ee239189e469","date":1376648738,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/DocValuesFacets#finalize(NamedList[Integer],SolrIndexSearcher,SchemaField,DocSet,int,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/DocValuesFacets#finalize(NamedList[Integer],SolrIndexSearcher,SchemaField,DocSet,int,boolean).mjava","sourceNew":"  /** finalizes result: computes missing count if applicable */\n  static NamedList<Integer> finalize(NamedList<Integer> res, SolrIndexSearcher searcher, SchemaField schemaField, DocSet docs, int missingCount, boolean missing) throws IOException {\n    if (missing) {\n      if (missingCount < 0) {\n        if (schemaField.multiValued()) {\n          missingCount = SimpleFacets.getFieldMissingCount(searcher,docs,schemaField.getName());\n        } else {\n          // nocommit: support missing count (ord = -1) for single-valued here.\n          missingCount = 0; // single-valued dv is implicitly 0\n        }\n      }\n      res.add(null, missingCount);\n    }\n    \n    return res;\n  }\n\n","sourceOld":"  /** finalizes result: computes missing count if applicable */\n  static NamedList<Integer> finalize(NamedList<Integer> res, SolrIndexSearcher searcher, SchemaField schemaField, DocSet docs, int missingCount, boolean missing) throws IOException {\n    if (missing) {\n      if (missingCount < 0) {\n        if (schemaField.multiValued()) {\n          missingCount = SimpleFacets.getFieldMissingCount(searcher,docs,schemaField.getName());\n        } else {\n          missingCount = 0; // single-valued dv is implicitly 0\n        }\n      }\n      res.add(null, missingCount);\n    }\n    \n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10307c7cc22e7e4087990972985e1d1043f01442","date":1376933032,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/DocValuesFacets#finalize(NamedList[Integer],SolrIndexSearcher,SchemaField,DocSet,int,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/DocValuesFacets#finalize(NamedList[Integer],SolrIndexSearcher,SchemaField,DocSet,int,boolean).mjava","sourceNew":"  /** finalizes result: computes missing count if applicable */\n  static NamedList<Integer> finalize(NamedList<Integer> res, SolrIndexSearcher searcher, SchemaField schemaField, DocSet docs, int missingCount, boolean missing) throws IOException {\n    if (missing) {\n      if (missingCount < 0) {\n        missingCount = SimpleFacets.getFieldMissingCount(searcher,docs,schemaField.getName());\n      }\n      res.add(null, missingCount);\n    }\n    \n    return res;\n  }\n\n","sourceOld":"  /** finalizes result: computes missing count if applicable */\n  static NamedList<Integer> finalize(NamedList<Integer> res, SolrIndexSearcher searcher, SchemaField schemaField, DocSet docs, int missingCount, boolean missing) throws IOException {\n    if (missing) {\n      if (missingCount < 0) {\n        if (schemaField.multiValued()) {\n          missingCount = SimpleFacets.getFieldMissingCount(searcher,docs,schemaField.getName());\n        } else {\n          // nocommit: support missing count (ord = -1) for single-valued here.\n          missingCount = 0; // single-valued dv is implicitly 0\n        }\n      }\n      res.add(null, missingCount);\n    }\n    \n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/request/DocValuesFacets#finalize(NamedList[Integer],SolrIndexSearcher,SchemaField,DocSet,int,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/DocValuesFacets#finalize(NamedList[Integer],SolrIndexSearcher,SchemaField,DocSet,int,boolean).mjava","sourceNew":"  /** finalizes result: computes missing count if applicable */\n  static NamedList<Integer> finalize(NamedList<Integer> res, SolrIndexSearcher searcher, SchemaField schemaField, DocSet docs, int missingCount, boolean missing) throws IOException {\n    if (missing) {\n      if (missingCount < 0) {\n        missingCount = SimpleFacets.getFieldMissingCount(searcher,docs,schemaField.getName());\n      }\n      res.add(null, missingCount);\n    }\n    \n    return res;\n  }\n\n","sourceOld":"  /** finalizes result: computes missing count if applicable */\n  static NamedList<Integer> finalize(NamedList<Integer> res, SolrIndexSearcher searcher, SchemaField schemaField, DocSet docs, int missingCount, boolean missing) throws IOException {\n    if (missing) {\n      if (missingCount < 0) {\n        if (schemaField.multiValued()) {\n          missingCount = SimpleFacets.getFieldMissingCount(searcher,docs,schemaField.getName());\n        } else {\n          missingCount = 0; // single-valued dv is implicitly 0\n        }\n      }\n      res.add(null, missingCount);\n    }\n    \n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/request/DocValuesFacets#finalize(NamedList[Integer],SolrIndexSearcher,SchemaField,DocSet,int,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/request/DocValuesFacets#finalize(NamedList[Integer],SolrIndexSearcher,SchemaField,DocSet,int,boolean).mjava","sourceNew":"  /** finalizes result: computes missing count if applicable */\n  static NamedList<Integer> finalize(NamedList<Integer> res, SolrIndexSearcher searcher, SchemaField schemaField, DocSet docs, int missingCount, boolean missing) throws IOException {\n    if (missing) {\n      if (missingCount < 0) {\n        missingCount = SimpleFacets.getFieldMissingCount(searcher,docs,schemaField.getName());\n      }\n      res.add(null, missingCount);\n    }\n    \n    return res;\n  }\n\n","sourceOld":"  /** finalizes result: computes missing count if applicable */\n  static NamedList<Integer> finalize(NamedList<Integer> res, SolrIndexSearcher searcher, SchemaField schemaField, DocSet docs, int missingCount, boolean missing) throws IOException {\n    if (missing) {\n      if (missingCount < 0) {\n        if (schemaField.multiValued()) {\n          missingCount = SimpleFacets.getFieldMissingCount(searcher,docs,schemaField.getName());\n        } else {\n          missingCount = 0; // single-valued dv is implicitly 0\n        }\n      }\n      res.add(null, missingCount);\n    }\n    \n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"10307c7cc22e7e4087990972985e1d1043f01442":["9faa42f41b6adb98daf009cf99a4ee239189e469"],"9faa42f41b6adb98daf009cf99a4ee239189e469":["a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3","10307c7cc22e7e4087990972985e1d1043f01442"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"]},"commit2Childs":{"a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3":["9faa42f41b6adb98daf009cf99a4ee239189e469","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"10307c7cc22e7e4087990972985e1d1043f01442":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"9faa42f41b6adb98daf009cf99a4ee239189e469":["10307c7cc22e7e4087990972985e1d1043f01442"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a9cc184ce59bfe09f739d9aaa34fdb28ddc738c3"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}