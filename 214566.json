{"path":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addCopyFields(Map[String,Collection[String]],boolean).mjava","commits":[{"id":"4a54d9ede1b7f2f026639186eb07f3f314d87d9a","date":1412176848,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addCopyFields(Map[String,Collection[String]],boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addCopyFields(Map[String,Collection[String]]).mjava","sourceNew":"  /**\n   * Copies this schema and adds the new copy fields to the copy\n   * Requires synchronizing on the object returned by\n   * {@link #getSchemaUpdateLock()}.\n   *\n   * @param copyFields Key is the name of the source field name, value is a collection of target field names.  Fields must exist.\n   * @param persist to persist the schema or not or not\n   * @return The new Schema with the copy fields added\n   */\n  public IndexSchema addCopyFields(Map<String, Collection<String>> copyFields, boolean persist){\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","sourceOld":"  /**\n   * Copies this schema and adds the new copy fields to the copy, then\n   * persists the new schema.  Requires synchronizing on the object returned by\n   * {@link #getSchemaUpdateLock()}.\n   *\n   * @param copyFields Key is the name of the source field name, value is a collection of target field names.  Fields must exist.\n   * @return The new Schema with the copy fields added\n   */\n  public IndexSchema addCopyFields(Map<String, Collection<String>> copyFields){\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addCopyFields(Map[String,Collection[String]],boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addCopyFields(Map[String,Collection[String]]).mjava","sourceNew":"  /**\n   * Copies this schema and adds the new copy fields to the copy\n   * Requires synchronizing on the object returned by\n   * {@link #getSchemaUpdateLock()}.\n   *\n   * @param copyFields Key is the name of the source field name, value is a collection of target field names.  Fields must exist.\n   * @param persist to persist the schema or not or not\n   * @return The new Schema with the copy fields added\n   */\n  public IndexSchema addCopyFields(Map<String, Collection<String>> copyFields, boolean persist){\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","sourceOld":"  /**\n   * Copies this schema and adds the new copy fields to the copy, then\n   * persists the new schema.  Requires synchronizing on the object returned by\n   * {@link #getSchemaUpdateLock()}.\n   *\n   * @param copyFields Key is the name of the source field name, value is a collection of target field names.  Fields must exist.\n   * @return The new Schema with the copy fields added\n   */\n  public IndexSchema addCopyFields(Map<String, Collection<String>> copyFields){\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eeeea2295d6355a29e259130a5c48ace73022d7c","date":1426569216,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addCopyFields(Map[String,Collection[String]],boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addCopyFields(Map[String,Collection[String]],boolean).mjava","sourceNew":"    /**\n     * Copies this schema and adds the new copy fields to the copy\n     * Requires synchronizing on the object returned by\n     * {@link #getSchemaUpdateLock()}.\n     *\n     * @param copyFields Key is the name of the source field name, value is a collection of target field names.  Fields must exist.\n     * @param persist to persist the schema or not\n     * @return The new Schema with the copy fields added\n     */\n  public IndexSchema addCopyFields(Map<String, Collection<String>> copyFields, boolean persist) {\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","sourceOld":"  /**\n   * Copies this schema and adds the new copy fields to the copy\n   * Requires synchronizing on the object returned by\n   * {@link #getSchemaUpdateLock()}.\n   *\n   * @param copyFields Key is the name of the source field name, value is a collection of target field names.  Fields must exist.\n   * @param persist to persist the schema or not or not\n   * @return The new Schema with the copy fields added\n   */\n  public IndexSchema addCopyFields(Map<String, Collection<String>> copyFields, boolean persist){\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addCopyFields(Map[String,Collection[String]],boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addCopyFields(Map[String,Collection[String]],boolean).mjava","sourceNew":"    /**\n     * Copies this schema and adds the new copy fields to the copy\n     * Requires synchronizing on the object returned by\n     * {@link #getSchemaUpdateLock()}.\n     *\n     * @param copyFields Key is the name of the source field name, value is a collection of target field names.  Fields must exist.\n     * @param persist to persist the schema or not\n     * @return The new Schema with the copy fields added\n     */\n  public IndexSchema addCopyFields(Map<String, Collection<String>> copyFields, boolean persist) {\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","sourceOld":"  /**\n   * Copies this schema and adds the new copy fields to the copy\n   * Requires synchronizing on the object returned by\n   * {@link #getSchemaUpdateLock()}.\n   *\n   * @param copyFields Key is the name of the source field name, value is a collection of target field names.  Fields must exist.\n   * @param persist to persist the schema or not or not\n   * @return The new Schema with the copy fields added\n   */\n  public IndexSchema addCopyFields(Map<String, Collection<String>> copyFields, boolean persist){\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1baa51a584257952df4811539013a7ce52c103ae","date":1434484920,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addCopyFields(Map[String,Collection[String]],boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addCopyFields(Map[String,Collection[String]],boolean).mjava","sourceNew":"    /**\n     * Copies this schema and adds the new copy fields to the copy\n     * Requires synchronizing on the object returned by\n     * {@link #getSchemaUpdateLock()}.\n     *\n     * @see #addCopyFields(String,Collection,int) to limit the number of copied characters.\n     *\n     * @param copyFields Key is the name of the source field name, value is a collection of target field names.  Fields must exist.\n     * @param persist to persist the schema or not\n     * @return The new Schema with the copy fields added\n     */\n  public IndexSchema addCopyFields(Map<String, Collection<String>> copyFields, boolean persist) {\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","sourceOld":"    /**\n     * Copies this schema and adds the new copy fields to the copy\n     * Requires synchronizing on the object returned by\n     * {@link #getSchemaUpdateLock()}.\n     *\n     * @param copyFields Key is the name of the source field name, value is a collection of target field names.  Fields must exist.\n     * @param persist to persist the schema or not\n     * @return The new Schema with the copy fields added\n     */\n  public IndexSchema addCopyFields(Map<String, Collection<String>> copyFields, boolean persist) {\n    String msg = \"This IndexSchema is not mutable.\";\n    log.error(msg);\n    throw new SolrException(ErrorCode.SERVER_ERROR, msg);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["4a54d9ede1b7f2f026639186eb07f3f314d87d9a","eeeea2295d6355a29e259130a5c48ace73022d7c"],"1baa51a584257952df4811539013a7ce52c103ae":["eeeea2295d6355a29e259130a5c48ace73022d7c"],"eeeea2295d6355a29e259130a5c48ace73022d7c":["4a54d9ede1b7f2f026639186eb07f3f314d87d9a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4a54d9ede1b7f2f026639186eb07f3f314d87d9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4a54d9ede1b7f2f026639186eb07f3f314d87d9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1baa51a584257952df4811539013a7ce52c103ae"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"1baa51a584257952df4811539013a7ce52c103ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"eeeea2295d6355a29e259130a5c48ace73022d7c":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","1baa51a584257952df4811539013a7ce52c103ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4a54d9ede1b7f2f026639186eb07f3f314d87d9a","d9a47902d6207303f5ed3e7aaca62ca33433af66"],"4a54d9ede1b7f2f026639186eb07f3f314d87d9a":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","eeeea2295d6355a29e259130a5c48ace73022d7c","d9a47902d6207303f5ed3e7aaca62ca33433af66"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}