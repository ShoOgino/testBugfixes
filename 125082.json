{"path":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testSpellchecker().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testSpellchecker().mjava","pathOld":"modules/suggest/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testSpellchecker().mjava","sourceNew":"  public void testSpellchecker() throws IOException {\n    Directory dir = newDirectory();\n    SpellChecker sc = new SpellChecker(dir);\n    indexReader = DirectoryReader.open(store);\n    sc.indexDictionary(new LuceneDictionary(indexReader, \"contents\"), newIndexWriterConfig(TEST_VERSION_CURRENT, null), false);\n    String[] suggestions = sc.suggestSimilar(\"Tam\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Tom\", suggestions[0]);\n    suggestions = sc.suggestSimilar(\"Jarry\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Jerry\", suggestions[0]);\n    indexReader.close();\n    sc.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSpellchecker() throws IOException {\n    Directory dir = newDirectory();\n    SpellChecker sc = new SpellChecker(dir);\n    indexReader = DirectoryReader.open(store);\n    sc.indexDictionary(new LuceneDictionary(indexReader, \"contents\"), newIndexWriterConfig(TEST_VERSION_CURRENT, null), false);\n    String[] suggestions = sc.suggestSimilar(\"Tam\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Tom\", suggestions[0]);\n    suggestions = sc.suggestSimilar(\"Jarry\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Jerry\", suggestions[0]);\n    indexReader.close();\n    sc.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testSpellchecker().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/spell/TestLuceneDictionary#testSpellchecker().mjava","sourceNew":"  public void testSpellchecker() throws IOException {\n    Directory dir = newDirectory();\n    SpellChecker sc = new SpellChecker(dir);\n    indexReader = DirectoryReader.open(store);\n    sc.indexDictionary(new LuceneDictionary(indexReader, \"contents\"), newIndexWriterConfig(null), false);\n    String[] suggestions = sc.suggestSimilar(\"Tam\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Tom\", suggestions[0]);\n    suggestions = sc.suggestSimilar(\"Jarry\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Jerry\", suggestions[0]);\n    indexReader.close();\n    sc.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSpellchecker() throws IOException {\n    Directory dir = newDirectory();\n    SpellChecker sc = new SpellChecker(dir);\n    indexReader = DirectoryReader.open(store);\n    sc.indexDictionary(new LuceneDictionary(indexReader, \"contents\"), newIndexWriterConfig(TEST_VERSION_CURRENT, null), false);\n    String[] suggestions = sc.suggestSimilar(\"Tam\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Tom\", suggestions[0]);\n    suggestions = sc.suggestSimilar(\"Jarry\", 1);\n    assertEquals(1, suggestions.length);\n    assertEquals(\"Jerry\", suggestions[0]);\n    indexReader.close();\n    sc.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}