{"path":"src/test/org/apache/lucene/index/TestSegmentReader#testGetFieldNameVariations().mjava","commits":[{"id":"770281b8a8459cafcdd2354b6a06078fea2d83c9","date":1077308096,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestSegmentReader#testGetFieldNameVariations().mjava","pathOld":"/dev/null","sourceNew":"  public void testGetFieldNameVariations() {\n    try {\n      Collection result = reader.getFieldNames();\n      assertTrue(result != null);\n      assertTrue(result.size() == 7);\n      for (Iterator iter = result.iterator(); iter.hasNext();) {\n        String s = (String) iter.next();\n        //System.out.println(\"Name: \" + s);\n        assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n      }                                                                               \n      result = reader.getFieldNames(true);\n      assertTrue(result != null);\n//      System.out.println(\"Size: \" + result.size());\n      assertTrue(result.size() == 5);\n      for (Iterator iter = result.iterator(); iter.hasNext();) {\n        String s = (String) iter.next();\n        assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n      }\n      \n      result = reader.getFieldNames(false);\n      assertTrue(result != null);\n      assertTrue(result.size() == 2);\n      //Get all indexed fields that are storing term vectors\n      result = reader.getIndexedFieldNames(true);\n      assertTrue(result != null);\n      assertTrue(result.size() == 2);\n      \n      result = reader.getIndexedFieldNames(false);\n      assertTrue(result != null);\n      assertTrue(result.size() == 3);\n      \n    } catch (IOException e) {\n      e.printStackTrace();\n      assertTrue(false);\n    }\n  } \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ae4efa0568cffc60d08c3c5f45974bf7b2f86c5","date":1091827971,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestSegmentReader#testGetFieldNameVariations().mjava","pathOld":"src/test/org/apache/lucene/index/TestSegmentReader#testGetFieldNameVariations().mjava","sourceNew":"  public void testGetFieldNameVariations() {\n    Collection result = reader.getFieldNames();\n    assertTrue(result != null);\n    assertTrue(result.size() == 7);\n    for (Iterator iter = result.iterator(); iter.hasNext();) {\n      String s = (String) iter.next();\n      //System.out.println(\"Name: \" + s);\n      assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n    }                                                                               \n    result = reader.getFieldNames(true);\n    assertTrue(result != null);\n    assertTrue(result.size() == 5);\n    for (Iterator iter = result.iterator(); iter.hasNext();) {\n      String s = (String) iter.next();\n      assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n    }\n    \n    result = reader.getFieldNames(false);\n    assertTrue(result != null);\n    assertTrue(result.size() == 2);\n    //Get all indexed fields that are storing term vectors\n    result = reader.getIndexedFieldNames(true);\n    assertTrue(result != null);\n    assertTrue(result.size() == 2);\n    \n    result = reader.getIndexedFieldNames(false);\n    assertTrue(result != null);\n    assertTrue(result.size() == 3);\n  } \n\n","sourceOld":"  public void testGetFieldNameVariations() {\n    try {\n      Collection result = reader.getFieldNames();\n      assertTrue(result != null);\n      assertTrue(result.size() == 7);\n      for (Iterator iter = result.iterator(); iter.hasNext();) {\n        String s = (String) iter.next();\n        //System.out.println(\"Name: \" + s);\n        assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n      }                                                                               \n      result = reader.getFieldNames(true);\n      assertTrue(result != null);\n//      System.out.println(\"Size: \" + result.size());\n      assertTrue(result.size() == 5);\n      for (Iterator iter = result.iterator(); iter.hasNext();) {\n        String s = (String) iter.next();\n        assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n      }\n      \n      result = reader.getFieldNames(false);\n      assertTrue(result != null);\n      assertTrue(result.size() == 2);\n      //Get all indexed fields that are storing term vectors\n      result = reader.getIndexedFieldNames(true);\n      assertTrue(result != null);\n      assertTrue(result.size() == 2);\n      \n      result = reader.getIndexedFieldNames(false);\n      assertTrue(result != null);\n      assertTrue(result.size() == 3);\n      \n    } catch (IOException e) {\n      e.printStackTrace();\n      assertTrue(false);\n    }\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a2785c615142cd1dcec85d0854bf9c3776918e79","date":1103468329,"type":3,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestSegmentReader#testGetFieldNameVariations().mjava","pathOld":"src/test/org/apache/lucene/index/TestSegmentReader#testGetFieldNameVariations().mjava","sourceNew":"  public void testGetFieldNameVariations() {\n    Collection result = reader.getFieldNames();\n    assertTrue(result != null);\n    assertTrue(result.size() == 6);\n    for (Iterator iter = result.iterator(); iter.hasNext();) {\n      String s = (String) iter.next();\n      //System.out.println(\"Name: \" + s);\n      assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n    }                                                                               \n    result = reader.getFieldNames(true);\n    assertTrue(result != null);\n    assertTrue(result.size() == 5);\n    for (Iterator iter = result.iterator(); iter.hasNext();) {\n      String s = (String) iter.next();\n      assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n    }\n    \n    result = reader.getFieldNames(false);\n    assertTrue(result != null);\n    assertTrue(result.size() == 1);\n    //Get all indexed fields that are storing term vectors\n    result = reader.getIndexedFieldNames(true);\n    assertTrue(result != null);\n    assertTrue(result.size() == 2);\n    \n    result = reader.getIndexedFieldNames(false);\n    assertTrue(result != null);\n    assertTrue(result.size() == 3);\n  } \n\n","sourceOld":"  public void testGetFieldNameVariations() {\n    Collection result = reader.getFieldNames();\n    assertTrue(result != null);\n    assertTrue(result.size() == 7);\n    for (Iterator iter = result.iterator(); iter.hasNext();) {\n      String s = (String) iter.next();\n      //System.out.println(\"Name: \" + s);\n      assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n    }                                                                               \n    result = reader.getFieldNames(true);\n    assertTrue(result != null);\n    assertTrue(result.size() == 5);\n    for (Iterator iter = result.iterator(); iter.hasNext();) {\n      String s = (String) iter.next();\n      assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n    }\n    \n    result = reader.getFieldNames(false);\n    assertTrue(result != null);\n    assertTrue(result.size() == 2);\n    //Get all indexed fields that are storing term vectors\n    result = reader.getIndexedFieldNames(true);\n    assertTrue(result != null);\n    assertTrue(result.size() == 2);\n    \n    result = reader.getIndexedFieldNames(false);\n    assertTrue(result != null);\n    assertTrue(result.size() == 3);\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ba3aee3f425e35d39d108f6eeb1b39150d898b4","date":1104356321,"type":3,"author":"Bernhard Messer","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestSegmentReader#testGetFieldNameVariations().mjava","pathOld":"src/test/org/apache/lucene/index/TestSegmentReader#testGetFieldNameVariations().mjava","sourceNew":"  public void testGetFieldNameVariations() {\n    Collection result = reader.getFieldNames(IndexReader.FieldOption.ALL);\n    assertTrue(result != null);\n    assertTrue(result.size() == 6);\n    for (Iterator iter = result.iterator(); iter.hasNext();) {\n      String s = (String) iter.next();\n      //System.out.println(\"Name: \" + s);\n      assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n    }                                                                               \n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED);\n    assertTrue(result != null);\n    assertTrue(result.size() == 5);\n    for (Iterator iter = result.iterator(); iter.hasNext();) {\n      String s = (String) iter.next();\n      assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n    }\n    \n    result = reader.getFieldNames(IndexReader.FieldOption.UNINDEXED);\n    assertTrue(result != null);\n    assertTrue(result.size() == 1);\n    //Get all indexed fields that are storing term vectors\n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR);\n    assertTrue(result != null);\n    assertTrue(result.size() == 2);\n    \n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED_NO_TERMVECTOR);\n    assertTrue(result != null);\n    assertTrue(result.size() == 3);\n  } \n\n","sourceOld":"  public void testGetFieldNameVariations() {\n    Collection result = reader.getFieldNames();\n    assertTrue(result != null);\n    assertTrue(result.size() == 6);\n    for (Iterator iter = result.iterator(); iter.hasNext();) {\n      String s = (String) iter.next();\n      //System.out.println(\"Name: \" + s);\n      assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n    }                                                                               \n    result = reader.getFieldNames(true);\n    assertTrue(result != null);\n    assertTrue(result.size() == 5);\n    for (Iterator iter = result.iterator(); iter.hasNext();) {\n      String s = (String) iter.next();\n      assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n    }\n    \n    result = reader.getFieldNames(false);\n    assertTrue(result != null);\n    assertTrue(result.size() == 1);\n    //Get all indexed fields that are storing term vectors\n    result = reader.getIndexedFieldNames(true);\n    assertTrue(result != null);\n    assertTrue(result.size() == 2);\n    \n    result = reader.getIndexedFieldNames(false);\n    assertTrue(result != null);\n    assertTrue(result.size() == 3);\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d189bc0061161fcd0242e1056416ace0bd3a4da7","date":1130650929,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestSegmentReader#testGetFieldNameVariations().mjava","pathOld":"src/test/org/apache/lucene/index/TestSegmentReader#testGetFieldNameVariations().mjava","sourceNew":"  public void testGetFieldNameVariations() {\n    Collection result = reader.getFieldNames(IndexReader.FieldOption.ALL);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.all.size());\n    for (Iterator iter = result.iterator(); iter.hasNext();) {\n      String s = (String) iter.next();\n      //System.out.println(\"Name: \" + s);\n      assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n    }                                                                               \n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.indexed.size());\n    for (Iterator iter = result.iterator(); iter.hasNext();) {\n      String s = (String) iter.next();\n      assertTrue(DocHelper.indexed.containsKey(s) == true || s.equals(\"\"));\n    }\n    \n    result = reader.getFieldNames(IndexReader.FieldOption.UNINDEXED);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.unindexed.size());\n    //Get all indexed fields that are storing term vectors\n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.termvector.size());\n    \n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED_NO_TERMVECTOR);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.notermvector.size());\n  } \n\n","sourceOld":"  public void testGetFieldNameVariations() {\n    Collection result = reader.getFieldNames(IndexReader.FieldOption.ALL);\n    assertTrue(result != null);\n    assertTrue(result.size() == 6);\n    for (Iterator iter = result.iterator(); iter.hasNext();) {\n      String s = (String) iter.next();\n      //System.out.println(\"Name: \" + s);\n      assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n    }                                                                               \n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED);\n    assertTrue(result != null);\n    assertTrue(result.size() == 5);\n    for (Iterator iter = result.iterator(); iter.hasNext();) {\n      String s = (String) iter.next();\n      assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n    }\n    \n    result = reader.getFieldNames(IndexReader.FieldOption.UNINDEXED);\n    assertTrue(result != null);\n    assertTrue(result.size() == 1);\n    //Get all indexed fields that are storing term vectors\n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR);\n    assertTrue(result != null);\n    assertTrue(result.size() == 2);\n    \n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED_NO_TERMVECTOR);\n    assertTrue(result != null);\n    assertTrue(result.size() == 3);\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e450c7d50c2fc84c963d0d7ade9d3217d868064d","date":1259932067,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestSegmentReader#testGetFieldNameVariations().mjava","pathOld":"src/test/org/apache/lucene/index/TestSegmentReader#testGetFieldNameVariations().mjava","sourceNew":"  public void testGetFieldNameVariations() {\n    Collection<String> result = reader.getFieldNames(IndexReader.FieldOption.ALL);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.all.size());\n    for (Iterator<String> iter = result.iterator(); iter.hasNext();) {\n      String s =  iter.next();\n      //System.out.println(\"Name: \" + s);\n      assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n    }                                                                               \n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.indexed.size());\n    for (Iterator<String> iter = result.iterator(); iter.hasNext();) {\n      String s = iter.next();\n      assertTrue(DocHelper.indexed.containsKey(s) == true || s.equals(\"\"));\n    }\n    \n    result = reader.getFieldNames(IndexReader.FieldOption.UNINDEXED);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.unindexed.size());\n    //Get all indexed fields that are storing term vectors\n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.termvector.size());\n    \n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED_NO_TERMVECTOR);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.notermvector.size());\n  } \n\n","sourceOld":"  public void testGetFieldNameVariations() {\n    Collection result = reader.getFieldNames(IndexReader.FieldOption.ALL);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.all.size());\n    for (Iterator iter = result.iterator(); iter.hasNext();) {\n      String s = (String) iter.next();\n      //System.out.println(\"Name: \" + s);\n      assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n    }                                                                               \n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.indexed.size());\n    for (Iterator iter = result.iterator(); iter.hasNext();) {\n      String s = (String) iter.next();\n      assertTrue(DocHelper.indexed.containsKey(s) == true || s.equals(\"\"));\n    }\n    \n    result = reader.getFieldNames(IndexReader.FieldOption.UNINDEXED);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.unindexed.size());\n    //Get all indexed fields that are storing term vectors\n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.termvector.size());\n    \n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED_NO_TERMVECTOR);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.notermvector.size());\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentReader#testGetFieldNameVariations().mjava","pathOld":"src/test/org/apache/lucene/index/TestSegmentReader#testGetFieldNameVariations().mjava","sourceNew":"  public void testGetFieldNameVariations() {\n    Collection<String> result = reader.getFieldNames(IndexReader.FieldOption.ALL);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.all.size());\n    for (Iterator<String> iter = result.iterator(); iter.hasNext();) {\n      String s =  iter.next();\n      //System.out.println(\"Name: \" + s);\n      assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n    }                                                                               \n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.indexed.size());\n    for (Iterator<String> iter = result.iterator(); iter.hasNext();) {\n      String s = iter.next();\n      assertTrue(DocHelper.indexed.containsKey(s) == true || s.equals(\"\"));\n    }\n    \n    result = reader.getFieldNames(IndexReader.FieldOption.UNINDEXED);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.unindexed.size());\n    //Get all indexed fields that are storing term vectors\n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.termvector.size());\n    \n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED_NO_TERMVECTOR);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.notermvector.size());\n  } \n\n","sourceOld":"  public void testGetFieldNameVariations() {\n    Collection<String> result = reader.getFieldNames(IndexReader.FieldOption.ALL);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.all.size());\n    for (Iterator<String> iter = result.iterator(); iter.hasNext();) {\n      String s =  iter.next();\n      //System.out.println(\"Name: \" + s);\n      assertTrue(DocHelper.nameValues.containsKey(s) == true || s.equals(\"\"));\n    }                                                                               \n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.indexed.size());\n    for (Iterator<String> iter = result.iterator(); iter.hasNext();) {\n      String s = iter.next();\n      assertTrue(DocHelper.indexed.containsKey(s) == true || s.equals(\"\"));\n    }\n    \n    result = reader.getFieldNames(IndexReader.FieldOption.UNINDEXED);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.unindexed.size());\n    //Get all indexed fields that are storing term vectors\n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED_WITH_TERMVECTOR);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.termvector.size());\n    \n    result = reader.getFieldNames(IndexReader.FieldOption.INDEXED_NO_TERMVECTOR);\n    assertTrue(result != null);\n    assertTrue(result.size() == DocHelper.notermvector.size());\n  } \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4ba3aee3f425e35d39d108f6eeb1b39150d898b4":["a2785c615142cd1dcec85d0854bf9c3776918e79"],"7ae4efa0568cffc60d08c3c5f45974bf7b2f86c5":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"a2785c615142cd1dcec85d0854bf9c3776918e79":["7ae4efa0568cffc60d08c3c5f45974bf7b2f86c5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e450c7d50c2fc84c963d0d7ade9d3217d868064d":["d189bc0061161fcd0242e1056416ace0bd3a4da7"],"d189bc0061161fcd0242e1056416ace0bd3a4da7":["4ba3aee3f425e35d39d108f6eeb1b39150d898b4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e450c7d50c2fc84c963d0d7ade9d3217d868064d"]},"commit2Childs":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["7ae4efa0568cffc60d08c3c5f45974bf7b2f86c5"],"4ba3aee3f425e35d39d108f6eeb1b39150d898b4":["d189bc0061161fcd0242e1056416ace0bd3a4da7"],"7ae4efa0568cffc60d08c3c5f45974bf7b2f86c5":["a2785c615142cd1dcec85d0854bf9c3776918e79"],"a2785c615142cd1dcec85d0854bf9c3776918e79":["4ba3aee3f425e35d39d108f6eeb1b39150d898b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"e450c7d50c2fc84c963d0d7ade9d3217d868064d":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d189bc0061161fcd0242e1056416ace0bd3a4da7":["e450c7d50c2fc84c963d0d7ade9d3217d868064d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}