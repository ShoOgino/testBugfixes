{"path":"src/java/org/apache/lucene/document/Field#setValue(String).mjava","commits":[{"id":"c2ed332b2d8425551884fa46ddad5af0c7657eb3","date":1184808839,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#setValue(String).mjava","pathOld":"/dev/null","sourceNew":"  /** Expert: change the value of this field.  This can be\n   *  used during indexing to re-use a single Field instance\n   *  to improve indexing speed. */\n  public void setValue(String value) {\n    fieldsData = value;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6ae71a586b8d15937f893cbd2e30bb57c28c790","date":1184840190,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#setValue(String).mjava","pathOld":"src/java/org/apache/lucene/document/Field#setValue(String).mjava","sourceNew":"  /** <p>Expert: change the value of this field.  This can\n   *  be used during indexing to re-use a single Field\n   *  instance to improve indexing speed by avoiding GC cost\n   *  of new'ing and reclaiming Field instances.  Typically\n   *  a single {@link Document} instance is re-used as\n   *  well.  This helps most on small documents.</p>\n   * \n   *  <p>Note that you should only use this method after the\n   *  Field has been consumed (ie, the {@link Document}\n   *  containing this Field has been added to the index).\n   *  Also, each Field instance should only be used once\n   *  within a single {@link Document} instance.  See <a\n   *  href=\"http://wiki.apache.org/lucene-java/ImproveIndexingSpeed\">ImproveIndexingSpeed</a>\n   *  for details.</p> */\n  public void setValue(String value) {\n    fieldsData = value;\n  }\n\n","sourceOld":"  /** Expert: change the value of this field.  This can be\n   *  used during indexing to re-use a single Field instance\n   *  to improve indexing speed. */\n  public void setValue(String value) {\n    fieldsData = value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ceeecb10cba0f5a6e9dc34ac3c60a18383745df","date":1237159479,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#setValue(String).mjava","pathOld":"src/java/org/apache/lucene/document/Field#setValue(String).mjava","sourceNew":"  /** <p>Expert: change the value of this field.  This can\n   *  be used during indexing to re-use a single Field\n   *  instance to improve indexing speed by avoiding GC cost\n   *  of new'ing and reclaiming Field instances.  Typically\n   *  a single {@link Document} instance is re-used as\n   *  well.  This helps most on small documents.</p>\n   * \n   *  <p>Note that you should only use this method after the\n   *  Field has been consumed (ie, the {@link Document}\n   *  containing this Field has been added to the index).\n   *  Also, each Field instance should only be used once\n   *  within a single {@link Document} instance.  See <a\n   *  href=\"http://wiki.apache.org/lucene-java/ImproveIndexingSpeed\">ImproveIndexingSpeed</a>\n   *  for details.</p> */\n  public void setValue(String value) {\n    if (isBinary) {\n      throw new IllegalArgumentException(\"cannot set a String value on a binary field\");\n    }\n    fieldsData = value;\n  }\n\n","sourceOld":"  /** <p>Expert: change the value of this field.  This can\n   *  be used during indexing to re-use a single Field\n   *  instance to improve indexing speed by avoiding GC cost\n   *  of new'ing and reclaiming Field instances.  Typically\n   *  a single {@link Document} instance is re-used as\n   *  well.  This helps most on small documents.</p>\n   * \n   *  <p>Note that you should only use this method after the\n   *  Field has been consumed (ie, the {@link Document}\n   *  containing this Field has been added to the index).\n   *  Also, each Field instance should only be used once\n   *  within a single {@link Document} instance.  See <a\n   *  href=\"http://wiki.apache.org/lucene-java/ImproveIndexingSpeed\">ImproveIndexingSpeed</a>\n   *  for details.</p> */\n  public void setValue(String value) {\n    fieldsData = value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb38e9df66981cbc64d27be81176659de4823526","date":1245712006,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#setValue(String).mjava","pathOld":"src/java/org/apache/lucene/document/Field#setValue(String).mjava","sourceNew":"  /** <p>Expert: change the value of this field.  This can\n   *  be used during indexing to re-use a single Field\n   *  instance to improve indexing speed by avoiding GC cost\n   *  of new'ing and reclaiming Field instances.  Typically\n   *  a single {@link Document} instance is re-used as\n   *  well.  This helps most on small documents.</p>\n   * \n   *  <p>Each Field instance should only be used once\n   *  within a single {@link Document} instance.  See <a\n   *  href=\"http://wiki.apache.org/lucene-java/ImproveIndexingSpeed\">ImproveIndexingSpeed</a>\n   *  for details.</p> */\n  public void setValue(String value) {\n    if (isBinary) {\n      throw new IllegalArgumentException(\"cannot set a String value on a binary field\");\n    }\n    fieldsData = value;\n  }\n\n","sourceOld":"  /** <p>Expert: change the value of this field.  This can\n   *  be used during indexing to re-use a single Field\n   *  instance to improve indexing speed by avoiding GC cost\n   *  of new'ing and reclaiming Field instances.  Typically\n   *  a single {@link Document} instance is re-used as\n   *  well.  This helps most on small documents.</p>\n   * \n   *  <p>Note that you should only use this method after the\n   *  Field has been consumed (ie, the {@link Document}\n   *  containing this Field has been added to the index).\n   *  Also, each Field instance should only be used once\n   *  within a single {@link Document} instance.  See <a\n   *  href=\"http://wiki.apache.org/lucene-java/ImproveIndexingSpeed\">ImproveIndexingSpeed</a>\n   *  for details.</p> */\n  public void setValue(String value) {\n    if (isBinary) {\n      throw new IllegalArgumentException(\"cannot set a String value on a binary field\");\n    }\n    fieldsData = value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/document/Field#setValue(String).mjava","sourceNew":null,"sourceOld":"  /** <p>Expert: change the value of this field.  This can\n   *  be used during indexing to re-use a single Field\n   *  instance to improve indexing speed by avoiding GC cost\n   *  of new'ing and reclaiming Field instances.  Typically\n   *  a single {@link Document} instance is re-used as\n   *  well.  This helps most on small documents.</p>\n   * \n   *  <p>Each Field instance should only be used once\n   *  within a single {@link Document} instance.  See <a\n   *  href=\"http://wiki.apache.org/lucene-java/ImproveIndexingSpeed\">ImproveIndexingSpeed</a>\n   *  for details.</p> */\n  public void setValue(String value) {\n    if (isBinary) {\n      throw new IllegalArgumentException(\"cannot set a String value on a binary field\");\n    }\n    fieldsData = value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2ed332b2d8425551884fa46ddad5af0c7657eb3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a6ae71a586b8d15937f893cbd2e30bb57c28c790":["c2ed332b2d8425551884fa46ddad5af0c7657eb3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9ceeecb10cba0f5a6e9dc34ac3c60a18383745df":["a6ae71a586b8d15937f893cbd2e30bb57c28c790"],"cb38e9df66981cbc64d27be81176659de4823526":["9ceeecb10cba0f5a6e9dc34ac3c60a18383745df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cb38e9df66981cbc64d27be81176659de4823526"]},"commit2Childs":{"c2ed332b2d8425551884fa46ddad5af0c7657eb3":["a6ae71a586b8d15937f893cbd2e30bb57c28c790"],"a6ae71a586b8d15937f893cbd2e30bb57c28c790":["9ceeecb10cba0f5a6e9dc34ac3c60a18383745df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c2ed332b2d8425551884fa46ddad5af0c7657eb3"],"9ceeecb10cba0f5a6e9dc34ac3c60a18383745df":["cb38e9df66981cbc64d27be81176659de4823526"],"cb38e9df66981cbc64d27be81176659de4823526":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}