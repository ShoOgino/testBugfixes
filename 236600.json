{"path":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","sourceNew":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then full merge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.forceMerge(1);\n        break;\n      case 1:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[])\");\n        }\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(IndexReader[])\");\n        }\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then maybeMerge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: commit\");\n        }\n        writer2.commit();\n      }\n    }\n\n","sourceOld":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then full merge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.forceMerge(1);\n        break;\n      case 1:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[])\");\n        }\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(IndexReader[])\");\n        }\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then maybeMerge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: commit\");\n        }\n        writer2.commit();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","sourceNew":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then full merge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.forceMerge(1);\n        break;\n      case 1:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[])\");\n        }\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(IndexReader[])\");\n        }\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then maybeMerge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: commit\");\n        }\n        writer2.commit();\n      }\n    }\n\n","sourceOld":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then full merge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.forceMerge(1);\n        break;\n      case 1:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[])\");\n        }\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(IndexReader[])\");\n        }\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then maybeMerge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: commit\");\n        }\n        writer2.commit();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","sourceNew":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then full merge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.forceMerge(1);\n        break;\n      case 1:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[])\");\n        }\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(IndexReader[])\");\n        }\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then maybeMerge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: commit\");\n        }\n        writer2.commit();\n      }\n    }\n\n","sourceOld":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then full merge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.forceMerge(1);\n        break;\n      case 1:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[])\");\n        }\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(IndexReader[])\");\n        }\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then maybeMerge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: commit\");\n        }\n        writer2.commit();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","sourceNew":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then full merge\");\n        }\n        writer2.addIndexes(dirs);\n        try {\n          writer2.forceMerge(1);\n        } catch (IOException ioe) {\n          if (ioe.getCause() instanceof MergePolicy.MergeAbortedException) {\n            // OK\n          } else {\n            throw ioe;\n          }\n        }\n        break;\n      case 1:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[])\");\n        }\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(IndexReader[])\");\n        }\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then maybeMerge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: commit\");\n        }\n        writer2.commit();\n      }\n    }\n\n","sourceOld":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then full merge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.forceMerge(1);\n        break;\n      case 1:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[])\");\n        }\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(IndexReader[])\");\n        }\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then maybeMerge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: commit\");\n        }\n        writer2.commit();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa","date":1420599177,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes.CommitAndAddIndexes#doBody(int,Directory[]).mjava","sourceNew":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then full merge\");\n        }\n        writer2.addIndexes(dirs);\n        try {\n          writer2.forceMerge(1);\n        } catch (IOException ioe) {\n          if (ioe.getCause() instanceof MergePolicy.MergeAbortedException) {\n            // OK\n          } else {\n            throw ioe;\n          }\n        }\n        break;\n      case 1:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[])\");\n        }\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(LeafReader[])\");\n        }\n        TestUtil.addIndexesSlowly(writer2, readers);\n        break;\n      case 3:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then maybeMerge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: commit\");\n        }\n        writer2.commit();\n      }\n    }\n\n","sourceOld":"    @Override\n    void doBody(int j, Directory[] dirs) throws Throwable {\n      switch(j%5) {\n      case 0:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then full merge\");\n        }\n        writer2.addIndexes(dirs);\n        try {\n          writer2.forceMerge(1);\n        } catch (IOException ioe) {\n          if (ioe.getCause() instanceof MergePolicy.MergeAbortedException) {\n            // OK\n          } else {\n            throw ioe;\n          }\n        }\n        break;\n      case 1:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[])\");\n        }\n        writer2.addIndexes(dirs);\n        break;\n      case 2:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(IndexReader[])\");\n        }\n        writer2.addIndexes(readers);\n        break;\n      case 3:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: addIndexes(Dir[]) then maybeMerge\");\n        }\n        writer2.addIndexes(dirs);\n        writer2.maybeMerge();\n        break;\n      case 4:\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": TEST: commit\");\n        }\n        writer2.commit();\n      }\n    }\n\n","bugFix":["2586f96f60332eb97ecd2934b0763791462568b2","5fff8d3ee91620a83b0a3ac1c9f85b384c7cf32a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["0fa3fa46c67543546ab45142cc8ee7cf34fc9aaa"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}