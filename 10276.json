{"path":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetCloudTest#multiValueTest().mjava","commits":[{"id":"3bd4c6955956e76c96eb12dfe64108ed03522983","date":1508262722,"type":0,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetCloudTest#multiValueTest().mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void multiValueTest() throws Exception { \n    String[] params = new String[] {\n        \"o.multivalued.s.mean\", \"mean(int_id)\",\n        \"o.multivalued.ff\", \"long_ldm\",\n        \"o.multivalued.ff\", \"string_sdm\",\n        \"o.multivalued.ff\", \"date_dtdm\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n    \n    //Long\n    Collection<Double> lon = getValueList(response, \"multivalued\", \"fieldFacets\", \"long_ldm\", \"mean\", false);\n    ArrayList<Double> longTest = calculateFacetedNumberStat(multiLongTestStart, \"mean\");\n    assertEquals(responseStr,lon,longTest);\n    //Date\n    Collection<Double> date = getValueList(response, \"multivalued\", \"fieldFacets\", \"date_dtdm\", \"mean\", false);\n    ArrayList<Double> dateTest = calculateFacetedNumberStat(multiDateTestStart, \"mean\");\n    assertEquals(responseStr,date,dateTest);\n    //String\n    Collection<Double> string = getValueList(response, \"multivalued\", \"fieldFacets\", \"string_sdm\", \"mean\", false);\n    ArrayList<Double> stringTest = calculateFacetedNumberStat(multiStringTestStart, \"mean\");\n    assertEquals(responseStr,string,stringTest);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e4e64b7199d2f2a17be7f3926c7532553910dce","date":1564342581,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetCloudTest#multiValueTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetCloudTest#multiValueTest().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void multiValueTest() throws Exception {\n    String[] params = new String[] {\n        \"o.multivalued.s.mean\", \"mean(int_id)\",\n        \"o.multivalued.ff\", \"long_ldm\",\n        \"o.multivalued.ff\", \"string_sdm\",\n        \"o.multivalued.ff\", \"date_dtdm\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n\n    //Long\n    Collection<Double> lon = getValueList(response, \"multivalued\", \"fieldFacets\", \"long_ldm\", \"mean\", false);\n    ArrayList<Double> longTest = calculateFacetedNumberStat(multiLongTestStart, \"mean\");\n    assertEquals(responseStr,lon,longTest);\n    //Date\n    Collection<Double> date = getValueList(response, \"multivalued\", \"fieldFacets\", \"date_dtdm\", \"mean\", false);\n    ArrayList<Double> dateTest = calculateFacetedNumberStat(multiDateTestStart, \"mean\");\n    assertEquals(responseStr,date,dateTest);\n    //String\n    Collection<Double> string = getValueList(response, \"multivalued\", \"fieldFacets\", \"string_sdm\", \"mean\", false);\n    ArrayList<Double> stringTest = calculateFacetedNumberStat(multiStringTestStart, \"mean\");\n    assertEquals(responseStr,string,stringTest);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void multiValueTest() throws Exception { \n    String[] params = new String[] {\n        \"o.multivalued.s.mean\", \"mean(int_id)\",\n        \"o.multivalued.ff\", \"long_ldm\",\n        \"o.multivalued.ff\", \"string_sdm\",\n        \"o.multivalued.ff\", \"date_dtdm\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n    \n    //Long\n    Collection<Double> lon = getValueList(response, \"multivalued\", \"fieldFacets\", \"long_ldm\", \"mean\", false);\n    ArrayList<Double> longTest = calculateFacetedNumberStat(multiLongTestStart, \"mean\");\n    assertEquals(responseStr,lon,longTest);\n    //Date\n    Collection<Double> date = getValueList(response, \"multivalued\", \"fieldFacets\", \"date_dtdm\", \"mean\", false);\n    ArrayList<Double> dateTest = calculateFacetedNumberStat(multiDateTestStart, \"mean\");\n    assertEquals(responseStr,date,dateTest);\n    //String\n    Collection<Double> string = getValueList(response, \"multivalued\", \"fieldFacets\", \"string_sdm\", \"mean\", false);\n    ArrayList<Double> stringTest = calculateFacetedNumberStat(multiStringTestStart, \"mean\");\n    assertEquals(responseStr,string,stringTest);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetCloudTest#multiValueTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyFieldFacetCloudTest#multiValueTest().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void multiValueTest() throws Exception {\n    String[] params = new String[] {\n        \"o.multivalued.s.mean\", \"mean(int_id)\",\n        \"o.multivalued.ff\", \"long_ldm\",\n        \"o.multivalued.ff\", \"string_sdm\",\n        \"o.multivalued.ff\", \"date_dtdm\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n\n    //Long\n    Collection<Double> lon = getValueList(response, \"multivalued\", \"fieldFacets\", \"long_ldm\", \"mean\", false);\n    ArrayList<Double> longTest = calculateFacetedNumberStat(multiLongTestStart, \"mean\");\n    assertEquals(responseStr,lon,longTest);\n    //Date\n    Collection<Double> date = getValueList(response, \"multivalued\", \"fieldFacets\", \"date_dtdm\", \"mean\", false);\n    ArrayList<Double> dateTest = calculateFacetedNumberStat(multiDateTestStart, \"mean\");\n    assertEquals(responseStr,date,dateTest);\n    //String\n    Collection<Double> string = getValueList(response, \"multivalued\", \"fieldFacets\", \"string_sdm\", \"mean\", false);\n    ArrayList<Double> stringTest = calculateFacetedNumberStat(multiStringTestStart, \"mean\");\n    assertEquals(responseStr,string,stringTest);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void multiValueTest() throws Exception { \n    String[] params = new String[] {\n        \"o.multivalued.s.mean\", \"mean(int_id)\",\n        \"o.multivalued.ff\", \"long_ldm\",\n        \"o.multivalued.ff\", \"string_sdm\",\n        \"o.multivalued.ff\", \"date_dtdm\"\n    };\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n    \n    //Long\n    Collection<Double> lon = getValueList(response, \"multivalued\", \"fieldFacets\", \"long_ldm\", \"mean\", false);\n    ArrayList<Double> longTest = calculateFacetedNumberStat(multiLongTestStart, \"mean\");\n    assertEquals(responseStr,lon,longTest);\n    //Date\n    Collection<Double> date = getValueList(response, \"multivalued\", \"fieldFacets\", \"date_dtdm\", \"mean\", false);\n    ArrayList<Double> dateTest = calculateFacetedNumberStat(multiDateTestStart, \"mean\");\n    assertEquals(responseStr,date,dateTest);\n    //String\n    Collection<Double> string = getValueList(response, \"multivalued\", \"fieldFacets\", \"string_sdm\", \"mean\", false);\n    ArrayList<Double> stringTest = calculateFacetedNumberStat(multiStringTestStart, \"mean\");\n    assertEquals(responseStr,string,stringTest);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8061ddd97f3352007d927dae445884a6f3d857b":["3bd4c6955956e76c96eb12dfe64108ed03522983","1e4e64b7199d2f2a17be7f3926c7532553910dce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e4e64b7199d2f2a17be7f3926c7532553910dce"],"3bd4c6955956e76c96eb12dfe64108ed03522983":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"3bd4c6955956e76c96eb12dfe64108ed03522983":["1e4e64b7199d2f2a17be7f3926c7532553910dce","f8061ddd97f3352007d927dae445884a6f3d857b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}