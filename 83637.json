{"path":"src/java/org/apache/solr/analysis/NGramTokenizerFactory#init(Map[String,String]).mjava","commits":[{"id":"c3acfc142ef720b6b06957a6e9e993dcb423af73","date":1179771460,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/NGramTokenizerFactory#init(Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"    /** Initializes the n-gram min and max sizes and the side from which one should start tokenizing. */\n    public void init(Map<String, String> args) {\n        super.init(args);\n        String maxArg = args.get(\"maxGramSize\");\n        maxGramSize = (maxArg != null ? Integer.parseInt(maxArg) : NGramTokenizer.DEFAULT_MAX_NGRAM_SIZE);\n\n        String minArg = args.get(\"minGramSize\");\n        minGramSize = (minArg != null ? Integer.parseInt(minArg) : NGramTokenizer.DEFAULT_MIN_NGRAM_SIZE);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d6338c87060be5f66757a94945975f3bbd377a9","date":1189278234,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/NGramTokenizerFactory#init(SolrConfig,Map[String,String]).mjava","pathOld":"src/java/org/apache/solr/analysis/NGramTokenizerFactory#init(Map[String,String]).mjava","sourceNew":"    /** Initializes the n-gram min and max sizes and the side from which one should start tokenizing. */\n    public void init(SolrConfig solrConfig, Map<String, String> args) {\n        super.init(solrConfig, args);\n        String maxArg = args.get(\"maxGramSize\");\n        maxGramSize = (maxArg != null ? Integer.parseInt(maxArg) : NGramTokenizer.DEFAULT_MAX_NGRAM_SIZE);\n\n        String minArg = args.get(\"minGramSize\");\n        minGramSize = (minArg != null ? Integer.parseInt(minArg) : NGramTokenizer.DEFAULT_MIN_NGRAM_SIZE);\n    }\n\n","sourceOld":"    /** Initializes the n-gram min and max sizes and the side from which one should start tokenizing. */\n    public void init(Map<String, String> args) {\n        super.init(args);\n        String maxArg = args.get(\"maxGramSize\");\n        maxGramSize = (maxArg != null ? Integer.parseInt(maxArg) : NGramTokenizer.DEFAULT_MAX_NGRAM_SIZE);\n\n        String minArg = args.get(\"minGramSize\");\n        minGramSize = (minArg != null ? Integer.parseInt(minArg) : NGramTokenizer.DEFAULT_MIN_NGRAM_SIZE);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014","date":1195912306,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/NGramTokenizerFactory#init(Map[String,String]).mjava","pathOld":"src/java/org/apache/solr/analysis/NGramTokenizerFactory#init(SolrConfig,Map[String,String]).mjava","sourceNew":"    /** Initializes the n-gram min and max sizes and the side from which one should start tokenizing. */\n    @Override\n    public void init(Map<String, String> args) {\n        super.init(args);\n        String maxArg = args.get(\"maxGramSize\");\n        maxGramSize = (maxArg != null ? Integer.parseInt(maxArg) : NGramTokenizer.DEFAULT_MAX_NGRAM_SIZE);\n\n        String minArg = args.get(\"minGramSize\");\n        minGramSize = (minArg != null ? Integer.parseInt(minArg) : NGramTokenizer.DEFAULT_MIN_NGRAM_SIZE);\n    }\n\n","sourceOld":"    /** Initializes the n-gram min and max sizes and the side from which one should start tokenizing. */\n    public void init(SolrConfig solrConfig, Map<String, String> args) {\n        super.init(solrConfig, args);\n        String maxArg = args.get(\"maxGramSize\");\n        maxGramSize = (maxArg != null ? Integer.parseInt(maxArg) : NGramTokenizer.DEFAULT_MAX_NGRAM_SIZE);\n\n        String minArg = args.get(\"minGramSize\");\n        minGramSize = (minArg != null ? Integer.parseInt(minArg) : NGramTokenizer.DEFAULT_MIN_NGRAM_SIZE);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/NGramTokenizerFactory#init(Map[String,String]).mjava","pathOld":"src/java/org/apache/solr/analysis/NGramTokenizerFactory#init(Map[String,String]).mjava","sourceNew":"    /** Initializes the n-gram min and max sizes and the side from which one should start tokenizing. */\n    @Override\n    public void init(Map<String, String> args) {\n        super.init(args);\n        String maxArg = args.get(\"maxGramSize\");\n        maxGramSize = (maxArg != null ? Integer.parseInt(maxArg) : NGramTokenizer.DEFAULT_MAX_NGRAM_SIZE);\n\n        String minArg = args.get(\"minGramSize\");\n        minGramSize = (minArg != null ? Integer.parseInt(minArg) : NGramTokenizer.DEFAULT_MIN_NGRAM_SIZE);\n    }\n\n","sourceOld":"    /** Initializes the n-gram min and max sizes and the side from which one should start tokenizing. */\n    @Override\n    public void init(Map<String, String> args) {\n        super.init(args);\n        String maxArg = args.get(\"maxGramSize\");\n        maxGramSize = (maxArg != null ? Integer.parseInt(maxArg) : NGramTokenizer.DEFAULT_MAX_NGRAM_SIZE);\n\n        String minArg = args.get(\"minGramSize\");\n        minGramSize = (minArg != null ? Integer.parseInt(minArg) : NGramTokenizer.DEFAULT_MIN_NGRAM_SIZE);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c3acfc142ef720b6b06957a6e9e993dcb423af73":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"6d6338c87060be5f66757a94945975f3bbd377a9":["c3acfc142ef720b6b06957a6e9e993dcb423af73"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["6d6338c87060be5f66757a94945975f3bbd377a9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c3acfc142ef720b6b06957a6e9e993dcb423af73":["6d6338c87060be5f66757a94945975f3bbd377a9"],"6d6338c87060be5f66757a94945975f3bbd377a9":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["c3acfc142ef720b6b06957a6e9e993dcb423af73"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}