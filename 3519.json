{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexOptions#doTestChangeIndexOptionsViaAddDocument(boolean,boolean,IndexOptions,IndexOptions).mjava","commits":[{"id":"21ef7a2296a649922c9906e94b1bd3553bbbd5e6","date":1519032476,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexOptions#doTestChangeIndexOptionsViaAddDocument(boolean,boolean,IndexOptions,IndexOptions).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexOptions#doTestChangeIndexOptionsViaAddDocument(boolean,IndexOptions,IndexOptions).mjava","sourceNew":"  private void doTestChangeIndexOptionsViaAddDocument(boolean preExistingField, boolean onNewSegment, IndexOptions from, IndexOptions to) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    if (preExistingField) {\n      w.addDocument(Collections.singleton(new IntPoint(\"foo\", 1)));\n      if (onNewSegment) {\n        DirectoryReader.open(w).close();\n      }\n    }\n    FieldType ft1 = new FieldType(TextField.TYPE_STORED);\n    ft1.setIndexOptions(from);\n    w.addDocument(Collections.singleton(new Field(\"foo\", \"bar\", ft1)));\n    if (onNewSegment) {\n      DirectoryReader.open(w).close();\n    }\n    FieldType ft2 = new FieldType(TextField.TYPE_STORED);\n    ft2.setIndexOptions(to);\n    if (from == IndexOptions.NONE || to == IndexOptions.NONE || from == to) {\n      w.addDocument(Collections.singleton(new Field(\"foo\", \"bar\", ft2))); // no exception\n      w.forceMerge(1);\n      try (LeafReader r = getOnlyLeafReader(DirectoryReader.open(w))) {\n        IndexOptions expected = from == IndexOptions.NONE ? to : from;\n        assertEquals(expected, r.getFieldInfos().fieldInfo(\"foo\").getIndexOptions());\n      }\n    } else {\n      IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n          () -> w.addDocument(Collections.singleton(new Field(\"foo\", \"bar\", ft2))));\n      assertEquals(\"cannot change field \\\"foo\\\" from index options=\" + from +\n          \" to inconsistent index options=\" + to, e.getMessage());\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  private void doTestChangeIndexOptionsViaAddDocument(boolean preExistingField, IndexOptions from, IndexOptions to) throws IOException {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig());\n    if (preExistingField) {\n      w.addDocument(Collections.singleton(new IntPoint(\"foo\", 1)));\n    }\n    FieldType ft1 = new FieldType(TextField.TYPE_STORED);\n    ft1.setIndexOptions(from);\n    w.addDocument(Collections.singleton(new Field(\"foo\", \"bar\", ft1)));\n    FieldType ft2 = new FieldType(TextField.TYPE_STORED);\n    ft2.setIndexOptions(to);\n    if (from == IndexOptions.NONE || to == IndexOptions.NONE || from == to) {\n      w.addDocument(Collections.singleton(new Field(\"foo\", \"bar\", ft2))); // no exception\n      w.forceMerge(1);\n      try (LeafReader r = getOnlyLeafReader(DirectoryReader.open(w))) {\n        IndexOptions expected = from == IndexOptions.NONE ? to : from;\n        assertEquals(expected, r.getFieldInfos().fieldInfo(\"foo\").getIndexOptions());\n      }\n    } else {\n      IllegalArgumentException e = expectThrows(IllegalArgumentException.class,\n          () -> w.addDocument(Collections.singleton(new Field(\"foo\", \"bar\", ft2))));\n      assertEquals(\"cannot change field \\\"foo\\\" from index options=\" + from +\n          \" to inconsistent index options=\" + to, e.getMessage());\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"21ef7a2296a649922c9906e94b1bd3553bbbd5e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["21ef7a2296a649922c9906e94b1bd3553bbbd5e6"]},"commit2Childs":{"21ef7a2296a649922c9906e94b1bd3553bbbd5e6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21ef7a2296a649922c9906e94b1bd3553bbbd5e6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}