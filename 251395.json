{"path":"solr/solrj/src/java/org/apache/solr/recipe/Policy.SortParam#get(String).mjava","commits":[{"id":"752049b8e30557f067592844bff40caaea288062","date":1490707105,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/recipe/Policy.SortParam#get(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/recipe/RuleSorter.SortParam#get(String).mjava","sourceNew":"    static SortParam get(String m) {\n      for (SortParam p : values()) if (p.name().equals(m)) return p;\n      throw new RuntimeException(\"Sort must be on one of these \" + Arrays.asList(values()));\n    }\n\n","sourceOld":"    static SortParam get(String m) {\n      for (SortParam p : values()) if (p.name().equals(m)) return p;\n      throw new RuntimeException(\"Sort must be on one of these \" + Arrays.asList(values()));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e12a337a9a98e388c3a5bca9c8256d21c13781f9","date":1492093671,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/recipe/Policy.SortParam#get(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/recipe/Policy.SortParam#get(String).mjava","sourceNew":"    static SortParam get(String m) {\n      for (SortParam p : values()) if (p.name().equals(m)) return p;\n      throw new RuntimeException( \"Invalid sort \"+ m+  \" Sort must be on one of these \" + Arrays.asList(values()));\n    }\n\n","sourceOld":"    static SortParam get(String m) {\n      for (SortParam p : values()) if (p.name().equals(m)) return p;\n      throw new RuntimeException(\"Sort must be on one of these \" + Arrays.asList(values()));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b59075a857a3d25d834f6f408491b40845b8ced0","date":1492433183,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/recipe/Policy.SortParam#get(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/recipe/Policy.SortParam#get(String).mjava","sourceNew":"    static SortParam get(String m) {\n      for (SortParam p : values()) if (p.name().equals(m)) return p;\n      throw new RuntimeException(\"Invalid sort \" + m + \" Sort must be on one of these \" + Arrays.asList(values()));\n    }\n\n","sourceOld":"    static SortParam get(String m) {\n      for (SortParam p : values()) if (p.name().equals(m)) return p;\n      throw new RuntimeException( \"Invalid sort \"+ m+  \" Sort must be on one of these \" + Arrays.asList(values()));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"653c1ca305e0065ee988a09e59c8316b8cde02fd","date":1492506780,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Policy.SortParam#get(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/recipe/Policy.SortParam#get(String).mjava","sourceNew":"    static SortParam get(String m) {\n      for (SortParam p : values()) if (p.name().equals(m)) return p;\n      throw new RuntimeException(\"Invalid sort \" + m + \" Sort must be on one of these \" + Arrays.asList(values()));\n    }\n\n","sourceOld":"    static SortParam get(String m) {\n      for (SortParam p : values()) if (p.name().equals(m)) return p;\n      throw new RuntimeException(\"Invalid sort \" + m + \" Sort must be on one of these \" + Arrays.asList(values()));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"752049b8e30557f067592844bff40caaea288062":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b59075a857a3d25d834f6f408491b40845b8ced0":["e12a337a9a98e388c3a5bca9c8256d21c13781f9"],"653c1ca305e0065ee988a09e59c8316b8cde02fd":["b59075a857a3d25d834f6f408491b40845b8ced0"],"e12a337a9a98e388c3a5bca9c8256d21c13781f9":["752049b8e30557f067592844bff40caaea288062"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"752049b8e30557f067592844bff40caaea288062":["e12a337a9a98e388c3a5bca9c8256d21c13781f9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["752049b8e30557f067592844bff40caaea288062","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b59075a857a3d25d834f6f408491b40845b8ced0":["653c1ca305e0065ee988a09e59c8316b8cde02fd"],"e12a337a9a98e388c3a5bca9c8256d21c13781f9":["b59075a857a3d25d834f6f408491b40845b8ced0"],"653c1ca305e0065ee988a09e59c8316b8cde02fd":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["653c1ca305e0065ee988a09e59c8316b8cde02fd","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}