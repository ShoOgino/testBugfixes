{"path":"lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates#testUpdateNonDocValueField().mjava","commits":[{"id":"e072d0b1fc19e0533d8ce432eed245196bca6fde","date":1379265112,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates#testUpdateNonDocValueField().mjava","pathOld":"/dev/null","sourceNew":"  @Test\r\n  public void testUpdateNonDocValueField() throws Exception {\r\n    // we don't support adding new fields or updating existing non-numeric-dv\r\n    // fields through numeric updates\r\n    Directory dir = newDirectory();\r\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\r\n    IndexWriter writer = new IndexWriter(dir, conf);\r\n    \r\n    Document doc = new Document();\r\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\r\n    doc.add(new StringField(\"foo\", \"bar\", Store.NO));\r\n    writer.addDocument(doc); // flushed document\r\n    writer.commit();\r\n    writer.addDocument(doc); // in-memory document\r\n    \r\n    try {\r\n      writer.updateNumericDocValue(new Term(\"key\", \"doc\"), \"ndv\", 17L);\r\n      fail(\"should not have allowed creating new fields through update\");\r\n    } catch (IllegalArgumentException e) {\r\n      // ok\r\n    }\r\n    \r\n    try {\r\n      writer.updateNumericDocValue(new Term(\"key\", \"doc\"), \"foo\", 17L);\r\n      fail(\"should not have allowed updating an existing field to numeric-dv\");\r\n    } catch (IllegalArgumentException e) {\r\n      // ok\r\n    }\r\n    \r\n    writer.close();\r\n    dir.close();\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4962e8a1c440950d757f5e295b4f6106ba2ab420","date":1379271654,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates#testUpdateNonDocValueField().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates#testUpdateNonDocValueField().mjava","sourceNew":"  @Test\n  public void testUpdateNonDocValueField() throws Exception {\n    // we don't support adding new fields or updating existing non-numeric-dv\n    // fields through numeric updates\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new StringField(\"foo\", \"bar\", Store.NO));\n    writer.addDocument(doc); // flushed document\n    writer.commit();\n    writer.addDocument(doc); // in-memory document\n    \n    try {\n      writer.updateNumericDocValue(new Term(\"key\", \"doc\"), \"ndv\", 17L);\n      fail(\"should not have allowed creating new fields through update\");\n    } catch (IllegalArgumentException e) {\n      // ok\n    }\n    \n    try {\n      writer.updateNumericDocValue(new Term(\"key\", \"doc\"), \"foo\", 17L);\n      fail(\"should not have allowed updating an existing field to numeric-dv\");\n    } catch (IllegalArgumentException e) {\n      // ok\n    }\n    \n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\r\n  public void testUpdateNonDocValueField() throws Exception {\r\n    // we don't support adding new fields or updating existing non-numeric-dv\r\n    // fields through numeric updates\r\n    Directory dir = newDirectory();\r\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\r\n    IndexWriter writer = new IndexWriter(dir, conf);\r\n    \r\n    Document doc = new Document();\r\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\r\n    doc.add(new StringField(\"foo\", \"bar\", Store.NO));\r\n    writer.addDocument(doc); // flushed document\r\n    writer.commit();\r\n    writer.addDocument(doc); // in-memory document\r\n    \r\n    try {\r\n      writer.updateNumericDocValue(new Term(\"key\", \"doc\"), \"ndv\", 17L);\r\n      fail(\"should not have allowed creating new fields through update\");\r\n    } catch (IllegalArgumentException e) {\r\n      // ok\r\n    }\r\n    \r\n    try {\r\n      writer.updateNumericDocValue(new Term(\"key\", \"doc\"), \"foo\", 17L);\r\n      fail(\"should not have allowed updating an existing field to numeric-dv\");\r\n    } catch (IllegalArgumentException e) {\r\n      // ok\r\n    }\r\n    \r\n    writer.close();\r\n    dir.close();\r\n  }\r\n\n","bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1cff1deb788b9babb942b20707a93e1ab902ce37","date":1380805349,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates#testUpdateNonNumericDocValuesField().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestNumericDocValuesUpdates#testUpdateNonDocValueField().mjava","sourceNew":"  @Test\n  public void testUpdateNonNumericDocValuesField() throws Exception {\n    // we don't support adding new fields or updating existing non-numeric-dv\n    // fields through numeric updates\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new StringField(\"foo\", \"bar\", Store.NO));\n    writer.addDocument(doc); // flushed document\n    writer.commit();\n    writer.addDocument(doc); // in-memory document\n    \n    try {\n      writer.updateNumericDocValue(new Term(\"key\", \"doc\"), \"ndv\", 17L);\n      fail(\"should not have allowed creating new fields through update\");\n    } catch (IllegalArgumentException e) {\n      // ok\n    }\n    \n    try {\n      writer.updateNumericDocValue(new Term(\"key\", \"doc\"), \"foo\", 17L);\n      fail(\"should not have allowed updating an existing field to numeric-dv\");\n    } catch (IllegalArgumentException e) {\n      // ok\n    }\n    \n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testUpdateNonDocValueField() throws Exception {\n    // we don't support adding new fields or updating existing non-numeric-dv\n    // fields through numeric updates\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter writer = new IndexWriter(dir, conf);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"key\", \"doc\", Store.NO));\n    doc.add(new StringField(\"foo\", \"bar\", Store.NO));\n    writer.addDocument(doc); // flushed document\n    writer.commit();\n    writer.addDocument(doc); // in-memory document\n    \n    try {\n      writer.updateNumericDocValue(new Term(\"key\", \"doc\"), \"ndv\", 17L);\n      fail(\"should not have allowed creating new fields through update\");\n    } catch (IllegalArgumentException e) {\n      // ok\n    }\n    \n    try {\n      writer.updateNumericDocValue(new Term(\"key\", \"doc\"), \"foo\", 17L);\n      fail(\"should not have allowed updating an existing field to numeric-dv\");\n    } catch (IllegalArgumentException e) {\n      // ok\n    }\n    \n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e072d0b1fc19e0533d8ce432eed245196bca6fde":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1cff1deb788b9babb942b20707a93e1ab902ce37":["4962e8a1c440950d757f5e295b4f6106ba2ab420"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4962e8a1c440950d757f5e295b4f6106ba2ab420":["e072d0b1fc19e0533d8ce432eed245196bca6fde"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1cff1deb788b9babb942b20707a93e1ab902ce37"]},"commit2Childs":{"e072d0b1fc19e0533d8ce432eed245196bca6fde":["4962e8a1c440950d757f5e295b4f6106ba2ab420"],"1cff1deb788b9babb942b20707a93e1ab902ce37":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e072d0b1fc19e0533d8ce432eed245196bca6fde"],"4962e8a1c440950d757f5e295b4f6106ba2ab420":["1cff1deb788b9babb942b20707a93e1ab902ce37"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}