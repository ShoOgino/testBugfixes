{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","sourceNew":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, new NoOpCache());\n    taxoWriter.addCategory(new CategoryPath(\"a\"));\n    taxoWriter.addCategory(new CategoryPath(\"b\"));\n    Map <String, String> userCommitData = new HashMap<String, String>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.commit(userCommitData);\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(\"index.create.time not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_CREATE_TIME));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_CREATE_TIME should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, new NoOpCache());\n    taxoWriter.addCategory(new CategoryPath(\"c\")); // add a category so that commit will happen\n    taxoWriter.commit(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }});\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(\"index.create.time not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_CREATE_TIME));\n    r.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, new NoOpCache());\n    taxoWriter.addCategory(new CategoryPath(\"a\"));\n    taxoWriter.addCategory(new CategoryPath(\"b\"));\n    Map <String, String> userCommitData = new HashMap<String, String>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.commit(userCommitData);\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(\"index.create.time not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_CREATE_TIME));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_CREATE_TIME should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, new NoOpCache());\n    taxoWriter.addCategory(new CategoryPath(\"c\")); // add a category so that commit will happen\n    taxoWriter.commit(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }});\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(\"index.create.time not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_CREATE_TIME));\n    r.close();\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b52ea8b7f80d4a0600efc9765dc896387008ebd4","date":1340109038,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","sourceNew":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new CategoryPath(\"a\"));\n    taxoWriter.addCategory(new CategoryPath(\"b\"));\n    Map <String, String> userCommitData = new HashMap<String, String>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.commit(userCommitData);\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(\"index.create.time not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_CREATE_TIME));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_CREATE_TIME should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new CategoryPath(\"c\")); // add a category so that commit will happen\n    taxoWriter.commit(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }});\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(\"index.create.time not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_CREATE_TIME));\n    r.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, new NoOpCache());\n    taxoWriter.addCategory(new CategoryPath(\"a\"));\n    taxoWriter.addCategory(new CategoryPath(\"b\"));\n    Map <String, String> userCommitData = new HashMap<String, String>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.commit(userCommitData);\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(\"index.create.time not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_CREATE_TIME));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_CREATE_TIME should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, new NoOpCache());\n    taxoWriter.addCategory(new CategoryPath(\"c\")); // add a category so that commit will happen\n    taxoWriter.commit(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }});\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(\"index.create.time not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_CREATE_TIME));\n    r.close();\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"78e3613d9274c0d98ca67d976e415c82e9f9cf46","date":1352285414,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","sourceNew":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new CategoryPath(\"a\"));\n    taxoWriter.addCategory(new CategoryPath(\"b\"));\n    Map <String, String> userCommitData = new HashMap<String, String>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.commit(userCommitData);\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_EPOCH should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new CategoryPath(\"c\")); // add a category so that commit will happen\n    taxoWriter.commit(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }});\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new CategoryPath(\"a\"));\n    taxoWriter.addCategory(new CategoryPath(\"b\"));\n    Map <String, String> userCommitData = new HashMap<String, String>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.commit(userCommitData);\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(\"index.create.time not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_CREATE_TIME));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_CREATE_TIME should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new CategoryPath(\"c\")); // add a category so that commit will happen\n    taxoWriter.commit(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }});\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(\"index.create.time not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_CREATE_TIME));\n    r.close();\n    \n    dir.close();\n  }\n\n","bugFix":["e26e3b5080bfb6fcabdc46d0072efe441de1a21b"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b47e1512544568a22b82c96169d466fae8a4b79e","date":1354519309,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","sourceNew":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new CategoryPath(\"a\"));\n    taxoWriter.addCategory(new CategoryPath(\"b\"));\n    Map<String, String> userCommitData = new HashMap<String, String>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.setCommitData(userCommitData);\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_EPOCH should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new CategoryPath(\"c\")); // add a category so that commit will happen\n    taxoWriter.setCommitData(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }});\n    taxoWriter.commit();\n    \n    // verify taxoWriter.getCommitData()\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH\n        + \" not found in taoxWriter.commitData\", taxoWriter.getCommitData().get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new CategoryPath(\"a\"));\n    taxoWriter.addCategory(new CategoryPath(\"b\"));\n    Map <String, String> userCommitData = new HashMap<String, String>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.commit(userCommitData);\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_EPOCH should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new CategoryPath(\"c\")); // add a category so that commit will happen\n    taxoWriter.commit(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }});\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["71e1a70f18d64b93db3ef618e606d6df5062f747"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","sourceNew":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new CategoryPath(\"a\"));\n    taxoWriter.addCategory(new CategoryPath(\"b\"));\n    Map<String, String> userCommitData = new HashMap<String, String>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.setCommitData(userCommitData);\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_EPOCH should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new CategoryPath(\"c\")); // add a category so that commit will happen\n    taxoWriter.setCommitData(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }});\n    taxoWriter.commit();\n    \n    // verify taxoWriter.getCommitData()\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH\n        + \" not found in taoxWriter.commitData\", taxoWriter.getCommitData().get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new CategoryPath(\"a\"));\n    taxoWriter.addCategory(new CategoryPath(\"b\"));\n    Map <String, String> userCommitData = new HashMap<String, String>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.commit(userCommitData);\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_EPOCH should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new CategoryPath(\"c\")); // add a category so that commit will happen\n    taxoWriter.commit(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }});\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","sourceNew":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"a\"));\n    taxoWriter.addCategory(new FacetLabel(\"b\"));\n    Map<String, String> userCommitData = new HashMap<String, String>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.setCommitData(userCommitData);\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_EPOCH should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"c\")); // add a category so that commit will happen\n    taxoWriter.setCommitData(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }});\n    taxoWriter.commit();\n    \n    // verify taxoWriter.getCommitData()\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH\n        + \" not found in taoxWriter.commitData\", taxoWriter.getCommitData().get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new CategoryPath(\"a\"));\n    taxoWriter.addCategory(new CategoryPath(\"b\"));\n    Map<String, String> userCommitData = new HashMap<String, String>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.setCommitData(userCommitData);\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_EPOCH should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new CategoryPath(\"c\")); // add a category so that commit will happen\n    taxoWriter.setCommitData(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }});\n    taxoWriter.commit();\n    \n    // verify taxoWriter.getCommitData()\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH\n        + \" not found in taoxWriter.commitData\", taxoWriter.getCommitData().get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","sourceNew":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"a\"));\n    taxoWriter.addCategory(new FacetLabel(\"b\"));\n    Map<String, String> userCommitData = new HashMap<String, String>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.setCommitData(userCommitData);\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_EPOCH should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"c\")); // add a category so that commit will happen\n    taxoWriter.setCommitData(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }});\n    taxoWriter.commit();\n    \n    // verify taxoWriter.getCommitData()\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH\n        + \" not found in taoxWriter.commitData\", taxoWriter.getCommitData().get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new CategoryPath(\"a\"));\n    taxoWriter.addCategory(new CategoryPath(\"b\"));\n    Map<String, String> userCommitData = new HashMap<String, String>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.setCommitData(userCommitData);\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_EPOCH should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new CategoryPath(\"c\")); // add a category so that commit will happen\n    taxoWriter.setCommitData(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }});\n    taxoWriter.commit();\n    \n    // verify taxoWriter.getCommitData()\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH\n        + \" not found in taoxWriter.commitData\", taxoWriter.getCommitData().get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","sourceNew":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"a\"));\n    taxoWriter.addCategory(new FacetLabel(\"b\"));\n    Map<String, String> userCommitData = new HashMap<>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.setCommitData(userCommitData);\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_EPOCH should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"c\")); // add a category so that commit will happen\n    taxoWriter.setCommitData(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }});\n    taxoWriter.commit();\n    \n    // verify taxoWriter.getCommitData()\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH\n        + \" not found in taoxWriter.commitData\", taxoWriter.getCommitData().get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"a\"));\n    taxoWriter.addCategory(new FacetLabel(\"b\"));\n    Map<String, String> userCommitData = new HashMap<String, String>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.setCommitData(userCommitData);\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_EPOCH should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"c\")); // add a category so that commit will happen\n    taxoWriter.setCommitData(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }});\n    taxoWriter.commit();\n    \n    // verify taxoWriter.getCommitData()\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH\n        + \" not found in taoxWriter.commitData\", taxoWriter.getCommitData().get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"71e1a70f18d64b93db3ef618e606d6df5062f747","date":1466156390,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","sourceNew":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"a\"));\n    taxoWriter.addCategory(new FacetLabel(\"b\"));\n    Map<String, String> userCommitData = new HashMap<>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.setLiveCommitData(userCommitData.entrySet());\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_EPOCH should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"c\")); // add a category so that commit will happen\n    taxoWriter.setLiveCommitData(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }}.entrySet());\n    taxoWriter.commit();\n    \n    // verify taxoWriter.getCommitData()\n    Map<String,String> data = new HashMap<>();\n    Iterable<Map.Entry<String,String>> iter = taxoWriter.getLiveCommitData();\n    if (iter != null) {\n      for(Map.Entry<String,String> ent : iter) {\n        data.put(ent.getKey(), ent.getValue());\n      }\n    }\n    \n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH\n        + \" not found in taoxWriter.commitData\", data.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"a\"));\n    taxoWriter.addCategory(new FacetLabel(\"b\"));\n    Map<String, String> userCommitData = new HashMap<>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.setCommitData(userCommitData);\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_EPOCH should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"c\")); // add a category so that commit will happen\n    taxoWriter.setCommitData(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }});\n    taxoWriter.commit();\n    \n    // verify taxoWriter.getCommitData()\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH\n        + \" not found in taoxWriter.commitData\", taxoWriter.getCommitData().get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    dir.close();\n  }\n\n","bugFix":["e26e3b5080bfb6fcabdc46d0072efe441de1a21b","b47e1512544568a22b82c96169d466fae8a4b79e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","sourceNew":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"a\"));\n    taxoWriter.addCategory(new FacetLabel(\"b\"));\n    Map<String, String> userCommitData = new HashMap<>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.setLiveCommitData(userCommitData.entrySet());\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_EPOCH should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"c\")); // add a category so that commit will happen\n    taxoWriter.setLiveCommitData(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }}.entrySet());\n    taxoWriter.commit();\n    \n    // verify taxoWriter.getCommitData()\n    Map<String,String> data = new HashMap<>();\n    Iterable<Map.Entry<String,String>> iter = taxoWriter.getLiveCommitData();\n    if (iter != null) {\n      for(Map.Entry<String,String> ent : iter) {\n        data.put(ent.getKey(), ent.getValue());\n      }\n    }\n    \n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH\n        + \" not found in taoxWriter.commitData\", data.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"a\"));\n    taxoWriter.addCategory(new FacetLabel(\"b\"));\n    Map<String, String> userCommitData = new HashMap<>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.setCommitData(userCommitData);\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_EPOCH should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"c\")); // add a category so that commit will happen\n    taxoWriter.setCommitData(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }});\n    taxoWriter.commit();\n    \n    // verify taxoWriter.getCommitData()\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH\n        + \" not found in taoxWriter.commitData\", taxoWriter.getCommitData().get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b229e5831f98e0ed46dd09ba9a498cefa6b8915","date":1531491603,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","sourceNew":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    assertTrue(taxoWriter.getCache() == NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"a\"));\n    taxoWriter.addCategory(new FacetLabel(\"b\"));\n    Map<String, String> userCommitData = new HashMap<>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.setLiveCommitData(userCommitData.entrySet());\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_EPOCH should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"c\")); // add a category so that commit will happen\n    taxoWriter.setLiveCommitData(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }}.entrySet());\n    taxoWriter.commit();\n    \n    // verify taxoWriter.getCommitData()\n    Map<String,String> data = new HashMap<>();\n    Iterable<Map.Entry<String,String>> iter = taxoWriter.getLiveCommitData();\n    if (iter != null) {\n      for(Map.Entry<String,String> ent : iter) {\n        data.put(ent.getKey(), ent.getValue());\n      }\n    }\n    \n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH\n        + \" not found in taoxWriter.commitData\", data.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"a\"));\n    taxoWriter.addCategory(new FacetLabel(\"b\"));\n    Map<String, String> userCommitData = new HashMap<>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.setLiveCommitData(userCommitData.entrySet());\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_EPOCH should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"c\")); // add a category so that commit will happen\n    taxoWriter.setLiveCommitData(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }}.entrySet());\n    taxoWriter.commit();\n    \n    // verify taxoWriter.getCommitData()\n    Map<String,String> data = new HashMap<>();\n    Iterable<Map.Entry<String,String>> iter = taxoWriter.getLiveCommitData();\n    if (iter != null) {\n      for(Map.Entry<String,String> ent : iter) {\n        data.put(ent.getKey(), ent.getValue());\n      }\n    }\n    \n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH\n        + \" not found in taoxWriter.commitData\", data.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","sourceNew":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    assertTrue(taxoWriter.getCache() == NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"a\"));\n    taxoWriter.addCategory(new FacetLabel(\"b\"));\n    Map<String, String> userCommitData = new HashMap<>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.setLiveCommitData(userCommitData.entrySet());\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_EPOCH should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"c\")); // add a category so that commit will happen\n    taxoWriter.setLiveCommitData(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }}.entrySet());\n    taxoWriter.commit();\n    \n    // verify taxoWriter.getCommitData()\n    Map<String,String> data = new HashMap<>();\n    Iterable<Map.Entry<String,String>> iter = taxoWriter.getLiveCommitData();\n    if (iter != null) {\n      for(Map.Entry<String,String> ent : iter) {\n        data.put(ent.getKey(), ent.getValue());\n      }\n    }\n    \n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH\n        + \" not found in taoxWriter.commitData\", data.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"a\"));\n    taxoWriter.addCategory(new FacetLabel(\"b\"));\n    Map<String, String> userCommitData = new HashMap<>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.setLiveCommitData(userCommitData.entrySet());\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_EPOCH should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"c\")); // add a category so that commit will happen\n    taxoWriter.setLiveCommitData(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }}.entrySet());\n    taxoWriter.commit();\n    \n    // verify taxoWriter.getCommitData()\n    Map<String,String> data = new HashMap<>();\n    Iterable<Map.Entry<String,String>> iter = taxoWriter.getLiveCommitData();\n    if (iter != null) {\n      for(Map.Entry<String,String> ent : iter) {\n        data.put(ent.getKey(), ent.getValue());\n      }\n    }\n    \n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH\n        + \" not found in taoxWriter.commitData\", data.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/directory/TestDirectoryTaxonomyWriter#testCommitUserData().mjava","sourceNew":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    assertTrue(taxoWriter.getCache() == NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"a\"));\n    taxoWriter.addCategory(new FacetLabel(\"b\"));\n    Map<String, String> userCommitData = new HashMap<>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.setLiveCommitData(userCommitData.entrySet());\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_EPOCH should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"c\")); // add a category so that commit will happen\n    taxoWriter.setLiveCommitData(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }}.entrySet());\n    taxoWriter.commit();\n    \n    // verify taxoWriter.getCommitData()\n    Map<String,String> data = new HashMap<>();\n    Iterable<Map.Entry<String,String>> iter = taxoWriter.getLiveCommitData();\n    if (iter != null) {\n      for(Map.Entry<String,String> ent : iter) {\n        data.put(ent.getKey(), ent.getValue());\n      }\n    }\n    \n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH\n        + \" not found in taoxWriter.commitData\", data.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testCommitUserData() throws Exception {\n    // Verifies taxonomy commit data\n    Directory dir = newDirectory();\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"a\"));\n    taxoWriter.addCategory(new FacetLabel(\"b\"));\n    Map<String, String> userCommitData = new HashMap<>();\n    userCommitData.put(\"testing\", \"1 2 3\");\n    taxoWriter.setLiveCommitData(userCommitData.entrySet());\n    taxoWriter.close();\n    DirectoryReader r = DirectoryReader.open(dir);\n    assertEquals(\"2 categories plus root should have been committed to the underlying directory\", 3, r.numDocs());\n    Map <String, String> readUserCommitData = r.getIndexCommit().getUserData();\n    assertTrue(\"wrong value extracted from commit data\", \n        \"1 2 3\".equals(readUserCommitData.get(\"testing\")));\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    // open DirTaxoWriter again and commit, INDEX_EPOCH should still exist\n    // in the commit data, otherwise DirTaxoReader.refresh() might not detect\n    // that the taxonomy index has been recreated.\n    taxoWriter = new DirectoryTaxonomyWriter(dir, OpenMode.CREATE_OR_APPEND, NO_OP_CACHE);\n    taxoWriter.addCategory(new FacetLabel(\"c\")); // add a category so that commit will happen\n    taxoWriter.setLiveCommitData(new HashMap<String, String>(){{\n      put(\"just\", \"data\");\n    }}.entrySet());\n    taxoWriter.commit();\n    \n    // verify taxoWriter.getCommitData()\n    Map<String,String> data = new HashMap<>();\n    Iterable<Map.Entry<String,String>> iter = taxoWriter.getLiveCommitData();\n    if (iter != null) {\n      for(Map.Entry<String,String> ent : iter) {\n        data.put(ent.getKey(), ent.getValue());\n      }\n    }\n    \n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH\n        + \" not found in taoxWriter.commitData\", data.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    taxoWriter.close();\n    \n    r = DirectoryReader.open(dir);\n    readUserCommitData = r.getIndexCommit().getUserData();\n    assertNotNull(DirectoryTaxonomyWriter.INDEX_EPOCH + \" not found in commitData\", readUserCommitData.get(DirectoryTaxonomyWriter.INDEX_EPOCH));\n    r.close();\n    \n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"71e1a70f18d64b93db3ef618e606d6df5062f747":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"407687e67faf6e1f02a211ca078d8e3eed631027":["78e3613d9274c0d98ca67d976e415c82e9f9cf46","b47e1512544568a22b82c96169d466fae8a4b79e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","71e1a70f18d64b93db3ef618e606d6df5062f747"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["b47e1512544568a22b82c96169d466fae8a4b79e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["71e1a70f18d64b93db3ef618e606d6df5062f747","6b229e5831f98e0ed46dd09ba9a498cefa6b8915"],"78e3613d9274c0d98ca67d976e415c82e9f9cf46":["b52ea8b7f80d4a0600efc9765dc896387008ebd4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b52ea8b7f80d4a0600efc9765dc896387008ebd4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b47e1512544568a22b82c96169d466fae8a4b79e":["78e3613d9274c0d98ca67d976e415c82e9f9cf46"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["b47e1512544568a22b82c96169d466fae8a4b79e","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"6b229e5831f98e0ed46dd09ba9a498cefa6b8915":["71e1a70f18d64b93db3ef618e606d6df5062f747"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6b229e5831f98e0ed46dd09ba9a498cefa6b8915"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["71e1a70f18d64b93db3ef618e606d6df5062f747","6b229e5831f98e0ed46dd09ba9a498cefa6b8915"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["71e1a70f18d64b93db3ef618e606d6df5062f747","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"71e1a70f18d64b93db3ef618e606d6df5062f747":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","6b229e5831f98e0ed46dd09ba9a498cefa6b8915","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["b52ea8b7f80d4a0600efc9765dc896387008ebd4"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"78e3613d9274c0d98ca67d976e415c82e9f9cf46":["407687e67faf6e1f02a211ca078d8e3eed631027","b47e1512544568a22b82c96169d466fae8a4b79e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b52ea8b7f80d4a0600efc9765dc896387008ebd4":["78e3613d9274c0d98ca67d976e415c82e9f9cf46"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"b47e1512544568a22b82c96169d466fae8a4b79e":["407687e67faf6e1f02a211ca078d8e3eed631027","c190847801a50f4dd20fd639bdc29b54ea3b288b","3cc728b07df73b197e6d940d27f9b08b63918f13"],"6b229e5831f98e0ed46dd09ba9a498cefa6b8915":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}