{"path":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNearPayloadCheckQuery#toString(String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNearPayloadCheckQuery#toString(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanNearPayloadCheckQuery#toString(String).mjava","sourceNew":"  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"spanPayCheck(\");\n    buffer.append(match.toString(field));\n    buffer.append(\", payloadRef: \");\n    for (byte[] bytes : payloadToMatch) {\n      ToStringUtils.byteArray(buffer, bytes);\n      buffer.append(';');\n    }\n    buffer.append(\")\");\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"spanPayCheck(\");\n    buffer.append(match.toString(field));\n    buffer.append(\", payloadRef: \");\n    for (byte[] bytes : payloadToMatch) {\n      ToStringUtils.byteArray(buffer, bytes);\n      buffer.append(';');\n    }\n    buffer.append(\")\");\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d530e71ed32ab23b34ca3fc72b080a554a40404","date":1432026158,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/SpanNearPayloadCheckQuery#toString(String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanNearPayloadCheckQuery#toString(String).mjava","sourceNew":"  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"spanPayCheck(\");\n    buffer.append(match.toString(field));\n    buffer.append(\", payloadRef: \");\n    for (byte[] bytes : payloadToMatch) {\n      ToStringUtils.byteArray(buffer, bytes);\n      buffer.append(';');\n    }\n    buffer.append(\")\");\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString(String field) {\n    StringBuilder buffer = new StringBuilder();\n    buffer.append(\"spanPayCheck(\");\n    buffer.append(match.toString(field));\n    buffer.append(\", payloadRef: \");\n    for (byte[] bytes : payloadToMatch) {\n      ToStringUtils.byteArray(buffer, bytes);\n      buffer.append(';');\n    }\n    buffer.append(\")\");\n    buffer.append(ToStringUtils.boost(getBoost()));\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2d530e71ed32ab23b34ca3fc72b080a554a40404":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2d530e71ed32ab23b34ca3fc72b080a554a40404"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["2d530e71ed32ab23b34ca3fc72b080a554a40404"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2d530e71ed32ab23b34ca3fc72b080a554a40404":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}