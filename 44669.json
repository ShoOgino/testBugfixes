{"path":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyAbstractAnalyticsCloudTest#assertRequestTimeout(ModifiableSolrParams).mjava","commits":[{"id":"ab30b5737e6a5d4ee74fdc889750d18d2a624471","date":1576097297,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyAbstractAnalyticsCloudTest#assertRequestTimeout(ModifiableSolrParams).mjava","pathOld":"/dev/null","sourceNew":"  /** caveat: the given params are modified */\n  protected void assertRequestTimeout(ModifiableSolrParams params)\n      throws IOException, InterruptedException, TimeoutException, SolrServerException {\n    params.set(\"timeAllowed\", 0);\n    cluster.waitForAllNodes(10000);\n    final QueryResponse maybeTimeout = new QueryRequest(params).process(cluster.getSolrClient(), COLLECTIONORALIAS);\n    assertEquals(maybeTimeout.getHeader() + \"\", 0, maybeTimeout.getStatus());\n    final Boolean partial = maybeTimeout.getHeader()\n        .getBooleanArg(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY);\n    assertNotNull(\"No partial results header returned\", partial);\n    assertTrue(\"The request \" + params\n        + \"was not stopped halfway through, the partial results header was false\", partial);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df724d84dab24a0cc54bec95a8680867adc7f171","date":1576156608,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/LegacyAbstractAnalyticsCloudTest#assertRequestTimeout(ModifiableSolrParams).mjava","pathOld":"/dev/null","sourceNew":"  /** caveat: the given params are modified */\n  protected void assertRequestTimeout(ModifiableSolrParams params)\n      throws IOException, InterruptedException, TimeoutException, SolrServerException {\n    params.set(\"timeAllowed\", 0);\n    cluster.waitForAllNodes(10000);\n    final QueryResponse maybeTimeout = new QueryRequest(params).process(cluster.getSolrClient(), COLLECTIONORALIAS);\n    assertEquals(maybeTimeout.getHeader() + \"\", 0, maybeTimeout.getStatus());\n    final Boolean partial = maybeTimeout.getHeader()\n        .getBooleanArg(SolrQueryResponse.RESPONSE_HEADER_PARTIAL_RESULTS_KEY);\n    assertNotNull(\"No partial results header returned\", partial);\n    assertTrue(\"The request \" + params\n        + \"was not stopped halfway through, the partial results header was false\", partial);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df724d84dab24a0cc54bec95a8680867adc7f171":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ab30b5737e6a5d4ee74fdc889750d18d2a624471"],"ab30b5737e6a5d4ee74fdc889750d18d2a624471":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ab30b5737e6a5d4ee74fdc889750d18d2a624471"]},"commit2Childs":{"df724d84dab24a0cc54bec95a8680867adc7f171":[],"ab30b5737e6a5d4ee74fdc889750d18d2a624471":["df724d84dab24a0cc54bec95a8680867adc7f171","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["df724d84dab24a0cc54bec95a8680867adc7f171","ab30b5737e6a5d4ee74fdc889750d18d2a624471"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["df724d84dab24a0cc54bec95a8680867adc7f171","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}