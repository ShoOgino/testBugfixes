{"path":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/dict/TokenInfoFST#cacheRootArcs().mjava","commits":[{"id":"8493925b2e70246f0961df584c01a8c2e61ee52f","date":1523611602,"type":0,"author":"Jim Ferenczi","isMerge":false,"pathNew":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/dict/TokenInfoFST#cacheRootArcs().mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings({\"rawtypes\",\"unchecked\"})\n  private FST.Arc<Long>[] cacheRootArcs() throws IOException {\n    FST.Arc<Long> rootCache[] = new FST.Arc[1+(cacheCeiling-0xAC00)];\n    FST.Arc<Long> firstArc = new FST.Arc<>();\n    fst.getFirstArc(firstArc);\n    FST.Arc<Long> arc = new FST.Arc<>();\n    final FST.BytesReader fstReader = fst.getBytesReader();\n    // TODO: jump to AC00, readNextRealArc to ceiling? (just be careful we don't add bugs)\n    for (int i = 0; i < rootCache.length; i++) {\n      if (fst.findTargetArc(0xAC00 + i, firstArc, arc, fstReader) != null) {\n        rootCache[i] = new FST.Arc<Long>().copyFrom(arc);\n      }\n    }\n    return rootCache;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c6453827f947004a68ad9db7418781e9df2f660","date":1523626811,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/dict/TokenInfoFST#cacheRootArcs().mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings({\"rawtypes\",\"unchecked\"})\n  private FST.Arc<Long>[] cacheRootArcs() throws IOException {\n    FST.Arc<Long> rootCache[] = new FST.Arc[1+(cacheCeiling-0xAC00)];\n    FST.Arc<Long> firstArc = new FST.Arc<>();\n    fst.getFirstArc(firstArc);\n    FST.Arc<Long> arc = new FST.Arc<>();\n    final FST.BytesReader fstReader = fst.getBytesReader();\n    // TODO: jump to AC00, readNextRealArc to ceiling? (just be careful we don't add bugs)\n    for (int i = 0; i < rootCache.length; i++) {\n      if (fst.findTargetArc(0xAC00 + i, firstArc, arc, fstReader) != null) {\n        rootCache[i] = new FST.Arc<Long>().copyFrom(arc);\n      }\n    }\n    return rootCache;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac9f7831922bb899baba6064894c8ebb795cdee2","date":1566842943,"type":3,"author":"Namgyu Kim","isMerge":false,"pathNew":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/dict/TokenInfoFST#cacheRootArcs().mjava","pathOld":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/dict/TokenInfoFST#cacheRootArcs().mjava","sourceNew":"  @SuppressWarnings({\"rawtypes\",\"unchecked\"})\n  private FST.Arc<Long>[] cacheRootArcs() throws IOException {\n    FST.Arc<Long>[] rootCache = new FST.Arc[1+(cacheCeiling-0xAC00)];\n    FST.Arc<Long> firstArc = new FST.Arc<>();\n    fst.getFirstArc(firstArc);\n    FST.Arc<Long> arc = new FST.Arc<>();\n    final FST.BytesReader fstReader = fst.getBytesReader();\n    // TODO: jump to AC00, readNextRealArc to ceiling? (just be careful we don't add bugs)\n    for (int i = 0; i < rootCache.length; i++) {\n      if (fst.findTargetArc(0xAC00 + i, firstArc, arc, fstReader) != null) {\n        rootCache[i] = new FST.Arc<Long>().copyFrom(arc);\n      }\n    }\n    return rootCache;\n  }\n\n","sourceOld":"  @SuppressWarnings({\"rawtypes\",\"unchecked\"})\n  private FST.Arc<Long>[] cacheRootArcs() throws IOException {\n    FST.Arc<Long> rootCache[] = new FST.Arc[1+(cacheCeiling-0xAC00)];\n    FST.Arc<Long> firstArc = new FST.Arc<>();\n    fst.getFirstArc(firstArc);\n    FST.Arc<Long> arc = new FST.Arc<>();\n    final FST.BytesReader fstReader = fst.getBytesReader();\n    // TODO: jump to AC00, readNextRealArc to ceiling? (just be careful we don't add bugs)\n    for (int i = 0; i < rootCache.length; i++) {\n      if (fst.findTargetArc(0xAC00 + i, firstArc, arc, fstReader) != null) {\n        rootCache[i] = new FST.Arc<Long>().copyFrom(arc);\n      }\n    }\n    return rootCache;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8493925b2e70246f0961df584c01a8c2e61ee52f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ac9f7831922bb899baba6064894c8ebb795cdee2":["5c6453827f947004a68ad9db7418781e9df2f660"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ac9f7831922bb899baba6064894c8ebb795cdee2"],"5c6453827f947004a68ad9db7418781e9df2f660":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8493925b2e70246f0961df584c01a8c2e61ee52f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8493925b2e70246f0961df584c01a8c2e61ee52f","5c6453827f947004a68ad9db7418781e9df2f660"],"8493925b2e70246f0961df584c01a8c2e61ee52f":["5c6453827f947004a68ad9db7418781e9df2f660"],"ac9f7831922bb899baba6064894c8ebb795cdee2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5c6453827f947004a68ad9db7418781e9df2f660":["ac9f7831922bb899baba6064894c8ebb795cdee2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}