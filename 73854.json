{"path":"src/java/org/apache/solr/analysis/PatternReplaceCharFilterFactory#init(Map[String,String]).mjava","commits":[{"id":"b03b7626bae3b34032e501e74788f89a2f50058b","date":1260886439,"type":0,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/PatternReplaceCharFilterFactory#init(Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  public void init(Map<String, String> args) {\n    super.init( args );\n    pattern = args.get( \"pattern\" );\n    if( pattern == null )\n      pattern = \"\";\n    replacement = args.get( \"replacement\" );\n    if( replacement == null )\n      replacement = \"\";\n    maxBlockChars = getInt( \"maxBlockChars\", PatternReplaceCharFilter.DEFAULT_MAX_BLOCK_CHARS );\n    blockDelimiters = args.get( \"blockDelimiters\" );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ea7e2236a3fee360ee12269266653689463f709","date":1262997945,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/PatternReplaceCharFilterFactory#init(Map[String,String]).mjava","pathOld":"src/java/org/apache/solr/analysis/PatternReplaceCharFilterFactory#init(Map[String,String]).mjava","sourceNew":"  public void init(Map<String, String> args) {\n    super.init( args );\n    try {\n      p = Pattern.compile(args.get(\"pattern\"));\n    } catch (PatternSyntaxException e) {\n      throw new RuntimeException\n        (\"Configuration Error: 'pattern' can not be parsed in \" +\n         this.getClass().getName(), e);\n    }\n    replacement = args.get( \"replacement\" );\n    if( replacement == null )\n      replacement = \"\";\n    maxBlockChars = getInt( \"maxBlockChars\", PatternReplaceCharFilter.DEFAULT_MAX_BLOCK_CHARS );\n    blockDelimiters = args.get( \"blockDelimiters\" );\n  }\n\n","sourceOld":"  public void init(Map<String, String> args) {\n    super.init( args );\n    pattern = args.get( \"pattern\" );\n    if( pattern == null )\n      pattern = \"\";\n    replacement = args.get( \"replacement\" );\n    if( replacement == null )\n      replacement = \"\";\n    maxBlockChars = getInt( \"maxBlockChars\", PatternReplaceCharFilter.DEFAULT_MAX_BLOCK_CHARS );\n    blockDelimiters = args.get( \"blockDelimiters\" );\n  }\n\n","bugFix":null,"bugIntro":["0552957099a974d3ed0dfc06d8d282b483e1273f","0552957099a974d3ed0dfc06d8d282b483e1273f","0552957099a974d3ed0dfc06d8d282b483e1273f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/PatternReplaceCharFilterFactory#init(Map[String,String]).mjava","pathOld":"src/java/org/apache/solr/analysis/PatternReplaceCharFilterFactory#init(Map[String,String]).mjava","sourceNew":"  public void init(Map<String, String> args) {\n    super.init( args );\n    try {\n      p = Pattern.compile(args.get(\"pattern\"));\n    } catch (PatternSyntaxException e) {\n      throw new RuntimeException\n        (\"Configuration Error: 'pattern' can not be parsed in \" +\n         this.getClass().getName(), e);\n    }\n    replacement = args.get( \"replacement\" );\n    if( replacement == null )\n      replacement = \"\";\n    maxBlockChars = getInt( \"maxBlockChars\", PatternReplaceCharFilter.DEFAULT_MAX_BLOCK_CHARS );\n    blockDelimiters = args.get( \"blockDelimiters\" );\n  }\n\n","sourceOld":"  public void init(Map<String, String> args) {\n    super.init( args );\n    try {\n      p = Pattern.compile(args.get(\"pattern\"));\n    } catch (PatternSyntaxException e) {\n      throw new RuntimeException\n        (\"Configuration Error: 'pattern' can not be parsed in \" +\n         this.getClass().getName(), e);\n    }\n    replacement = args.get( \"replacement\" );\n    if( replacement == null )\n      replacement = \"\";\n    maxBlockChars = getInt( \"maxBlockChars\", PatternReplaceCharFilter.DEFAULT_MAX_BLOCK_CHARS );\n    blockDelimiters = args.get( \"blockDelimiters\" );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6ea7e2236a3fee360ee12269266653689463f709":["b03b7626bae3b34032e501e74788f89a2f50058b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["6ea7e2236a3fee360ee12269266653689463f709"],"b03b7626bae3b34032e501e74788f89a2f50058b":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6ea7e2236a3fee360ee12269266653689463f709":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["b03b7626bae3b34032e501e74788f89a2f50058b"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"b03b7626bae3b34032e501e74788f89a2f50058b":["6ea7e2236a3fee360ee12269266653689463f709"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}