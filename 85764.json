{"path":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestWholeBreakIterator#assertSameBreaks(String,int,int,int,BreakIterator,BreakIterator).mjava","commits":[{"id":"edfd79d46de511439d709677aed587a2c59cd06f","date":1363917879,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestWholeBreakIterator#assertSameBreaks(String,int,int,int,BreakIterator,BreakIterator).mjava","pathOld":"/dev/null","sourceNew":"  public void assertSameBreaks(String text, int offset, int length, int current, BreakIterator expected, BreakIterator actual) {\n    assertSameBreaks(new StringCharacterIterator(text, offset, offset+length, current), \n                     new StringCharacterIterator(text, offset, offset+length, current), \n                     expected, \n                     actual);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee117f8569fdc90c1335087fe14e0b691f879289","date":1432757377,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestWholeBreakIterator#assertSameBreaks(String,int,int,int,BreakIterator,BreakIterator).mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestWholeBreakIterator#assertSameBreaks(String,int,int,int,BreakIterator,BreakIterator).mjava","sourceNew":"  public static void assertSameBreaks(String text, int offset, int length, int current, BreakIterator expected, BreakIterator actual) {\n    assertSameBreaks(new StringCharacterIterator(text, offset, offset+length, current), \n                     new StringCharacterIterator(text, offset, offset+length, current), \n                     expected, \n                     actual);\n  }\n\n","sourceOld":"  public void assertSameBreaks(String text, int offset, int length, int current, BreakIterator expected, BreakIterator actual) {\n    assertSameBreaks(new StringCharacterIterator(text, offset, offset+length, current), \n                     new StringCharacterIterator(text, offset, offset+length, current), \n                     expected, \n                     actual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2507f0948c6e908135f1ea7f8e1f9af031b65483","date":1495573983,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestWholeBreakIterator#assertSameBreaks(String,int,int,int,BreakIterator,BreakIterator).mjava","sourceNew":null,"sourceOld":"  public static void assertSameBreaks(String text, int offset, int length, int current, BreakIterator expected, BreakIterator actual) {\n    assertSameBreaks(new StringCharacterIterator(text, offset, offset+length, current), \n                     new StringCharacterIterator(text, offset, offset+length, current), \n                     expected, \n                     actual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":5,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/uhighlight/TestWholeBreakIterator#assertSameBreaks(String,int,int,int,BreakIterator,BreakIterator).mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/postingshighlight/TestWholeBreakIterator#assertSameBreaks(String,int,int,int,BreakIterator,BreakIterator).mjava","sourceNew":"  public static void assertSameBreaks(String text, int offset, int length, int current, BreakIterator expected, BreakIterator actual) {\n    assertSameBreaks(new StringCharacterIterator(text, offset, offset+length, current), \n                     new StringCharacterIterator(text, offset, offset+length, current), \n                     expected, \n                     actual);\n  }\n\n","sourceOld":"  public static void assertSameBreaks(String text, int offset, int length, int current, BreakIterator expected, BreakIterator actual) {\n    assertSameBreaks(new StringCharacterIterator(text, offset, offset+length, current), \n                     new StringCharacterIterator(text, offset, offset+length, current), \n                     expected, \n                     actual);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"edfd79d46de511439d709677aed587a2c59cd06f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["ee117f8569fdc90c1335087fe14e0b691f879289","2507f0948c6e908135f1ea7f8e1f9af031b65483"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2507f0948c6e908135f1ea7f8e1f9af031b65483":["ee117f8569fdc90c1335087fe14e0b691f879289"],"ee117f8569fdc90c1335087fe14e0b691f879289":["edfd79d46de511439d709677aed587a2c59cd06f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2507f0948c6e908135f1ea7f8e1f9af031b65483"]},"commit2Childs":{"edfd79d46de511439d709677aed587a2c59cd06f":["ee117f8569fdc90c1335087fe14e0b691f879289"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["edfd79d46de511439d709677aed587a2c59cd06f"],"2507f0948c6e908135f1ea7f8e1f9af031b65483":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ee117f8569fdc90c1335087fe14e0b691f879289":["e9017cf144952056066919f1ebc7897ff9bd71b1","2507f0948c6e908135f1ea7f8e1f9af031b65483"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}