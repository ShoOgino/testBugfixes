{"path":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer#testJa2().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer#testJa2().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer#testJa2().mjava","sourceNew":"  public void testJa2() throws IOException {\n    String str = \"\\u4e00 \\u4e8c\\u4e09\\u56db \\u4e94\\u516d\\u4e03\\u516b\\u4e5d \\u5341\";\n       \n    TestToken[] out_tokens = { \n      newToken(\"\\u4e00\", 0, 1, CJKTokenizer.DOUBLE_TOKEN_TYPE), \n      newToken(\"\\u4e8c\\u4e09\", 2, 4, CJKTokenizer.DOUBLE_TOKEN_TYPE),\n      newToken(\"\\u4e09\\u56db\", 3, 5, CJKTokenizer.DOUBLE_TOKEN_TYPE),\n      newToken(\"\\u4e94\\u516d\", 6, 8, CJKTokenizer.DOUBLE_TOKEN_TYPE), \n      newToken(\"\\u516d\\u4e03\", 7, 9, CJKTokenizer.DOUBLE_TOKEN_TYPE),\n      newToken(\"\\u4e03\\u516b\", 8, 10, CJKTokenizer.DOUBLE_TOKEN_TYPE),\n      newToken(\"\\u516b\\u4e5d\", 9, 11, CJKTokenizer.DOUBLE_TOKEN_TYPE),\n      newToken(\"\\u5341\", 12,13, CJKTokenizer.DOUBLE_TOKEN_TYPE)\n    };\n    checkCJKToken(str, out_tokens);\n  }\n\n","sourceOld":"  public void testJa2() throws IOException {\n    String str = \"\\u4e00 \\u4e8c\\u4e09\\u56db \\u4e94\\u516d\\u4e03\\u516b\\u4e5d \\u5341\";\n       \n    TestToken[] out_tokens = { \n      newToken(\"\\u4e00\", 0, 1, CJKTokenizer.DOUBLE_TOKEN_TYPE), \n      newToken(\"\\u4e8c\\u4e09\", 2, 4, CJKTokenizer.DOUBLE_TOKEN_TYPE),\n      newToken(\"\\u4e09\\u56db\", 3, 5, CJKTokenizer.DOUBLE_TOKEN_TYPE),\n      newToken(\"\\u4e94\\u516d\", 6, 8, CJKTokenizer.DOUBLE_TOKEN_TYPE), \n      newToken(\"\\u516d\\u4e03\", 7, 9, CJKTokenizer.DOUBLE_TOKEN_TYPE),\n      newToken(\"\\u4e03\\u516b\", 8, 10, CJKTokenizer.DOUBLE_TOKEN_TYPE),\n      newToken(\"\\u516b\\u4e5d\", 9, 11, CJKTokenizer.DOUBLE_TOKEN_TYPE),\n      newToken(\"\\u5341\", 12,13, CJKTokenizer.DOUBLE_TOKEN_TYPE)\n    };\n    checkCJKToken(str, out_tokens);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer#testJa2().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/cjk/TestCJKTokenizer#testJa2().mjava","sourceNew":"  public void testJa2() throws IOException {\n    String str = \"\\u4e00 \\u4e8c\\u4e09\\u56db \\u4e94\\u516d\\u4e03\\u516b\\u4e5d \\u5341\";\n       \n    TestToken[] out_tokens = { \n      newToken(\"\\u4e00\", 0, 1, CJKTokenizer.DOUBLE_TOKEN_TYPE), \n      newToken(\"\\u4e8c\\u4e09\", 2, 4, CJKTokenizer.DOUBLE_TOKEN_TYPE),\n      newToken(\"\\u4e09\\u56db\", 3, 5, CJKTokenizer.DOUBLE_TOKEN_TYPE),\n      newToken(\"\\u4e94\\u516d\", 6, 8, CJKTokenizer.DOUBLE_TOKEN_TYPE), \n      newToken(\"\\u516d\\u4e03\", 7, 9, CJKTokenizer.DOUBLE_TOKEN_TYPE),\n      newToken(\"\\u4e03\\u516b\", 8, 10, CJKTokenizer.DOUBLE_TOKEN_TYPE),\n      newToken(\"\\u516b\\u4e5d\", 9, 11, CJKTokenizer.DOUBLE_TOKEN_TYPE),\n      newToken(\"\\u5341\", 12,13, CJKTokenizer.DOUBLE_TOKEN_TYPE)\n    };\n    checkCJKToken(str, out_tokens);\n  }\n\n","sourceOld":"  public void testJa2() throws IOException {\n    String str = \"\\u4e00 \\u4e8c\\u4e09\\u56db \\u4e94\\u516d\\u4e03\\u516b\\u4e5d \\u5341\";\n       \n    TestToken[] out_tokens = { \n      newToken(\"\\u4e00\", 0, 1, CJKTokenizer.DOUBLE_TOKEN_TYPE), \n      newToken(\"\\u4e8c\\u4e09\", 2, 4, CJKTokenizer.DOUBLE_TOKEN_TYPE),\n      newToken(\"\\u4e09\\u56db\", 3, 5, CJKTokenizer.DOUBLE_TOKEN_TYPE),\n      newToken(\"\\u4e94\\u516d\", 6, 8, CJKTokenizer.DOUBLE_TOKEN_TYPE), \n      newToken(\"\\u516d\\u4e03\", 7, 9, CJKTokenizer.DOUBLE_TOKEN_TYPE),\n      newToken(\"\\u4e03\\u516b\", 8, 10, CJKTokenizer.DOUBLE_TOKEN_TYPE),\n      newToken(\"\\u516b\\u4e5d\", 9, 11, CJKTokenizer.DOUBLE_TOKEN_TYPE),\n      newToken(\"\\u5341\", 12,13, CJKTokenizer.DOUBLE_TOKEN_TYPE)\n    };\n    checkCJKToken(str, out_tokens);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}