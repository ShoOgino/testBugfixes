{"path":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryIntersects(int,int,int,int,int,int).mjava","commits":[{"id":"97f74f84954e9fefbac4cb38b9bf339e1757600d","date":1533750605,"type":0,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryIntersects(int,int,int,int,int,int).mjava","pathOld":"/dev/null","sourceNew":"  /** returns true if the query intersects the provided triangle (in encoded space) */\n  private boolean queryIntersects(int ax, int ay, int bx, int by, int cx, int cy) {\n    // check each edge of the triangle against the query\n    if (edgeIntersectsQuery(ax, ay, bx, by) ||\n        edgeIntersectsQuery(bx, by, cx, cy) ||\n        edgeIntersectsQuery(cx, cy, ax, ay)) {\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9feee35369998c08f5168e0808e67e09857d5bac","date":1544618795,"type":5,"author":"iverase","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/geo/Rectangle2D#queryIntersects(int,int,int,int,int,int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShapeBoundingBoxQuery#queryIntersects(int,int,int,int,int,int).mjava","sourceNew":"  /** returns true if the query intersects the provided triangle (in encoded space) */\n  private boolean queryIntersects(int ax, int ay, int bx, int by, int cx, int cy) {\n    // check each edge of the triangle against the query\n    if (edgeIntersectsQuery(ax, ay, bx, by) ||\n        edgeIntersectsQuery(bx, by, cx, cy) ||\n        edgeIntersectsQuery(cx, cy, ax, ay)) {\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  /** returns true if the query intersects the provided triangle (in encoded space) */\n  private boolean queryIntersects(int ax, int ay, int bx, int by, int cx, int cy) {\n    // check each edge of the triangle against the query\n    if (edgeIntersectsQuery(ax, ay, bx, by) ||\n        edgeIntersectsQuery(bx, by, cx, cy) ||\n        edgeIntersectsQuery(cx, cy, ax, ay)) {\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9feee35369998c08f5168e0808e67e09857d5bac":["97f74f84954e9fefbac4cb38b9bf339e1757600d"],"97f74f84954e9fefbac4cb38b9bf339e1757600d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9feee35369998c08f5168e0808e67e09857d5bac"]},"commit2Childs":{"9feee35369998c08f5168e0808e67e09857d5bac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"97f74f84954e9fefbac4cb38b9bf339e1757600d":["9feee35369998c08f5168e0808e67e09857d5bac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["97f74f84954e9fefbac4cb38b9bf339e1757600d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}