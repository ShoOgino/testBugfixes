{"path":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#init(Map[String,Object]).mjava","commits":[{"id":"ccfb40e1834cac1619556a0becf198bb7bad5d63","date":1438887805,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#init(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    zkAuthentication = getAuthenticationProvider(pluginConfig);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3635776bfb39e459843cfe0a78c7f3f88602f8ea","date":1450428038,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    Object o = pluginConfig.get(BLOCK_UNKNOWN);\n    if (o != null) {\n      try {\n        blockUnknown = Boolean.parseBoolean(o.toString());\n      } catch (Exception e) {\n        log.error(e.getMessage());\n      }\n    }\n    zkAuthentication = getAuthenticationProvider(pluginConfig);\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    zkAuthentication = getAuthenticationProvider(pluginConfig);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"170ef9c82c0d27d4151feff316ba63fbedd91bbf","date":1477436680,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    Object o = pluginConfig.get(BLOCK_UNKNOWN);\n    if (o != null) {\n      try {\n        blockUnknown = Boolean.parseBoolean(o.toString());\n      } catch (Exception e) {\n        log.error(e.getMessage());\n      }\n    }\n    authenticationProvider = getAuthenticationProvider(pluginConfig);\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    Object o = pluginConfig.get(BLOCK_UNKNOWN);\n    if (o != null) {\n      try {\n        blockUnknown = Boolean.parseBoolean(o.toString());\n      } catch (Exception e) {\n        log.error(e.getMessage());\n      }\n    }\n    zkAuthentication = getAuthenticationProvider(pluginConfig);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b363b110592b02d7f488aff0dbe40a53d3ce81df","date":1477469211,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    Object o = pluginConfig.get(BLOCK_UNKNOWN);\n    if (o != null) {\n      try {\n        blockUnknown = Boolean.parseBoolean(o.toString());\n      } catch (Exception e) {\n        log.error(e.getMessage());\n      }\n    }\n    authenticationProvider = getAuthenticationProvider(pluginConfig);\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    Object o = pluginConfig.get(BLOCK_UNKNOWN);\n    if (o != null) {\n      try {\n        blockUnknown = Boolean.parseBoolean(o.toString());\n      } catch (Exception e) {\n        log.error(e.getMessage());\n      }\n    }\n    zkAuthentication = getAuthenticationProvider(pluginConfig);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    Object o = pluginConfig.get(BLOCK_UNKNOWN);\n    if (o != null) {\n      try {\n        blockUnknown = Boolean.parseBoolean(o.toString());\n      } catch (Exception e) {\n        log.error(e.getMessage());\n      }\n    }\n    authenticationProvider = getAuthenticationProvider(pluginConfig);\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    Object o = pluginConfig.get(BLOCK_UNKNOWN);\n    if (o != null) {\n      try {\n        blockUnknown = Boolean.parseBoolean(o.toString());\n      } catch (Exception e) {\n        log.error(e.getMessage());\n      }\n    }\n    zkAuthentication = getAuthenticationProvider(pluginConfig);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e5b14c1a3febf27d88acf3083b7551876933aa5","date":1544607443,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    Object o = pluginConfig.get(PROPERTY_BLOCK_UNKNOWN);\n    if (o != null) {\n      try {\n        blockUnknown = Boolean.parseBoolean(o.toString());\n      } catch (Exception e) {\n        log.error(e.getMessage());\n      }\n    }\n    authenticationProvider = getAuthenticationProvider(pluginConfig);\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    Object o = pluginConfig.get(BLOCK_UNKNOWN);\n    if (o != null) {\n      try {\n        blockUnknown = Boolean.parseBoolean(o.toString());\n      } catch (Exception e) {\n        log.error(e.getMessage());\n      }\n    }\n    authenticationProvider = getAuthenticationProvider(pluginConfig);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4bb519c79b76e52145e37b6681a7012525ed5f4b","date":1544694716,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#init(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/BasicAuthPlugin#init(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    Object o = pluginConfig.get(PROPERTY_BLOCK_UNKNOWN);\n    if (o != null) {\n      try {\n        blockUnknown = Boolean.parseBoolean(o.toString());\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid value for parameter \" + PROPERTY_BLOCK_UNKNOWN);\n      }\n    }\n    o = pluginConfig.get(FORWARD_CREDENTIALS);\n    if (o != null) {\n      try {\n        forwardCredentials = Boolean.parseBoolean(o.toString());\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.BAD_REQUEST, \"Invalid value for parameter \" + FORWARD_CREDENTIALS);\n      }\n    }\n    authenticationProvider = getAuthenticationProvider(pluginConfig);\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, Object> pluginConfig) {\n    Object o = pluginConfig.get(PROPERTY_BLOCK_UNKNOWN);\n    if (o != null) {\n      try {\n        blockUnknown = Boolean.parseBoolean(o.toString());\n      } catch (Exception e) {\n        log.error(e.getMessage());\n      }\n    }\n    authenticationProvider = getAuthenticationProvider(pluginConfig);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4bb519c79b76e52145e37b6681a7012525ed5f4b":["4e5b14c1a3febf27d88acf3083b7551876933aa5"],"170ef9c82c0d27d4151feff316ba63fbedd91bbf":["3635776bfb39e459843cfe0a78c7f3f88602f8ea"],"3635776bfb39e459843cfe0a78c7f3f88602f8ea":["ccfb40e1834cac1619556a0becf198bb7bad5d63"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["3635776bfb39e459843cfe0a78c7f3f88602f8ea","b363b110592b02d7f488aff0dbe40a53d3ce81df"],"4e5b14c1a3febf27d88acf3083b7551876933aa5":["b363b110592b02d7f488aff0dbe40a53d3ce81df"],"b363b110592b02d7f488aff0dbe40a53d3ce81df":["3635776bfb39e459843cfe0a78c7f3f88602f8ea","170ef9c82c0d27d4151feff316ba63fbedd91bbf"],"ccfb40e1834cac1619556a0becf198bb7bad5d63":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4bb519c79b76e52145e37b6681a7012525ed5f4b"]},"commit2Childs":{"4bb519c79b76e52145e37b6681a7012525ed5f4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"170ef9c82c0d27d4151feff316ba63fbedd91bbf":["b363b110592b02d7f488aff0dbe40a53d3ce81df"],"3635776bfb39e459843cfe0a78c7f3f88602f8ea":["170ef9c82c0d27d4151feff316ba63fbedd91bbf","80d0e6d59ae23f4a6f30eaf40bfb40742300287f","b363b110592b02d7f488aff0dbe40a53d3ce81df"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ccfb40e1834cac1619556a0becf198bb7bad5d63"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"4e5b14c1a3febf27d88acf3083b7551876933aa5":["4bb519c79b76e52145e37b6681a7012525ed5f4b"],"b363b110592b02d7f488aff0dbe40a53d3ce81df":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","4e5b14c1a3febf27d88acf3083b7551876933aa5"],"ccfb40e1834cac1619556a0becf198bb7bad5d63":["3635776bfb39e459843cfe0a78c7f3f88602f8ea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}