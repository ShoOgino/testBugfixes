{"path":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#initStreamSlices(int,int).mjava","commits":[{"id":"d3cc3fa1ecad75b99ec55169e44628808f9866ad","date":1592311545,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#initStreamSlices(int,int).mjava","pathOld":"/dev/null","sourceNew":"  private void initStreamSlices(int termID, int docID) throws IOException {\n    // Init stream slices\n    // TODO: figure out why this is 2*streamCount here. streamCount should be enough?\n    if ((2*streamCount) + intPool.intUpto > IntBlockPool.INT_BLOCK_SIZE) {\n      // can we fit all the streams in the current buffer?\n      intPool.nextBuffer();\n    }\n\n    if (ByteBlockPool.BYTE_BLOCK_SIZE - bytePool.byteUpto < (2*streamCount) * ByteBlockPool.FIRST_LEVEL_SIZE) {\n      // can we fit at least one byte per stream in the current buffer, if not allocate a new one\n      bytePool.nextBuffer();\n    }\n\n    termStreamAddressBuffer = intPool.buffer;\n    streamAddressOffset = intPool.intUpto;\n    intPool.intUpto += streamCount; // advance the pool to reserve the N streams for this term\n\n    postingsArray.addressOffset[termID] = streamAddressOffset + intPool.intOffset;\n\n    for (int i = 0; i < streamCount; i++) {\n      // initialize each stream with a slice we start with ByteBlockPool.FIRST_LEVEL_SIZE)\n      // and grow as we need more space. see ByteBlockPool.LEVEL_SIZE_ARRAY\n      final int upto = bytePool.newSlice(ByteBlockPool.FIRST_LEVEL_SIZE);\n      termStreamAddressBuffer[streamAddressOffset + i] = upto + bytePool.byteOffset;\n    }\n    postingsArray.byteStarts[termID] = termStreamAddressBuffer[streamAddressOffset];\n    newTerm(termID, docID);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d3cc3fa1ecad75b99ec55169e44628808f9866ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d3cc3fa1ecad75b99ec55169e44628808f9866ad"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3cc3fa1ecad75b99ec55169e44628808f9866ad"],"d3cc3fa1ecad75b99ec55169e44628808f9866ad":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}