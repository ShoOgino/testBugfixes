{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#noDupDirs(Directory...).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#noDupDirs(Directory...).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#noDupDirs(Directory...).mjava","sourceNew":"  private void noDupDirs(Directory... dirs) {\n    HashSet<Directory> dups = new HashSet<Directory>();\n    for(int i=0;i<dirs.length;i++) {\n      if (dups.contains(dirs[i]))\n        throw new IllegalArgumentException(\"Directory \" + dirs[i] + \" appears more than once\");\n      if (dirs[i] == directory)\n        throw new IllegalArgumentException(\"Cannot add directory to itself\");\n      dups.add(dirs[i]);\n    }\n  }\n\n","sourceOld":"  private void noDupDirs(Directory... dirs) {\n    HashSet<Directory> dups = new HashSet<Directory>();\n    for(int i=0;i<dirs.length;i++) {\n      if (dups.contains(dirs[i]))\n        throw new IllegalArgumentException(\"Directory \" + dirs[i] + \" appears more than once\");\n      if (dirs[i] == directory)\n        throw new IllegalArgumentException(\"Cannot add directory to itself\");\n      dups.add(dirs[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#noDupDirs(Directory...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#noDupDirs(Directory...).mjava","sourceNew":"  private void noDupDirs(Directory... dirs) {\n    HashSet<Directory> dups = new HashSet<>();\n    for(int i=0;i<dirs.length;i++) {\n      if (dups.contains(dirs[i]))\n        throw new IllegalArgumentException(\"Directory \" + dirs[i] + \" appears more than once\");\n      if (dirs[i] == directory)\n        throw new IllegalArgumentException(\"Cannot add directory to itself\");\n      dups.add(dirs[i]);\n    }\n  }\n\n","sourceOld":"  private void noDupDirs(Directory... dirs) {\n    HashSet<Directory> dups = new HashSet<Directory>();\n    for(int i=0;i<dirs.length;i++) {\n      if (dups.contains(dirs[i]))\n        throw new IllegalArgumentException(\"Directory \" + dirs[i] + \" appears more than once\");\n      if (dirs[i] == directory)\n        throw new IllegalArgumentException(\"Cannot add directory to itself\");\n      dups.add(dirs[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"618635065f043788c9e034f96ca5cd5cea1b4592","date":1433442044,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#noDupDirs(Directory...).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#noDupDirs(Directory...).mjava","sourceNew":"  private void noDupDirs(Directory... dirs) {\n    HashSet<Directory> dups = new HashSet<>();\n    for(int i=0;i<dirs.length;i++) {\n      if (dups.contains(dirs[i]))\n        throw new IllegalArgumentException(\"Directory \" + dirs[i] + \" appears more than once\");\n      if (dirs[i] == directoryOrig)\n        throw new IllegalArgumentException(\"Cannot add directory to itself\");\n      dups.add(dirs[i]);\n    }\n  }\n\n","sourceOld":"  private void noDupDirs(Directory... dirs) {\n    HashSet<Directory> dups = new HashSet<>();\n    for(int i=0;i<dirs.length;i++) {\n      if (dups.contains(dirs[i]))\n        throw new IllegalArgumentException(\"Directory \" + dirs[i] + \" appears more than once\");\n      if (dirs[i] == directory)\n        throw new IllegalArgumentException(\"Cannot add directory to itself\");\n      dups.add(dirs[i]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"618635065f043788c9e034f96ca5cd5cea1b4592":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["618635065f043788c9e034f96ca5cd5cea1b4592"]},"commit2Childs":{"618635065f043788c9e034f96ca5cd5cea1b4592":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["618635065f043788c9e034f96ca5cd5cea1b4592"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}