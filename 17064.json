{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BaseStoredFieldsFormatTestCase#testIndexedBit().mjava","commits":[{"id":"70b55953b6a72596cb534ead735a8b849a473cac","date":1363634568,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseStoredFieldsFormatTestCase#testIndexedBit().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFieldsReader#testIndexedBit().mjava","sourceNew":"  public void testIndexedBit() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    doc.add(new Field(\"field\", \"value\", onlyStored));\n    doc.add(new StringField(\"field2\", \"value\", Field.Store.YES));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    assertFalse(r.document(0).getField(\"field\").fieldType().indexed());\n    assertTrue(r.document(0).getField(\"field2\").fieldType().indexed());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testIndexedBit() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    doc.add(new Field(\"field\", \"value\", onlyStored));\n    doc.add(new StringField(\"field2\", \"value\", Field.Store.YES));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    assertFalse(r.document(0).getField(\"field\").fieldType().indexed());\n    assertTrue(r.document(0).getField(\"field2\").fieldType().indexed());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseStoredFieldsFormatTestCase#testIndexedBit().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseStoredFieldsFormatTestCase#testIndexedBit().mjava","sourceNew":"  public void testIndexedBit() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    doc.add(new Field(\"field\", \"value\", onlyStored));\n    doc.add(new StringField(\"field2\", \"value\", Field.Store.YES));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.shutdown();\n    assertFalse(r.document(0).getField(\"field\").fieldType().indexed());\n    assertTrue(r.document(0).getField(\"field2\").fieldType().indexed());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testIndexedBit() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    doc.add(new Field(\"field\", \"value\", onlyStored));\n    doc.add(new StringField(\"field2\", \"value\", Field.Store.YES));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    assertFalse(r.document(0).getField(\"field\").fieldType().indexed());\n    assertTrue(r.document(0).getField(\"field2\").fieldType().indexed());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseStoredFieldsFormatTestCase#testIndexedBit().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseStoredFieldsFormatTestCase#testIndexedBit().mjava","sourceNew":"  public void testIndexedBit() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    doc.add(new Field(\"field\", \"value\", onlyStored));\n    doc.add(new StringField(\"field2\", \"value\", Field.Store.YES));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    assertFalse(r.document(0).getField(\"field\").fieldType().indexed());\n    assertTrue(r.document(0).getField(\"field2\").fieldType().indexed());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testIndexedBit() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    doc.add(new Field(\"field\", \"value\", onlyStored));\n    doc.add(new StringField(\"field2\", \"value\", Field.Store.YES));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.shutdown();\n    assertFalse(r.document(0).getField(\"field\").fieldType().indexed());\n    assertTrue(r.document(0).getField(\"field2\").fieldType().indexed());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3184874f7f3aca850248483485b4995343066875","date":1413876758,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseStoredFieldsFormatTestCase#testIndexedBit().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseStoredFieldsFormatTestCase#testIndexedBit().mjava","sourceNew":"  public void testIndexedBit() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    doc.add(new Field(\"field\", \"value\", onlyStored));\n    doc.add(new StringField(\"field2\", \"value\", Field.Store.YES));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    assertNull(r.document(0).getField(\"field\").fieldType().indexOptions());\n    assertNotNull(r.document(0).getField(\"field2\").fieldType().indexOptions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testIndexedBit() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    doc.add(new Field(\"field\", \"value\", onlyStored));\n    doc.add(new StringField(\"field2\", \"value\", Field.Store.YES));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    assertFalse(r.document(0).getField(\"field\").fieldType().indexed());\n    assertTrue(r.document(0).getField(\"field2\").fieldType().indexed());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseStoredFieldsFormatTestCase#testIndexedBit().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseStoredFieldsFormatTestCase#testIndexedBit().mjava","sourceNew":"  public void testIndexedBit() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    doc.add(new Field(\"field\", \"value\", onlyStored));\n    doc.add(new StringField(\"field2\", \"value\", Field.Store.YES));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    assertNull(r.document(0).getField(\"field\").fieldType().indexOptions());\n    assertNotNull(r.document(0).getField(\"field2\").fieldType().indexOptions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testIndexedBit() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    doc.add(new Field(\"field\", \"value\", onlyStored));\n    doc.add(new StringField(\"field2\", \"value\", Field.Store.YES));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    assertFalse(r.document(0).getField(\"field\").fieldType().indexed());\n    assertTrue(r.document(0).getField(\"field2\").fieldType().indexed());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2bb2842e561df4e8e9ad89010605fc86ac265465","date":1414768208,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseStoredFieldsFormatTestCase#testIndexedBit().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseStoredFieldsFormatTestCase#testIndexedBit().mjava","sourceNew":"  public void testIndexedBit() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    doc.add(new Field(\"field\", \"value\", onlyStored));\n    doc.add(new StringField(\"field2\", \"value\", Field.Store.YES));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    assertEquals(IndexOptions.NO, r.document(0).getField(\"field\").fieldType().indexOptions());\n    assertNotNull(r.document(0).getField(\"field2\").fieldType().indexOptions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testIndexedBit() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    doc.add(new Field(\"field\", \"value\", onlyStored));\n    doc.add(new StringField(\"field2\", \"value\", Field.Store.YES));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    assertNull(r.document(0).getField(\"field\").fieldType().indexOptions());\n    assertNotNull(r.document(0).getField(\"field2\").fieldType().indexOptions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f95ce1375367b92d411a06175eab3915fe93c6bc","date":1414788502,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseStoredFieldsFormatTestCase#testIndexedBit().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseStoredFieldsFormatTestCase#testIndexedBit().mjava","sourceNew":"  public void testIndexedBit() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    doc.add(new Field(\"field\", \"value\", onlyStored));\n    doc.add(new StringField(\"field2\", \"value\", Field.Store.YES));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    assertEquals(IndexOptions.NONE, r.document(0).getField(\"field\").fieldType().indexOptions());\n    assertNotNull(r.document(0).getField(\"field2\").fieldType().indexOptions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testIndexedBit() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    doc.add(new Field(\"field\", \"value\", onlyStored));\n    doc.add(new StringField(\"field2\", \"value\", Field.Store.YES));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    assertEquals(IndexOptions.NO, r.document(0).getField(\"field\").fieldType().indexOptions());\n    assertNotNull(r.document(0).getField(\"field2\").fieldType().indexOptions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dbc046116d49cd3d0c50f7169cabaa295bc23a4a","date":1552989114,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseStoredFieldsFormatTestCase#testIndexedBit().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseStoredFieldsFormatTestCase#testIndexedBit().mjava","sourceNew":"  public void testIndexedBit() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    doc.add(new Field(\"field\", \"value\", onlyStored));\n    doc.add(new StringField(\"field2\", \"value\", Field.Store.YES));\n    w.addDocument(doc);\n    IndexReader r = maybeWrapWithMergingReader(w.getReader());\n    w.close();\n    assertEquals(IndexOptions.NONE, r.document(0).getField(\"field\").fieldType().indexOptions());\n    assertNotNull(r.document(0).getField(\"field2\").fieldType().indexOptions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testIndexedBit() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    Document doc = new Document();\n    FieldType onlyStored = new FieldType();\n    onlyStored.setStored(true);\n    doc.add(new Field(\"field\", \"value\", onlyStored));\n    doc.add(new StringField(\"field2\", \"value\", Field.Store.YES));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    w.close();\n    assertEquals(IndexOptions.NONE, r.document(0).getField(\"field\").fieldType().indexOptions());\n    assertNotNull(r.document(0).getField(\"field2\").fieldType().indexOptions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["d0ef034a4f10871667ae75181537775ddcf8ade4","3184874f7f3aca850248483485b4995343066875"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dbc046116d49cd3d0c50f7169cabaa295bc23a4a":["f95ce1375367b92d411a06175eab3915fe93c6bc"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"70b55953b6a72596cb534ead735a8b849a473cac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2bb2842e561df4e8e9ad89010605fc86ac265465":["3184874f7f3aca850248483485b4995343066875"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["70b55953b6a72596cb534ead735a8b849a473cac"],"f95ce1375367b92d411a06175eab3915fe93c6bc":["2bb2842e561df4e8e9ad89010605fc86ac265465"],"3184874f7f3aca850248483485b4995343066875":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dbc046116d49cd3d0c50f7169cabaa295bc23a4a"]},"commit2Childs":{"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70b55953b6a72596cb534ead735a8b849a473cac"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","3184874f7f3aca850248483485b4995343066875"],"dbc046116d49cd3d0c50f7169cabaa295bc23a4a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"70b55953b6a72596cb534ead735a8b849a473cac":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"2bb2842e561df4e8e9ad89010605fc86ac265465":["f95ce1375367b92d411a06175eab3915fe93c6bc"],"3184874f7f3aca850248483485b4995343066875":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","2bb2842e561df4e8e9ad89010605fc86ac265465"],"f95ce1375367b92d411a06175eab3915fe93c6bc":["dbc046116d49cd3d0c50f7169cabaa295bc23a4a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}