{"path":"lucene/core/src/java/org/apache/lucene/document/LatLonPointInPolygonQuery#LatLonPointInPolygonQuery(String,Polygon[]).mjava","commits":[{"id":"88b0212386fe531136816706dc37dc49b9dbf7dc","date":1532560226,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/LatLonPointInPolygonQuery#LatLonPointInPolygonQuery(String,Polygon[]).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointInPolygonQuery#LatLonPointInPolygonQuery(String,Polygon[]).mjava","sourceNew":"  LatLonPointInPolygonQuery(String field, Polygon[] polygons) {\n    if (field == null) {\n      throw new IllegalArgumentException(\"field must not be null\");\n    }\n    if (polygons == null) {\n      throw new IllegalArgumentException(\"polygons must not be null\");\n    }\n    if (polygons.length == 0) {\n      throw new IllegalArgumentException(\"polygons must not be empty\");\n    }\n    for (int i = 0; i < polygons.length; i++) {\n      if (polygons[i] == null) {\n        throw new IllegalArgumentException(\"polygon[\" + i + \"] must not be null\");\n      }\n    }\n    this.field = field;\n    this.polygons = polygons.clone();\n    // TODO: we could also compute the maximal inner bounding box, to make relations faster to compute?\n  }\n\n","sourceOld":"  LatLonPointInPolygonQuery(String field, Polygon[] polygons) {\n    if (field == null) {\n      throw new IllegalArgumentException(\"field must not be null\");\n    }\n    if (polygons == null) {\n      throw new IllegalArgumentException(\"polygons must not be null\");\n    }\n    if (polygons.length == 0) {\n      throw new IllegalArgumentException(\"polygons must not be empty\");\n    }\n    for (int i = 0; i < polygons.length; i++) {\n      if (polygons[i] == null) {\n        throw new IllegalArgumentException(\"polygon[\" + i + \"] must not be null\");\n      }\n    }\n    this.field = field;\n    this.polygons = polygons.clone();\n    // TODO: we could also compute the maximal inner bounding box, to make relations faster to compute?\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"88b0212386fe531136816706dc37dc49b9dbf7dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["88b0212386fe531136816706dc37dc49b9dbf7dc"]},"commit2Childs":{"88b0212386fe531136816706dc37dc49b9dbf7dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["88b0212386fe531136816706dc37dc49b9dbf7dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}