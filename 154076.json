{"path":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/BytesRefFieldSource#getValues(Map,AtomicReaderContext).mjava","commits":[{"id":"61e20f33ce8ff701576366fdb03955eded5f209b","date":1327852832,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/BytesRefFieldSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/BytesRefFieldSource#getValues(Map,IndexReader.AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    return new StringIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, IndexReader.AtomicReaderContext readerContext) throws IOException {\n    return new StringIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/BytesRefFieldSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/BytesRefFieldSource#getValues(Map,IndexReader.AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    return new StringIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, IndexReader.AtomicReaderContext readerContext) throws IOException {\n    return new StringIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b5937bd5a9c4cfdd2dbea83e1247d2f471cb3c8","date":1333047008,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/BytesRefFieldSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/BytesRefFieldSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    return new DocTermsIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    return new StringIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/BytesRefFieldSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/BytesRefFieldSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    return new DocTermsIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    return new DocTermsIndexDocValues(this, readerContext, field) {\n\n      @Override\n      protected String toTerm(String readableValue) {\n        return readableValue;\n      }\n\n      @Override\n      public Object objectVal(int doc) {\n        return strVal(doc);\n      }\n\n      @Override\n      public String toString(int doc) {\n        return description() + '=' + strVal(doc);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["9b5937bd5a9c4cfdd2dbea83e1247d2f471cb3c8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"61e20f33ce8ff701576366fdb03955eded5f209b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9b5937bd5a9c4cfdd2dbea83e1247d2f471cb3c8":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","61e20f33ce8ff701576366fdb03955eded5f209b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["61e20f33ce8ff701576366fdb03955eded5f209b","5cab9a86bd67202d20b6adc463008c8e982b070a"],"61e20f33ce8ff701576366fdb03955eded5f209b":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"9b5937bd5a9c4cfdd2dbea83e1247d2f471cb3c8":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["9b5937bd5a9c4cfdd2dbea83e1247d2f471cb3c8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}