{"path":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(String).mjava","commits":[{"id":"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0","date":1096997448,"type":1,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(String).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(Document,String).mjava","sourceNew":"  private final void writeNorms(String segment) throws IOException { \n    for(int n = 0; n < fieldInfos.size(); n++){\n      FieldInfo fi = fieldInfos.fieldInfo(n);\n      if(fi.isIndexed){\n        float norm = fieldBoosts[n] * similarity.lengthNorm(fi.name, fieldLengths[n]);\n        IndexOutput norms = directory.createOutput(segment + \".f\" + n);\n        try {\n          norms.writeByte(Similarity.encodeNorm(norm));\n        } finally {\n          norms.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private final void writeNorms(Document doc, String segment) throws IOException { \n    for(int n = 0; n < fieldInfos.size(); n++){\n      FieldInfo fi = fieldInfos.fieldInfo(n);\n      if(fi.isIndexed){\n        float norm = fieldBoosts[n] * similarity.lengthNorm(fi.name, fieldLengths[n]);\n        IndexOutput norms = directory.createOutput(segment + \".f\" + n);\n        try {\n          norms.writeByte(Similarity.encodeNorm(norm));\n        } finally {\n          norms.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"950f3c7592cb559e2534e5089c78833250e156a3","date":1130557968,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(String).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(String).mjava","sourceNew":"  private final void writeNorms(String segment) throws IOException { \n    for(int n = 0; n < fieldInfos.size(); n++){\n      FieldInfo fi = fieldInfos.fieldInfo(n);\n      if(fi.isIndexed && !fi.omitNorms){\n        float norm = fieldBoosts[n] * similarity.lengthNorm(fi.name, fieldLengths[n]);\n        IndexOutput norms = directory.createOutput(segment + \".f\" + n);\n        try {\n          norms.writeByte(Similarity.encodeNorm(norm));\n        } finally {\n          norms.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private final void writeNorms(String segment) throws IOException { \n    for(int n = 0; n < fieldInfos.size(); n++){\n      FieldInfo fi = fieldInfos.fieldInfo(n);\n      if(fi.isIndexed){\n        float norm = fieldBoosts[n] * similarity.lengthNorm(fi.name, fieldLengths[n]);\n        IndexOutput norms = directory.createOutput(segment + \".f\" + n);\n        try {\n          norms.writeByte(Similarity.encodeNorm(norm));\n        } finally {\n          norms.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b20bed3506d9b128ea30a7a62e2a8b1d7df697b0","date":1185569419,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(String).mjava","sourceNew":null,"sourceOld":"  private final void writeNorms(String segment) throws IOException { \n    for(int n = 0; n < fieldInfos.size(); n++){\n      FieldInfo fi = fieldInfos.fieldInfo(n);\n      if(fi.isIndexed && !fi.omitNorms){\n        float norm = fieldBoosts[n] * similarity.lengthNorm(fi.name, fieldLengths[n]);\n        IndexOutput norms = directory.createOutput(segment + \".f\" + n);\n        try {\n          norms.writeByte(Similarity.encodeNorm(norm));\n        } finally {\n          norms.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"950f3c7592cb559e2534e5089c78833250e156a3":["6177f0f28ace66d1538b1e6ac5f1773e5449a0b0"],"b20bed3506d9b128ea30a7a62e2a8b1d7df697b0":["950f3c7592cb559e2534e5089c78833250e156a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b20bed3506d9b128ea30a7a62e2a8b1d7df697b0"]},"commit2Childs":{"950f3c7592cb559e2534e5089c78833250e156a3":["b20bed3506d9b128ea30a7a62e2a8b1d7df697b0"],"b20bed3506d9b128ea30a7a62e2a8b1d7df697b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6177f0f28ace66d1538b1e6ac5f1773e5449a0b0"],"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0":["950f3c7592cb559e2534e5089c78833250e156a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}