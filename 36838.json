{"path":"lucene/src/java/org/apache/lucene/index/FieldsReader#canReadRawDocs().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsReader#canReadRawDocs().mjava","pathOld":"src/java/org/apache/lucene/index/FieldsReader#canReadRawDocs().mjava","sourceNew":"  boolean canReadRawDocs() {\n    // Disable reading raw docs in 2.x format, because of the removal of compressed\n    // fields in 3.0. We don't want rawDocs() to decode field bits to figure out\n    // if a field was compressed, hence we enforce ordinary (non-raw) stored field merges\n    // for <3.0 indexes.\n    return format >= FieldsWriter.FORMAT_LUCENE_3_0_NO_COMPRESSED_FIELDS;\n  }\n\n","sourceOld":"  boolean canReadRawDocs() {\n    // Disable reading raw docs in 2.x format, because of the removal of compressed\n    // fields in 3.0. We don't want rawDocs() to decode field bits to figure out\n    // if a field was compressed, hence we enforce ordinary (non-raw) stored field merges\n    // for <3.0 indexes.\n    return format >= FieldsWriter.FORMAT_LUCENE_3_0_NO_COMPRESSED_FIELDS;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0cd8367c3d48e4b63dee1895a261d4986c716bbb","date":1279637747,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsReader#canReadRawDocs().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsReader#canReadRawDocs().mjava","sourceNew":"  boolean canReadRawDocs() {\n    // Since we currently only support >3.0 format anymore, always return true!\n    // I leave this method in because it may help for later format changes.\n    return true;\n  }\n\n","sourceOld":"  boolean canReadRawDocs() {\n    // Disable reading raw docs in 2.x format, because of the removal of compressed\n    // fields in 3.0. We don't want rawDocs() to decode field bits to figure out\n    // if a field was compressed, hence we enforce ordinary (non-raw) stored field merges\n    // for <3.0 indexes.\n    return format >= FieldsWriter.FORMAT_LUCENE_3_0_NO_COMPRESSED_FIELDS;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsReader#canReadRawDocs().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsReader#canReadRawDocs().mjava","sourceNew":"  boolean canReadRawDocs() {\n    // Since we currently only support >3.0 format anymore, always return true!\n    // I leave this method in because it may help for later format changes.\n    return true;\n  }\n\n","sourceOld":"  boolean canReadRawDocs() {\n    // Disable reading raw docs in 2.x format, because of the removal of compressed\n    // fields in 3.0. We don't want rawDocs() to decode field bits to figure out\n    // if a field was compressed, hence we enforce ordinary (non-raw) stored field merges\n    // for <3.0 indexes.\n    return format >= FieldsWriter.FORMAT_LUCENE_3_0_NO_COMPRESSED_FIELDS;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c740bdcaf9781b9822969a3305e51cfa4eaaf673","date":1280775080,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsReader#canReadRawDocs().mjava","sourceNew":null,"sourceOld":"  boolean canReadRawDocs() {\n    // Since we currently only support >3.0 format anymore, always return true!\n    // I leave this method in because it may help for later format changes.\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90dd9e0118d85e8451e26b0e3c18172a42d673ce","date":1280782731,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldsReader#canReadRawDocs().mjava","pathOld":"/dev/null","sourceNew":"  boolean canReadRawDocs() {\n    // Since we currently only support >3.0 format anymore, always return true!\n    // I leave this method in because it may help for later format changes.\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5972dc9caad764a4e6e2e25f3e1a8de2489a8487","date":1280787041,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsReader#canReadRawDocs().mjava","sourceNew":null,"sourceOld":"  boolean canReadRawDocs() {\n    // Since we currently only support >3.0 format anymore, always return true!\n    // I leave this method in because it may help for later format changes.\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/FieldsReader#canReadRawDocs().mjava","sourceNew":null,"sourceOld":"  boolean canReadRawDocs() {\n    // Since we currently only support >3.0 format anymore, always return true!\n    // I leave this method in because it may help for later format changes.\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90dd9e0118d85e8451e26b0e3c18172a42d673ce":["c740bdcaf9781b9822969a3305e51cfa4eaaf673"],"c740bdcaf9781b9822969a3305e51cfa4eaaf673":["0cd8367c3d48e4b63dee1895a261d4986c716bbb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5972dc9caad764a4e6e2e25f3e1a8de2489a8487":["90dd9e0118d85e8451e26b0e3c18172a42d673ce"],"0cd8367c3d48e4b63dee1895a261d4986c716bbb":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5f4e87790277826a2aea119328600dfb07761f32":["9454a6510e2db155fb01faa5c049b06ece95fab9","0cd8367c3d48e4b63dee1895a261d4986c716bbb"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","5972dc9caad764a4e6e2e25f3e1a8de2489a8487"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5972dc9caad764a4e6e2e25f3e1a8de2489a8487"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90dd9e0118d85e8451e26b0e3c18172a42d673ce":["5972dc9caad764a4e6e2e25f3e1a8de2489a8487"],"c740bdcaf9781b9822969a3305e51cfa4eaaf673":["90dd9e0118d85e8451e26b0e3c18172a42d673ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0cd8367c3d48e4b63dee1895a261d4986c716bbb":["c740bdcaf9781b9822969a3305e51cfa4eaaf673","5f4e87790277826a2aea119328600dfb07761f32"],"5972dc9caad764a4e6e2e25f3e1a8de2489a8487":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0cd8367c3d48e4b63dee1895a261d4986c716bbb","5f4e87790277826a2aea119328600dfb07761f32"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}