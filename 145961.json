{"path":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestDeprecatedPayloadScoreQuery#testSpanContainingQuery().mjava","commits":[{"id":"1abe64b887edbb37f6261531cf8a62d88d63fdcb","date":1510236307,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestDeprecatedPayloadScoreQuery#testSpanContainingQuery().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSpanContainingQuery() throws Exception {\n\n    // twenty WITHIN ((one OR hundred) NEAR two)~2\n    SpanContainingQuery q = new SpanContainingQuery(\n        new SpanNearQuery(new SpanQuery[]{\n            new SpanOrQuery(new SpanTermQuery(new Term(\"field\", \"one\")), new SpanTermQuery(new Term(\"field\", \"hundred\"))),\n            new SpanTermQuery(new Term(\"field\", \"two\"))\n        }, 2, true),\n        new SpanTermQuery(new Term(\"field\", \"twenty\"))\n    );\n\n    checkQuery(q, new AveragePayloadFunction(), new int[] { 222, 122 }, new float[]{ 4.0f, 3.666666f });\n    checkQuery(q, new MaxPayloadFunction(), new int[]{ 122, 222 }, new float[]{ 4.0f, 4.0f });\n    checkQuery(q, new MinPayloadFunction(), new int[]{ 222, 122 }, new float[]{ 4.0f, 2.0f });\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d9b8e4987e93a0ea580f91defdc31ce5dd572e2","date":1510236334,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/payloads/TestDeprecatedPayloadScoreQuery#testSpanContainingQuery().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testSpanContainingQuery() throws Exception {\n\n    // twenty WITHIN ((one OR hundred) NEAR two)~2\n    SpanContainingQuery q = new SpanContainingQuery(\n        new SpanNearQuery(new SpanQuery[]{\n            new SpanOrQuery(new SpanTermQuery(new Term(\"field\", \"one\")), new SpanTermQuery(new Term(\"field\", \"hundred\"))),\n            new SpanTermQuery(new Term(\"field\", \"two\"))\n        }, 2, true),\n        new SpanTermQuery(new Term(\"field\", \"twenty\"))\n    );\n\n    checkQuery(q, new AveragePayloadFunction(), new int[] { 222, 122 }, new float[]{ 4.0f, 3.666666f });\n    checkQuery(q, new MaxPayloadFunction(), new int[]{ 122, 222 }, new float[]{ 4.0f, 4.0f });\n    checkQuery(q, new MinPayloadFunction(), new int[]{ 222, 122 }, new float[]{ 4.0f, 2.0f });\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1abe64b887edbb37f6261531cf8a62d88d63fdcb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4d9b8e4987e93a0ea580f91defdc31ce5dd572e2":["1abe64b887edbb37f6261531cf8a62d88d63fdcb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d9b8e4987e93a0ea580f91defdc31ce5dd572e2"]},"commit2Childs":{"1abe64b887edbb37f6261531cf8a62d88d63fdcb":["4d9b8e4987e93a0ea580f91defdc31ce5dd572e2"],"4d9b8e4987e93a0ea580f91defdc31ce5dd572e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1abe64b887edbb37f6261531cf8a62d88d63fdcb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}