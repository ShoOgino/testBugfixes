{"path":"modules/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#performSearch(FacetIndexingParams,TaxonomyReader,IndexReader,IndexSearcher).mjava","commits":[{"id":"89f15687f60bd49cd3d9de427e85c17fd9397d61","date":1309381327,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#performSearch(FacetIndexingParams,TaxonomyReader,IndexReader,IndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"  private FacetsCollector performSearch(FacetIndexingParams iParams,\n                                        TaxonomyReader tr, IndexReader ir,\n                                        IndexSearcher searcher) throws IOException {\n    // step 1: collect matching documents into a collector\n    Query q = new MatchAllDocsQuery();\n    TopScoreDocCollector topDocsCollector = TopScoreDocCollector.create(10,\n        true);\n\n    // Faceted search parameters indicate which facets are we interested in\n    FacetSearchParams facetSearchParams = new FacetSearchParams(iParams);\n\n    facetSearchParams.addFacetRequest(new CountFacetRequest(\n        new CategoryPath(\"Band\"), 10));\n    CountFacetRequest bandDepth = new CountFacetRequest(new CategoryPath(\n    \"Band\"), 10);\n    bandDepth.setDepth(2);\n    facetSearchParams.addFacetRequest(bandDepth);\n    facetSearchParams.addFacetRequest(new CountFacetRequest(\n        new CategoryPath(\"Author\"), 10));\n    facetSearchParams.addFacetRequest(new CountFacetRequest(\n        new CategoryPath(\"Band\", \"Rock & Pop\"), 10));\n\n    // perform documents search and facets accumulation\n    FacetsCollector facetsCollector = new FacetsCollector(facetSearchParams, ir, tr);\n    searcher.search(q, MultiCollector.wrap(topDocsCollector, facetsCollector));\n    return facetsCollector;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#performSearch(FacetIndexingParams,TaxonomyReader,IndexReader,IndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"  private FacetsCollector performSearch(FacetIndexingParams iParams,\n                                        TaxonomyReader tr, IndexReader ir,\n                                        IndexSearcher searcher) throws IOException {\n    // step 1: collect matching documents into a collector\n    Query q = new MatchAllDocsQuery();\n    TopScoreDocCollector topDocsCollector = TopScoreDocCollector.create(10,\n        true);\n\n    // Faceted search parameters indicate which facets are we interested in\n    FacetSearchParams facetSearchParams = new FacetSearchParams(iParams);\n\n    facetSearchParams.addFacetRequest(new CountFacetRequest(\n        new CategoryPath(\"Band\"), 10));\n    CountFacetRequest bandDepth = new CountFacetRequest(new CategoryPath(\n    \"Band\"), 10);\n    bandDepth.setDepth(2);\n    facetSearchParams.addFacetRequest(bandDepth);\n    facetSearchParams.addFacetRequest(new CountFacetRequest(\n        new CategoryPath(\"Author\"), 10));\n    facetSearchParams.addFacetRequest(new CountFacetRequest(\n        new CategoryPath(\"Band\", \"Rock & Pop\"), 10));\n\n    // perform documents search and facets accumulation\n    FacetsCollector facetsCollector = new FacetsCollector(facetSearchParams, ir, tr);\n    searcher.search(q, MultiCollector.wrap(topDocsCollector, facetsCollector));\n    return facetsCollector;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#performSearch(FacetIndexingParams,TaxonomyReader,IndexReader,IndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"  private FacetsCollector performSearch(FacetIndexingParams iParams,\n                                        TaxonomyReader tr, IndexReader ir,\n                                        IndexSearcher searcher) throws IOException {\n    // step 1: collect matching documents into a collector\n    Query q = new MatchAllDocsQuery();\n    TopScoreDocCollector topDocsCollector = TopScoreDocCollector.create(10,\n        true);\n\n    // Faceted search parameters indicate which facets are we interested in\n    FacetSearchParams facetSearchParams = new FacetSearchParams(iParams);\n\n    facetSearchParams.addFacetRequest(new CountFacetRequest(\n        new CategoryPath(\"Band\"), 10));\n    CountFacetRequest bandDepth = new CountFacetRequest(new CategoryPath(\n    \"Band\"), 10);\n    bandDepth.setDepth(2);\n    facetSearchParams.addFacetRequest(bandDepth);\n    facetSearchParams.addFacetRequest(new CountFacetRequest(\n        new CategoryPath(\"Author\"), 10));\n    facetSearchParams.addFacetRequest(new CountFacetRequest(\n        new CategoryPath(\"Band\", \"Rock & Pop\"), 10));\n\n    // perform documents search and facets accumulation\n    FacetsCollector facetsCollector = new FacetsCollector(facetSearchParams, ir, tr);\n    searcher.search(q, MultiCollector.wrap(topDocsCollector, facetsCollector));\n    return facetsCollector;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#performSearch(FacetIndexingParams,TaxonomyReader,IndexReader,IndexSearcher).mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/search/TestMultipleCategoryLists#performSearch(FacetIndexingParams,TaxonomyReader,IndexReader,IndexSearcher).mjava","sourceNew":"  private FacetsCollector performSearch(FacetIndexingParams iParams,\n                                        TaxonomyReader tr, IndexReader ir,\n                                        IndexSearcher searcher) throws IOException {\n    // step 1: collect matching documents into a collector\n    Query q = new MatchAllDocsQuery();\n    TopScoreDocCollector topDocsCollector = TopScoreDocCollector.create(10,\n        true);\n\n    // Faceted search parameters indicate which facets are we interested in\n    FacetSearchParams facetSearchParams = new FacetSearchParams(iParams);\n\n    facetSearchParams.addFacetRequest(new CountFacetRequest(\n        new CategoryPath(\"Band\"), 10));\n    CountFacetRequest bandDepth = new CountFacetRequest(new CategoryPath(\n    \"Band\"), 10);\n    bandDepth.setDepth(2);\n    facetSearchParams.addFacetRequest(bandDepth);\n    facetSearchParams.addFacetRequest(new CountFacetRequest(\n        new CategoryPath(\"Author\"), 10));\n    facetSearchParams.addFacetRequest(new CountFacetRequest(\n        new CategoryPath(\"Band\", \"Rock & Pop\"), 10));\n\n    // perform documents search and facets accumulation\n    FacetsCollector facetsCollector = new FacetsCollector(facetSearchParams, ir, tr);\n    searcher.search(q, MultiCollector.wrap(topDocsCollector, facetsCollector));\n    return facetsCollector;\n  }\n\n","sourceOld":"  private FacetsCollector performSearch(FacetIndexingParams iParams,\n                                        TaxonomyReader tr, IndexReader ir,\n                                        IndexSearcher searcher) throws IOException {\n    // step 1: collect matching documents into a collector\n    Query q = new MatchAllDocsQuery();\n    TopScoreDocCollector topDocsCollector = TopScoreDocCollector.create(10,\n        true);\n\n    // Faceted search parameters indicate which facets are we interested in\n    FacetSearchParams facetSearchParams = new FacetSearchParams(iParams);\n\n    facetSearchParams.addFacetRequest(new CountFacetRequest(\n        new CategoryPath(\"Band\"), 10));\n    CountFacetRequest bandDepth = new CountFacetRequest(new CategoryPath(\n    \"Band\"), 10);\n    bandDepth.setDepth(2);\n    facetSearchParams.addFacetRequest(bandDepth);\n    facetSearchParams.addFacetRequest(new CountFacetRequest(\n        new CategoryPath(\"Author\"), 10));\n    facetSearchParams.addFacetRequest(new CountFacetRequest(\n        new CategoryPath(\"Band\", \"Rock & Pop\"), 10));\n\n    // perform documents search and facets accumulation\n    FacetsCollector facetsCollector = new FacetsCollector(facetSearchParams, ir, tr);\n    searcher.search(q, MultiCollector.wrap(topDocsCollector, facetsCollector));\n    return facetsCollector;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["89f15687f60bd49cd3d9de427e85c17fd9397d61"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","89f15687f60bd49cd3d9de427e85c17fd9397d61"],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","89f15687f60bd49cd3d9de427e85c17fd9397d61"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d083e83f225b11e5fdd900e83d26ddb385b6955c","89f15687f60bd49cd3d9de427e85c17fd9397d61","817d8435e9135b756f08ce6710ab0baac51bdf88"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"89f15687f60bd49cd3d9de427e85c17fd9397d61":["b89678825b68eccaf09e6ab71675fc0b0af1e099","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}