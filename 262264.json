{"path":"solr/core/src/java/org/apache/solr/update/processor/CdcrUpdateProcessor#versionDelete(DeleteUpdateCommand).mjava","commits":[{"id":"86290366cefc1b9d4eced13b430858c4a4c0421d","date":1432321109,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/CdcrUpdateProcessor#versionDelete(DeleteUpdateCommand).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected boolean versionDelete(DeleteUpdateCommand cmd) throws IOException {\n    /*\n    temporarily set the PEER_SYNC flag so that DistributedUpdateProcessor.deleteAdd doesn't execute leader logic\n    but the else part of that if. That way version remains preserved.\n\n    we cannot set the flag for the whole processDelete method because DistributedUpdateProcessor.setupRequest() would set\n    isLeader to false which wouldn't work\n     */\n    if (cmd.getReq().getParams().get(CDCR_UPDATE) != null) {\n      cmd.setFlags(cmd.getFlags() | UpdateCommand.PEER_SYNC); // we need super.versionAdd() to set leaderLogic to false\n    }\n\n    boolean result = super.versionDelete(cmd);\n\n    // unset the flag to avoid unintended consequences down the chain\n    if (cmd.getReq().getParams().get(CDCR_UPDATE) != null) {\n      cmd.setFlags(cmd.getFlags() & ~UpdateCommand.PEER_SYNC);\n    }\n\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1","date":1598647393,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/processor/CdcrUpdateProcessor#versionDelete(DeleteUpdateCommand).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected boolean versionDelete(DeleteUpdateCommand cmd) throws IOException {\n    /*\n    temporarily set the PEER_SYNC flag so that DistributedUpdateProcessor.deleteAdd doesn't execute leader logic\n    but the else part of that if. That way version remains preserved.\n\n    we cannot set the flag for the whole processDelete method because DistributedUpdateProcessor.setupRequest() would set\n    isLeader to false which wouldn't work\n     */\n    if (cmd.getReq().getParams().get(CDCR_UPDATE) != null) {\n      cmd.setFlags(cmd.getFlags() | UpdateCommand.PEER_SYNC); // we need super.versionAdd() to set leaderLogic to false\n    }\n\n    boolean result = super.versionDelete(cmd);\n\n    // unset the flag to avoid unintended consequences down the chain\n    if (cmd.getReq().getParams().get(CDCR_UPDATE) != null) {\n      cmd.setFlags(cmd.getFlags() & ~UpdateCommand.PEER_SYNC);\n    }\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"86290366cefc1b9d4eced13b430858c4a4c0421d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"]},"commit2Childs":{"86290366cefc1b9d4eced13b430858c4a4c0421d":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}