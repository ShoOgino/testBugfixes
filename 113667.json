{"path":"sandbox/contributions/highlighter/src/java/org/apache/lucene/search/highlight/GradientFormatter#GradientFormatter(int,String,String,String,String).mjava","commits":[{"id":"d5a0b529d2a1f873f1f11db833a891b53909a7bc","date":1104492147,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"sandbox/contributions/highlighter/src/java/org/apache/lucene/search/highlight/GradientFormatter#GradientFormatter(int,String,String,String,String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Sets the color range for the IDF scores\n     * \n     * @param maxScore\n     *            The score (and above) displayed as maxColor\n     * @param minForegroundColor\n     *            The hex color used for representing IDF scores of zero eg\n     *            #FFFFFF (white) or null if no foreground color required\n     * @param maxForegroundColor\n     *            The largest hex color used for representing IDF scores eg\n     *            #000000 (black) or null if no foreground color required\n     * @param minBackgroundColor\n     *            The hex color used for representing IDF scores of zero eg\n     *            #FFFFFF (white) or null if no background color required\n     * @param maxBackgroundColor\n     *            The largest hex color used for representing IDF scores eg\n     *            #000000 (black) or null if no background color required\n     */\n    public GradientFormatter(int maxScore, String minForegroundColor,\n            String maxForegroundColor, String minBackgroundColor,\n            String maxBackgroundColor)\n    {\n        highlightForeground = (minForegroundColor != null)\n                && (maxForegroundColor != null);\n        if (highlightForeground)\n        {\n            if (minForegroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minForegroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            if (maxForegroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minForegroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            fgRMin = hexToInt(minForegroundColor.substring(1, 3));\n            fgGMin = hexToInt(minForegroundColor.substring(3, 5));\n            fgBMin = hexToInt(minForegroundColor.substring(5, 7));\n\n            fgRMax = hexToInt(maxForegroundColor.substring(1, 3));\n            fgGMax = hexToInt(maxForegroundColor.substring(3, 5));\n            fgBMax = hexToInt(maxForegroundColor.substring(5, 7));\n        }\n\n        highlightBackground = (minBackgroundColor != null)\n                && (maxBackgroundColor != null);\n        if (highlightBackground)\n        {\n            if (minBackgroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minBackgroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            if (maxBackgroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minBackgroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            bgRMin = hexToInt(minBackgroundColor.substring(1, 3));\n            bgGMin = hexToInt(minBackgroundColor.substring(3, 5));\n            bgBMin = hexToInt(minBackgroundColor.substring(5, 7));\n\n            bgRMax = hexToInt(maxBackgroundColor.substring(1, 3));\n            bgGMax = hexToInt(maxBackgroundColor.substring(3, 5));\n            bgBMax = hexToInt(maxBackgroundColor.substring(5, 7));\n        }\n        //        this.corpusReader = corpusReader;\n        this.maxScore = maxScore;\n        //        totalNumDocs = corpusReader.numDocs();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"35a81445b1abe3f60806325dd678af931b62c2fc","date":1105132629,"type":5,"author":"Mark Harwood","isMerge":false,"pathNew":"sandbox/contributions/highlighter/src/java/org/apache/lucene/search/highlight/GradientFormatter#GradientFormatter(float,String,String,String,String).mjava","pathOld":"sandbox/contributions/highlighter/src/java/org/apache/lucene/search/highlight/GradientFormatter#GradientFormatter(int,String,String,String,String).mjava","sourceNew":"    /**\n     * Sets the color range for the IDF scores\n     * \n     * @param maxScore\n     *            The score (and above) displayed as maxColor (See QueryScorer.getMaxWeight \n     * \t\t\t  which can be used to callibrate scoring scale)\n     * @param minForegroundColor\n     *            The hex color used for representing IDF scores of zero eg\n     *            #FFFFFF (white) or null if no foreground color required\n     * @param maxForegroundColor\n     *            The largest hex color used for representing IDF scores eg\n     *            #000000 (black) or null if no foreground color required\n     * @param minBackgroundColor\n     *            The hex color used for representing IDF scores of zero eg\n     *            #FFFFFF (white) or null if no background color required\n     * @param maxBackgroundColor\n     *            The largest hex color used for representing IDF scores eg\n     *            #000000 (black) or null if no background color required\n     */\n    public GradientFormatter(float maxScore, String minForegroundColor,\n            String maxForegroundColor, String minBackgroundColor,\n            String maxBackgroundColor)\n    {\n        highlightForeground = (minForegroundColor != null)\n                && (maxForegroundColor != null);\n        if (highlightForeground)\n        {\n            if (minForegroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minForegroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            if (maxForegroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minForegroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            fgRMin = hexToInt(minForegroundColor.substring(1, 3));\n            fgGMin = hexToInt(minForegroundColor.substring(3, 5));\n            fgBMin = hexToInt(minForegroundColor.substring(5, 7));\n\n            fgRMax = hexToInt(maxForegroundColor.substring(1, 3));\n            fgGMax = hexToInt(maxForegroundColor.substring(3, 5));\n            fgBMax = hexToInt(maxForegroundColor.substring(5, 7));\n        }\n\n        highlightBackground = (minBackgroundColor != null)\n                && (maxBackgroundColor != null);\n        if (highlightBackground)\n        {\n            if (minBackgroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minBackgroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            if (maxBackgroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minBackgroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            bgRMin = hexToInt(minBackgroundColor.substring(1, 3));\n            bgGMin = hexToInt(minBackgroundColor.substring(3, 5));\n            bgBMin = hexToInt(minBackgroundColor.substring(5, 7));\n\n            bgRMax = hexToInt(maxBackgroundColor.substring(1, 3));\n            bgGMax = hexToInt(maxBackgroundColor.substring(3, 5));\n            bgBMax = hexToInt(maxBackgroundColor.substring(5, 7));\n        }\n        //        this.corpusReader = corpusReader;\n        this.maxScore = maxScore;\n        //        totalNumDocs = corpusReader.numDocs();\n    }\n\n","sourceOld":"    /**\n     * Sets the color range for the IDF scores\n     * \n     * @param maxScore\n     *            The score (and above) displayed as maxColor\n     * @param minForegroundColor\n     *            The hex color used for representing IDF scores of zero eg\n     *            #FFFFFF (white) or null if no foreground color required\n     * @param maxForegroundColor\n     *            The largest hex color used for representing IDF scores eg\n     *            #000000 (black) or null if no foreground color required\n     * @param minBackgroundColor\n     *            The hex color used for representing IDF scores of zero eg\n     *            #FFFFFF (white) or null if no background color required\n     * @param maxBackgroundColor\n     *            The largest hex color used for representing IDF scores eg\n     *            #000000 (black) or null if no background color required\n     */\n    public GradientFormatter(int maxScore, String minForegroundColor,\n            String maxForegroundColor, String minBackgroundColor,\n            String maxBackgroundColor)\n    {\n        highlightForeground = (minForegroundColor != null)\n                && (maxForegroundColor != null);\n        if (highlightForeground)\n        {\n            if (minForegroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minForegroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            if (maxForegroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minForegroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            fgRMin = hexToInt(minForegroundColor.substring(1, 3));\n            fgGMin = hexToInt(minForegroundColor.substring(3, 5));\n            fgBMin = hexToInt(minForegroundColor.substring(5, 7));\n\n            fgRMax = hexToInt(maxForegroundColor.substring(1, 3));\n            fgGMax = hexToInt(maxForegroundColor.substring(3, 5));\n            fgBMax = hexToInt(maxForegroundColor.substring(5, 7));\n        }\n\n        highlightBackground = (minBackgroundColor != null)\n                && (maxBackgroundColor != null);\n        if (highlightBackground)\n        {\n            if (minBackgroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minBackgroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            if (maxBackgroundColor.length() != 7)\n            {\n                throw new IllegalArgumentException(\n                        \"minBackgroundColor is not 7 bytes long eg a hex \"\n                                + \"RGB value such as #FFFFFF\");\n            }\n            bgRMin = hexToInt(minBackgroundColor.substring(1, 3));\n            bgGMin = hexToInt(minBackgroundColor.substring(3, 5));\n            bgBMin = hexToInt(minBackgroundColor.substring(5, 7));\n\n            bgRMax = hexToInt(maxBackgroundColor.substring(1, 3));\n            bgGMax = hexToInt(maxBackgroundColor.substring(3, 5));\n            bgBMax = hexToInt(maxBackgroundColor.substring(5, 7));\n        }\n        //        this.corpusReader = corpusReader;\n        this.maxScore = maxScore;\n        //        totalNumDocs = corpusReader.numDocs();\n    }\n\n","bugFix":null,"bugIntro":["a5848fb04b09461a04cf32c50f363081ca427939"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"d5a0b529d2a1f873f1f11db833a891b53909a7bc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"35a81445b1abe3f60806325dd678af931b62c2fc":["d5a0b529d2a1f873f1f11db833a891b53909a7bc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["35a81445b1abe3f60806325dd678af931b62c2fc"]},"commit2Childs":{"d5a0b529d2a1f873f1f11db833a891b53909a7bc":["35a81445b1abe3f60806325dd678af931b62c2fc"],"35a81445b1abe3f60806325dd678af931b62c2fc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d5a0b529d2a1f873f1f11db833a891b53909a7bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}