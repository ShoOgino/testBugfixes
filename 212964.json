{"path":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/de/TestGermanAnalyzer#testExclusionTableReuse().mjava","commits":[{"id":"c2877c077c0dc229ee9871dc196b2a62442df599","date":1265411146,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/de/TestGermanAnalyzer#testExclusionTableReuse().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/de/TestGermanStemFilter#testExclusionTableReuse().mjava","sourceNew":"  /* \n   * Test that changes to the exclusion table are applied immediately\n   * when using reusable token streams.\n   */\n  public void testExclusionTableReuse() throws Exception {\n    GermanAnalyzer a = new GermanAnalyzer(Version.LUCENE_CURRENT);\n    checkOneTermReuse(a, \"tischen\", \"tisch\");\n    a.setStemExclusionTable(new String[] { \"tischen\" });\n    checkOneTermReuse(a, \"tischen\", \"tischen\");\n  }\n\n","sourceOld":"  /* \n   * Test that changes to the exclusion table are applied immediately\n   * when using reusable token streams.\n   */\n  public void testExclusionTableReuse() throws Exception {\n    GermanAnalyzer a = new GermanAnalyzer(Version.LUCENE_CURRENT);\n    checkReuse(a, \"tischen\", \"tisch\");\n    a.setStemExclusionTable(new String[] { \"tischen\" });\n    checkReuse(a, \"tischen\", \"tischen\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/de/TestGermanAnalyzer#testExclusionTableReuse().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/de/TestGermanAnalyzer#testExclusionTableReuse().mjava","sourceNew":"  /* \n   * Test that changes to the exclusion table are applied immediately\n   * when using reusable token streams.\n   */\n  public void testExclusionTableReuse() throws Exception {\n    GermanAnalyzer a = new GermanAnalyzer(TEST_VERSION_CURRENT);\n    checkOneTermReuse(a, \"tischen\", \"tisch\");\n    a.setStemExclusionTable(new String[] { \"tischen\" });\n    checkOneTermReuse(a, \"tischen\", \"tischen\");\n  }\n\n","sourceOld":"  /* \n   * Test that changes to the exclusion table are applied immediately\n   * when using reusable token streams.\n   */\n  public void testExclusionTableReuse() throws Exception {\n    GermanAnalyzer a = new GermanAnalyzer(Version.LUCENE_CURRENT);\n    checkOneTermReuse(a, \"tischen\", \"tisch\");\n    a.setStemExclusionTable(new String[] { \"tischen\" });\n    checkOneTermReuse(a, \"tischen\", \"tischen\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/de/TestGermanAnalyzer#testExclusionTableReuse().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/de/TestGermanAnalyzer#testExclusionTableReuse().mjava","sourceNew":"  /* \n   * Test that changes to the exclusion table are applied immediately\n   * when using reusable token streams.\n   */\n  public void testExclusionTableReuse() throws Exception {\n    GermanAnalyzer a = new GermanAnalyzer(TEST_VERSION_CURRENT);\n    checkOneTermReuse(a, \"tischen\", \"tisch\");\n    a.setStemExclusionTable(new String[] { \"tischen\" });\n    checkOneTermReuse(a, \"tischen\", \"tischen\");\n  }\n\n","sourceOld":"  /* \n   * Test that changes to the exclusion table are applied immediately\n   * when using reusable token streams.\n   */\n  public void testExclusionTableReuse() throws Exception {\n    GermanAnalyzer a = new GermanAnalyzer(TEST_VERSION_CURRENT);\n    checkOneTermReuse(a, \"tischen\", \"tisch\");\n    a.setStemExclusionTable(new String[] { \"tischen\" });\n    checkOneTermReuse(a, \"tischen\", \"tischen\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c2877c077c0dc229ee9871dc196b2a62442df599":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["c2877c077c0dc229ee9871dc196b2a62442df599"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"c2877c077c0dc229ee9871dc196b2a62442df599":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c2877c077c0dc229ee9871dc196b2a62442df599"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}