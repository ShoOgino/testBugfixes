{"path":"solr/solrj/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","pathOld":"solr/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","sourceNew":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME(), this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","sourceOld":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME(), this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","pathOld":"solr/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","sourceNew":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME(), this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","sourceOld":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME(), this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","pathOld":"solr/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","sourceNew":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME(), this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","sourceOld":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME(), this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abd55340ba9df8b62edcd692b34e46cf0614a52e","date":1311341057,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","sourceNew":"  public void testResolving() throws Exception {\n    final String testHome = SolrTestCaseJ4.getFile(\"solrj/solr/conf\").getParent();\n    final ResourceLoader loader = new SolrResourceLoader(testHome, this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(testHome+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(testHome+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(testHome+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(testHome+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(testHome+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","sourceOld":"  public void testResolving() throws Exception {\n    final ResourceLoader loader = new SolrResourceLoader(SolrTestCaseJ4.TEST_HOME(), this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(SolrTestCaseJ4.TEST_HOME()+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6a2315ba749856e5787b2ad962fa124bc3ed121","date":1334194349,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/TestSystemIdResolver#testResolving().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/util/TestSystemIdResolver#testResolving().mjava","sourceNew":"  public void testResolving() throws Exception {\n    final String testHome = SolrTestCaseJ4.getFile(\"solr/conf\").getParent();\n    final ResourceLoader loader = new SolrResourceLoader(testHome, this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(testHome+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to InputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/util/RTimer.class\", \"TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(testHome+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(testHome+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(testHome+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(testHome+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","sourceOld":"  public void testResolving() throws Exception {\n    final String testHome = SolrTestCaseJ4.getFile(\"solrj/solr/conf\").getParent();\n    final ResourceLoader loader = new SolrResourceLoader(testHome, this.getClass().getClassLoader());\n    final SystemIdResolver resolver = new SystemIdResolver(loader);\n    final String fileUri = new File(testHome+\"/crazy-path-to-config.xml\").toURI().toASCIIString();\n    \n    assertEquals(\"solrres:/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"test.xml\"));\n    assertEquals(\"solrres://@/usr/local/etc/test.xml\", SystemIdResolver.createSystemIdFromResourceName(\"/usr/local/etc/test.xml\"));\n    assertEquals(\"solrres://@/test.xml\", SystemIdResolver.createSystemIdFromResourceName(File.separatorChar+\"test.xml\"));\n    \n    // check relative URI resolving\n    assertEquals(\"solrres:/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"test.xml\").toASCIIString());\n    assertEquals(\"solrres://@/etc/test.xml\",\n      resolver.resolveRelativeURI(\"solrres://@/usr/local/etc/base.xml\", \"../../../etc/test.xml\").toASCIIString());\n    // special case: if relative URI starts with \"/\" convert to an absolute solrres://@/-URI\n    assertEquals(\"solrres://@/a/test.xml\", resolver.resolveRelativeURI(\"solrres:/base.xml\", \"/a/test.xml\").toASCIIString());\n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, it should be preserved\n    assertEquals(fileUri, resolver.resolveRelativeURI(\"solrres:/base.xml\", fileUri).toASCIIString());\n    assertEquals(\"solrres:/base.xml\", resolver.resolveRelativeURI(fileUri, \"solrres:/base.xml\").toASCIIString());\n    \n    // do some real resolves to I nputStreams with real existing files\n    assertEntityResolving(resolver, \"solrres:/schema.xml\", \"solrres:/solrconfig.xml\", \"schema.xml\");\n    assertEntityResolving(resolver, \"solrres:/org/apache/solr/common/util/TestSystemIdResolver.class\",\n      \"solrres:/org/apache/solr/common/ResourceLoader.class\", \"util/TestSystemIdResolver.class\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(testHome+\"/conf/schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(testHome+\"/conf/solrconfig.xml\"), \"schema.xml\");\n    assertEntityResolving(resolver, SystemIdResolver.createSystemIdFromResourceName(testHome+\"/crazy-path-to-schema.xml\"),\n      SystemIdResolver.createSystemIdFromResourceName(testHome+\"/crazy-path-to-config.xml\"), \"crazy-path-to-schema.xml\");\n    \n    // test, that resolving works if somebody uses an absolute file:-URI in a href attribute, the resolver should return null (default fallback)\n    assertNull(resolver.resolveEntity(null, null, \"solrres:/solrconfig.xml\", fileUri));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e6a2315ba749856e5787b2ad962fa124bc3ed121":["abd55340ba9df8b62edcd692b34e46cf0614a52e"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e6a2315ba749856e5787b2ad962fa124bc3ed121"],"abd55340ba9df8b62edcd692b34e46cf0614a52e":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"e6a2315ba749856e5787b2ad962fa124bc3ed121":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["abd55340ba9df8b62edcd692b34e46cf0614a52e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"abd55340ba9df8b62edcd692b34e46cf0614a52e":["e6a2315ba749856e5787b2ad962fa124bc3ed121"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}