{"path":"solr/core/src/java/org/apache/solr/analysis/SlowSynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String,Map[String,String]).mjava","commits":[{"id":"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c","date":1310389132,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/SlowSynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/SynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String,Map[String,String]).mjava","sourceNew":"  private static TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname, Map<String,String> args){\n    TokenizerFactory tokFactory = (TokenizerFactory)loader.newInstance( cname );\n    tokFactory.init( args );\n    return tokFactory;\n  }\n\n","sourceOld":"  private static TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname, Map<String,String> args){\n    TokenizerFactory tokFactory = (TokenizerFactory)loader.newInstance( cname );\n    tokFactory.init( args );\n    return tokFactory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e0957818c12ea88f8e4941661f0c9a1c5f777687","date":1329785802,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/SlowSynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/SlowSynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String,Map[String,String]).mjava","sourceNew":"  private static TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname, Map<String,String> args){\n    TokenizerFactory tokFactory = (TokenizerFactory)loader.newInstance( cname );\n    tokFactory.init( args );\n    if (tokFactory instanceof ResourceLoaderAware) {\n      ((ResourceLoaderAware) tokFactory).inform(loader);\n    }\n    return tokFactory;\n  }\n\n","sourceOld":"  private static TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname, Map<String,String> args){\n    TokenizerFactory tokFactory = (TokenizerFactory)loader.newInstance( cname );\n    tokFactory.init( args );\n    return tokFactory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/analysis/SlowSynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/SlowSynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String,Map[String,String]).mjava","sourceNew":"  private static TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname, Map<String,String> args){\n    TokenizerFactory tokFactory = (TokenizerFactory)loader.newInstance( cname );\n    tokFactory.init( args );\n    if (tokFactory instanceof ResourceLoaderAware) {\n      ((ResourceLoaderAware) tokFactory).inform(loader);\n    }\n    return tokFactory;\n  }\n\n","sourceOld":"  private static TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname, Map<String,String> args){\n    TokenizerFactory tokFactory = (TokenizerFactory)loader.newInstance( cname );\n    tokFactory.init( args );\n    return tokFactory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41","date":1334628185,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/SlowSynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/SlowSynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String,Map[String,String]).mjava","sourceNew":"  private static TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname, Map<String,String> args){\n    TokenizerFactory tokFactory = loader.newInstance(cname, TokenizerFactory.class);\n    tokFactory.init( args );\n    if (tokFactory instanceof ResourceLoaderAware) {\n      ((ResourceLoaderAware) tokFactory).inform(loader);\n    }\n    return tokFactory;\n  }\n\n","sourceOld":"  private static TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname, Map<String,String> args){\n    TokenizerFactory tokFactory = (TokenizerFactory)loader.newInstance( cname );\n    tokFactory.init( args );\n    if (tokFactory instanceof ResourceLoaderAware) {\n      ((ResourceLoaderAware) tokFactory).inform(loader);\n    }\n    return tokFactory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6d3ad4230a9094e97925f9395cf6db4729284d9","date":1335503918,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/SlowSynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/analysis/SlowSynonymFilterFactory#loadTokenizerFactory(ResourceLoader,String,Map[String,String]).mjava","sourceNew":"  private TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname) {\n    TokenizerFactory tokFactory = loader.newInstance(cname, TokenizerFactory.class);\n    tokFactory.setLuceneMatchVersion(luceneMatchVersion);\n    tokFactory.init( args );\n    if (tokFactory instanceof ResourceLoaderAware) {\n      ((ResourceLoaderAware) tokFactory).inform(loader);\n    }\n    return tokFactory;\n  }\n\n","sourceOld":"  private static TokenizerFactory loadTokenizerFactory(ResourceLoader loader, String cname, Map<String,String> args){\n    TokenizerFactory tokFactory = loader.newInstance(cname, TokenizerFactory.class);\n    tokFactory.init( args );\n    if (tokFactory instanceof ResourceLoaderAware) {\n      ((ResourceLoaderAware) tokFactory).inform(loader);\n    }\n    return tokFactory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e0957818c12ea88f8e4941661f0c9a1c5f777687":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"d6d3ad4230a9094e97925f9395cf6db4729284d9":["a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c","e0957818c12ea88f8e4941661f0c9a1c5f777687"],"a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41":["e0957818c12ea88f8e4941661f0c9a1c5f777687"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d6d3ad4230a9094e97925f9395cf6db4729284d9"]},"commit2Childs":{"e0957818c12ea88f8e4941661f0c9a1c5f777687":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41"],"d6d3ad4230a9094e97925f9395cf6db4729284d9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"a7ebf3a5f9e588d0bb564ac30d6dc32056ce9a41":["d6d3ad4230a9094e97925f9395cf6db4729284d9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["44d6f0ab53c1962856b9f48dedb7a2a6cc18905c"],"44d6f0ab53c1962856b9f48dedb7a2a6cc18905c":["e0957818c12ea88f8e4941661f0c9a1c5f777687","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}